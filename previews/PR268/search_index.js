var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntarget_walkers = 100;\ntime_step = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"problem = ProjectorMonteCarloProblem(H;\n    style=IsDynamicSemistochastic(),\n    time_step,\n    last_step = steps_equilibrate + steps_measure,\n    target_walkers,\n    replica_strategy,\n)\nresult = solve(problem)\ndf = DataFrame(result);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ¬± $(r.œÉ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.21338549267511295 ¬± 0.001153711212964439\n   G2(1) = 0.9162257874041803 ¬± 0.0006349416065324151\n   G2(2) = 0.9814834870350483 ¬± 0.0006754951053872439\n   G2(3) = 0.9911959584464303 ¬± 0.0010814256912831596\n   G2(4) = 0.9814834870350483 ¬± 0.0006754951053872439\n   G2(5) = 0.9162257874041803 ¬± 0.0006349416065324151\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ¬± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -4.046720949289629 ¬± 0.14393584994748282\n   Replica 2: -4.041384536631139 ¬± 0.1500689677735612\n   Replica 3: -4.078830382861243 ¬± 0.130638595831415\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"target_walkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1‚ü©\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1‚ü©\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0‚ü©\"=>-14.1421, fs\"|0 2 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 1 0 2‚ü©\"=>-14.1421, fs\"|1 2 0 1 1 1‚ü©\"=>-14.1421, fs\"|2 0 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 2 0 1‚ü©\"=>-14.1421, fs\"|1 1 2 0 1 1‚ü©\"=>-14.1421, fs\"|1 1 0 2 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 0 2 1‚ü©\"=>-14.1421, fs\"|1 0 2 1 1 1‚ü©\"=>-14.1421, fs\"|2 1 1 1 1 0‚ü©\"=>-14.1421, fs\"|0 1 1 1 1 2‚ü©\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    target_walkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [target_walkers];\n    label=\"target_walkers\", xlabel=\"step\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.step, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip030\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip030)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip031\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip030)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip032\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1266.04 1391.71 L1266.04 1397.25 Q1263.56 1395.98 1260.88 1395.34 Q1258.21 1394.71 1255.34 1394.71 Q1250.98 1394.71 1248.79 1396.04 Q1246.62 1397.38 1246.62 1400.05 Q1246.62 1402.09 1248.18 1403.27 Q1249.74 1404.41 1254.45 1405.46 L1256.46 1405.91 Q1262.7 1407.25 1265.31 1409.7 Q1267.95 1412.12 1267.95 1416.48 Q1267.95 1421.44 1264 1424.34 Q1260.09 1427.23 1253.21 1427.23 Q1250.35 1427.23 1247.23 1426.66 Q1244.14 1426.12 1240.7 1425.01 L1240.7 1418.96 Q1243.95 1420.65 1247.1 1421.51 Q1250.25 1422.33 1253.34 1422.33 Q1257.48 1422.33 1259.7 1420.93 Q1261.93 1419.5 1261.93 1416.92 Q1261.93 1414.54 1260.31 1413.26 Q1258.72 1411.99 1253.27 1410.81 L1251.24 1410.33 Q1245.79 1409.19 1243.38 1406.83 Q1240.96 1404.45 1240.96 1400.31 Q1240.96 1395.28 1244.52 1392.54 Q1248.09 1389.8 1254.64 1389.8 Q1257.89 1389.8 1260.75 1390.28 Q1263.62 1390.76 1266.04 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1283.07 1380.54 L1283.07 1390.66 L1295.13 1390.66 L1295.13 1395.22 L1283.07 1395.22 L1283.07 1414.57 Q1283.07 1418.93 1284.24 1420.17 Q1285.45 1421.41 1289.11 1421.41 L1295.13 1421.41 L1295.13 1426.31 L1289.11 1426.31 Q1282.33 1426.31 1279.76 1423.8 Q1277.18 1421.25 1277.18 1414.57 L1277.18 1395.22 L1272.88 1395.22 L1272.88 1390.66 L1277.18 1390.66 L1277.18 1380.54 L1283.07 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1333.32 1407.02 L1333.32 1409.89 L1306.4 1409.89 Q1306.78 1415.94 1310.02 1419.12 Q1313.3 1422.27 1319.13 1422.27 Q1322.5 1422.27 1325.65 1421.44 Q1328.84 1420.61 1331.95 1418.96 L1331.95 1424.5 Q1328.8 1425.83 1325.49 1426.53 Q1322.18 1427.23 1318.78 1427.23 Q1310.25 1427.23 1305.25 1422.27 Q1300.29 1417.3 1300.29 1408.84 Q1300.29 1400.08 1305 1394.96 Q1309.74 1389.8 1317.76 1389.8 Q1324.95 1389.8 1329.12 1394.45 Q1333.32 1399.07 1333.32 1407.02 M1327.47 1405.3 Q1327.4 1400.5 1324.76 1397.63 Q1322.15 1394.77 1317.82 1394.77 Q1312.92 1394.77 1309.96 1397.54 Q1307.03 1400.31 1306.59 1405.34 L1327.47 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1348.6 1420.96 L1348.6 1439.87 L1342.71 1439.87 L1342.71 1390.66 L1348.6 1390.66 L1348.6 1396.07 Q1350.45 1392.89 1353.25 1391.36 Q1356.08 1389.8 1360 1389.8 Q1366.49 1389.8 1370.53 1394.96 Q1374.6 1400.12 1374.6 1408.52 Q1374.6 1416.92 1370.53 1422.08 Q1366.49 1427.23 1360 1427.23 Q1356.08 1427.23 1353.25 1425.71 Q1350.45 1424.15 1348.6 1420.96 M1368.53 1408.52 Q1368.53 1402.06 1365.85 1398.4 Q1363.21 1394.71 1358.56 1394.71 Q1353.92 1394.71 1351.24 1398.4 Q1348.6 1402.06 1348.6 1408.52 Q1348.6 1414.98 1351.24 1418.67 Q1353.92 1422.33 1358.56 1422.33 Q1363.21 1422.33 1365.85 1418.67 Q1368.53 1414.98 1368.53 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1261.88 2211.02,1261.88 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.86 2211.02,1003.86 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.846 2211.02,745.846 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.829 2211.02,487.829 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,229.812 2211.02,229.812 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1261.88 423.181,1261.88 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.86 423.181,1003.86 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.846 423.181,745.846 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.829 423.181,487.829 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,229.812 423.181,229.812 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M356.339 1247.68 Q352.728 1247.68 350.899 1251.24 Q349.094 1254.79 349.094 1261.92 Q349.094 1269.02 350.899 1272.59 Q352.728 1276.13 356.339 1276.13 Q359.973 1276.13 361.779 1272.59 Q363.608 1269.02 363.608 1261.92 Q363.608 1254.79 361.779 1251.24 Q359.973 1247.68 356.339 1247.68 M356.339 1243.98 Q362.149 1243.98 365.205 1248.58 Q368.284 1253.17 368.284 1261.92 Q368.284 1270.64 365.205 1275.25 Q362.149 1279.83 356.339 1279.83 Q350.529 1279.83 347.45 1275.25 Q344.395 1270.64 344.395 1261.92 Q344.395 1253.17 347.45 1248.58 Q350.529 1243.98 356.339 1243.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M290.043 1017.21 L306.363 1017.21 L306.363 1021.14 L284.418 1021.14 L284.418 1017.21 Q287.08 1014.45 291.664 1009.82 Q296.27 1005.17 297.451 1003.83 Q299.696 1001.31 300.576 999.57 Q301.478 997.811 301.478 996.121 Q301.478 993.366 299.534 991.63 Q297.613 989.894 294.511 989.894 Q292.312 989.894 289.858 990.658 Q287.427 991.422 284.65 992.973 L284.65 988.251 Q287.474 987.116 289.927 986.538 Q292.381 985.959 294.418 985.959 Q299.789 985.959 302.983 988.644 Q306.177 991.329 306.177 995.82 Q306.177 997.95 305.367 999.871 Q304.58 1001.77 302.474 1004.36 Q301.895 1005.03 298.793 1008.25 Q295.691 1011.44 290.043 1017.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M316.224 986.584 L334.58 986.584 L334.58 990.519 L320.506 990.519 L320.506 998.991 Q321.524 998.644 322.543 998.482 Q323.562 998.297 324.58 998.297 Q330.367 998.297 333.747 1001.47 Q337.126 1004.64 337.126 1010.06 Q337.126 1015.63 333.654 1018.74 Q330.182 1021.82 323.862 1021.82 Q321.687 1021.82 319.418 1021.44 Q317.173 1021.07 314.765 1020.33 L314.765 1015.63 Q316.849 1016.77 319.071 1017.32 Q321.293 1017.88 323.77 1017.88 Q327.774 1017.88 330.112 1015.77 Q332.45 1013.67 332.45 1010.06 Q332.45 1006.44 330.112 1004.34 Q327.774 1002.23 323.77 1002.23 Q321.895 1002.23 320.02 1002.65 Q318.168 1003.07 316.224 1003.94 L316.224 986.584 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 989.663 Q352.728 989.663 350.899 993.227 Q349.094 996.769 349.094 1003.9 Q349.094 1011.01 350.899 1014.57 Q352.728 1018.11 356.339 1018.11 Q359.973 1018.11 361.779 1014.57 Q363.608 1011.01 363.608 1003.9 Q363.608 996.769 361.779 993.227 Q359.973 989.663 356.339 989.663 M356.339 985.959 Q362.149 985.959 365.205 990.565 Q368.284 995.149 368.284 1003.9 Q368.284 1012.63 365.205 1017.23 Q362.149 1021.82 356.339 1021.82 Q350.529 1021.82 347.45 1017.23 Q344.395 1012.63 344.395 1003.9 Q344.395 995.149 347.45 990.565 Q350.529 985.959 356.339 985.959 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M286.062 728.566 L304.418 728.566 L304.418 732.502 L290.344 732.502 L290.344 740.974 Q291.363 740.627 292.381 740.465 Q293.4 740.279 294.418 740.279 Q300.205 740.279 303.585 743.451 Q306.964 746.622 306.964 752.039 Q306.964 757.617 303.492 760.719 Q300.02 763.798 293.701 763.798 Q291.525 763.798 289.256 763.427 Q287.011 763.057 284.603 762.316 L284.603 757.617 Q286.687 758.751 288.909 759.307 Q291.131 759.863 293.608 759.863 Q297.613 759.863 299.951 757.756 Q302.288 755.65 302.288 752.039 Q302.288 748.427 299.951 746.321 Q297.613 744.214 293.608 744.214 Q291.733 744.214 289.858 744.631 Q288.006 745.048 286.062 745.927 L286.062 728.566 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M326.177 731.645 Q322.566 731.645 320.737 735.21 Q318.932 738.752 318.932 745.881 Q318.932 752.988 320.737 756.552 Q322.566 760.094 326.177 760.094 Q329.811 760.094 331.617 756.552 Q333.446 752.988 333.446 745.881 Q333.446 738.752 331.617 735.21 Q329.811 731.645 326.177 731.645 M326.177 727.941 Q331.987 727.941 335.043 732.548 Q338.122 737.131 338.122 745.881 Q338.122 754.608 335.043 759.214 Q331.987 763.798 326.177 763.798 Q320.367 763.798 317.288 759.214 Q314.233 754.608 314.233 745.881 Q314.233 737.131 317.288 732.548 Q320.367 727.941 326.177 727.941 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 731.645 Q352.728 731.645 350.899 735.21 Q349.094 738.752 349.094 745.881 Q349.094 752.988 350.899 756.552 Q352.728 760.094 356.339 760.094 Q359.973 760.094 361.779 756.552 Q363.608 752.988 363.608 745.881 Q363.608 738.752 361.779 735.21 Q359.973 731.645 356.339 731.645 M356.339 727.941 Q362.149 727.941 365.205 732.548 Q368.284 737.131 368.284 745.881 Q368.284 754.608 365.205 759.214 Q362.149 763.798 356.339 763.798 Q350.529 763.798 347.45 759.214 Q344.395 754.608 344.395 745.881 Q344.395 737.131 347.45 732.548 Q350.529 727.941 356.339 727.941 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M284.835 470.549 L307.057 470.549 L307.057 472.54 L294.511 505.109 L289.627 505.109 L301.432 474.484 L284.835 474.484 L284.835 470.549 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M316.224 470.549 L334.58 470.549 L334.58 474.484 L320.506 474.484 L320.506 482.956 Q321.524 482.609 322.543 482.447 Q323.562 482.262 324.58 482.262 Q330.367 482.262 333.747 485.433 Q337.126 488.604 337.126 494.021 Q337.126 499.6 333.654 502.702 Q330.182 505.78 323.862 505.78 Q321.687 505.78 319.418 505.41 Q317.173 505.04 314.765 504.299 L314.765 499.6 Q316.849 500.734 319.071 501.29 Q321.293 501.845 323.77 501.845 Q327.774 501.845 330.112 499.739 Q332.45 497.632 332.45 494.021 Q332.45 490.41 330.112 488.304 Q327.774 486.197 323.77 486.197 Q321.895 486.197 320.02 486.614 Q318.168 487.03 316.224 487.91 L316.224 470.549 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 473.628 Q352.728 473.628 350.899 477.192 Q349.094 480.734 349.094 487.864 Q349.094 494.97 350.899 498.535 Q352.728 502.077 356.339 502.077 Q359.973 502.077 361.779 498.535 Q363.608 494.97 363.608 487.864 Q363.608 480.734 361.779 477.192 Q359.973 473.628 356.339 473.628 M356.339 469.924 Q362.149 469.924 365.205 474.53 Q368.284 479.114 368.284 487.864 Q368.284 496.59 365.205 501.197 Q362.149 505.78 356.339 505.78 Q350.529 505.78 347.45 501.197 Q344.395 496.59 344.395 487.864 Q344.395 479.114 347.45 474.53 Q350.529 469.924 356.339 469.924 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M256.664 243.156 L264.303 243.156 L264.303 216.791 L255.992 218.457 L255.992 214.198 L264.256 212.532 L268.932 212.532 L268.932 243.156 L276.571 243.156 L276.571 247.092 L256.664 247.092 L256.664 243.156 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M296.015 215.61 Q292.404 215.61 290.576 219.175 Q288.77 222.717 288.77 229.846 Q288.77 236.953 290.576 240.517 Q292.404 244.059 296.015 244.059 Q299.65 244.059 301.455 240.517 Q303.284 236.953 303.284 229.846 Q303.284 222.717 301.455 219.175 Q299.65 215.61 296.015 215.61 M296.015 211.907 Q301.826 211.907 304.881 216.513 Q307.96 221.096 307.96 229.846 Q307.96 238.573 304.881 243.179 Q301.826 247.763 296.015 247.763 Q290.205 247.763 287.127 243.179 Q284.071 238.573 284.071 229.846 Q284.071 221.096 287.127 216.513 Q290.205 211.907 296.015 211.907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M326.177 215.61 Q322.566 215.61 320.737 219.175 Q318.932 222.717 318.932 229.846 Q318.932 236.953 320.737 240.517 Q322.566 244.059 326.177 244.059 Q329.811 244.059 331.617 240.517 Q333.446 236.953 333.446 229.846 Q333.446 222.717 331.617 219.175 Q329.811 215.61 326.177 215.61 M326.177 211.907 Q331.987 211.907 335.043 216.513 Q338.122 221.096 338.122 229.846 Q338.122 238.573 335.043 243.179 Q331.987 247.763 326.177 247.763 Q320.367 247.763 317.288 243.179 Q314.233 238.573 314.233 229.846 Q314.233 221.096 317.288 216.513 Q320.367 211.907 326.177 211.907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 215.61 Q352.728 215.61 350.899 219.175 Q349.094 222.717 349.094 229.846 Q349.094 236.953 350.899 240.517 Q352.728 244.059 356.339 244.059 Q359.973 244.059 361.779 240.517 Q363.608 236.953 363.608 229.846 Q363.608 222.717 361.779 219.175 Q359.973 215.61 356.339 215.61 M356.339 211.907 Q362.149 211.907 365.205 216.513 Q368.284 221.096 368.284 229.846 Q368.284 238.573 365.205 243.179 Q362.149 247.763 356.339 247.763 Q350.529 247.763 347.45 243.179 Q344.395 238.573 344.395 229.846 Q344.395 221.096 347.45 216.513 Q350.529 211.907 356.339 211.907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip032)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,229.812 4017.76,229.812 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.5 456.554,1250.44 457.123,1250.27 457.691,1250.02 458.259,1249.71 458.828,1249.32 459.396,1248.89 459.964,1248.38 460.533,1247.76 461.101,1247.1 461.669,1246.35 462.238,1243.47 462.806,1242.61 463.375,1241.66 463.943,1240.61 464.511,1238.43 465.08,1236.13 465.648,1234.77 466.216,1233.28 466.785,1231.68 467.353,1229.96 467.921,1228.13 468.49,1226.15 469.058,1224.03 469.626,1220.73 470.195,1218.28 470.763,1215.68 471.331,1212.92 471.9,1209.95 472.468,1205.76 473.036,1202.42 473.605,1197.85 474.173,1194.12 474.741,1190.21 475.31,1186.05 475.878,1181.69 476.446,1177.13 477.015,1172.37 477.583,1166.34 478.152,1159.12 478.72,1153.71 479.288,1142.92 479.857,1137.07 480.425,1130.01 480.993,1121.51 481.562,1114.92 482.13,1108.11 482.698,1100.08 483.267,1091.78 483.835,1083.48 484.403,1075.88 484.972,1067.07 485.54,1057.15 486.108,1048.14 486.677,1038.95 487.245,1027.6 487.813,1019.33 488.382,1010.91 488.95,1001.36 489.518,991.662 490.087,980.801 490.655,971.772 491.224,959.547 491.792,948.436 492.36,939.1 492.929,929.804 493.497,918.313 494.065,906.592 494.634,895.051 495.202,882.562 495.77,872.222 496.339,861.96 496.907,851.448 497.475,842.049 498.044,832.566 498.612,823.093 499.18,810.399 499.749,798.983 500.317,787.769 500.885,777.637 501.454,767.549 502.022,758.476 502.59,746.369 503.159,735.425 503.727,723.477 504.295,713.831 504.864,704.236 505.432,695.776 506.001,686.202 506.569,676.824 507.137,667.306 507.706,656.033 508.274,642.801 508.842,633.952 509.411,624.299 509.979,613.722 510.547,604.473 511.116,596.442 511.684,587.452 512.252,579.649 512.821,571.98 513.389,563.334 513.957,555.828 514.526,547.498 515.094,541.268 515.662,531.932 516.231,525.103 516.799,515.111 517.367,503.531 517.936,497.561 518.504,490.731 519.072,484.04 519.641,479.583 520.209,474.144 520.778,469.599 521.346,466.155 521.914,459.423 522.483,452.121 523.051,447.017 523.619,442.045 524.188,438.32 524.756,434.458 525.324,428.513 525.893,423.754 526.461,420.202 527.029,418.762 527.598,414.149 528.166,411.64 528.734,405.835 529.303,399.378 529.871,397.033 530.439,390.507 531.008,388.538 531.576,383.287 532.144,381.223 532.713,378.254 533.281,373.109 533.85,368.237 534.418,364.496 534.986,357.901 535.555,355.903 536.123,353.761 536.691,351.528 537.26,349.208 537.828,347.131 538.396,342.98 538.965,340.792 539.533,337.792 540.101,333.991 540.67,330.323 541.238,328.679 541.806,326.083 542.375,325.576 542.943,320.872 543.511,318.347 544.08,317.134 544.648,313.759 545.216,312.437 545.785,310.195 546.353,308.121 546.921,306.028 547.49,304.004 548.058,301.246 548.627,300.318 549.195,299.497 549.763,296.409 550.332,293.547 550.9,292.971 551.468,292.386 552.037,290.533 552.605,289.935 553.173,290.569 553.742,288.76 554.31,287.989 554.878,287.278 555.447,284.535 556.015,284.088 556.583,283.499 557.152,282.855 557.72,281 558.288,281.614 558.857,282.144 559.425,283.262 559.993,282.431 560.562,281.609 561.13,280.877 561.698,278.801 562.267,278.006 562.835,277.202 563.404,277.26 563.972,276.378 564.54,275.627 565.109,272.547 565.677,271.651 566.245,267.064 566.814,265.782 567.382,266.476 567.95,267.062 568.519,268.623 569.087,267.091 569.655,265.664 570.224,262.092 570.792,260.69 571.36,260.593 571.929,259.033 572.497,258.894 573.065,258.71 573.634,257.627 574.202,254.246 574.77,254.261 575.339,253.097 575.907,253.204 576.476,254.449 577.044,252.5 577.612,252.723 578.181,252.676 578.749,250.752 579.317,249.894 579.886,248.97 580.454,247.326 581.022,245.773 581.591,246.551 582.159,248.053 582.727,248.235 583.296,248.478 583.864,247.813 584.432,248.182 585.001,249.443 585.569,250.49 586.137,250.598 586.706,250.935 587.274,253.048 587.842,253.65 588.411,253.184 588.979,250.958 589.547,251.783 590.116,251.322 590.684,250.222 591.253,250.164 591.821,247.852 592.389,245.664 592.958,243.734 593.526,245.432 594.094,246.611 594.663,244.543 595.231,244.685 595.799,242.603 596.368,242.92 596.936,242.965 597.504,243.114 598.073,243.243 598.641,243.43 599.209,241.652 599.778,239.986 600.346,240.154 600.914,239.279 601.483,240.833 602.051,242.133 602.619,241.212 603.188,241.506 603.756,241.779 604.325,241.901 604.893,241.959 605.461,242.107 606.03,240.16 606.598,242.463 607.166,243.487 607.735,245.51 608.303,243.422 608.871,242.334 609.44,243.474 610.008,243.476 610.576,243.343 611.145,242.327 611.713,241.315 612.281,242.513 612.85,240.552 613.418,242.925 613.986,240.74 614.555,239.853 615.123,239.751 615.691,239.932 616.26,239.005 616.828,238.956 617.396,236.847 617.965,237.264 618.533,237.596 619.102,238.868 619.67,236.927 620.238,236.202 620.807,235.467 621.375,236.843 621.943,234.97 622.512,233.265 623.08,233.737 623.648,236.313 624.217,237.816 624.785,238.075 625.353,240.315 625.922,240.319 626.49,239.274 627.058,241.288 627.627,241.21 628.195,242.073 628.763,243.11 629.332,241.787 629.9,243.755 630.468,243.222 631.037,241.976 631.605,241.723 632.173,241.649 632.742,241.385 633.31,241.243 633.879,240.153 634.447,240.098 635.015,239.939 635.584,239.786 636.152,240.731 636.72,238.485 637.289,238.611 637.857,236.315 638.425,234.482 638.994,234.665 639.562,231.675 640.13,233.279 640.699,233.531 641.267,233.686 641.835,233.948 642.404,233.945 642.972,234.312 643.54,233.453 644.109,231.674 644.677,231.289 645.245,232.886 645.814,232.367 646.382,233.809 646.951,231.759 647.519,233.236 648.087,234.702 648.656,233.784 649.224,230.968 649.792,231.277 650.361,231.596 650.929,231.052 651.497,230.446 652.066,229.802 652.634,231.504 653.202,232.901 653.771,234.038 654.339,236.183 654.907,234.183 655.476,232.344 656.044,233.704 656.612,235.086 657.181,235.137 657.749,234.284 658.317,234.545 658.886,233.632 659.454,233.981 660.022,233.363 660.591,234.795 661.159,235.909 661.728,235.971 662.296,232.937 662.864,232.938 663.433,231 664.001,234.685 664.569,235.765 665.138,237.04 665.706,236.813 666.274,234.763 666.843,233.859 667.411,235.195 667.979,234.31 668.548,233.314 669.116,232.616 669.684,233.977 670.253,235.282 670.821,235.314 671.389,237.594 671.958,237.466 672.526,236.215 673.094,236.053 673.663,238.097 674.231,236.783 674.799,235.693 675.368,233.671 675.936,233.045 676.505,233.229 677.073,232.377 677.641,232.605 678.21,233.644 678.778,233.841 679.346,234.85 679.915,234.908 680.483,236.047 681.051,236.135 681.62,234.2 682.188,235.24 682.756,238.215 683.325,238.133 683.893,237.976 684.461,238.747 685.03,239.485 685.598,237.889 686.166,237.499 686.735,235.274 687.303,236.317 687.871,237.369 688.44,238.356 689.008,239.096 689.577,238.626 690.145,236.31 690.713,236.28 691.282,236.351 691.85,236.416 692.418,236.059 692.987,237.897 693.555,237.463 694.123,236.207 694.692,234.724 695.26,234.691 695.828,235.711 696.397,235.456 696.965,235.338 697.533,234.171 698.102,234.315 698.67,234.186 699.238,234.218 699.807,235.284 700.375,235.189 700.943,235.999 701.512,234.817 702.08,232.571 702.648,233.517 703.217,231.189 703.785,230.392 704.354,231.765 704.922,232.701 705.49,233.845 706.059,232.628 706.627,233.613 707.195,233.433 707.764,230.251 708.332,229.489 708.9,228.676 709.469,230.979 710.037,231.99 710.605,232.008 711.174,234.052 711.742,234.888 712.31,234.552 712.879,235.503 713.447,235.159 714.015,231.959 714.584,231.905 715.152,230.956 715.72,231.013 716.289,230.047 716.857,230.258 717.425,229.184 717.994,226.298 718.562,226.512 719.131,225.701 719.699,226.265 720.267,226.824 720.836,228.584 721.404,228.997 721.972,229.276 722.541,228.397 723.109,227.744 723.677,230.269 724.246,231.608 724.814,230.443 725.382,230.805 725.951,229.939 726.519,229.176 727.087,230.614 727.656,229.883 728.224,229.147 728.792,230.36 729.361,228.523 729.929,228.618 730.497,228.832 731.066,227.951 731.634,226.03 732.203,228.424 732.771,228.769 733.339,229.004 733.908,230.644 734.476,231.686 735.044,231.87 735.613,231.054 736.181,233.307 736.749,234.078 737.318,233.807 737.886,231.335 738.454,233.411 739.023,234.321 739.591,234.088 740.159,233.966 740.728,234.951 741.296,236.738 741.864,236.249 742.433,236.832 743.001,238.436 743.569,241.083 744.138,240.569 744.706,238.986 745.274,238.223 745.843,236.736 746.411,237.234 746.98,238.034 747.548,238.676 748.116,237.093 748.685,234.581 749.253,234.196 749.821,232.989 750.39,232.917 750.958,233.837 751.526,234.598 752.095,234.522 752.663,231.432 753.231,230.544 753.8,230.533 754.368,230.357 754.936,229.403 755.505,227.584 756.073,226.649 756.641,226.931 757.21,224.147 757.778,224.501 758.346,227.064 758.915,228.553 759.483,227.765 760.052,226.946 760.62,229.353 761.188,227.386 761.757,228.655 762.325,226.93 762.893,228.548 763.462,227.744 764.03,228.983 764.598,230.204 765.167,233.422 765.735,233.439 766.303,233.399 766.872,232.04 767.44,233.04 768.008,230.823 768.577,230.95 769.145,230.841 769.713,229.901 770.282,232.019 770.85,231.032 771.418,231.16 771.987,230.112 772.555,232.271 773.123,232.174 773.692,232.049 774.26,232.267 774.829,232.148 775.397,231.986 775.965,232.038 776.534,230.822 777.102,231.918 777.67,231.839 778.239,230.99 778.807,228.885 779.375,228.114 779.944,227.099 780.512,227.585 781.08,225.786 781.649,226.959 782.217,227.277 782.785,227.738 783.354,226.947 783.922,227.146 784.49,227.298 785.059,226.608 785.627,226.99 786.195,227.466 786.764,226.737 787.332,228.166 787.9,230.595 788.469,231.702 789.037,230.74 789.606,229.932 790.174,233.186 790.742,232.023 791.311,235.289 791.879,234.172 792.447,233.836 793.016,233.711 793.584,232.494 794.152,232.534 794.721,232.7 795.289,233.602 795.857,234.662 796.426,236.451 796.994,234.031 797.562,233.681 798.131,233.495 798.699,233.35 799.267,235.38 799.836,233.064 800.404,230.889 800.972,230.997 801.541,230.136 802.109,226.956 802.678,227.207 803.246,227.478 803.814,226.766 804.383,227.074 804.951,226.491 805.519,228.033 806.088,228.271 806.656,227.455 807.224,225.656 807.793,226.08 808.361,226.43 808.929,226.802 809.498,228.286 810.066,228.386 810.634,227.752 811.203,228.18 811.771,231.29 812.339,232.565 812.908,231.453 813.476,231.581 814.044,229.484 814.613,229.667 815.181,228.767 815.749,228.978 816.318,231.325 816.886,231.233 817.455,229.164 818.023,229.398 818.591,227.483 819.16,227.93 819.728,229.527 820.296,229.665 820.865,230.959 821.433,230.093 822.001,230.323 822.57,230.545 823.138,231.537 823.706,233.586 824.275,233.536 824.843,234.352 825.411,232.054 825.98,235.044 826.548,233.882 827.116,233.535 827.685,233.386 828.253,234.295 828.821,234.189 829.39,232.982 829.958,232.893 830.526,234.744 831.095,234.442 831.663,234.168 832.232,232.817 832.8,233.501 833.368,232.997 833.937,233.906 834.505,233.573 835.073,235.411 835.642,235.044 836.21,234.603 836.778,235.307 837.347,236.046 837.915,234.615 838.483,234.37 839.052,232.901 839.62,232.626 840.188,232.39 840.757,232.131 841.325,229.896 841.893,232.21 842.462,232.091 843.03,231.964 843.598,231.677 844.167,231.685 844.735,230.272 845.304,230.196 845.872,229.151 846.44,227.956 847.009,228.273 847.577,229.519 848.145,228.591 848.714,229.71 849.282,228.797 849.85,227.892 850.419,229.116 850.987,228.187 851.555,226.219 852.124,227.521 852.692,226.943 853.26,227.252 853.829,228.506 854.397,230.926 854.965,230.741 855.534,228.612 856.102,226.708 856.67,227.318 857.239,227.541 857.807,227.754 858.375,230.008 858.944,230.153 859.512,229.125 860.081,229.221 860.649,229.427 861.217,226.323 861.786,228.632 862.354,228.817 862.922,226.852 863.491,225.061 864.059,223.584 864.627,224.274 865.196,225 865.764,224.497 866.332,226.162 866.901,227.44 867.469,226.825 868.037,226.95 868.606,227.263 869.174,227.546 869.742,227.899 870.311,228.242 870.879,230.778 871.447,230.8 872.016,233.042 872.584,234.877 873.152,235.641 873.721,236.394 874.289,236.117 874.858,234.911 875.426,235.565 875.994,235.33 876.563,235.857 877.131,235.506 877.699,235.297 878.268,234.729 878.836,235.499 879.404,230.969 879.973,229.089 880.541,228.092 881.109,228.157 881.678,227.107 882.246,225.464 882.814,224.769 883.383,226.18 883.951,226.625 884.519,226.047 885.088,224.402 885.656,224.894 886.224,223.249 886.793,224.968 887.361,226.67 887.93,227.041 888.498,227.402 889.066,230.676 889.635,229.836 890.203,228.848 890.771,228.062 891.34,228.3 891.908,229.704 892.476,230.84 893.045,227.728 893.613,227.064 894.181,230.471 894.75,231.624 895.318,232.894 895.886,232.962 896.455,233.96 897.023,232.951 897.591,233.137 898.16,233.891 898.728,233.66 899.296,233.377 899.865,231.196 900.433,230.153 901.001,230.195 901.57,229.465 902.138,227.482 902.707,223.809 903.275,225.328 903.843,226.738 904.412,232.089 904.98,231.999 905.548,230.963 906.117,231.042 906.685,232.108 907.253,230.038 907.822,230.061 908.39,231.162 908.958,231.947 909.527,234.142 910.095,232.593 910.663,229.462 911.232,228.718 911.8,228.031 912.368,228.413 912.937,230.923 913.505,230.991 914.073,232.066 914.642,232.061 915.21,233.981 915.779,232.839 916.347,231.807 916.915,226.626 917.484,229.116 918.052,230.405 918.62,227.523 919.189,229.859 919.757,227.054 920.325,224.305 920.894,225.964 921.462,228.406 922.03,228.774 922.599,229.031 923.167,229.223 923.735,229.441 924.304,228.383 924.872,231.967 925.44,233.116 926.009,232.971 926.577,230.897 927.145,230.944 927.714,232.927 928.282,231.931 928.85,231.822 929.419,233.608 929.987,233.493 930.556,232.47 931.124,233.484 931.692,232.479 932.261,234.449 932.829,234.359 933.397,234.064 933.966,233.894 934.534,231.759 935.102,231.624 935.671,231.756 936.239,231.701 936.807,229.593 937.376,231.505 937.944,231.459 938.512,231.377 939.081,231.407 939.649,231.473 940.217,231.557 940.786,232.688 941.354,229.563 941.922,229.536 942.491,228.592 943.059,229.675 943.627,228.685 944.196,230.871 944.764,230.92 945.333,230.107 945.901,229.184 946.469,230.316 947.038,233.514 947.606,234.246 948.174,232.909 948.743,231.586 949.311,231.593 949.879,232.465 950.448,231.317 951.016,232.231 951.584,232.032 952.153,230.83 952.721,231.043 953.289,233.011 953.858,233.8 954.426,234.527 954.994,236.069 955.563,235.791 956.131,233.312 956.699,232.912 957.268,235.618 957.836,233.176 958.405,232.779 958.973,233.499 959.541,232.119 960.11,232.867 960.678,231.472 961.246,234.428 961.815,231.984 962.383,229.904 962.951,230.795 963.52,231.749 964.088,231.761 964.656,232.758 965.225,232.721 965.793,229.429 966.361,226.439 966.93,228.611 967.498,229.622 968.066,228.502 968.635,231.699 969.203,232.511 969.771,233.311 970.34,233.195 970.908,231.88 971.476,232.774 972.045,233.597 972.613,233.35 973.182,230.968 973.75,229.657 974.318,228.87 974.887,229.013 975.455,228.152 976.023,227.233 976.592,230.289 977.16,228.167 977.728,228.438 978.297,229.621 978.865,230.524 979.433,229.198 980.002,228.279 980.57,228.423 981.138,229.533 981.707,227.545 982.275,227.87 982.843,226.038 983.412,226.074 983.98,226.24 984.548,226.491 985.117,226.696 985.685,226.187 986.253,223.458 986.822,222.774 987.39,225.123 987.959,225.472 988.527,224.834 989.095,224.172 989.664,223.771 990.232,224.545 990.8,226.085 991.369,225.277 991.937,225.913 992.505,227.278 993.074,228.821 993.642,232.128 994.21,233.155 994.779,231.989 995.347,231.076 995.915,230.064 996.484,231.185 997.052,232.079 997.62,230.879 998.189,231.899 998.757,232.775 999.325,231.742 999.894,230.714 1000.46,229.91 1001.03,230.747 1001.6,231.758 1002.17,227.748 1002.74,228.788 1003.3,228.023 1003.87,229.026 1004.44,230.381 1005.01,228.24 1005.58,227.204 1006.15,227.63 1006.71,229.139 1007.28,228.389 1007.85,227.458 1008.42,227.937 1008.99,230.45 1009.56,231.367 1010.12,233.488 1010.69,235.226 1011.26,234.915 1011.83,230.461 1012.4,230.326 1012.97,231.395 1013.53,233.408 1014.1,234.31 1014.67,233.063 1015.24,235.08 1015.81,234.842 1016.38,233.63 1016.94,234.362 1017.51,232.144 1018.08,232.149 1018.65,234.055 1019.22,234.868 1019.79,233.386 1020.35,234.214 1020.92,231.581 1021.49,232.882 1022.06,233.676 1022.63,233.493 1023.2,234.196 1023.76,232.669 1024.33,233.427 1024.9,235.005 1025.47,234.547 1026.04,233.167 1026.61,233.903 1027.17,234.515 1027.74,237.209 1028.31,235.828 1028.88,233.154 1029.45,231.864 1030.02,229.404 1030.58,229.412 1031.15,231.309 1031.72,231.177 1032.29,232.146 1032.86,232.849 1033.43,233.557 1033.99,233.069 1034.56,231.836 1035.13,232.452 1035.7,232.239 1036.27,230.82 1036.84,231.021 1037.4,231.05 1037.97,230.855 1038.54,231.871 1039.11,230.63 1039.68,231.454 1040.25,230.229 1040.81,229.139 1041.38,229.991 1041.95,229.846 1042.52,229.53 1043.09,229.455 1043.66,229.358 1044.22,229.546 1044.79,230.359 1045.36,231.157 1045.93,230.944 1046.5,230.787 1047.07,230.567 1047.63,227.345 1048.2,227.481 1048.77,225.622 1049.34,224.772 1049.91,226.09 1050.48,227.149 1051.05,227.371 1051.61,229.445 1052.18,230.375 1052.75,230.135 1053.32,230.117 1053.89,226.958 1054.46,228.129 1055.02,229.078 1055.59,228.851 1056.16,226.478 1056.73,226.717 1057.3,225.839 1057.87,225.073 1058.43,225.336 1059,226.734 1059.57,224.805 1060.14,227.082 1060.71,225.047 1061.28,226.16 1061.84,228.382 1062.41,228.411 1062.98,228.534 1063.55,230.688 1064.12,230.578 1064.69,231.408 1065.25,229.251 1065.82,230.18 1066.39,231.038 1066.96,229.751 1067.53,229.754 1068.1,228.797 1068.66,230.035 1069.23,229.929 1069.8,229.98 1070.37,230.799 1070.94,230.576 1071.51,231.57 1072.07,230.446 1072.64,230.413 1073.21,230.277 1073.78,232.078 1074.35,229.764 1074.92,230.566 1075.48,232.292 1076.05,233.124 1076.62,232.891 1077.19,232.61 1077.76,234.325 1078.33,234.956 1078.89,237.61 1079.46,238.027 1080.03,239.506 1080.6,239.774 1081.17,240.044 1081.74,236.223 1082.3,236.699 1082.87,235.113 1083.44,234.764 1084.01,233.108 1084.58,233.699 1085.15,236.212 1085.71,236.635 1086.28,235.949 1086.85,234.319 1087.42,232.873 1087.99,232.534 1088.56,231.151 1089.12,230.727 1089.69,228.411 1090.26,230.37 1090.83,225.959 1091.4,226.122 1091.97,225.392 1092.53,225.646 1093.1,225.679 1093.67,227.808 1094.24,226.709 1094.81,227.799 1095.38,228.804 1095.94,226.638 1096.51,225.841 1097.08,226.141 1097.65,228.392 1098.22,226.48 1098.79,226.228 1099.35,227.277 1099.92,227.247 1100.49,228.487 1101.06,228.389 1101.63,228.34 1102.2,228.321 1102.76,228.351 1103.33,229.458 1103.9,228.409 1104.47,227.417 1105.04,227.398 1105.61,227.648 1106.17,228.889 1106.74,229.707 1107.31,229.739 1107.88,227.546 1108.45,230.723 1109.02,231.748 1109.58,232.642 1110.15,231.304 1110.72,230.137 1111.29,229.942 1111.86,231.892 1112.43,229.417 1112.99,228.294 1113.56,228.056 1114.13,228.081 1114.7,228.024 1115.27,228.193 1115.84,229.251 1116.4,230.037 1116.97,229.819 1117.54,228.612 1118.11,227.486 1118.68,228.401 1119.25,226.265 1119.81,225.601 1120.38,224.804 1120.95,224.29 1121.52,224.722 1122.09,223.135 1122.66,224.398 1123.23,224.646 1123.79,224.166 1124.36,224.675 1124.93,225.022 1125.5,225.309 1126.07,224.683 1126.64,226.046 1127.2,226.364 1127.77,227.667 1128.34,228.943 1128.91,229.079 1129.48,230.301 1130.05,230.299 1130.61,230.438 1131.18,231.38 1131.75,232.254 1132.32,228.861 1132.89,229.119 1133.46,229.319 1134.02,229.434 1134.59,229.366 1135.16,231.583 1135.73,230.463 1136.3,231.5 1136.87,230.423 1137.43,230.586 1138,229.41 1138.57,230.551 1139.14,228.412 1139.71,227.723 1140.28,226.617 1140.84,226.837 1141.41,226.809 1141.98,224.924 1142.55,227.266 1143.12,228.651 1143.69,227.805 1144.25,230.035 1144.82,229.055 1145.39,229.19 1145.96,230.104 1146.53,232.48 1147.1,235.517 1147.66,235.057 1148.23,231.795 1148.8,230.981 1149.37,228.073 1149.94,228.3 1150.51,228.182 1151.07,227.373 1151.64,226.649 1152.21,225.989 1152.78,224.285 1153.35,224.554 1153.92,223.983 1154.48,223.441 1155.05,224.165 1155.62,224.47 1156.19,225.952 1156.76,225.311 1157.33,225.858 1157.89,226.297 1158.46,226.432 1159.03,228.656 1159.6,228.035 1160.17,226.252 1160.74,226.579 1161.3,228.798 1161.87,228.834 1162.44,229.276 1163.01,228.453 1163.58,228.799 1164.15,227.962 1164.71,228.29 1165.28,230.494 1165.85,231.499 1166.42,232.414 1166.99,233.524 1167.56,232.422 1168.12,231.478 1168.69,231.538 1169.26,231.493 1169.83,232.691 1170.4,232.479 1170.97,232.342 1171.53,231.156 1172.1,232.214 1172.67,230.237 1173.24,231.297 1173.81,231.423 1174.38,232.508 1174.94,230.386 1175.51,231.412 1176.08,230.277 1176.65,230.423 1177.22,230.527 1177.79,232.495 1178.35,232.165 1178.92,233.109 1179.49,230.744 1180.06,231.653 1180.63,233.52 1181.2,230.273 1181.76,230.152 1182.33,230.141 1182.9,228.272 1183.47,226.327 1184.04,227.767 1184.61,226.971 1185.17,227.291 1185.74,228.383 1186.31,227.734 1186.88,227.089 1187.45,227.281 1188.02,229.668 1188.58,227.558 1189.15,226.921 1189.72,226.441 1190.29,228.675 1190.86,229.703 1191.43,229.928 1192,231.023 1192.56,232.1 1193.13,233.121 1193.7,232.919 1194.27,232.636 1194.84,234.738 1195.41,230.162 1195.97,230.373 1196.54,229.548 1197.11,232.721 1197.68,231.712 1198.25,232.754 1198.82,230.552 1199.38,230.635 1199.95,231.721 1200.52,230.703 1201.09,231.744 1201.66,231.517 1202.23,234.603 1202.79,234.455 1203.36,235.178 1203.93,233.881 1204.5,234.671 1205.07,233.404 1205.64,232.916 1206.2,231.652 1206.77,230.586 1207.34,231.26 1207.91,231.101 1208.48,232.002 1209.05,232.713 1209.61,233.514 1210.18,233.358 1210.75,232.869 1211.32,233.672 1211.89,232.256 1212.46,230.24 1213.02,229.064 1213.59,227.8 1214.16,227.011 1214.73,229.31 1215.3,231.38 1215.87,231.389 1216.43,233.483 1217,233.234 1217.57,235.089 1218.14,235.694 1218.71,234.302 1219.28,231.75 1219.84,231.519 1220.41,232.383 1220.98,230.047 1221.55,226.863 1222.12,228.114 1222.69,226.873 1223.25,227.138 1223.82,226.291 1224.39,223.613 1224.96,226.89 1225.53,228.01 1226.1,228.025 1226.66,228.221 1227.23,228.314 1227.8,228.422 1228.37,228.498 1228.94,226.531 1229.51,227.657 1230.07,228.694 1230.64,229.874 1231.21,229.771 1231.78,231.76 1232.35,233.551 1232.92,233.365 1233.48,232.817 1234.05,233.581 1234.62,233.344 1235.19,232.074 1235.76,232.04 1236.33,232.86 1236.89,233.659 1237.46,231.273 1238.03,231.801 1238.6,231.658 1239.17,231.576 1239.74,231.315 1240.3,233.275 1240.87,231.996 1241.44,232.628 1242.01,233.344 1242.58,233.123 1243.15,232.135 1243.71,228.652 1244.28,227.726 1244.85,228.7 1245.42,229.75 1245.99,232.924 1246.56,232.728 1247.12,233.393 1247.69,232.896 1248.26,231.476 1248.83,232.417 1249.4,232.144 1249.97,231.801 1250.53,229.441 1251.1,229.32 1251.67,232.247 1252.24,230.957 1252.81,229.748 1253.38,229.622 1253.94,230.689 1254.51,229.348 1255.08,227.231 1255.65,227.294 1256.22,228.448 1256.79,228.596 1257.35,227.487 1257.92,227.513 1258.49,227.632 1259.06,228.589 1259.63,227.413 1260.2,224.511 1260.76,222.69 1261.33,223.002 1261.9,223.507 1262.47,222.905 1263.04,223.364 1263.61,225.649 1264.18,224.866 1264.74,224.323 1265.31,224.636 1265.88,226.023 1266.45,226.296 1267.02,224.63 1267.59,226.083 1268.15,226.268 1268.72,225.613 1269.29,223.915 1269.86,222.233 1270.43,223.993 1271,224.594 1271.56,225.011 1272.13,227.469 1272.7,229.523 1273.27,229.59 1273.84,228.74 1274.41,231.063 1274.97,233.151 1275.54,232.986 1276.11,233.863 1276.68,233.8 1277.25,233.552 1277.82,235.301 1278.38,234.183 1278.95,231.841 1279.52,230.805 1280.09,229.875 1280.66,228.726 1281.23,229.797 1281.79,227.922 1282.36,226.886 1282.93,227.984 1283.5,225.096 1284.07,226.475 1284.64,226.69 1285.2,226.919 1285.77,228.129 1286.34,229.074 1286.91,229.248 1287.48,231.136 1288.05,230.061 1288.61,228.15 1289.18,230.122 1289.75,230.278 1290.32,230.286 1290.89,232.339 1291.46,233.09 1292.02,233.92 1292.59,231.679 1293.16,233.747 1293.73,233.402 1294.3,232.299 1294.87,230.091 1295.43,230.119 1296,230.923 1296.57,231.819 1297.14,231.602 1297.71,230.659 1298.28,230.758 1298.84,229.597 1299.41,230.684 1299.98,230.739 1300.55,229.665 1301.12,229.709 1301.69,229.669 1302.25,228.777 1302.82,227.833 1303.39,228.879 1303.96,228.544 1304.53,227.379 1305.1,225.302 1305.66,225.691 1306.23,224.085 1306.8,226.63 1307.37,227.913 1307.94,226.901 1308.51,226.925 1309.07,225.215 1309.64,222.645 1310.21,225.125 1310.78,226.729 1311.35,226.903 1311.92,226.088 1312.48,225.403 1313.05,224.945 1313.62,224.447 1314.19,225.977 1314.76,224.436 1315.33,224.852 1315.89,224.431 1316.46,226.077 1317.03,226.622 1317.6,228.155 1318.17,227.228 1318.74,225.471 1319.3,227.986 1319.87,229.286 1320.44,229.672 1321.01,231.843 1321.58,232.836 1322.15,233.908 1322.71,233.426 1323.28,231.105 1323.85,231.193 1324.42,233.289 1324.99,232.107 1325.56,233.044 1326.12,235.064 1326.69,234.907 1327.26,234.695 1327.83,233.355 1328.4,232.213 1328.97,232.204 1329.53,233.029 1330.1,233.966 1330.67,233.631 1331.24,233.616 1331.81,232.227 1332.38,233.205 1332.94,231.066 1333.51,232.322 1334.08,229.136 1334.65,232.417 1335.22,231.034 1335.79,227.787 1336.36,227.983 1336.92,227.154 1337.49,229.546 1338.06,230.651 1338.63,230.73 1339.2,231.054 1339.77,231.888 1340.33,231.933 1340.9,232.917 1341.47,233.864 1342.04,234.274 1342.61,233.901 1343.18,233.769 1343.74,230.356 1344.31,229.206 1344.88,229.18 1345.45,228.125 1346.02,229.312 1346.59,231.446 1347.15,228.107 1347.72,228.234 1348.29,227.413 1348.86,225.751 1349.43,226.032 1350,225.588 1350.56,228.006 1351.13,228.138 1351.7,228.141 1352.27,229.468 1352.84,230.287 1353.41,231.288 1353.97,229.281 1354.54,229.29 1355.11,227.39 1355.68,226.487 1356.25,226.702 1356.82,230.167 1357.38,231.269 1357.95,231.138 1358.52,229.944 1359.09,230.888 1359.66,234.124 1360.23,233.781 1360.79,234.632 1361.36,234.166 1361.93,234.004 1362.5,232.644 1363.07,233.817 1363.64,234.647 1364.2,234.443 1364.77,235.239 1365.34,235.81 1365.91,234.364 1366.48,233.914 1367.05,235.691 1367.61,236.254 1368.18,236.934 1368.75,236.449 1369.32,236.977 1369.89,235.283 1370.46,236.661 1371.02,237.087 1371.59,236.675 1372.16,234.034 1372.73,233.762 1373.3,233.415 1373.87,232.991 1374.43,232.765 1375,232.64 1375.57,233.489 1376.14,233.293 1376.71,231.846 1377.28,232.745 1377.84,232.509 1378.41,231.121 1378.98,230.847 1379.55,229.509 1380.12,230.573 1380.69,230.55 1381.25,231.549 1381.82,232.354 1382.39,231.041 1382.96,230.854 1383.53,230.689 1384.1,229.536 1384.66,232.527 1385.23,229.104 1385.8,227.873 1386.37,228.165 1386.94,227.071 1387.51,227.181 1388.07,225.117 1388.64,225.405 1389.21,224.472 1389.78,224.889 1390.35,224.347 1390.92,225.704 1391.48,226.824 1392.05,226.003 1392.62,227.195 1393.19,228.393 1393.76,227.489 1394.33,227.344 1394.89,227.613 1395.46,227.777 1396.03,228.037 1396.6,228.189 1397.17,227.346 1397.74,228.528 1398.3,229.754 1398.87,230.851 1399.44,230.752 1400.01,231.69 1400.58,230.55 1401.15,228.362 1401.71,229.518 1402.28,229.564 1402.85,225.491 1403.42,227.792 1403.99,226.916 1404.56,224.998 1405.13,224.289 1405.69,222.567 1406.26,220.927 1406.83,220.617 1407.4,221.269 1407.97,219.934 1408.54,221.959 1409.1,222.581 1409.67,224.059 1410.24,227.488 1410.81,226.586 1411.38,227.753 1411.95,226.926 1412.51,226.145 1413.08,226.366 1413.65,230.028 1414.22,229.209 1414.79,227.525 1415.36,232.018 1415.92,230.172 1416.49,229.181 1417.06,227.156 1417.63,226.477 1418.2,226.887 1418.77,227.024 1419.33,231.387 1419.9,233.251 1420.47,234.112 1421.04,234.936 1421.61,235.707 1422.18,234.135 1422.74,235.072 1423.31,232.741 1423.88,232.617 1424.45,231.437 1425.02,231.245 1425.59,230.034 1426.15,227.916 1426.72,227.968 1427.29,228.415 1427.86,227.449 1428.43,226.761 1429,225.999 1429.56,227.28 1430.13,225.557 1430.7,223.81 1431.27,225.223 1431.84,224.403 1432.41,225.736 1432.97,225.193 1433.54,224.477 1434.11,225.822 1434.68,227.111 1435.25,229.314 1435.82,230.552 1436.38,231.378 1436.95,232.462 1437.52,231.526 1438.09,231.492 1438.66,230.355 1439.23,229.351 1439.79,230.517 1440.36,230.424 1440.93,230.394 1441.5,227.449 1442.07,230.706 1442.64,230.93 1443.2,230.964 1443.77,228.979 1444.34,230.362 1444.91,226.444 1445.48,229.848 1446.05,231.022 1446.61,231.26 1447.18,231.337 1447.75,228.066 1448.32,226.253 1448.89,225.492 1449.46,226.892 1450.02,228.196 1450.59,229.402 1451.16,227.408 1451.73,229.866 1452.3,231.965 1452.87,232.878 1453.43,233.663 1454,234.535 1454.57,234.369 1455.14,236.072 1455.71,235.64 1456.28,238.394 1456.84,237.711 1457.41,237.231 1457.98,236.904 1458.55,237.552 1459.12,237.263 1459.69,236.593 1460.25,235.033 1460.82,235.533 1461.39,235.285 1461.96,235.029 1462.53,236.617 1463.1,233.037 1463.66,231.727 1464.23,232.651 1464.8,233.235 1465.37,234.012 1465.94,234.721 1466.51,234.407 1467.07,235.839 1467.64,236.546 1468.21,235.767 1468.78,231.235 1469.35,232.819 1469.92,232.626 1470.48,232.201 1471.05,230.583 1471.62,230.505 1472.19,230.356 1472.76,230.444 1473.33,231.447 1473.89,231.282 1474.46,231.039 1475.03,229.731 1475.6,227.595 1476.17,231.004 1476.74,230.864 1477.31,231.894 1477.87,232.664 1478.44,232.577 1479.01,229.279 1479.58,228.125 1480.15,229.237 1480.72,229.472 1481.28,228.268 1481.85,228.338 1482.42,229.284 1482.99,231.407 1483.56,233.267 1484.13,231.786 1484.69,231.588 1485.26,232.56 1485.83,233.074 1486.4,232.538 1486.97,232.42 1487.54,232.187 1488.1,230.748 1488.67,229.479 1489.24,230.401 1489.81,230.253 1490.38,230.179 1490.95,230.913 1491.51,230.711 1492.08,231.618 1492.65,231.285 1493.22,230.171 1493.79,230.001 1494.36,226.941 1494.92,227.16 1495.49,227.006 1496.06,227.046 1496.63,228.293 1497.2,229.198 1497.77,229.212 1498.33,229.118 1498.9,230.256 1499.47,227.879 1500.04,226.812 1500.61,224.903 1501.18,224.101 1501.74,224.364 1502.31,221.761 1502.88,220.405 1503.45,221.038 1504.02,220.537 1504.59,222.067 1505.15,222.577 1505.72,221.919 1506.29,222.427 1506.86,222.996 1507.43,223.375 1508,224.702 1508.56,225.99 1509.13,226.342 1509.7,225.74 1510.27,227.031 1510.84,226.12 1511.41,227.537 1511.97,227.777 1512.54,229.32 1513.11,229.205 1513.68,231.282 1514.25,231.282 1514.82,230.989 1515.38,229.85 1515.95,230.814 1516.52,231.787 1517.09,229.673 1517.66,230.776 1518.23,231.689 1518.79,231.859 1519.36,231.824 1519.93,233.924 1520.5,236.669 1521.07,235.26 1521.64,236.987 1522.2,235.307 1522.77,234.775 1523.34,234.633 1523.91,233.231 1524.48,232.052 1525.05,232.688 1525.61,233.579 1526.18,233.367 1526.75,232.956 1527.32,229.737 1527.89,230.545 1528.46,233.437 1529.02,232.12 1529.59,229.672 1530.16,229.452 1530.73,228.451 1531.3,228.484 1531.87,228.676 1532.43,230.836 1533,234.806 1533.57,234.27 1534.14,231.066 1534.71,231.161 1535.28,229.926 1535.84,230.786 1536.41,229.59 1536.98,229.565 1537.55,226.612 1538.12,223.626 1538.69,224.004 1539.25,225.488 1539.82,223.577 1540.39,225.055 1540.96,226.593 1541.53,226.771 1542.1,225.874 1542.66,227.286 1543.23,228.728 1543.8,228.858 1544.37,228.823 1544.94,228.801 1545.51,228.879 1546.08,228.913 1546.64,230.01 1547.21,231.061 1547.78,229.899 1548.35,231.013 1548.92,228.874 1549.49,226.738 1550.05,226.942 1550.62,225.052 1551.19,227.492 1551.76,231.003 1552.33,231.889 1552.9,232.67 1553.46,231.417 1554.03,232.272 1554.6,233.232 1555.17,231.937 1555.74,232.55 1556.31,231.5 1556.87,231.243 1557.44,230.189 1558.01,231.315 1558.58,231.215 1559.15,231.258 1559.72,230.218 1560.28,228.349 1560.85,228.443 1561.42,225.543 1561.99,222.694 1562.56,224.213 1563.13,225.702 1563.69,226.273 1564.26,225.522 1564.83,222.714 1565.4,224.3 1565.97,225.762 1566.54,228.288 1567.1,230.431 1567.67,230.555 1568.24,230.806 1568.81,227.467 1569.38,226.759 1569.95,227.794 1570.51,230.239 1571.08,230.057 1571.65,230.228 1572.22,230.201 1572.79,231.169 1573.36,230.171 1573.92,230.215 1574.49,229.457 1575.06,227.336 1575.63,227.762 1576.2,226.803 1576.77,228.048 1577.33,226.323 1577.9,225.686 1578.47,226.876 1579.04,227.166 1579.61,226.156 1580.18,227.414 1580.74,228.578 1581.31,228.816 1581.88,229.957 1582.45,232.028 1583.02,231.03 1583.59,231.854 1584.15,228.66 1584.72,228.911 1585.29,229.035 1585.86,230.13 1586.43,232.301 1587,234.124 1587.56,234.078 1588.13,232.795 1588.7,232.67 1589.27,233.663 1589.84,234.462 1590.41,234.386 1590.97,236.093 1591.54,234.583 1592.11,234.215 1592.68,234.906 1593.25,234.557 1593.82,235.188 1594.38,235.825 1594.95,237.382 1595.52,238.759 1596.09,239.228 1596.66,238.475 1597.23,237.679 1597.79,238.107 1598.36,236.388 1598.93,232.991 1599.5,230.385 1600.07,228.366 1600.64,229.289 1601.2,229.003 1601.77,228.072 1602.34,229.056 1602.91,229.208 1603.48,230.13 1604.05,227.079 1604.61,226.337 1605.18,228.67 1605.75,229.653 1606.32,231.987 1606.89,233.958 1607.46,232.646 1608.02,234.443 1608.59,232.135 1609.16,232.769 1609.73,232.217 1610.3,230.811 1610.87,230.733 1611.43,230.509 1612,231.488 1612.57,232.124 1613.14,232.74 1613.71,233.546 1614.28,233.082 1614.84,233.009 1615.41,232.555 1615.98,233.291 1616.55,231.901 1617.12,231.559 1617.69,231.362 1618.26,231.925 1618.82,230.688 1619.39,230.208 1619.96,230.111 1620.53,229.995 1621.1,231.13 1621.67,227.883 1622.23,226.008 1622.8,225.19 1623.37,226.558 1623.94,228.426 1624.51,229.485 1625.08,230.429 1625.64,230.215 1626.21,229.944 1626.78,227.792 1627.35,225.661 1627.92,223.858 1628.49,224.246 1629.05,224.661 1629.62,224.127 1630.19,224.57 1630.76,224.95 1631.33,225.347 1631.9,225.521 1632.46,225.66 1633.03,225.936 1633.6,223.245 1634.17,220.431 1634.74,222.92 1635.31,225.281 1635.87,223.627 1636.44,224.235 1637.01,225.564 1637.58,223.95 1638.15,223.527 1638.72,223.111 1639.28,223.613 1639.85,223.865 1640.42,224.439 1640.99,221.668 1641.56,222.412 1642.13,224.982 1642.69,225.4 1643.26,225.886 1643.83,225.945 1644.4,226.181 1644.97,227.482 1645.54,227.796 1646.1,226.78 1646.67,224.978 1647.24,226.429 1647.81,224.643 1648.38,226.317 1648.95,224.453 1649.51,226.991 1650.08,229.496 1650.65,232.871 1651.22,234.028 1651.79,233.839 1652.36,234.578 1652.92,236.338 1653.49,235.091 1654.06,234.923 1654.63,234.921 1655.2,235.729 1655.77,235.371 1656.33,233.117 1656.9,233.978 1657.47,234.586 1658.04,233.475 1658.61,233.003 1659.18,234.977 1659.74,235.788 1660.31,234.475 1660.88,233.283 1661.45,234.184 1662.02,233.596 1662.59,233.33 1663.15,231.179 1663.72,232.166 1664.29,230.899 1664.86,229.752 1665.43,229.629 1666,229.56 1666.56,227.44 1667.13,227.682 1667.7,227.911 1668.27,227.916 1668.84,228.159 1669.41,227.251 1669.97,227.265 1670.54,227.249 1671.11,225.268 1671.68,229.938 1672.25,225.869 1672.82,225.022 1673.38,224.416 1673.95,226.001 1674.52,226.187 1675.09,226.495 1675.66,226.973 1676.23,225.209 1676.79,224.635 1677.36,225.29 1677.93,224.647 1678.5,226.007 1679.07,228.491 1679.64,228.742 1680.2,230.93 1680.77,231.875 1681.34,231.487 1681.91,230.14 1682.48,228.996 1683.05,230.167 1683.61,230.251 1684.18,232.339 1684.75,234.229 1685.32,234.074 1685.89,233.763 1686.46,231.486 1687.02,232.454 1687.59,232.047 1688.16,231.717 1688.73,230.601 1689.3,231.638 1689.87,231.27 1690.44,232.067 1691,230.889 1691.57,231.763 1692.14,231.7 1692.71,230.509 1693.28,230.636 1693.85,236.769 1694.41,236.166 1694.98,235.631 1695.55,233.081 1696.12,230.733 1696.69,230.78 1697.26,231.931 1697.82,230.858 1698.39,229.746 1698.96,229.733 1699.53,231.835 1700.1,230.796 1700.67,229.759 1701.23,230.63 1701.8,229.364 1702.37,229.422 1702.94,228.405 1703.51,230.55 1704.08,230.624 1704.64,229.55 1705.21,229.761 1705.78,230.87 1706.35,231.796 1706.92,231.568 1707.49,231.511 1708.05,231.537 1708.62,232.589 1709.19,233.34 1709.76,233.106 1710.33,233.053 1710.9,231.662 1711.46,231.43 1712.03,229.27 1712.6,228.231 1713.17,225.033 1713.74,225.318 1714.31,224.699 1714.87,225.033 1715.44,228.334 1716.01,228.646 1716.58,228.857 1717.15,228.833 1717.72,230.775 1718.28,229.92 1718.85,228.971 1719.42,226.961 1719.99,227.16 1720.56,226.191 1721.13,225.395 1721.69,226.828 1722.26,227.227 1722.83,228.616 1723.4,229.516 1723.97,229.418 1724.54,226.169 1725.1,226.596 1725.67,225.694 1726.24,227.934 1726.81,227.045 1727.38,226.445 1727.95,226.885 1728.51,229.214 1729.08,231.333 1729.65,229.433 1730.22,228.536 1730.79,230.587 1731.36,230.865 1731.92,230.802 1732.49,229.73 1733.06,226.663 1733.63,224.878 1734.2,223.305 1734.77,224.723 1735.33,225.932 1735.9,225.39 1736.47,224.655 1737.04,224.975 1737.61,227.555 1738.18,226.652 1738.74,226.862 1739.31,228.146 1739.88,226.391 1740.45,226.601 1741.02,229.061 1741.59,229.142 1742.15,230.126 1742.72,229.074 1743.29,227.351 1743.86,226.812 1744.43,228.16 1745,228.221 1745.56,229.622 1746.13,228.694 1746.7,231.935 1747.27,231.928 1747.84,231.73 1748.41,232.638 1748.97,232.839 1749.54,230.912 1750.11,232.947 1750.68,232.795 1751.25,233.605 1751.82,234.378 1752.38,233.061 1752.95,233.089 1753.52,233.015 1754.09,232.793 1754.66,233.836 1755.23,231.637 1755.79,231.497 1756.36,232.404 1756.93,231.218 1757.5,233.227 1758.07,235.344 1758.64,233.093 1759.21,229.694 1759.77,227.536 1760.34,228.889 1760.91,229.921 1761.48,228.822 1762.05,223.839 1762.62,223.592 1763.18,223.037 1763.75,223.941 1764.32,222.483 1764.89,221.019 1765.46,221.7 1766.03,224.415 1766.59,224.937 1767.16,226.407 1767.73,226.709 1768.3,225.208 1768.87,225.978 1769.44,226.36 1770,226.691 1770.57,226.838 1771.14,225.239 1771.71,223.685 1772.28,226.319 1772.85,227.457 1773.41,226.964 1773.98,225.155 1774.55,225.742 1775.12,227.176 1775.69,229.655 1776.26,227.769 1776.82,225.982 1777.39,227.536 1777.96,232.045 1778.53,234.103 1779.1,234.154 1779.67,235.151 1780.23,234.126 1780.8,234.09 1781.37,234.929 1781.94,234.99 1782.51,235.725 1783.08,237.592 1783.64,242.457 1784.21,242.63 1784.78,242.844 1785.35,240.989 1785.92,241.499 1786.49,239.694 1787.05,239.966 1787.62,238.161 1788.19,237.57 1788.76,237.055 1789.33,235.402 1789.9,234.952 1790.46,233.742 1791.03,234.47 1791.6,232.957 1792.17,231.902 1792.74,229.732 1793.31,229.76 1793.87,228.701 1794.44,232.778 1795.01,234.486 1795.58,236.134 1796.15,235.673 1796.72,235.323 1797.28,234.959 1797.85,236.67 1798.42,237.165 1798.99,236.688 1799.56,234.171 1800.13,234.621 1800.69,234.225 1801.26,233.691 1801.83,234.527 1802.4,235.188 1802.97,234.546 1803.54,234.237 1804.1,235.914 1804.67,235.507 1805.24,232.838 1805.81,233.632 1806.38,234.252 1806.95,231.855 1807.51,230.501 1808.08,230.195 1808.65,229.074 1809.22,228.839 1809.79,229.774 1810.36,228.488 1810.92,228.528 1811.49,231.429 1812.06,228.294 1812.63,229.256 1813.2,228.026 1813.77,226.059 1814.33,226.286 1814.9,225.199 1815.47,225.313 1816.04,227.498 1816.61,227.465 1817.18,228.503 1817.74,227.264 1818.31,228.243 1818.88,231.259 1819.45,231.071 1820.02,232.785 1820.59,228.46 1821.15,228.423 1821.72,226.241 1822.29,227.378 1822.86,227.618 1823.43,228.628 1824,229.631 1824.56,226.567 1825.13,224.596 1825.7,222.865 1826.27,223.372 1826.84,224.792 1827.41,224.168 1827.97,223.413 1828.54,224.539 1829.11,225 1829.68,224.188 1830.25,225.506 1830.82,227.022 1831.39,226.245 1831.95,227.618 1832.52,226.68 1833.09,225.841 1833.66,224.95 1834.23,224.127 1834.8,224.482 1835.36,226.159 1835.93,224.194 1836.5,225.561 1837.07,225.674 1837.64,224.866 1838.21,224.335 1838.77,226.809 1839.34,228.176 1839.91,227.092 1840.48,227.464 1841.05,226.66 1841.62,226.888 1842.18,225.855 1842.75,226.14 1843.32,227.373 1843.89,228.602 1844.46,231.841 1845.03,233.131 1845.59,230.645 1846.16,230.714 1846.73,229.663 1847.3,230.739 1847.87,231.65 1848.44,231.77 1849,231.604 1849.57,231.406 1850.14,229.293 1850.71,229.514 1851.28,228.483 1851.85,228.561 1852.41,229.8 1852.98,226.742 1853.55,229.133 1854.12,227.244 1854.69,228.33 1855.26,229.476 1855.82,229.656 1856.39,229.95 1856.96,230.869 1857.53,231.03 1858.1,228.984 1858.67,231.166 1859.23,231.06 1859.8,230.96 1860.37,233.111 1860.94,232.939 1861.51,232.836 1862.08,230.64 1862.64,228.581 1863.21,229.672 1863.78,229.676 1864.35,227.473 1864.92,226.508 1865.49,225.882 1866.05,226 1866.62,226.19 1867.19,226.693 1867.76,229.15 1868.33,231.331 1868.9,233.459 1869.46,233.108 1870.03,232.941 1870.6,231.554 1871.17,232.492 1871.74,234.47 1872.31,237.291 1872.87,238.791 1873.44,238.03 1874.01,237.5 1874.58,236.878 1875.15,235.151 1875.72,234.486 1876.28,232.984 1876.85,233.719 1877.42,237.468 1877.99,236.923 1878.56,236.358 1879.13,236.918 1879.69,237.535 1880.26,236.115 1880.83,235.673 1881.4,235.242 1881.97,235.855 1882.54,235.193 1883.1,234.541 1883.67,233.137 1884.24,232.894 1884.81,233.762 1885.38,232.385 1885.95,233.243 1886.51,235.826 1887.08,236.423 1887.65,235.676 1888.22,233.889 1888.79,232.474 1889.36,231.933 1889.92,232.625 1890.49,230.192 1891.06,230.205 1891.63,229.031 1892.2,228.044 1892.77,223.928 1893.33,224.294 1893.9,223.71 1894.47,225.019 1895.04,226.627 1895.61,227.878 1896.18,229.881 1896.74,228.648 1897.31,227.558 1897.88,226.685 1898.45,225.87 1899.02,226.782 1899.59,230.152 1900.16,229.039 1900.72,228.935 1901.29,228.962 1901.86,227.804 1902.43,232.124 1903,233.042 1903.57,232.524 1904.13,231.196 1904.7,229.838 1905.27,230.538 1905.84,229.328 1906.41,227.153 1906.98,227.453 1907.54,229.486 1908.11,230.515 1908.68,230.446 1909.25,230.175 1909.82,230.94 1910.39,230.595 1910.95,230.714 1911.52,230.811 1912.09,230.813 1912.66,228.73 1913.23,228.736 1913.8,227.594 1914.36,226.771 1914.93,227.027 1915.5,226.972 1916.07,227.013 1916.64,227.094 1917.21,227.265 1917.77,228.457 1918.34,228.697 1918.91,227.889 1919.48,225.914 1920.05,224.274 1920.62,225.692 1921.18,224.898 1921.75,226.236 1922.32,226.538 1922.89,226.824 1923.46,229.013 1924.03,229.132 1924.59,230.269 1925.16,228.217 1925.73,228.161 1926.3,227.294 1926.87,228.661 1927.44,227.758 1928,228.848 1928.57,229.565 1929.14,230.495 1929.71,231.455 1930.28,229.236 1930.85,229.475 1931.41,229.624 1931.98,228.676 1932.55,225.647 1933.12,226.719 1933.69,226.87 1934.26,226.17 1934.82,226.359 1935.39,227.584 1935.96,227.787 1936.53,229.923 1937.1,229.93 1937.67,227.702 1938.23,224.958 1938.8,224.422 1939.37,225.065 1939.94,230.32 1940.51,228.369 1941.08,230.346 1941.64,232.413 1942.21,230.356 1942.78,229.194 1943.35,230.244 1943.92,230.201 1944.49,232.282 1945.05,231.286 1945.62,234.528 1946.19,236.281 1946.76,235.616 1947.33,237.337 1947.9,235.722 1948.46,235.198 1949.03,234.81 1949.6,234.557 1950.17,233.038 1950.74,232.878 1951.31,231.797 1951.87,231.499 1952.44,232.234 1953.01,229.919 1953.58,228.921 1954.15,231.879 1954.72,231.727 1955.28,231.39 1955.85,231.246 1956.42,230.123 1956.99,232.13 1957.56,230.761 1958.13,230.837 1958.69,228.827 1959.26,228.712 1959.83,226.728 1960.4,225.77 1960.97,222.744 1961.54,223.042 1962.1,221.496 1962.67,222.119 1963.24,223.732 1963.81,223.035 1964.38,223.515 1964.95,224.968 1965.51,225.291 1966.08,226.52 1966.65,227.857 1967.22,228.935 1967.79,229.003 1968.36,229.032 1968.92,228.968 1969.49,230.065 1970.06,229.024 1970.63,229.117 1971.2,229.07 1971.77,229.011 1972.34,229.271 1972.9,229.198 1973.47,230.372 1974.04,231.114 1974.61,228.999 1975.18,227.941 1975.75,224.049 1976.31,225.532 1976.88,222.891 1977.45,224.229 1978.02,225.81 1978.59,228.012 1979.16,229.009 1979.72,227.078 1980.29,227.351 1980.86,227.562 1981.43,225.686 1982,225.82 1982.57,228.255 1983.13,226.377 1983.7,225.553 1984.27,228.224 1984.84,226.202 1985.41,228.451 1985.98,226.605 1986.54,225.858 1987.11,226.35 1987.68,228.918 1988.25,229.795 1988.82,230.812 1989.39,232.682 1989.95,231.42 1990.52,230.313 1991.09,232.241 1991.66,233.065 1992.23,232.703 1992.8,231.346 1993.36,234.453 1993.93,233.363 1994.5,234.107 1995.07,235.641 1995.64,236.314 1996.21,235.895 1996.77,236.793 1997.34,233.181 1997.91,234.263 1998.48,229.898 1999.05,229.611 1999.62,230.6 2000.18,230.754 2000.75,229.385 2001.32,227.392 2001.89,228.575 2002.46,225.594 2003.03,226.775 2003.59,223.904 2004.16,225.156 2004.73,225.418 2005.3,227.91 2005.87,229.272 2006.44,230.473 2007,230.555 2007.57,230.611 2008.14,230.547 2008.71,229.514 2009.28,229.628 2009.85,231.642 2010.41,233.46 2010.98,233.096 2011.55,234.884 2012.12,233.434 2012.69,234.22 2013.26,234.986 2013.82,236.776 2014.39,235.489 2014.96,234.11 2015.53,233.936 2016.1,236.757 2016.67,236.192 2017.23,236.951 2017.8,237.443 2018.37,237.972 2018.94,236.454 2019.51,232.97 2020.08,232.576 2020.64,231.175 2021.21,231.98 2021.78,231.713 2022.35,230.562 2022.92,231.758 2023.49,231.643 2024.05,231.522 2024.62,231.32 2025.19,231.04 2025.76,234.005 2026.33,233.755 2026.9,231.743 2027.46,231.42 2028.03,232.357 2028.6,231.296 2029.17,230.076 2029.74,230.065 2030.31,231.098 2030.87,228.638 2031.44,229.846 2032.01,227.687 2032.58,226.908 2033.15,225.996 2033.72,228.39 2034.28,228.174 2034.85,229.194 2035.42,231.148 2035.99,229.032 2036.56,229.117 2037.13,226.835 2037.69,227.078 2038.26,226.27 2038.83,227.328 2039.4,227.68 2039.97,226.676 2040.54,226.808 2041.11,225.984 2041.67,227.303 2042.24,227.683 2042.81,227.775 2043.38,227.957 2043.95,227.018 2044.52,224.172 2045.08,223.541 2045.65,223.971 2046.22,223.48 2046.79,222.998 2047.36,223.725 2047.93,223.08 2048.49,224.686 2049.06,225.191 2049.63,225.585 2050.2,227.026 2050.77,226.449 2051.34,228.766 2051.9,231.911 2052.47,229.739 2053.04,231.625 2053.61,231.621 2054.18,232.544 2054.75,232.223 2055.31,233.27 2055.88,234.129 2056.45,233.829 2057.02,233.686 2057.59,230.463 2058.16,225.491 2058.72,226.893 2059.29,225.871 2059.86,227.136 2060.43,226.307 2061,226.721 2061.57,227.026 2062.13,227.28 2062.7,228.638 2063.27,228.619 2063.84,227.635 2064.41,225.837 2064.98,226.059 2065.54,227.404 2066.11,226.556 2066.68,228.098 2067.25,227.256 2067.82,225.35 2068.39,227.97 2068.95,228.349 2069.52,227.606 2070.09,227.042 2070.66,228.199 2071.23,228.498 2071.8,229.573 2072.36,228.573 2072.93,227.546 2073.5,228.976 2074.07,229.064 2074.64,228.214 2075.21,229.416 2075.77,229.694 2076.34,229.847 2076.91,231.001 2077.48,231.035 2078.05,232.079 2078.62,232.008 2079.18,232.025 2079.75,231.826 2080.32,231.795 2080.89,232.006 2081.46,232.122 2082.03,231.891 2082.59,230.926 2083.16,234.033 2083.73,235.682 2084.3,237.309 2084.87,240.034 2085.44,239.285 2086,238.537 2086.57,235.228 2087.14,236.968 2087.71,237.509 2088.28,236.985 2088.85,235.56 2089.41,233.033 2089.98,235.01 2090.55,234.7 2091.12,235.244 2091.69,234.737 2092.26,235.407 2092.82,235.87 2093.39,235.43 2093.96,234.017 2094.53,232.846 2095.1,234.44 2095.67,235.013 2096.23,234.526 2096.8,234.126 2097.37,231.656 2097.94,233.372 2098.51,231.865 2099.08,230.41 2099.64,229.995 2100.21,228.879 2100.78,228.658 2101.35,228.353 2101.92,231.265 2102.49,230.886 2103.05,226.536 2103.62,224.701 2104.19,222.896 2104.76,222.146 2105.33,221.714 2105.9,222.321 2106.46,222.876 2107.03,221.293 2107.6,219.895 2108.17,222.561 2108.74,222.11 2109.31,222.557 2109.87,222.982 2110.44,223.349 2111.01,224.734 2111.58,225.137 2112.15,223.507 2112.72,226.24 2113.29,225.401 2113.85,228.045 2114.42,229.102 2114.99,231.252 2115.56,232.348 2116.13,232.268 2116.7,234.206 2117.26,234.791 2117.83,234.516 2118.4,229.347 2118.97,228.445 2119.54,229.607 2120.11,232.972 2120.67,233.775 2121.24,232.249 2121.81,232.014 2122.38,231.887 2122.95,230.841 2123.52,231.753 2124.08,231.822 2124.65,231.761 2125.22,234.72 2125.79,234.31 2126.36,235.184 2126.93,233.776 2127.49,229.379 2128.06,230.335 2128.63,228.252 2129.2,228.192 2129.77,229.316 2130.34,231.389 2130.9,232.168 2131.47,230.976 2132.04,231.902 2132.61,229.903 2133.18,228.823 2133.75,228.954 2134.31,231.083 2134.88,230.94 2135.45,230.935 2136.02,232.873 2136.59,230.402 2137.16,231.537 2137.72,231.465 2138.29,231.303 2138.86,229.177 2139.43,229.043 2140,227.846 2140.57,229.044 2141.13,227.993 2141.7,228.12 2142.27,227.26 2142.84,227.283 2143.41,227.541 2143.98,230.907 2144.54,230.791 2145.11,231.646 2145.68,234.644 2146.25,235.254 2146.82,233.589 2147.39,233.289 2147.95,228.854 2148.52,230.003 2149.09,229.102 2149.66,230.096 2150.23,229.099 2150.8,229.037 2151.36,231.107 2151.93,231.818 2152.5,231.41 2153.07,232.202 2153.64,230.822 2154.21,230.619 2154.77,232.413 2155.34,232.366 2155.91,232.992 2156.48,232.817 2157.05,231.733 2157.62,230.54 2158.18,230.386 2158.75,230.245 2159.32,231.152 2159.89,235.988 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M1625.75 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1625.75 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1625.75,1245.03 2150.8,1245.03 2150.8,1089.51 1625.75,1089.51 1625.75,1245.03 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1645.83,1141.35 1766.28,1141.35 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M1793.76 1125.34 L1793.76 1132.71 L1802.53 1132.71 L1802.53 1136.02 L1793.76 1136.02 L1793.76 1150.09 Q1793.76 1153.26 1794.61 1154.16 Q1795.49 1155.07 1798.16 1155.07 L1802.53 1155.07 L1802.53 1158.63 L1798.16 1158.63 Q1793.23 1158.63 1791.35 1156.8 Q1789.48 1154.95 1789.48 1150.09 L1789.48 1136.02 L1786.35 1136.02 L1786.35 1132.71 L1789.48 1132.71 L1789.48 1125.34 L1793.76 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1819.92 1145.6 Q1814.75 1145.6 1812.76 1146.78 Q1810.77 1147.96 1810.77 1150.81 Q1810.77 1153.08 1812.25 1154.42 Q1813.76 1155.74 1816.33 1155.74 Q1819.87 1155.74 1822 1153.24 Q1824.15 1150.72 1824.15 1146.55 L1824.15 1145.6 L1819.92 1145.6 M1828.41 1143.84 L1828.41 1158.63 L1824.15 1158.63 L1824.15 1154.7 Q1822.69 1157.06 1820.52 1158.19 Q1818.34 1159.3 1815.19 1159.3 Q1811.21 1159.3 1808.85 1157.08 Q1806.51 1154.84 1806.51 1151.09 Q1806.51 1146.71 1809.43 1144.49 Q1812.37 1142.27 1818.18 1142.27 L1824.15 1142.27 L1824.15 1141.85 Q1824.15 1138.91 1822.21 1137.31 Q1820.29 1135.69 1816.79 1135.69 Q1814.57 1135.69 1812.46 1136.22 Q1810.36 1136.76 1808.41 1137.82 L1808.41 1133.89 Q1810.75 1132.98 1812.95 1132.54 Q1815.15 1132.08 1817.23 1132.08 Q1822.86 1132.08 1825.63 1135 Q1828.41 1137.91 1828.41 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1852.21 1136.69 Q1851.49 1136.27 1850.63 1136.09 Q1849.8 1135.88 1848.78 1135.88 Q1845.17 1135.88 1843.23 1138.24 Q1841.3 1140.58 1841.3 1144.97 L1841.3 1158.63 L1837.02 1158.63 L1837.02 1132.71 L1841.3 1132.71 L1841.3 1136.73 Q1842.65 1134.37 1844.8 1133.24 Q1846.95 1132.08 1850.03 1132.08 Q1850.47 1132.08 1851 1132.15 Q1851.54 1132.2 1852.18 1132.31 L1852.21 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1872.9 1145.37 Q1872.9 1140.74 1870.98 1138.19 Q1869.08 1135.65 1865.63 1135.65 Q1862.21 1135.65 1860.29 1138.19 Q1858.39 1140.74 1858.39 1145.37 Q1858.39 1149.97 1860.29 1152.52 Q1862.21 1155.07 1865.63 1155.07 Q1869.08 1155.07 1870.98 1152.52 Q1872.9 1149.97 1872.9 1145.37 M1877.16 1155.41 Q1877.16 1162.03 1874.22 1165.25 Q1871.28 1168.49 1865.22 1168.49 Q1862.97 1168.49 1860.98 1168.15 Q1858.99 1167.82 1857.11 1167.13 L1857.11 1162.98 Q1858.99 1164 1860.82 1164.49 Q1862.65 1164.97 1864.54 1164.97 Q1868.73 1164.97 1870.82 1162.78 Q1872.9 1160.6 1872.9 1156.18 L1872.9 1154.07 Q1871.58 1156.36 1869.52 1157.5 Q1867.46 1158.63 1864.59 1158.63 Q1859.82 1158.63 1856.91 1155 Q1853.99 1151.36 1853.99 1145.37 Q1853.99 1139.35 1856.91 1135.72 Q1859.82 1132.08 1864.59 1132.08 Q1867.46 1132.08 1869.52 1133.22 Q1871.58 1134.35 1872.9 1136.64 L1872.9 1132.71 L1877.16 1132.71 L1877.16 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1908.11 1144.6 L1908.11 1146.69 L1888.53 1146.69 Q1888.8 1151.09 1891.17 1153.4 Q1893.55 1155.69 1897.79 1155.69 Q1900.24 1155.69 1902.53 1155.09 Q1904.85 1154.49 1907.11 1153.28 L1907.11 1157.31 Q1904.82 1158.28 1902.42 1158.79 Q1900.01 1159.3 1897.53 1159.3 Q1891.33 1159.3 1887.69 1155.69 Q1884.08 1152.08 1884.08 1145.92 Q1884.08 1139.56 1887.51 1135.83 Q1890.96 1132.08 1896.79 1132.08 Q1902.02 1132.08 1905.05 1135.46 Q1908.11 1138.82 1908.11 1144.6 M1903.85 1143.35 Q1903.8 1139.86 1901.88 1137.78 Q1899.98 1135.69 1896.84 1135.69 Q1893.27 1135.69 1891.12 1137.71 Q1888.99 1139.72 1888.67 1143.38 L1903.85 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1919.31 1125.34 L1919.31 1132.71 L1928.09 1132.71 L1928.09 1136.02 L1919.31 1136.02 L1919.31 1150.09 Q1919.31 1153.26 1920.17 1154.16 Q1921.05 1155.07 1923.71 1155.07 L1928.09 1155.07 L1928.09 1158.63 L1923.71 1158.63 Q1918.78 1158.63 1916.91 1156.8 Q1915.03 1154.95 1915.03 1150.09 L1915.03 1136.02 L1911.91 1136.02 L1911.91 1132.71 L1915.03 1132.71 L1915.03 1125.34 L1919.31 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1953.39 1166.5 L1953.39 1169.81 L1928.76 1169.81 L1928.76 1166.5 L1953.39 1166.5 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip030)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1645.83,1193.19 1766.28,1193.19 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M1808.06 1194.82 L1808.06 1210.47 L1803.8 1210.47 L1803.8 1194.96 Q1803.8 1191.28 1802.37 1189.45 Q1800.93 1187.62 1798.06 1187.62 Q1794.61 1187.62 1792.62 1189.82 Q1790.63 1192.02 1790.63 1195.82 L1790.63 1210.47 L1786.35 1210.47 L1786.35 1184.55 L1790.63 1184.55 L1790.63 1188.57 Q1792.16 1186.24 1794.22 1185.08 Q1796.3 1183.92 1799.01 1183.92 Q1803.48 1183.92 1805.77 1186.7 Q1808.06 1189.45 1808.06 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1826.61 1187.53 Q1823.18 1187.53 1821.19 1190.22 Q1819.2 1192.88 1819.2 1197.53 Q1819.2 1202.18 1821.17 1204.87 Q1823.16 1207.53 1826.61 1207.53 Q1830.01 1207.53 1832 1204.85 Q1833.99 1202.16 1833.99 1197.53 Q1833.99 1192.93 1832 1190.24 Q1830.01 1187.53 1826.61 1187.53 M1826.61 1183.92 Q1832.16 1183.92 1835.33 1187.53 Q1838.5 1191.14 1838.5 1197.53 Q1838.5 1203.9 1835.33 1207.53 Q1832.16 1211.14 1826.61 1211.14 Q1821.03 1211.14 1817.86 1207.53 Q1814.71 1203.9 1814.71 1197.53 Q1814.71 1191.14 1817.86 1187.53 Q1821.03 1183.92 1826.61 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1860.59 1188.53 Q1859.87 1188.11 1859.01 1187.93 Q1858.18 1187.72 1857.16 1187.72 Q1853.55 1187.72 1851.61 1190.08 Q1849.68 1192.42 1849.68 1196.81 L1849.68 1210.47 L1845.4 1210.47 L1845.4 1184.55 L1849.68 1184.55 L1849.68 1188.57 Q1851.03 1186.21 1853.18 1185.08 Q1855.33 1183.92 1858.41 1183.92 Q1858.85 1183.92 1859.38 1183.99 Q1859.92 1184.04 1860.56 1184.15 L1860.59 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1884.41 1189.52 Q1886 1186.65 1888.23 1185.29 Q1890.45 1183.92 1893.46 1183.92 Q1897.51 1183.92 1899.71 1186.77 Q1901.91 1189.59 1901.91 1194.82 L1901.91 1210.47 L1897.62 1210.47 L1897.62 1194.96 Q1897.62 1191.24 1896.3 1189.43 Q1894.98 1187.62 1892.28 1187.62 Q1888.97 1187.62 1887.04 1189.82 Q1885.12 1192.02 1885.12 1195.82 L1885.12 1210.47 L1880.84 1210.47 L1880.84 1194.96 Q1880.84 1191.21 1879.52 1189.43 Q1878.2 1187.62 1875.45 1187.62 Q1872.18 1187.62 1870.26 1189.85 Q1868.34 1192.05 1868.34 1195.82 L1868.34 1210.47 L1864.06 1210.47 L1864.06 1184.55 L1868.34 1184.55 L1868.34 1188.57 Q1869.8 1186.19 1871.84 1185.06 Q1873.87 1183.92 1876.67 1183.92 Q1879.5 1183.92 1881.47 1185.36 Q1883.46 1186.79 1884.41 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.023 ¬± 0.024\n  with uncertainty of ¬± 0.00219618710191134\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01346 ¬± (0.00308003, 0.0030809) (MC)\n  95% confidence interval: [-4.01911, -4.00746]) (MC)\n  linear error propagation: -4.01392 ¬± 0.00298935\n  |Œ¥_y| = |0.00315125| (‚â§ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.013463457267202, val_l = 0.0056459923415896895, val_u = 0.0059985700450271295)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.step, df.shift, ylabel=\"energy\", xlabel=\"step\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.step[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.step[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip060\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip060)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip061\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip060)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip062\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1237.32 1391.71 L1237.32 1397.25 Q1234.84 1395.98 1232.17 1395.34 Q1229.49 1394.71 1226.63 1394.71 Q1222.27 1394.71 1220.07 1396.04 Q1217.91 1397.38 1217.91 1400.05 Q1217.91 1402.09 1219.47 1403.27 Q1221.03 1404.41 1225.74 1405.46 L1227.74 1405.91 Q1233.98 1407.25 1236.59 1409.7 Q1239.23 1412.12 1239.23 1416.48 Q1239.23 1421.44 1235.29 1424.34 Q1231.37 1427.23 1224.5 1427.23 Q1221.63 1427.23 1218.51 1426.66 Q1215.42 1426.12 1211.99 1425.01 L1211.99 1418.96 Q1215.23 1420.65 1218.38 1421.51 Q1221.54 1422.33 1224.62 1422.33 Q1228.76 1422.33 1230.99 1420.93 Q1233.22 1419.5 1233.22 1416.92 Q1233.22 1414.54 1231.59 1413.26 Q1230 1411.99 1224.56 1410.81 L1222.52 1410.33 Q1217.08 1409.19 1214.66 1406.83 Q1212.24 1404.45 1212.24 1400.31 Q1212.24 1395.28 1215.81 1392.54 Q1219.37 1389.8 1225.93 1389.8 Q1229.17 1389.8 1232.04 1390.28 Q1234.9 1390.76 1237.32 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1254.35 1380.54 L1254.35 1390.66 L1266.41 1390.66 L1266.41 1395.22 L1254.35 1395.22 L1254.35 1414.57 Q1254.35 1418.93 1255.53 1420.17 Q1256.74 1421.41 1260.4 1421.41 L1266.41 1421.41 L1266.41 1426.31 L1260.4 1426.31 Q1253.62 1426.31 1251.04 1423.8 Q1248.46 1421.25 1248.46 1414.57 L1248.46 1395.22 L1244.17 1395.22 L1244.17 1390.66 L1248.46 1390.66 L1248.46 1380.54 L1254.35 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1304.61 1407.02 L1304.61 1409.89 L1277.68 1409.89 Q1278.06 1415.94 1281.31 1419.12 Q1284.59 1422.27 1290.41 1422.27 Q1293.79 1422.27 1296.94 1421.44 Q1300.12 1420.61 1303.24 1418.96 L1303.24 1424.5 Q1300.09 1425.83 1296.78 1426.53 Q1293.47 1427.23 1290.06 1427.23 Q1281.53 1427.23 1276.54 1422.27 Q1271.57 1417.3 1271.57 1408.84 Q1271.57 1400.08 1276.28 1394.96 Q1281.02 1389.8 1289.04 1389.8 Q1296.24 1389.8 1300.41 1394.45 Q1304.61 1399.07 1304.61 1407.02 M1298.75 1405.3 Q1298.69 1400.5 1296.05 1397.63 Q1293.44 1394.77 1289.11 1394.77 Q1284.21 1394.77 1281.25 1397.54 Q1278.32 1400.31 1277.87 1405.34 L1298.75 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1319.89 1420.96 L1319.89 1439.87 L1314 1439.87 L1314 1390.66 L1319.89 1390.66 L1319.89 1396.07 Q1321.73 1392.89 1324.53 1391.36 Q1327.37 1389.8 1331.28 1389.8 Q1337.77 1389.8 1341.82 1394.96 Q1345.89 1400.12 1345.89 1408.52 Q1345.89 1416.92 1341.82 1422.08 Q1337.77 1427.23 1331.28 1427.23 Q1327.37 1427.23 1324.53 1425.71 Q1321.73 1424.15 1319.89 1420.96 M1339.81 1408.52 Q1339.81 1402.06 1337.14 1398.4 Q1334.5 1394.71 1329.85 1394.71 Q1325.2 1394.71 1322.53 1398.4 Q1319.89 1402.06 1319.89 1408.52 Q1319.89 1414.98 1322.53 1418.67 Q1325.2 1422.33 1329.85 1422.33 Q1334.5 1422.33 1337.14 1418.67 Q1339.81 1414.98 1339.81 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1145.59 2211.02,1145.59 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,982.233 2211.02,982.233 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,818.874 2211.02,818.874 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,655.514 2211.02,655.514 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,492.155 2211.02,492.155 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,328.795 2211.02,328.795 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1145.59 365.751,1145.59 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,982.233 365.751,982.233 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,818.874 365.751,818.874 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,655.514 365.751,655.514 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,492.155 365.751,492.155 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,328.795 365.751,328.795 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M298.909 1131.39 Q295.298 1131.39 293.469 1134.96 Q291.664 1138.5 291.664 1145.63 Q291.664 1152.73 293.469 1156.3 Q295.298 1159.84 298.909 1159.84 Q302.543 1159.84 304.349 1156.3 Q306.177 1152.73 306.177 1145.63 Q306.177 1138.5 304.349 1134.96 Q302.543 1131.39 298.909 1131.39 M298.909 1127.69 Q304.719 1127.69 307.775 1132.29 Q310.853 1136.88 310.853 1145.63 Q310.853 1154.35 307.775 1158.96 Q304.719 1163.54 298.909 1163.54 Q293.099 1163.54 290.02 1158.96 Q286.964 1154.35 286.964 1145.63 Q286.964 1136.88 290.02 1132.29 Q293.099 1127.69 298.909 1127.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M259.557 995.578 L267.196 995.578 L267.196 969.212 L258.886 970.879 L258.886 966.62 L267.15 964.953 L271.826 964.953 L271.826 995.578 L279.465 995.578 L279.465 999.513 L259.557 999.513 L259.557 995.578 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 968.032 Q295.298 968.032 293.469 971.597 Q291.664 975.138 291.664 982.268 Q291.664 989.374 293.469 992.939 Q295.298 996.481 298.909 996.481 Q302.543 996.481 304.349 992.939 Q306.177 989.374 306.177 982.268 Q306.177 975.138 304.349 971.597 Q302.543 968.032 298.909 968.032 M298.909 964.328 Q304.719 964.328 307.775 968.935 Q310.853 973.518 310.853 982.268 Q310.853 990.995 307.775 995.601 Q304.719 1000.18 298.909 1000.18 Q293.099 1000.18 290.02 995.601 Q286.964 990.995 286.964 982.268 Q286.964 973.518 290.02 968.935 Q293.099 964.328 298.909 964.328 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M262.775 832.219 L279.094 832.219 L279.094 836.154 L257.15 836.154 L257.15 832.219 Q259.812 829.464 264.395 824.834 Q269.002 820.182 270.182 818.839 Q272.428 816.316 273.307 814.58 Q274.21 812.82 274.21 811.131 Q274.21 808.376 272.266 806.64 Q270.344 804.904 267.242 804.904 Q265.043 804.904 262.59 805.668 Q260.159 806.432 257.381 807.983 L257.381 803.26 Q260.205 802.126 262.659 801.547 Q265.113 800.969 267.15 800.969 Q272.52 800.969 275.715 803.654 Q278.909 806.339 278.909 810.83 Q278.909 812.959 278.099 814.881 Q277.312 816.779 275.205 819.371 Q274.627 820.043 271.525 823.26 Q268.423 826.455 262.775 832.219 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 804.672 Q295.298 804.672 293.469 808.237 Q291.664 811.779 291.664 818.908 Q291.664 826.015 293.469 829.58 Q295.298 833.121 298.909 833.121 Q302.543 833.121 304.349 829.58 Q306.177 826.015 306.177 818.908 Q306.177 811.779 304.349 808.237 Q302.543 804.672 298.909 804.672 M298.909 800.969 Q304.719 800.969 307.775 805.575 Q310.853 810.158 310.853 818.908 Q310.853 827.635 307.775 832.242 Q304.719 836.825 298.909 836.825 Q293.099 836.825 290.02 832.242 Q286.964 827.635 286.964 818.908 Q286.964 810.158 290.02 805.575 Q293.099 800.969 298.909 800.969 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M272.914 654.16 Q276.27 654.878 278.145 657.146 Q280.043 659.415 280.043 662.748 Q280.043 667.864 276.525 670.665 Q273.006 673.466 266.525 673.466 Q264.349 673.466 262.034 673.026 Q259.742 672.609 257.289 671.753 L257.289 667.239 Q259.233 668.373 261.548 668.952 Q263.863 669.53 266.386 669.53 Q270.784 669.53 273.076 667.794 Q275.39 666.058 275.39 662.748 Q275.39 659.692 273.238 657.98 Q271.108 656.243 267.289 656.243 L263.261 656.243 L263.261 652.401 L267.474 652.401 Q270.923 652.401 272.752 651.035 Q274.58 649.646 274.58 647.054 Q274.58 644.392 272.682 642.98 Q270.807 641.544 267.289 641.544 Q265.367 641.544 263.168 641.961 Q260.969 642.378 258.33 643.257 L258.33 639.091 Q260.992 638.35 263.307 637.98 Q265.645 637.609 267.705 637.609 Q273.029 637.609 276.131 640.04 Q279.233 642.447 279.233 646.568 Q279.233 649.438 277.59 651.429 Q275.946 653.396 272.914 654.16 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 641.313 Q295.298 641.313 293.469 644.878 Q291.664 648.419 291.664 655.549 Q291.664 662.655 293.469 666.22 Q295.298 669.762 298.909 669.762 Q302.543 669.762 304.349 666.22 Q306.177 662.655 306.177 655.549 Q306.177 648.419 304.349 644.878 Q302.543 641.313 298.909 641.313 M298.909 637.609 Q304.719 637.609 307.775 642.216 Q310.853 646.799 310.853 655.549 Q310.853 664.276 307.775 668.882 Q304.719 673.466 298.909 673.466 Q293.099 673.466 290.02 668.882 Q286.964 664.276 286.964 655.549 Q286.964 646.799 290.02 642.216 Q293.099 637.609 298.909 637.609 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M271.594 478.949 L259.789 497.398 L271.594 497.398 L271.594 478.949 M270.367 474.875 L276.247 474.875 L276.247 497.398 L281.177 497.398 L281.177 501.287 L276.247 501.287 L276.247 509.435 L271.594 509.435 L271.594 501.287 L255.992 501.287 L255.992 496.773 L270.367 474.875 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 477.954 Q295.298 477.954 293.469 481.518 Q291.664 485.06 291.664 492.19 Q291.664 499.296 293.469 502.861 Q295.298 506.402 298.909 506.402 Q302.543 506.402 304.349 502.861 Q306.177 499.296 306.177 492.19 Q306.177 485.06 304.349 481.518 Q302.543 477.954 298.909 477.954 M298.909 474.25 Q304.719 474.25 307.775 478.856 Q310.853 483.44 310.853 492.19 Q310.853 500.916 307.775 505.523 Q304.719 510.106 298.909 510.106 Q293.099 510.106 290.02 505.523 Q286.964 500.916 286.964 492.19 Q286.964 483.44 290.02 478.856 Q293.099 474.25 298.909 474.25 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M258.793 311.515 L277.15 311.515 L277.15 315.451 L263.076 315.451 L263.076 323.923 Q264.094 323.576 265.113 323.413 Q266.131 323.228 267.15 323.228 Q272.937 323.228 276.316 326.4 Q279.696 329.571 279.696 334.987 Q279.696 340.566 276.224 343.668 Q272.752 346.747 266.432 346.747 Q264.256 346.747 261.988 346.376 Q259.742 346.006 257.335 345.265 L257.335 340.566 Q259.418 341.7 261.641 342.256 Q263.863 342.812 266.34 342.812 Q270.344 342.812 272.682 340.705 Q275.02 338.599 275.02 334.987 Q275.02 331.376 272.682 329.27 Q270.344 327.163 266.34 327.163 Q264.465 327.163 262.59 327.58 Q260.738 327.997 258.793 328.876 L258.793 311.515 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 314.594 Q295.298 314.594 293.469 318.159 Q291.664 321.701 291.664 328.83 Q291.664 335.937 293.469 339.501 Q295.298 343.043 298.909 343.043 Q302.543 343.043 304.349 339.501 Q306.177 335.937 306.177 328.83 Q306.177 321.701 304.349 318.159 Q302.543 314.594 298.909 314.594 M298.909 310.89 Q304.719 310.89 307.775 315.497 Q310.853 320.08 310.853 328.83 Q310.853 337.557 307.775 342.163 Q304.719 346.747 298.909 346.747 Q293.099 346.747 290.02 342.163 Q286.964 337.557 286.964 328.83 Q286.964 320.08 290.02 315.497 Q293.099 310.89 298.909 310.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip062)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1152.27 400.199,1037.24 400.786,927.487 401.372,828.496 401.958,740.13 402.545,657.345 403.131,583.77 403.718,512.86 404.304,450.197 404.891,397.002 405.477,345.412 406.063,300.837 406.65,417.698 407.236,373.332 407.823,333.592 408.409,298.178 408.995,326.794 409.582,352.177 410.168,324.286 410.755,300.6 411.341,279.393 411.927,261.022 412.514,244.691 413.1,231.043 413.687,219.895 414.273,244.937 414.86,238.09 415.446,232.425 416.032,228.661 416.619,227.515 417.205,252.759 417.792,253.679 418.378,277.731 418.964,280.643 419.551,284.191 420.137,289.626 420.724,296.031 421.31,302.948 421.896,310.47 422.483,333.379 423.069,368.277 423.656,376.427 424.242,444.222 424.829,451.706 425.415,469.916 426.001,499.323 426.588,508.337 427.174,517.835 427.761,535.936 428.347,554.191 428.933,570.527 429.52,580.243 430.106,597.146 430.693,619.781 431.279,634.945 431.865,649.867 432.452,676.008 433.038,683.514 433.625,691.159 434.211,703.982 434.798,716.721 435.384,734.223 435.97,742.373 436.557,764.223 437.143,780.241 437.73,788.216 438.316,795.686 438.902,811.392 439.489,827.362 440.075,842.099 440.662,859.692 441.248,869.378 441.835,878.572 442.421,888.378 443.007,894.458 443.594,900.723 444.18,906.891 444.767,922.55 445.353,934.228 445.939,945.18 446.526,953.035 447.112,960.739 447.699,965.743 448.285,978.658 448.871,988.519 449.458,1000.84 450.044,1007.5 450.631,1014.09 451.217,1018.07 451.804,1024.73 452.39,1031.02 452.976,1037.69 453.563,1048.31 454.149,1063.19 454.736,1068.75 455.322,1076.1 455.908,1085.44 456.495,1092.17 457.081,1096.57 457.668,1102.99 458.254,1107.2 458.84,1111.28 459.427,1117.35 460.013,1121.4 460.6,1127.11 461.186,1129.07 461.773,1136.84 462.359,1140.2 462.945,1149.35 463.532,1161.4 464.118,1163.8 464.705,1167.81 465.291,1171.71 465.877,1171.93 466.464,1173.93 467.05,1174.54 467.637,1173.41 468.223,1177.84 468.809,1183.34 469.396,1185.37 469.982,1187.3 470.569,1187.33 471.155,1187.67 471.742,1191.43 472.328,1193.44 472.914,1193.63 473.501,1190.58 474.087,1192.57 474.674,1191.36 475.26,1195.37 475.846,1200.5 476.433,1199.43 477.019,1204.83 477.606,1203.41 478.192,1207.04 478.778,1205.96 479.365,1206.3 479.951,1209.98 480.538,1213.36 481.124,1215.16 481.711,1221.27 482.297,1220.75 482.883,1220.49 483.47,1220.42 484.056,1220.53 484.643,1220.35 485.229,1223.23 485.815,1223.37 486.402,1224.73 486.988,1227.31 487.575,1229.79 488.161,1229.46 488.748,1230.53 489.334,1228.69 489.92,1232.83 490.507,1233.99 491.093,1233.36 491.68,1235.8 492.266,1235.44 492.852,1236.4 493.439,1237.18 494.025,1238.04 494.612,1238.86 495.198,1240.74 495.784,1240.15 496.371,1239.44 496.957,1241.88 497.544,1244.09 498.13,1243.21 498.717,1242.37 499.303,1243.28 499.889,1242.51 500.476,1240.07 501.062,1240.97 501.649,1240.49 502.235,1239.94 502.821,1242.19 503.408,1241.38 503.994,1240.77 504.581,1240.25 505.167,1241.39 505.753,1239.23 506.34,1237.16 506.926,1234.28 507.513,1234.02 508.099,1233.77 508.686,1233.42 509.272,1234.91 509.858,1234.72 510.445,1234.56 511.031,1233.25 511.618,1233.21 512.204,1233.02 512.79,1235.99 513.377,1236.09 513.963,1241.17 514.55,1241.93 515.136,1240.07 515.722,1238.34 516.309,1235.29 516.895,1236.34 517.482,1237.29 518.068,1241.14 518.655,1242.17 519.241,1241.51 519.827,1242.79 520.414,1242.23 521,1241.72 521.587,1242.42 522.173,1246.19 522.759,1245.54 523.346,1246.45 523.932,1245.72 524.519,1243.47 525.105,1245.41 525.691,1244.54 526.278,1244.01 526.864,1245.97 527.451,1246.56 528.037,1247.26 528.624,1248.94 529.21,1250.53 529.796,1249.1 530.383,1246.7 530.969,1245.99 531.556,1245.2 532.142,1245.6 532.728,1244.66 533.315,1242.53 533.901,1240.65 534.488,1239.98 535.074,1239 535.661,1235.67 536.247,1234.28 536.833,1234.28 537.42,1236.62 538.006,1234.99 538.593,1235.04 539.179,1235.94 539.765,1235.49 540.352,1238.02 540.938,1240.43 541.525,1242.55 542.111,1239.97 542.697,1238.03 543.284,1240.31 543.87,1239.75 544.457,1242.1 545.043,1241.35 545.63,1240.96 546.216,1240.43 546.802,1239.92 547.389,1239.34 547.975,1241.31 548.562,1243.19 549.148,1242.71 549.734,1243.59 550.321,1241.32 550.907,1239.34 551.494,1240.23 552.08,1239.56 552.666,1238.9 553.253,1238.44 553.839,1238.05 554.426,1237.55 555.012,1239.78 555.599,1236.51 556.185,1234.85 556.771,1231.85 557.358,1234.18 557.944,1235.26 558.531,1233.45 559.117,1233.1 559.703,1232.92 560.29,1233.91 560.876,1234.91 561.463,1233.05 562.049,1235.29 562.635,1231.92 563.222,1234.44 563.808,1235.32 564.395,1235.19 564.981,1234.7 565.568,1235.65 566.154,1235.48 566.74,1238 567.327,1237.28 567.913,1236.66 568.5,1234.8 569.086,1237.1 569.672,1237.86 570.259,1238.65 570.845,1236.72 571.432,1238.97 572.018,1241.05 572.605,1240.36 573.191,1236.91 573.777,1234.79 574.364,1234.25 574.95,1231.12 575.537,1230.85 576.123,1231.94 576.709,1229.08 577.296,1228.88 577.882,1227.47 578.469,1225.8 579.055,1227.19 579.641,1224.31 580.228,1224.65 580.814,1225.94 581.401,1225.96 581.987,1225.75 582.574,1225.8 583.16,1225.69 583.746,1226.82 584.333,1226.63 584.919,1226.57 585.506,1226.52 586.092,1225.03 586.678,1227.68 587.265,1227.3 587.851,1230.06 588.438,1232.27 589.024,1231.92 589.61,1235.67 590.197,1233.54 590.783,1233.13 591.37,1232.83 591.956,1232.4 592.543,1232.3 593.129,1231.71 593.715,1232.72 594.302,1234.93 594.888,1235.38 595.475,1233.27 596.061,1233.87 596.647,1231.93 597.234,1234.49 597.82,1232.53 598.407,1230.54 598.993,1231.6 599.579,1235.15 600.166,1234.72 600.752,1234.27 601.339,1234.93 601.925,1235.68 602.512,1236.5 603.098,1234.3 603.684,1232.45 604.271,1230.89 604.857,1228 605.444,1230.44 606.03,1232.71 606.616,1230.88 607.203,1228.99 607.789,1228.79 608.376,1229.76 608.962,1229.31 609.548,1230.37 610.135,1229.82 610.721,1230.52 611.308,1228.57 611.894,1227 612.481,1226.76 613.067,1230.54 613.653,1230.46 614.24,1232.89 614.826,1228.09 615.413,1226.56 615.999,1224.75 616.585,1224.87 617.172,1227.35 617.758,1228.4 618.345,1226.56 618.931,1227.57 619.518,1228.75 620.104,1229.57 620.69,1227.73 621.277,1225.93 621.863,1225.75 622.45,1222.65 623.036,1222.62 623.622,1224.05 624.209,1224.1 624.795,1221.28 625.382,1222.78 625.968,1224.02 626.554,1226.49 627.141,1227.21 627.727,1226.89 628.314,1227.9 628.9,1227.54 629.487,1226.13 630.073,1225.77 630.659,1224.36 631.246,1224.16 631.832,1222.55 632.419,1222.28 633.005,1224.63 633.591,1223.17 634.178,1219.16 634.764,1219.05 635.351,1219.05 635.937,1217.84 636.523,1216.65 637.11,1218.48 637.696,1218.78 638.283,1221.48 638.869,1219.98 639.456,1218.45 640.042,1216.98 640.628,1215.79 641.215,1216.17 641.801,1218.96 642.388,1218.83 642.974,1218.58 643.56,1218.33 644.147,1218.62 644.733,1216.07 645.32,1216.43 645.906,1217.87 646.492,1219.63 647.079,1219.55 647.665,1218.1 648.252,1218.29 648.838,1218.3 649.425,1219.67 650.011,1219.37 650.597,1219.43 651.184,1219.27 651.77,1217.78 652.357,1217.76 652.943,1216.57 653.529,1217.95 654.116,1220.74 654.702,1219.44 655.289,1222.36 655.875,1223.36 656.462,1221.57 657.048,1220.3 657.634,1218.75 658.221,1220.22 658.807,1218.88 659.394,1219.01 659.98,1223.04 660.566,1224.01 661.153,1225.07 661.739,1222.12 662.326,1220.79 662.912,1220.71 663.498,1218 664.085,1216.81 664.671,1217.12 665.258,1215.76 665.844,1216.07 666.431,1220.08 667.017,1220.09 667.603,1221.27 668.19,1221.17 668.776,1222.38 669.363,1222.11 669.949,1223.48 670.535,1227.22 671.122,1227.03 671.708,1228.16 672.295,1227.54 672.881,1226.91 673.467,1224.71 674.054,1224.21 674.64,1223.87 675.227,1225.02 675.813,1225.9 676.4,1222.69 676.986,1220.95 677.572,1222.41 678.159,1221.92 678.745,1223.02 679.332,1224 679.918,1222.16 680.504,1223.08 681.091,1224.03 681.677,1222.48 682.264,1224.84 682.85,1224.75 683.436,1224.5 684.023,1225.67 684.609,1228.19 685.196,1225.2 685.782,1224.79 686.369,1224.51 686.955,1222.41 687.541,1221.04 688.128,1220.76 688.714,1221.76 689.301,1218.81 689.887,1217.73 690.473,1217.97 691.06,1221.07 691.646,1218.34 692.233,1217.07 692.819,1217.26 693.405,1217.31 693.992,1215.93 694.578,1213.47 695.165,1213.93 695.751,1213.01 696.338,1210.74 696.924,1207.07 697.51,1207.46 698.097,1209.25 698.683,1210.01 699.27,1211.73 699.856,1210.91 700.442,1209.68 701.029,1208.63 701.615,1210.47 702.202,1213.54 702.788,1213.92 703.375,1215.38 703.961,1215.39 704.547,1214.12 705.134,1213.03 705.72,1213.01 706.307,1216.89 706.893,1218 707.479,1217.99 708.066,1218.2 708.652,1219.42 709.239,1221.78 709.825,1223.04 710.411,1222.75 710.998,1226.41 711.584,1226.1 712.171,1222.93 712.757,1221.08 713.344,1222.13 713.93,1223.24 714.516,1220.21 715.103,1222.76 715.689,1221.18 716.276,1223.43 716.862,1221.42 717.448,1222.49 718.035,1220.94 718.621,1219.39 719.208,1215.21 719.794,1215.1 720.38,1215.06 720.967,1216.73 721.553,1215.38 722.14,1218.17 722.726,1217.98 723.313,1218.09 723.899,1219.28 724.485,1216.53 725.072,1217.76 725.658,1217.56 726.245,1218.88 726.831,1216.08 727.417,1216.14 728.004,1216.25 728.59,1215.91 729.177,1216 729.763,1216.15 730.349,1216.03 730.936,1217.54 731.522,1216.1 732.109,1216.15 732.695,1217.2 733.282,1219.89 733.868,1220.9 734.454,1222.25 735.041,1221.7 735.627,1224.07 736.214,1222.66 736.8,1222.32 737.386,1221.79 737.973,1222.87 738.559,1222.68 739.146,1222.55 739.732,1223.5 740.318,1223.09 740.905,1222.55 741.491,1223.55 742.078,1221.79 742.664,1218.69 743.251,1217.24 743.837,1218.44 744.423,1219.46 745.01,1215.24 745.596,1216.67 746.183,1212.38 746.769,1213.69 747.355,1214.01 747.942,1214.07 748.528,1215.55 749.115,1215.43 749.701,1215.14 750.288,1213.9 750.874,1212.43 751.46,1209.98 752.047,1212.96 752.633,1213.31 753.22,1213.45 753.806,1213.54 754.392,1210.82 754.979,1213.68 755.565,1216.41 756.152,1216.25 756.738,1217.33 757.324,1221.42 757.911,1221.17 758.497,1220.89 759.084,1221.87 759.67,1221.55 760.257,1222.37 760.843,1220.46 761.429,1220.2 762.016,1221.29 762.602,1223.67 763.189,1223.23 763.775,1222.87 764.361,1222.48 764.948,1220.64 765.534,1220.55 766.121,1221.41 766.707,1220.91 767.293,1216.93 767.88,1215.24 768.466,1216.61 769.053,1216.41 769.639,1219.07 770.226,1218.84 770.812,1220.01 771.398,1219.76 771.985,1216.75 772.571,1216.83 773.158,1219.47 773.744,1219.18 774.33,1221.66 774.917,1221.15 775.503,1219.13 776.09,1218.96 776.676,1217.29 777.262,1218.38 777.849,1218.08 778.435,1217.78 779.022,1216.48 779.608,1213.78 780.195,1213.75 780.781,1212.6 781.367,1215.46 781.954,1211.53 782.54,1212.9 783.127,1213.25 783.713,1213.35 784.299,1212.08 784.886,1212.1 785.472,1213.56 786.059,1213.59 786.645,1211.11 787.232,1211.38 787.818,1211.62 788.404,1213.26 788.991,1212.29 789.577,1212.85 790.164,1211.6 790.75,1211.92 791.336,1209.44 791.923,1209.78 792.509,1210.22 793.096,1209.18 793.682,1208.08 794.268,1209.78 794.855,1209.98 795.441,1211.77 796.028,1212.04 796.614,1212.28 797.201,1212.55 797.787,1215.38 798.373,1212.39 798.96,1212.48 799.546,1212.59 800.133,1212.9 800.719,1212.84 801.305,1214.62 801.892,1214.71 802.478,1216.05 803.065,1217.61 803.651,1217.25 804.237,1215.68 804.824,1216.88 805.41,1215.47 805.997,1216.65 806.583,1217.84 807.17,1216.31 807.756,1217.53 808.342,1220.11 808.929,1218.52 809.515,1219.32 810.102,1219 810.688,1217.45 811.274,1214.35 811.861,1214.56 812.447,1217.29 813.034,1219.77 813.62,1219.07 814.206,1218.84 814.793,1218.63 815.379,1215.77 815.966,1215.58 816.552,1216.9 817.139,1216.79 817.725,1216.54 818.311,1220.55 818.898,1217.66 819.484,1217.45 820.071,1220.01 820.657,1222.39 821.243,1224.41 821.83,1223.68 822.416,1222.89 823.003,1223.65 823.589,1221.65 824.175,1220.09 824.762,1220.95 825.348,1220.86 825.935,1220.53 826.521,1220.23 827.108,1219.83 827.694,1219.44 828.28,1216.2 828.867,1216.15 829.453,1213.22 830.04,1210.76 830.626,1209.64 831.212,1208.52 831.799,1208.71 832.385,1210.11 832.972,1209.14 833.558,1209.29 834.145,1208.47 834.731,1208.77 835.317,1208.9 835.904,1209.5 836.49,1208.37 837.077,1214.1 837.663,1216.5 838.249,1217.8 838.836,1217.76 839.422,1219.16 840.009,1221.34 840.595,1222.34 841.181,1220.66 841.768,1220.18 842.354,1221 842.941,1223.21 843.527,1222.72 844.114,1224.95 844.7,1222.91 845.286,1220.84 845.873,1220.44 846.459,1220.05 847.046,1215.88 847.632,1216.95 848.218,1218.22 848.805,1219.26 849.391,1219 849.978,1217.22 850.564,1215.76 851.15,1219.75 851.737,1220.66 852.323,1216.33 852.91,1214.83 853.496,1213.14 854.083,1212.97 854.669,1211.59 855.255,1212.8 855.842,1212.48 856.428,1211.42 857.015,1211.61 857.601,1211.88 858.187,1214.61 858.774,1215.93 859.36,1215.86 859.947,1216.8 860.533,1219.36 861.119,1224.15 861.706,1222.35 862.292,1220.65 862.879,1213.81 863.465,1213.87 864.052,1215.16 864.638,1215.03 865.224,1213.62 865.811,1216.24 866.397,1216.2 866.984,1214.77 867.57,1213.72 868.156,1210.82 868.743,1212.72 869.329,1216.7 869.916,1217.67 870.502,1218.58 871.089,1218.13 871.675,1214.93 872.261,1214.81 872.848,1213.39 873.434,1213.34 874.021,1210.8 874.607,1212.17 875.193,1213.43 875.78,1220.07 876.366,1216.94 876.953,1215.29 877.539,1218.99 878.125,1216.04 878.712,1219.65 879.298,1223.26 879.885,1221.27 880.471,1218.22 881.058,1217.78 881.644,1217.47 882.23,1217.25 882.817,1216.98 883.403,1218.35 883.99,1213.76 884.576,1212.22 885.162,1212.32 885.749,1214.93 886.335,1214.84 886.922,1212.24 887.508,1213.45 888.094,1213.54 888.681,1211.18 889.267,1211.23 889.854,1212.46 890.44,1211.08 891.027,1212.29 891.613,1209.67 892.199,1209.67 892.786,1209.93 893.372,1210.05 893.959,1212.71 894.545,1212.83 895.131,1212.62 895.718,1212.64 896.304,1215.31 896.891,1212.85 897.477,1212.87 898.063,1212.93 898.65,1212.85 899.236,1212.73 899.823,1212.58 900.409,1211.07 900.996,1215.04 901.582,1215.08 902.168,1216.3 902.755,1214.94 903.341,1216.22 903.928,1213.42 904.514,1213.33 905.1,1214.35 905.687,1215.54 906.273,1214.09 906.86,1209.94 907.446,1208.9 908.032,1210.52 908.619,1212.15 909.205,1212.1 909.792,1210.92 910.378,1212.34 910.965,1211.12 911.551,1211.32 912.137,1212.82 912.724,1212.52 913.31,1209.94 913.897,1208.83 914.483,1207.79 915.069,1205.67 915.656,1205.87 916.242,1208.93 916.829,1209.36 917.415,1205.78 918.002,1208.8 918.588,1209.22 919.174,1208.22 919.761,1209.91 920.347,1208.88 920.934,1210.61 921.52,1206.74 922.106,1209.79 922.693,1212.42 923.279,1211.27 923.866,1210.01 924.452,1209.95 925.038,1208.61 925.625,1208.58 926.211,1212.76 926.798,1216.63 927.384,1213.91 927.971,1212.64 928.557,1214.09 929.143,1209.99 929.73,1208.89 930.316,1207.79 930.903,1207.85 931.489,1209.47 932.075,1208.26 932.662,1207.12 933.248,1207.34 933.835,1210.33 934.421,1212 935.007,1213.02 935.594,1212.86 936.18,1213.99 936.767,1215.22 937.353,1211.34 937.94,1214.06 938.526,1213.76 939.112,1212.26 939.699,1211.1 940.285,1212.8 940.872,1214 941.458,1213.85 942.044,1212.45 942.631,1215.03 943.217,1214.66 943.804,1217.07 944.39,1217.12 944.976,1217 945.563,1216.77 946.149,1216.59 946.736,1217.32 947.322,1220.92 947.909,1221.96 948.495,1219.12 949.081,1218.79 949.668,1219.72 950.254,1220.7 950.841,1221.36 951.427,1220.51 952.013,1218.67 952.6,1219.8 953.186,1219.1 953.773,1217.44 954.359,1215.51 954.945,1211.26 955.532,1209.87 956.118,1211.3 956.705,1212.43 957.291,1213.7 957.878,1212.25 958.464,1211.06 959.05,1212.55 959.637,1211.2 960.223,1210.02 960.81,1211.28 961.396,1212.56 961.982,1213.58 962.569,1212.49 963.155,1211.16 963.742,1216.29 964.328,1215 964.915,1216.01 965.501,1214.77 966.087,1213.04 966.674,1215.78 967.26,1217.16 967.847,1216.68 968.433,1214.79 969.019,1215.77 969.606,1217.01 970.192,1216.45 970.779,1213.25 971.365,1212.05 971.951,1209.27 972.538,1206.92 973.124,1207.18 973.711,1212.82 974.297,1212.98 974.884,1211.58 975.47,1208.94 976.056,1207.68 976.643,1209.18 977.229,1206.48 977.816,1206.66 978.402,1208.1 978.988,1207.06 979.575,1209.81 980.161,1209.75 980.748,1207.22 981.334,1206.06 981.92,1207.85 982.507,1206.69 983.093,1209.99 983.68,1208.26 984.266,1207.15 984.853,1207.29 985.439,1206.28 986.025,1208.15 986.612,1207.1 987.198,1204.96 987.785,1205.42 988.371,1207.09 988.957,1206.05 989.544,1205.15 990.13,1201.53 990.717,1203.14 991.303,1206.46 991.889,1208.04 992.476,1211.17 993.062,1211.17 993.649,1208.73 994.235,1208.86 994.822,1207.57 995.408,1206.61 995.994,1205.61 996.581,1206.15 997.167,1207.66 997.754,1206.81 998.34,1207.02 998.926,1208.8 999.513,1208.51 1000.1,1208.44 1000.69,1208.66 1001.27,1207.32 1001.86,1208.88 1002.44,1207.79 1003.03,1209.33 1003.62,1210.73 1004.2,1209.65 1004.79,1209.83 1005.38,1210.24 1005.96,1210.34 1006.55,1210.47 1007.14,1210.24 1007.72,1209.2 1008.31,1208.15 1008.9,1208.39 1009.48,1208.57 1010.07,1208.83 1010.65,1212.97 1011.24,1212.86 1011.83,1215.31 1012.41,1216.51 1013,1214.94 1013.59,1213.67 1014.17,1213.45 1014.76,1210.84 1015.35,1209.64 1015.93,1209.94 1016.52,1209.96 1017.11,1214.02 1017.69,1212.59 1018.28,1211.4 1018.86,1211.72 1019.45,1214.8 1020.04,1214.58 1020.62,1215.78 1021.21,1216.87 1021.8,1216.65 1022.38,1214.97 1022.97,1217.52 1023.56,1214.72 1024.14,1217.41 1024.73,1216.1 1025.32,1213.33 1025.9,1213.33 1026.49,1213.2 1027.07,1210.45 1027.66,1210.57 1028.25,1209.48 1028.83,1212.23 1029.42,1211.04 1030.01,1209.92 1030.59,1211.56 1031.18,1211.55 1031.77,1212.79 1032.35,1211.22 1032.94,1211.35 1033.52,1211.28 1034.11,1210.22 1034.7,1210.48 1035.28,1209.18 1035.87,1210.58 1036.46,1210.61 1037.04,1210.77 1037.63,1208.43 1038.22,1211.37 1038.8,1210.33 1039.39,1208.08 1039.98,1206.94 1040.56,1207.16 1041.15,1207.44 1041.73,1205.15 1042.32,1204.21 1042.91,1200.63 1043.49,1199.89 1044.08,1197.76 1044.67,1197.16 1045.25,1196.56 1045.84,1201.27 1046.43,1200.49 1047.01,1202.37 1047.6,1202.69 1048.19,1204.71 1048.77,1203.86 1049.36,1200.5 1049.94,1199.79 1050.53,1200.51 1051.12,1202.47 1051.7,1204.23 1052.29,1204.59 1052.88,1206.31 1053.46,1206.83 1054.05,1209.79 1054.64,1207.3 1055.22,1212.97 1055.81,1212.86 1056.39,1213.89 1056.98,1213.68 1057.57,1213.74 1058.15,1211.11 1058.74,1212.57 1059.33,1211.25 1059.91,1210 1060.5,1212.82 1061.09,1213.92 1061.67,1213.64 1062.26,1210.83 1062.85,1213.33 1063.43,1213.74 1064.02,1212.48 1064.6,1212.58 1065.19,1211.05 1065.78,1211.21 1066.36,1211.31 1066.95,1211.37 1067.54,1211.37 1068.12,1209.98 1068.71,1211.34 1069.3,1212.65 1069.88,1212.74 1070.47,1212.48 1071.06,1210.93 1071.64,1209.9 1072.23,1209.86 1072.81,1212.69 1073.4,1208.65 1073.99,1207.3 1074.57,1206.09 1075.16,1207.75 1075.75,1209.22 1076.33,1209.47 1076.92,1206.94 1077.51,1210.09 1078.09,1211.55 1078.68,1211.89 1079.26,1211.91 1079.85,1212.02 1080.44,1211.85 1081.02,1210.53 1081.61,1209.52 1082.2,1209.8 1082.78,1211.36 1083.37,1212.84 1083.96,1211.72 1084.54,1214.51 1085.13,1215.45 1085.72,1216.58 1086.3,1217.37 1086.89,1216.96 1087.47,1219.12 1088.06,1217.67 1088.65,1217.49 1089.23,1218.23 1089.82,1217.72 1090.41,1217.41 1090.99,1217.16 1091.58,1218.08 1092.17,1216.45 1092.75,1216.14 1093.34,1214.55 1093.93,1212.96 1094.51,1212.8 1095.1,1211.24 1095.68,1211.23 1096.27,1211.04 1096.86,1209.81 1097.44,1208.64 1098.03,1212.96 1098.62,1212.65 1099.2,1212.41 1099.79,1212.28 1100.38,1212.37 1100.96,1209.52 1101.55,1210.92 1102.14,1209.56 1102.72,1210.91 1103.31,1210.69 1103.89,1212.19 1104.48,1210.72 1105.07,1213.47 1105.65,1214.39 1106.24,1215.87 1106.83,1215.67 1107.41,1215.78 1108,1218.28 1108.59,1215.39 1109.17,1213.67 1109.76,1214.79 1110.34,1211.96 1110.93,1213.22 1111.52,1213.06 1112.1,1211.9 1112.69,1208.82 1113.28,1204.81 1113.86,1205.27 1114.45,1209.36 1115.04,1210.36 1115.62,1214.09 1116.21,1213.84 1116.8,1214.03 1117.38,1215.11 1117.97,1216.11 1118.55,1217.04 1119.14,1219.33 1119.73,1219.12 1120.31,1219.99 1120.9,1220.83 1121.49,1220.06 1122.07,1219.81 1122.66,1218.04 1123.25,1218.96 1123.83,1218.37 1124.42,1217.91 1125.01,1217.82 1125.59,1215.04 1126.18,1215.87 1126.76,1218.21 1127.35,1217.88 1127.94,1215.1 1128.52,1215.08 1129.11,1214.54 1129.7,1215.61 1130.28,1215.2 1130.87,1216.31 1131.46,1215.93 1132.04,1213.12 1132.63,1211.81 1133.21,1210.58 1133.8,1209.08 1134.39,1210.41 1134.97,1211.57 1135.56,1211.45 1136.15,1211.46 1136.73,1209.87 1137.32,1210.07 1137.91,1210.18 1138.49,1211.65 1139.08,1210.24 1139.67,1212.74 1140.25,1211.36 1140.84,1211.16 1141.42,1209.71 1142.01,1212.39 1142.6,1211.05 1143.18,1212.48 1143.77,1212.28 1144.36,1212.13 1144.94,1209.56 1145.53,1209.92 1146.12,1208.64 1146.7,1211.62 1147.29,1210.42 1147.88,1207.95 1148.46,1212.06 1149.05,1212.2 1149.63,1212.21 1150.22,1214.62 1150.81,1217.16 1151.39,1215.39 1151.98,1216.47 1152.57,1216.13 1153.15,1214.79 1153.74,1215.66 1154.33,1216.54 1154.91,1216.36 1155.5,1213.35 1156.09,1216.07 1156.67,1216.95 1157.26,1217.64 1157.84,1214.85 1158.43,1213.55 1159.02,1213.26 1159.6,1211.85 1160.19,1210.42 1160.78,1209.04 1161.36,1209.22 1161.95,1209.51 1162.54,1206.71 1163.12,1212.51 1163.71,1212.23 1164.29,1213.28 1164.88,1209.18 1165.47,1210.42 1166.05,1209.02 1166.64,1211.79 1167.23,1211.67 1167.81,1210.24 1168.4,1211.51 1168.99,1210.14 1169.57,1210.39 1170.16,1206.34 1170.75,1206.42 1171.33,1205.36 1171.92,1206.9 1172.5,1205.78 1173.09,1207.3 1173.68,1207.84 1174.26,1209.4 1174.85,1210.73 1175.44,1209.84 1176.02,1210.01 1176.61,1208.81 1177.2,1207.83 1177.78,1206.72 1178.37,1206.83 1178.96,1207.37 1179.54,1206.25 1180.13,1207.99 1180.71,1210.54 1181.3,1212.04 1181.89,1213.69 1182.47,1214.76 1183.06,1211.87 1183.65,1209.2 1184.23,1209.15 1184.82,1206.4 1185.41,1206.63 1185.99,1204.14 1186.58,1203.22 1187.16,1204.88 1187.75,1208.07 1188.34,1208.32 1188.92,1207.16 1189.51,1210.11 1190.1,1214.21 1190.68,1212.68 1191.27,1214.32 1191.86,1214.05 1192.44,1215.21 1193.03,1218.74 1193.62,1214.68 1194.2,1213.31 1194.79,1213.34 1195.37,1213.13 1195.96,1213.05 1196.55,1212.95 1197.13,1212.89 1197.72,1215.46 1198.31,1214.09 1198.89,1212.81 1199.48,1211.31 1200.07,1211.44 1200.65,1208.87 1201.24,1206.5 1201.83,1206.65 1202.41,1207.27 1203,1206.2 1203.58,1206.42 1204.17,1207.97 1204.76,1207.96 1205.34,1206.84 1205.93,1205.73 1206.52,1208.72 1207.1,1208 1207.69,1208.13 1208.28,1208.19 1208.86,1208.49 1209.45,1205.91 1210.03,1207.48 1210.62,1206.6 1211.21,1205.61 1211.79,1205.8 1212.38,1207 1212.97,1211.44 1213.55,1212.66 1214.14,1211.46 1214.73,1210.13 1215.31,1206.03 1215.9,1206.2 1216.49,1205.27 1217.07,1205.82 1217.66,1207.58 1218.24,1206.32 1218.83,1206.61 1219.42,1206.99 1220,1209.99 1220.59,1210.16 1221.18,1206.39 1221.76,1207.99 1222.35,1209.53 1222.94,1209.69 1223.52,1208.32 1224.11,1210.03 1224.7,1212.77 1225.28,1212.76 1225.87,1211.33 1226.45,1211.17 1227.04,1212.64 1227.63,1212.66 1228.21,1212.56 1228.8,1211.39 1229.39,1212.93 1229.97,1216.73 1230.56,1219.2 1231.15,1218.98 1231.73,1218.5 1232.32,1219.43 1232.91,1219.02 1233.49,1216.25 1234.08,1217.36 1234.66,1218.18 1235.25,1217.92 1235.84,1216.27 1236.42,1216.01 1237.01,1218.24 1237.6,1216.5 1238.18,1216.36 1238.77,1217.29 1239.36,1219.58 1239.94,1221.89 1240.53,1219.82 1241.11,1219.2 1241.7,1218.79 1242.29,1215.75 1242.87,1213.16 1243.46,1213.08 1244.05,1214.18 1244.63,1211.21 1245.22,1208.47 1245.81,1208.6 1246.39,1207.39 1246.98,1207.36 1247.57,1207.59 1248.15,1205.22 1248.74,1206.53 1249.32,1209.46 1249.91,1210.74 1250.5,1211.92 1251.08,1213.4 1251.67,1212.05 1252.26,1214.47 1252.84,1215.85 1253.43,1214.51 1254.02,1218.27 1254.6,1216.62 1255.19,1216.43 1255.78,1216.21 1256.36,1214.72 1256.95,1213.55 1257.53,1213.34 1258.12,1210.92 1258.71,1212.27 1259.29,1214.73 1259.88,1212.23 1260.47,1212.02 1261.05,1212 1261.64,1209.33 1262.23,1208.29 1262.81,1207.13 1263.4,1209.93 1263.98,1207.21 1264.57,1207.55 1265.16,1208.89 1265.74,1211.68 1266.33,1211.64 1266.92,1210.6 1267.5,1209.41 1268.09,1209.64 1268.68,1210.81 1269.26,1210.66 1269.85,1212.14 1270.44,1210.74 1271.02,1210.65 1271.61,1212.01 1272.19,1211.96 1272.78,1212.01 1273.37,1213.17 1273.95,1214.41 1274.54,1213.11 1275.13,1213.57 1275.71,1215.1 1276.3,1217.84 1276.89,1217.45 1277.47,1219.62 1278.06,1216.49 1278.65,1214.92 1279.23,1216.27 1279.82,1216.31 1280.4,1218.59 1280.99,1222 1281.58,1219 1282.16,1217.05 1282.75,1216.91 1283.34,1218.03 1283.92,1219.01 1284.51,1219.71 1285.1,1220.47 1285.68,1218.64 1286.27,1220.72 1286.86,1220.32 1287.44,1220.98 1288.03,1219 1288.61,1218.4 1289.2,1216.5 1289.79,1217.74 1290.37,1220.06 1290.96,1216.94 1291.55,1215.3 1292.13,1214.82 1292.72,1212.02 1293.31,1210.68 1293.89,1209.21 1294.48,1209.73 1295.06,1212.65 1295.65,1212.5 1296.24,1209.75 1296.82,1211.19 1297.41,1209.92 1298,1207.22 1298.58,1207.29 1299.17,1207.44 1299.76,1209.05 1300.34,1210.44 1300.93,1210.39 1301.52,1209.26 1302.1,1207.97 1302.69,1208.3 1303.27,1208.22 1303.86,1209.92 1304.45,1208.59 1305.03,1211.28 1305.62,1209.62 1306.21,1213.67 1306.79,1209.45 1307.38,1211.17 1307.97,1215.33 1308.55,1215.13 1309.14,1216.25 1309.73,1213.23 1310.31,1211.81 1310.9,1211.68 1311.48,1211.24 1312.07,1210.13 1312.66,1210.02 1313.24,1208.69 1313.83,1207.39 1314.42,1206.75 1315,1207.12 1315.59,1207.19 1316.18,1211.51 1316.76,1212.98 1317.35,1213.03 1317.93,1214.41 1318.52,1212.92 1319.11,1210.17 1319.69,1214.44 1320.28,1214.32 1320.87,1215.42 1321.45,1217.62 1322.04,1217.36 1322.63,1218.03 1323.21,1215.02 1323.8,1214.9 1324.39,1214.93 1324.97,1213.27 1325.56,1212.22 1326.14,1210.91 1326.73,1213.47 1327.32,1213.47 1327.9,1215.93 1328.49,1217.16 1329.08,1216.96 1329.66,1212.57 1330.25,1211.14 1330.84,1211.27 1331.42,1212.78 1332.01,1211.56 1332.6,1207.34 1333.18,1207.67 1333.77,1206.47 1334.35,1206.95 1334.94,1207.05 1335.53,1208.71 1336.11,1207.12 1336.7,1205.94 1337.29,1206.08 1337.87,1204.93 1338.46,1204.05 1339.05,1205.77 1339.63,1206.24 1340.22,1203.83 1340.8,1202.95 1341.39,1201.9 1341.98,1202.35 1342.56,1201.5 1343.15,1203.52 1343.74,1201.59 1344.32,1200.86 1344.91,1201.21 1345.5,1204.47 1346.08,1204.71 1346.67,1205.06 1347.26,1205.52 1347.84,1205.73 1348.43,1205.82 1349.01,1204.65 1349.6,1204.81 1350.19,1206.59 1350.77,1205.38 1351.36,1205.61 1351.95,1207.34 1352.53,1207.66 1353.12,1209.36 1353.71,1207.99 1354.29,1208 1354.88,1206.69 1355.47,1205.61 1356.05,1207.24 1356.64,1207.45 1357.22,1207.64 1357.81,1209.11 1358.4,1205.25 1358.98,1209.6 1359.57,1211.21 1360.16,1210.88 1360.74,1212.33 1361.33,1212.26 1361.92,1214.98 1362.5,1214.73 1363.09,1216.04 1363.68,1215.64 1364.26,1216.46 1364.85,1214.85 1365.43,1213.52 1366.02,1214.65 1366.61,1213.21 1367.19,1211.73 1367.78,1212.94 1368.37,1213.18 1368.95,1212.9 1369.54,1212.74 1370.13,1212.46 1370.71,1212.3 1371.3,1213.43 1371.88,1211.97 1372.47,1210.42 1373.06,1209.01 1373.64,1209.11 1374.23,1207.87 1374.82,1209.3 1375.4,1212.1 1375.99,1210.65 1376.58,1210.6 1377.16,1215.85 1377.75,1213 1378.34,1214.18 1378.92,1216.72 1379.51,1217.75 1380.09,1220.1 1380.68,1222.39 1381.27,1223.01 1381.85,1222.4 1382.44,1224.33 1383.03,1221.98 1383.61,1221.39 1384.2,1219.67 1384.79,1215.4 1385.37,1216.63 1385.96,1215.2 1386.55,1216.32 1387.13,1217.4 1387.72,1217.21 1388.3,1212.57 1388.89,1213.62 1389.48,1215.81 1390.06,1210.07 1390.65,1212.4 1391.24,1213.67 1391.82,1216.3 1392.41,1217.24 1393,1216.79 1393.58,1216.69 1394.17,1211.13 1394.75,1208.68 1395.34,1207.47 1395.93,1206.29 1396.51,1205.16 1397.1,1207.05 1397.69,1205.73 1398.27,1208.62 1398.86,1208.7 1399.45,1210.16 1400.03,1210.37 1400.62,1211.9 1401.21,1214.62 1401.79,1214.6 1402.38,1214.08 1402.96,1215.36 1403.55,1216.3 1404.14,1217.36 1404.72,1215.81 1405.31,1218.09 1405.9,1220.44 1406.48,1218.78 1407.07,1219.95 1407.66,1218.37 1408.24,1219.17 1408.83,1220.21 1409.42,1218.61 1410,1217.06 1410.59,1214.28 1411.17,1212.7 1411.76,1211.61 1412.35,1210.17 1412.93,1211.31 1413.52,1211.31 1414.11,1212.74 1414.69,1214.02 1415.28,1212.53 1415.87,1212.63 1416.45,1212.65 1417.04,1216.44 1417.63,1212.29 1418.21,1211.98 1418.8,1211.91 1419.38,1214.45 1419.97,1212.68 1420.56,1217.72 1421.14,1213.42 1421.73,1211.9 1422.32,1211.56 1422.9,1211.42 1423.49,1215.61 1424.08,1217.99 1424.66,1219.06 1425.25,1217.37 1425.83,1215.76 1426.42,1214.24 1427.01,1216.83 1427.59,1213.72 1428.18,1211 1428.77,1209.76 1429.35,1208.67 1429.94,1207.44 1430.53,1207.53 1431.11,1205.21 1431.7,1205.61 1432.29,1201.88 1432.87,1202.55 1433.46,1202.97 1434.04,1203.21 1434.63,1202.19 1435.22,1202.37 1435.8,1203.05 1436.39,1204.9 1436.98,1204.12 1437.56,1204.3 1438.15,1204.49 1438.74,1202.3 1439.32,1206.77 1439.91,1208.38 1440.5,1207.14 1441.08,1206.31 1441.67,1205.22 1442.25,1204.19 1442.84,1204.47 1443.43,1202.5 1444.01,1201.43 1444.6,1202.27 1445.19,1207.99 1445.77,1205.9 1446.36,1206.08 1446.95,1206.56 1447.53,1208.59 1448.12,1208.67 1448.7,1208.85 1449.29,1208.72 1449.88,1207.4 1450.46,1207.58 1451.05,1207.85 1451.64,1209.51 1452.22,1212.27 1452.81,1207.93 1453.4,1208.08 1453.98,1206.72 1454.57,1205.67 1455.16,1205.71 1455.74,1209.9 1456.33,1211.4 1456.91,1210.01 1457.5,1209.72 1458.09,1211.29 1458.67,1211.24 1459.26,1210.05 1459.85,1207.32 1460.43,1204.87 1461.02,1206.7 1461.61,1206.91 1462.19,1205.61 1462.78,1204.87 1463.37,1205.48 1463.95,1205.57 1464.54,1205.8 1465.12,1207.6 1465.71,1209.22 1466.3,1208.04 1466.88,1208.21 1467.47,1208.3 1468.06,1207.34 1468.64,1207.57 1469.23,1206.38 1469.82,1206.76 1470.4,1208.16 1470.99,1208.37 1471.57,1212.32 1472.16,1212.11 1472.75,1212.37 1473.33,1212.39 1473.92,1210.85 1474.51,1209.73 1475.09,1209.72 1475.68,1209.86 1476.27,1208.41 1476.85,1211.46 1477.44,1212.89 1478.03,1215.42 1478.61,1216.57 1479.2,1216.38 1479.78,1219.86 1480.37,1221.8 1480.96,1221.22 1481.54,1222.09 1482.13,1220.36 1482.72,1219.9 1483.3,1220.93 1483.89,1220.48 1484.48,1219.93 1485.06,1219.62 1485.65,1218.08 1486.24,1216.55 1486.82,1216.19 1487.41,1217.06 1487.99,1215.5 1488.58,1216.74 1489.17,1215.01 1489.75,1214.76 1490.34,1212.82 1490.93,1212.98 1491.51,1210.31 1492.1,1210.27 1492.69,1210.61 1493.27,1212.06 1493.86,1210.81 1494.45,1209.53 1495.03,1212.21 1495.62,1210.79 1496.2,1209.58 1496.79,1209.31 1497.38,1209.31 1497.96,1206.54 1498.55,1202.87 1499.14,1204.52 1499.72,1202.14 1500.31,1204.14 1500.9,1204.69 1501.48,1204.75 1502.07,1206.45 1502.65,1207.89 1503.24,1207.01 1503.83,1205.78 1504.41,1205.96 1505,1206.4 1505.59,1210.49 1506.17,1209.44 1506.76,1205.68 1507.35,1207.3 1507.93,1210.4 1508.52,1210.69 1509.11,1211.99 1509.69,1211.98 1510.28,1211.77 1510.86,1209.01 1511.45,1203.84 1512.04,1204.41 1512.62,1208.44 1513.21,1208.29 1513.8,1209.85 1514.38,1208.74 1514.97,1210.26 1515.56,1210.3 1516.14,1214.11 1516.73,1218.03 1517.32,1217.7 1517.9,1215.94 1518.49,1218.5 1519.07,1216.76 1519.66,1214.9 1520.25,1214.76 1520.83,1215.99 1521.42,1214.27 1522.01,1212.47 1522.59,1212.33 1523.18,1212.4 1523.77,1212.46 1524.35,1212.38 1524.94,1212.36 1525.52,1210.97 1526.11,1209.6 1526.7,1211.07 1527.28,1209.63 1527.87,1212.37 1528.46,1215.14 1529.04,1214.96 1529.63,1217.46 1530.22,1214.44 1530.8,1209.97 1531.39,1208.79 1531.98,1207.73 1532.56,1209.28 1533.15,1208.13 1533.73,1206.82 1534.32,1208.42 1534.91,1207.57 1535.49,1208.86 1536.08,1209.15 1536.67,1210.47 1537.25,1209.01 1537.84,1209.1 1538.43,1209.01 1539.01,1210.32 1539.6,1212.72 1540.19,1212.63 1540.77,1216.4 1541.36,1220.17 1541.94,1218.4 1542.53,1216.63 1543.12,1216 1543.7,1217.05 1544.29,1220.77 1544.88,1218.91 1545.46,1217.17 1546.05,1214.02 1546.64,1211.29 1547.22,1211.12 1547.81,1210.77 1548.4,1215.06 1548.98,1216.03 1549.57,1214.77 1550.15,1211.67 1550.74,1211.89 1551.33,1211.66 1551.91,1211.69 1552.5,1210.43 1553.09,1211.68 1553.67,1211.62 1554.26,1212.59 1554.85,1215.33 1555.43,1214.85 1556.02,1216.13 1556.6,1214.6 1557.19,1216.87 1557.78,1217.78 1558.36,1216.35 1558.95,1216.05 1559.54,1217.42 1560.12,1215.89 1560.71,1214.45 1561.3,1214.18 1561.88,1212.73 1562.47,1210.05 1563.06,1211.28 1563.64,1210.18 1564.23,1214.26 1564.81,1213.96 1565.4,1213.83 1565.99,1212.43 1566.57,1209.62 1567.16,1207.19 1567.75,1207.14 1568.33,1208.7 1568.92,1208.78 1569.51,1207.42 1570.09,1206.29 1570.68,1206.27 1571.27,1203.94 1571.85,1205.74 1572.44,1206.1 1573.02,1205.09 1573.61,1205.41 1574.2,1204.47 1574.78,1203.51 1575.37,1201.33 1575.96,1199.34 1576.54,1198.51 1577.13,1199.25 1577.72,1200.06 1578.3,1199.31 1578.89,1201.33 1579.47,1205.57 1580.06,1208.87 1580.65,1211.46 1581.23,1210.3 1581.82,1210.68 1582.41,1211.91 1582.99,1210.68 1583.58,1210.5 1584.17,1209.33 1584.75,1213.26 1585.34,1214.28 1585.93,1211.36 1586.51,1210.12 1587.1,1207.11 1587.68,1204.5 1588.27,1206.1 1588.86,1203.69 1589.44,1206.57 1590.03,1205.69 1590.62,1206.33 1591.2,1208.09 1591.79,1208.16 1592.38,1208.43 1592.96,1207.14 1593.55,1206.28 1594.14,1205.42 1594.72,1204.3 1595.31,1204.81 1595.89,1204.82 1596.48,1205.33 1597.07,1204.31 1597.65,1206.02 1598.24,1206.41 1598.83,1206.62 1599.41,1205.85 1600,1207.4 1600.59,1207.99 1601.17,1208.11 1601.76,1208.25 1602.34,1206.78 1602.93,1210.94 1603.52,1213.4 1604.1,1214.55 1604.69,1212.91 1605.28,1210.58 1605.86,1209.25 1606.45,1208.04 1607.04,1208.3 1607.62,1208.64 1608.21,1211.41 1608.8,1214.21 1609.38,1216.63 1609.97,1216.28 1610.55,1215.89 1611.14,1216.71 1611.73,1216.28 1612.31,1215.93 1612.9,1215.54 1613.49,1215.43 1614.07,1215.36 1614.66,1215.11 1615.25,1218.66 1615.83,1222.43 1616.42,1219.48 1617.01,1216.62 1617.59,1218.86 1618.18,1218.24 1618.76,1216.67 1619.35,1218.85 1619.94,1219.54 1620.52,1220.24 1621.11,1219.76 1621.7,1219.59 1622.28,1219.01 1622.87,1222.7 1623.46,1221.95 1624.04,1218.84 1624.63,1218.42 1625.22,1217.91 1625.8,1217.93 1626.39,1217.73 1626.97,1216.14 1627.56,1215.8 1628.15,1217.16 1628.73,1219.55 1629.32,1217.81 1629.91,1220.19 1630.49,1218.17 1631.08,1220.65 1631.67,1217.52 1632.25,1214.36 1632.84,1210.01 1633.42,1208.43 1634.01,1208.57 1634.6,1207.51 1635.18,1205.1 1635.77,1206.55 1636.36,1206.64 1636.94,1206.51 1637.53,1205.33 1638.12,1205.65 1638.7,1208.43 1639.29,1207.23 1639.88,1206.34 1640.46,1207.65 1641.05,1208.17 1641.63,1205.53 1642.22,1204.35 1642.81,1205.9 1643.39,1207.33 1643.98,1206.07 1644.57,1206.72 1645.15,1206.97 1645.74,1209.67 1646.33,1208.36 1646.91,1209.94 1647.5,1211.39 1648.09,1211.55 1648.67,1211.64 1649.26,1214.39 1649.84,1214.13 1650.43,1213.89 1651.02,1213.93 1651.6,1213.67 1652.19,1214.88 1652.78,1214.93 1653.36,1215.01 1653.95,1217.63 1654.54,1211.72 1655.12,1216.97 1655.71,1218.16 1656.29,1219.05 1656.88,1217.15 1657.47,1217.01 1658.05,1216.71 1658.64,1216.17 1659.23,1218.51 1659.81,1219.37 1660.4,1218.66 1660.99,1219.6 1661.57,1217.98 1662.16,1214.88 1662.75,1214.59 1663.33,1211.79 1663.92,1210.54 1664.5,1210.99 1665.09,1212.68 1665.68,1214.15 1666.26,1212.66 1666.85,1212.55 1667.44,1209.83 1668.02,1207.32 1668.61,1207.41 1669.2,1207.7 1669.78,1210.55 1670.37,1209.26 1670.96,1209.72 1671.54,1210.09 1672.13,1211.48 1672.71,1210.12 1673.3,1210.55 1673.89,1209.48 1674.47,1210.95 1675.06,1209.79 1675.65,1209.82 1676.23,1211.32 1676.82,1211.13 1677.41,1203.16 1677.99,1203.77 1678.58,1204.3 1679.17,1207.46 1679.75,1210.42 1680.34,1210.33 1680.92,1208.82 1681.51,1210.15 1682.1,1211.57 1682.68,1211.58 1683.27,1208.87 1683.86,1210.16 1684.44,1211.48 1685.03,1210.35 1685.62,1211.97 1686.2,1211.9 1686.79,1213.23 1687.37,1210.49 1687.96,1210.38 1688.55,1211.74 1689.13,1211.48 1689.72,1210.05 1690.31,1208.82 1690.89,1209.07 1691.48,1209.1 1692.07,1209.02 1692.65,1207.61 1693.24,1206.57 1693.83,1206.78 1694.41,1206.77 1695,1208.49 1695.58,1208.74 1696.17,1211.49 1696.76,1212.85 1697.34,1217 1697.93,1216.76 1698.52,1217.67 1699.1,1217.37 1699.69,1213.24 1700.28,1212.87 1700.86,1212.63 1701.45,1212.68 1702.04,1210.2 1702.62,1211.28 1703.21,1212.5 1703.79,1215.12 1704.38,1214.93 1704.97,1216.25 1705.55,1217.36 1706.14,1215.63 1706.73,1215.19 1707.31,1213.47 1707.9,1212.34 1708.49,1212.47 1709.07,1216.67 1709.66,1216.21 1710.24,1217.45 1710.83,1214.67 1711.42,1215.86 1712,1216.71 1712.59,1216.23 1713.18,1213.3 1713.76,1210.57 1714.35,1212.99 1714.94,1214.16 1715.52,1211.54 1716.11,1211.16 1716.7,1211.22 1717.28,1212.58 1717.87,1216.53 1718.45,1218.91 1719.04,1221.06 1719.63,1219.4 1720.21,1217.97 1720.8,1218.77 1721.39,1219.82 1721.97,1219.54 1722.56,1216.35 1723.15,1217.57 1723.73,1217.38 1724.32,1215.79 1724.91,1218.1 1725.49,1217.91 1726.08,1214.82 1726.66,1214.74 1727.25,1213.48 1727.84,1214.84 1728.42,1217.08 1729.01,1217.83 1729.6,1216.17 1730.18,1216.13 1730.77,1214.37 1731.36,1215.57 1731.94,1211.41 1732.53,1211.36 1733.11,1211.57 1733.7,1210.34 1734.29,1210.01 1734.87,1212.43 1735.46,1209.77 1736.05,1209.88 1736.63,1208.76 1737.22,1207.66 1737.81,1209.25 1738.39,1209.13 1738.98,1209.15 1739.57,1209.35 1740.15,1207.92 1740.74,1210.67 1741.32,1210.81 1741.91,1209.59 1742.5,1211.06 1743.08,1208.42 1743.67,1205.59 1744.26,1208.37 1744.84,1212.68 1745.43,1215.47 1746.02,1213.78 1746.6,1212.47 1747.19,1213.89 1747.78,1220.33 1748.36,1220.8 1748.95,1221.67 1749.53,1220.68 1750.12,1222.7 1750.71,1224.76 1751.29,1224.11 1751.88,1220.83 1752.47,1220.29 1753.05,1218.52 1753.64,1218.22 1754.23,1220.23 1754.81,1219.36 1755.4,1218.96 1755.99,1218.62 1756.57,1218.51 1757.16,1220.65 1757.74,1222.76 1758.33,1219.53 1758.92,1218.15 1759.5,1218.84 1760.09,1221.24 1760.68,1220.61 1761.26,1218.86 1761.85,1215.73 1762.44,1218.17 1763.02,1220.52 1763.61,1218.62 1764.19,1212.85 1764.78,1210.13 1765.37,1209.95 1765.95,1208.55 1766.54,1209.74 1767.13,1209.68 1767.71,1208.49 1768.3,1208.28 1768.89,1207.19 1769.47,1204.61 1770.06,1198.07 1770.65,1197.52 1771.23,1196.91 1771.82,1199.01 1772.4,1198.05 1772.99,1200.11 1773.58,1199.51 1774.16,1201.6 1774.75,1202.16 1775.34,1202.63 1775.92,1204.59 1776.51,1205.04 1777.1,1206.48 1777.68,1205.43 1778.27,1207.28 1778.86,1208.56 1779.44,1211.31 1780.03,1211.28 1780.61,1212.65 1781.2,1207.41 1781.79,1205.12 1782.37,1202.86 1782.96,1203.3 1783.55,1203.6 1784.13,1203.93 1784.72,1201.58 1785.31,1200.76 1785.89,1201.2 1786.48,1204.29 1787.06,1203.6 1787.65,1203.99 1788.24,1204.57 1788.82,1203.39 1789.41,1202.41 1790,1203.11 1790.58,1203.39 1791.17,1201.1 1791.76,1201.47 1792.34,1204.79 1792.93,1203.68 1793.52,1202.78 1794.1,1205.77 1794.69,1207.47 1795.27,1207.85 1795.86,1209.29 1796.45,1209.61 1797.03,1208.43 1797.62,1210.09 1798.21,1210.07 1798.79,1206.36 1799.38,1210.36 1799.97,1209.16 1800.55,1210.76 1801.14,1213.34 1801.73,1213.14 1802.31,1214.63 1802.9,1214.6 1803.48,1211.9 1804.07,1212 1804.66,1210.72 1805.24,1212.36 1805.83,1211.16 1806.42,1207.3 1807,1207.51 1807.59,1205.26 1808.18,1210.77 1808.76,1210.85 1809.35,1213.7 1809.94,1212.33 1810.52,1212.08 1811.11,1210.83 1811.69,1209.57 1812.28,1213.52 1812.87,1216.14 1813.45,1218.5 1814.04,1218.02 1814.63,1216.36 1815.21,1217.29 1815.8,1218.4 1816.39,1217.12 1816.97,1216.66 1817.56,1217.82 1818.14,1216.27 1818.73,1214.43 1819.32,1215.5 1819.9,1213.82 1820.49,1215.08 1821.08,1216.24 1821.66,1217.49 1822.25,1218.67 1822.84,1218.36 1823.42,1216.33 1824.01,1218.95 1824.6,1217.34 1825.18,1217.3 1825.77,1218.44 1826.35,1219.25 1826.94,1216.21 1827.53,1214.52 1828.11,1215.96 1828.7,1215.55 1829.29,1216.64 1829.87,1216.43 1830.46,1217.83 1831.05,1217.57 1831.63,1216.07 1832.22,1214.55 1832.81,1210.4 1833.39,1208.67 1833.98,1211.81 1834.56,1211.7 1835.15,1213.03 1835.74,1211.64 1836.32,1210.44 1836.91,1210.24 1837.5,1210.41 1838.08,1210.62 1838.67,1213.31 1839.26,1213.03 1839.84,1214.37 1840.43,1214.31 1841.01,1212.74 1841.6,1216.68 1842.19,1213.68 1842.77,1216.13 1843.36,1214.79 1843.95,1213.35 1844.53,1213.13 1845.12,1212.75 1845.71,1211.56 1846.29,1211.33 1846.88,1213.94 1847.47,1211.14 1848.05,1211.25 1848.64,1211.34 1849.22,1208.53 1849.81,1208.67 1850.4,1208.72 1850.98,1211.49 1851.57,1214.13 1852.16,1212.75 1852.74,1212.75 1853.33,1215.59 1853.92,1216.89 1854.5,1217.78 1855.09,1217.73 1855.68,1217.58 1856.26,1217.03 1856.85,1213.94 1857.43,1211.14 1858.02,1208.34 1858.61,1208.71 1859.19,1208.84 1859.78,1210.55 1860.37,1209.3 1860.95,1206.66 1861.54,1202.88 1862.13,1200.74 1862.71,1201.5 1863.3,1201.98 1863.88,1202.59 1864.47,1204.66 1865.06,1205.39 1865.64,1207.22 1866.23,1206.18 1866.82,1201.21 1867.4,1201.73 1867.99,1202.28 1868.58,1201.39 1869.16,1200.4 1869.75,1202.05 1870.34,1202.47 1870.92,1202.88 1871.51,1201.95 1872.09,1202.65 1872.68,1203.36 1873.27,1205.06 1873.85,1205.29 1874.44,1204.09 1875.03,1205.77 1875.61,1204.6 1876.2,1201.16 1876.79,1200.23 1877.37,1201.03 1877.96,1203.2 1878.55,1204.93 1879.13,1205.57 1879.72,1204.62 1880.3,1207.69 1880.89,1207.67 1881.48,1209.17 1882.06,1210.46 1882.65,1215.8 1883.24,1215.48 1883.82,1216.37 1884.41,1214.85 1885,1212.9 1885.58,1211.37 1886.17,1208.83 1886.76,1210.42 1887.34,1211.86 1887.93,1213.04 1888.51,1214.17 1889.1,1213.09 1889.69,1208.82 1890.27,1210.25 1890.86,1210.4 1891.45,1210.39 1892.03,1211.91 1892.62,1206.38 1893.21,1205.13 1893.79,1205.72 1894.38,1207.37 1894.96,1209.09 1895.55,1208.18 1896.14,1209.73 1896.72,1212.54 1897.31,1212.22 1897.9,1209.66 1898.48,1208.34 1899.07,1208.41 1899.66,1208.75 1900.24,1207.75 1900.83,1208.17 1901.42,1207.99 1902,1207.84 1902.59,1207.82 1903.17,1210.48 1903.76,1210.5 1904.35,1212 1904.93,1213.12 1905.52,1212.86 1906.11,1213.01 1906.69,1213.02 1907.28,1212.99 1907.87,1212.84 1908.45,1211.37 1909.04,1211.09 1909.63,1212.16 1910.21,1214.75 1910.8,1216.96 1911.38,1215.28 1911.97,1216.4 1912.56,1214.81 1913.14,1214.51 1913.73,1214.22 1914.32,1211.48 1914.9,1211.34 1915.49,1209.89 1916.08,1212.53 1916.66,1212.64 1917.25,1213.8 1917.83,1212.1 1918.42,1213.3 1919.01,1211.94 1919.59,1211.04 1920.18,1209.85 1920.77,1208.59 1921.35,1211.41 1921.94,1211.12 1922.53,1210.93 1923.11,1212.16 1923.7,1216.09 1924.29,1214.82 1924.87,1214.7 1925.46,1215.68 1926.04,1215.53 1926.63,1214.04 1927.22,1213.83 1927.8,1211.13 1928.39,1211.11 1928.98,1213.99 1929.56,1217.57 1930.15,1218.38 1930.74,1217.69 1931.32,1211.04 1931.91,1213.55 1932.5,1211.03 1933.08,1208.34 1933.67,1210.94 1934.25,1212.42 1934.84,1211.08 1935.43,1211.13 1936.01,1208.43 1936.6,1209.65 1937.19,1205.42 1937.77,1203.02 1938.36,1203.72 1938.95,1201.33 1939.53,1203.24 1940.12,1203.77 1940.71,1204.14 1941.29,1204.34 1941.88,1206.19 1942.46,1206.32 1943.05,1207.64 1943.64,1207.97 1944.22,1206.98 1944.81,1209.91 1945.4,1211.2 1945.98,1207.4 1946.57,1207.54 1947.16,1207.93 1947.74,1208.08 1948.33,1209.49 1948.91,1206.89 1949.5,1208.6 1950.09,1208.48 1950.67,1211.05 1951.26,1211.22 1951.85,1213.81 1952.43,1215.12 1953.02,1219.11 1953.61,1218.9 1954.19,1221.06 1954.78,1220.47 1955.37,1218.59 1955.95,1219.64 1956.54,1219.2 1957.12,1217.49 1957.71,1217.19 1958.3,1215.73 1958.88,1214.09 1959.47,1212.75 1960.06,1212.68 1960.64,1212.66 1961.23,1212.77 1961.82,1211.37 1962.4,1212.71 1962.99,1212.61 1963.58,1212.69 1964.16,1212.78 1964.75,1212.47 1965.33,1212.58 1965.92,1211.07 1966.51,1210.1 1967.09,1212.8 1967.68,1214.19 1968.27,1219.24 1968.85,1217.48 1969.44,1220.98 1970.03,1219.44 1970.61,1217.55 1971.2,1214.81 1971.78,1213.57 1972.37,1216.08 1972.96,1215.8 1973.54,1215.59 1974.13,1218.06 1974.72,1217.99 1975.3,1214.96 1975.89,1217.42 1976.48,1218.56 1977.06,1215.23 1977.65,1217.88 1978.24,1215.07 1978.82,1217.48 1979.41,1218.53 1979.99,1217.99 1980.58,1214.77 1981.17,1213.66 1981.75,1212.35 1982.34,1209.9 1982.93,1211.46 1983.51,1212.85 1984.1,1210.35 1984.69,1209.22 1985.27,1209.6 1985.86,1211.29 1986.45,1207.22 1987.03,1208.52 1987.62,1207.46 1988.2,1205.37 1988.79,1204.34 1989.38,1204.72 1989.96,1203.4 1990.55,1207.91 1991.14,1206.42 1991.72,1211.96 1992.31,1212.33 1992.9,1211.06 1993.48,1210.84 1994.07,1212.58 1994.65,1215.16 1995.24,1213.7 1995.83,1217.57 1996.41,1216.16 1997,1219.93 1997.59,1218.47 1998.17,1218.25 1998.76,1215.15 1999.35,1213.44 1999.93,1211.9 2000.52,1211.78 2001.11,1211.69 2001.69,1211.75 2002.28,1213.07 2002.86,1212.93 2003.45,1210.33 2004.04,1207.93 2004.62,1208.31 2005.21,1205.9 2005.8,1207.66 2006.38,1206.55 2006.97,1205.44 2007.56,1202.98 2008.14,1204.48 2008.73,1206.12 2009.32,1206.24 2009.9,1202.47 2010.49,1203.03 2011.07,1201.88 2011.66,1201.06 2012.25,1200.18 2012.83,1201.95 2013.42,1206.3 2014.01,1206.73 2014.59,1208.47 2015.18,1207.4 2015.77,1207.69 2016.35,1209.13 2016.94,1207.56 2017.53,1207.66 2018.11,1207.77 2018.7,1207.99 2019.28,1208.31 2019.87,1204.44 2020.46,1204.66 2021.04,1207.16 2021.63,1207.53 2022.22,1206.28 2022.8,1207.59 2023.39,1209.13 2023.98,1209.13 2024.56,1207.79 2025.15,1210.94 2025.73,1209.41 2026.32,1212.19 2026.91,1213.25 2027.49,1214.5 2028.08,1211.51 2028.67,1211.83 2029.25,1210.55 2029.84,1208.04 2030.43,1210.74 2031.01,1210.65 2031.6,1213.61 2032.19,1213.37 2032.77,1214.48 2033.36,1213.21 2033.94,1212.82 2034.53,1214.17 2035.12,1214.08 2035.7,1215.21 2036.29,1213.61 2036.88,1213.18 2037.46,1213.12 2038.05,1212.94 2038.64,1214.19 2039.22,1217.93 2039.81,1218.88 2040.4,1218.49 2040.98,1219.26 2041.57,1220.04 2042.15,1219.28 2042.74,1220.26 2043.33,1218.37 2043.91,1217.85 2044.5,1217.46 2045.09,1215.71 2045.67,1216.52 2046.26,1213.62 2046.85,1209.59 2047.43,1212.34 2048.02,1209.91 2048.6,1209.86 2049.19,1208.62 2049.78,1208.97 2050.36,1207.55 2050.95,1206.35 2051.54,1206.63 2052.12,1206.71 2052.71,1210.79 2053.3,1217.18 2053.88,1215.49 2054.47,1216.88 2055.06,1215.35 2055.64,1216.48 2056.23,1216.04 2056.81,1215.72 2057.4,1215.47 2057.99,1213.78 2058.57,1213.83 2059.16,1215.13 2059.75,1217.5 2060.33,1217.32 2060.92,1215.68 2061.51,1216.83 2062.09,1214.93 2062.68,1216.06 2063.27,1218.58 2063.85,1215.31 2064.44,1214.87 2065.02,1215.87 2065.61,1216.65 2066.2,1215.23 2066.78,1214.88 2067.37,1213.53 2067.96,1214.83 2068.54,1216.18 2069.13,1214.4 2069.72,1214.3 2070.3,1215.42 2070.89,1213.91 2071.48,1213.56 2072.06,1213.36 2072.65,1211.87 2073.23,1211.8 2073.82,1210.42 2074.41,1210.45 2074.99,1210.37 2075.58,1210.57 2076.17,1210.56 2076.75,1210.24 2077.34,1210.03 2077.93,1210.27 2078.51,1211.47 2079.1,1207.42 2079.68,1205.17 2080.27,1202.91 2080.86,1199.17 2081.44,1199.88 2082.03,1200.62 2082.62,1204.7 2083.2,1202.3 2083.79,1201.41 2084.38,1201.9 2084.96,1203.57 2085.55,1206.7 2086.14,1204.06 2086.72,1204.33 2087.31,1203.5 2087.89,1204.02 2088.48,1203.02 2089.07,1202.28 2089.65,1202.7 2090.24,1204.39 2090.83,1205.8 2091.41,1203.65 2092,1202.79 2092.59,1203.29 2093.17,1203.69 2093.76,1206.78 2094.35,1204.51 2094.93,1206.37 2095.52,1208.2 2096.1,1208.73 2096.69,1210.16 2097.28,1210.47 2097.86,1210.89 2098.45,1207.17 2099.04,1207.62 2099.62,1213.21 2100.21,1215.65 2100.8,1218.1 2101.38,1219.23 2101.97,1219.98 2102.55,1219.41 2103.14,1218.89 2103.73,1221.09 2104.31,1223.09 2104.9,1219.93 2105.49,1220.69 2106.07,1220.31 2106.66,1219.95 2107.25,1219.65 2107.83,1218.03 2108.42,1217.65 2109.01,1219.86 2109.59,1216.5 2110.18,1217.67 2110.76,1214.38 2111.35,1213.06 2111.94,1210.3 2112.52,1208.85 2113.11,1208.89 2113.7,1206.31 2114.28,1205.44 2114.87,1205.67 2115.46,1212.24 2116.04,1213.42 2116.63,1211.95 2117.22,1207.61 2117.8,1206.49 2118.39,1208.36 2118.97,1208.6 2119.56,1208.71 2120.15,1210.01 2120.73,1208.81 2121.32,1208.67 2121.91,1208.7 2122.49,1204.81 2123.08,1205.22 2123.67,1203.97 2124.25,1205.66 2124.84,1211.25 2125.42,1210.03 2126.01,1212.7 2126.6,1212.82 2127.18,1211.41 2127.77,1208.74 2128.36,1207.7 2128.94,1209.18 2129.53,1207.95 2130.12,1210.48 2130.7,1211.87 2131.29,1211.73 2131.88,1209 2132.46,1209.15 2133.05,1209.13 2133.63,1206.6 2134.22,1209.72 2134.81,1208.23 2135.39,1208.28 2135.98,1208.45 2136.57,1211.16 2137.15,1211.35 2137.74,1212.91 2138.33,1211.42 2138.91,1212.79 2139.5,1212.67 2140.09,1213.82 2140.67,1213.86 2141.26,1213.59 2141.84,1209.3 2142.43,1209.43 2143.02,1208.29 2143.6,1204.36 2144.19,1203.45 2144.78,1205.47 2145.36,1205.76 2145.95,1211.41 2146.54,1209.95 2147.12,1211.11 2147.71,1209.85 2148.3,1211.12 2148.88,1211.22 2149.47,1208.57 2150.05,1207.62 2150.64,1208.09 2151.23,1207.03 2151.81,1208.75 2152.4,1208.99 2152.99,1206.65 2153.57,1206.64 2154.16,1205.77 2154.75,1205.91 2155.33,1207.24 2155.92,1208.73 2156.5,1208.91 2157.09,1209.08 2157.68,1207.9 2158.26,1201.6 \"/>\n<path clip-path=\"url(#clip062)\" d=\"M986.025 1211.71 L986.612 1211.71 L987.198 1211.71 L987.785 1211.71 L988.371 1211.71 L988.957 1211.71 L989.544 1211.71 L990.13 1211.71 L990.717 1211.71 L991.303 1211.71 L991.889 1211.71 L992.476 1211.71 L993.062 1211.71 L993.649 1211.71 L994.235 1211.71 L994.822 1211.71 L995.408 1211.71 L995.994 1211.71 L996.581 1211.71 L997.167 1211.71 L997.754 1211.71 L998.34 1211.71 L998.926 1211.71 L999.513 1211.71 L1000.1 1211.71 L1000.69 1211.71 L1001.27 1211.71 L1001.86 1211.71 L1002.44 1211.71 L1003.03 1211.71 L1003.62 1211.71 L1004.2 1211.71 L1004.79 1211.71 L1005.38 1211.71 L1005.96 1211.71 L1006.55 1211.71 L1007.14 1211.71 L1007.72 1211.71 L1008.31 1211.71 L1008.9 1211.71 L1009.48 1211.71 L1010.07 1211.71 L1010.65 1211.71 L1011.24 1211.71 L1011.83 1211.71 L1012.41 1211.71 L1013 1211.71 L1013.59 1211.71 L1014.17 1211.71 L1014.76 1211.71 L1015.35 1211.71 L1015.93 1211.71 L1016.52 1211.71 L1017.11 1211.71 L1017.69 1211.71 L1018.28 1211.71 L1018.86 1211.71 L1019.45 1211.71 L1020.04 1211.71 L1020.62 1211.71 L1021.21 1211.71 L1021.8 1211.71 L1022.38 1211.71 L1022.97 1211.71 L1023.56 1211.71 L1024.14 1211.71 L1024.73 1211.71 L1025.32 1211.71 L1025.9 1211.71 L1026.49 1211.71 L1027.07 1211.71 L1027.66 1211.71 L1028.25 1211.71 L1028.83 1211.71 L1029.42 1211.71 L1030.01 1211.71 L1030.59 1211.71 L1031.18 1211.71 L1031.77 1211.71 L1032.35 1211.71 L1032.94 1211.71 L1033.52 1211.71 L1034.11 1211.71 L1034.7 1211.71 L1035.28 1211.71 L1035.87 1211.71 L1036.46 1211.71 L1037.04 1211.71 L1037.63 1211.71 L1038.22 1211.71 L1038.8 1211.71 L1039.39 1211.71 L1039.98 1211.71 L1040.56 1211.71 L1041.15 1211.71 L1041.73 1211.71 L1042.32 1211.71 L1042.91 1211.71 L1043.49 1211.71 L1044.08 1211.71 L1044.67 1211.71 L1045.25 1211.71 L1045.84 1211.71 L1046.43 1211.71 L1047.01 1211.71 L1047.6 1211.71 L1048.19 1211.71 L1048.77 1211.71 L1049.36 1211.71 L1049.94 1211.71 L1050.53 1211.71 L1051.12 1211.71 L1051.7 1211.71 L1052.29 1211.71 L1052.88 1211.71 L1053.46 1211.71 L1054.05 1211.71 L1054.64 1211.71 L1055.22 1211.71 L1055.81 1211.71 L1056.39 1211.71 L1056.98 1211.71 L1057.57 1211.71 L1058.15 1211.71 L1058.74 1211.71 L1059.33 1211.71 L1059.91 1211.71 L1060.5 1211.71 L1061.09 1211.71 L1061.67 1211.71 L1062.26 1211.71 L1062.85 1211.71 L1063.43 1211.71 L1064.02 1211.71 L1064.6 1211.71 L1065.19 1211.71 L1065.78 1211.71 L1066.36 1211.71 L1066.95 1211.71 L1067.54 1211.71 L1068.12 1211.71 L1068.71 1211.71 L1069.3 1211.71 L1069.88 1211.71 L1070.47 1211.71 L1071.06 1211.71 L1071.64 1211.71 L1072.23 1211.71 L1072.81 1211.71 L1073.4 1211.71 L1073.99 1211.71 L1074.57 1211.71 L1075.16 1211.71 L1075.75 1211.71 L1076.33 1211.71 L1076.92 1211.71 L1077.51 1211.71 L1078.09 1211.71 L1078.68 1211.71 L1079.26 1211.71 L1079.85 1211.71 L1080.44 1211.71 L1081.02 1211.71 L1081.61 1211.71 L1082.2 1211.71 L1082.78 1211.71 L1083.37 1211.71 L1083.96 1211.71 L1084.54 1211.71 L1085.13 1211.71 L1085.72 1211.71 L1086.3 1211.71 L1086.89 1211.71 L1087.47 1211.71 L1088.06 1211.71 L1088.65 1211.71 L1089.23 1211.71 L1089.82 1211.71 L1090.41 1211.71 L1090.99 1211.71 L1091.58 1211.71 L1092.17 1211.71 L1092.75 1211.71 L1093.34 1211.71 L1093.93 1211.71 L1094.51 1211.71 L1095.1 1211.71 L1095.68 1211.71 L1096.27 1211.71 L1096.86 1211.71 L1097.44 1211.71 L1098.03 1211.71 L1098.62 1211.71 L1099.2 1211.71 L1099.79 1211.71 L1100.38 1211.71 L1100.96 1211.71 L1101.55 1211.71 L1102.14 1211.71 L1102.72 1211.71 L1103.31 1211.71 L1103.89 1211.71 L1104.48 1211.71 L1105.07 1211.71 L1105.65 1211.71 L1106.24 1211.71 L1106.83 1211.71 L1107.41 1211.71 L1108 1211.71 L1108.59 1211.71 L1109.17 1211.71 L1109.76 1211.71 L1110.34 1211.71 L1110.93 1211.71 L1111.52 1211.71 L1112.1 1211.71 L1112.69 1211.71 L1113.28 1211.71 L1113.86 1211.71 L1114.45 1211.71 L1115.04 1211.71 L1115.62 1211.71 L1116.21 1211.71 L1116.8 1211.71 L1117.38 1211.71 L1117.97 1211.71 L1118.55 1211.71 L1119.14 1211.71 L1119.73 1211.71 L1120.31 1211.71 L1120.9 1211.71 L1121.49 1211.71 L1122.07 1211.71 L1122.66 1211.71 L1123.25 1211.71 L1123.83 1211.71 L1124.42 1211.71 L1125.01 1211.71 L1125.59 1211.71 L1126.18 1211.71 L1126.76 1211.71 L1127.35 1211.71 L1127.94 1211.71 L1128.52 1211.71 L1129.11 1211.71 L1129.7 1211.71 L1130.28 1211.71 L1130.87 1211.71 L1131.46 1211.71 L1132.04 1211.71 L1132.63 1211.71 L1133.21 1211.71 L1133.8 1211.71 L1134.39 1211.71 L1134.97 1211.71 L1135.56 1211.71 L1136.15 1211.71 L1136.73 1211.71 L1137.32 1211.71 L1137.91 1211.71 L1138.49 1211.71 L1139.08 1211.71 L1139.67 1211.71 L1140.25 1211.71 L1140.84 1211.71 L1141.42 1211.71 L1142.01 1211.71 L1142.6 1211.71 L1143.18 1211.71 L1143.77 1211.71 L1144.36 1211.71 L1144.94 1211.71 L1145.53 1211.71 L1146.12 1211.71 L1146.7 1211.71 L1147.29 1211.71 L1147.88 1211.71 L1148.46 1211.71 L1149.05 1211.71 L1149.63 1211.71 L1150.22 1211.71 L1150.81 1211.71 L1151.39 1211.71 L1151.98 1211.71 L1152.57 1211.71 L1153.15 1211.71 L1153.74 1211.71 L1154.33 1211.71 L1154.91 1211.71 L1155.5 1211.71 L1156.09 1211.71 L1156.67 1211.71 L1157.26 1211.71 L1157.84 1211.71 L1158.43 1211.71 L1159.02 1211.71 L1159.6 1211.71 L1160.19 1211.71 L1160.78 1211.71 L1161.36 1211.71 L1161.95 1211.71 L1162.54 1211.71 L1163.12 1211.71 L1163.71 1211.71 L1164.29 1211.71 L1164.88 1211.71 L1165.47 1211.71 L1166.05 1211.71 L1166.64 1211.71 L1167.23 1211.71 L1167.81 1211.71 L1168.4 1211.71 L1168.99 1211.71 L1169.57 1211.71 L1170.16 1211.71 L1170.75 1211.71 L1171.33 1211.71 L1171.92 1211.71 L1172.5 1211.71 L1173.09 1211.71 L1173.68 1211.71 L1174.26 1211.71 L1174.85 1211.71 L1175.44 1211.71 L1176.02 1211.71 L1176.61 1211.71 L1177.2 1211.71 L1177.78 1211.71 L1178.37 1211.71 L1178.96 1211.71 L1179.54 1211.71 L1180.13 1211.71 L1180.71 1211.71 L1181.3 1211.71 L1181.89 1211.71 L1182.47 1211.71 L1183.06 1211.71 L1183.65 1211.71 L1184.23 1211.71 L1184.82 1211.71 L1185.41 1211.71 L1185.99 1211.71 L1186.58 1211.71 L1187.16 1211.71 L1187.75 1211.71 L1188.34 1211.71 L1188.92 1211.71 L1189.51 1211.71 L1190.1 1211.71 L1190.68 1211.71 L1191.27 1211.71 L1191.86 1211.71 L1192.44 1211.71 L1193.03 1211.71 L1193.62 1211.71 L1194.2 1211.71 L1194.79 1211.71 L1195.37 1211.71 L1195.96 1211.71 L1196.55 1211.71 L1197.13 1211.71 L1197.72 1211.71 L1198.31 1211.71 L1198.89 1211.71 L1199.48 1211.71 L1200.07 1211.71 L1200.65 1211.71 L1201.24 1211.71 L1201.83 1211.71 L1202.41 1211.71 L1203 1211.71 L1203.58 1211.71 L1204.17 1211.71 L1204.76 1211.71 L1205.34 1211.71 L1205.93 1211.71 L1206.52 1211.71 L1207.1 1211.71 L1207.69 1211.71 L1208.28 1211.71 L1208.86 1211.71 L1209.45 1211.71 L1210.03 1211.71 L1210.62 1211.71 L1211.21 1211.71 L1211.79 1211.71 L1212.38 1211.71 L1212.97 1211.71 L1213.55 1211.71 L1214.14 1211.71 L1214.73 1211.71 L1215.31 1211.71 L1215.9 1211.71 L1216.49 1211.71 L1217.07 1211.71 L1217.66 1211.71 L1218.24 1211.71 L1218.83 1211.71 L1219.42 1211.71 L1220 1211.71 L1220.59 1211.71 L1221.18 1211.71 L1221.76 1211.71 L1222.35 1211.71 L1222.94 1211.71 L1223.52 1211.71 L1224.11 1211.71 L1224.7 1211.71 L1225.28 1211.71 L1225.87 1211.71 L1226.45 1211.71 L1227.04 1211.71 L1227.63 1211.71 L1228.21 1211.71 L1228.8 1211.71 L1229.39 1211.71 L1229.97 1211.71 L1230.56 1211.71 L1231.15 1211.71 L1231.73 1211.71 L1232.32 1211.71 L1232.91 1211.71 L1233.49 1211.71 L1234.08 1211.71 L1234.66 1211.71 L1235.25 1211.71 L1235.84 1211.71 L1236.42 1211.71 L1237.01 1211.71 L1237.6 1211.71 L1238.18 1211.71 L1238.77 1211.71 L1239.36 1211.71 L1239.94 1211.71 L1240.53 1211.71 L1241.11 1211.71 L1241.7 1211.71 L1242.29 1211.71 L1242.87 1211.71 L1243.46 1211.71 L1244.05 1211.71 L1244.63 1211.71 L1245.22 1211.71 L1245.81 1211.71 L1246.39 1211.71 L1246.98 1211.71 L1247.57 1211.71 L1248.15 1211.71 L1248.74 1211.71 L1249.32 1211.71 L1249.91 1211.71 L1250.5 1211.71 L1251.08 1211.71 L1251.67 1211.71 L1252.26 1211.71 L1252.84 1211.71 L1253.43 1211.71 L1254.02 1211.71 L1254.6 1211.71 L1255.19 1211.71 L1255.78 1211.71 L1256.36 1211.71 L1256.95 1211.71 L1257.53 1211.71 L1258.12 1211.71 L1258.71 1211.71 L1259.29 1211.71 L1259.88 1211.71 L1260.47 1211.71 L1261.05 1211.71 L1261.64 1211.71 L1262.23 1211.71 L1262.81 1211.71 L1263.4 1211.71 L1263.98 1211.71 L1264.57 1211.71 L1265.16 1211.71 L1265.74 1211.71 L1266.33 1211.71 L1266.92 1211.71 L1267.5 1211.71 L1268.09 1211.71 L1268.68 1211.71 L1269.26 1211.71 L1269.85 1211.71 L1270.44 1211.71 L1271.02 1211.71 L1271.61 1211.71 L1272.19 1211.71 L1272.78 1211.71 L1273.37 1211.71 L1273.95 1211.71 L1274.54 1211.71 L1275.13 1211.71 L1275.71 1211.71 L1276.3 1211.71 L1276.89 1211.71 L1277.47 1211.71 L1278.06 1211.71 L1278.65 1211.71 L1279.23 1211.71 L1279.82 1211.71 L1280.4 1211.71 L1280.99 1211.71 L1281.58 1211.71 L1282.16 1211.71 L1282.75 1211.71 L1283.34 1211.71 L1283.92 1211.71 L1284.51 1211.71 L1285.1 1211.71 L1285.68 1211.71 L1286.27 1211.71 L1286.86 1211.71 L1287.44 1211.71 L1288.03 1211.71 L1288.61 1211.71 L1289.2 1211.71 L1289.79 1211.71 L1290.37 1211.71 L1290.96 1211.71 L1291.55 1211.71 L1292.13 1211.71 L1292.72 1211.71 L1293.31 1211.71 L1293.89 1211.71 L1294.48 1211.71 L1295.06 1211.71 L1295.65 1211.71 L1296.24 1211.71 L1296.82 1211.71 L1297.41 1211.71 L1298 1211.71 L1298.58 1211.71 L1299.17 1211.71 L1299.76 1211.71 L1300.34 1211.71 L1300.93 1211.71 L1301.52 1211.71 L1302.1 1211.71 L1302.69 1211.71 L1303.27 1211.71 L1303.86 1211.71 L1304.45 1211.71 L1305.03 1211.71 L1305.62 1211.71 L1306.21 1211.71 L1306.79 1211.71 L1307.38 1211.71 L1307.97 1211.71 L1308.55 1211.71 L1309.14 1211.71 L1309.73 1211.71 L1310.31 1211.71 L1310.9 1211.71 L1311.48 1211.71 L1312.07 1211.71 L1312.66 1211.71 L1313.24 1211.71 L1313.83 1211.71 L1314.42 1211.71 L1315 1211.71 L1315.59 1211.71 L1316.18 1211.71 L1316.76 1211.71 L1317.35 1211.71 L1317.93 1211.71 L1318.52 1211.71 L1319.11 1211.71 L1319.69 1211.71 L1320.28 1211.71 L1320.87 1211.71 L1321.45 1211.71 L1322.04 1211.71 L1322.63 1211.71 L1323.21 1211.71 L1323.8 1211.71 L1324.39 1211.71 L1324.97 1211.71 L1325.56 1211.71 L1326.14 1211.71 L1326.73 1211.71 L1327.32 1211.71 L1327.9 1211.71 L1328.49 1211.71 L1329.08 1211.71 L1329.66 1211.71 L1330.25 1211.71 L1330.84 1211.71 L1331.42 1211.71 L1332.01 1211.71 L1332.6 1211.71 L1333.18 1211.71 L1333.77 1211.71 L1334.35 1211.71 L1334.94 1211.71 L1335.53 1211.71 L1336.11 1211.71 L1336.7 1211.71 L1337.29 1211.71 L1337.87 1211.71 L1338.46 1211.71 L1339.05 1211.71 L1339.63 1211.71 L1340.22 1211.71 L1340.8 1211.71 L1341.39 1211.71 L1341.98 1211.71 L1342.56 1211.71 L1343.15 1211.71 L1343.74 1211.71 L1344.32 1211.71 L1344.91 1211.71 L1345.5 1211.71 L1346.08 1211.71 L1346.67 1211.71 L1347.26 1211.71 L1347.84 1211.71 L1348.43 1211.71 L1349.01 1211.71 L1349.6 1211.71 L1350.19 1211.71 L1350.77 1211.71 L1351.36 1211.71 L1351.95 1211.71 L1352.53 1211.71 L1353.12 1211.71 L1353.71 1211.71 L1354.29 1211.71 L1354.88 1211.71 L1355.47 1211.71 L1356.05 1211.71 L1356.64 1211.71 L1357.22 1211.71 L1357.81 1211.71 L1358.4 1211.71 L1358.98 1211.71 L1359.57 1211.71 L1360.16 1211.71 L1360.74 1211.71 L1361.33 1211.71 L1361.92 1211.71 L1362.5 1211.71 L1363.09 1211.71 L1363.68 1211.71 L1364.26 1211.71 L1364.85 1211.71 L1365.43 1211.71 L1366.02 1211.71 L1366.61 1211.71 L1367.19 1211.71 L1367.78 1211.71 L1368.37 1211.71 L1368.95 1211.71 L1369.54 1211.71 L1370.13 1211.71 L1370.71 1211.71 L1371.3 1211.71 L1371.88 1211.71 L1372.47 1211.71 L1373.06 1211.71 L1373.64 1211.71 L1374.23 1211.71 L1374.82 1211.71 L1375.4 1211.71 L1375.99 1211.71 L1376.58 1211.71 L1377.16 1211.71 L1377.75 1211.71 L1378.34 1211.71 L1378.92 1211.71 L1379.51 1211.71 L1380.09 1211.71 L1380.68 1211.71 L1381.27 1211.71 L1381.85 1211.71 L1382.44 1211.71 L1383.03 1211.71 L1383.61 1211.71 L1384.2 1211.71 L1384.79 1211.71 L1385.37 1211.71 L1385.96 1211.71 L1386.55 1211.71 L1387.13 1211.71 L1387.72 1211.71 L1388.3 1211.71 L1388.89 1211.71 L1389.48 1211.71 L1390.06 1211.71 L1390.65 1211.71 L1391.24 1211.71 L1391.82 1211.71 L1392.41 1211.71 L1393 1211.71 L1393.58 1211.71 L1394.17 1211.71 L1394.75 1211.71 L1395.34 1211.71 L1395.93 1211.71 L1396.51 1211.71 L1397.1 1211.71 L1397.69 1211.71 L1398.27 1211.71 L1398.86 1211.71 L1399.45 1211.71 L1400.03 1211.71 L1400.62 1211.71 L1401.21 1211.71 L1401.79 1211.71 L1402.38 1211.71 L1402.96 1211.71 L1403.55 1211.71 L1404.14 1211.71 L1404.72 1211.71 L1405.31 1211.71 L1405.9 1211.71 L1406.48 1211.71 L1407.07 1211.71 L1407.66 1211.71 L1408.24 1211.71 L1408.83 1211.71 L1409.42 1211.71 L1410 1211.71 L1410.59 1211.71 L1411.17 1211.71 L1411.76 1211.71 L1412.35 1211.71 L1412.93 1211.71 L1413.52 1211.71 L1414.11 1211.71 L1414.69 1211.71 L1415.28 1211.71 L1415.87 1211.71 L1416.45 1211.71 L1417.04 1211.71 L1417.63 1211.71 L1418.21 1211.71 L1418.8 1211.71 L1419.38 1211.71 L1419.97 1211.71 L1420.56 1211.71 L1421.14 1211.71 L1421.73 1211.71 L1422.32 1211.71 L1422.9 1211.71 L1423.49 1211.71 L1424.08 1211.71 L1424.66 1211.71 L1425.25 1211.71 L1425.83 1211.71 L1426.42 1211.71 L1427.01 1211.71 L1427.59 1211.71 L1428.18 1211.71 L1428.77 1211.71 L1429.35 1211.71 L1429.94 1211.71 L1430.53 1211.71 L1431.11 1211.71 L1431.7 1211.71 L1432.29 1211.71 L1432.87 1211.71 L1433.46 1211.71 L1434.04 1211.71 L1434.63 1211.71 L1435.22 1211.71 L1435.8 1211.71 L1436.39 1211.71 L1436.98 1211.71 L1437.56 1211.71 L1438.15 1211.71 L1438.74 1211.71 L1439.32 1211.71 L1439.91 1211.71 L1440.5 1211.71 L1441.08 1211.71 L1441.67 1211.71 L1442.25 1211.71 L1442.84 1211.71 L1443.43 1211.71 L1444.01 1211.71 L1444.6 1211.71 L1445.19 1211.71 L1445.77 1211.71 L1446.36 1211.71 L1446.95 1211.71 L1447.53 1211.71 L1448.12 1211.71 L1448.7 1211.71 L1449.29 1211.71 L1449.88 1211.71 L1450.46 1211.71 L1451.05 1211.71 L1451.64 1211.71 L1452.22 1211.71 L1452.81 1211.71 L1453.4 1211.71 L1453.98 1211.71 L1454.57 1211.71 L1455.16 1211.71 L1455.74 1211.71 L1456.33 1211.71 L1456.91 1211.71 L1457.5 1211.71 L1458.09 1211.71 L1458.67 1211.71 L1459.26 1211.71 L1459.85 1211.71 L1460.43 1211.71 L1461.02 1211.71 L1461.61 1211.71 L1462.19 1211.71 L1462.78 1211.71 L1463.37 1211.71 L1463.95 1211.71 L1464.54 1211.71 L1465.12 1211.71 L1465.71 1211.71 L1466.3 1211.71 L1466.88 1211.71 L1467.47 1211.71 L1468.06 1211.71 L1468.64 1211.71 L1469.23 1211.71 L1469.82 1211.71 L1470.4 1211.71 L1470.99 1211.71 L1471.57 1211.71 L1472.16 1211.71 L1472.75 1211.71 L1473.33 1211.71 L1473.92 1211.71 L1474.51 1211.71 L1475.09 1211.71 L1475.68 1211.71 L1476.27 1211.71 L1476.85 1211.71 L1477.44 1211.71 L1478.03 1211.71 L1478.61 1211.71 L1479.2 1211.71 L1479.78 1211.71 L1480.37 1211.71 L1480.96 1211.71 L1481.54 1211.71 L1482.13 1211.71 L1482.72 1211.71 L1483.3 1211.71 L1483.89 1211.71 L1484.48 1211.71 L1485.06 1211.71 L1485.65 1211.71 L1486.24 1211.71 L1486.82 1211.71 L1487.41 1211.71 L1487.99 1211.71 L1488.58 1211.71 L1489.17 1211.71 L1489.75 1211.71 L1490.34 1211.71 L1490.93 1211.71 L1491.51 1211.71 L1492.1 1211.71 L1492.69 1211.71 L1493.27 1211.71 L1493.86 1211.71 L1494.45 1211.71 L1495.03 1211.71 L1495.62 1211.71 L1496.2 1211.71 L1496.79 1211.71 L1497.38 1211.71 L1497.96 1211.71 L1498.55 1211.71 L1499.14 1211.71 L1499.72 1211.71 L1500.31 1211.71 L1500.9 1211.71 L1501.48 1211.71 L1502.07 1211.71 L1502.65 1211.71 L1503.24 1211.71 L1503.83 1211.71 L1504.41 1211.71 L1505 1211.71 L1505.59 1211.71 L1506.17 1211.71 L1506.76 1211.71 L1507.35 1211.71 L1507.93 1211.71 L1508.52 1211.71 L1509.11 1211.71 L1509.69 1211.71 L1510.28 1211.71 L1510.86 1211.71 L1511.45 1211.71 L1512.04 1211.71 L1512.62 1211.71 L1513.21 1211.71 L1513.8 1211.71 L1514.38 1211.71 L1514.97 1211.71 L1515.56 1211.71 L1516.14 1211.71 L1516.73 1211.71 L1517.32 1211.71 L1517.9 1211.71 L1518.49 1211.71 L1519.07 1211.71 L1519.66 1211.71 L1520.25 1211.71 L1520.83 1211.71 L1521.42 1211.71 L1522.01 1211.71 L1522.59 1211.71 L1523.18 1211.71 L1523.77 1211.71 L1524.35 1211.71 L1524.94 1211.71 L1525.52 1211.71 L1526.11 1211.71 L1526.7 1211.71 L1527.28 1211.71 L1527.87 1211.71 L1528.46 1211.71 L1529.04 1211.71 L1529.63 1211.71 L1530.22 1211.71 L1530.8 1211.71 L1531.39 1211.71 L1531.98 1211.71 L1532.56 1211.71 L1533.15 1211.71 L1533.73 1211.71 L1534.32 1211.71 L1534.91 1211.71 L1535.49 1211.71 L1536.08 1211.71 L1536.67 1211.71 L1537.25 1211.71 L1537.84 1211.71 L1538.43 1211.71 L1539.01 1211.71 L1539.6 1211.71 L1540.19 1211.71 L1540.77 1211.71 L1541.36 1211.71 L1541.94 1211.71 L1542.53 1211.71 L1543.12 1211.71 L1543.7 1211.71 L1544.29 1211.71 L1544.88 1211.71 L1545.46 1211.71 L1546.05 1211.71 L1546.64 1211.71 L1547.22 1211.71 L1547.81 1211.71 L1548.4 1211.71 L1548.98 1211.71 L1549.57 1211.71 L1550.15 1211.71 L1550.74 1211.71 L1551.33 1211.71 L1551.91 1211.71 L1552.5 1211.71 L1553.09 1211.71 L1553.67 1211.71 L1554.26 1211.71 L1554.85 1211.71 L1555.43 1211.71 L1556.02 1211.71 L1556.6 1211.71 L1557.19 1211.71 L1557.78 1211.71 L1558.36 1211.71 L1558.95 1211.71 L1559.54 1211.71 L1560.12 1211.71 L1560.71 1211.71 L1561.3 1211.71 L1561.88 1211.71 L1562.47 1211.71 L1563.06 1211.71 L1563.64 1211.71 L1564.23 1211.71 L1564.81 1211.71 L1565.4 1211.71 L1565.99 1211.71 L1566.57 1211.71 L1567.16 1211.71 L1567.75 1211.71 L1568.33 1211.71 L1568.92 1211.71 L1569.51 1211.71 L1570.09 1211.71 L1570.68 1211.71 L1571.27 1211.71 L1571.85 1211.71 L1572.44 1211.71 L1573.02 1211.71 L1573.61 1211.71 L1574.2 1211.71 L1574.78 1211.71 L1575.37 1211.71 L1575.96 1211.71 L1576.54 1211.71 L1577.13 1211.71 L1577.72 1211.71 L1578.3 1211.71 L1578.89 1211.71 L1579.47 1211.71 L1580.06 1211.71 L1580.65 1211.71 L1581.23 1211.71 L1581.82 1211.71 L1582.41 1211.71 L1582.99 1211.71 L1583.58 1211.71 L1584.17 1211.71 L1584.75 1211.71 L1585.34 1211.71 L1585.93 1211.71 L1586.51 1211.71 L1587.1 1211.71 L1587.68 1211.71 L1588.27 1211.71 L1588.86 1211.71 L1589.44 1211.71 L1590.03 1211.71 L1590.62 1211.71 L1591.2 1211.71 L1591.79 1211.71 L1592.38 1211.71 L1592.96 1211.71 L1593.55 1211.71 L1594.14 1211.71 L1594.72 1211.71 L1595.31 1211.71 L1595.89 1211.71 L1596.48 1211.71 L1597.07 1211.71 L1597.65 1211.71 L1598.24 1211.71 L1598.83 1211.71 L1599.41 1211.71 L1600 1211.71 L1600.59 1211.71 L1601.17 1211.71 L1601.76 1211.71 L1602.34 1211.71 L1602.93 1211.71 L1603.52 1211.71 L1604.1 1211.71 L1604.69 1211.71 L1605.28 1211.71 L1605.86 1211.71 L1606.45 1211.71 L1607.04 1211.71 L1607.62 1211.71 L1608.21 1211.71 L1608.8 1211.71 L1609.38 1211.71 L1609.97 1211.71 L1610.55 1211.71 L1611.14 1211.71 L1611.73 1211.71 L1612.31 1211.71 L1612.9 1211.71 L1613.49 1211.71 L1614.07 1211.71 L1614.66 1211.71 L1615.25 1211.71 L1615.83 1211.71 L1616.42 1211.71 L1617.01 1211.71 L1617.59 1211.71 L1618.18 1211.71 L1618.76 1211.71 L1619.35 1211.71 L1619.94 1211.71 L1620.52 1211.71 L1621.11 1211.71 L1621.7 1211.71 L1622.28 1211.71 L1622.87 1211.71 L1623.46 1211.71 L1624.04 1211.71 L1624.63 1211.71 L1625.22 1211.71 L1625.8 1211.71 L1626.39 1211.71 L1626.97 1211.71 L1627.56 1211.71 L1628.15 1211.71 L1628.73 1211.71 L1629.32 1211.71 L1629.91 1211.71 L1630.49 1211.71 L1631.08 1211.71 L1631.67 1211.71 L1632.25 1211.71 L1632.84 1211.71 L1633.42 1211.71 L1634.01 1211.71 L1634.6 1211.71 L1635.18 1211.71 L1635.77 1211.71 L1636.36 1211.71 L1636.94 1211.71 L1637.53 1211.71 L1638.12 1211.71 L1638.7 1211.71 L1639.29 1211.71 L1639.88 1211.71 L1640.46 1211.71 L1641.05 1211.71 L1641.63 1211.71 L1642.22 1211.71 L1642.81 1211.71 L1643.39 1211.71 L1643.98 1211.71 L1644.57 1211.71 L1645.15 1211.71 L1645.74 1211.71 L1646.33 1211.71 L1646.91 1211.71 L1647.5 1211.71 L1648.09 1211.71 L1648.67 1211.71 L1649.26 1211.71 L1649.84 1211.71 L1650.43 1211.71 L1651.02 1211.71 L1651.6 1211.71 L1652.19 1211.71 L1652.78 1211.71 L1653.36 1211.71 L1653.95 1211.71 L1654.54 1211.71 L1655.12 1211.71 L1655.71 1211.71 L1656.29 1211.71 L1656.88 1211.71 L1657.47 1211.71 L1658.05 1211.71 L1658.64 1211.71 L1659.23 1211.71 L1659.81 1211.71 L1660.4 1211.71 L1660.99 1211.71 L1661.57 1211.71 L1662.16 1211.71 L1662.75 1211.71 L1663.33 1211.71 L1663.92 1211.71 L1664.5 1211.71 L1665.09 1211.71 L1665.68 1211.71 L1666.26 1211.71 L1666.85 1211.71 L1667.44 1211.71 L1668.02 1211.71 L1668.61 1211.71 L1669.2 1211.71 L1669.78 1211.71 L1670.37 1211.71 L1670.96 1211.71 L1671.54 1211.71 L1672.13 1211.71 L1672.71 1211.71 L1673.3 1211.71 L1673.89 1211.71 L1674.47 1211.71 L1675.06 1211.71 L1675.65 1211.71 L1676.23 1211.71 L1676.82 1211.71 L1677.41 1211.71 L1677.99 1211.71 L1678.58 1211.71 L1679.17 1211.71 L1679.75 1211.71 L1680.34 1211.71 L1680.92 1211.71 L1681.51 1211.71 L1682.1 1211.71 L1682.68 1211.71 L1683.27 1211.71 L1683.86 1211.71 L1684.44 1211.71 L1685.03 1211.71 L1685.62 1211.71 L1686.2 1211.71 L1686.79 1211.71 L1687.37 1211.71 L1687.96 1211.71 L1688.55 1211.71 L1689.13 1211.71 L1689.72 1211.71 L1690.31 1211.71 L1690.89 1211.71 L1691.48 1211.71 L1692.07 1211.71 L1692.65 1211.71 L1693.24 1211.71 L1693.83 1211.71 L1694.41 1211.71 L1695 1211.71 L1695.58 1211.71 L1696.17 1211.71 L1696.76 1211.71 L1697.34 1211.71 L1697.93 1211.71 L1698.52 1211.71 L1699.1 1211.71 L1699.69 1211.71 L1700.28 1211.71 L1700.86 1211.71 L1701.45 1211.71 L1702.04 1211.71 L1702.62 1211.71 L1703.21 1211.71 L1703.79 1211.71 L1704.38 1211.71 L1704.97 1211.71 L1705.55 1211.71 L1706.14 1211.71 L1706.73 1211.71 L1707.31 1211.71 L1707.9 1211.71 L1708.49 1211.71 L1709.07 1211.71 L1709.66 1211.71 L1710.24 1211.71 L1710.83 1211.71 L1711.42 1211.71 L1712 1211.71 L1712.59 1211.71 L1713.18 1211.71 L1713.76 1211.71 L1714.35 1211.71 L1714.94 1211.71 L1715.52 1211.71 L1716.11 1211.71 L1716.7 1211.71 L1717.28 1211.71 L1717.87 1211.71 L1718.45 1211.71 L1719.04 1211.71 L1719.63 1211.71 L1720.21 1211.71 L1720.8 1211.71 L1721.39 1211.71 L1721.97 1211.71 L1722.56 1211.71 L1723.15 1211.71 L1723.73 1211.71 L1724.32 1211.71 L1724.91 1211.71 L1725.49 1211.71 L1726.08 1211.71 L1726.66 1211.71 L1727.25 1211.71 L1727.84 1211.71 L1728.42 1211.71 L1729.01 1211.71 L1729.6 1211.71 L1730.18 1211.71 L1730.77 1211.71 L1731.36 1211.71 L1731.94 1211.71 L1732.53 1211.71 L1733.11 1211.71 L1733.7 1211.71 L1734.29 1211.71 L1734.87 1211.71 L1735.46 1211.71 L1736.05 1211.71 L1736.63 1211.71 L1737.22 1211.71 L1737.81 1211.71 L1738.39 1211.71 L1738.98 1211.71 L1739.57 1211.71 L1740.15 1211.71 L1740.74 1211.71 L1741.32 1211.71 L1741.91 1211.71 L1742.5 1211.71 L1743.08 1211.71 L1743.67 1211.71 L1744.26 1211.71 L1744.84 1211.71 L1745.43 1211.71 L1746.02 1211.71 L1746.6 1211.71 L1747.19 1211.71 L1747.78 1211.71 L1748.36 1211.71 L1748.95 1211.71 L1749.53 1211.71 L1750.12 1211.71 L1750.71 1211.71 L1751.29 1211.71 L1751.88 1211.71 L1752.47 1211.71 L1753.05 1211.71 L1753.64 1211.71 L1754.23 1211.71 L1754.81 1211.71 L1755.4 1211.71 L1755.99 1211.71 L1756.57 1211.71 L1757.16 1211.71 L1757.74 1211.71 L1758.33 1211.71 L1758.92 1211.71 L1759.5 1211.71 L1760.09 1211.71 L1760.68 1211.71 L1761.26 1211.71 L1761.85 1211.71 L1762.44 1211.71 L1763.02 1211.71 L1763.61 1211.71 L1764.19 1211.71 L1764.78 1211.71 L1765.37 1211.71 L1765.95 1211.71 L1766.54 1211.71 L1767.13 1211.71 L1767.71 1211.71 L1768.3 1211.71 L1768.89 1211.71 L1769.47 1211.71 L1770.06 1211.71 L1770.65 1211.71 L1771.23 1211.71 L1771.82 1211.71 L1772.4 1211.71 L1772.99 1211.71 L1773.58 1211.71 L1774.16 1211.71 L1774.75 1211.71 L1775.34 1211.71 L1775.92 1211.71 L1776.51 1211.71 L1777.1 1211.71 L1777.68 1211.71 L1778.27 1211.71 L1778.86 1211.71 L1779.44 1211.71 L1780.03 1211.71 L1780.61 1211.71 L1781.2 1211.71 L1781.79 1211.71 L1782.37 1211.71 L1782.96 1211.71 L1783.55 1211.71 L1784.13 1211.71 L1784.72 1211.71 L1785.31 1211.71 L1785.89 1211.71 L1786.48 1211.71 L1787.06 1211.71 L1787.65 1211.71 L1788.24 1211.71 L1788.82 1211.71 L1789.41 1211.71 L1790 1211.71 L1790.58 1211.71 L1791.17 1211.71 L1791.76 1211.71 L1792.34 1211.71 L1792.93 1211.71 L1793.52 1211.71 L1794.1 1211.71 L1794.69 1211.71 L1795.27 1211.71 L1795.86 1211.71 L1796.45 1211.71 L1797.03 1211.71 L1797.62 1211.71 L1798.21 1211.71 L1798.79 1211.71 L1799.38 1211.71 L1799.97 1211.71 L1800.55 1211.71 L1801.14 1211.71 L1801.73 1211.71 L1802.31 1211.71 L1802.9 1211.71 L1803.48 1211.71 L1804.07 1211.71 L1804.66 1211.71 L1805.24 1211.71 L1805.83 1211.71 L1806.42 1211.71 L1807 1211.71 L1807.59 1211.71 L1808.18 1211.71 L1808.76 1211.71 L1809.35 1211.71 L1809.94 1211.71 L1810.52 1211.71 L1811.11 1211.71 L1811.69 1211.71 L1812.28 1211.71 L1812.87 1211.71 L1813.45 1211.71 L1814.04 1211.71 L1814.63 1211.71 L1815.21 1211.71 L1815.8 1211.71 L1816.39 1211.71 L1816.97 1211.71 L1817.56 1211.71 L1818.14 1211.71 L1818.73 1211.71 L1819.32 1211.71 L1819.9 1211.71 L1820.49 1211.71 L1821.08 1211.71 L1821.66 1211.71 L1822.25 1211.71 L1822.84 1211.71 L1823.42 1211.71 L1824.01 1211.71 L1824.6 1211.71 L1825.18 1211.71 L1825.77 1211.71 L1826.35 1211.71 L1826.94 1211.71 L1827.53 1211.71 L1828.11 1211.71 L1828.7 1211.71 L1829.29 1211.71 L1829.87 1211.71 L1830.46 1211.71 L1831.05 1211.71 L1831.63 1211.71 L1832.22 1211.71 L1832.81 1211.71 L1833.39 1211.71 L1833.98 1211.71 L1834.56 1211.71 L1835.15 1211.71 L1835.74 1211.71 L1836.32 1211.71 L1836.91 1211.71 L1837.5 1211.71 L1838.08 1211.71 L1838.67 1211.71 L1839.26 1211.71 L1839.84 1211.71 L1840.43 1211.71 L1841.01 1211.71 L1841.6 1211.71 L1842.19 1211.71 L1842.77 1211.71 L1843.36 1211.71 L1843.95 1211.71 L1844.53 1211.71 L1845.12 1211.71 L1845.71 1211.71 L1846.29 1211.71 L1846.88 1211.71 L1847.47 1211.71 L1848.05 1211.71 L1848.64 1211.71 L1849.22 1211.71 L1849.81 1211.71 L1850.4 1211.71 L1850.98 1211.71 L1851.57 1211.71 L1852.16 1211.71 L1852.74 1211.71 L1853.33 1211.71 L1853.92 1211.71 L1854.5 1211.71 L1855.09 1211.71 L1855.68 1211.71 L1856.26 1211.71 L1856.85 1211.71 L1857.43 1211.71 L1858.02 1211.71 L1858.61 1211.71 L1859.19 1211.71 L1859.78 1211.71 L1860.37 1211.71 L1860.95 1211.71 L1861.54 1211.71 L1862.13 1211.71 L1862.71 1211.71 L1863.3 1211.71 L1863.88 1211.71 L1864.47 1211.71 L1865.06 1211.71 L1865.64 1211.71 L1866.23 1211.71 L1866.82 1211.71 L1867.4 1211.71 L1867.99 1211.71 L1868.58 1211.71 L1869.16 1211.71 L1869.75 1211.71 L1870.34 1211.71 L1870.92 1211.71 L1871.51 1211.71 L1872.09 1211.71 L1872.68 1211.71 L1873.27 1211.71 L1873.85 1211.71 L1874.44 1211.71 L1875.03 1211.71 L1875.61 1211.71 L1876.2 1211.71 L1876.79 1211.71 L1877.37 1211.71 L1877.96 1211.71 L1878.55 1211.71 L1879.13 1211.71 L1879.72 1211.71 L1880.3 1211.71 L1880.89 1211.71 L1881.48 1211.71 L1882.06 1211.71 L1882.65 1211.71 L1883.24 1211.71 L1883.82 1211.71 L1884.41 1211.71 L1885 1211.71 L1885.58 1211.71 L1886.17 1211.71 L1886.76 1211.71 L1887.34 1211.71 L1887.93 1211.71 L1888.51 1211.71 L1889.1 1211.71 L1889.69 1211.71 L1890.27 1211.71 L1890.86 1211.71 L1891.45 1211.71 L1892.03 1211.71 L1892.62 1211.71 L1893.21 1211.71 L1893.79 1211.71 L1894.38 1211.71 L1894.96 1211.71 L1895.55 1211.71 L1896.14 1211.71 L1896.72 1211.71 L1897.31 1211.71 L1897.9 1211.71 L1898.48 1211.71 L1899.07 1211.71 L1899.66 1211.71 L1900.24 1211.71 L1900.83 1211.71 L1901.42 1211.71 L1902 1211.71 L1902.59 1211.71 L1903.17 1211.71 L1903.76 1211.71 L1904.35 1211.71 L1904.93 1211.71 L1905.52 1211.71 L1906.11 1211.71 L1906.69 1211.71 L1907.28 1211.71 L1907.87 1211.71 L1908.45 1211.71 L1909.04 1211.71 L1909.63 1211.71 L1910.21 1211.71 L1910.8 1211.71 L1911.38 1211.71 L1911.97 1211.71 L1912.56 1211.71 L1913.14 1211.71 L1913.73 1211.71 L1914.32 1211.71 L1914.9 1211.71 L1915.49 1211.71 L1916.08 1211.71 L1916.66 1211.71 L1917.25 1211.71 L1917.83 1211.71 L1918.42 1211.71 L1919.01 1211.71 L1919.59 1211.71 L1920.18 1211.71 L1920.77 1211.71 L1921.35 1211.71 L1921.94 1211.71 L1922.53 1211.71 L1923.11 1211.71 L1923.7 1211.71 L1924.29 1211.71 L1924.87 1211.71 L1925.46 1211.71 L1926.04 1211.71 L1926.63 1211.71 L1927.22 1211.71 L1927.8 1211.71 L1928.39 1211.71 L1928.98 1211.71 L1929.56 1211.71 L1930.15 1211.71 L1930.74 1211.71 L1931.32 1211.71 L1931.91 1211.71 L1932.5 1211.71 L1933.08 1211.71 L1933.67 1211.71 L1934.25 1211.71 L1934.84 1211.71 L1935.43 1211.71 L1936.01 1211.71 L1936.6 1211.71 L1937.19 1211.71 L1937.77 1211.71 L1938.36 1211.71 L1938.95 1211.71 L1939.53 1211.71 L1940.12 1211.71 L1940.71 1211.71 L1941.29 1211.71 L1941.88 1211.71 L1942.46 1211.71 L1943.05 1211.71 L1943.64 1211.71 L1944.22 1211.71 L1944.81 1211.71 L1945.4 1211.71 L1945.98 1211.71 L1946.57 1211.71 L1947.16 1211.71 L1947.74 1211.71 L1948.33 1211.71 L1948.91 1211.71 L1949.5 1211.71 L1950.09 1211.71 L1950.67 1211.71 L1951.26 1211.71 L1951.85 1211.71 L1952.43 1211.71 L1953.02 1211.71 L1953.61 1211.71 L1954.19 1211.71 L1954.78 1211.71 L1955.37 1211.71 L1955.95 1211.71 L1956.54 1211.71 L1957.12 1211.71 L1957.71 1211.71 L1958.3 1211.71 L1958.88 1211.71 L1959.47 1211.71 L1960.06 1211.71 L1960.64 1211.71 L1961.23 1211.71 L1961.82 1211.71 L1962.4 1211.71 L1962.99 1211.71 L1963.58 1211.71 L1964.16 1211.71 L1964.75 1211.71 L1965.33 1211.71 L1965.92 1211.71 L1966.51 1211.71 L1967.09 1211.71 L1967.68 1211.71 L1968.27 1211.71 L1968.85 1211.71 L1969.44 1211.71 L1970.03 1211.71 L1970.61 1211.71 L1971.2 1211.71 L1971.78 1211.71 L1972.37 1211.71 L1972.96 1211.71 L1973.54 1211.71 L1974.13 1211.71 L1974.72 1211.71 L1975.3 1211.71 L1975.89 1211.71 L1976.48 1211.71 L1977.06 1211.71 L1977.65 1211.71 L1978.24 1211.71 L1978.82 1211.71 L1979.41 1211.71 L1979.99 1211.71 L1980.58 1211.71 L1981.17 1211.71 L1981.75 1211.71 L1982.34 1211.71 L1982.93 1211.71 L1983.51 1211.71 L1984.1 1211.71 L1984.69 1211.71 L1985.27 1211.71 L1985.86 1211.71 L1986.45 1211.71 L1987.03 1211.71 L1987.62 1211.71 L1988.2 1211.71 L1988.79 1211.71 L1989.38 1211.71 L1989.96 1211.71 L1990.55 1211.71 L1991.14 1211.71 L1991.72 1211.71 L1992.31 1211.71 L1992.9 1211.71 L1993.48 1211.71 L1994.07 1211.71 L1994.65 1211.71 L1995.24 1211.71 L1995.83 1211.71 L1996.41 1211.71 L1997 1211.71 L1997.59 1211.71 L1998.17 1211.71 L1998.76 1211.71 L1999.35 1211.71 L1999.93 1211.71 L2000.52 1211.71 L2001.11 1211.71 L2001.69 1211.71 L2002.28 1211.71 L2002.86 1211.71 L2003.45 1211.71 L2004.04 1211.71 L2004.62 1211.71 L2005.21 1211.71 L2005.8 1211.71 L2006.38 1211.71 L2006.97 1211.71 L2007.56 1211.71 L2008.14 1211.71 L2008.73 1211.71 L2009.32 1211.71 L2009.9 1211.71 L2010.49 1211.71 L2011.07 1211.71 L2011.66 1211.71 L2012.25 1211.71 L2012.83 1211.71 L2013.42 1211.71 L2014.01 1211.71 L2014.59 1211.71 L2015.18 1211.71 L2015.77 1211.71 L2016.35 1211.71 L2016.94 1211.71 L2017.53 1211.71 L2018.11 1211.71 L2018.7 1211.71 L2019.28 1211.71 L2019.87 1211.71 L2020.46 1211.71 L2021.04 1211.71 L2021.63 1211.71 L2022.22 1211.71 L2022.8 1211.71 L2023.39 1211.71 L2023.98 1211.71 L2024.56 1211.71 L2025.15 1211.71 L2025.73 1211.71 L2026.32 1211.71 L2026.91 1211.71 L2027.49 1211.71 L2028.08 1211.71 L2028.67 1211.71 L2029.25 1211.71 L2029.84 1211.71 L2030.43 1211.71 L2031.01 1211.71 L2031.6 1211.71 L2032.19 1211.71 L2032.77 1211.71 L2033.36 1211.71 L2033.94 1211.71 L2034.53 1211.71 L2035.12 1211.71 L2035.7 1211.71 L2036.29 1211.71 L2036.88 1211.71 L2037.46 1211.71 L2038.05 1211.71 L2038.64 1211.71 L2039.22 1211.71 L2039.81 1211.71 L2040.4 1211.71 L2040.98 1211.71 L2041.57 1211.71 L2042.15 1211.71 L2042.74 1211.71 L2043.33 1211.71 L2043.91 1211.71 L2044.5 1211.71 L2045.09 1211.71 L2045.67 1211.71 L2046.26 1211.71 L2046.85 1211.71 L2047.43 1211.71 L2048.02 1211.71 L2048.6 1211.71 L2049.19 1211.71 L2049.78 1211.71 L2050.36 1211.71 L2050.95 1211.71 L2051.54 1211.71 L2052.12 1211.71 L2052.71 1211.71 L2053.3 1211.71 L2053.88 1211.71 L2054.47 1211.71 L2055.06 1211.71 L2055.64 1211.71 L2056.23 1211.71 L2056.81 1211.71 L2057.4 1211.71 L2057.99 1211.71 L2058.57 1211.71 L2059.16 1211.71 L2059.75 1211.71 L2060.33 1211.71 L2060.92 1211.71 L2061.51 1211.71 L2062.09 1211.71 L2062.68 1211.71 L2063.27 1211.71 L2063.85 1211.71 L2064.44 1211.71 L2065.02 1211.71 L2065.61 1211.71 L2066.2 1211.71 L2066.78 1211.71 L2067.37 1211.71 L2067.96 1211.71 L2068.54 1211.71 L2069.13 1211.71 L2069.72 1211.71 L2070.3 1211.71 L2070.89 1211.71 L2071.48 1211.71 L2072.06 1211.71 L2072.65 1211.71 L2073.23 1211.71 L2073.82 1211.71 L2074.41 1211.71 L2074.99 1211.71 L2075.58 1211.71 L2076.17 1211.71 L2076.75 1211.71 L2077.34 1211.71 L2077.93 1211.71 L2078.51 1211.71 L2079.1 1211.71 L2079.68 1211.71 L2080.27 1211.71 L2080.86 1211.71 L2081.44 1211.71 L2082.03 1211.71 L2082.62 1211.71 L2083.2 1211.71 L2083.79 1211.71 L2084.38 1211.71 L2084.96 1211.71 L2085.55 1211.71 L2086.14 1211.71 L2086.72 1211.71 L2087.31 1211.71 L2087.89 1211.71 L2088.48 1211.71 L2089.07 1211.71 L2089.65 1211.71 L2090.24 1211.71 L2090.83 1211.71 L2091.41 1211.71 L2092 1211.71 L2092.59 1211.71 L2093.17 1211.71 L2093.76 1211.71 L2094.35 1211.71 L2094.93 1211.71 L2095.52 1211.71 L2096.1 1211.71 L2096.69 1211.71 L2097.28 1211.71 L2097.86 1211.71 L2098.45 1211.71 L2099.04 1211.71 L2099.62 1211.71 L2100.21 1211.71 L2100.8 1211.71 L2101.38 1211.71 L2101.97 1211.71 L2102.55 1211.71 L2103.14 1211.71 L2103.73 1211.71 L2104.31 1211.71 L2104.9 1211.71 L2105.49 1211.71 L2106.07 1211.71 L2106.66 1211.71 L2107.25 1211.71 L2107.83 1211.71 L2108.42 1211.71 L2109.01 1211.71 L2109.59 1211.71 L2110.18 1211.71 L2110.76 1211.71 L2111.35 1211.71 L2111.94 1211.71 L2112.52 1211.71 L2113.11 1211.71 L2113.7 1211.71 L2114.28 1211.71 L2114.87 1211.71 L2115.46 1211.71 L2116.04 1211.71 L2116.63 1211.71 L2117.22 1211.71 L2117.8 1211.71 L2118.39 1211.71 L2118.97 1211.71 L2119.56 1211.71 L2120.15 1211.71 L2120.73 1211.71 L2121.32 1211.71 L2121.91 1211.71 L2122.49 1211.71 L2123.08 1211.71 L2123.67 1211.71 L2124.25 1211.71 L2124.84 1211.71 L2125.42 1211.71 L2126.01 1211.71 L2126.6 1211.71 L2127.18 1211.71 L2127.77 1211.71 L2128.36 1211.71 L2128.94 1211.71 L2129.53 1211.71 L2130.12 1211.71 L2130.7 1211.71 L2131.29 1211.71 L2131.88 1211.71 L2132.46 1211.71 L2133.05 1211.71 L2133.63 1211.71 L2134.22 1211.71 L2134.81 1211.71 L2135.39 1211.71 L2135.98 1211.71 L2136.57 1211.71 L2137.15 1211.71 L2137.74 1211.71 L2138.33 1211.71 L2138.91 1211.71 L2139.5 1211.71 L2140.09 1211.71 L2140.67 1211.71 L2141.26 1211.71 L2141.84 1211.71 L2142.43 1211.71 L2143.02 1211.71 L2143.6 1211.71 L2144.19 1211.71 L2144.78 1211.71 L2145.36 1211.71 L2145.95 1211.71 L2146.54 1211.71 L2147.12 1211.71 L2147.71 1211.71 L2148.3 1211.71 L2148.88 1211.71 L2149.47 1211.71 L2150.05 1211.71 L2150.64 1211.71 L2151.23 1211.71 L2151.81 1211.71 L2152.4 1211.71 L2152.99 1211.71 L2153.57 1211.71 L2154.16 1211.71 L2154.75 1211.71 L2155.33 1211.71 L2155.92 1211.71 L2156.5 1211.71 L2157.09 1211.71 L2157.68 1211.71 L2158.26 1211.71 L2158.26 1210.92 L2157.68 1210.92 L2157.09 1210.92 L2156.5 1210.92 L2155.92 1210.92 L2155.33 1210.92 L2154.75 1210.92 L2154.16 1210.92 L2153.57 1210.92 L2152.99 1210.92 L2152.4 1210.92 L2151.81 1210.92 L2151.23 1210.92 L2150.64 1210.92 L2150.05 1210.92 L2149.47 1210.92 L2148.88 1210.92 L2148.3 1210.92 L2147.71 1210.92 L2147.12 1210.92 L2146.54 1210.92 L2145.95 1210.92 L2145.36 1210.92 L2144.78 1210.92 L2144.19 1210.92 L2143.6 1210.92 L2143.02 1210.92 L2142.43 1210.92 L2141.84 1210.92 L2141.26 1210.92 L2140.67 1210.92 L2140.09 1210.92 L2139.5 1210.92 L2138.91 1210.92 L2138.33 1210.92 L2137.74 1210.92 L2137.15 1210.92 L2136.57 1210.92 L2135.98 1210.92 L2135.39 1210.92 L2134.81 1210.92 L2134.22 1210.92 L2133.63 1210.92 L2133.05 1210.92 L2132.46 1210.92 L2131.88 1210.92 L2131.29 1210.92 L2130.7 1210.92 L2130.12 1210.92 L2129.53 1210.92 L2128.94 1210.92 L2128.36 1210.92 L2127.77 1210.92 L2127.18 1210.92 L2126.6 1210.92 L2126.01 1210.92 L2125.42 1210.92 L2124.84 1210.92 L2124.25 1210.92 L2123.67 1210.92 L2123.08 1210.92 L2122.49 1210.92 L2121.91 1210.92 L2121.32 1210.92 L2120.73 1210.92 L2120.15 1210.92 L2119.56 1210.92 L2118.97 1210.92 L2118.39 1210.92 L2117.8 1210.92 L2117.22 1210.92 L2116.63 1210.92 L2116.04 1210.92 L2115.46 1210.92 L2114.87 1210.92 L2114.28 1210.92 L2113.7 1210.92 L2113.11 1210.92 L2112.52 1210.92 L2111.94 1210.92 L2111.35 1210.92 L2110.76 1210.92 L2110.18 1210.92 L2109.59 1210.92 L2109.01 1210.92 L2108.42 1210.92 L2107.83 1210.92 L2107.25 1210.92 L2106.66 1210.92 L2106.07 1210.92 L2105.49 1210.92 L2104.9 1210.92 L2104.31 1210.92 L2103.73 1210.92 L2103.14 1210.92 L2102.55 1210.92 L2101.97 1210.92 L2101.38 1210.92 L2100.8 1210.92 L2100.21 1210.92 L2099.62 1210.92 L2099.04 1210.92 L2098.45 1210.92 L2097.86 1210.92 L2097.28 1210.92 L2096.69 1210.92 L2096.1 1210.92 L2095.52 1210.92 L2094.93 1210.92 L2094.35 1210.92 L2093.76 1210.92 L2093.17 1210.92 L2092.59 1210.92 L2092 1210.92 L2091.41 1210.92 L2090.83 1210.92 L2090.24 1210.92 L2089.65 1210.92 L2089.07 1210.92 L2088.48 1210.92 L2087.89 1210.92 L2087.31 1210.92 L2086.72 1210.92 L2086.14 1210.92 L2085.55 1210.92 L2084.96 1210.92 L2084.38 1210.92 L2083.79 1210.92 L2083.2 1210.92 L2082.62 1210.92 L2082.03 1210.92 L2081.44 1210.92 L2080.86 1210.92 L2080.27 1210.92 L2079.68 1210.92 L2079.1 1210.92 L2078.51 1210.92 L2077.93 1210.92 L2077.34 1210.92 L2076.75 1210.92 L2076.17 1210.92 L2075.58 1210.92 L2074.99 1210.92 L2074.41 1210.92 L2073.82 1210.92 L2073.23 1210.92 L2072.65 1210.92 L2072.06 1210.92 L2071.48 1210.92 L2070.89 1210.92 L2070.3 1210.92 L2069.72 1210.92 L2069.13 1210.92 L2068.54 1210.92 L2067.96 1210.92 L2067.37 1210.92 L2066.78 1210.92 L2066.2 1210.92 L2065.61 1210.92 L2065.02 1210.92 L2064.44 1210.92 L2063.85 1210.92 L2063.27 1210.92 L2062.68 1210.92 L2062.09 1210.92 L2061.51 1210.92 L2060.92 1210.92 L2060.33 1210.92 L2059.75 1210.92 L2059.16 1210.92 L2058.57 1210.92 L2057.99 1210.92 L2057.4 1210.92 L2056.81 1210.92 L2056.23 1210.92 L2055.64 1210.92 L2055.06 1210.92 L2054.47 1210.92 L2053.88 1210.92 L2053.3 1210.92 L2052.71 1210.92 L2052.12 1210.92 L2051.54 1210.92 L2050.95 1210.92 L2050.36 1210.92 L2049.78 1210.92 L2049.19 1210.92 L2048.6 1210.92 L2048.02 1210.92 L2047.43 1210.92 L2046.85 1210.92 L2046.26 1210.92 L2045.67 1210.92 L2045.09 1210.92 L2044.5 1210.92 L2043.91 1210.92 L2043.33 1210.92 L2042.74 1210.92 L2042.15 1210.92 L2041.57 1210.92 L2040.98 1210.92 L2040.4 1210.92 L2039.81 1210.92 L2039.22 1210.92 L2038.64 1210.92 L2038.05 1210.92 L2037.46 1210.92 L2036.88 1210.92 L2036.29 1210.92 L2035.7 1210.92 L2035.12 1210.92 L2034.53 1210.92 L2033.94 1210.92 L2033.36 1210.92 L2032.77 1210.92 L2032.19 1210.92 L2031.6 1210.92 L2031.01 1210.92 L2030.43 1210.92 L2029.84 1210.92 L2029.25 1210.92 L2028.67 1210.92 L2028.08 1210.92 L2027.49 1210.92 L2026.91 1210.92 L2026.32 1210.92 L2025.73 1210.92 L2025.15 1210.92 L2024.56 1210.92 L2023.98 1210.92 L2023.39 1210.92 L2022.8 1210.92 L2022.22 1210.92 L2021.63 1210.92 L2021.04 1210.92 L2020.46 1210.92 L2019.87 1210.92 L2019.28 1210.92 L2018.7 1210.92 L2018.11 1210.92 L2017.53 1210.92 L2016.94 1210.92 L2016.35 1210.92 L2015.77 1210.92 L2015.18 1210.92 L2014.59 1210.92 L2014.01 1210.92 L2013.42 1210.92 L2012.83 1210.92 L2012.25 1210.92 L2011.66 1210.92 L2011.07 1210.92 L2010.49 1210.92 L2009.9 1210.92 L2009.32 1210.92 L2008.73 1210.92 L2008.14 1210.92 L2007.56 1210.92 L2006.97 1210.92 L2006.38 1210.92 L2005.8 1210.92 L2005.21 1210.92 L2004.62 1210.92 L2004.04 1210.92 L2003.45 1210.92 L2002.86 1210.92 L2002.28 1210.92 L2001.69 1210.92 L2001.11 1210.92 L2000.52 1210.92 L1999.93 1210.92 L1999.35 1210.92 L1998.76 1210.92 L1998.17 1210.92 L1997.59 1210.92 L1997 1210.92 L1996.41 1210.92 L1995.83 1210.92 L1995.24 1210.92 L1994.65 1210.92 L1994.07 1210.92 L1993.48 1210.92 L1992.9 1210.92 L1992.31 1210.92 L1991.72 1210.92 L1991.14 1210.92 L1990.55 1210.92 L1989.96 1210.92 L1989.38 1210.92 L1988.79 1210.92 L1988.2 1210.92 L1987.62 1210.92 L1987.03 1210.92 L1986.45 1210.92 L1985.86 1210.92 L1985.27 1210.92 L1984.69 1210.92 L1984.1 1210.92 L1983.51 1210.92 L1982.93 1210.92 L1982.34 1210.92 L1981.75 1210.92 L1981.17 1210.92 L1980.58 1210.92 L1979.99 1210.92 L1979.41 1210.92 L1978.82 1210.92 L1978.24 1210.92 L1977.65 1210.92 L1977.06 1210.92 L1976.48 1210.92 L1975.89 1210.92 L1975.3 1210.92 L1974.72 1210.92 L1974.13 1210.92 L1973.54 1210.92 L1972.96 1210.92 L1972.37 1210.92 L1971.78 1210.92 L1971.2 1210.92 L1970.61 1210.92 L1970.03 1210.92 L1969.44 1210.92 L1968.85 1210.92 L1968.27 1210.92 L1967.68 1210.92 L1967.09 1210.92 L1966.51 1210.92 L1965.92 1210.92 L1965.33 1210.92 L1964.75 1210.92 L1964.16 1210.92 L1963.58 1210.92 L1962.99 1210.92 L1962.4 1210.92 L1961.82 1210.92 L1961.23 1210.92 L1960.64 1210.92 L1960.06 1210.92 L1959.47 1210.92 L1958.88 1210.92 L1958.3 1210.92 L1957.71 1210.92 L1957.12 1210.92 L1956.54 1210.92 L1955.95 1210.92 L1955.37 1210.92 L1954.78 1210.92 L1954.19 1210.92 L1953.61 1210.92 L1953.02 1210.92 L1952.43 1210.92 L1951.85 1210.92 L1951.26 1210.92 L1950.67 1210.92 L1950.09 1210.92 L1949.5 1210.92 L1948.91 1210.92 L1948.33 1210.92 L1947.74 1210.92 L1947.16 1210.92 L1946.57 1210.92 L1945.98 1210.92 L1945.4 1210.92 L1944.81 1210.92 L1944.22 1210.92 L1943.64 1210.92 L1943.05 1210.92 L1942.46 1210.92 L1941.88 1210.92 L1941.29 1210.92 L1940.71 1210.92 L1940.12 1210.92 L1939.53 1210.92 L1938.95 1210.92 L1938.36 1210.92 L1937.77 1210.92 L1937.19 1210.92 L1936.6 1210.92 L1936.01 1210.92 L1935.43 1210.92 L1934.84 1210.92 L1934.25 1210.92 L1933.67 1210.92 L1933.08 1210.92 L1932.5 1210.92 L1931.91 1210.92 L1931.32 1210.92 L1930.74 1210.92 L1930.15 1210.92 L1929.56 1210.92 L1928.98 1210.92 L1928.39 1210.92 L1927.8 1210.92 L1927.22 1210.92 L1926.63 1210.92 L1926.04 1210.92 L1925.46 1210.92 L1924.87 1210.92 L1924.29 1210.92 L1923.7 1210.92 L1923.11 1210.92 L1922.53 1210.92 L1921.94 1210.92 L1921.35 1210.92 L1920.77 1210.92 L1920.18 1210.92 L1919.59 1210.92 L1919.01 1210.92 L1918.42 1210.92 L1917.83 1210.92 L1917.25 1210.92 L1916.66 1210.92 L1916.08 1210.92 L1915.49 1210.92 L1914.9 1210.92 L1914.32 1210.92 L1913.73 1210.92 L1913.14 1210.92 L1912.56 1210.92 L1911.97 1210.92 L1911.38 1210.92 L1910.8 1210.92 L1910.21 1210.92 L1909.63 1210.92 L1909.04 1210.92 L1908.45 1210.92 L1907.87 1210.92 L1907.28 1210.92 L1906.69 1210.92 L1906.11 1210.92 L1905.52 1210.92 L1904.93 1210.92 L1904.35 1210.92 L1903.76 1210.92 L1903.17 1210.92 L1902.59 1210.92 L1902 1210.92 L1901.42 1210.92 L1900.83 1210.92 L1900.24 1210.92 L1899.66 1210.92 L1899.07 1210.92 L1898.48 1210.92 L1897.9 1210.92 L1897.31 1210.92 L1896.72 1210.92 L1896.14 1210.92 L1895.55 1210.92 L1894.96 1210.92 L1894.38 1210.92 L1893.79 1210.92 L1893.21 1210.92 L1892.62 1210.92 L1892.03 1210.92 L1891.45 1210.92 L1890.86 1210.92 L1890.27 1210.92 L1889.69 1210.92 L1889.1 1210.92 L1888.51 1210.92 L1887.93 1210.92 L1887.34 1210.92 L1886.76 1210.92 L1886.17 1210.92 L1885.58 1210.92 L1885 1210.92 L1884.41 1210.92 L1883.82 1210.92 L1883.24 1210.92 L1882.65 1210.92 L1882.06 1210.92 L1881.48 1210.92 L1880.89 1210.92 L1880.3 1210.92 L1879.72 1210.92 L1879.13 1210.92 L1878.55 1210.92 L1877.96 1210.92 L1877.37 1210.92 L1876.79 1210.92 L1876.2 1210.92 L1875.61 1210.92 L1875.03 1210.92 L1874.44 1210.92 L1873.85 1210.92 L1873.27 1210.92 L1872.68 1210.92 L1872.09 1210.92 L1871.51 1210.92 L1870.92 1210.92 L1870.34 1210.92 L1869.75 1210.92 L1869.16 1210.92 L1868.58 1210.92 L1867.99 1210.92 L1867.4 1210.92 L1866.82 1210.92 L1866.23 1210.92 L1865.64 1210.92 L1865.06 1210.92 L1864.47 1210.92 L1863.88 1210.92 L1863.3 1210.92 L1862.71 1210.92 L1862.13 1210.92 L1861.54 1210.92 L1860.95 1210.92 L1860.37 1210.92 L1859.78 1210.92 L1859.19 1210.92 L1858.61 1210.92 L1858.02 1210.92 L1857.43 1210.92 L1856.85 1210.92 L1856.26 1210.92 L1855.68 1210.92 L1855.09 1210.92 L1854.5 1210.92 L1853.92 1210.92 L1853.33 1210.92 L1852.74 1210.92 L1852.16 1210.92 L1851.57 1210.92 L1850.98 1210.92 L1850.4 1210.92 L1849.81 1210.92 L1849.22 1210.92 L1848.64 1210.92 L1848.05 1210.92 L1847.47 1210.92 L1846.88 1210.92 L1846.29 1210.92 L1845.71 1210.92 L1845.12 1210.92 L1844.53 1210.92 L1843.95 1210.92 L1843.36 1210.92 L1842.77 1210.92 L1842.19 1210.92 L1841.6 1210.92 L1841.01 1210.92 L1840.43 1210.92 L1839.84 1210.92 L1839.26 1210.92 L1838.67 1210.92 L1838.08 1210.92 L1837.5 1210.92 L1836.91 1210.92 L1836.32 1210.92 L1835.74 1210.92 L1835.15 1210.92 L1834.56 1210.92 L1833.98 1210.92 L1833.39 1210.92 L1832.81 1210.92 L1832.22 1210.92 L1831.63 1210.92 L1831.05 1210.92 L1830.46 1210.92 L1829.87 1210.92 L1829.29 1210.92 L1828.7 1210.92 L1828.11 1210.92 L1827.53 1210.92 L1826.94 1210.92 L1826.35 1210.92 L1825.77 1210.92 L1825.18 1210.92 L1824.6 1210.92 L1824.01 1210.92 L1823.42 1210.92 L1822.84 1210.92 L1822.25 1210.92 L1821.66 1210.92 L1821.08 1210.92 L1820.49 1210.92 L1819.9 1210.92 L1819.32 1210.92 L1818.73 1210.92 L1818.14 1210.92 L1817.56 1210.92 L1816.97 1210.92 L1816.39 1210.92 L1815.8 1210.92 L1815.21 1210.92 L1814.63 1210.92 L1814.04 1210.92 L1813.45 1210.92 L1812.87 1210.92 L1812.28 1210.92 L1811.69 1210.92 L1811.11 1210.92 L1810.52 1210.92 L1809.94 1210.92 L1809.35 1210.92 L1808.76 1210.92 L1808.18 1210.92 L1807.59 1210.92 L1807 1210.92 L1806.42 1210.92 L1805.83 1210.92 L1805.24 1210.92 L1804.66 1210.92 L1804.07 1210.92 L1803.48 1210.92 L1802.9 1210.92 L1802.31 1210.92 L1801.73 1210.92 L1801.14 1210.92 L1800.55 1210.92 L1799.97 1210.92 L1799.38 1210.92 L1798.79 1210.92 L1798.21 1210.92 L1797.62 1210.92 L1797.03 1210.92 L1796.45 1210.92 L1795.86 1210.92 L1795.27 1210.92 L1794.69 1210.92 L1794.1 1210.92 L1793.52 1210.92 L1792.93 1210.92 L1792.34 1210.92 L1791.76 1210.92 L1791.17 1210.92 L1790.58 1210.92 L1790 1210.92 L1789.41 1210.92 L1788.82 1210.92 L1788.24 1210.92 L1787.65 1210.92 L1787.06 1210.92 L1786.48 1210.92 L1785.89 1210.92 L1785.31 1210.92 L1784.72 1210.92 L1784.13 1210.92 L1783.55 1210.92 L1782.96 1210.92 L1782.37 1210.92 L1781.79 1210.92 L1781.2 1210.92 L1780.61 1210.92 L1780.03 1210.92 L1779.44 1210.92 L1778.86 1210.92 L1778.27 1210.92 L1777.68 1210.92 L1777.1 1210.92 L1776.51 1210.92 L1775.92 1210.92 L1775.34 1210.92 L1774.75 1210.92 L1774.16 1210.92 L1773.58 1210.92 L1772.99 1210.92 L1772.4 1210.92 L1771.82 1210.92 L1771.23 1210.92 L1770.65 1210.92 L1770.06 1210.92 L1769.47 1210.92 L1768.89 1210.92 L1768.3 1210.92 L1767.71 1210.92 L1767.13 1210.92 L1766.54 1210.92 L1765.95 1210.92 L1765.37 1210.92 L1764.78 1210.92 L1764.19 1210.92 L1763.61 1210.92 L1763.02 1210.92 L1762.44 1210.92 L1761.85 1210.92 L1761.26 1210.92 L1760.68 1210.92 L1760.09 1210.92 L1759.5 1210.92 L1758.92 1210.92 L1758.33 1210.92 L1757.74 1210.92 L1757.16 1210.92 L1756.57 1210.92 L1755.99 1210.92 L1755.4 1210.92 L1754.81 1210.92 L1754.23 1210.92 L1753.64 1210.92 L1753.05 1210.92 L1752.47 1210.92 L1751.88 1210.92 L1751.29 1210.92 L1750.71 1210.92 L1750.12 1210.92 L1749.53 1210.92 L1748.95 1210.92 L1748.36 1210.92 L1747.78 1210.92 L1747.19 1210.92 L1746.6 1210.92 L1746.02 1210.92 L1745.43 1210.92 L1744.84 1210.92 L1744.26 1210.92 L1743.67 1210.92 L1743.08 1210.92 L1742.5 1210.92 L1741.91 1210.92 L1741.32 1210.92 L1740.74 1210.92 L1740.15 1210.92 L1739.57 1210.92 L1738.98 1210.92 L1738.39 1210.92 L1737.81 1210.92 L1737.22 1210.92 L1736.63 1210.92 L1736.05 1210.92 L1735.46 1210.92 L1734.87 1210.92 L1734.29 1210.92 L1733.7 1210.92 L1733.11 1210.92 L1732.53 1210.92 L1731.94 1210.92 L1731.36 1210.92 L1730.77 1210.92 L1730.18 1210.92 L1729.6 1210.92 L1729.01 1210.92 L1728.42 1210.92 L1727.84 1210.92 L1727.25 1210.92 L1726.66 1210.92 L1726.08 1210.92 L1725.49 1210.92 L1724.91 1210.92 L1724.32 1210.92 L1723.73 1210.92 L1723.15 1210.92 L1722.56 1210.92 L1721.97 1210.92 L1721.39 1210.92 L1720.8 1210.92 L1720.21 1210.92 L1719.63 1210.92 L1719.04 1210.92 L1718.45 1210.92 L1717.87 1210.92 L1717.28 1210.92 L1716.7 1210.92 L1716.11 1210.92 L1715.52 1210.92 L1714.94 1210.92 L1714.35 1210.92 L1713.76 1210.92 L1713.18 1210.92 L1712.59 1210.92 L1712 1210.92 L1711.42 1210.92 L1710.83 1210.92 L1710.24 1210.92 L1709.66 1210.92 L1709.07 1210.92 L1708.49 1210.92 L1707.9 1210.92 L1707.31 1210.92 L1706.73 1210.92 L1706.14 1210.92 L1705.55 1210.92 L1704.97 1210.92 L1704.38 1210.92 L1703.79 1210.92 L1703.21 1210.92 L1702.62 1210.92 L1702.04 1210.92 L1701.45 1210.92 L1700.86 1210.92 L1700.28 1210.92 L1699.69 1210.92 L1699.1 1210.92 L1698.52 1210.92 L1697.93 1210.92 L1697.34 1210.92 L1696.76 1210.92 L1696.17 1210.92 L1695.58 1210.92 L1695 1210.92 L1694.41 1210.92 L1693.83 1210.92 L1693.24 1210.92 L1692.65 1210.92 L1692.07 1210.92 L1691.48 1210.92 L1690.89 1210.92 L1690.31 1210.92 L1689.72 1210.92 L1689.13 1210.92 L1688.55 1210.92 L1687.96 1210.92 L1687.37 1210.92 L1686.79 1210.92 L1686.2 1210.92 L1685.62 1210.92 L1685.03 1210.92 L1684.44 1210.92 L1683.86 1210.92 L1683.27 1210.92 L1682.68 1210.92 L1682.1 1210.92 L1681.51 1210.92 L1680.92 1210.92 L1680.34 1210.92 L1679.75 1210.92 L1679.17 1210.92 L1678.58 1210.92 L1677.99 1210.92 L1677.41 1210.92 L1676.82 1210.92 L1676.23 1210.92 L1675.65 1210.92 L1675.06 1210.92 L1674.47 1210.92 L1673.89 1210.92 L1673.3 1210.92 L1672.71 1210.92 L1672.13 1210.92 L1671.54 1210.92 L1670.96 1210.92 L1670.37 1210.92 L1669.78 1210.92 L1669.2 1210.92 L1668.61 1210.92 L1668.02 1210.92 L1667.44 1210.92 L1666.85 1210.92 L1666.26 1210.92 L1665.68 1210.92 L1665.09 1210.92 L1664.5 1210.92 L1663.92 1210.92 L1663.33 1210.92 L1662.75 1210.92 L1662.16 1210.92 L1661.57 1210.92 L1660.99 1210.92 L1660.4 1210.92 L1659.81 1210.92 L1659.23 1210.92 L1658.64 1210.92 L1658.05 1210.92 L1657.47 1210.92 L1656.88 1210.92 L1656.29 1210.92 L1655.71 1210.92 L1655.12 1210.92 L1654.54 1210.92 L1653.95 1210.92 L1653.36 1210.92 L1652.78 1210.92 L1652.19 1210.92 L1651.6 1210.92 L1651.02 1210.92 L1650.43 1210.92 L1649.84 1210.92 L1649.26 1210.92 L1648.67 1210.92 L1648.09 1210.92 L1647.5 1210.92 L1646.91 1210.92 L1646.33 1210.92 L1645.74 1210.92 L1645.15 1210.92 L1644.57 1210.92 L1643.98 1210.92 L1643.39 1210.92 L1642.81 1210.92 L1642.22 1210.92 L1641.63 1210.92 L1641.05 1210.92 L1640.46 1210.92 L1639.88 1210.92 L1639.29 1210.92 L1638.7 1210.92 L1638.12 1210.92 L1637.53 1210.92 L1636.94 1210.92 L1636.36 1210.92 L1635.77 1210.92 L1635.18 1210.92 L1634.6 1210.92 L1634.01 1210.92 L1633.42 1210.92 L1632.84 1210.92 L1632.25 1210.92 L1631.67 1210.92 L1631.08 1210.92 L1630.49 1210.92 L1629.91 1210.92 L1629.32 1210.92 L1628.73 1210.92 L1628.15 1210.92 L1627.56 1210.92 L1626.97 1210.92 L1626.39 1210.92 L1625.8 1210.92 L1625.22 1210.92 L1624.63 1210.92 L1624.04 1210.92 L1623.46 1210.92 L1622.87 1210.92 L1622.28 1210.92 L1621.7 1210.92 L1621.11 1210.92 L1620.52 1210.92 L1619.94 1210.92 L1619.35 1210.92 L1618.76 1210.92 L1618.18 1210.92 L1617.59 1210.92 L1617.01 1210.92 L1616.42 1210.92 L1615.83 1210.92 L1615.25 1210.92 L1614.66 1210.92 L1614.07 1210.92 L1613.49 1210.92 L1612.9 1210.92 L1612.31 1210.92 L1611.73 1210.92 L1611.14 1210.92 L1610.55 1210.92 L1609.97 1210.92 L1609.38 1210.92 L1608.8 1210.92 L1608.21 1210.92 L1607.62 1210.92 L1607.04 1210.92 L1606.45 1210.92 L1605.86 1210.92 L1605.28 1210.92 L1604.69 1210.92 L1604.1 1210.92 L1603.52 1210.92 L1602.93 1210.92 L1602.34 1210.92 L1601.76 1210.92 L1601.17 1210.92 L1600.59 1210.92 L1600 1210.92 L1599.41 1210.92 L1598.83 1210.92 L1598.24 1210.92 L1597.65 1210.92 L1597.07 1210.92 L1596.48 1210.92 L1595.89 1210.92 L1595.31 1210.92 L1594.72 1210.92 L1594.14 1210.92 L1593.55 1210.92 L1592.96 1210.92 L1592.38 1210.92 L1591.79 1210.92 L1591.2 1210.92 L1590.62 1210.92 L1590.03 1210.92 L1589.44 1210.92 L1588.86 1210.92 L1588.27 1210.92 L1587.68 1210.92 L1587.1 1210.92 L1586.51 1210.92 L1585.93 1210.92 L1585.34 1210.92 L1584.75 1210.92 L1584.17 1210.92 L1583.58 1210.92 L1582.99 1210.92 L1582.41 1210.92 L1581.82 1210.92 L1581.23 1210.92 L1580.65 1210.92 L1580.06 1210.92 L1579.47 1210.92 L1578.89 1210.92 L1578.3 1210.92 L1577.72 1210.92 L1577.13 1210.92 L1576.54 1210.92 L1575.96 1210.92 L1575.37 1210.92 L1574.78 1210.92 L1574.2 1210.92 L1573.61 1210.92 L1573.02 1210.92 L1572.44 1210.92 L1571.85 1210.92 L1571.27 1210.92 L1570.68 1210.92 L1570.09 1210.92 L1569.51 1210.92 L1568.92 1210.92 L1568.33 1210.92 L1567.75 1210.92 L1567.16 1210.92 L1566.57 1210.92 L1565.99 1210.92 L1565.4 1210.92 L1564.81 1210.92 L1564.23 1210.92 L1563.64 1210.92 L1563.06 1210.92 L1562.47 1210.92 L1561.88 1210.92 L1561.3 1210.92 L1560.71 1210.92 L1560.12 1210.92 L1559.54 1210.92 L1558.95 1210.92 L1558.36 1210.92 L1557.78 1210.92 L1557.19 1210.92 L1556.6 1210.92 L1556.02 1210.92 L1555.43 1210.92 L1554.85 1210.92 L1554.26 1210.92 L1553.67 1210.92 L1553.09 1210.92 L1552.5 1210.92 L1551.91 1210.92 L1551.33 1210.92 L1550.74 1210.92 L1550.15 1210.92 L1549.57 1210.92 L1548.98 1210.92 L1548.4 1210.92 L1547.81 1210.92 L1547.22 1210.92 L1546.64 1210.92 L1546.05 1210.92 L1545.46 1210.92 L1544.88 1210.92 L1544.29 1210.92 L1543.7 1210.92 L1543.12 1210.92 L1542.53 1210.92 L1541.94 1210.92 L1541.36 1210.92 L1540.77 1210.92 L1540.19 1210.92 L1539.6 1210.92 L1539.01 1210.92 L1538.43 1210.92 L1537.84 1210.92 L1537.25 1210.92 L1536.67 1210.92 L1536.08 1210.92 L1535.49 1210.92 L1534.91 1210.92 L1534.32 1210.92 L1533.73 1210.92 L1533.15 1210.92 L1532.56 1210.92 L1531.98 1210.92 L1531.39 1210.92 L1530.8 1210.92 L1530.22 1210.92 L1529.63 1210.92 L1529.04 1210.92 L1528.46 1210.92 L1527.87 1210.92 L1527.28 1210.92 L1526.7 1210.92 L1526.11 1210.92 L1525.52 1210.92 L1524.94 1210.92 L1524.35 1210.92 L1523.77 1210.92 L1523.18 1210.92 L1522.59 1210.92 L1522.01 1210.92 L1521.42 1210.92 L1520.83 1210.92 L1520.25 1210.92 L1519.66 1210.92 L1519.07 1210.92 L1518.49 1210.92 L1517.9 1210.92 L1517.32 1210.92 L1516.73 1210.92 L1516.14 1210.92 L1515.56 1210.92 L1514.97 1210.92 L1514.38 1210.92 L1513.8 1210.92 L1513.21 1210.92 L1512.62 1210.92 L1512.04 1210.92 L1511.45 1210.92 L1510.86 1210.92 L1510.28 1210.92 L1509.69 1210.92 L1509.11 1210.92 L1508.52 1210.92 L1507.93 1210.92 L1507.35 1210.92 L1506.76 1210.92 L1506.17 1210.92 L1505.59 1210.92 L1505 1210.92 L1504.41 1210.92 L1503.83 1210.92 L1503.24 1210.92 L1502.65 1210.92 L1502.07 1210.92 L1501.48 1210.92 L1500.9 1210.92 L1500.31 1210.92 L1499.72 1210.92 L1499.14 1210.92 L1498.55 1210.92 L1497.96 1210.92 L1497.38 1210.92 L1496.79 1210.92 L1496.2 1210.92 L1495.62 1210.92 L1495.03 1210.92 L1494.45 1210.92 L1493.86 1210.92 L1493.27 1210.92 L1492.69 1210.92 L1492.1 1210.92 L1491.51 1210.92 L1490.93 1210.92 L1490.34 1210.92 L1489.75 1210.92 L1489.17 1210.92 L1488.58 1210.92 L1487.99 1210.92 L1487.41 1210.92 L1486.82 1210.92 L1486.24 1210.92 L1485.65 1210.92 L1485.06 1210.92 L1484.48 1210.92 L1483.89 1210.92 L1483.3 1210.92 L1482.72 1210.92 L1482.13 1210.92 L1481.54 1210.92 L1480.96 1210.92 L1480.37 1210.92 L1479.78 1210.92 L1479.2 1210.92 L1478.61 1210.92 L1478.03 1210.92 L1477.44 1210.92 L1476.85 1210.92 L1476.27 1210.92 L1475.68 1210.92 L1475.09 1210.92 L1474.51 1210.92 L1473.92 1210.92 L1473.33 1210.92 L1472.75 1210.92 L1472.16 1210.92 L1471.57 1210.92 L1470.99 1210.92 L1470.4 1210.92 L1469.82 1210.92 L1469.23 1210.92 L1468.64 1210.92 L1468.06 1210.92 L1467.47 1210.92 L1466.88 1210.92 L1466.3 1210.92 L1465.71 1210.92 L1465.12 1210.92 L1464.54 1210.92 L1463.95 1210.92 L1463.37 1210.92 L1462.78 1210.92 L1462.19 1210.92 L1461.61 1210.92 L1461.02 1210.92 L1460.43 1210.92 L1459.85 1210.92 L1459.26 1210.92 L1458.67 1210.92 L1458.09 1210.92 L1457.5 1210.92 L1456.91 1210.92 L1456.33 1210.92 L1455.74 1210.92 L1455.16 1210.92 L1454.57 1210.92 L1453.98 1210.92 L1453.4 1210.92 L1452.81 1210.92 L1452.22 1210.92 L1451.64 1210.92 L1451.05 1210.92 L1450.46 1210.92 L1449.88 1210.92 L1449.29 1210.92 L1448.7 1210.92 L1448.12 1210.92 L1447.53 1210.92 L1446.95 1210.92 L1446.36 1210.92 L1445.77 1210.92 L1445.19 1210.92 L1444.6 1210.92 L1444.01 1210.92 L1443.43 1210.92 L1442.84 1210.92 L1442.25 1210.92 L1441.67 1210.92 L1441.08 1210.92 L1440.5 1210.92 L1439.91 1210.92 L1439.32 1210.92 L1438.74 1210.92 L1438.15 1210.92 L1437.56 1210.92 L1436.98 1210.92 L1436.39 1210.92 L1435.8 1210.92 L1435.22 1210.92 L1434.63 1210.92 L1434.04 1210.92 L1433.46 1210.92 L1432.87 1210.92 L1432.29 1210.92 L1431.7 1210.92 L1431.11 1210.92 L1430.53 1210.92 L1429.94 1210.92 L1429.35 1210.92 L1428.77 1210.92 L1428.18 1210.92 L1427.59 1210.92 L1427.01 1210.92 L1426.42 1210.92 L1425.83 1210.92 L1425.25 1210.92 L1424.66 1210.92 L1424.08 1210.92 L1423.49 1210.92 L1422.9 1210.92 L1422.32 1210.92 L1421.73 1210.92 L1421.14 1210.92 L1420.56 1210.92 L1419.97 1210.92 L1419.38 1210.92 L1418.8 1210.92 L1418.21 1210.92 L1417.63 1210.92 L1417.04 1210.92 L1416.45 1210.92 L1415.87 1210.92 L1415.28 1210.92 L1414.69 1210.92 L1414.11 1210.92 L1413.52 1210.92 L1412.93 1210.92 L1412.35 1210.92 L1411.76 1210.92 L1411.17 1210.92 L1410.59 1210.92 L1410 1210.92 L1409.42 1210.92 L1408.83 1210.92 L1408.24 1210.92 L1407.66 1210.92 L1407.07 1210.92 L1406.48 1210.92 L1405.9 1210.92 L1405.31 1210.92 L1404.72 1210.92 L1404.14 1210.92 L1403.55 1210.92 L1402.96 1210.92 L1402.38 1210.92 L1401.79 1210.92 L1401.21 1210.92 L1400.62 1210.92 L1400.03 1210.92 L1399.45 1210.92 L1398.86 1210.92 L1398.27 1210.92 L1397.69 1210.92 L1397.1 1210.92 L1396.51 1210.92 L1395.93 1210.92 L1395.34 1210.92 L1394.75 1210.92 L1394.17 1210.92 L1393.58 1210.92 L1393 1210.92 L1392.41 1210.92 L1391.82 1210.92 L1391.24 1210.92 L1390.65 1210.92 L1390.06 1210.92 L1389.48 1210.92 L1388.89 1210.92 L1388.3 1210.92 L1387.72 1210.92 L1387.13 1210.92 L1386.55 1210.92 L1385.96 1210.92 L1385.37 1210.92 L1384.79 1210.92 L1384.2 1210.92 L1383.61 1210.92 L1383.03 1210.92 L1382.44 1210.92 L1381.85 1210.92 L1381.27 1210.92 L1380.68 1210.92 L1380.09 1210.92 L1379.51 1210.92 L1378.92 1210.92 L1378.34 1210.92 L1377.75 1210.92 L1377.16 1210.92 L1376.58 1210.92 L1375.99 1210.92 L1375.4 1210.92 L1374.82 1210.92 L1374.23 1210.92 L1373.64 1210.92 L1373.06 1210.92 L1372.47 1210.92 L1371.88 1210.92 L1371.3 1210.92 L1370.71 1210.92 L1370.13 1210.92 L1369.54 1210.92 L1368.95 1210.92 L1368.37 1210.92 L1367.78 1210.92 L1367.19 1210.92 L1366.61 1210.92 L1366.02 1210.92 L1365.43 1210.92 L1364.85 1210.92 L1364.26 1210.92 L1363.68 1210.92 L1363.09 1210.92 L1362.5 1210.92 L1361.92 1210.92 L1361.33 1210.92 L1360.74 1210.92 L1360.16 1210.92 L1359.57 1210.92 L1358.98 1210.92 L1358.4 1210.92 L1357.81 1210.92 L1357.22 1210.92 L1356.64 1210.92 L1356.05 1210.92 L1355.47 1210.92 L1354.88 1210.92 L1354.29 1210.92 L1353.71 1210.92 L1353.12 1210.92 L1352.53 1210.92 L1351.95 1210.92 L1351.36 1210.92 L1350.77 1210.92 L1350.19 1210.92 L1349.6 1210.92 L1349.01 1210.92 L1348.43 1210.92 L1347.84 1210.92 L1347.26 1210.92 L1346.67 1210.92 L1346.08 1210.92 L1345.5 1210.92 L1344.91 1210.92 L1344.32 1210.92 L1343.74 1210.92 L1343.15 1210.92 L1342.56 1210.92 L1341.98 1210.92 L1341.39 1210.92 L1340.8 1210.92 L1340.22 1210.92 L1339.63 1210.92 L1339.05 1210.92 L1338.46 1210.92 L1337.87 1210.92 L1337.29 1210.92 L1336.7 1210.92 L1336.11 1210.92 L1335.53 1210.92 L1334.94 1210.92 L1334.35 1210.92 L1333.77 1210.92 L1333.18 1210.92 L1332.6 1210.92 L1332.01 1210.92 L1331.42 1210.92 L1330.84 1210.92 L1330.25 1210.92 L1329.66 1210.92 L1329.08 1210.92 L1328.49 1210.92 L1327.9 1210.92 L1327.32 1210.92 L1326.73 1210.92 L1326.14 1210.92 L1325.56 1210.92 L1324.97 1210.92 L1324.39 1210.92 L1323.8 1210.92 L1323.21 1210.92 L1322.63 1210.92 L1322.04 1210.92 L1321.45 1210.92 L1320.87 1210.92 L1320.28 1210.92 L1319.69 1210.92 L1319.11 1210.92 L1318.52 1210.92 L1317.93 1210.92 L1317.35 1210.92 L1316.76 1210.92 L1316.18 1210.92 L1315.59 1210.92 L1315 1210.92 L1314.42 1210.92 L1313.83 1210.92 L1313.24 1210.92 L1312.66 1210.92 L1312.07 1210.92 L1311.48 1210.92 L1310.9 1210.92 L1310.31 1210.92 L1309.73 1210.92 L1309.14 1210.92 L1308.55 1210.92 L1307.97 1210.92 L1307.38 1210.92 L1306.79 1210.92 L1306.21 1210.92 L1305.62 1210.92 L1305.03 1210.92 L1304.45 1210.92 L1303.86 1210.92 L1303.27 1210.92 L1302.69 1210.92 L1302.1 1210.92 L1301.52 1210.92 L1300.93 1210.92 L1300.34 1210.92 L1299.76 1210.92 L1299.17 1210.92 L1298.58 1210.92 L1298 1210.92 L1297.41 1210.92 L1296.82 1210.92 L1296.24 1210.92 L1295.65 1210.92 L1295.06 1210.92 L1294.48 1210.92 L1293.89 1210.92 L1293.31 1210.92 L1292.72 1210.92 L1292.13 1210.92 L1291.55 1210.92 L1290.96 1210.92 L1290.37 1210.92 L1289.79 1210.92 L1289.2 1210.92 L1288.61 1210.92 L1288.03 1210.92 L1287.44 1210.92 L1286.86 1210.92 L1286.27 1210.92 L1285.68 1210.92 L1285.1 1210.92 L1284.51 1210.92 L1283.92 1210.92 L1283.34 1210.92 L1282.75 1210.92 L1282.16 1210.92 L1281.58 1210.92 L1280.99 1210.92 L1280.4 1210.92 L1279.82 1210.92 L1279.23 1210.92 L1278.65 1210.92 L1278.06 1210.92 L1277.47 1210.92 L1276.89 1210.92 L1276.3 1210.92 L1275.71 1210.92 L1275.13 1210.92 L1274.54 1210.92 L1273.95 1210.92 L1273.37 1210.92 L1272.78 1210.92 L1272.19 1210.92 L1271.61 1210.92 L1271.02 1210.92 L1270.44 1210.92 L1269.85 1210.92 L1269.26 1210.92 L1268.68 1210.92 L1268.09 1210.92 L1267.5 1210.92 L1266.92 1210.92 L1266.33 1210.92 L1265.74 1210.92 L1265.16 1210.92 L1264.57 1210.92 L1263.98 1210.92 L1263.4 1210.92 L1262.81 1210.92 L1262.23 1210.92 L1261.64 1210.92 L1261.05 1210.92 L1260.47 1210.92 L1259.88 1210.92 L1259.29 1210.92 L1258.71 1210.92 L1258.12 1210.92 L1257.53 1210.92 L1256.95 1210.92 L1256.36 1210.92 L1255.78 1210.92 L1255.19 1210.92 L1254.6 1210.92 L1254.02 1210.92 L1253.43 1210.92 L1252.84 1210.92 L1252.26 1210.92 L1251.67 1210.92 L1251.08 1210.92 L1250.5 1210.92 L1249.91 1210.92 L1249.32 1210.92 L1248.74 1210.92 L1248.15 1210.92 L1247.57 1210.92 L1246.98 1210.92 L1246.39 1210.92 L1245.81 1210.92 L1245.22 1210.92 L1244.63 1210.92 L1244.05 1210.92 L1243.46 1210.92 L1242.87 1210.92 L1242.29 1210.92 L1241.7 1210.92 L1241.11 1210.92 L1240.53 1210.92 L1239.94 1210.92 L1239.36 1210.92 L1238.77 1210.92 L1238.18 1210.92 L1237.6 1210.92 L1237.01 1210.92 L1236.42 1210.92 L1235.84 1210.92 L1235.25 1210.92 L1234.66 1210.92 L1234.08 1210.92 L1233.49 1210.92 L1232.91 1210.92 L1232.32 1210.92 L1231.73 1210.92 L1231.15 1210.92 L1230.56 1210.92 L1229.97 1210.92 L1229.39 1210.92 L1228.8 1210.92 L1228.21 1210.92 L1227.63 1210.92 L1227.04 1210.92 L1226.45 1210.92 L1225.87 1210.92 L1225.28 1210.92 L1224.7 1210.92 L1224.11 1210.92 L1223.52 1210.92 L1222.94 1210.92 L1222.35 1210.92 L1221.76 1210.92 L1221.18 1210.92 L1220.59 1210.92 L1220 1210.92 L1219.42 1210.92 L1218.83 1210.92 L1218.24 1210.92 L1217.66 1210.92 L1217.07 1210.92 L1216.49 1210.92 L1215.9 1210.92 L1215.31 1210.92 L1214.73 1210.92 L1214.14 1210.92 L1213.55 1210.92 L1212.97 1210.92 L1212.38 1210.92 L1211.79 1210.92 L1211.21 1210.92 L1210.62 1210.92 L1210.03 1210.92 L1209.45 1210.92 L1208.86 1210.92 L1208.28 1210.92 L1207.69 1210.92 L1207.1 1210.92 L1206.52 1210.92 L1205.93 1210.92 L1205.34 1210.92 L1204.76 1210.92 L1204.17 1210.92 L1203.58 1210.92 L1203 1210.92 L1202.41 1210.92 L1201.83 1210.92 L1201.24 1210.92 L1200.65 1210.92 L1200.07 1210.92 L1199.48 1210.92 L1198.89 1210.92 L1198.31 1210.92 L1197.72 1210.92 L1197.13 1210.92 L1196.55 1210.92 L1195.96 1210.92 L1195.37 1210.92 L1194.79 1210.92 L1194.2 1210.92 L1193.62 1210.92 L1193.03 1210.92 L1192.44 1210.92 L1191.86 1210.92 L1191.27 1210.92 L1190.68 1210.92 L1190.1 1210.92 L1189.51 1210.92 L1188.92 1210.92 L1188.34 1210.92 L1187.75 1210.92 L1187.16 1210.92 L1186.58 1210.92 L1185.99 1210.92 L1185.41 1210.92 L1184.82 1210.92 L1184.23 1210.92 L1183.65 1210.92 L1183.06 1210.92 L1182.47 1210.92 L1181.89 1210.92 L1181.3 1210.92 L1180.71 1210.92 L1180.13 1210.92 L1179.54 1210.92 L1178.96 1210.92 L1178.37 1210.92 L1177.78 1210.92 L1177.2 1210.92 L1176.61 1210.92 L1176.02 1210.92 L1175.44 1210.92 L1174.85 1210.92 L1174.26 1210.92 L1173.68 1210.92 L1173.09 1210.92 L1172.5 1210.92 L1171.92 1210.92 L1171.33 1210.92 L1170.75 1210.92 L1170.16 1210.92 L1169.57 1210.92 L1168.99 1210.92 L1168.4 1210.92 L1167.81 1210.92 L1167.23 1210.92 L1166.64 1210.92 L1166.05 1210.92 L1165.47 1210.92 L1164.88 1210.92 L1164.29 1210.92 L1163.71 1210.92 L1163.12 1210.92 L1162.54 1210.92 L1161.95 1210.92 L1161.36 1210.92 L1160.78 1210.92 L1160.19 1210.92 L1159.6 1210.92 L1159.02 1210.92 L1158.43 1210.92 L1157.84 1210.92 L1157.26 1210.92 L1156.67 1210.92 L1156.09 1210.92 L1155.5 1210.92 L1154.91 1210.92 L1154.33 1210.92 L1153.74 1210.92 L1153.15 1210.92 L1152.57 1210.92 L1151.98 1210.92 L1151.39 1210.92 L1150.81 1210.92 L1150.22 1210.92 L1149.63 1210.92 L1149.05 1210.92 L1148.46 1210.92 L1147.88 1210.92 L1147.29 1210.92 L1146.7 1210.92 L1146.12 1210.92 L1145.53 1210.92 L1144.94 1210.92 L1144.36 1210.92 L1143.77 1210.92 L1143.18 1210.92 L1142.6 1210.92 L1142.01 1210.92 L1141.42 1210.92 L1140.84 1210.92 L1140.25 1210.92 L1139.67 1210.92 L1139.08 1210.92 L1138.49 1210.92 L1137.91 1210.92 L1137.32 1210.92 L1136.73 1210.92 L1136.15 1210.92 L1135.56 1210.92 L1134.97 1210.92 L1134.39 1210.92 L1133.8 1210.92 L1133.21 1210.92 L1132.63 1210.92 L1132.04 1210.92 L1131.46 1210.92 L1130.87 1210.92 L1130.28 1210.92 L1129.7 1210.92 L1129.11 1210.92 L1128.52 1210.92 L1127.94 1210.92 L1127.35 1210.92 L1126.76 1210.92 L1126.18 1210.92 L1125.59 1210.92 L1125.01 1210.92 L1124.42 1210.92 L1123.83 1210.92 L1123.25 1210.92 L1122.66 1210.92 L1122.07 1210.92 L1121.49 1210.92 L1120.9 1210.92 L1120.31 1210.92 L1119.73 1210.92 L1119.14 1210.92 L1118.55 1210.92 L1117.97 1210.92 L1117.38 1210.92 L1116.8 1210.92 L1116.21 1210.92 L1115.62 1210.92 L1115.04 1210.92 L1114.45 1210.92 L1113.86 1210.92 L1113.28 1210.92 L1112.69 1210.92 L1112.1 1210.92 L1111.52 1210.92 L1110.93 1210.92 L1110.34 1210.92 L1109.76 1210.92 L1109.17 1210.92 L1108.59 1210.92 L1108 1210.92 L1107.41 1210.92 L1106.83 1210.92 L1106.24 1210.92 L1105.65 1210.92 L1105.07 1210.92 L1104.48 1210.92 L1103.89 1210.92 L1103.31 1210.92 L1102.72 1210.92 L1102.14 1210.92 L1101.55 1210.92 L1100.96 1210.92 L1100.38 1210.92 L1099.79 1210.92 L1099.2 1210.92 L1098.62 1210.92 L1098.03 1210.92 L1097.44 1210.92 L1096.86 1210.92 L1096.27 1210.92 L1095.68 1210.92 L1095.1 1210.92 L1094.51 1210.92 L1093.93 1210.92 L1093.34 1210.92 L1092.75 1210.92 L1092.17 1210.92 L1091.58 1210.92 L1090.99 1210.92 L1090.41 1210.92 L1089.82 1210.92 L1089.23 1210.92 L1088.65 1210.92 L1088.06 1210.92 L1087.47 1210.92 L1086.89 1210.92 L1086.3 1210.92 L1085.72 1210.92 L1085.13 1210.92 L1084.54 1210.92 L1083.96 1210.92 L1083.37 1210.92 L1082.78 1210.92 L1082.2 1210.92 L1081.61 1210.92 L1081.02 1210.92 L1080.44 1210.92 L1079.85 1210.92 L1079.26 1210.92 L1078.68 1210.92 L1078.09 1210.92 L1077.51 1210.92 L1076.92 1210.92 L1076.33 1210.92 L1075.75 1210.92 L1075.16 1210.92 L1074.57 1210.92 L1073.99 1210.92 L1073.4 1210.92 L1072.81 1210.92 L1072.23 1210.92 L1071.64 1210.92 L1071.06 1210.92 L1070.47 1210.92 L1069.88 1210.92 L1069.3 1210.92 L1068.71 1210.92 L1068.12 1210.92 L1067.54 1210.92 L1066.95 1210.92 L1066.36 1210.92 L1065.78 1210.92 L1065.19 1210.92 L1064.6 1210.92 L1064.02 1210.92 L1063.43 1210.92 L1062.85 1210.92 L1062.26 1210.92 L1061.67 1210.92 L1061.09 1210.92 L1060.5 1210.92 L1059.91 1210.92 L1059.33 1210.92 L1058.74 1210.92 L1058.15 1210.92 L1057.57 1210.92 L1056.98 1210.92 L1056.39 1210.92 L1055.81 1210.92 L1055.22 1210.92 L1054.64 1210.92 L1054.05 1210.92 L1053.46 1210.92 L1052.88 1210.92 L1052.29 1210.92 L1051.7 1210.92 L1051.12 1210.92 L1050.53 1210.92 L1049.94 1210.92 L1049.36 1210.92 L1048.77 1210.92 L1048.19 1210.92 L1047.6 1210.92 L1047.01 1210.92 L1046.43 1210.92 L1045.84 1210.92 L1045.25 1210.92 L1044.67 1210.92 L1044.08 1210.92 L1043.49 1210.92 L1042.91 1210.92 L1042.32 1210.92 L1041.73 1210.92 L1041.15 1210.92 L1040.56 1210.92 L1039.98 1210.92 L1039.39 1210.92 L1038.8 1210.92 L1038.22 1210.92 L1037.63 1210.92 L1037.04 1210.92 L1036.46 1210.92 L1035.87 1210.92 L1035.28 1210.92 L1034.7 1210.92 L1034.11 1210.92 L1033.52 1210.92 L1032.94 1210.92 L1032.35 1210.92 L1031.77 1210.92 L1031.18 1210.92 L1030.59 1210.92 L1030.01 1210.92 L1029.42 1210.92 L1028.83 1210.92 L1028.25 1210.92 L1027.66 1210.92 L1027.07 1210.92 L1026.49 1210.92 L1025.9 1210.92 L1025.32 1210.92 L1024.73 1210.92 L1024.14 1210.92 L1023.56 1210.92 L1022.97 1210.92 L1022.38 1210.92 L1021.8 1210.92 L1021.21 1210.92 L1020.62 1210.92 L1020.04 1210.92 L1019.45 1210.92 L1018.86 1210.92 L1018.28 1210.92 L1017.69 1210.92 L1017.11 1210.92 L1016.52 1210.92 L1015.93 1210.92 L1015.35 1210.92 L1014.76 1210.92 L1014.17 1210.92 L1013.59 1210.92 L1013 1210.92 L1012.41 1210.92 L1011.83 1210.92 L1011.24 1210.92 L1010.65 1210.92 L1010.07 1210.92 L1009.48 1210.92 L1008.9 1210.92 L1008.31 1210.92 L1007.72 1210.92 L1007.14 1210.92 L1006.55 1210.92 L1005.96 1210.92 L1005.38 1210.92 L1004.79 1210.92 L1004.2 1210.92 L1003.62 1210.92 L1003.03 1210.92 L1002.44 1210.92 L1001.86 1210.92 L1001.27 1210.92 L1000.69 1210.92 L1000.1 1210.92 L999.513 1210.92 L998.926 1210.92 L998.34 1210.92 L997.754 1210.92 L997.167 1210.92 L996.581 1210.92 L995.994 1210.92 L995.408 1210.92 L994.822 1210.92 L994.235 1210.92 L993.649 1210.92 L993.062 1210.92 L992.476 1210.92 L991.889 1210.92 L991.303 1210.92 L990.717 1210.92 L990.13 1210.92 L989.544 1210.92 L988.957 1210.92 L988.371 1210.92 L987.785 1210.92 L987.198 1210.92 L986.612 1210.92 L986.025 1210.92  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.32 986.612,1211.32 987.198,1211.32 987.785,1211.32 988.371,1211.32 988.957,1211.32 989.544,1211.32 990.13,1211.32 990.717,1211.32 991.303,1211.32 991.889,1211.32 992.476,1211.32 993.062,1211.32 993.649,1211.32 994.235,1211.32 994.822,1211.32 995.408,1211.32 995.994,1211.32 996.581,1211.32 997.167,1211.32 997.754,1211.32 998.34,1211.32 998.926,1211.32 999.513,1211.32 1000.1,1211.32 1000.69,1211.32 1001.27,1211.32 1001.86,1211.32 1002.44,1211.32 1003.03,1211.32 1003.62,1211.32 1004.2,1211.32 1004.79,1211.32 1005.38,1211.32 1005.96,1211.32 1006.55,1211.32 1007.14,1211.32 1007.72,1211.32 1008.31,1211.32 1008.9,1211.32 1009.48,1211.32 1010.07,1211.32 1010.65,1211.32 1011.24,1211.32 1011.83,1211.32 1012.41,1211.32 1013,1211.32 1013.59,1211.32 1014.17,1211.32 1014.76,1211.32 1015.35,1211.32 1015.93,1211.32 1016.52,1211.32 1017.11,1211.32 1017.69,1211.32 1018.28,1211.32 1018.86,1211.32 1019.45,1211.32 1020.04,1211.32 1020.62,1211.32 1021.21,1211.32 1021.8,1211.32 1022.38,1211.32 1022.97,1211.32 1023.56,1211.32 1024.14,1211.32 1024.73,1211.32 1025.32,1211.32 1025.9,1211.32 1026.49,1211.32 1027.07,1211.32 1027.66,1211.32 1028.25,1211.32 1028.83,1211.32 1029.42,1211.32 1030.01,1211.32 1030.59,1211.32 1031.18,1211.32 1031.77,1211.32 1032.35,1211.32 1032.94,1211.32 1033.52,1211.32 1034.11,1211.32 1034.7,1211.32 1035.28,1211.32 1035.87,1211.32 1036.46,1211.32 1037.04,1211.32 1037.63,1211.32 1038.22,1211.32 1038.8,1211.32 1039.39,1211.32 1039.98,1211.32 1040.56,1211.32 1041.15,1211.32 1041.73,1211.32 1042.32,1211.32 1042.91,1211.32 1043.49,1211.32 1044.08,1211.32 1044.67,1211.32 1045.25,1211.32 1045.84,1211.32 1046.43,1211.32 1047.01,1211.32 1047.6,1211.32 1048.19,1211.32 1048.77,1211.32 1049.36,1211.32 1049.94,1211.32 1050.53,1211.32 1051.12,1211.32 1051.7,1211.32 1052.29,1211.32 1052.88,1211.32 1053.46,1211.32 1054.05,1211.32 1054.64,1211.32 1055.22,1211.32 1055.81,1211.32 1056.39,1211.32 1056.98,1211.32 1057.57,1211.32 1058.15,1211.32 1058.74,1211.32 1059.33,1211.32 1059.91,1211.32 1060.5,1211.32 1061.09,1211.32 1061.67,1211.32 1062.26,1211.32 1062.85,1211.32 1063.43,1211.32 1064.02,1211.32 1064.6,1211.32 1065.19,1211.32 1065.78,1211.32 1066.36,1211.32 1066.95,1211.32 1067.54,1211.32 1068.12,1211.32 1068.71,1211.32 1069.3,1211.32 1069.88,1211.32 1070.47,1211.32 1071.06,1211.32 1071.64,1211.32 1072.23,1211.32 1072.81,1211.32 1073.4,1211.32 1073.99,1211.32 1074.57,1211.32 1075.16,1211.32 1075.75,1211.32 1076.33,1211.32 1076.92,1211.32 1077.51,1211.32 1078.09,1211.32 1078.68,1211.32 1079.26,1211.32 1079.85,1211.32 1080.44,1211.32 1081.02,1211.32 1081.61,1211.32 1082.2,1211.32 1082.78,1211.32 1083.37,1211.32 1083.96,1211.32 1084.54,1211.32 1085.13,1211.32 1085.72,1211.32 1086.3,1211.32 1086.89,1211.32 1087.47,1211.32 1088.06,1211.32 1088.65,1211.32 1089.23,1211.32 1089.82,1211.32 1090.41,1211.32 1090.99,1211.32 1091.58,1211.32 1092.17,1211.32 1092.75,1211.32 1093.34,1211.32 1093.93,1211.32 1094.51,1211.32 1095.1,1211.32 1095.68,1211.32 1096.27,1211.32 1096.86,1211.32 1097.44,1211.32 1098.03,1211.32 1098.62,1211.32 1099.2,1211.32 1099.79,1211.32 1100.38,1211.32 1100.96,1211.32 1101.55,1211.32 1102.14,1211.32 1102.72,1211.32 1103.31,1211.32 1103.89,1211.32 1104.48,1211.32 1105.07,1211.32 1105.65,1211.32 1106.24,1211.32 1106.83,1211.32 1107.41,1211.32 1108,1211.32 1108.59,1211.32 1109.17,1211.32 1109.76,1211.32 1110.34,1211.32 1110.93,1211.32 1111.52,1211.32 1112.1,1211.32 1112.69,1211.32 1113.28,1211.32 1113.86,1211.32 1114.45,1211.32 1115.04,1211.32 1115.62,1211.32 1116.21,1211.32 1116.8,1211.32 1117.38,1211.32 1117.97,1211.32 1118.55,1211.32 1119.14,1211.32 1119.73,1211.32 1120.31,1211.32 1120.9,1211.32 1121.49,1211.32 1122.07,1211.32 1122.66,1211.32 1123.25,1211.32 1123.83,1211.32 1124.42,1211.32 1125.01,1211.32 1125.59,1211.32 1126.18,1211.32 1126.76,1211.32 1127.35,1211.32 1127.94,1211.32 1128.52,1211.32 1129.11,1211.32 1129.7,1211.32 1130.28,1211.32 1130.87,1211.32 1131.46,1211.32 1132.04,1211.32 1132.63,1211.32 1133.21,1211.32 1133.8,1211.32 1134.39,1211.32 1134.97,1211.32 1135.56,1211.32 1136.15,1211.32 1136.73,1211.32 1137.32,1211.32 1137.91,1211.32 1138.49,1211.32 1139.08,1211.32 1139.67,1211.32 1140.25,1211.32 1140.84,1211.32 1141.42,1211.32 1142.01,1211.32 1142.6,1211.32 1143.18,1211.32 1143.77,1211.32 1144.36,1211.32 1144.94,1211.32 1145.53,1211.32 1146.12,1211.32 1146.7,1211.32 1147.29,1211.32 1147.88,1211.32 1148.46,1211.32 1149.05,1211.32 1149.63,1211.32 1150.22,1211.32 1150.81,1211.32 1151.39,1211.32 1151.98,1211.32 1152.57,1211.32 1153.15,1211.32 1153.74,1211.32 1154.33,1211.32 1154.91,1211.32 1155.5,1211.32 1156.09,1211.32 1156.67,1211.32 1157.26,1211.32 1157.84,1211.32 1158.43,1211.32 1159.02,1211.32 1159.6,1211.32 1160.19,1211.32 1160.78,1211.32 1161.36,1211.32 1161.95,1211.32 1162.54,1211.32 1163.12,1211.32 1163.71,1211.32 1164.29,1211.32 1164.88,1211.32 1165.47,1211.32 1166.05,1211.32 1166.64,1211.32 1167.23,1211.32 1167.81,1211.32 1168.4,1211.32 1168.99,1211.32 1169.57,1211.32 1170.16,1211.32 1170.75,1211.32 1171.33,1211.32 1171.92,1211.32 1172.5,1211.32 1173.09,1211.32 1173.68,1211.32 1174.26,1211.32 1174.85,1211.32 1175.44,1211.32 1176.02,1211.32 1176.61,1211.32 1177.2,1211.32 1177.78,1211.32 1178.37,1211.32 1178.96,1211.32 1179.54,1211.32 1180.13,1211.32 1180.71,1211.32 1181.3,1211.32 1181.89,1211.32 1182.47,1211.32 1183.06,1211.32 1183.65,1211.32 1184.23,1211.32 1184.82,1211.32 1185.41,1211.32 1185.99,1211.32 1186.58,1211.32 1187.16,1211.32 1187.75,1211.32 1188.34,1211.32 1188.92,1211.32 1189.51,1211.32 1190.1,1211.32 1190.68,1211.32 1191.27,1211.32 1191.86,1211.32 1192.44,1211.32 1193.03,1211.32 1193.62,1211.32 1194.2,1211.32 1194.79,1211.32 1195.37,1211.32 1195.96,1211.32 1196.55,1211.32 1197.13,1211.32 1197.72,1211.32 1198.31,1211.32 1198.89,1211.32 1199.48,1211.32 1200.07,1211.32 1200.65,1211.32 1201.24,1211.32 1201.83,1211.32 1202.41,1211.32 1203,1211.32 1203.58,1211.32 1204.17,1211.32 1204.76,1211.32 1205.34,1211.32 1205.93,1211.32 1206.52,1211.32 1207.1,1211.32 1207.69,1211.32 1208.28,1211.32 1208.86,1211.32 1209.45,1211.32 1210.03,1211.32 1210.62,1211.32 1211.21,1211.32 1211.79,1211.32 1212.38,1211.32 1212.97,1211.32 1213.55,1211.32 1214.14,1211.32 1214.73,1211.32 1215.31,1211.32 1215.9,1211.32 1216.49,1211.32 1217.07,1211.32 1217.66,1211.32 1218.24,1211.32 1218.83,1211.32 1219.42,1211.32 1220,1211.32 1220.59,1211.32 1221.18,1211.32 1221.76,1211.32 1222.35,1211.32 1222.94,1211.32 1223.52,1211.32 1224.11,1211.32 1224.7,1211.32 1225.28,1211.32 1225.87,1211.32 1226.45,1211.32 1227.04,1211.32 1227.63,1211.32 1228.21,1211.32 1228.8,1211.32 1229.39,1211.32 1229.97,1211.32 1230.56,1211.32 1231.15,1211.32 1231.73,1211.32 1232.32,1211.32 1232.91,1211.32 1233.49,1211.32 1234.08,1211.32 1234.66,1211.32 1235.25,1211.32 1235.84,1211.32 1236.42,1211.32 1237.01,1211.32 1237.6,1211.32 1238.18,1211.32 1238.77,1211.32 1239.36,1211.32 1239.94,1211.32 1240.53,1211.32 1241.11,1211.32 1241.7,1211.32 1242.29,1211.32 1242.87,1211.32 1243.46,1211.32 1244.05,1211.32 1244.63,1211.32 1245.22,1211.32 1245.81,1211.32 1246.39,1211.32 1246.98,1211.32 1247.57,1211.32 1248.15,1211.32 1248.74,1211.32 1249.32,1211.32 1249.91,1211.32 1250.5,1211.32 1251.08,1211.32 1251.67,1211.32 1252.26,1211.32 1252.84,1211.32 1253.43,1211.32 1254.02,1211.32 1254.6,1211.32 1255.19,1211.32 1255.78,1211.32 1256.36,1211.32 1256.95,1211.32 1257.53,1211.32 1258.12,1211.32 1258.71,1211.32 1259.29,1211.32 1259.88,1211.32 1260.47,1211.32 1261.05,1211.32 1261.64,1211.32 1262.23,1211.32 1262.81,1211.32 1263.4,1211.32 1263.98,1211.32 1264.57,1211.32 1265.16,1211.32 1265.74,1211.32 1266.33,1211.32 1266.92,1211.32 1267.5,1211.32 1268.09,1211.32 1268.68,1211.32 1269.26,1211.32 1269.85,1211.32 1270.44,1211.32 1271.02,1211.32 1271.61,1211.32 1272.19,1211.32 1272.78,1211.32 1273.37,1211.32 1273.95,1211.32 1274.54,1211.32 1275.13,1211.32 1275.71,1211.32 1276.3,1211.32 1276.89,1211.32 1277.47,1211.32 1278.06,1211.32 1278.65,1211.32 1279.23,1211.32 1279.82,1211.32 1280.4,1211.32 1280.99,1211.32 1281.58,1211.32 1282.16,1211.32 1282.75,1211.32 1283.34,1211.32 1283.92,1211.32 1284.51,1211.32 1285.1,1211.32 1285.68,1211.32 1286.27,1211.32 1286.86,1211.32 1287.44,1211.32 1288.03,1211.32 1288.61,1211.32 1289.2,1211.32 1289.79,1211.32 1290.37,1211.32 1290.96,1211.32 1291.55,1211.32 1292.13,1211.32 1292.72,1211.32 1293.31,1211.32 1293.89,1211.32 1294.48,1211.32 1295.06,1211.32 1295.65,1211.32 1296.24,1211.32 1296.82,1211.32 1297.41,1211.32 1298,1211.32 1298.58,1211.32 1299.17,1211.32 1299.76,1211.32 1300.34,1211.32 1300.93,1211.32 1301.52,1211.32 1302.1,1211.32 1302.69,1211.32 1303.27,1211.32 1303.86,1211.32 1304.45,1211.32 1305.03,1211.32 1305.62,1211.32 1306.21,1211.32 1306.79,1211.32 1307.38,1211.32 1307.97,1211.32 1308.55,1211.32 1309.14,1211.32 1309.73,1211.32 1310.31,1211.32 1310.9,1211.32 1311.48,1211.32 1312.07,1211.32 1312.66,1211.32 1313.24,1211.32 1313.83,1211.32 1314.42,1211.32 1315,1211.32 1315.59,1211.32 1316.18,1211.32 1316.76,1211.32 1317.35,1211.32 1317.93,1211.32 1318.52,1211.32 1319.11,1211.32 1319.69,1211.32 1320.28,1211.32 1320.87,1211.32 1321.45,1211.32 1322.04,1211.32 1322.63,1211.32 1323.21,1211.32 1323.8,1211.32 1324.39,1211.32 1324.97,1211.32 1325.56,1211.32 1326.14,1211.32 1326.73,1211.32 1327.32,1211.32 1327.9,1211.32 1328.49,1211.32 1329.08,1211.32 1329.66,1211.32 1330.25,1211.32 1330.84,1211.32 1331.42,1211.32 1332.01,1211.32 1332.6,1211.32 1333.18,1211.32 1333.77,1211.32 1334.35,1211.32 1334.94,1211.32 1335.53,1211.32 1336.11,1211.32 1336.7,1211.32 1337.29,1211.32 1337.87,1211.32 1338.46,1211.32 1339.05,1211.32 1339.63,1211.32 1340.22,1211.32 1340.8,1211.32 1341.39,1211.32 1341.98,1211.32 1342.56,1211.32 1343.15,1211.32 1343.74,1211.32 1344.32,1211.32 1344.91,1211.32 1345.5,1211.32 1346.08,1211.32 1346.67,1211.32 1347.26,1211.32 1347.84,1211.32 1348.43,1211.32 1349.01,1211.32 1349.6,1211.32 1350.19,1211.32 1350.77,1211.32 1351.36,1211.32 1351.95,1211.32 1352.53,1211.32 1353.12,1211.32 1353.71,1211.32 1354.29,1211.32 1354.88,1211.32 1355.47,1211.32 1356.05,1211.32 1356.64,1211.32 1357.22,1211.32 1357.81,1211.32 1358.4,1211.32 1358.98,1211.32 1359.57,1211.32 1360.16,1211.32 1360.74,1211.32 1361.33,1211.32 1361.92,1211.32 1362.5,1211.32 1363.09,1211.32 1363.68,1211.32 1364.26,1211.32 1364.85,1211.32 1365.43,1211.32 1366.02,1211.32 1366.61,1211.32 1367.19,1211.32 1367.78,1211.32 1368.37,1211.32 1368.95,1211.32 1369.54,1211.32 1370.13,1211.32 1370.71,1211.32 1371.3,1211.32 1371.88,1211.32 1372.47,1211.32 1373.06,1211.32 1373.64,1211.32 1374.23,1211.32 1374.82,1211.32 1375.4,1211.32 1375.99,1211.32 1376.58,1211.32 1377.16,1211.32 1377.75,1211.32 1378.34,1211.32 1378.92,1211.32 1379.51,1211.32 1380.09,1211.32 1380.68,1211.32 1381.27,1211.32 1381.85,1211.32 1382.44,1211.32 1383.03,1211.32 1383.61,1211.32 1384.2,1211.32 1384.79,1211.32 1385.37,1211.32 1385.96,1211.32 1386.55,1211.32 1387.13,1211.32 1387.72,1211.32 1388.3,1211.32 1388.89,1211.32 1389.48,1211.32 1390.06,1211.32 1390.65,1211.32 1391.24,1211.32 1391.82,1211.32 1392.41,1211.32 1393,1211.32 1393.58,1211.32 1394.17,1211.32 1394.75,1211.32 1395.34,1211.32 1395.93,1211.32 1396.51,1211.32 1397.1,1211.32 1397.69,1211.32 1398.27,1211.32 1398.86,1211.32 1399.45,1211.32 1400.03,1211.32 1400.62,1211.32 1401.21,1211.32 1401.79,1211.32 1402.38,1211.32 1402.96,1211.32 1403.55,1211.32 1404.14,1211.32 1404.72,1211.32 1405.31,1211.32 1405.9,1211.32 1406.48,1211.32 1407.07,1211.32 1407.66,1211.32 1408.24,1211.32 1408.83,1211.32 1409.42,1211.32 1410,1211.32 1410.59,1211.32 1411.17,1211.32 1411.76,1211.32 1412.35,1211.32 1412.93,1211.32 1413.52,1211.32 1414.11,1211.32 1414.69,1211.32 1415.28,1211.32 1415.87,1211.32 1416.45,1211.32 1417.04,1211.32 1417.63,1211.32 1418.21,1211.32 1418.8,1211.32 1419.38,1211.32 1419.97,1211.32 1420.56,1211.32 1421.14,1211.32 1421.73,1211.32 1422.32,1211.32 1422.9,1211.32 1423.49,1211.32 1424.08,1211.32 1424.66,1211.32 1425.25,1211.32 1425.83,1211.32 1426.42,1211.32 1427.01,1211.32 1427.59,1211.32 1428.18,1211.32 1428.77,1211.32 1429.35,1211.32 1429.94,1211.32 1430.53,1211.32 1431.11,1211.32 1431.7,1211.32 1432.29,1211.32 1432.87,1211.32 1433.46,1211.32 1434.04,1211.32 1434.63,1211.32 1435.22,1211.32 1435.8,1211.32 1436.39,1211.32 1436.98,1211.32 1437.56,1211.32 1438.15,1211.32 1438.74,1211.32 1439.32,1211.32 1439.91,1211.32 1440.5,1211.32 1441.08,1211.32 1441.67,1211.32 1442.25,1211.32 1442.84,1211.32 1443.43,1211.32 1444.01,1211.32 1444.6,1211.32 1445.19,1211.32 1445.77,1211.32 1446.36,1211.32 1446.95,1211.32 1447.53,1211.32 1448.12,1211.32 1448.7,1211.32 1449.29,1211.32 1449.88,1211.32 1450.46,1211.32 1451.05,1211.32 1451.64,1211.32 1452.22,1211.32 1452.81,1211.32 1453.4,1211.32 1453.98,1211.32 1454.57,1211.32 1455.16,1211.32 1455.74,1211.32 1456.33,1211.32 1456.91,1211.32 1457.5,1211.32 1458.09,1211.32 1458.67,1211.32 1459.26,1211.32 1459.85,1211.32 1460.43,1211.32 1461.02,1211.32 1461.61,1211.32 1462.19,1211.32 1462.78,1211.32 1463.37,1211.32 1463.95,1211.32 1464.54,1211.32 1465.12,1211.32 1465.71,1211.32 1466.3,1211.32 1466.88,1211.32 1467.47,1211.32 1468.06,1211.32 1468.64,1211.32 1469.23,1211.32 1469.82,1211.32 1470.4,1211.32 1470.99,1211.32 1471.57,1211.32 1472.16,1211.32 1472.75,1211.32 1473.33,1211.32 1473.92,1211.32 1474.51,1211.32 1475.09,1211.32 1475.68,1211.32 1476.27,1211.32 1476.85,1211.32 1477.44,1211.32 1478.03,1211.32 1478.61,1211.32 1479.2,1211.32 1479.78,1211.32 1480.37,1211.32 1480.96,1211.32 1481.54,1211.32 1482.13,1211.32 1482.72,1211.32 1483.3,1211.32 1483.89,1211.32 1484.48,1211.32 1485.06,1211.32 1485.65,1211.32 1486.24,1211.32 1486.82,1211.32 1487.41,1211.32 1487.99,1211.32 1488.58,1211.32 1489.17,1211.32 1489.75,1211.32 1490.34,1211.32 1490.93,1211.32 1491.51,1211.32 1492.1,1211.32 1492.69,1211.32 1493.27,1211.32 1493.86,1211.32 1494.45,1211.32 1495.03,1211.32 1495.62,1211.32 1496.2,1211.32 1496.79,1211.32 1497.38,1211.32 1497.96,1211.32 1498.55,1211.32 1499.14,1211.32 1499.72,1211.32 1500.31,1211.32 1500.9,1211.32 1501.48,1211.32 1502.07,1211.32 1502.65,1211.32 1503.24,1211.32 1503.83,1211.32 1504.41,1211.32 1505,1211.32 1505.59,1211.32 1506.17,1211.32 1506.76,1211.32 1507.35,1211.32 1507.93,1211.32 1508.52,1211.32 1509.11,1211.32 1509.69,1211.32 1510.28,1211.32 1510.86,1211.32 1511.45,1211.32 1512.04,1211.32 1512.62,1211.32 1513.21,1211.32 1513.8,1211.32 1514.38,1211.32 1514.97,1211.32 1515.56,1211.32 1516.14,1211.32 1516.73,1211.32 1517.32,1211.32 1517.9,1211.32 1518.49,1211.32 1519.07,1211.32 1519.66,1211.32 1520.25,1211.32 1520.83,1211.32 1521.42,1211.32 1522.01,1211.32 1522.59,1211.32 1523.18,1211.32 1523.77,1211.32 1524.35,1211.32 1524.94,1211.32 1525.52,1211.32 1526.11,1211.32 1526.7,1211.32 1527.28,1211.32 1527.87,1211.32 1528.46,1211.32 1529.04,1211.32 1529.63,1211.32 1530.22,1211.32 1530.8,1211.32 1531.39,1211.32 1531.98,1211.32 1532.56,1211.32 1533.15,1211.32 1533.73,1211.32 1534.32,1211.32 1534.91,1211.32 1535.49,1211.32 1536.08,1211.32 1536.67,1211.32 1537.25,1211.32 1537.84,1211.32 1538.43,1211.32 1539.01,1211.32 1539.6,1211.32 1540.19,1211.32 1540.77,1211.32 1541.36,1211.32 1541.94,1211.32 1542.53,1211.32 1543.12,1211.32 1543.7,1211.32 1544.29,1211.32 1544.88,1211.32 1545.46,1211.32 1546.05,1211.32 1546.64,1211.32 1547.22,1211.32 1547.81,1211.32 1548.4,1211.32 1548.98,1211.32 1549.57,1211.32 1550.15,1211.32 1550.74,1211.32 1551.33,1211.32 1551.91,1211.32 1552.5,1211.32 1553.09,1211.32 1553.67,1211.32 1554.26,1211.32 1554.85,1211.32 1555.43,1211.32 1556.02,1211.32 1556.6,1211.32 1557.19,1211.32 1557.78,1211.32 1558.36,1211.32 1558.95,1211.32 1559.54,1211.32 1560.12,1211.32 1560.71,1211.32 1561.3,1211.32 1561.88,1211.32 1562.47,1211.32 1563.06,1211.32 1563.64,1211.32 1564.23,1211.32 1564.81,1211.32 1565.4,1211.32 1565.99,1211.32 1566.57,1211.32 1567.16,1211.32 1567.75,1211.32 1568.33,1211.32 1568.92,1211.32 1569.51,1211.32 1570.09,1211.32 1570.68,1211.32 1571.27,1211.32 1571.85,1211.32 1572.44,1211.32 1573.02,1211.32 1573.61,1211.32 1574.2,1211.32 1574.78,1211.32 1575.37,1211.32 1575.96,1211.32 1576.54,1211.32 1577.13,1211.32 1577.72,1211.32 1578.3,1211.32 1578.89,1211.32 1579.47,1211.32 1580.06,1211.32 1580.65,1211.32 1581.23,1211.32 1581.82,1211.32 1582.41,1211.32 1582.99,1211.32 1583.58,1211.32 1584.17,1211.32 1584.75,1211.32 1585.34,1211.32 1585.93,1211.32 1586.51,1211.32 1587.1,1211.32 1587.68,1211.32 1588.27,1211.32 1588.86,1211.32 1589.44,1211.32 1590.03,1211.32 1590.62,1211.32 1591.2,1211.32 1591.79,1211.32 1592.38,1211.32 1592.96,1211.32 1593.55,1211.32 1594.14,1211.32 1594.72,1211.32 1595.31,1211.32 1595.89,1211.32 1596.48,1211.32 1597.07,1211.32 1597.65,1211.32 1598.24,1211.32 1598.83,1211.32 1599.41,1211.32 1600,1211.32 1600.59,1211.32 1601.17,1211.32 1601.76,1211.32 1602.34,1211.32 1602.93,1211.32 1603.52,1211.32 1604.1,1211.32 1604.69,1211.32 1605.28,1211.32 1605.86,1211.32 1606.45,1211.32 1607.04,1211.32 1607.62,1211.32 1608.21,1211.32 1608.8,1211.32 1609.38,1211.32 1609.97,1211.32 1610.55,1211.32 1611.14,1211.32 1611.73,1211.32 1612.31,1211.32 1612.9,1211.32 1613.49,1211.32 1614.07,1211.32 1614.66,1211.32 1615.25,1211.32 1615.83,1211.32 1616.42,1211.32 1617.01,1211.32 1617.59,1211.32 1618.18,1211.32 1618.76,1211.32 1619.35,1211.32 1619.94,1211.32 1620.52,1211.32 1621.11,1211.32 1621.7,1211.32 1622.28,1211.32 1622.87,1211.32 1623.46,1211.32 1624.04,1211.32 1624.63,1211.32 1625.22,1211.32 1625.8,1211.32 1626.39,1211.32 1626.97,1211.32 1627.56,1211.32 1628.15,1211.32 1628.73,1211.32 1629.32,1211.32 1629.91,1211.32 1630.49,1211.32 1631.08,1211.32 1631.67,1211.32 1632.25,1211.32 1632.84,1211.32 1633.42,1211.32 1634.01,1211.32 1634.6,1211.32 1635.18,1211.32 1635.77,1211.32 1636.36,1211.32 1636.94,1211.32 1637.53,1211.32 1638.12,1211.32 1638.7,1211.32 1639.29,1211.32 1639.88,1211.32 1640.46,1211.32 1641.05,1211.32 1641.63,1211.32 1642.22,1211.32 1642.81,1211.32 1643.39,1211.32 1643.98,1211.32 1644.57,1211.32 1645.15,1211.32 1645.74,1211.32 1646.33,1211.32 1646.91,1211.32 1647.5,1211.32 1648.09,1211.32 1648.67,1211.32 1649.26,1211.32 1649.84,1211.32 1650.43,1211.32 1651.02,1211.32 1651.6,1211.32 1652.19,1211.32 1652.78,1211.32 1653.36,1211.32 1653.95,1211.32 1654.54,1211.32 1655.12,1211.32 1655.71,1211.32 1656.29,1211.32 1656.88,1211.32 1657.47,1211.32 1658.05,1211.32 1658.64,1211.32 1659.23,1211.32 1659.81,1211.32 1660.4,1211.32 1660.99,1211.32 1661.57,1211.32 1662.16,1211.32 1662.75,1211.32 1663.33,1211.32 1663.92,1211.32 1664.5,1211.32 1665.09,1211.32 1665.68,1211.32 1666.26,1211.32 1666.85,1211.32 1667.44,1211.32 1668.02,1211.32 1668.61,1211.32 1669.2,1211.32 1669.78,1211.32 1670.37,1211.32 1670.96,1211.32 1671.54,1211.32 1672.13,1211.32 1672.71,1211.32 1673.3,1211.32 1673.89,1211.32 1674.47,1211.32 1675.06,1211.32 1675.65,1211.32 1676.23,1211.32 1676.82,1211.32 1677.41,1211.32 1677.99,1211.32 1678.58,1211.32 1679.17,1211.32 1679.75,1211.32 1680.34,1211.32 1680.92,1211.32 1681.51,1211.32 1682.1,1211.32 1682.68,1211.32 1683.27,1211.32 1683.86,1211.32 1684.44,1211.32 1685.03,1211.32 1685.62,1211.32 1686.2,1211.32 1686.79,1211.32 1687.37,1211.32 1687.96,1211.32 1688.55,1211.32 1689.13,1211.32 1689.72,1211.32 1690.31,1211.32 1690.89,1211.32 1691.48,1211.32 1692.07,1211.32 1692.65,1211.32 1693.24,1211.32 1693.83,1211.32 1694.41,1211.32 1695,1211.32 1695.58,1211.32 1696.17,1211.32 1696.76,1211.32 1697.34,1211.32 1697.93,1211.32 1698.52,1211.32 1699.1,1211.32 1699.69,1211.32 1700.28,1211.32 1700.86,1211.32 1701.45,1211.32 1702.04,1211.32 1702.62,1211.32 1703.21,1211.32 1703.79,1211.32 1704.38,1211.32 1704.97,1211.32 1705.55,1211.32 1706.14,1211.32 1706.73,1211.32 1707.31,1211.32 1707.9,1211.32 1708.49,1211.32 1709.07,1211.32 1709.66,1211.32 1710.24,1211.32 1710.83,1211.32 1711.42,1211.32 1712,1211.32 1712.59,1211.32 1713.18,1211.32 1713.76,1211.32 1714.35,1211.32 1714.94,1211.32 1715.52,1211.32 1716.11,1211.32 1716.7,1211.32 1717.28,1211.32 1717.87,1211.32 1718.45,1211.32 1719.04,1211.32 1719.63,1211.32 1720.21,1211.32 1720.8,1211.32 1721.39,1211.32 1721.97,1211.32 1722.56,1211.32 1723.15,1211.32 1723.73,1211.32 1724.32,1211.32 1724.91,1211.32 1725.49,1211.32 1726.08,1211.32 1726.66,1211.32 1727.25,1211.32 1727.84,1211.32 1728.42,1211.32 1729.01,1211.32 1729.6,1211.32 1730.18,1211.32 1730.77,1211.32 1731.36,1211.32 1731.94,1211.32 1732.53,1211.32 1733.11,1211.32 1733.7,1211.32 1734.29,1211.32 1734.87,1211.32 1735.46,1211.32 1736.05,1211.32 1736.63,1211.32 1737.22,1211.32 1737.81,1211.32 1738.39,1211.32 1738.98,1211.32 1739.57,1211.32 1740.15,1211.32 1740.74,1211.32 1741.32,1211.32 1741.91,1211.32 1742.5,1211.32 1743.08,1211.32 1743.67,1211.32 1744.26,1211.32 1744.84,1211.32 1745.43,1211.32 1746.02,1211.32 1746.6,1211.32 1747.19,1211.32 1747.78,1211.32 1748.36,1211.32 1748.95,1211.32 1749.53,1211.32 1750.12,1211.32 1750.71,1211.32 1751.29,1211.32 1751.88,1211.32 1752.47,1211.32 1753.05,1211.32 1753.64,1211.32 1754.23,1211.32 1754.81,1211.32 1755.4,1211.32 1755.99,1211.32 1756.57,1211.32 1757.16,1211.32 1757.74,1211.32 1758.33,1211.32 1758.92,1211.32 1759.5,1211.32 1760.09,1211.32 1760.68,1211.32 1761.26,1211.32 1761.85,1211.32 1762.44,1211.32 1763.02,1211.32 1763.61,1211.32 1764.19,1211.32 1764.78,1211.32 1765.37,1211.32 1765.95,1211.32 1766.54,1211.32 1767.13,1211.32 1767.71,1211.32 1768.3,1211.32 1768.89,1211.32 1769.47,1211.32 1770.06,1211.32 1770.65,1211.32 1771.23,1211.32 1771.82,1211.32 1772.4,1211.32 1772.99,1211.32 1773.58,1211.32 1774.16,1211.32 1774.75,1211.32 1775.34,1211.32 1775.92,1211.32 1776.51,1211.32 1777.1,1211.32 1777.68,1211.32 1778.27,1211.32 1778.86,1211.32 1779.44,1211.32 1780.03,1211.32 1780.61,1211.32 1781.2,1211.32 1781.79,1211.32 1782.37,1211.32 1782.96,1211.32 1783.55,1211.32 1784.13,1211.32 1784.72,1211.32 1785.31,1211.32 1785.89,1211.32 1786.48,1211.32 1787.06,1211.32 1787.65,1211.32 1788.24,1211.32 1788.82,1211.32 1789.41,1211.32 1790,1211.32 1790.58,1211.32 1791.17,1211.32 1791.76,1211.32 1792.34,1211.32 1792.93,1211.32 1793.52,1211.32 1794.1,1211.32 1794.69,1211.32 1795.27,1211.32 1795.86,1211.32 1796.45,1211.32 1797.03,1211.32 1797.62,1211.32 1798.21,1211.32 1798.79,1211.32 1799.38,1211.32 1799.97,1211.32 1800.55,1211.32 1801.14,1211.32 1801.73,1211.32 1802.31,1211.32 1802.9,1211.32 1803.48,1211.32 1804.07,1211.32 1804.66,1211.32 1805.24,1211.32 1805.83,1211.32 1806.42,1211.32 1807,1211.32 1807.59,1211.32 1808.18,1211.32 1808.76,1211.32 1809.35,1211.32 1809.94,1211.32 1810.52,1211.32 1811.11,1211.32 1811.69,1211.32 1812.28,1211.32 1812.87,1211.32 1813.45,1211.32 1814.04,1211.32 1814.63,1211.32 1815.21,1211.32 1815.8,1211.32 1816.39,1211.32 1816.97,1211.32 1817.56,1211.32 1818.14,1211.32 1818.73,1211.32 1819.32,1211.32 1819.9,1211.32 1820.49,1211.32 1821.08,1211.32 1821.66,1211.32 1822.25,1211.32 1822.84,1211.32 1823.42,1211.32 1824.01,1211.32 1824.6,1211.32 1825.18,1211.32 1825.77,1211.32 1826.35,1211.32 1826.94,1211.32 1827.53,1211.32 1828.11,1211.32 1828.7,1211.32 1829.29,1211.32 1829.87,1211.32 1830.46,1211.32 1831.05,1211.32 1831.63,1211.32 1832.22,1211.32 1832.81,1211.32 1833.39,1211.32 1833.98,1211.32 1834.56,1211.32 1835.15,1211.32 1835.74,1211.32 1836.32,1211.32 1836.91,1211.32 1837.5,1211.32 1838.08,1211.32 1838.67,1211.32 1839.26,1211.32 1839.84,1211.32 1840.43,1211.32 1841.01,1211.32 1841.6,1211.32 1842.19,1211.32 1842.77,1211.32 1843.36,1211.32 1843.95,1211.32 1844.53,1211.32 1845.12,1211.32 1845.71,1211.32 1846.29,1211.32 1846.88,1211.32 1847.47,1211.32 1848.05,1211.32 1848.64,1211.32 1849.22,1211.32 1849.81,1211.32 1850.4,1211.32 1850.98,1211.32 1851.57,1211.32 1852.16,1211.32 1852.74,1211.32 1853.33,1211.32 1853.92,1211.32 1854.5,1211.32 1855.09,1211.32 1855.68,1211.32 1856.26,1211.32 1856.85,1211.32 1857.43,1211.32 1858.02,1211.32 1858.61,1211.32 1859.19,1211.32 1859.78,1211.32 1860.37,1211.32 1860.95,1211.32 1861.54,1211.32 1862.13,1211.32 1862.71,1211.32 1863.3,1211.32 1863.88,1211.32 1864.47,1211.32 1865.06,1211.32 1865.64,1211.32 1866.23,1211.32 1866.82,1211.32 1867.4,1211.32 1867.99,1211.32 1868.58,1211.32 1869.16,1211.32 1869.75,1211.32 1870.34,1211.32 1870.92,1211.32 1871.51,1211.32 1872.09,1211.32 1872.68,1211.32 1873.27,1211.32 1873.85,1211.32 1874.44,1211.32 1875.03,1211.32 1875.61,1211.32 1876.2,1211.32 1876.79,1211.32 1877.37,1211.32 1877.96,1211.32 1878.55,1211.32 1879.13,1211.32 1879.72,1211.32 1880.3,1211.32 1880.89,1211.32 1881.48,1211.32 1882.06,1211.32 1882.65,1211.32 1883.24,1211.32 1883.82,1211.32 1884.41,1211.32 1885,1211.32 1885.58,1211.32 1886.17,1211.32 1886.76,1211.32 1887.34,1211.32 1887.93,1211.32 1888.51,1211.32 1889.1,1211.32 1889.69,1211.32 1890.27,1211.32 1890.86,1211.32 1891.45,1211.32 1892.03,1211.32 1892.62,1211.32 1893.21,1211.32 1893.79,1211.32 1894.38,1211.32 1894.96,1211.32 1895.55,1211.32 1896.14,1211.32 1896.72,1211.32 1897.31,1211.32 1897.9,1211.32 1898.48,1211.32 1899.07,1211.32 1899.66,1211.32 1900.24,1211.32 1900.83,1211.32 1901.42,1211.32 1902,1211.32 1902.59,1211.32 1903.17,1211.32 1903.76,1211.32 1904.35,1211.32 1904.93,1211.32 1905.52,1211.32 1906.11,1211.32 1906.69,1211.32 1907.28,1211.32 1907.87,1211.32 1908.45,1211.32 1909.04,1211.32 1909.63,1211.32 1910.21,1211.32 1910.8,1211.32 1911.38,1211.32 1911.97,1211.32 1912.56,1211.32 1913.14,1211.32 1913.73,1211.32 1914.32,1211.32 1914.9,1211.32 1915.49,1211.32 1916.08,1211.32 1916.66,1211.32 1917.25,1211.32 1917.83,1211.32 1918.42,1211.32 1919.01,1211.32 1919.59,1211.32 1920.18,1211.32 1920.77,1211.32 1921.35,1211.32 1921.94,1211.32 1922.53,1211.32 1923.11,1211.32 1923.7,1211.32 1924.29,1211.32 1924.87,1211.32 1925.46,1211.32 1926.04,1211.32 1926.63,1211.32 1927.22,1211.32 1927.8,1211.32 1928.39,1211.32 1928.98,1211.32 1929.56,1211.32 1930.15,1211.32 1930.74,1211.32 1931.32,1211.32 1931.91,1211.32 1932.5,1211.32 1933.08,1211.32 1933.67,1211.32 1934.25,1211.32 1934.84,1211.32 1935.43,1211.32 1936.01,1211.32 1936.6,1211.32 1937.19,1211.32 1937.77,1211.32 1938.36,1211.32 1938.95,1211.32 1939.53,1211.32 1940.12,1211.32 1940.71,1211.32 1941.29,1211.32 1941.88,1211.32 1942.46,1211.32 1943.05,1211.32 1943.64,1211.32 1944.22,1211.32 1944.81,1211.32 1945.4,1211.32 1945.98,1211.32 1946.57,1211.32 1947.16,1211.32 1947.74,1211.32 1948.33,1211.32 1948.91,1211.32 1949.5,1211.32 1950.09,1211.32 1950.67,1211.32 1951.26,1211.32 1951.85,1211.32 1952.43,1211.32 1953.02,1211.32 1953.61,1211.32 1954.19,1211.32 1954.78,1211.32 1955.37,1211.32 1955.95,1211.32 1956.54,1211.32 1957.12,1211.32 1957.71,1211.32 1958.3,1211.32 1958.88,1211.32 1959.47,1211.32 1960.06,1211.32 1960.64,1211.32 1961.23,1211.32 1961.82,1211.32 1962.4,1211.32 1962.99,1211.32 1963.58,1211.32 1964.16,1211.32 1964.75,1211.32 1965.33,1211.32 1965.92,1211.32 1966.51,1211.32 1967.09,1211.32 1967.68,1211.32 1968.27,1211.32 1968.85,1211.32 1969.44,1211.32 1970.03,1211.32 1970.61,1211.32 1971.2,1211.32 1971.78,1211.32 1972.37,1211.32 1972.96,1211.32 1973.54,1211.32 1974.13,1211.32 1974.72,1211.32 1975.3,1211.32 1975.89,1211.32 1976.48,1211.32 1977.06,1211.32 1977.65,1211.32 1978.24,1211.32 1978.82,1211.32 1979.41,1211.32 1979.99,1211.32 1980.58,1211.32 1981.17,1211.32 1981.75,1211.32 1982.34,1211.32 1982.93,1211.32 1983.51,1211.32 1984.1,1211.32 1984.69,1211.32 1985.27,1211.32 1985.86,1211.32 1986.45,1211.32 1987.03,1211.32 1987.62,1211.32 1988.2,1211.32 1988.79,1211.32 1989.38,1211.32 1989.96,1211.32 1990.55,1211.32 1991.14,1211.32 1991.72,1211.32 1992.31,1211.32 1992.9,1211.32 1993.48,1211.32 1994.07,1211.32 1994.65,1211.32 1995.24,1211.32 1995.83,1211.32 1996.41,1211.32 1997,1211.32 1997.59,1211.32 1998.17,1211.32 1998.76,1211.32 1999.35,1211.32 1999.93,1211.32 2000.52,1211.32 2001.11,1211.32 2001.69,1211.32 2002.28,1211.32 2002.86,1211.32 2003.45,1211.32 2004.04,1211.32 2004.62,1211.32 2005.21,1211.32 2005.8,1211.32 2006.38,1211.32 2006.97,1211.32 2007.56,1211.32 2008.14,1211.32 2008.73,1211.32 2009.32,1211.32 2009.9,1211.32 2010.49,1211.32 2011.07,1211.32 2011.66,1211.32 2012.25,1211.32 2012.83,1211.32 2013.42,1211.32 2014.01,1211.32 2014.59,1211.32 2015.18,1211.32 2015.77,1211.32 2016.35,1211.32 2016.94,1211.32 2017.53,1211.32 2018.11,1211.32 2018.7,1211.32 2019.28,1211.32 2019.87,1211.32 2020.46,1211.32 2021.04,1211.32 2021.63,1211.32 2022.22,1211.32 2022.8,1211.32 2023.39,1211.32 2023.98,1211.32 2024.56,1211.32 2025.15,1211.32 2025.73,1211.32 2026.32,1211.32 2026.91,1211.32 2027.49,1211.32 2028.08,1211.32 2028.67,1211.32 2029.25,1211.32 2029.84,1211.32 2030.43,1211.32 2031.01,1211.32 2031.6,1211.32 2032.19,1211.32 2032.77,1211.32 2033.36,1211.32 2033.94,1211.32 2034.53,1211.32 2035.12,1211.32 2035.7,1211.32 2036.29,1211.32 2036.88,1211.32 2037.46,1211.32 2038.05,1211.32 2038.64,1211.32 2039.22,1211.32 2039.81,1211.32 2040.4,1211.32 2040.98,1211.32 2041.57,1211.32 2042.15,1211.32 2042.74,1211.32 2043.33,1211.32 2043.91,1211.32 2044.5,1211.32 2045.09,1211.32 2045.67,1211.32 2046.26,1211.32 2046.85,1211.32 2047.43,1211.32 2048.02,1211.32 2048.6,1211.32 2049.19,1211.32 2049.78,1211.32 2050.36,1211.32 2050.95,1211.32 2051.54,1211.32 2052.12,1211.32 2052.71,1211.32 2053.3,1211.32 2053.88,1211.32 2054.47,1211.32 2055.06,1211.32 2055.64,1211.32 2056.23,1211.32 2056.81,1211.32 2057.4,1211.32 2057.99,1211.32 2058.57,1211.32 2059.16,1211.32 2059.75,1211.32 2060.33,1211.32 2060.92,1211.32 2061.51,1211.32 2062.09,1211.32 2062.68,1211.32 2063.27,1211.32 2063.85,1211.32 2064.44,1211.32 2065.02,1211.32 2065.61,1211.32 2066.2,1211.32 2066.78,1211.32 2067.37,1211.32 2067.96,1211.32 2068.54,1211.32 2069.13,1211.32 2069.72,1211.32 2070.3,1211.32 2070.89,1211.32 2071.48,1211.32 2072.06,1211.32 2072.65,1211.32 2073.23,1211.32 2073.82,1211.32 2074.41,1211.32 2074.99,1211.32 2075.58,1211.32 2076.17,1211.32 2076.75,1211.32 2077.34,1211.32 2077.93,1211.32 2078.51,1211.32 2079.1,1211.32 2079.68,1211.32 2080.27,1211.32 2080.86,1211.32 2081.44,1211.32 2082.03,1211.32 2082.62,1211.32 2083.2,1211.32 2083.79,1211.32 2084.38,1211.32 2084.96,1211.32 2085.55,1211.32 2086.14,1211.32 2086.72,1211.32 2087.31,1211.32 2087.89,1211.32 2088.48,1211.32 2089.07,1211.32 2089.65,1211.32 2090.24,1211.32 2090.83,1211.32 2091.41,1211.32 2092,1211.32 2092.59,1211.32 2093.17,1211.32 2093.76,1211.32 2094.35,1211.32 2094.93,1211.32 2095.52,1211.32 2096.1,1211.32 2096.69,1211.32 2097.28,1211.32 2097.86,1211.32 2098.45,1211.32 2099.04,1211.32 2099.62,1211.32 2100.21,1211.32 2100.8,1211.32 2101.38,1211.32 2101.97,1211.32 2102.55,1211.32 2103.14,1211.32 2103.73,1211.32 2104.31,1211.32 2104.9,1211.32 2105.49,1211.32 2106.07,1211.32 2106.66,1211.32 2107.25,1211.32 2107.83,1211.32 2108.42,1211.32 2109.01,1211.32 2109.59,1211.32 2110.18,1211.32 2110.76,1211.32 2111.35,1211.32 2111.94,1211.32 2112.52,1211.32 2113.11,1211.32 2113.7,1211.32 2114.28,1211.32 2114.87,1211.32 2115.46,1211.32 2116.04,1211.32 2116.63,1211.32 2117.22,1211.32 2117.8,1211.32 2118.39,1211.32 2118.97,1211.32 2119.56,1211.32 2120.15,1211.32 2120.73,1211.32 2121.32,1211.32 2121.91,1211.32 2122.49,1211.32 2123.08,1211.32 2123.67,1211.32 2124.25,1211.32 2124.84,1211.32 2125.42,1211.32 2126.01,1211.32 2126.6,1211.32 2127.18,1211.32 2127.77,1211.32 2128.36,1211.32 2128.94,1211.32 2129.53,1211.32 2130.12,1211.32 2130.7,1211.32 2131.29,1211.32 2131.88,1211.32 2132.46,1211.32 2133.05,1211.32 2133.63,1211.32 2134.22,1211.32 2134.81,1211.32 2135.39,1211.32 2135.98,1211.32 2136.57,1211.32 2137.15,1211.32 2137.74,1211.32 2138.33,1211.32 2138.91,1211.32 2139.5,1211.32 2140.09,1211.32 2140.67,1211.32 2141.26,1211.32 2141.84,1211.32 2142.43,1211.32 2143.02,1211.32 2143.6,1211.32 2144.19,1211.32 2144.78,1211.32 2145.36,1211.32 2145.95,1211.32 2146.54,1211.32 2147.12,1211.32 2147.71,1211.32 2148.3,1211.32 2148.88,1211.32 2149.47,1211.32 2150.05,1211.32 2150.64,1211.32 2151.23,1211.32 2151.81,1211.32 2152.4,1211.32 2152.99,1211.32 2153.57,1211.32 2154.16,1211.32 2154.75,1211.32 2155.33,1211.32 2155.92,1211.32 2156.5,1211.32 2157.09,1211.32 2157.68,1211.32 2158.26,1211.32 \"/>\n<path clip-path=\"url(#clip062)\" d=\"M986.025 1211.25 L986.612 1211.25 L987.198 1211.25 L987.785 1211.25 L988.371 1211.25 L988.957 1211.25 L989.544 1211.25 L990.13 1211.25 L990.717 1211.25 L991.303 1211.25 L991.889 1211.25 L992.476 1211.25 L993.062 1211.25 L993.649 1211.25 L994.235 1211.25 L994.822 1211.25 L995.408 1211.25 L995.994 1211.25 L996.581 1211.25 L997.167 1211.25 L997.754 1211.25 L998.34 1211.25 L998.926 1211.25 L999.513 1211.25 L1000.1 1211.25 L1000.69 1211.25 L1001.27 1211.25 L1001.86 1211.25 L1002.44 1211.25 L1003.03 1211.25 L1003.62 1211.25 L1004.2 1211.25 L1004.79 1211.25 L1005.38 1211.25 L1005.96 1211.25 L1006.55 1211.25 L1007.14 1211.25 L1007.72 1211.25 L1008.31 1211.25 L1008.9 1211.25 L1009.48 1211.25 L1010.07 1211.25 L1010.65 1211.25 L1011.24 1211.25 L1011.83 1211.25 L1012.41 1211.25 L1013 1211.25 L1013.59 1211.25 L1014.17 1211.25 L1014.76 1211.25 L1015.35 1211.25 L1015.93 1211.25 L1016.52 1211.25 L1017.11 1211.25 L1017.69 1211.25 L1018.28 1211.25 L1018.86 1211.25 L1019.45 1211.25 L1020.04 1211.25 L1020.62 1211.25 L1021.21 1211.25 L1021.8 1211.25 L1022.38 1211.25 L1022.97 1211.25 L1023.56 1211.25 L1024.14 1211.25 L1024.73 1211.25 L1025.32 1211.25 L1025.9 1211.25 L1026.49 1211.25 L1027.07 1211.25 L1027.66 1211.25 L1028.25 1211.25 L1028.83 1211.25 L1029.42 1211.25 L1030.01 1211.25 L1030.59 1211.25 L1031.18 1211.25 L1031.77 1211.25 L1032.35 1211.25 L1032.94 1211.25 L1033.52 1211.25 L1034.11 1211.25 L1034.7 1211.25 L1035.28 1211.25 L1035.87 1211.25 L1036.46 1211.25 L1037.04 1211.25 L1037.63 1211.25 L1038.22 1211.25 L1038.8 1211.25 L1039.39 1211.25 L1039.98 1211.25 L1040.56 1211.25 L1041.15 1211.25 L1041.73 1211.25 L1042.32 1211.25 L1042.91 1211.25 L1043.49 1211.25 L1044.08 1211.25 L1044.67 1211.25 L1045.25 1211.25 L1045.84 1211.25 L1046.43 1211.25 L1047.01 1211.25 L1047.6 1211.25 L1048.19 1211.25 L1048.77 1211.25 L1049.36 1211.25 L1049.94 1211.25 L1050.53 1211.25 L1051.12 1211.25 L1051.7 1211.25 L1052.29 1211.25 L1052.88 1211.25 L1053.46 1211.25 L1054.05 1211.25 L1054.64 1211.25 L1055.22 1211.25 L1055.81 1211.25 L1056.39 1211.25 L1056.98 1211.25 L1057.57 1211.25 L1058.15 1211.25 L1058.74 1211.25 L1059.33 1211.25 L1059.91 1211.25 L1060.5 1211.25 L1061.09 1211.25 L1061.67 1211.25 L1062.26 1211.25 L1062.85 1211.25 L1063.43 1211.25 L1064.02 1211.25 L1064.6 1211.25 L1065.19 1211.25 L1065.78 1211.25 L1066.36 1211.25 L1066.95 1211.25 L1067.54 1211.25 L1068.12 1211.25 L1068.71 1211.25 L1069.3 1211.25 L1069.88 1211.25 L1070.47 1211.25 L1071.06 1211.25 L1071.64 1211.25 L1072.23 1211.25 L1072.81 1211.25 L1073.4 1211.25 L1073.99 1211.25 L1074.57 1211.25 L1075.16 1211.25 L1075.75 1211.25 L1076.33 1211.25 L1076.92 1211.25 L1077.51 1211.25 L1078.09 1211.25 L1078.68 1211.25 L1079.26 1211.25 L1079.85 1211.25 L1080.44 1211.25 L1081.02 1211.25 L1081.61 1211.25 L1082.2 1211.25 L1082.78 1211.25 L1083.37 1211.25 L1083.96 1211.25 L1084.54 1211.25 L1085.13 1211.25 L1085.72 1211.25 L1086.3 1211.25 L1086.89 1211.25 L1087.47 1211.25 L1088.06 1211.25 L1088.65 1211.25 L1089.23 1211.25 L1089.82 1211.25 L1090.41 1211.25 L1090.99 1211.25 L1091.58 1211.25 L1092.17 1211.25 L1092.75 1211.25 L1093.34 1211.25 L1093.93 1211.25 L1094.51 1211.25 L1095.1 1211.25 L1095.68 1211.25 L1096.27 1211.25 L1096.86 1211.25 L1097.44 1211.25 L1098.03 1211.25 L1098.62 1211.25 L1099.2 1211.25 L1099.79 1211.25 L1100.38 1211.25 L1100.96 1211.25 L1101.55 1211.25 L1102.14 1211.25 L1102.72 1211.25 L1103.31 1211.25 L1103.89 1211.25 L1104.48 1211.25 L1105.07 1211.25 L1105.65 1211.25 L1106.24 1211.25 L1106.83 1211.25 L1107.41 1211.25 L1108 1211.25 L1108.59 1211.25 L1109.17 1211.25 L1109.76 1211.25 L1110.34 1211.25 L1110.93 1211.25 L1111.52 1211.25 L1112.1 1211.25 L1112.69 1211.25 L1113.28 1211.25 L1113.86 1211.25 L1114.45 1211.25 L1115.04 1211.25 L1115.62 1211.25 L1116.21 1211.25 L1116.8 1211.25 L1117.38 1211.25 L1117.97 1211.25 L1118.55 1211.25 L1119.14 1211.25 L1119.73 1211.25 L1120.31 1211.25 L1120.9 1211.25 L1121.49 1211.25 L1122.07 1211.25 L1122.66 1211.25 L1123.25 1211.25 L1123.83 1211.25 L1124.42 1211.25 L1125.01 1211.25 L1125.59 1211.25 L1126.18 1211.25 L1126.76 1211.25 L1127.35 1211.25 L1127.94 1211.25 L1128.52 1211.25 L1129.11 1211.25 L1129.7 1211.25 L1130.28 1211.25 L1130.87 1211.25 L1131.46 1211.25 L1132.04 1211.25 L1132.63 1211.25 L1133.21 1211.25 L1133.8 1211.25 L1134.39 1211.25 L1134.97 1211.25 L1135.56 1211.25 L1136.15 1211.25 L1136.73 1211.25 L1137.32 1211.25 L1137.91 1211.25 L1138.49 1211.25 L1139.08 1211.25 L1139.67 1211.25 L1140.25 1211.25 L1140.84 1211.25 L1141.42 1211.25 L1142.01 1211.25 L1142.6 1211.25 L1143.18 1211.25 L1143.77 1211.25 L1144.36 1211.25 L1144.94 1211.25 L1145.53 1211.25 L1146.12 1211.25 L1146.7 1211.25 L1147.29 1211.25 L1147.88 1211.25 L1148.46 1211.25 L1149.05 1211.25 L1149.63 1211.25 L1150.22 1211.25 L1150.81 1211.25 L1151.39 1211.25 L1151.98 1211.25 L1152.57 1211.25 L1153.15 1211.25 L1153.74 1211.25 L1154.33 1211.25 L1154.91 1211.25 L1155.5 1211.25 L1156.09 1211.25 L1156.67 1211.25 L1157.26 1211.25 L1157.84 1211.25 L1158.43 1211.25 L1159.02 1211.25 L1159.6 1211.25 L1160.19 1211.25 L1160.78 1211.25 L1161.36 1211.25 L1161.95 1211.25 L1162.54 1211.25 L1163.12 1211.25 L1163.71 1211.25 L1164.29 1211.25 L1164.88 1211.25 L1165.47 1211.25 L1166.05 1211.25 L1166.64 1211.25 L1167.23 1211.25 L1167.81 1211.25 L1168.4 1211.25 L1168.99 1211.25 L1169.57 1211.25 L1170.16 1211.25 L1170.75 1211.25 L1171.33 1211.25 L1171.92 1211.25 L1172.5 1211.25 L1173.09 1211.25 L1173.68 1211.25 L1174.26 1211.25 L1174.85 1211.25 L1175.44 1211.25 L1176.02 1211.25 L1176.61 1211.25 L1177.2 1211.25 L1177.78 1211.25 L1178.37 1211.25 L1178.96 1211.25 L1179.54 1211.25 L1180.13 1211.25 L1180.71 1211.25 L1181.3 1211.25 L1181.89 1211.25 L1182.47 1211.25 L1183.06 1211.25 L1183.65 1211.25 L1184.23 1211.25 L1184.82 1211.25 L1185.41 1211.25 L1185.99 1211.25 L1186.58 1211.25 L1187.16 1211.25 L1187.75 1211.25 L1188.34 1211.25 L1188.92 1211.25 L1189.51 1211.25 L1190.1 1211.25 L1190.68 1211.25 L1191.27 1211.25 L1191.86 1211.25 L1192.44 1211.25 L1193.03 1211.25 L1193.62 1211.25 L1194.2 1211.25 L1194.79 1211.25 L1195.37 1211.25 L1195.96 1211.25 L1196.55 1211.25 L1197.13 1211.25 L1197.72 1211.25 L1198.31 1211.25 L1198.89 1211.25 L1199.48 1211.25 L1200.07 1211.25 L1200.65 1211.25 L1201.24 1211.25 L1201.83 1211.25 L1202.41 1211.25 L1203 1211.25 L1203.58 1211.25 L1204.17 1211.25 L1204.76 1211.25 L1205.34 1211.25 L1205.93 1211.25 L1206.52 1211.25 L1207.1 1211.25 L1207.69 1211.25 L1208.28 1211.25 L1208.86 1211.25 L1209.45 1211.25 L1210.03 1211.25 L1210.62 1211.25 L1211.21 1211.25 L1211.79 1211.25 L1212.38 1211.25 L1212.97 1211.25 L1213.55 1211.25 L1214.14 1211.25 L1214.73 1211.25 L1215.31 1211.25 L1215.9 1211.25 L1216.49 1211.25 L1217.07 1211.25 L1217.66 1211.25 L1218.24 1211.25 L1218.83 1211.25 L1219.42 1211.25 L1220 1211.25 L1220.59 1211.25 L1221.18 1211.25 L1221.76 1211.25 L1222.35 1211.25 L1222.94 1211.25 L1223.52 1211.25 L1224.11 1211.25 L1224.7 1211.25 L1225.28 1211.25 L1225.87 1211.25 L1226.45 1211.25 L1227.04 1211.25 L1227.63 1211.25 L1228.21 1211.25 L1228.8 1211.25 L1229.39 1211.25 L1229.97 1211.25 L1230.56 1211.25 L1231.15 1211.25 L1231.73 1211.25 L1232.32 1211.25 L1232.91 1211.25 L1233.49 1211.25 L1234.08 1211.25 L1234.66 1211.25 L1235.25 1211.25 L1235.84 1211.25 L1236.42 1211.25 L1237.01 1211.25 L1237.6 1211.25 L1238.18 1211.25 L1238.77 1211.25 L1239.36 1211.25 L1239.94 1211.25 L1240.53 1211.25 L1241.11 1211.25 L1241.7 1211.25 L1242.29 1211.25 L1242.87 1211.25 L1243.46 1211.25 L1244.05 1211.25 L1244.63 1211.25 L1245.22 1211.25 L1245.81 1211.25 L1246.39 1211.25 L1246.98 1211.25 L1247.57 1211.25 L1248.15 1211.25 L1248.74 1211.25 L1249.32 1211.25 L1249.91 1211.25 L1250.5 1211.25 L1251.08 1211.25 L1251.67 1211.25 L1252.26 1211.25 L1252.84 1211.25 L1253.43 1211.25 L1254.02 1211.25 L1254.6 1211.25 L1255.19 1211.25 L1255.78 1211.25 L1256.36 1211.25 L1256.95 1211.25 L1257.53 1211.25 L1258.12 1211.25 L1258.71 1211.25 L1259.29 1211.25 L1259.88 1211.25 L1260.47 1211.25 L1261.05 1211.25 L1261.64 1211.25 L1262.23 1211.25 L1262.81 1211.25 L1263.4 1211.25 L1263.98 1211.25 L1264.57 1211.25 L1265.16 1211.25 L1265.74 1211.25 L1266.33 1211.25 L1266.92 1211.25 L1267.5 1211.25 L1268.09 1211.25 L1268.68 1211.25 L1269.26 1211.25 L1269.85 1211.25 L1270.44 1211.25 L1271.02 1211.25 L1271.61 1211.25 L1272.19 1211.25 L1272.78 1211.25 L1273.37 1211.25 L1273.95 1211.25 L1274.54 1211.25 L1275.13 1211.25 L1275.71 1211.25 L1276.3 1211.25 L1276.89 1211.25 L1277.47 1211.25 L1278.06 1211.25 L1278.65 1211.25 L1279.23 1211.25 L1279.82 1211.25 L1280.4 1211.25 L1280.99 1211.25 L1281.58 1211.25 L1282.16 1211.25 L1282.75 1211.25 L1283.34 1211.25 L1283.92 1211.25 L1284.51 1211.25 L1285.1 1211.25 L1285.68 1211.25 L1286.27 1211.25 L1286.86 1211.25 L1287.44 1211.25 L1288.03 1211.25 L1288.61 1211.25 L1289.2 1211.25 L1289.79 1211.25 L1290.37 1211.25 L1290.96 1211.25 L1291.55 1211.25 L1292.13 1211.25 L1292.72 1211.25 L1293.31 1211.25 L1293.89 1211.25 L1294.48 1211.25 L1295.06 1211.25 L1295.65 1211.25 L1296.24 1211.25 L1296.82 1211.25 L1297.41 1211.25 L1298 1211.25 L1298.58 1211.25 L1299.17 1211.25 L1299.76 1211.25 L1300.34 1211.25 L1300.93 1211.25 L1301.52 1211.25 L1302.1 1211.25 L1302.69 1211.25 L1303.27 1211.25 L1303.86 1211.25 L1304.45 1211.25 L1305.03 1211.25 L1305.62 1211.25 L1306.21 1211.25 L1306.79 1211.25 L1307.38 1211.25 L1307.97 1211.25 L1308.55 1211.25 L1309.14 1211.25 L1309.73 1211.25 L1310.31 1211.25 L1310.9 1211.25 L1311.48 1211.25 L1312.07 1211.25 L1312.66 1211.25 L1313.24 1211.25 L1313.83 1211.25 L1314.42 1211.25 L1315 1211.25 L1315.59 1211.25 L1316.18 1211.25 L1316.76 1211.25 L1317.35 1211.25 L1317.93 1211.25 L1318.52 1211.25 L1319.11 1211.25 L1319.69 1211.25 L1320.28 1211.25 L1320.87 1211.25 L1321.45 1211.25 L1322.04 1211.25 L1322.63 1211.25 L1323.21 1211.25 L1323.8 1211.25 L1324.39 1211.25 L1324.97 1211.25 L1325.56 1211.25 L1326.14 1211.25 L1326.73 1211.25 L1327.32 1211.25 L1327.9 1211.25 L1328.49 1211.25 L1329.08 1211.25 L1329.66 1211.25 L1330.25 1211.25 L1330.84 1211.25 L1331.42 1211.25 L1332.01 1211.25 L1332.6 1211.25 L1333.18 1211.25 L1333.77 1211.25 L1334.35 1211.25 L1334.94 1211.25 L1335.53 1211.25 L1336.11 1211.25 L1336.7 1211.25 L1337.29 1211.25 L1337.87 1211.25 L1338.46 1211.25 L1339.05 1211.25 L1339.63 1211.25 L1340.22 1211.25 L1340.8 1211.25 L1341.39 1211.25 L1341.98 1211.25 L1342.56 1211.25 L1343.15 1211.25 L1343.74 1211.25 L1344.32 1211.25 L1344.91 1211.25 L1345.5 1211.25 L1346.08 1211.25 L1346.67 1211.25 L1347.26 1211.25 L1347.84 1211.25 L1348.43 1211.25 L1349.01 1211.25 L1349.6 1211.25 L1350.19 1211.25 L1350.77 1211.25 L1351.36 1211.25 L1351.95 1211.25 L1352.53 1211.25 L1353.12 1211.25 L1353.71 1211.25 L1354.29 1211.25 L1354.88 1211.25 L1355.47 1211.25 L1356.05 1211.25 L1356.64 1211.25 L1357.22 1211.25 L1357.81 1211.25 L1358.4 1211.25 L1358.98 1211.25 L1359.57 1211.25 L1360.16 1211.25 L1360.74 1211.25 L1361.33 1211.25 L1361.92 1211.25 L1362.5 1211.25 L1363.09 1211.25 L1363.68 1211.25 L1364.26 1211.25 L1364.85 1211.25 L1365.43 1211.25 L1366.02 1211.25 L1366.61 1211.25 L1367.19 1211.25 L1367.78 1211.25 L1368.37 1211.25 L1368.95 1211.25 L1369.54 1211.25 L1370.13 1211.25 L1370.71 1211.25 L1371.3 1211.25 L1371.88 1211.25 L1372.47 1211.25 L1373.06 1211.25 L1373.64 1211.25 L1374.23 1211.25 L1374.82 1211.25 L1375.4 1211.25 L1375.99 1211.25 L1376.58 1211.25 L1377.16 1211.25 L1377.75 1211.25 L1378.34 1211.25 L1378.92 1211.25 L1379.51 1211.25 L1380.09 1211.25 L1380.68 1211.25 L1381.27 1211.25 L1381.85 1211.25 L1382.44 1211.25 L1383.03 1211.25 L1383.61 1211.25 L1384.2 1211.25 L1384.79 1211.25 L1385.37 1211.25 L1385.96 1211.25 L1386.55 1211.25 L1387.13 1211.25 L1387.72 1211.25 L1388.3 1211.25 L1388.89 1211.25 L1389.48 1211.25 L1390.06 1211.25 L1390.65 1211.25 L1391.24 1211.25 L1391.82 1211.25 L1392.41 1211.25 L1393 1211.25 L1393.58 1211.25 L1394.17 1211.25 L1394.75 1211.25 L1395.34 1211.25 L1395.93 1211.25 L1396.51 1211.25 L1397.1 1211.25 L1397.69 1211.25 L1398.27 1211.25 L1398.86 1211.25 L1399.45 1211.25 L1400.03 1211.25 L1400.62 1211.25 L1401.21 1211.25 L1401.79 1211.25 L1402.38 1211.25 L1402.96 1211.25 L1403.55 1211.25 L1404.14 1211.25 L1404.72 1211.25 L1405.31 1211.25 L1405.9 1211.25 L1406.48 1211.25 L1407.07 1211.25 L1407.66 1211.25 L1408.24 1211.25 L1408.83 1211.25 L1409.42 1211.25 L1410 1211.25 L1410.59 1211.25 L1411.17 1211.25 L1411.76 1211.25 L1412.35 1211.25 L1412.93 1211.25 L1413.52 1211.25 L1414.11 1211.25 L1414.69 1211.25 L1415.28 1211.25 L1415.87 1211.25 L1416.45 1211.25 L1417.04 1211.25 L1417.63 1211.25 L1418.21 1211.25 L1418.8 1211.25 L1419.38 1211.25 L1419.97 1211.25 L1420.56 1211.25 L1421.14 1211.25 L1421.73 1211.25 L1422.32 1211.25 L1422.9 1211.25 L1423.49 1211.25 L1424.08 1211.25 L1424.66 1211.25 L1425.25 1211.25 L1425.83 1211.25 L1426.42 1211.25 L1427.01 1211.25 L1427.59 1211.25 L1428.18 1211.25 L1428.77 1211.25 L1429.35 1211.25 L1429.94 1211.25 L1430.53 1211.25 L1431.11 1211.25 L1431.7 1211.25 L1432.29 1211.25 L1432.87 1211.25 L1433.46 1211.25 L1434.04 1211.25 L1434.63 1211.25 L1435.22 1211.25 L1435.8 1211.25 L1436.39 1211.25 L1436.98 1211.25 L1437.56 1211.25 L1438.15 1211.25 L1438.74 1211.25 L1439.32 1211.25 L1439.91 1211.25 L1440.5 1211.25 L1441.08 1211.25 L1441.67 1211.25 L1442.25 1211.25 L1442.84 1211.25 L1443.43 1211.25 L1444.01 1211.25 L1444.6 1211.25 L1445.19 1211.25 L1445.77 1211.25 L1446.36 1211.25 L1446.95 1211.25 L1447.53 1211.25 L1448.12 1211.25 L1448.7 1211.25 L1449.29 1211.25 L1449.88 1211.25 L1450.46 1211.25 L1451.05 1211.25 L1451.64 1211.25 L1452.22 1211.25 L1452.81 1211.25 L1453.4 1211.25 L1453.98 1211.25 L1454.57 1211.25 L1455.16 1211.25 L1455.74 1211.25 L1456.33 1211.25 L1456.91 1211.25 L1457.5 1211.25 L1458.09 1211.25 L1458.67 1211.25 L1459.26 1211.25 L1459.85 1211.25 L1460.43 1211.25 L1461.02 1211.25 L1461.61 1211.25 L1462.19 1211.25 L1462.78 1211.25 L1463.37 1211.25 L1463.95 1211.25 L1464.54 1211.25 L1465.12 1211.25 L1465.71 1211.25 L1466.3 1211.25 L1466.88 1211.25 L1467.47 1211.25 L1468.06 1211.25 L1468.64 1211.25 L1469.23 1211.25 L1469.82 1211.25 L1470.4 1211.25 L1470.99 1211.25 L1471.57 1211.25 L1472.16 1211.25 L1472.75 1211.25 L1473.33 1211.25 L1473.92 1211.25 L1474.51 1211.25 L1475.09 1211.25 L1475.68 1211.25 L1476.27 1211.25 L1476.85 1211.25 L1477.44 1211.25 L1478.03 1211.25 L1478.61 1211.25 L1479.2 1211.25 L1479.78 1211.25 L1480.37 1211.25 L1480.96 1211.25 L1481.54 1211.25 L1482.13 1211.25 L1482.72 1211.25 L1483.3 1211.25 L1483.89 1211.25 L1484.48 1211.25 L1485.06 1211.25 L1485.65 1211.25 L1486.24 1211.25 L1486.82 1211.25 L1487.41 1211.25 L1487.99 1211.25 L1488.58 1211.25 L1489.17 1211.25 L1489.75 1211.25 L1490.34 1211.25 L1490.93 1211.25 L1491.51 1211.25 L1492.1 1211.25 L1492.69 1211.25 L1493.27 1211.25 L1493.86 1211.25 L1494.45 1211.25 L1495.03 1211.25 L1495.62 1211.25 L1496.2 1211.25 L1496.79 1211.25 L1497.38 1211.25 L1497.96 1211.25 L1498.55 1211.25 L1499.14 1211.25 L1499.72 1211.25 L1500.31 1211.25 L1500.9 1211.25 L1501.48 1211.25 L1502.07 1211.25 L1502.65 1211.25 L1503.24 1211.25 L1503.83 1211.25 L1504.41 1211.25 L1505 1211.25 L1505.59 1211.25 L1506.17 1211.25 L1506.76 1211.25 L1507.35 1211.25 L1507.93 1211.25 L1508.52 1211.25 L1509.11 1211.25 L1509.69 1211.25 L1510.28 1211.25 L1510.86 1211.25 L1511.45 1211.25 L1512.04 1211.25 L1512.62 1211.25 L1513.21 1211.25 L1513.8 1211.25 L1514.38 1211.25 L1514.97 1211.25 L1515.56 1211.25 L1516.14 1211.25 L1516.73 1211.25 L1517.32 1211.25 L1517.9 1211.25 L1518.49 1211.25 L1519.07 1211.25 L1519.66 1211.25 L1520.25 1211.25 L1520.83 1211.25 L1521.42 1211.25 L1522.01 1211.25 L1522.59 1211.25 L1523.18 1211.25 L1523.77 1211.25 L1524.35 1211.25 L1524.94 1211.25 L1525.52 1211.25 L1526.11 1211.25 L1526.7 1211.25 L1527.28 1211.25 L1527.87 1211.25 L1528.46 1211.25 L1529.04 1211.25 L1529.63 1211.25 L1530.22 1211.25 L1530.8 1211.25 L1531.39 1211.25 L1531.98 1211.25 L1532.56 1211.25 L1533.15 1211.25 L1533.73 1211.25 L1534.32 1211.25 L1534.91 1211.25 L1535.49 1211.25 L1536.08 1211.25 L1536.67 1211.25 L1537.25 1211.25 L1537.84 1211.25 L1538.43 1211.25 L1539.01 1211.25 L1539.6 1211.25 L1540.19 1211.25 L1540.77 1211.25 L1541.36 1211.25 L1541.94 1211.25 L1542.53 1211.25 L1543.12 1211.25 L1543.7 1211.25 L1544.29 1211.25 L1544.88 1211.25 L1545.46 1211.25 L1546.05 1211.25 L1546.64 1211.25 L1547.22 1211.25 L1547.81 1211.25 L1548.4 1211.25 L1548.98 1211.25 L1549.57 1211.25 L1550.15 1211.25 L1550.74 1211.25 L1551.33 1211.25 L1551.91 1211.25 L1552.5 1211.25 L1553.09 1211.25 L1553.67 1211.25 L1554.26 1211.25 L1554.85 1211.25 L1555.43 1211.25 L1556.02 1211.25 L1556.6 1211.25 L1557.19 1211.25 L1557.78 1211.25 L1558.36 1211.25 L1558.95 1211.25 L1559.54 1211.25 L1560.12 1211.25 L1560.71 1211.25 L1561.3 1211.25 L1561.88 1211.25 L1562.47 1211.25 L1563.06 1211.25 L1563.64 1211.25 L1564.23 1211.25 L1564.81 1211.25 L1565.4 1211.25 L1565.99 1211.25 L1566.57 1211.25 L1567.16 1211.25 L1567.75 1211.25 L1568.33 1211.25 L1568.92 1211.25 L1569.51 1211.25 L1570.09 1211.25 L1570.68 1211.25 L1571.27 1211.25 L1571.85 1211.25 L1572.44 1211.25 L1573.02 1211.25 L1573.61 1211.25 L1574.2 1211.25 L1574.78 1211.25 L1575.37 1211.25 L1575.96 1211.25 L1576.54 1211.25 L1577.13 1211.25 L1577.72 1211.25 L1578.3 1211.25 L1578.89 1211.25 L1579.47 1211.25 L1580.06 1211.25 L1580.65 1211.25 L1581.23 1211.25 L1581.82 1211.25 L1582.41 1211.25 L1582.99 1211.25 L1583.58 1211.25 L1584.17 1211.25 L1584.75 1211.25 L1585.34 1211.25 L1585.93 1211.25 L1586.51 1211.25 L1587.1 1211.25 L1587.68 1211.25 L1588.27 1211.25 L1588.86 1211.25 L1589.44 1211.25 L1590.03 1211.25 L1590.62 1211.25 L1591.2 1211.25 L1591.79 1211.25 L1592.38 1211.25 L1592.96 1211.25 L1593.55 1211.25 L1594.14 1211.25 L1594.72 1211.25 L1595.31 1211.25 L1595.89 1211.25 L1596.48 1211.25 L1597.07 1211.25 L1597.65 1211.25 L1598.24 1211.25 L1598.83 1211.25 L1599.41 1211.25 L1600 1211.25 L1600.59 1211.25 L1601.17 1211.25 L1601.76 1211.25 L1602.34 1211.25 L1602.93 1211.25 L1603.52 1211.25 L1604.1 1211.25 L1604.69 1211.25 L1605.28 1211.25 L1605.86 1211.25 L1606.45 1211.25 L1607.04 1211.25 L1607.62 1211.25 L1608.21 1211.25 L1608.8 1211.25 L1609.38 1211.25 L1609.97 1211.25 L1610.55 1211.25 L1611.14 1211.25 L1611.73 1211.25 L1612.31 1211.25 L1612.9 1211.25 L1613.49 1211.25 L1614.07 1211.25 L1614.66 1211.25 L1615.25 1211.25 L1615.83 1211.25 L1616.42 1211.25 L1617.01 1211.25 L1617.59 1211.25 L1618.18 1211.25 L1618.76 1211.25 L1619.35 1211.25 L1619.94 1211.25 L1620.52 1211.25 L1621.11 1211.25 L1621.7 1211.25 L1622.28 1211.25 L1622.87 1211.25 L1623.46 1211.25 L1624.04 1211.25 L1624.63 1211.25 L1625.22 1211.25 L1625.8 1211.25 L1626.39 1211.25 L1626.97 1211.25 L1627.56 1211.25 L1628.15 1211.25 L1628.73 1211.25 L1629.32 1211.25 L1629.91 1211.25 L1630.49 1211.25 L1631.08 1211.25 L1631.67 1211.25 L1632.25 1211.25 L1632.84 1211.25 L1633.42 1211.25 L1634.01 1211.25 L1634.6 1211.25 L1635.18 1211.25 L1635.77 1211.25 L1636.36 1211.25 L1636.94 1211.25 L1637.53 1211.25 L1638.12 1211.25 L1638.7 1211.25 L1639.29 1211.25 L1639.88 1211.25 L1640.46 1211.25 L1641.05 1211.25 L1641.63 1211.25 L1642.22 1211.25 L1642.81 1211.25 L1643.39 1211.25 L1643.98 1211.25 L1644.57 1211.25 L1645.15 1211.25 L1645.74 1211.25 L1646.33 1211.25 L1646.91 1211.25 L1647.5 1211.25 L1648.09 1211.25 L1648.67 1211.25 L1649.26 1211.25 L1649.84 1211.25 L1650.43 1211.25 L1651.02 1211.25 L1651.6 1211.25 L1652.19 1211.25 L1652.78 1211.25 L1653.36 1211.25 L1653.95 1211.25 L1654.54 1211.25 L1655.12 1211.25 L1655.71 1211.25 L1656.29 1211.25 L1656.88 1211.25 L1657.47 1211.25 L1658.05 1211.25 L1658.64 1211.25 L1659.23 1211.25 L1659.81 1211.25 L1660.4 1211.25 L1660.99 1211.25 L1661.57 1211.25 L1662.16 1211.25 L1662.75 1211.25 L1663.33 1211.25 L1663.92 1211.25 L1664.5 1211.25 L1665.09 1211.25 L1665.68 1211.25 L1666.26 1211.25 L1666.85 1211.25 L1667.44 1211.25 L1668.02 1211.25 L1668.61 1211.25 L1669.2 1211.25 L1669.78 1211.25 L1670.37 1211.25 L1670.96 1211.25 L1671.54 1211.25 L1672.13 1211.25 L1672.71 1211.25 L1673.3 1211.25 L1673.89 1211.25 L1674.47 1211.25 L1675.06 1211.25 L1675.65 1211.25 L1676.23 1211.25 L1676.82 1211.25 L1677.41 1211.25 L1677.99 1211.25 L1678.58 1211.25 L1679.17 1211.25 L1679.75 1211.25 L1680.34 1211.25 L1680.92 1211.25 L1681.51 1211.25 L1682.1 1211.25 L1682.68 1211.25 L1683.27 1211.25 L1683.86 1211.25 L1684.44 1211.25 L1685.03 1211.25 L1685.62 1211.25 L1686.2 1211.25 L1686.79 1211.25 L1687.37 1211.25 L1687.96 1211.25 L1688.55 1211.25 L1689.13 1211.25 L1689.72 1211.25 L1690.31 1211.25 L1690.89 1211.25 L1691.48 1211.25 L1692.07 1211.25 L1692.65 1211.25 L1693.24 1211.25 L1693.83 1211.25 L1694.41 1211.25 L1695 1211.25 L1695.58 1211.25 L1696.17 1211.25 L1696.76 1211.25 L1697.34 1211.25 L1697.93 1211.25 L1698.52 1211.25 L1699.1 1211.25 L1699.69 1211.25 L1700.28 1211.25 L1700.86 1211.25 L1701.45 1211.25 L1702.04 1211.25 L1702.62 1211.25 L1703.21 1211.25 L1703.79 1211.25 L1704.38 1211.25 L1704.97 1211.25 L1705.55 1211.25 L1706.14 1211.25 L1706.73 1211.25 L1707.31 1211.25 L1707.9 1211.25 L1708.49 1211.25 L1709.07 1211.25 L1709.66 1211.25 L1710.24 1211.25 L1710.83 1211.25 L1711.42 1211.25 L1712 1211.25 L1712.59 1211.25 L1713.18 1211.25 L1713.76 1211.25 L1714.35 1211.25 L1714.94 1211.25 L1715.52 1211.25 L1716.11 1211.25 L1716.7 1211.25 L1717.28 1211.25 L1717.87 1211.25 L1718.45 1211.25 L1719.04 1211.25 L1719.63 1211.25 L1720.21 1211.25 L1720.8 1211.25 L1721.39 1211.25 L1721.97 1211.25 L1722.56 1211.25 L1723.15 1211.25 L1723.73 1211.25 L1724.32 1211.25 L1724.91 1211.25 L1725.49 1211.25 L1726.08 1211.25 L1726.66 1211.25 L1727.25 1211.25 L1727.84 1211.25 L1728.42 1211.25 L1729.01 1211.25 L1729.6 1211.25 L1730.18 1211.25 L1730.77 1211.25 L1731.36 1211.25 L1731.94 1211.25 L1732.53 1211.25 L1733.11 1211.25 L1733.7 1211.25 L1734.29 1211.25 L1734.87 1211.25 L1735.46 1211.25 L1736.05 1211.25 L1736.63 1211.25 L1737.22 1211.25 L1737.81 1211.25 L1738.39 1211.25 L1738.98 1211.25 L1739.57 1211.25 L1740.15 1211.25 L1740.74 1211.25 L1741.32 1211.25 L1741.91 1211.25 L1742.5 1211.25 L1743.08 1211.25 L1743.67 1211.25 L1744.26 1211.25 L1744.84 1211.25 L1745.43 1211.25 L1746.02 1211.25 L1746.6 1211.25 L1747.19 1211.25 L1747.78 1211.25 L1748.36 1211.25 L1748.95 1211.25 L1749.53 1211.25 L1750.12 1211.25 L1750.71 1211.25 L1751.29 1211.25 L1751.88 1211.25 L1752.47 1211.25 L1753.05 1211.25 L1753.64 1211.25 L1754.23 1211.25 L1754.81 1211.25 L1755.4 1211.25 L1755.99 1211.25 L1756.57 1211.25 L1757.16 1211.25 L1757.74 1211.25 L1758.33 1211.25 L1758.92 1211.25 L1759.5 1211.25 L1760.09 1211.25 L1760.68 1211.25 L1761.26 1211.25 L1761.85 1211.25 L1762.44 1211.25 L1763.02 1211.25 L1763.61 1211.25 L1764.19 1211.25 L1764.78 1211.25 L1765.37 1211.25 L1765.95 1211.25 L1766.54 1211.25 L1767.13 1211.25 L1767.71 1211.25 L1768.3 1211.25 L1768.89 1211.25 L1769.47 1211.25 L1770.06 1211.25 L1770.65 1211.25 L1771.23 1211.25 L1771.82 1211.25 L1772.4 1211.25 L1772.99 1211.25 L1773.58 1211.25 L1774.16 1211.25 L1774.75 1211.25 L1775.34 1211.25 L1775.92 1211.25 L1776.51 1211.25 L1777.1 1211.25 L1777.68 1211.25 L1778.27 1211.25 L1778.86 1211.25 L1779.44 1211.25 L1780.03 1211.25 L1780.61 1211.25 L1781.2 1211.25 L1781.79 1211.25 L1782.37 1211.25 L1782.96 1211.25 L1783.55 1211.25 L1784.13 1211.25 L1784.72 1211.25 L1785.31 1211.25 L1785.89 1211.25 L1786.48 1211.25 L1787.06 1211.25 L1787.65 1211.25 L1788.24 1211.25 L1788.82 1211.25 L1789.41 1211.25 L1790 1211.25 L1790.58 1211.25 L1791.17 1211.25 L1791.76 1211.25 L1792.34 1211.25 L1792.93 1211.25 L1793.52 1211.25 L1794.1 1211.25 L1794.69 1211.25 L1795.27 1211.25 L1795.86 1211.25 L1796.45 1211.25 L1797.03 1211.25 L1797.62 1211.25 L1798.21 1211.25 L1798.79 1211.25 L1799.38 1211.25 L1799.97 1211.25 L1800.55 1211.25 L1801.14 1211.25 L1801.73 1211.25 L1802.31 1211.25 L1802.9 1211.25 L1803.48 1211.25 L1804.07 1211.25 L1804.66 1211.25 L1805.24 1211.25 L1805.83 1211.25 L1806.42 1211.25 L1807 1211.25 L1807.59 1211.25 L1808.18 1211.25 L1808.76 1211.25 L1809.35 1211.25 L1809.94 1211.25 L1810.52 1211.25 L1811.11 1211.25 L1811.69 1211.25 L1812.28 1211.25 L1812.87 1211.25 L1813.45 1211.25 L1814.04 1211.25 L1814.63 1211.25 L1815.21 1211.25 L1815.8 1211.25 L1816.39 1211.25 L1816.97 1211.25 L1817.56 1211.25 L1818.14 1211.25 L1818.73 1211.25 L1819.32 1211.25 L1819.9 1211.25 L1820.49 1211.25 L1821.08 1211.25 L1821.66 1211.25 L1822.25 1211.25 L1822.84 1211.25 L1823.42 1211.25 L1824.01 1211.25 L1824.6 1211.25 L1825.18 1211.25 L1825.77 1211.25 L1826.35 1211.25 L1826.94 1211.25 L1827.53 1211.25 L1828.11 1211.25 L1828.7 1211.25 L1829.29 1211.25 L1829.87 1211.25 L1830.46 1211.25 L1831.05 1211.25 L1831.63 1211.25 L1832.22 1211.25 L1832.81 1211.25 L1833.39 1211.25 L1833.98 1211.25 L1834.56 1211.25 L1835.15 1211.25 L1835.74 1211.25 L1836.32 1211.25 L1836.91 1211.25 L1837.5 1211.25 L1838.08 1211.25 L1838.67 1211.25 L1839.26 1211.25 L1839.84 1211.25 L1840.43 1211.25 L1841.01 1211.25 L1841.6 1211.25 L1842.19 1211.25 L1842.77 1211.25 L1843.36 1211.25 L1843.95 1211.25 L1844.53 1211.25 L1845.12 1211.25 L1845.71 1211.25 L1846.29 1211.25 L1846.88 1211.25 L1847.47 1211.25 L1848.05 1211.25 L1848.64 1211.25 L1849.22 1211.25 L1849.81 1211.25 L1850.4 1211.25 L1850.98 1211.25 L1851.57 1211.25 L1852.16 1211.25 L1852.74 1211.25 L1853.33 1211.25 L1853.92 1211.25 L1854.5 1211.25 L1855.09 1211.25 L1855.68 1211.25 L1856.26 1211.25 L1856.85 1211.25 L1857.43 1211.25 L1858.02 1211.25 L1858.61 1211.25 L1859.19 1211.25 L1859.78 1211.25 L1860.37 1211.25 L1860.95 1211.25 L1861.54 1211.25 L1862.13 1211.25 L1862.71 1211.25 L1863.3 1211.25 L1863.88 1211.25 L1864.47 1211.25 L1865.06 1211.25 L1865.64 1211.25 L1866.23 1211.25 L1866.82 1211.25 L1867.4 1211.25 L1867.99 1211.25 L1868.58 1211.25 L1869.16 1211.25 L1869.75 1211.25 L1870.34 1211.25 L1870.92 1211.25 L1871.51 1211.25 L1872.09 1211.25 L1872.68 1211.25 L1873.27 1211.25 L1873.85 1211.25 L1874.44 1211.25 L1875.03 1211.25 L1875.61 1211.25 L1876.2 1211.25 L1876.79 1211.25 L1877.37 1211.25 L1877.96 1211.25 L1878.55 1211.25 L1879.13 1211.25 L1879.72 1211.25 L1880.3 1211.25 L1880.89 1211.25 L1881.48 1211.25 L1882.06 1211.25 L1882.65 1211.25 L1883.24 1211.25 L1883.82 1211.25 L1884.41 1211.25 L1885 1211.25 L1885.58 1211.25 L1886.17 1211.25 L1886.76 1211.25 L1887.34 1211.25 L1887.93 1211.25 L1888.51 1211.25 L1889.1 1211.25 L1889.69 1211.25 L1890.27 1211.25 L1890.86 1211.25 L1891.45 1211.25 L1892.03 1211.25 L1892.62 1211.25 L1893.21 1211.25 L1893.79 1211.25 L1894.38 1211.25 L1894.96 1211.25 L1895.55 1211.25 L1896.14 1211.25 L1896.72 1211.25 L1897.31 1211.25 L1897.9 1211.25 L1898.48 1211.25 L1899.07 1211.25 L1899.66 1211.25 L1900.24 1211.25 L1900.83 1211.25 L1901.42 1211.25 L1902 1211.25 L1902.59 1211.25 L1903.17 1211.25 L1903.76 1211.25 L1904.35 1211.25 L1904.93 1211.25 L1905.52 1211.25 L1906.11 1211.25 L1906.69 1211.25 L1907.28 1211.25 L1907.87 1211.25 L1908.45 1211.25 L1909.04 1211.25 L1909.63 1211.25 L1910.21 1211.25 L1910.8 1211.25 L1911.38 1211.25 L1911.97 1211.25 L1912.56 1211.25 L1913.14 1211.25 L1913.73 1211.25 L1914.32 1211.25 L1914.9 1211.25 L1915.49 1211.25 L1916.08 1211.25 L1916.66 1211.25 L1917.25 1211.25 L1917.83 1211.25 L1918.42 1211.25 L1919.01 1211.25 L1919.59 1211.25 L1920.18 1211.25 L1920.77 1211.25 L1921.35 1211.25 L1921.94 1211.25 L1922.53 1211.25 L1923.11 1211.25 L1923.7 1211.25 L1924.29 1211.25 L1924.87 1211.25 L1925.46 1211.25 L1926.04 1211.25 L1926.63 1211.25 L1927.22 1211.25 L1927.8 1211.25 L1928.39 1211.25 L1928.98 1211.25 L1929.56 1211.25 L1930.15 1211.25 L1930.74 1211.25 L1931.32 1211.25 L1931.91 1211.25 L1932.5 1211.25 L1933.08 1211.25 L1933.67 1211.25 L1934.25 1211.25 L1934.84 1211.25 L1935.43 1211.25 L1936.01 1211.25 L1936.6 1211.25 L1937.19 1211.25 L1937.77 1211.25 L1938.36 1211.25 L1938.95 1211.25 L1939.53 1211.25 L1940.12 1211.25 L1940.71 1211.25 L1941.29 1211.25 L1941.88 1211.25 L1942.46 1211.25 L1943.05 1211.25 L1943.64 1211.25 L1944.22 1211.25 L1944.81 1211.25 L1945.4 1211.25 L1945.98 1211.25 L1946.57 1211.25 L1947.16 1211.25 L1947.74 1211.25 L1948.33 1211.25 L1948.91 1211.25 L1949.5 1211.25 L1950.09 1211.25 L1950.67 1211.25 L1951.26 1211.25 L1951.85 1211.25 L1952.43 1211.25 L1953.02 1211.25 L1953.61 1211.25 L1954.19 1211.25 L1954.78 1211.25 L1955.37 1211.25 L1955.95 1211.25 L1956.54 1211.25 L1957.12 1211.25 L1957.71 1211.25 L1958.3 1211.25 L1958.88 1211.25 L1959.47 1211.25 L1960.06 1211.25 L1960.64 1211.25 L1961.23 1211.25 L1961.82 1211.25 L1962.4 1211.25 L1962.99 1211.25 L1963.58 1211.25 L1964.16 1211.25 L1964.75 1211.25 L1965.33 1211.25 L1965.92 1211.25 L1966.51 1211.25 L1967.09 1211.25 L1967.68 1211.25 L1968.27 1211.25 L1968.85 1211.25 L1969.44 1211.25 L1970.03 1211.25 L1970.61 1211.25 L1971.2 1211.25 L1971.78 1211.25 L1972.37 1211.25 L1972.96 1211.25 L1973.54 1211.25 L1974.13 1211.25 L1974.72 1211.25 L1975.3 1211.25 L1975.89 1211.25 L1976.48 1211.25 L1977.06 1211.25 L1977.65 1211.25 L1978.24 1211.25 L1978.82 1211.25 L1979.41 1211.25 L1979.99 1211.25 L1980.58 1211.25 L1981.17 1211.25 L1981.75 1211.25 L1982.34 1211.25 L1982.93 1211.25 L1983.51 1211.25 L1984.1 1211.25 L1984.69 1211.25 L1985.27 1211.25 L1985.86 1211.25 L1986.45 1211.25 L1987.03 1211.25 L1987.62 1211.25 L1988.2 1211.25 L1988.79 1211.25 L1989.38 1211.25 L1989.96 1211.25 L1990.55 1211.25 L1991.14 1211.25 L1991.72 1211.25 L1992.31 1211.25 L1992.9 1211.25 L1993.48 1211.25 L1994.07 1211.25 L1994.65 1211.25 L1995.24 1211.25 L1995.83 1211.25 L1996.41 1211.25 L1997 1211.25 L1997.59 1211.25 L1998.17 1211.25 L1998.76 1211.25 L1999.35 1211.25 L1999.93 1211.25 L2000.52 1211.25 L2001.11 1211.25 L2001.69 1211.25 L2002.28 1211.25 L2002.86 1211.25 L2003.45 1211.25 L2004.04 1211.25 L2004.62 1211.25 L2005.21 1211.25 L2005.8 1211.25 L2006.38 1211.25 L2006.97 1211.25 L2007.56 1211.25 L2008.14 1211.25 L2008.73 1211.25 L2009.32 1211.25 L2009.9 1211.25 L2010.49 1211.25 L2011.07 1211.25 L2011.66 1211.25 L2012.25 1211.25 L2012.83 1211.25 L2013.42 1211.25 L2014.01 1211.25 L2014.59 1211.25 L2015.18 1211.25 L2015.77 1211.25 L2016.35 1211.25 L2016.94 1211.25 L2017.53 1211.25 L2018.11 1211.25 L2018.7 1211.25 L2019.28 1211.25 L2019.87 1211.25 L2020.46 1211.25 L2021.04 1211.25 L2021.63 1211.25 L2022.22 1211.25 L2022.8 1211.25 L2023.39 1211.25 L2023.98 1211.25 L2024.56 1211.25 L2025.15 1211.25 L2025.73 1211.25 L2026.32 1211.25 L2026.91 1211.25 L2027.49 1211.25 L2028.08 1211.25 L2028.67 1211.25 L2029.25 1211.25 L2029.84 1211.25 L2030.43 1211.25 L2031.01 1211.25 L2031.6 1211.25 L2032.19 1211.25 L2032.77 1211.25 L2033.36 1211.25 L2033.94 1211.25 L2034.53 1211.25 L2035.12 1211.25 L2035.7 1211.25 L2036.29 1211.25 L2036.88 1211.25 L2037.46 1211.25 L2038.05 1211.25 L2038.64 1211.25 L2039.22 1211.25 L2039.81 1211.25 L2040.4 1211.25 L2040.98 1211.25 L2041.57 1211.25 L2042.15 1211.25 L2042.74 1211.25 L2043.33 1211.25 L2043.91 1211.25 L2044.5 1211.25 L2045.09 1211.25 L2045.67 1211.25 L2046.26 1211.25 L2046.85 1211.25 L2047.43 1211.25 L2048.02 1211.25 L2048.6 1211.25 L2049.19 1211.25 L2049.78 1211.25 L2050.36 1211.25 L2050.95 1211.25 L2051.54 1211.25 L2052.12 1211.25 L2052.71 1211.25 L2053.3 1211.25 L2053.88 1211.25 L2054.47 1211.25 L2055.06 1211.25 L2055.64 1211.25 L2056.23 1211.25 L2056.81 1211.25 L2057.4 1211.25 L2057.99 1211.25 L2058.57 1211.25 L2059.16 1211.25 L2059.75 1211.25 L2060.33 1211.25 L2060.92 1211.25 L2061.51 1211.25 L2062.09 1211.25 L2062.68 1211.25 L2063.27 1211.25 L2063.85 1211.25 L2064.44 1211.25 L2065.02 1211.25 L2065.61 1211.25 L2066.2 1211.25 L2066.78 1211.25 L2067.37 1211.25 L2067.96 1211.25 L2068.54 1211.25 L2069.13 1211.25 L2069.72 1211.25 L2070.3 1211.25 L2070.89 1211.25 L2071.48 1211.25 L2072.06 1211.25 L2072.65 1211.25 L2073.23 1211.25 L2073.82 1211.25 L2074.41 1211.25 L2074.99 1211.25 L2075.58 1211.25 L2076.17 1211.25 L2076.75 1211.25 L2077.34 1211.25 L2077.93 1211.25 L2078.51 1211.25 L2079.1 1211.25 L2079.68 1211.25 L2080.27 1211.25 L2080.86 1211.25 L2081.44 1211.25 L2082.03 1211.25 L2082.62 1211.25 L2083.2 1211.25 L2083.79 1211.25 L2084.38 1211.25 L2084.96 1211.25 L2085.55 1211.25 L2086.14 1211.25 L2086.72 1211.25 L2087.31 1211.25 L2087.89 1211.25 L2088.48 1211.25 L2089.07 1211.25 L2089.65 1211.25 L2090.24 1211.25 L2090.83 1211.25 L2091.41 1211.25 L2092 1211.25 L2092.59 1211.25 L2093.17 1211.25 L2093.76 1211.25 L2094.35 1211.25 L2094.93 1211.25 L2095.52 1211.25 L2096.1 1211.25 L2096.69 1211.25 L2097.28 1211.25 L2097.86 1211.25 L2098.45 1211.25 L2099.04 1211.25 L2099.62 1211.25 L2100.21 1211.25 L2100.8 1211.25 L2101.38 1211.25 L2101.97 1211.25 L2102.55 1211.25 L2103.14 1211.25 L2103.73 1211.25 L2104.31 1211.25 L2104.9 1211.25 L2105.49 1211.25 L2106.07 1211.25 L2106.66 1211.25 L2107.25 1211.25 L2107.83 1211.25 L2108.42 1211.25 L2109.01 1211.25 L2109.59 1211.25 L2110.18 1211.25 L2110.76 1211.25 L2111.35 1211.25 L2111.94 1211.25 L2112.52 1211.25 L2113.11 1211.25 L2113.7 1211.25 L2114.28 1211.25 L2114.87 1211.25 L2115.46 1211.25 L2116.04 1211.25 L2116.63 1211.25 L2117.22 1211.25 L2117.8 1211.25 L2118.39 1211.25 L2118.97 1211.25 L2119.56 1211.25 L2120.15 1211.25 L2120.73 1211.25 L2121.32 1211.25 L2121.91 1211.25 L2122.49 1211.25 L2123.08 1211.25 L2123.67 1211.25 L2124.25 1211.25 L2124.84 1211.25 L2125.42 1211.25 L2126.01 1211.25 L2126.6 1211.25 L2127.18 1211.25 L2127.77 1211.25 L2128.36 1211.25 L2128.94 1211.25 L2129.53 1211.25 L2130.12 1211.25 L2130.7 1211.25 L2131.29 1211.25 L2131.88 1211.25 L2132.46 1211.25 L2133.05 1211.25 L2133.63 1211.25 L2134.22 1211.25 L2134.81 1211.25 L2135.39 1211.25 L2135.98 1211.25 L2136.57 1211.25 L2137.15 1211.25 L2137.74 1211.25 L2138.33 1211.25 L2138.91 1211.25 L2139.5 1211.25 L2140.09 1211.25 L2140.67 1211.25 L2141.26 1211.25 L2141.84 1211.25 L2142.43 1211.25 L2143.02 1211.25 L2143.6 1211.25 L2144.19 1211.25 L2144.78 1211.25 L2145.36 1211.25 L2145.95 1211.25 L2146.54 1211.25 L2147.12 1211.25 L2147.71 1211.25 L2148.3 1211.25 L2148.88 1211.25 L2149.47 1211.25 L2150.05 1211.25 L2150.64 1211.25 L2151.23 1211.25 L2151.81 1211.25 L2152.4 1211.25 L2152.99 1211.25 L2153.57 1211.25 L2154.16 1211.25 L2154.75 1211.25 L2155.33 1211.25 L2155.92 1211.25 L2156.5 1211.25 L2157.09 1211.25 L2157.68 1211.25 L2158.26 1211.25 L2158.26 1211.06 L2157.68 1211.06 L2157.09 1211.06 L2156.5 1211.06 L2155.92 1211.06 L2155.33 1211.06 L2154.75 1211.06 L2154.16 1211.06 L2153.57 1211.06 L2152.99 1211.06 L2152.4 1211.06 L2151.81 1211.06 L2151.23 1211.06 L2150.64 1211.06 L2150.05 1211.06 L2149.47 1211.06 L2148.88 1211.06 L2148.3 1211.06 L2147.71 1211.06 L2147.12 1211.06 L2146.54 1211.06 L2145.95 1211.06 L2145.36 1211.06 L2144.78 1211.06 L2144.19 1211.06 L2143.6 1211.06 L2143.02 1211.06 L2142.43 1211.06 L2141.84 1211.06 L2141.26 1211.06 L2140.67 1211.06 L2140.09 1211.06 L2139.5 1211.06 L2138.91 1211.06 L2138.33 1211.06 L2137.74 1211.06 L2137.15 1211.06 L2136.57 1211.06 L2135.98 1211.06 L2135.39 1211.06 L2134.81 1211.06 L2134.22 1211.06 L2133.63 1211.06 L2133.05 1211.06 L2132.46 1211.06 L2131.88 1211.06 L2131.29 1211.06 L2130.7 1211.06 L2130.12 1211.06 L2129.53 1211.06 L2128.94 1211.06 L2128.36 1211.06 L2127.77 1211.06 L2127.18 1211.06 L2126.6 1211.06 L2126.01 1211.06 L2125.42 1211.06 L2124.84 1211.06 L2124.25 1211.06 L2123.67 1211.06 L2123.08 1211.06 L2122.49 1211.06 L2121.91 1211.06 L2121.32 1211.06 L2120.73 1211.06 L2120.15 1211.06 L2119.56 1211.06 L2118.97 1211.06 L2118.39 1211.06 L2117.8 1211.06 L2117.22 1211.06 L2116.63 1211.06 L2116.04 1211.06 L2115.46 1211.06 L2114.87 1211.06 L2114.28 1211.06 L2113.7 1211.06 L2113.11 1211.06 L2112.52 1211.06 L2111.94 1211.06 L2111.35 1211.06 L2110.76 1211.06 L2110.18 1211.06 L2109.59 1211.06 L2109.01 1211.06 L2108.42 1211.06 L2107.83 1211.06 L2107.25 1211.06 L2106.66 1211.06 L2106.07 1211.06 L2105.49 1211.06 L2104.9 1211.06 L2104.31 1211.06 L2103.73 1211.06 L2103.14 1211.06 L2102.55 1211.06 L2101.97 1211.06 L2101.38 1211.06 L2100.8 1211.06 L2100.21 1211.06 L2099.62 1211.06 L2099.04 1211.06 L2098.45 1211.06 L2097.86 1211.06 L2097.28 1211.06 L2096.69 1211.06 L2096.1 1211.06 L2095.52 1211.06 L2094.93 1211.06 L2094.35 1211.06 L2093.76 1211.06 L2093.17 1211.06 L2092.59 1211.06 L2092 1211.06 L2091.41 1211.06 L2090.83 1211.06 L2090.24 1211.06 L2089.65 1211.06 L2089.07 1211.06 L2088.48 1211.06 L2087.89 1211.06 L2087.31 1211.06 L2086.72 1211.06 L2086.14 1211.06 L2085.55 1211.06 L2084.96 1211.06 L2084.38 1211.06 L2083.79 1211.06 L2083.2 1211.06 L2082.62 1211.06 L2082.03 1211.06 L2081.44 1211.06 L2080.86 1211.06 L2080.27 1211.06 L2079.68 1211.06 L2079.1 1211.06 L2078.51 1211.06 L2077.93 1211.06 L2077.34 1211.06 L2076.75 1211.06 L2076.17 1211.06 L2075.58 1211.06 L2074.99 1211.06 L2074.41 1211.06 L2073.82 1211.06 L2073.23 1211.06 L2072.65 1211.06 L2072.06 1211.06 L2071.48 1211.06 L2070.89 1211.06 L2070.3 1211.06 L2069.72 1211.06 L2069.13 1211.06 L2068.54 1211.06 L2067.96 1211.06 L2067.37 1211.06 L2066.78 1211.06 L2066.2 1211.06 L2065.61 1211.06 L2065.02 1211.06 L2064.44 1211.06 L2063.85 1211.06 L2063.27 1211.06 L2062.68 1211.06 L2062.09 1211.06 L2061.51 1211.06 L2060.92 1211.06 L2060.33 1211.06 L2059.75 1211.06 L2059.16 1211.06 L2058.57 1211.06 L2057.99 1211.06 L2057.4 1211.06 L2056.81 1211.06 L2056.23 1211.06 L2055.64 1211.06 L2055.06 1211.06 L2054.47 1211.06 L2053.88 1211.06 L2053.3 1211.06 L2052.71 1211.06 L2052.12 1211.06 L2051.54 1211.06 L2050.95 1211.06 L2050.36 1211.06 L2049.78 1211.06 L2049.19 1211.06 L2048.6 1211.06 L2048.02 1211.06 L2047.43 1211.06 L2046.85 1211.06 L2046.26 1211.06 L2045.67 1211.06 L2045.09 1211.06 L2044.5 1211.06 L2043.91 1211.06 L2043.33 1211.06 L2042.74 1211.06 L2042.15 1211.06 L2041.57 1211.06 L2040.98 1211.06 L2040.4 1211.06 L2039.81 1211.06 L2039.22 1211.06 L2038.64 1211.06 L2038.05 1211.06 L2037.46 1211.06 L2036.88 1211.06 L2036.29 1211.06 L2035.7 1211.06 L2035.12 1211.06 L2034.53 1211.06 L2033.94 1211.06 L2033.36 1211.06 L2032.77 1211.06 L2032.19 1211.06 L2031.6 1211.06 L2031.01 1211.06 L2030.43 1211.06 L2029.84 1211.06 L2029.25 1211.06 L2028.67 1211.06 L2028.08 1211.06 L2027.49 1211.06 L2026.91 1211.06 L2026.32 1211.06 L2025.73 1211.06 L2025.15 1211.06 L2024.56 1211.06 L2023.98 1211.06 L2023.39 1211.06 L2022.8 1211.06 L2022.22 1211.06 L2021.63 1211.06 L2021.04 1211.06 L2020.46 1211.06 L2019.87 1211.06 L2019.28 1211.06 L2018.7 1211.06 L2018.11 1211.06 L2017.53 1211.06 L2016.94 1211.06 L2016.35 1211.06 L2015.77 1211.06 L2015.18 1211.06 L2014.59 1211.06 L2014.01 1211.06 L2013.42 1211.06 L2012.83 1211.06 L2012.25 1211.06 L2011.66 1211.06 L2011.07 1211.06 L2010.49 1211.06 L2009.9 1211.06 L2009.32 1211.06 L2008.73 1211.06 L2008.14 1211.06 L2007.56 1211.06 L2006.97 1211.06 L2006.38 1211.06 L2005.8 1211.06 L2005.21 1211.06 L2004.62 1211.06 L2004.04 1211.06 L2003.45 1211.06 L2002.86 1211.06 L2002.28 1211.06 L2001.69 1211.06 L2001.11 1211.06 L2000.52 1211.06 L1999.93 1211.06 L1999.35 1211.06 L1998.76 1211.06 L1998.17 1211.06 L1997.59 1211.06 L1997 1211.06 L1996.41 1211.06 L1995.83 1211.06 L1995.24 1211.06 L1994.65 1211.06 L1994.07 1211.06 L1993.48 1211.06 L1992.9 1211.06 L1992.31 1211.06 L1991.72 1211.06 L1991.14 1211.06 L1990.55 1211.06 L1989.96 1211.06 L1989.38 1211.06 L1988.79 1211.06 L1988.2 1211.06 L1987.62 1211.06 L1987.03 1211.06 L1986.45 1211.06 L1985.86 1211.06 L1985.27 1211.06 L1984.69 1211.06 L1984.1 1211.06 L1983.51 1211.06 L1982.93 1211.06 L1982.34 1211.06 L1981.75 1211.06 L1981.17 1211.06 L1980.58 1211.06 L1979.99 1211.06 L1979.41 1211.06 L1978.82 1211.06 L1978.24 1211.06 L1977.65 1211.06 L1977.06 1211.06 L1976.48 1211.06 L1975.89 1211.06 L1975.3 1211.06 L1974.72 1211.06 L1974.13 1211.06 L1973.54 1211.06 L1972.96 1211.06 L1972.37 1211.06 L1971.78 1211.06 L1971.2 1211.06 L1970.61 1211.06 L1970.03 1211.06 L1969.44 1211.06 L1968.85 1211.06 L1968.27 1211.06 L1967.68 1211.06 L1967.09 1211.06 L1966.51 1211.06 L1965.92 1211.06 L1965.33 1211.06 L1964.75 1211.06 L1964.16 1211.06 L1963.58 1211.06 L1962.99 1211.06 L1962.4 1211.06 L1961.82 1211.06 L1961.23 1211.06 L1960.64 1211.06 L1960.06 1211.06 L1959.47 1211.06 L1958.88 1211.06 L1958.3 1211.06 L1957.71 1211.06 L1957.12 1211.06 L1956.54 1211.06 L1955.95 1211.06 L1955.37 1211.06 L1954.78 1211.06 L1954.19 1211.06 L1953.61 1211.06 L1953.02 1211.06 L1952.43 1211.06 L1951.85 1211.06 L1951.26 1211.06 L1950.67 1211.06 L1950.09 1211.06 L1949.5 1211.06 L1948.91 1211.06 L1948.33 1211.06 L1947.74 1211.06 L1947.16 1211.06 L1946.57 1211.06 L1945.98 1211.06 L1945.4 1211.06 L1944.81 1211.06 L1944.22 1211.06 L1943.64 1211.06 L1943.05 1211.06 L1942.46 1211.06 L1941.88 1211.06 L1941.29 1211.06 L1940.71 1211.06 L1940.12 1211.06 L1939.53 1211.06 L1938.95 1211.06 L1938.36 1211.06 L1937.77 1211.06 L1937.19 1211.06 L1936.6 1211.06 L1936.01 1211.06 L1935.43 1211.06 L1934.84 1211.06 L1934.25 1211.06 L1933.67 1211.06 L1933.08 1211.06 L1932.5 1211.06 L1931.91 1211.06 L1931.32 1211.06 L1930.74 1211.06 L1930.15 1211.06 L1929.56 1211.06 L1928.98 1211.06 L1928.39 1211.06 L1927.8 1211.06 L1927.22 1211.06 L1926.63 1211.06 L1926.04 1211.06 L1925.46 1211.06 L1924.87 1211.06 L1924.29 1211.06 L1923.7 1211.06 L1923.11 1211.06 L1922.53 1211.06 L1921.94 1211.06 L1921.35 1211.06 L1920.77 1211.06 L1920.18 1211.06 L1919.59 1211.06 L1919.01 1211.06 L1918.42 1211.06 L1917.83 1211.06 L1917.25 1211.06 L1916.66 1211.06 L1916.08 1211.06 L1915.49 1211.06 L1914.9 1211.06 L1914.32 1211.06 L1913.73 1211.06 L1913.14 1211.06 L1912.56 1211.06 L1911.97 1211.06 L1911.38 1211.06 L1910.8 1211.06 L1910.21 1211.06 L1909.63 1211.06 L1909.04 1211.06 L1908.45 1211.06 L1907.87 1211.06 L1907.28 1211.06 L1906.69 1211.06 L1906.11 1211.06 L1905.52 1211.06 L1904.93 1211.06 L1904.35 1211.06 L1903.76 1211.06 L1903.17 1211.06 L1902.59 1211.06 L1902 1211.06 L1901.42 1211.06 L1900.83 1211.06 L1900.24 1211.06 L1899.66 1211.06 L1899.07 1211.06 L1898.48 1211.06 L1897.9 1211.06 L1897.31 1211.06 L1896.72 1211.06 L1896.14 1211.06 L1895.55 1211.06 L1894.96 1211.06 L1894.38 1211.06 L1893.79 1211.06 L1893.21 1211.06 L1892.62 1211.06 L1892.03 1211.06 L1891.45 1211.06 L1890.86 1211.06 L1890.27 1211.06 L1889.69 1211.06 L1889.1 1211.06 L1888.51 1211.06 L1887.93 1211.06 L1887.34 1211.06 L1886.76 1211.06 L1886.17 1211.06 L1885.58 1211.06 L1885 1211.06 L1884.41 1211.06 L1883.82 1211.06 L1883.24 1211.06 L1882.65 1211.06 L1882.06 1211.06 L1881.48 1211.06 L1880.89 1211.06 L1880.3 1211.06 L1879.72 1211.06 L1879.13 1211.06 L1878.55 1211.06 L1877.96 1211.06 L1877.37 1211.06 L1876.79 1211.06 L1876.2 1211.06 L1875.61 1211.06 L1875.03 1211.06 L1874.44 1211.06 L1873.85 1211.06 L1873.27 1211.06 L1872.68 1211.06 L1872.09 1211.06 L1871.51 1211.06 L1870.92 1211.06 L1870.34 1211.06 L1869.75 1211.06 L1869.16 1211.06 L1868.58 1211.06 L1867.99 1211.06 L1867.4 1211.06 L1866.82 1211.06 L1866.23 1211.06 L1865.64 1211.06 L1865.06 1211.06 L1864.47 1211.06 L1863.88 1211.06 L1863.3 1211.06 L1862.71 1211.06 L1862.13 1211.06 L1861.54 1211.06 L1860.95 1211.06 L1860.37 1211.06 L1859.78 1211.06 L1859.19 1211.06 L1858.61 1211.06 L1858.02 1211.06 L1857.43 1211.06 L1856.85 1211.06 L1856.26 1211.06 L1855.68 1211.06 L1855.09 1211.06 L1854.5 1211.06 L1853.92 1211.06 L1853.33 1211.06 L1852.74 1211.06 L1852.16 1211.06 L1851.57 1211.06 L1850.98 1211.06 L1850.4 1211.06 L1849.81 1211.06 L1849.22 1211.06 L1848.64 1211.06 L1848.05 1211.06 L1847.47 1211.06 L1846.88 1211.06 L1846.29 1211.06 L1845.71 1211.06 L1845.12 1211.06 L1844.53 1211.06 L1843.95 1211.06 L1843.36 1211.06 L1842.77 1211.06 L1842.19 1211.06 L1841.6 1211.06 L1841.01 1211.06 L1840.43 1211.06 L1839.84 1211.06 L1839.26 1211.06 L1838.67 1211.06 L1838.08 1211.06 L1837.5 1211.06 L1836.91 1211.06 L1836.32 1211.06 L1835.74 1211.06 L1835.15 1211.06 L1834.56 1211.06 L1833.98 1211.06 L1833.39 1211.06 L1832.81 1211.06 L1832.22 1211.06 L1831.63 1211.06 L1831.05 1211.06 L1830.46 1211.06 L1829.87 1211.06 L1829.29 1211.06 L1828.7 1211.06 L1828.11 1211.06 L1827.53 1211.06 L1826.94 1211.06 L1826.35 1211.06 L1825.77 1211.06 L1825.18 1211.06 L1824.6 1211.06 L1824.01 1211.06 L1823.42 1211.06 L1822.84 1211.06 L1822.25 1211.06 L1821.66 1211.06 L1821.08 1211.06 L1820.49 1211.06 L1819.9 1211.06 L1819.32 1211.06 L1818.73 1211.06 L1818.14 1211.06 L1817.56 1211.06 L1816.97 1211.06 L1816.39 1211.06 L1815.8 1211.06 L1815.21 1211.06 L1814.63 1211.06 L1814.04 1211.06 L1813.45 1211.06 L1812.87 1211.06 L1812.28 1211.06 L1811.69 1211.06 L1811.11 1211.06 L1810.52 1211.06 L1809.94 1211.06 L1809.35 1211.06 L1808.76 1211.06 L1808.18 1211.06 L1807.59 1211.06 L1807 1211.06 L1806.42 1211.06 L1805.83 1211.06 L1805.24 1211.06 L1804.66 1211.06 L1804.07 1211.06 L1803.48 1211.06 L1802.9 1211.06 L1802.31 1211.06 L1801.73 1211.06 L1801.14 1211.06 L1800.55 1211.06 L1799.97 1211.06 L1799.38 1211.06 L1798.79 1211.06 L1798.21 1211.06 L1797.62 1211.06 L1797.03 1211.06 L1796.45 1211.06 L1795.86 1211.06 L1795.27 1211.06 L1794.69 1211.06 L1794.1 1211.06 L1793.52 1211.06 L1792.93 1211.06 L1792.34 1211.06 L1791.76 1211.06 L1791.17 1211.06 L1790.58 1211.06 L1790 1211.06 L1789.41 1211.06 L1788.82 1211.06 L1788.24 1211.06 L1787.65 1211.06 L1787.06 1211.06 L1786.48 1211.06 L1785.89 1211.06 L1785.31 1211.06 L1784.72 1211.06 L1784.13 1211.06 L1783.55 1211.06 L1782.96 1211.06 L1782.37 1211.06 L1781.79 1211.06 L1781.2 1211.06 L1780.61 1211.06 L1780.03 1211.06 L1779.44 1211.06 L1778.86 1211.06 L1778.27 1211.06 L1777.68 1211.06 L1777.1 1211.06 L1776.51 1211.06 L1775.92 1211.06 L1775.34 1211.06 L1774.75 1211.06 L1774.16 1211.06 L1773.58 1211.06 L1772.99 1211.06 L1772.4 1211.06 L1771.82 1211.06 L1771.23 1211.06 L1770.65 1211.06 L1770.06 1211.06 L1769.47 1211.06 L1768.89 1211.06 L1768.3 1211.06 L1767.71 1211.06 L1767.13 1211.06 L1766.54 1211.06 L1765.95 1211.06 L1765.37 1211.06 L1764.78 1211.06 L1764.19 1211.06 L1763.61 1211.06 L1763.02 1211.06 L1762.44 1211.06 L1761.85 1211.06 L1761.26 1211.06 L1760.68 1211.06 L1760.09 1211.06 L1759.5 1211.06 L1758.92 1211.06 L1758.33 1211.06 L1757.74 1211.06 L1757.16 1211.06 L1756.57 1211.06 L1755.99 1211.06 L1755.4 1211.06 L1754.81 1211.06 L1754.23 1211.06 L1753.64 1211.06 L1753.05 1211.06 L1752.47 1211.06 L1751.88 1211.06 L1751.29 1211.06 L1750.71 1211.06 L1750.12 1211.06 L1749.53 1211.06 L1748.95 1211.06 L1748.36 1211.06 L1747.78 1211.06 L1747.19 1211.06 L1746.6 1211.06 L1746.02 1211.06 L1745.43 1211.06 L1744.84 1211.06 L1744.26 1211.06 L1743.67 1211.06 L1743.08 1211.06 L1742.5 1211.06 L1741.91 1211.06 L1741.32 1211.06 L1740.74 1211.06 L1740.15 1211.06 L1739.57 1211.06 L1738.98 1211.06 L1738.39 1211.06 L1737.81 1211.06 L1737.22 1211.06 L1736.63 1211.06 L1736.05 1211.06 L1735.46 1211.06 L1734.87 1211.06 L1734.29 1211.06 L1733.7 1211.06 L1733.11 1211.06 L1732.53 1211.06 L1731.94 1211.06 L1731.36 1211.06 L1730.77 1211.06 L1730.18 1211.06 L1729.6 1211.06 L1729.01 1211.06 L1728.42 1211.06 L1727.84 1211.06 L1727.25 1211.06 L1726.66 1211.06 L1726.08 1211.06 L1725.49 1211.06 L1724.91 1211.06 L1724.32 1211.06 L1723.73 1211.06 L1723.15 1211.06 L1722.56 1211.06 L1721.97 1211.06 L1721.39 1211.06 L1720.8 1211.06 L1720.21 1211.06 L1719.63 1211.06 L1719.04 1211.06 L1718.45 1211.06 L1717.87 1211.06 L1717.28 1211.06 L1716.7 1211.06 L1716.11 1211.06 L1715.52 1211.06 L1714.94 1211.06 L1714.35 1211.06 L1713.76 1211.06 L1713.18 1211.06 L1712.59 1211.06 L1712 1211.06 L1711.42 1211.06 L1710.83 1211.06 L1710.24 1211.06 L1709.66 1211.06 L1709.07 1211.06 L1708.49 1211.06 L1707.9 1211.06 L1707.31 1211.06 L1706.73 1211.06 L1706.14 1211.06 L1705.55 1211.06 L1704.97 1211.06 L1704.38 1211.06 L1703.79 1211.06 L1703.21 1211.06 L1702.62 1211.06 L1702.04 1211.06 L1701.45 1211.06 L1700.86 1211.06 L1700.28 1211.06 L1699.69 1211.06 L1699.1 1211.06 L1698.52 1211.06 L1697.93 1211.06 L1697.34 1211.06 L1696.76 1211.06 L1696.17 1211.06 L1695.58 1211.06 L1695 1211.06 L1694.41 1211.06 L1693.83 1211.06 L1693.24 1211.06 L1692.65 1211.06 L1692.07 1211.06 L1691.48 1211.06 L1690.89 1211.06 L1690.31 1211.06 L1689.72 1211.06 L1689.13 1211.06 L1688.55 1211.06 L1687.96 1211.06 L1687.37 1211.06 L1686.79 1211.06 L1686.2 1211.06 L1685.62 1211.06 L1685.03 1211.06 L1684.44 1211.06 L1683.86 1211.06 L1683.27 1211.06 L1682.68 1211.06 L1682.1 1211.06 L1681.51 1211.06 L1680.92 1211.06 L1680.34 1211.06 L1679.75 1211.06 L1679.17 1211.06 L1678.58 1211.06 L1677.99 1211.06 L1677.41 1211.06 L1676.82 1211.06 L1676.23 1211.06 L1675.65 1211.06 L1675.06 1211.06 L1674.47 1211.06 L1673.89 1211.06 L1673.3 1211.06 L1672.71 1211.06 L1672.13 1211.06 L1671.54 1211.06 L1670.96 1211.06 L1670.37 1211.06 L1669.78 1211.06 L1669.2 1211.06 L1668.61 1211.06 L1668.02 1211.06 L1667.44 1211.06 L1666.85 1211.06 L1666.26 1211.06 L1665.68 1211.06 L1665.09 1211.06 L1664.5 1211.06 L1663.92 1211.06 L1663.33 1211.06 L1662.75 1211.06 L1662.16 1211.06 L1661.57 1211.06 L1660.99 1211.06 L1660.4 1211.06 L1659.81 1211.06 L1659.23 1211.06 L1658.64 1211.06 L1658.05 1211.06 L1657.47 1211.06 L1656.88 1211.06 L1656.29 1211.06 L1655.71 1211.06 L1655.12 1211.06 L1654.54 1211.06 L1653.95 1211.06 L1653.36 1211.06 L1652.78 1211.06 L1652.19 1211.06 L1651.6 1211.06 L1651.02 1211.06 L1650.43 1211.06 L1649.84 1211.06 L1649.26 1211.06 L1648.67 1211.06 L1648.09 1211.06 L1647.5 1211.06 L1646.91 1211.06 L1646.33 1211.06 L1645.74 1211.06 L1645.15 1211.06 L1644.57 1211.06 L1643.98 1211.06 L1643.39 1211.06 L1642.81 1211.06 L1642.22 1211.06 L1641.63 1211.06 L1641.05 1211.06 L1640.46 1211.06 L1639.88 1211.06 L1639.29 1211.06 L1638.7 1211.06 L1638.12 1211.06 L1637.53 1211.06 L1636.94 1211.06 L1636.36 1211.06 L1635.77 1211.06 L1635.18 1211.06 L1634.6 1211.06 L1634.01 1211.06 L1633.42 1211.06 L1632.84 1211.06 L1632.25 1211.06 L1631.67 1211.06 L1631.08 1211.06 L1630.49 1211.06 L1629.91 1211.06 L1629.32 1211.06 L1628.73 1211.06 L1628.15 1211.06 L1627.56 1211.06 L1626.97 1211.06 L1626.39 1211.06 L1625.8 1211.06 L1625.22 1211.06 L1624.63 1211.06 L1624.04 1211.06 L1623.46 1211.06 L1622.87 1211.06 L1622.28 1211.06 L1621.7 1211.06 L1621.11 1211.06 L1620.52 1211.06 L1619.94 1211.06 L1619.35 1211.06 L1618.76 1211.06 L1618.18 1211.06 L1617.59 1211.06 L1617.01 1211.06 L1616.42 1211.06 L1615.83 1211.06 L1615.25 1211.06 L1614.66 1211.06 L1614.07 1211.06 L1613.49 1211.06 L1612.9 1211.06 L1612.31 1211.06 L1611.73 1211.06 L1611.14 1211.06 L1610.55 1211.06 L1609.97 1211.06 L1609.38 1211.06 L1608.8 1211.06 L1608.21 1211.06 L1607.62 1211.06 L1607.04 1211.06 L1606.45 1211.06 L1605.86 1211.06 L1605.28 1211.06 L1604.69 1211.06 L1604.1 1211.06 L1603.52 1211.06 L1602.93 1211.06 L1602.34 1211.06 L1601.76 1211.06 L1601.17 1211.06 L1600.59 1211.06 L1600 1211.06 L1599.41 1211.06 L1598.83 1211.06 L1598.24 1211.06 L1597.65 1211.06 L1597.07 1211.06 L1596.48 1211.06 L1595.89 1211.06 L1595.31 1211.06 L1594.72 1211.06 L1594.14 1211.06 L1593.55 1211.06 L1592.96 1211.06 L1592.38 1211.06 L1591.79 1211.06 L1591.2 1211.06 L1590.62 1211.06 L1590.03 1211.06 L1589.44 1211.06 L1588.86 1211.06 L1588.27 1211.06 L1587.68 1211.06 L1587.1 1211.06 L1586.51 1211.06 L1585.93 1211.06 L1585.34 1211.06 L1584.75 1211.06 L1584.17 1211.06 L1583.58 1211.06 L1582.99 1211.06 L1582.41 1211.06 L1581.82 1211.06 L1581.23 1211.06 L1580.65 1211.06 L1580.06 1211.06 L1579.47 1211.06 L1578.89 1211.06 L1578.3 1211.06 L1577.72 1211.06 L1577.13 1211.06 L1576.54 1211.06 L1575.96 1211.06 L1575.37 1211.06 L1574.78 1211.06 L1574.2 1211.06 L1573.61 1211.06 L1573.02 1211.06 L1572.44 1211.06 L1571.85 1211.06 L1571.27 1211.06 L1570.68 1211.06 L1570.09 1211.06 L1569.51 1211.06 L1568.92 1211.06 L1568.33 1211.06 L1567.75 1211.06 L1567.16 1211.06 L1566.57 1211.06 L1565.99 1211.06 L1565.4 1211.06 L1564.81 1211.06 L1564.23 1211.06 L1563.64 1211.06 L1563.06 1211.06 L1562.47 1211.06 L1561.88 1211.06 L1561.3 1211.06 L1560.71 1211.06 L1560.12 1211.06 L1559.54 1211.06 L1558.95 1211.06 L1558.36 1211.06 L1557.78 1211.06 L1557.19 1211.06 L1556.6 1211.06 L1556.02 1211.06 L1555.43 1211.06 L1554.85 1211.06 L1554.26 1211.06 L1553.67 1211.06 L1553.09 1211.06 L1552.5 1211.06 L1551.91 1211.06 L1551.33 1211.06 L1550.74 1211.06 L1550.15 1211.06 L1549.57 1211.06 L1548.98 1211.06 L1548.4 1211.06 L1547.81 1211.06 L1547.22 1211.06 L1546.64 1211.06 L1546.05 1211.06 L1545.46 1211.06 L1544.88 1211.06 L1544.29 1211.06 L1543.7 1211.06 L1543.12 1211.06 L1542.53 1211.06 L1541.94 1211.06 L1541.36 1211.06 L1540.77 1211.06 L1540.19 1211.06 L1539.6 1211.06 L1539.01 1211.06 L1538.43 1211.06 L1537.84 1211.06 L1537.25 1211.06 L1536.67 1211.06 L1536.08 1211.06 L1535.49 1211.06 L1534.91 1211.06 L1534.32 1211.06 L1533.73 1211.06 L1533.15 1211.06 L1532.56 1211.06 L1531.98 1211.06 L1531.39 1211.06 L1530.8 1211.06 L1530.22 1211.06 L1529.63 1211.06 L1529.04 1211.06 L1528.46 1211.06 L1527.87 1211.06 L1527.28 1211.06 L1526.7 1211.06 L1526.11 1211.06 L1525.52 1211.06 L1524.94 1211.06 L1524.35 1211.06 L1523.77 1211.06 L1523.18 1211.06 L1522.59 1211.06 L1522.01 1211.06 L1521.42 1211.06 L1520.83 1211.06 L1520.25 1211.06 L1519.66 1211.06 L1519.07 1211.06 L1518.49 1211.06 L1517.9 1211.06 L1517.32 1211.06 L1516.73 1211.06 L1516.14 1211.06 L1515.56 1211.06 L1514.97 1211.06 L1514.38 1211.06 L1513.8 1211.06 L1513.21 1211.06 L1512.62 1211.06 L1512.04 1211.06 L1511.45 1211.06 L1510.86 1211.06 L1510.28 1211.06 L1509.69 1211.06 L1509.11 1211.06 L1508.52 1211.06 L1507.93 1211.06 L1507.35 1211.06 L1506.76 1211.06 L1506.17 1211.06 L1505.59 1211.06 L1505 1211.06 L1504.41 1211.06 L1503.83 1211.06 L1503.24 1211.06 L1502.65 1211.06 L1502.07 1211.06 L1501.48 1211.06 L1500.9 1211.06 L1500.31 1211.06 L1499.72 1211.06 L1499.14 1211.06 L1498.55 1211.06 L1497.96 1211.06 L1497.38 1211.06 L1496.79 1211.06 L1496.2 1211.06 L1495.62 1211.06 L1495.03 1211.06 L1494.45 1211.06 L1493.86 1211.06 L1493.27 1211.06 L1492.69 1211.06 L1492.1 1211.06 L1491.51 1211.06 L1490.93 1211.06 L1490.34 1211.06 L1489.75 1211.06 L1489.17 1211.06 L1488.58 1211.06 L1487.99 1211.06 L1487.41 1211.06 L1486.82 1211.06 L1486.24 1211.06 L1485.65 1211.06 L1485.06 1211.06 L1484.48 1211.06 L1483.89 1211.06 L1483.3 1211.06 L1482.72 1211.06 L1482.13 1211.06 L1481.54 1211.06 L1480.96 1211.06 L1480.37 1211.06 L1479.78 1211.06 L1479.2 1211.06 L1478.61 1211.06 L1478.03 1211.06 L1477.44 1211.06 L1476.85 1211.06 L1476.27 1211.06 L1475.68 1211.06 L1475.09 1211.06 L1474.51 1211.06 L1473.92 1211.06 L1473.33 1211.06 L1472.75 1211.06 L1472.16 1211.06 L1471.57 1211.06 L1470.99 1211.06 L1470.4 1211.06 L1469.82 1211.06 L1469.23 1211.06 L1468.64 1211.06 L1468.06 1211.06 L1467.47 1211.06 L1466.88 1211.06 L1466.3 1211.06 L1465.71 1211.06 L1465.12 1211.06 L1464.54 1211.06 L1463.95 1211.06 L1463.37 1211.06 L1462.78 1211.06 L1462.19 1211.06 L1461.61 1211.06 L1461.02 1211.06 L1460.43 1211.06 L1459.85 1211.06 L1459.26 1211.06 L1458.67 1211.06 L1458.09 1211.06 L1457.5 1211.06 L1456.91 1211.06 L1456.33 1211.06 L1455.74 1211.06 L1455.16 1211.06 L1454.57 1211.06 L1453.98 1211.06 L1453.4 1211.06 L1452.81 1211.06 L1452.22 1211.06 L1451.64 1211.06 L1451.05 1211.06 L1450.46 1211.06 L1449.88 1211.06 L1449.29 1211.06 L1448.7 1211.06 L1448.12 1211.06 L1447.53 1211.06 L1446.95 1211.06 L1446.36 1211.06 L1445.77 1211.06 L1445.19 1211.06 L1444.6 1211.06 L1444.01 1211.06 L1443.43 1211.06 L1442.84 1211.06 L1442.25 1211.06 L1441.67 1211.06 L1441.08 1211.06 L1440.5 1211.06 L1439.91 1211.06 L1439.32 1211.06 L1438.74 1211.06 L1438.15 1211.06 L1437.56 1211.06 L1436.98 1211.06 L1436.39 1211.06 L1435.8 1211.06 L1435.22 1211.06 L1434.63 1211.06 L1434.04 1211.06 L1433.46 1211.06 L1432.87 1211.06 L1432.29 1211.06 L1431.7 1211.06 L1431.11 1211.06 L1430.53 1211.06 L1429.94 1211.06 L1429.35 1211.06 L1428.77 1211.06 L1428.18 1211.06 L1427.59 1211.06 L1427.01 1211.06 L1426.42 1211.06 L1425.83 1211.06 L1425.25 1211.06 L1424.66 1211.06 L1424.08 1211.06 L1423.49 1211.06 L1422.9 1211.06 L1422.32 1211.06 L1421.73 1211.06 L1421.14 1211.06 L1420.56 1211.06 L1419.97 1211.06 L1419.38 1211.06 L1418.8 1211.06 L1418.21 1211.06 L1417.63 1211.06 L1417.04 1211.06 L1416.45 1211.06 L1415.87 1211.06 L1415.28 1211.06 L1414.69 1211.06 L1414.11 1211.06 L1413.52 1211.06 L1412.93 1211.06 L1412.35 1211.06 L1411.76 1211.06 L1411.17 1211.06 L1410.59 1211.06 L1410 1211.06 L1409.42 1211.06 L1408.83 1211.06 L1408.24 1211.06 L1407.66 1211.06 L1407.07 1211.06 L1406.48 1211.06 L1405.9 1211.06 L1405.31 1211.06 L1404.72 1211.06 L1404.14 1211.06 L1403.55 1211.06 L1402.96 1211.06 L1402.38 1211.06 L1401.79 1211.06 L1401.21 1211.06 L1400.62 1211.06 L1400.03 1211.06 L1399.45 1211.06 L1398.86 1211.06 L1398.27 1211.06 L1397.69 1211.06 L1397.1 1211.06 L1396.51 1211.06 L1395.93 1211.06 L1395.34 1211.06 L1394.75 1211.06 L1394.17 1211.06 L1393.58 1211.06 L1393 1211.06 L1392.41 1211.06 L1391.82 1211.06 L1391.24 1211.06 L1390.65 1211.06 L1390.06 1211.06 L1389.48 1211.06 L1388.89 1211.06 L1388.3 1211.06 L1387.72 1211.06 L1387.13 1211.06 L1386.55 1211.06 L1385.96 1211.06 L1385.37 1211.06 L1384.79 1211.06 L1384.2 1211.06 L1383.61 1211.06 L1383.03 1211.06 L1382.44 1211.06 L1381.85 1211.06 L1381.27 1211.06 L1380.68 1211.06 L1380.09 1211.06 L1379.51 1211.06 L1378.92 1211.06 L1378.34 1211.06 L1377.75 1211.06 L1377.16 1211.06 L1376.58 1211.06 L1375.99 1211.06 L1375.4 1211.06 L1374.82 1211.06 L1374.23 1211.06 L1373.64 1211.06 L1373.06 1211.06 L1372.47 1211.06 L1371.88 1211.06 L1371.3 1211.06 L1370.71 1211.06 L1370.13 1211.06 L1369.54 1211.06 L1368.95 1211.06 L1368.37 1211.06 L1367.78 1211.06 L1367.19 1211.06 L1366.61 1211.06 L1366.02 1211.06 L1365.43 1211.06 L1364.85 1211.06 L1364.26 1211.06 L1363.68 1211.06 L1363.09 1211.06 L1362.5 1211.06 L1361.92 1211.06 L1361.33 1211.06 L1360.74 1211.06 L1360.16 1211.06 L1359.57 1211.06 L1358.98 1211.06 L1358.4 1211.06 L1357.81 1211.06 L1357.22 1211.06 L1356.64 1211.06 L1356.05 1211.06 L1355.47 1211.06 L1354.88 1211.06 L1354.29 1211.06 L1353.71 1211.06 L1353.12 1211.06 L1352.53 1211.06 L1351.95 1211.06 L1351.36 1211.06 L1350.77 1211.06 L1350.19 1211.06 L1349.6 1211.06 L1349.01 1211.06 L1348.43 1211.06 L1347.84 1211.06 L1347.26 1211.06 L1346.67 1211.06 L1346.08 1211.06 L1345.5 1211.06 L1344.91 1211.06 L1344.32 1211.06 L1343.74 1211.06 L1343.15 1211.06 L1342.56 1211.06 L1341.98 1211.06 L1341.39 1211.06 L1340.8 1211.06 L1340.22 1211.06 L1339.63 1211.06 L1339.05 1211.06 L1338.46 1211.06 L1337.87 1211.06 L1337.29 1211.06 L1336.7 1211.06 L1336.11 1211.06 L1335.53 1211.06 L1334.94 1211.06 L1334.35 1211.06 L1333.77 1211.06 L1333.18 1211.06 L1332.6 1211.06 L1332.01 1211.06 L1331.42 1211.06 L1330.84 1211.06 L1330.25 1211.06 L1329.66 1211.06 L1329.08 1211.06 L1328.49 1211.06 L1327.9 1211.06 L1327.32 1211.06 L1326.73 1211.06 L1326.14 1211.06 L1325.56 1211.06 L1324.97 1211.06 L1324.39 1211.06 L1323.8 1211.06 L1323.21 1211.06 L1322.63 1211.06 L1322.04 1211.06 L1321.45 1211.06 L1320.87 1211.06 L1320.28 1211.06 L1319.69 1211.06 L1319.11 1211.06 L1318.52 1211.06 L1317.93 1211.06 L1317.35 1211.06 L1316.76 1211.06 L1316.18 1211.06 L1315.59 1211.06 L1315 1211.06 L1314.42 1211.06 L1313.83 1211.06 L1313.24 1211.06 L1312.66 1211.06 L1312.07 1211.06 L1311.48 1211.06 L1310.9 1211.06 L1310.31 1211.06 L1309.73 1211.06 L1309.14 1211.06 L1308.55 1211.06 L1307.97 1211.06 L1307.38 1211.06 L1306.79 1211.06 L1306.21 1211.06 L1305.62 1211.06 L1305.03 1211.06 L1304.45 1211.06 L1303.86 1211.06 L1303.27 1211.06 L1302.69 1211.06 L1302.1 1211.06 L1301.52 1211.06 L1300.93 1211.06 L1300.34 1211.06 L1299.76 1211.06 L1299.17 1211.06 L1298.58 1211.06 L1298 1211.06 L1297.41 1211.06 L1296.82 1211.06 L1296.24 1211.06 L1295.65 1211.06 L1295.06 1211.06 L1294.48 1211.06 L1293.89 1211.06 L1293.31 1211.06 L1292.72 1211.06 L1292.13 1211.06 L1291.55 1211.06 L1290.96 1211.06 L1290.37 1211.06 L1289.79 1211.06 L1289.2 1211.06 L1288.61 1211.06 L1288.03 1211.06 L1287.44 1211.06 L1286.86 1211.06 L1286.27 1211.06 L1285.68 1211.06 L1285.1 1211.06 L1284.51 1211.06 L1283.92 1211.06 L1283.34 1211.06 L1282.75 1211.06 L1282.16 1211.06 L1281.58 1211.06 L1280.99 1211.06 L1280.4 1211.06 L1279.82 1211.06 L1279.23 1211.06 L1278.65 1211.06 L1278.06 1211.06 L1277.47 1211.06 L1276.89 1211.06 L1276.3 1211.06 L1275.71 1211.06 L1275.13 1211.06 L1274.54 1211.06 L1273.95 1211.06 L1273.37 1211.06 L1272.78 1211.06 L1272.19 1211.06 L1271.61 1211.06 L1271.02 1211.06 L1270.44 1211.06 L1269.85 1211.06 L1269.26 1211.06 L1268.68 1211.06 L1268.09 1211.06 L1267.5 1211.06 L1266.92 1211.06 L1266.33 1211.06 L1265.74 1211.06 L1265.16 1211.06 L1264.57 1211.06 L1263.98 1211.06 L1263.4 1211.06 L1262.81 1211.06 L1262.23 1211.06 L1261.64 1211.06 L1261.05 1211.06 L1260.47 1211.06 L1259.88 1211.06 L1259.29 1211.06 L1258.71 1211.06 L1258.12 1211.06 L1257.53 1211.06 L1256.95 1211.06 L1256.36 1211.06 L1255.78 1211.06 L1255.19 1211.06 L1254.6 1211.06 L1254.02 1211.06 L1253.43 1211.06 L1252.84 1211.06 L1252.26 1211.06 L1251.67 1211.06 L1251.08 1211.06 L1250.5 1211.06 L1249.91 1211.06 L1249.32 1211.06 L1248.74 1211.06 L1248.15 1211.06 L1247.57 1211.06 L1246.98 1211.06 L1246.39 1211.06 L1245.81 1211.06 L1245.22 1211.06 L1244.63 1211.06 L1244.05 1211.06 L1243.46 1211.06 L1242.87 1211.06 L1242.29 1211.06 L1241.7 1211.06 L1241.11 1211.06 L1240.53 1211.06 L1239.94 1211.06 L1239.36 1211.06 L1238.77 1211.06 L1238.18 1211.06 L1237.6 1211.06 L1237.01 1211.06 L1236.42 1211.06 L1235.84 1211.06 L1235.25 1211.06 L1234.66 1211.06 L1234.08 1211.06 L1233.49 1211.06 L1232.91 1211.06 L1232.32 1211.06 L1231.73 1211.06 L1231.15 1211.06 L1230.56 1211.06 L1229.97 1211.06 L1229.39 1211.06 L1228.8 1211.06 L1228.21 1211.06 L1227.63 1211.06 L1227.04 1211.06 L1226.45 1211.06 L1225.87 1211.06 L1225.28 1211.06 L1224.7 1211.06 L1224.11 1211.06 L1223.52 1211.06 L1222.94 1211.06 L1222.35 1211.06 L1221.76 1211.06 L1221.18 1211.06 L1220.59 1211.06 L1220 1211.06 L1219.42 1211.06 L1218.83 1211.06 L1218.24 1211.06 L1217.66 1211.06 L1217.07 1211.06 L1216.49 1211.06 L1215.9 1211.06 L1215.31 1211.06 L1214.73 1211.06 L1214.14 1211.06 L1213.55 1211.06 L1212.97 1211.06 L1212.38 1211.06 L1211.79 1211.06 L1211.21 1211.06 L1210.62 1211.06 L1210.03 1211.06 L1209.45 1211.06 L1208.86 1211.06 L1208.28 1211.06 L1207.69 1211.06 L1207.1 1211.06 L1206.52 1211.06 L1205.93 1211.06 L1205.34 1211.06 L1204.76 1211.06 L1204.17 1211.06 L1203.58 1211.06 L1203 1211.06 L1202.41 1211.06 L1201.83 1211.06 L1201.24 1211.06 L1200.65 1211.06 L1200.07 1211.06 L1199.48 1211.06 L1198.89 1211.06 L1198.31 1211.06 L1197.72 1211.06 L1197.13 1211.06 L1196.55 1211.06 L1195.96 1211.06 L1195.37 1211.06 L1194.79 1211.06 L1194.2 1211.06 L1193.62 1211.06 L1193.03 1211.06 L1192.44 1211.06 L1191.86 1211.06 L1191.27 1211.06 L1190.68 1211.06 L1190.1 1211.06 L1189.51 1211.06 L1188.92 1211.06 L1188.34 1211.06 L1187.75 1211.06 L1187.16 1211.06 L1186.58 1211.06 L1185.99 1211.06 L1185.41 1211.06 L1184.82 1211.06 L1184.23 1211.06 L1183.65 1211.06 L1183.06 1211.06 L1182.47 1211.06 L1181.89 1211.06 L1181.3 1211.06 L1180.71 1211.06 L1180.13 1211.06 L1179.54 1211.06 L1178.96 1211.06 L1178.37 1211.06 L1177.78 1211.06 L1177.2 1211.06 L1176.61 1211.06 L1176.02 1211.06 L1175.44 1211.06 L1174.85 1211.06 L1174.26 1211.06 L1173.68 1211.06 L1173.09 1211.06 L1172.5 1211.06 L1171.92 1211.06 L1171.33 1211.06 L1170.75 1211.06 L1170.16 1211.06 L1169.57 1211.06 L1168.99 1211.06 L1168.4 1211.06 L1167.81 1211.06 L1167.23 1211.06 L1166.64 1211.06 L1166.05 1211.06 L1165.47 1211.06 L1164.88 1211.06 L1164.29 1211.06 L1163.71 1211.06 L1163.12 1211.06 L1162.54 1211.06 L1161.95 1211.06 L1161.36 1211.06 L1160.78 1211.06 L1160.19 1211.06 L1159.6 1211.06 L1159.02 1211.06 L1158.43 1211.06 L1157.84 1211.06 L1157.26 1211.06 L1156.67 1211.06 L1156.09 1211.06 L1155.5 1211.06 L1154.91 1211.06 L1154.33 1211.06 L1153.74 1211.06 L1153.15 1211.06 L1152.57 1211.06 L1151.98 1211.06 L1151.39 1211.06 L1150.81 1211.06 L1150.22 1211.06 L1149.63 1211.06 L1149.05 1211.06 L1148.46 1211.06 L1147.88 1211.06 L1147.29 1211.06 L1146.7 1211.06 L1146.12 1211.06 L1145.53 1211.06 L1144.94 1211.06 L1144.36 1211.06 L1143.77 1211.06 L1143.18 1211.06 L1142.6 1211.06 L1142.01 1211.06 L1141.42 1211.06 L1140.84 1211.06 L1140.25 1211.06 L1139.67 1211.06 L1139.08 1211.06 L1138.49 1211.06 L1137.91 1211.06 L1137.32 1211.06 L1136.73 1211.06 L1136.15 1211.06 L1135.56 1211.06 L1134.97 1211.06 L1134.39 1211.06 L1133.8 1211.06 L1133.21 1211.06 L1132.63 1211.06 L1132.04 1211.06 L1131.46 1211.06 L1130.87 1211.06 L1130.28 1211.06 L1129.7 1211.06 L1129.11 1211.06 L1128.52 1211.06 L1127.94 1211.06 L1127.35 1211.06 L1126.76 1211.06 L1126.18 1211.06 L1125.59 1211.06 L1125.01 1211.06 L1124.42 1211.06 L1123.83 1211.06 L1123.25 1211.06 L1122.66 1211.06 L1122.07 1211.06 L1121.49 1211.06 L1120.9 1211.06 L1120.31 1211.06 L1119.73 1211.06 L1119.14 1211.06 L1118.55 1211.06 L1117.97 1211.06 L1117.38 1211.06 L1116.8 1211.06 L1116.21 1211.06 L1115.62 1211.06 L1115.04 1211.06 L1114.45 1211.06 L1113.86 1211.06 L1113.28 1211.06 L1112.69 1211.06 L1112.1 1211.06 L1111.52 1211.06 L1110.93 1211.06 L1110.34 1211.06 L1109.76 1211.06 L1109.17 1211.06 L1108.59 1211.06 L1108 1211.06 L1107.41 1211.06 L1106.83 1211.06 L1106.24 1211.06 L1105.65 1211.06 L1105.07 1211.06 L1104.48 1211.06 L1103.89 1211.06 L1103.31 1211.06 L1102.72 1211.06 L1102.14 1211.06 L1101.55 1211.06 L1100.96 1211.06 L1100.38 1211.06 L1099.79 1211.06 L1099.2 1211.06 L1098.62 1211.06 L1098.03 1211.06 L1097.44 1211.06 L1096.86 1211.06 L1096.27 1211.06 L1095.68 1211.06 L1095.1 1211.06 L1094.51 1211.06 L1093.93 1211.06 L1093.34 1211.06 L1092.75 1211.06 L1092.17 1211.06 L1091.58 1211.06 L1090.99 1211.06 L1090.41 1211.06 L1089.82 1211.06 L1089.23 1211.06 L1088.65 1211.06 L1088.06 1211.06 L1087.47 1211.06 L1086.89 1211.06 L1086.3 1211.06 L1085.72 1211.06 L1085.13 1211.06 L1084.54 1211.06 L1083.96 1211.06 L1083.37 1211.06 L1082.78 1211.06 L1082.2 1211.06 L1081.61 1211.06 L1081.02 1211.06 L1080.44 1211.06 L1079.85 1211.06 L1079.26 1211.06 L1078.68 1211.06 L1078.09 1211.06 L1077.51 1211.06 L1076.92 1211.06 L1076.33 1211.06 L1075.75 1211.06 L1075.16 1211.06 L1074.57 1211.06 L1073.99 1211.06 L1073.4 1211.06 L1072.81 1211.06 L1072.23 1211.06 L1071.64 1211.06 L1071.06 1211.06 L1070.47 1211.06 L1069.88 1211.06 L1069.3 1211.06 L1068.71 1211.06 L1068.12 1211.06 L1067.54 1211.06 L1066.95 1211.06 L1066.36 1211.06 L1065.78 1211.06 L1065.19 1211.06 L1064.6 1211.06 L1064.02 1211.06 L1063.43 1211.06 L1062.85 1211.06 L1062.26 1211.06 L1061.67 1211.06 L1061.09 1211.06 L1060.5 1211.06 L1059.91 1211.06 L1059.33 1211.06 L1058.74 1211.06 L1058.15 1211.06 L1057.57 1211.06 L1056.98 1211.06 L1056.39 1211.06 L1055.81 1211.06 L1055.22 1211.06 L1054.64 1211.06 L1054.05 1211.06 L1053.46 1211.06 L1052.88 1211.06 L1052.29 1211.06 L1051.7 1211.06 L1051.12 1211.06 L1050.53 1211.06 L1049.94 1211.06 L1049.36 1211.06 L1048.77 1211.06 L1048.19 1211.06 L1047.6 1211.06 L1047.01 1211.06 L1046.43 1211.06 L1045.84 1211.06 L1045.25 1211.06 L1044.67 1211.06 L1044.08 1211.06 L1043.49 1211.06 L1042.91 1211.06 L1042.32 1211.06 L1041.73 1211.06 L1041.15 1211.06 L1040.56 1211.06 L1039.98 1211.06 L1039.39 1211.06 L1038.8 1211.06 L1038.22 1211.06 L1037.63 1211.06 L1037.04 1211.06 L1036.46 1211.06 L1035.87 1211.06 L1035.28 1211.06 L1034.7 1211.06 L1034.11 1211.06 L1033.52 1211.06 L1032.94 1211.06 L1032.35 1211.06 L1031.77 1211.06 L1031.18 1211.06 L1030.59 1211.06 L1030.01 1211.06 L1029.42 1211.06 L1028.83 1211.06 L1028.25 1211.06 L1027.66 1211.06 L1027.07 1211.06 L1026.49 1211.06 L1025.9 1211.06 L1025.32 1211.06 L1024.73 1211.06 L1024.14 1211.06 L1023.56 1211.06 L1022.97 1211.06 L1022.38 1211.06 L1021.8 1211.06 L1021.21 1211.06 L1020.62 1211.06 L1020.04 1211.06 L1019.45 1211.06 L1018.86 1211.06 L1018.28 1211.06 L1017.69 1211.06 L1017.11 1211.06 L1016.52 1211.06 L1015.93 1211.06 L1015.35 1211.06 L1014.76 1211.06 L1014.17 1211.06 L1013.59 1211.06 L1013 1211.06 L1012.41 1211.06 L1011.83 1211.06 L1011.24 1211.06 L1010.65 1211.06 L1010.07 1211.06 L1009.48 1211.06 L1008.9 1211.06 L1008.31 1211.06 L1007.72 1211.06 L1007.14 1211.06 L1006.55 1211.06 L1005.96 1211.06 L1005.38 1211.06 L1004.79 1211.06 L1004.2 1211.06 L1003.62 1211.06 L1003.03 1211.06 L1002.44 1211.06 L1001.86 1211.06 L1001.27 1211.06 L1000.69 1211.06 L1000.1 1211.06 L999.513 1211.06 L998.926 1211.06 L998.34 1211.06 L997.754 1211.06 L997.167 1211.06 L996.581 1211.06 L995.994 1211.06 L995.408 1211.06 L994.822 1211.06 L994.235 1211.06 L993.649 1211.06 L993.062 1211.06 L992.476 1211.06 L991.889 1211.06 L991.303 1211.06 L990.717 1211.06 L990.13 1211.06 L989.544 1211.06 L988.957 1211.06 L988.371 1211.06 L987.785 1211.06 L987.198 1211.06 L986.612 1211.06 L986.025 1211.06  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.16 986.612,1211.16 987.198,1211.16 987.785,1211.16 988.371,1211.16 988.957,1211.16 989.544,1211.16 990.13,1211.16 990.717,1211.16 991.303,1211.16 991.889,1211.16 992.476,1211.16 993.062,1211.16 993.649,1211.16 994.235,1211.16 994.822,1211.16 995.408,1211.16 995.994,1211.16 996.581,1211.16 997.167,1211.16 997.754,1211.16 998.34,1211.16 998.926,1211.16 999.513,1211.16 1000.1,1211.16 1000.69,1211.16 1001.27,1211.16 1001.86,1211.16 1002.44,1211.16 1003.03,1211.16 1003.62,1211.16 1004.2,1211.16 1004.79,1211.16 1005.38,1211.16 1005.96,1211.16 1006.55,1211.16 1007.14,1211.16 1007.72,1211.16 1008.31,1211.16 1008.9,1211.16 1009.48,1211.16 1010.07,1211.16 1010.65,1211.16 1011.24,1211.16 1011.83,1211.16 1012.41,1211.16 1013,1211.16 1013.59,1211.16 1014.17,1211.16 1014.76,1211.16 1015.35,1211.16 1015.93,1211.16 1016.52,1211.16 1017.11,1211.16 1017.69,1211.16 1018.28,1211.16 1018.86,1211.16 1019.45,1211.16 1020.04,1211.16 1020.62,1211.16 1021.21,1211.16 1021.8,1211.16 1022.38,1211.16 1022.97,1211.16 1023.56,1211.16 1024.14,1211.16 1024.73,1211.16 1025.32,1211.16 1025.9,1211.16 1026.49,1211.16 1027.07,1211.16 1027.66,1211.16 1028.25,1211.16 1028.83,1211.16 1029.42,1211.16 1030.01,1211.16 1030.59,1211.16 1031.18,1211.16 1031.77,1211.16 1032.35,1211.16 1032.94,1211.16 1033.52,1211.16 1034.11,1211.16 1034.7,1211.16 1035.28,1211.16 1035.87,1211.16 1036.46,1211.16 1037.04,1211.16 1037.63,1211.16 1038.22,1211.16 1038.8,1211.16 1039.39,1211.16 1039.98,1211.16 1040.56,1211.16 1041.15,1211.16 1041.73,1211.16 1042.32,1211.16 1042.91,1211.16 1043.49,1211.16 1044.08,1211.16 1044.67,1211.16 1045.25,1211.16 1045.84,1211.16 1046.43,1211.16 1047.01,1211.16 1047.6,1211.16 1048.19,1211.16 1048.77,1211.16 1049.36,1211.16 1049.94,1211.16 1050.53,1211.16 1051.12,1211.16 1051.7,1211.16 1052.29,1211.16 1052.88,1211.16 1053.46,1211.16 1054.05,1211.16 1054.64,1211.16 1055.22,1211.16 1055.81,1211.16 1056.39,1211.16 1056.98,1211.16 1057.57,1211.16 1058.15,1211.16 1058.74,1211.16 1059.33,1211.16 1059.91,1211.16 1060.5,1211.16 1061.09,1211.16 1061.67,1211.16 1062.26,1211.16 1062.85,1211.16 1063.43,1211.16 1064.02,1211.16 1064.6,1211.16 1065.19,1211.16 1065.78,1211.16 1066.36,1211.16 1066.95,1211.16 1067.54,1211.16 1068.12,1211.16 1068.71,1211.16 1069.3,1211.16 1069.88,1211.16 1070.47,1211.16 1071.06,1211.16 1071.64,1211.16 1072.23,1211.16 1072.81,1211.16 1073.4,1211.16 1073.99,1211.16 1074.57,1211.16 1075.16,1211.16 1075.75,1211.16 1076.33,1211.16 1076.92,1211.16 1077.51,1211.16 1078.09,1211.16 1078.68,1211.16 1079.26,1211.16 1079.85,1211.16 1080.44,1211.16 1081.02,1211.16 1081.61,1211.16 1082.2,1211.16 1082.78,1211.16 1083.37,1211.16 1083.96,1211.16 1084.54,1211.16 1085.13,1211.16 1085.72,1211.16 1086.3,1211.16 1086.89,1211.16 1087.47,1211.16 1088.06,1211.16 1088.65,1211.16 1089.23,1211.16 1089.82,1211.16 1090.41,1211.16 1090.99,1211.16 1091.58,1211.16 1092.17,1211.16 1092.75,1211.16 1093.34,1211.16 1093.93,1211.16 1094.51,1211.16 1095.1,1211.16 1095.68,1211.16 1096.27,1211.16 1096.86,1211.16 1097.44,1211.16 1098.03,1211.16 1098.62,1211.16 1099.2,1211.16 1099.79,1211.16 1100.38,1211.16 1100.96,1211.16 1101.55,1211.16 1102.14,1211.16 1102.72,1211.16 1103.31,1211.16 1103.89,1211.16 1104.48,1211.16 1105.07,1211.16 1105.65,1211.16 1106.24,1211.16 1106.83,1211.16 1107.41,1211.16 1108,1211.16 1108.59,1211.16 1109.17,1211.16 1109.76,1211.16 1110.34,1211.16 1110.93,1211.16 1111.52,1211.16 1112.1,1211.16 1112.69,1211.16 1113.28,1211.16 1113.86,1211.16 1114.45,1211.16 1115.04,1211.16 1115.62,1211.16 1116.21,1211.16 1116.8,1211.16 1117.38,1211.16 1117.97,1211.16 1118.55,1211.16 1119.14,1211.16 1119.73,1211.16 1120.31,1211.16 1120.9,1211.16 1121.49,1211.16 1122.07,1211.16 1122.66,1211.16 1123.25,1211.16 1123.83,1211.16 1124.42,1211.16 1125.01,1211.16 1125.59,1211.16 1126.18,1211.16 1126.76,1211.16 1127.35,1211.16 1127.94,1211.16 1128.52,1211.16 1129.11,1211.16 1129.7,1211.16 1130.28,1211.16 1130.87,1211.16 1131.46,1211.16 1132.04,1211.16 1132.63,1211.16 1133.21,1211.16 1133.8,1211.16 1134.39,1211.16 1134.97,1211.16 1135.56,1211.16 1136.15,1211.16 1136.73,1211.16 1137.32,1211.16 1137.91,1211.16 1138.49,1211.16 1139.08,1211.16 1139.67,1211.16 1140.25,1211.16 1140.84,1211.16 1141.42,1211.16 1142.01,1211.16 1142.6,1211.16 1143.18,1211.16 1143.77,1211.16 1144.36,1211.16 1144.94,1211.16 1145.53,1211.16 1146.12,1211.16 1146.7,1211.16 1147.29,1211.16 1147.88,1211.16 1148.46,1211.16 1149.05,1211.16 1149.63,1211.16 1150.22,1211.16 1150.81,1211.16 1151.39,1211.16 1151.98,1211.16 1152.57,1211.16 1153.15,1211.16 1153.74,1211.16 1154.33,1211.16 1154.91,1211.16 1155.5,1211.16 1156.09,1211.16 1156.67,1211.16 1157.26,1211.16 1157.84,1211.16 1158.43,1211.16 1159.02,1211.16 1159.6,1211.16 1160.19,1211.16 1160.78,1211.16 1161.36,1211.16 1161.95,1211.16 1162.54,1211.16 1163.12,1211.16 1163.71,1211.16 1164.29,1211.16 1164.88,1211.16 1165.47,1211.16 1166.05,1211.16 1166.64,1211.16 1167.23,1211.16 1167.81,1211.16 1168.4,1211.16 1168.99,1211.16 1169.57,1211.16 1170.16,1211.16 1170.75,1211.16 1171.33,1211.16 1171.92,1211.16 1172.5,1211.16 1173.09,1211.16 1173.68,1211.16 1174.26,1211.16 1174.85,1211.16 1175.44,1211.16 1176.02,1211.16 1176.61,1211.16 1177.2,1211.16 1177.78,1211.16 1178.37,1211.16 1178.96,1211.16 1179.54,1211.16 1180.13,1211.16 1180.71,1211.16 1181.3,1211.16 1181.89,1211.16 1182.47,1211.16 1183.06,1211.16 1183.65,1211.16 1184.23,1211.16 1184.82,1211.16 1185.41,1211.16 1185.99,1211.16 1186.58,1211.16 1187.16,1211.16 1187.75,1211.16 1188.34,1211.16 1188.92,1211.16 1189.51,1211.16 1190.1,1211.16 1190.68,1211.16 1191.27,1211.16 1191.86,1211.16 1192.44,1211.16 1193.03,1211.16 1193.62,1211.16 1194.2,1211.16 1194.79,1211.16 1195.37,1211.16 1195.96,1211.16 1196.55,1211.16 1197.13,1211.16 1197.72,1211.16 1198.31,1211.16 1198.89,1211.16 1199.48,1211.16 1200.07,1211.16 1200.65,1211.16 1201.24,1211.16 1201.83,1211.16 1202.41,1211.16 1203,1211.16 1203.58,1211.16 1204.17,1211.16 1204.76,1211.16 1205.34,1211.16 1205.93,1211.16 1206.52,1211.16 1207.1,1211.16 1207.69,1211.16 1208.28,1211.16 1208.86,1211.16 1209.45,1211.16 1210.03,1211.16 1210.62,1211.16 1211.21,1211.16 1211.79,1211.16 1212.38,1211.16 1212.97,1211.16 1213.55,1211.16 1214.14,1211.16 1214.73,1211.16 1215.31,1211.16 1215.9,1211.16 1216.49,1211.16 1217.07,1211.16 1217.66,1211.16 1218.24,1211.16 1218.83,1211.16 1219.42,1211.16 1220,1211.16 1220.59,1211.16 1221.18,1211.16 1221.76,1211.16 1222.35,1211.16 1222.94,1211.16 1223.52,1211.16 1224.11,1211.16 1224.7,1211.16 1225.28,1211.16 1225.87,1211.16 1226.45,1211.16 1227.04,1211.16 1227.63,1211.16 1228.21,1211.16 1228.8,1211.16 1229.39,1211.16 1229.97,1211.16 1230.56,1211.16 1231.15,1211.16 1231.73,1211.16 1232.32,1211.16 1232.91,1211.16 1233.49,1211.16 1234.08,1211.16 1234.66,1211.16 1235.25,1211.16 1235.84,1211.16 1236.42,1211.16 1237.01,1211.16 1237.6,1211.16 1238.18,1211.16 1238.77,1211.16 1239.36,1211.16 1239.94,1211.16 1240.53,1211.16 1241.11,1211.16 1241.7,1211.16 1242.29,1211.16 1242.87,1211.16 1243.46,1211.16 1244.05,1211.16 1244.63,1211.16 1245.22,1211.16 1245.81,1211.16 1246.39,1211.16 1246.98,1211.16 1247.57,1211.16 1248.15,1211.16 1248.74,1211.16 1249.32,1211.16 1249.91,1211.16 1250.5,1211.16 1251.08,1211.16 1251.67,1211.16 1252.26,1211.16 1252.84,1211.16 1253.43,1211.16 1254.02,1211.16 1254.6,1211.16 1255.19,1211.16 1255.78,1211.16 1256.36,1211.16 1256.95,1211.16 1257.53,1211.16 1258.12,1211.16 1258.71,1211.16 1259.29,1211.16 1259.88,1211.16 1260.47,1211.16 1261.05,1211.16 1261.64,1211.16 1262.23,1211.16 1262.81,1211.16 1263.4,1211.16 1263.98,1211.16 1264.57,1211.16 1265.16,1211.16 1265.74,1211.16 1266.33,1211.16 1266.92,1211.16 1267.5,1211.16 1268.09,1211.16 1268.68,1211.16 1269.26,1211.16 1269.85,1211.16 1270.44,1211.16 1271.02,1211.16 1271.61,1211.16 1272.19,1211.16 1272.78,1211.16 1273.37,1211.16 1273.95,1211.16 1274.54,1211.16 1275.13,1211.16 1275.71,1211.16 1276.3,1211.16 1276.89,1211.16 1277.47,1211.16 1278.06,1211.16 1278.65,1211.16 1279.23,1211.16 1279.82,1211.16 1280.4,1211.16 1280.99,1211.16 1281.58,1211.16 1282.16,1211.16 1282.75,1211.16 1283.34,1211.16 1283.92,1211.16 1284.51,1211.16 1285.1,1211.16 1285.68,1211.16 1286.27,1211.16 1286.86,1211.16 1287.44,1211.16 1288.03,1211.16 1288.61,1211.16 1289.2,1211.16 1289.79,1211.16 1290.37,1211.16 1290.96,1211.16 1291.55,1211.16 1292.13,1211.16 1292.72,1211.16 1293.31,1211.16 1293.89,1211.16 1294.48,1211.16 1295.06,1211.16 1295.65,1211.16 1296.24,1211.16 1296.82,1211.16 1297.41,1211.16 1298,1211.16 1298.58,1211.16 1299.17,1211.16 1299.76,1211.16 1300.34,1211.16 1300.93,1211.16 1301.52,1211.16 1302.1,1211.16 1302.69,1211.16 1303.27,1211.16 1303.86,1211.16 1304.45,1211.16 1305.03,1211.16 1305.62,1211.16 1306.21,1211.16 1306.79,1211.16 1307.38,1211.16 1307.97,1211.16 1308.55,1211.16 1309.14,1211.16 1309.73,1211.16 1310.31,1211.16 1310.9,1211.16 1311.48,1211.16 1312.07,1211.16 1312.66,1211.16 1313.24,1211.16 1313.83,1211.16 1314.42,1211.16 1315,1211.16 1315.59,1211.16 1316.18,1211.16 1316.76,1211.16 1317.35,1211.16 1317.93,1211.16 1318.52,1211.16 1319.11,1211.16 1319.69,1211.16 1320.28,1211.16 1320.87,1211.16 1321.45,1211.16 1322.04,1211.16 1322.63,1211.16 1323.21,1211.16 1323.8,1211.16 1324.39,1211.16 1324.97,1211.16 1325.56,1211.16 1326.14,1211.16 1326.73,1211.16 1327.32,1211.16 1327.9,1211.16 1328.49,1211.16 1329.08,1211.16 1329.66,1211.16 1330.25,1211.16 1330.84,1211.16 1331.42,1211.16 1332.01,1211.16 1332.6,1211.16 1333.18,1211.16 1333.77,1211.16 1334.35,1211.16 1334.94,1211.16 1335.53,1211.16 1336.11,1211.16 1336.7,1211.16 1337.29,1211.16 1337.87,1211.16 1338.46,1211.16 1339.05,1211.16 1339.63,1211.16 1340.22,1211.16 1340.8,1211.16 1341.39,1211.16 1341.98,1211.16 1342.56,1211.16 1343.15,1211.16 1343.74,1211.16 1344.32,1211.16 1344.91,1211.16 1345.5,1211.16 1346.08,1211.16 1346.67,1211.16 1347.26,1211.16 1347.84,1211.16 1348.43,1211.16 1349.01,1211.16 1349.6,1211.16 1350.19,1211.16 1350.77,1211.16 1351.36,1211.16 1351.95,1211.16 1352.53,1211.16 1353.12,1211.16 1353.71,1211.16 1354.29,1211.16 1354.88,1211.16 1355.47,1211.16 1356.05,1211.16 1356.64,1211.16 1357.22,1211.16 1357.81,1211.16 1358.4,1211.16 1358.98,1211.16 1359.57,1211.16 1360.16,1211.16 1360.74,1211.16 1361.33,1211.16 1361.92,1211.16 1362.5,1211.16 1363.09,1211.16 1363.68,1211.16 1364.26,1211.16 1364.85,1211.16 1365.43,1211.16 1366.02,1211.16 1366.61,1211.16 1367.19,1211.16 1367.78,1211.16 1368.37,1211.16 1368.95,1211.16 1369.54,1211.16 1370.13,1211.16 1370.71,1211.16 1371.3,1211.16 1371.88,1211.16 1372.47,1211.16 1373.06,1211.16 1373.64,1211.16 1374.23,1211.16 1374.82,1211.16 1375.4,1211.16 1375.99,1211.16 1376.58,1211.16 1377.16,1211.16 1377.75,1211.16 1378.34,1211.16 1378.92,1211.16 1379.51,1211.16 1380.09,1211.16 1380.68,1211.16 1381.27,1211.16 1381.85,1211.16 1382.44,1211.16 1383.03,1211.16 1383.61,1211.16 1384.2,1211.16 1384.79,1211.16 1385.37,1211.16 1385.96,1211.16 1386.55,1211.16 1387.13,1211.16 1387.72,1211.16 1388.3,1211.16 1388.89,1211.16 1389.48,1211.16 1390.06,1211.16 1390.65,1211.16 1391.24,1211.16 1391.82,1211.16 1392.41,1211.16 1393,1211.16 1393.58,1211.16 1394.17,1211.16 1394.75,1211.16 1395.34,1211.16 1395.93,1211.16 1396.51,1211.16 1397.1,1211.16 1397.69,1211.16 1398.27,1211.16 1398.86,1211.16 1399.45,1211.16 1400.03,1211.16 1400.62,1211.16 1401.21,1211.16 1401.79,1211.16 1402.38,1211.16 1402.96,1211.16 1403.55,1211.16 1404.14,1211.16 1404.72,1211.16 1405.31,1211.16 1405.9,1211.16 1406.48,1211.16 1407.07,1211.16 1407.66,1211.16 1408.24,1211.16 1408.83,1211.16 1409.42,1211.16 1410,1211.16 1410.59,1211.16 1411.17,1211.16 1411.76,1211.16 1412.35,1211.16 1412.93,1211.16 1413.52,1211.16 1414.11,1211.16 1414.69,1211.16 1415.28,1211.16 1415.87,1211.16 1416.45,1211.16 1417.04,1211.16 1417.63,1211.16 1418.21,1211.16 1418.8,1211.16 1419.38,1211.16 1419.97,1211.16 1420.56,1211.16 1421.14,1211.16 1421.73,1211.16 1422.32,1211.16 1422.9,1211.16 1423.49,1211.16 1424.08,1211.16 1424.66,1211.16 1425.25,1211.16 1425.83,1211.16 1426.42,1211.16 1427.01,1211.16 1427.59,1211.16 1428.18,1211.16 1428.77,1211.16 1429.35,1211.16 1429.94,1211.16 1430.53,1211.16 1431.11,1211.16 1431.7,1211.16 1432.29,1211.16 1432.87,1211.16 1433.46,1211.16 1434.04,1211.16 1434.63,1211.16 1435.22,1211.16 1435.8,1211.16 1436.39,1211.16 1436.98,1211.16 1437.56,1211.16 1438.15,1211.16 1438.74,1211.16 1439.32,1211.16 1439.91,1211.16 1440.5,1211.16 1441.08,1211.16 1441.67,1211.16 1442.25,1211.16 1442.84,1211.16 1443.43,1211.16 1444.01,1211.16 1444.6,1211.16 1445.19,1211.16 1445.77,1211.16 1446.36,1211.16 1446.95,1211.16 1447.53,1211.16 1448.12,1211.16 1448.7,1211.16 1449.29,1211.16 1449.88,1211.16 1450.46,1211.16 1451.05,1211.16 1451.64,1211.16 1452.22,1211.16 1452.81,1211.16 1453.4,1211.16 1453.98,1211.16 1454.57,1211.16 1455.16,1211.16 1455.74,1211.16 1456.33,1211.16 1456.91,1211.16 1457.5,1211.16 1458.09,1211.16 1458.67,1211.16 1459.26,1211.16 1459.85,1211.16 1460.43,1211.16 1461.02,1211.16 1461.61,1211.16 1462.19,1211.16 1462.78,1211.16 1463.37,1211.16 1463.95,1211.16 1464.54,1211.16 1465.12,1211.16 1465.71,1211.16 1466.3,1211.16 1466.88,1211.16 1467.47,1211.16 1468.06,1211.16 1468.64,1211.16 1469.23,1211.16 1469.82,1211.16 1470.4,1211.16 1470.99,1211.16 1471.57,1211.16 1472.16,1211.16 1472.75,1211.16 1473.33,1211.16 1473.92,1211.16 1474.51,1211.16 1475.09,1211.16 1475.68,1211.16 1476.27,1211.16 1476.85,1211.16 1477.44,1211.16 1478.03,1211.16 1478.61,1211.16 1479.2,1211.16 1479.78,1211.16 1480.37,1211.16 1480.96,1211.16 1481.54,1211.16 1482.13,1211.16 1482.72,1211.16 1483.3,1211.16 1483.89,1211.16 1484.48,1211.16 1485.06,1211.16 1485.65,1211.16 1486.24,1211.16 1486.82,1211.16 1487.41,1211.16 1487.99,1211.16 1488.58,1211.16 1489.17,1211.16 1489.75,1211.16 1490.34,1211.16 1490.93,1211.16 1491.51,1211.16 1492.1,1211.16 1492.69,1211.16 1493.27,1211.16 1493.86,1211.16 1494.45,1211.16 1495.03,1211.16 1495.62,1211.16 1496.2,1211.16 1496.79,1211.16 1497.38,1211.16 1497.96,1211.16 1498.55,1211.16 1499.14,1211.16 1499.72,1211.16 1500.31,1211.16 1500.9,1211.16 1501.48,1211.16 1502.07,1211.16 1502.65,1211.16 1503.24,1211.16 1503.83,1211.16 1504.41,1211.16 1505,1211.16 1505.59,1211.16 1506.17,1211.16 1506.76,1211.16 1507.35,1211.16 1507.93,1211.16 1508.52,1211.16 1509.11,1211.16 1509.69,1211.16 1510.28,1211.16 1510.86,1211.16 1511.45,1211.16 1512.04,1211.16 1512.62,1211.16 1513.21,1211.16 1513.8,1211.16 1514.38,1211.16 1514.97,1211.16 1515.56,1211.16 1516.14,1211.16 1516.73,1211.16 1517.32,1211.16 1517.9,1211.16 1518.49,1211.16 1519.07,1211.16 1519.66,1211.16 1520.25,1211.16 1520.83,1211.16 1521.42,1211.16 1522.01,1211.16 1522.59,1211.16 1523.18,1211.16 1523.77,1211.16 1524.35,1211.16 1524.94,1211.16 1525.52,1211.16 1526.11,1211.16 1526.7,1211.16 1527.28,1211.16 1527.87,1211.16 1528.46,1211.16 1529.04,1211.16 1529.63,1211.16 1530.22,1211.16 1530.8,1211.16 1531.39,1211.16 1531.98,1211.16 1532.56,1211.16 1533.15,1211.16 1533.73,1211.16 1534.32,1211.16 1534.91,1211.16 1535.49,1211.16 1536.08,1211.16 1536.67,1211.16 1537.25,1211.16 1537.84,1211.16 1538.43,1211.16 1539.01,1211.16 1539.6,1211.16 1540.19,1211.16 1540.77,1211.16 1541.36,1211.16 1541.94,1211.16 1542.53,1211.16 1543.12,1211.16 1543.7,1211.16 1544.29,1211.16 1544.88,1211.16 1545.46,1211.16 1546.05,1211.16 1546.64,1211.16 1547.22,1211.16 1547.81,1211.16 1548.4,1211.16 1548.98,1211.16 1549.57,1211.16 1550.15,1211.16 1550.74,1211.16 1551.33,1211.16 1551.91,1211.16 1552.5,1211.16 1553.09,1211.16 1553.67,1211.16 1554.26,1211.16 1554.85,1211.16 1555.43,1211.16 1556.02,1211.16 1556.6,1211.16 1557.19,1211.16 1557.78,1211.16 1558.36,1211.16 1558.95,1211.16 1559.54,1211.16 1560.12,1211.16 1560.71,1211.16 1561.3,1211.16 1561.88,1211.16 1562.47,1211.16 1563.06,1211.16 1563.64,1211.16 1564.23,1211.16 1564.81,1211.16 1565.4,1211.16 1565.99,1211.16 1566.57,1211.16 1567.16,1211.16 1567.75,1211.16 1568.33,1211.16 1568.92,1211.16 1569.51,1211.16 1570.09,1211.16 1570.68,1211.16 1571.27,1211.16 1571.85,1211.16 1572.44,1211.16 1573.02,1211.16 1573.61,1211.16 1574.2,1211.16 1574.78,1211.16 1575.37,1211.16 1575.96,1211.16 1576.54,1211.16 1577.13,1211.16 1577.72,1211.16 1578.3,1211.16 1578.89,1211.16 1579.47,1211.16 1580.06,1211.16 1580.65,1211.16 1581.23,1211.16 1581.82,1211.16 1582.41,1211.16 1582.99,1211.16 1583.58,1211.16 1584.17,1211.16 1584.75,1211.16 1585.34,1211.16 1585.93,1211.16 1586.51,1211.16 1587.1,1211.16 1587.68,1211.16 1588.27,1211.16 1588.86,1211.16 1589.44,1211.16 1590.03,1211.16 1590.62,1211.16 1591.2,1211.16 1591.79,1211.16 1592.38,1211.16 1592.96,1211.16 1593.55,1211.16 1594.14,1211.16 1594.72,1211.16 1595.31,1211.16 1595.89,1211.16 1596.48,1211.16 1597.07,1211.16 1597.65,1211.16 1598.24,1211.16 1598.83,1211.16 1599.41,1211.16 1600,1211.16 1600.59,1211.16 1601.17,1211.16 1601.76,1211.16 1602.34,1211.16 1602.93,1211.16 1603.52,1211.16 1604.1,1211.16 1604.69,1211.16 1605.28,1211.16 1605.86,1211.16 1606.45,1211.16 1607.04,1211.16 1607.62,1211.16 1608.21,1211.16 1608.8,1211.16 1609.38,1211.16 1609.97,1211.16 1610.55,1211.16 1611.14,1211.16 1611.73,1211.16 1612.31,1211.16 1612.9,1211.16 1613.49,1211.16 1614.07,1211.16 1614.66,1211.16 1615.25,1211.16 1615.83,1211.16 1616.42,1211.16 1617.01,1211.16 1617.59,1211.16 1618.18,1211.16 1618.76,1211.16 1619.35,1211.16 1619.94,1211.16 1620.52,1211.16 1621.11,1211.16 1621.7,1211.16 1622.28,1211.16 1622.87,1211.16 1623.46,1211.16 1624.04,1211.16 1624.63,1211.16 1625.22,1211.16 1625.8,1211.16 1626.39,1211.16 1626.97,1211.16 1627.56,1211.16 1628.15,1211.16 1628.73,1211.16 1629.32,1211.16 1629.91,1211.16 1630.49,1211.16 1631.08,1211.16 1631.67,1211.16 1632.25,1211.16 1632.84,1211.16 1633.42,1211.16 1634.01,1211.16 1634.6,1211.16 1635.18,1211.16 1635.77,1211.16 1636.36,1211.16 1636.94,1211.16 1637.53,1211.16 1638.12,1211.16 1638.7,1211.16 1639.29,1211.16 1639.88,1211.16 1640.46,1211.16 1641.05,1211.16 1641.63,1211.16 1642.22,1211.16 1642.81,1211.16 1643.39,1211.16 1643.98,1211.16 1644.57,1211.16 1645.15,1211.16 1645.74,1211.16 1646.33,1211.16 1646.91,1211.16 1647.5,1211.16 1648.09,1211.16 1648.67,1211.16 1649.26,1211.16 1649.84,1211.16 1650.43,1211.16 1651.02,1211.16 1651.6,1211.16 1652.19,1211.16 1652.78,1211.16 1653.36,1211.16 1653.95,1211.16 1654.54,1211.16 1655.12,1211.16 1655.71,1211.16 1656.29,1211.16 1656.88,1211.16 1657.47,1211.16 1658.05,1211.16 1658.64,1211.16 1659.23,1211.16 1659.81,1211.16 1660.4,1211.16 1660.99,1211.16 1661.57,1211.16 1662.16,1211.16 1662.75,1211.16 1663.33,1211.16 1663.92,1211.16 1664.5,1211.16 1665.09,1211.16 1665.68,1211.16 1666.26,1211.16 1666.85,1211.16 1667.44,1211.16 1668.02,1211.16 1668.61,1211.16 1669.2,1211.16 1669.78,1211.16 1670.37,1211.16 1670.96,1211.16 1671.54,1211.16 1672.13,1211.16 1672.71,1211.16 1673.3,1211.16 1673.89,1211.16 1674.47,1211.16 1675.06,1211.16 1675.65,1211.16 1676.23,1211.16 1676.82,1211.16 1677.41,1211.16 1677.99,1211.16 1678.58,1211.16 1679.17,1211.16 1679.75,1211.16 1680.34,1211.16 1680.92,1211.16 1681.51,1211.16 1682.1,1211.16 1682.68,1211.16 1683.27,1211.16 1683.86,1211.16 1684.44,1211.16 1685.03,1211.16 1685.62,1211.16 1686.2,1211.16 1686.79,1211.16 1687.37,1211.16 1687.96,1211.16 1688.55,1211.16 1689.13,1211.16 1689.72,1211.16 1690.31,1211.16 1690.89,1211.16 1691.48,1211.16 1692.07,1211.16 1692.65,1211.16 1693.24,1211.16 1693.83,1211.16 1694.41,1211.16 1695,1211.16 1695.58,1211.16 1696.17,1211.16 1696.76,1211.16 1697.34,1211.16 1697.93,1211.16 1698.52,1211.16 1699.1,1211.16 1699.69,1211.16 1700.28,1211.16 1700.86,1211.16 1701.45,1211.16 1702.04,1211.16 1702.62,1211.16 1703.21,1211.16 1703.79,1211.16 1704.38,1211.16 1704.97,1211.16 1705.55,1211.16 1706.14,1211.16 1706.73,1211.16 1707.31,1211.16 1707.9,1211.16 1708.49,1211.16 1709.07,1211.16 1709.66,1211.16 1710.24,1211.16 1710.83,1211.16 1711.42,1211.16 1712,1211.16 1712.59,1211.16 1713.18,1211.16 1713.76,1211.16 1714.35,1211.16 1714.94,1211.16 1715.52,1211.16 1716.11,1211.16 1716.7,1211.16 1717.28,1211.16 1717.87,1211.16 1718.45,1211.16 1719.04,1211.16 1719.63,1211.16 1720.21,1211.16 1720.8,1211.16 1721.39,1211.16 1721.97,1211.16 1722.56,1211.16 1723.15,1211.16 1723.73,1211.16 1724.32,1211.16 1724.91,1211.16 1725.49,1211.16 1726.08,1211.16 1726.66,1211.16 1727.25,1211.16 1727.84,1211.16 1728.42,1211.16 1729.01,1211.16 1729.6,1211.16 1730.18,1211.16 1730.77,1211.16 1731.36,1211.16 1731.94,1211.16 1732.53,1211.16 1733.11,1211.16 1733.7,1211.16 1734.29,1211.16 1734.87,1211.16 1735.46,1211.16 1736.05,1211.16 1736.63,1211.16 1737.22,1211.16 1737.81,1211.16 1738.39,1211.16 1738.98,1211.16 1739.57,1211.16 1740.15,1211.16 1740.74,1211.16 1741.32,1211.16 1741.91,1211.16 1742.5,1211.16 1743.08,1211.16 1743.67,1211.16 1744.26,1211.16 1744.84,1211.16 1745.43,1211.16 1746.02,1211.16 1746.6,1211.16 1747.19,1211.16 1747.78,1211.16 1748.36,1211.16 1748.95,1211.16 1749.53,1211.16 1750.12,1211.16 1750.71,1211.16 1751.29,1211.16 1751.88,1211.16 1752.47,1211.16 1753.05,1211.16 1753.64,1211.16 1754.23,1211.16 1754.81,1211.16 1755.4,1211.16 1755.99,1211.16 1756.57,1211.16 1757.16,1211.16 1757.74,1211.16 1758.33,1211.16 1758.92,1211.16 1759.5,1211.16 1760.09,1211.16 1760.68,1211.16 1761.26,1211.16 1761.85,1211.16 1762.44,1211.16 1763.02,1211.16 1763.61,1211.16 1764.19,1211.16 1764.78,1211.16 1765.37,1211.16 1765.95,1211.16 1766.54,1211.16 1767.13,1211.16 1767.71,1211.16 1768.3,1211.16 1768.89,1211.16 1769.47,1211.16 1770.06,1211.16 1770.65,1211.16 1771.23,1211.16 1771.82,1211.16 1772.4,1211.16 1772.99,1211.16 1773.58,1211.16 1774.16,1211.16 1774.75,1211.16 1775.34,1211.16 1775.92,1211.16 1776.51,1211.16 1777.1,1211.16 1777.68,1211.16 1778.27,1211.16 1778.86,1211.16 1779.44,1211.16 1780.03,1211.16 1780.61,1211.16 1781.2,1211.16 1781.79,1211.16 1782.37,1211.16 1782.96,1211.16 1783.55,1211.16 1784.13,1211.16 1784.72,1211.16 1785.31,1211.16 1785.89,1211.16 1786.48,1211.16 1787.06,1211.16 1787.65,1211.16 1788.24,1211.16 1788.82,1211.16 1789.41,1211.16 1790,1211.16 1790.58,1211.16 1791.17,1211.16 1791.76,1211.16 1792.34,1211.16 1792.93,1211.16 1793.52,1211.16 1794.1,1211.16 1794.69,1211.16 1795.27,1211.16 1795.86,1211.16 1796.45,1211.16 1797.03,1211.16 1797.62,1211.16 1798.21,1211.16 1798.79,1211.16 1799.38,1211.16 1799.97,1211.16 1800.55,1211.16 1801.14,1211.16 1801.73,1211.16 1802.31,1211.16 1802.9,1211.16 1803.48,1211.16 1804.07,1211.16 1804.66,1211.16 1805.24,1211.16 1805.83,1211.16 1806.42,1211.16 1807,1211.16 1807.59,1211.16 1808.18,1211.16 1808.76,1211.16 1809.35,1211.16 1809.94,1211.16 1810.52,1211.16 1811.11,1211.16 1811.69,1211.16 1812.28,1211.16 1812.87,1211.16 1813.45,1211.16 1814.04,1211.16 1814.63,1211.16 1815.21,1211.16 1815.8,1211.16 1816.39,1211.16 1816.97,1211.16 1817.56,1211.16 1818.14,1211.16 1818.73,1211.16 1819.32,1211.16 1819.9,1211.16 1820.49,1211.16 1821.08,1211.16 1821.66,1211.16 1822.25,1211.16 1822.84,1211.16 1823.42,1211.16 1824.01,1211.16 1824.6,1211.16 1825.18,1211.16 1825.77,1211.16 1826.35,1211.16 1826.94,1211.16 1827.53,1211.16 1828.11,1211.16 1828.7,1211.16 1829.29,1211.16 1829.87,1211.16 1830.46,1211.16 1831.05,1211.16 1831.63,1211.16 1832.22,1211.16 1832.81,1211.16 1833.39,1211.16 1833.98,1211.16 1834.56,1211.16 1835.15,1211.16 1835.74,1211.16 1836.32,1211.16 1836.91,1211.16 1837.5,1211.16 1838.08,1211.16 1838.67,1211.16 1839.26,1211.16 1839.84,1211.16 1840.43,1211.16 1841.01,1211.16 1841.6,1211.16 1842.19,1211.16 1842.77,1211.16 1843.36,1211.16 1843.95,1211.16 1844.53,1211.16 1845.12,1211.16 1845.71,1211.16 1846.29,1211.16 1846.88,1211.16 1847.47,1211.16 1848.05,1211.16 1848.64,1211.16 1849.22,1211.16 1849.81,1211.16 1850.4,1211.16 1850.98,1211.16 1851.57,1211.16 1852.16,1211.16 1852.74,1211.16 1853.33,1211.16 1853.92,1211.16 1854.5,1211.16 1855.09,1211.16 1855.68,1211.16 1856.26,1211.16 1856.85,1211.16 1857.43,1211.16 1858.02,1211.16 1858.61,1211.16 1859.19,1211.16 1859.78,1211.16 1860.37,1211.16 1860.95,1211.16 1861.54,1211.16 1862.13,1211.16 1862.71,1211.16 1863.3,1211.16 1863.88,1211.16 1864.47,1211.16 1865.06,1211.16 1865.64,1211.16 1866.23,1211.16 1866.82,1211.16 1867.4,1211.16 1867.99,1211.16 1868.58,1211.16 1869.16,1211.16 1869.75,1211.16 1870.34,1211.16 1870.92,1211.16 1871.51,1211.16 1872.09,1211.16 1872.68,1211.16 1873.27,1211.16 1873.85,1211.16 1874.44,1211.16 1875.03,1211.16 1875.61,1211.16 1876.2,1211.16 1876.79,1211.16 1877.37,1211.16 1877.96,1211.16 1878.55,1211.16 1879.13,1211.16 1879.72,1211.16 1880.3,1211.16 1880.89,1211.16 1881.48,1211.16 1882.06,1211.16 1882.65,1211.16 1883.24,1211.16 1883.82,1211.16 1884.41,1211.16 1885,1211.16 1885.58,1211.16 1886.17,1211.16 1886.76,1211.16 1887.34,1211.16 1887.93,1211.16 1888.51,1211.16 1889.1,1211.16 1889.69,1211.16 1890.27,1211.16 1890.86,1211.16 1891.45,1211.16 1892.03,1211.16 1892.62,1211.16 1893.21,1211.16 1893.79,1211.16 1894.38,1211.16 1894.96,1211.16 1895.55,1211.16 1896.14,1211.16 1896.72,1211.16 1897.31,1211.16 1897.9,1211.16 1898.48,1211.16 1899.07,1211.16 1899.66,1211.16 1900.24,1211.16 1900.83,1211.16 1901.42,1211.16 1902,1211.16 1902.59,1211.16 1903.17,1211.16 1903.76,1211.16 1904.35,1211.16 1904.93,1211.16 1905.52,1211.16 1906.11,1211.16 1906.69,1211.16 1907.28,1211.16 1907.87,1211.16 1908.45,1211.16 1909.04,1211.16 1909.63,1211.16 1910.21,1211.16 1910.8,1211.16 1911.38,1211.16 1911.97,1211.16 1912.56,1211.16 1913.14,1211.16 1913.73,1211.16 1914.32,1211.16 1914.9,1211.16 1915.49,1211.16 1916.08,1211.16 1916.66,1211.16 1917.25,1211.16 1917.83,1211.16 1918.42,1211.16 1919.01,1211.16 1919.59,1211.16 1920.18,1211.16 1920.77,1211.16 1921.35,1211.16 1921.94,1211.16 1922.53,1211.16 1923.11,1211.16 1923.7,1211.16 1924.29,1211.16 1924.87,1211.16 1925.46,1211.16 1926.04,1211.16 1926.63,1211.16 1927.22,1211.16 1927.8,1211.16 1928.39,1211.16 1928.98,1211.16 1929.56,1211.16 1930.15,1211.16 1930.74,1211.16 1931.32,1211.16 1931.91,1211.16 1932.5,1211.16 1933.08,1211.16 1933.67,1211.16 1934.25,1211.16 1934.84,1211.16 1935.43,1211.16 1936.01,1211.16 1936.6,1211.16 1937.19,1211.16 1937.77,1211.16 1938.36,1211.16 1938.95,1211.16 1939.53,1211.16 1940.12,1211.16 1940.71,1211.16 1941.29,1211.16 1941.88,1211.16 1942.46,1211.16 1943.05,1211.16 1943.64,1211.16 1944.22,1211.16 1944.81,1211.16 1945.4,1211.16 1945.98,1211.16 1946.57,1211.16 1947.16,1211.16 1947.74,1211.16 1948.33,1211.16 1948.91,1211.16 1949.5,1211.16 1950.09,1211.16 1950.67,1211.16 1951.26,1211.16 1951.85,1211.16 1952.43,1211.16 1953.02,1211.16 1953.61,1211.16 1954.19,1211.16 1954.78,1211.16 1955.37,1211.16 1955.95,1211.16 1956.54,1211.16 1957.12,1211.16 1957.71,1211.16 1958.3,1211.16 1958.88,1211.16 1959.47,1211.16 1960.06,1211.16 1960.64,1211.16 1961.23,1211.16 1961.82,1211.16 1962.4,1211.16 1962.99,1211.16 1963.58,1211.16 1964.16,1211.16 1964.75,1211.16 1965.33,1211.16 1965.92,1211.16 1966.51,1211.16 1967.09,1211.16 1967.68,1211.16 1968.27,1211.16 1968.85,1211.16 1969.44,1211.16 1970.03,1211.16 1970.61,1211.16 1971.2,1211.16 1971.78,1211.16 1972.37,1211.16 1972.96,1211.16 1973.54,1211.16 1974.13,1211.16 1974.72,1211.16 1975.3,1211.16 1975.89,1211.16 1976.48,1211.16 1977.06,1211.16 1977.65,1211.16 1978.24,1211.16 1978.82,1211.16 1979.41,1211.16 1979.99,1211.16 1980.58,1211.16 1981.17,1211.16 1981.75,1211.16 1982.34,1211.16 1982.93,1211.16 1983.51,1211.16 1984.1,1211.16 1984.69,1211.16 1985.27,1211.16 1985.86,1211.16 1986.45,1211.16 1987.03,1211.16 1987.62,1211.16 1988.2,1211.16 1988.79,1211.16 1989.38,1211.16 1989.96,1211.16 1990.55,1211.16 1991.14,1211.16 1991.72,1211.16 1992.31,1211.16 1992.9,1211.16 1993.48,1211.16 1994.07,1211.16 1994.65,1211.16 1995.24,1211.16 1995.83,1211.16 1996.41,1211.16 1997,1211.16 1997.59,1211.16 1998.17,1211.16 1998.76,1211.16 1999.35,1211.16 1999.93,1211.16 2000.52,1211.16 2001.11,1211.16 2001.69,1211.16 2002.28,1211.16 2002.86,1211.16 2003.45,1211.16 2004.04,1211.16 2004.62,1211.16 2005.21,1211.16 2005.8,1211.16 2006.38,1211.16 2006.97,1211.16 2007.56,1211.16 2008.14,1211.16 2008.73,1211.16 2009.32,1211.16 2009.9,1211.16 2010.49,1211.16 2011.07,1211.16 2011.66,1211.16 2012.25,1211.16 2012.83,1211.16 2013.42,1211.16 2014.01,1211.16 2014.59,1211.16 2015.18,1211.16 2015.77,1211.16 2016.35,1211.16 2016.94,1211.16 2017.53,1211.16 2018.11,1211.16 2018.7,1211.16 2019.28,1211.16 2019.87,1211.16 2020.46,1211.16 2021.04,1211.16 2021.63,1211.16 2022.22,1211.16 2022.8,1211.16 2023.39,1211.16 2023.98,1211.16 2024.56,1211.16 2025.15,1211.16 2025.73,1211.16 2026.32,1211.16 2026.91,1211.16 2027.49,1211.16 2028.08,1211.16 2028.67,1211.16 2029.25,1211.16 2029.84,1211.16 2030.43,1211.16 2031.01,1211.16 2031.6,1211.16 2032.19,1211.16 2032.77,1211.16 2033.36,1211.16 2033.94,1211.16 2034.53,1211.16 2035.12,1211.16 2035.7,1211.16 2036.29,1211.16 2036.88,1211.16 2037.46,1211.16 2038.05,1211.16 2038.64,1211.16 2039.22,1211.16 2039.81,1211.16 2040.4,1211.16 2040.98,1211.16 2041.57,1211.16 2042.15,1211.16 2042.74,1211.16 2043.33,1211.16 2043.91,1211.16 2044.5,1211.16 2045.09,1211.16 2045.67,1211.16 2046.26,1211.16 2046.85,1211.16 2047.43,1211.16 2048.02,1211.16 2048.6,1211.16 2049.19,1211.16 2049.78,1211.16 2050.36,1211.16 2050.95,1211.16 2051.54,1211.16 2052.12,1211.16 2052.71,1211.16 2053.3,1211.16 2053.88,1211.16 2054.47,1211.16 2055.06,1211.16 2055.64,1211.16 2056.23,1211.16 2056.81,1211.16 2057.4,1211.16 2057.99,1211.16 2058.57,1211.16 2059.16,1211.16 2059.75,1211.16 2060.33,1211.16 2060.92,1211.16 2061.51,1211.16 2062.09,1211.16 2062.68,1211.16 2063.27,1211.16 2063.85,1211.16 2064.44,1211.16 2065.02,1211.16 2065.61,1211.16 2066.2,1211.16 2066.78,1211.16 2067.37,1211.16 2067.96,1211.16 2068.54,1211.16 2069.13,1211.16 2069.72,1211.16 2070.3,1211.16 2070.89,1211.16 2071.48,1211.16 2072.06,1211.16 2072.65,1211.16 2073.23,1211.16 2073.82,1211.16 2074.41,1211.16 2074.99,1211.16 2075.58,1211.16 2076.17,1211.16 2076.75,1211.16 2077.34,1211.16 2077.93,1211.16 2078.51,1211.16 2079.1,1211.16 2079.68,1211.16 2080.27,1211.16 2080.86,1211.16 2081.44,1211.16 2082.03,1211.16 2082.62,1211.16 2083.2,1211.16 2083.79,1211.16 2084.38,1211.16 2084.96,1211.16 2085.55,1211.16 2086.14,1211.16 2086.72,1211.16 2087.31,1211.16 2087.89,1211.16 2088.48,1211.16 2089.07,1211.16 2089.65,1211.16 2090.24,1211.16 2090.83,1211.16 2091.41,1211.16 2092,1211.16 2092.59,1211.16 2093.17,1211.16 2093.76,1211.16 2094.35,1211.16 2094.93,1211.16 2095.52,1211.16 2096.1,1211.16 2096.69,1211.16 2097.28,1211.16 2097.86,1211.16 2098.45,1211.16 2099.04,1211.16 2099.62,1211.16 2100.21,1211.16 2100.8,1211.16 2101.38,1211.16 2101.97,1211.16 2102.55,1211.16 2103.14,1211.16 2103.73,1211.16 2104.31,1211.16 2104.9,1211.16 2105.49,1211.16 2106.07,1211.16 2106.66,1211.16 2107.25,1211.16 2107.83,1211.16 2108.42,1211.16 2109.01,1211.16 2109.59,1211.16 2110.18,1211.16 2110.76,1211.16 2111.35,1211.16 2111.94,1211.16 2112.52,1211.16 2113.11,1211.16 2113.7,1211.16 2114.28,1211.16 2114.87,1211.16 2115.46,1211.16 2116.04,1211.16 2116.63,1211.16 2117.22,1211.16 2117.8,1211.16 2118.39,1211.16 2118.97,1211.16 2119.56,1211.16 2120.15,1211.16 2120.73,1211.16 2121.32,1211.16 2121.91,1211.16 2122.49,1211.16 2123.08,1211.16 2123.67,1211.16 2124.25,1211.16 2124.84,1211.16 2125.42,1211.16 2126.01,1211.16 2126.6,1211.16 2127.18,1211.16 2127.77,1211.16 2128.36,1211.16 2128.94,1211.16 2129.53,1211.16 2130.12,1211.16 2130.7,1211.16 2131.29,1211.16 2131.88,1211.16 2132.46,1211.16 2133.05,1211.16 2133.63,1211.16 2134.22,1211.16 2134.81,1211.16 2135.39,1211.16 2135.98,1211.16 2136.57,1211.16 2137.15,1211.16 2137.74,1211.16 2138.33,1211.16 2138.91,1211.16 2139.5,1211.16 2140.09,1211.16 2140.67,1211.16 2141.26,1211.16 2141.84,1211.16 2142.43,1211.16 2143.02,1211.16 2143.6,1211.16 2144.19,1211.16 2144.78,1211.16 2145.36,1211.16 2145.95,1211.16 2146.54,1211.16 2147.12,1211.16 2147.71,1211.16 2148.3,1211.16 2148.88,1211.16 2149.47,1211.16 2150.05,1211.16 2150.64,1211.16 2151.23,1211.16 2151.81,1211.16 2152.4,1211.16 2152.99,1211.16 2153.57,1211.16 2154.16,1211.16 2154.75,1211.16 2155.33,1211.16 2155.92,1211.16 2156.5,1211.16 2157.09,1211.16 2157.68,1211.16 2158.26,1211.16 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.93,1192.97 1399.61,899.083 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1228.91 985.439,1192.97 2158.26,1192.97 2158.26,1228.91 985.439,1228.91 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip060)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip060)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip063\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip063)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-32.6883 161.555,-1431.46 162.114,-2765.92 162.673,-3969.55 163.232,-5044.01 163.792,-6050.61 164.351,-6945.22 164.91,-7807.42 165.469,-8569.35 166.029,-9216.15 166.588,-9843.45 167.147,-10385.4 167.706,-8964.51 168.266,-9503.97 168.825,-9987.17 169.384,-10417.8 169.943,-10069.8 170.503,-9761.2 171.062,-10100.3 171.621,-10388.3 172.18,-10646.2 172.74,-10869.6 173.299,-11068.1 173.858,-11234.1 174.417,-11369.6 174.977,-11065.1 175.536,-11148.4 176.095,-11217.3 176.655,-11263 177.214,-11277 177.773,-10970 178.332,-10958.8 178.892,-10666.4 179.451,-10631 180.01,-10587.8 180.569,-10521.8 181.129,-10443.9 181.688,-10359.8 182.247,-10268.3 182.806,-9989.76 183.366,-9565.43 183.925,-9466.34 184.484,-8642 185.043,-8551.01 185.603,-8329.59 186.162,-7972.02 186.721,-7862.42 187.28,-7746.93 187.84,-7526.84 188.399,-7304.87 188.958,-7106.24 189.517,-6988.11 190.077,-6782.58 190.636,-6507.36 191.195,-6322.98 191.754,-6141.54 192.314,-5823.68 192.873,-5732.42 193.432,-5639.46 193.991,-5483.54 194.551,-5328.65 195.11,-5115.84 195.669,-5016.74 196.228,-4751.06 196.788,-4556.3 197.347,-4459.33 197.906,-4368.5 198.465,-4177.53 199.025,-3983.35 199.584,-3804.16 200.143,-3590.24 200.702,-3472.46 201.262,-3360.68 201.821,-3241.45 202.38,-3167.52 202.939,-3091.34 203.499,-3016.35 204.058,-2825.94 204.617,-2683.95 205.176,-2550.78 205.736,-2455.27 206.295,-2361.6 206.854,-2300.75 207.413,-2143.71 207.973,-2023.82 208.532,-1874.04 209.091,-1793.01 209.65,-1712.86 210.21,-1664.45 210.769,-1583.48 211.328,-1507.1 211.887,-1425.94 212.447,-1296.77 213.006,-1115.89 213.565,-1048.27 214.124,-958.912 214.684,-845.308 215.243,-763.5 215.802,-710.041 216.361,-631.994 216.921,-580.774 217.48,-531.138 218.039,-457.286 218.598,-408.106 219.158,-338.65 219.717,-314.836 220.276,-220.365 220.835,-179.502 221.395,-68.2731 221.954,78.298 222.513,107.46 223.072,156.2 223.632,203.613 224.191,206.341 224.75,230.575 225.309,237.982 225.869,224.249 226.428,278.146 226.987,344.981 227.546,369.733 228.106,393.242 228.665,393.555 229.224,397.652 229.783,443.452 230.343,467.793 230.902,470.184 231.461,433.077 232.02,457.255 232.58,442.615 233.139,491.307 233.698,553.683 234.257,540.656 234.817,606.308 235.376,589.114 235.935,633.202 236.494,620.074 237.054,624.198 237.613,668.951 238.172,710.038 238.731,731.985 239.291,806.227 239.85,799.902 240.409,796.764 240.968,795.908 241.528,797.269 242.087,795.052 242.646,830.077 243.205,831.726 243.765,848.265 244.324,879.673 244.883,909.805 245.442,905.815 246.002,918.846 246.561,896.506 247.12,946.786 247.679,960.854 248.239,953.183 248.798,982.882 249.357,978.502 249.916,990.215 250.476,999.72 251.035,1010.18 251.594,1020.07 252.153,1042.97 252.713,1035.83 253.272,1027.18 253.831,1056.88 254.39,1083.65 254.95,1073.04 255.509,1062.75 256.068,1073.83 256.627,1064.52 257.187,1034.88 257.746,1045.75 258.305,1039.9 258.864,1033.29 259.424,1060.63 259.983,1050.72 260.542,1043.33 261.101,1037.01 261.661,1050.92 262.22,1024.6 262.779,999.48 263.338,964.428 263.898,961.282 264.457,958.245 265.016,953.988 265.575,972.114 266.135,969.762 266.694,967.803 267.253,951.917 267.812,951.464 268.372,949.148 268.931,985.255 269.49,986.49 270.049,1048.24 270.609,1057.43 271.168,1034.87 271.727,1013.82 272.286,976.678 272.846,989.479 273.405,1001.03 273.964,1047.81 274.523,1060.41 275.083,1052.34 275.642,1067.94 276.201,1061.06 276.76,1054.94 277.32,1063.41 277.879,1109.21 278.438,1101.35 278.997,1112.44 279.557,1103.47 280.116,1076.16 280.675,1099.81 281.234,1089.16 281.794,1082.78 282.353,1106.54 282.912,1113.78 283.471,1122.31 284.031,1142.65 284.59,1162 285.149,1144.64 285.708,1115.45 286.268,1106.87 286.827,1097.25 287.386,1102.09 287.945,1090.6 288.505,1064.71 289.064,1041.83 289.623,1033.68 290.182,1021.81 290.742,981.328 291.301,964.405 291.86,964.477 292.419,992.913 292.979,973.101 293.538,973.664 294.097,984.599 294.656,979.193 295.216,1009.86 295.775,1039.18 296.334,1065.01 296.893,1033.65 297.453,1009.99 298.012,1037.76 298.571,1030.92 299.13,1059.45 299.69,1050.45 300.249,1045.67 300.808,1039.23 301.368,1033.04 301.927,1025.9 302.486,1049.95 303.045,1072.73 303.605,1066.92 304.164,1077.6 304.723,1050.01 305.282,1025.95 305.842,1036.77 306.401,1028.57 306.96,1020.62 307.519,1014.97 308.079,1010.3 308.638,1004.19 309.197,1031.29 309.756,991.51 310.316,971.3 310.875,934.843 311.434,963.229 311.993,976.313 312.553,954.297 313.112,950.04 313.671,947.916 314.23,959.886 314.79,972.081 315.349,949.485 315.908,976.698 316.467,935.68 317.027,966.329 317.586,977.017 318.145,975.535 318.704,969.58 319.264,981.144 319.823,979.072 320.382,1009.63 320.941,1000.87 321.501,993.315 322.06,970.768 322.619,998.684 323.178,1007.94 323.738,1017.58 324.297,994.1 324.856,1021.51 325.415,1046.8 325.975,1038.3 326.534,996.426 327.093,970.643 327.652,964.074 328.212,926.012 328.771,922.698 329.33,936.031 329.889,901.14 330.449,898.825 331.008,881.594 331.567,861.306 332.126,878.214 332.686,843.211 333.245,847.373 333.804,863.022 334.363,863.272 334.923,860.759 335.482,861.295 336.041,859.959 336.6,873.719 337.16,871.386 337.719,870.725 338.278,870.022 338.837,851.949 339.397,884.178 339.956,879.5 340.515,913.105 341.074,940.042 341.634,935.711 342.193,981.328 342.752,955.489 343.311,950.449 343.871,946.856 344.43,941.535 344.989,940.303 345.548,933.236 346.108,945.402 346.667,972.283 347.226,977.772 347.785,952.177 348.345,959.408 348.904,935.892 349.463,966.943 350.022,943.089 350.582,918.922 351.141,931.89 351.7,975.003 352.259,969.784 352.819,964.321 353.378,972.324 353.937,981.46 354.496,991.391 355.056,964.636 355.615,942.132 356.174,923.245 356.733,888.08 357.293,917.696 357.852,945.317 358.411,923.121 358.97,900.108 359.53,897.674 360.089,909.493 360.648,904.004 361.207,916.931 361.767,910.257 362.326,918.711 362.885,895.026 363.444,875.912 364.004,873.047 364.563,918.997 365.122,918.027 365.681,947.558 366.241,889.157 366.8,870.597 367.359,848.599 367.918,849.962 368.478,880.182 369.037,892.907 369.596,870.59 370.155,882.891 370.715,897.207 371.274,907.11 371.833,884.802 372.392,862.926 372.952,860.731 373.511,822.999 374.07,822.619 374.629,840.039 375.189,840.619 375.748,806.359 376.307,824.588 376.866,839.664 377.426,869.752 377.985,878.415 378.544,874.533 379.103,886.889 379.663,882.51 380.222,865.285 380.781,860.996 381.34,843.835 381.9,841.366 382.459,821.8 383.018,818.493 383.577,847.085 384.137,829.311 384.696,780.609 385.255,779.302 385.814,779.213 386.374,764.477 386.933,750.027 387.492,772.308 388.051,775.985 388.611,808.777 389.17,790.609 389.729,771.976 390.288,754.017 390.848,739.652 391.407,744.227 391.966,778.134 392.525,776.602 393.085,773.494 393.644,770.437 394.203,774.041 394.762,743.04 395.322,747.409 395.881,764.904 396.44,786.355 396.999,785.355 397.559,767.743 398.118,769.955 398.677,770.071 399.236,786.778 399.796,783.162 400.355,783.811 400.914,781.956 401.473,763.768 402.033,763.586 402.592,749.134 403.151,765.884 403.71,799.751 404.27,783.994 404.829,819.502 405.388,831.598 405.947,809.839 406.507,794.503 407.066,775.577 407.625,793.513 408.184,777.121 408.744,778.791 409.303,827.748 409.862,839.57 410.421,852.439 410.981,816.61 411.54,800.347 412.099,799.402 412.658,766.52 413.218,752.015 413.777,755.753 414.336,739.274 414.895,742.96 415.455,791.742 416.014,791.935 416.573,806.208 417.132,804.97 417.692,819.774 418.251,816.395 418.81,833.108 419.369,878.545 419.929,876.27 420.488,889.971 421.047,882.419 421.606,874.761 422.166,848.094 422.725,841.983 423.284,837.862 423.843,851.818 424.403,862.489 424.962,823.504 425.521,802.307 426.08,820.077 426.64,814.184 427.199,827.486 427.758,839.425 428.318,817.038 428.877,828.272 429.436,839.807 429.995,820.966 430.555,849.634 431.114,848.547 431.673,845.551 432.232,859.68 432.792,890.329 433.351,853.984 433.91,849.014 434.469,845.642 435.029,820.129 435.588,803.486 436.147,800.014 436.706,812.222 437.266,776.376 437.825,763.137 438.384,766.1 438.943,803.792 439.503,770.641 440.062,755.171 440.621,757.46 441.18,758.062 441.74,741.249 442.299,711.429 442.858,717.017 443.417,705.813 443.977,678.259 444.536,633.621 445.095,638.288 445.654,660.068 446.214,669.316 446.773,690.242 447.332,680.214 447.891,665.267 448.451,652.56 449.01,674.87 449.569,712.303 450.128,716.912 450.688,734.587 451.247,734.729 451.806,719.277 452.365,706.038 452.925,705.756 453.484,752.974 454.043,766.442 454.602,766.388 455.162,768.935 455.721,783.739 456.28,812.4 456.839,827.736 457.399,824.282 457.958,868.723 458.517,864.925 459.076,826.467 459.636,803.976 460.195,816.706 460.754,830.18 461.313,793.306 461.873,824.303 462.432,805.152 462.991,832.54 463.55,808.07 464.11,821.062 464.669,802.274 465.228,783.361 465.787,732.605 466.347,731.227 466.906,730.738 467.465,751.024 468.024,734.597 468.584,768.492 469.143,766.178 469.702,767.548 470.261,781.997 470.821,748.663 471.38,763.512 471.939,761.125 472.498,777.184 473.058,743.138 473.617,743.899 474.176,745.145 474.735,741.016 475.295,742.147 475.854,743.973 476.413,742.485 476.972,760.914 477.532,743.369 478.091,743.968 478.65,756.699 479.209,789.398 479.769,801.769 480.328,818.193 480.887,811.427 481.446,840.267 482.006,823.144 482.565,819.05 483.124,812.596 483.683,825.632 484.243,823.388 484.802,821.831 485.361,833.411 485.92,828.41 486.48,821.834 487.039,833.965 487.598,812.523 488.157,774.898 488.717,757.256 489.276,771.799 489.835,784.206 490.394,732.978 490.954,750.253 491.513,698.084 492.072,714.026 492.631,717.974 493.191,718.709 493.75,736.666 494.309,735.216 494.868,731.76 495.428,716.659 495.987,698.771 496.546,669.018 497.105,705.185 497.665,709.393 498.224,711.126 498.783,712.276 499.342,679.166 499.902,713.983 500.461,747.2 501.02,745.176 501.579,758.338 502.139,808.113 502.698,805.068 503.257,801.623 503.816,813.493 504.376,809.609 504.935,819.571 505.494,796.446 506.053,793.261 506.613,806.516 507.172,835.402 507.731,830.048 508.29,825.72 508.85,820.939 509.409,798.613 509.968,797.502 510.527,807.884 511.087,801.805 511.646,753.475 512.205,732.959 512.764,749.614 513.324,747.093 513.883,779.491 514.442,776.719 515.001,790.89 515.561,787.914 516.12,751.288 516.679,752.268 517.238,784.337 517.798,780.866 518.357,811.027 518.916,804.731 519.475,780.262 520.035,778.184 520.594,757.896 521.153,771.156 521.712,767.455 522.272,763.802 522.831,747.991 523.39,715.189 523.949,714.807 524.509,700.789 525.068,735.604 525.627,687.778 526.186,704.496 526.746,708.716 527.305,709.92 527.864,694.479 528.423,694.773 528.983,712.444 529.542,712.858 530.101,682.737 530.66,685.979 531.22,688.875 531.779,708.813 532.338,697.108 532.897,703.911 533.457,688.601 534.016,692.602 534.575,662.444 535.134,666.499 535.694,671.843 536.253,659.25 536.812,645.884 537.371,666.548 537.931,668.943 538.49,690.693 539.049,694.064 539.608,696.917 540.168,700.19 540.727,734.627 541.286,698.208 541.845,699.339 542.405,700.645 542.964,704.494 543.523,703.789 544.082,725.432 544.642,726.49 545.201,742.774 545.76,761.726 546.319,757.316 546.879,738.237 547.438,752.896 547.997,735.713 548.556,750.077 549.116,764.575 549.675,745.97 550.234,760.753 550.793,792.089 551.353,772.803 551.912,782.56 552.471,778.6 553.031,759.734 553.59,722.138 554.149,724.695 554.708,757.843 555.268,788.044 555.827,779.446 556.386,776.716 556.945,774.084 557.505,739.353 558.064,737.006 558.623,753.045 559.182,751.753 559.742,748.696 560.301,797.47 560.86,762.376 561.419,759.835 561.979,790.943 562.538,819.871 563.097,844.396 563.656,835.531 564.216,825.888 564.775,835.236 565.334,810.826 565.893,791.937 566.453,802.309 567.012,801.264 567.571,797.248 568.13,793.589 568.69,788.755 569.249,783.96 569.808,744.631 570.367,743.995 570.927,708.406 571.486,678.471 572.045,664.853 572.604,651.154 573.164,653.486 573.723,670.596 574.282,658.691 574.841,660.618 575.401,650.605 575.96,654.278 576.519,655.823 577.078,663.091 577.638,649.423 578.197,719.036 578.756,748.209 579.315,764.073 579.875,763.58 580.434,780.544 580.993,807.099 581.552,819.291 582.112,798.786 582.671,792.936 583.23,802.953 583.789,829.841 584.349,823.81 584.908,851.002 585.467,826.17 586.026,801.037 586.586,796.187 587.145,791.384 587.704,740.756 588.263,753.688 588.823,769.184 589.382,781.814 589.941,778.621 590.5,757.045 591.06,739.24 591.619,787.764 592.178,798.812 592.737,746.198 593.297,727.876 593.856,707.324 594.415,705.293 594.974,688.59 595.534,703.222 596.093,699.323 596.652,686.417 597.211,688.791 597.771,692.064 598.33,725.307 598.889,741.266 599.448,740.498 600.008,751.85 600.567,783.06 601.126,841.234 601.685,819.339 602.245,798.644 602.804,715.589 603.363,716.308 603.922,731.93 604.482,730.329 605.041,713.178 605.6,745.022 606.159,744.592 606.719,727.216 607.278,714.444 607.837,679.212 608.396,702.279 608.956,750.649 609.515,762.435 610.074,773.552 610.633,768.11 611.193,729.123 611.752,727.715 612.311,710.444 612.87,709.823 613.43,678.872 613.989,695.59 614.548,710.898 615.107,791.609 615.667,753.549 616.226,733.527 616.785,778.564 617.344,742.631 617.904,786.598 618.463,830.456 619.022,806.214 619.581,769.136 620.141,763.801 620.7,760.089 621.259,757.316 621.818,754.075 622.378,770.791 622.937,714.914 623.496,696.169 624.055,697.422 624.615,729.099 625.174,728.015 625.733,696.464 626.292,711.19 626.852,712.252 627.411,683.506 627.97,684.136 628.529,699.117 629.089,682.333 629.648,697.019 630.207,665.152 630.766,665.151 631.326,668.389 631.885,669.755 632.444,702.127 633.003,703.659 633.563,701.025 634.122,701.284 634.681,733.828 635.24,703.85 635.8,704.059 636.359,704.841 636.918,703.881 637.477,702.349 638.037,700.519 638.596,682.184 639.155,730.437 639.714,730.932 640.274,745.831 640.833,729.213 641.392,744.789 641.951,710.805 642.511,709.714 643.07,722.149 643.629,736.541 644.188,718.961 644.748,668.485 645.307,655.795 645.866,675.497 646.425,695.377 646.985,694.711 647.544,680.447 648.103,697.7 648.662,682.843 649.222,685.226 649.781,703.453 650.34,699.789 650.899,668.434 651.459,655.02 652.018,642.323 652.577,616.521 653.136,618.978 653.696,656.246 654.255,661.465 654.814,617.834 655.373,654.558 655.933,659.78 656.492,647.523 657.051,668.111 657.61,655.62 658.17,676.635 658.729,629.572 659.288,666.645 659.847,698.676 660.407,684.649 660.966,669.35 661.525,668.553 662.084,652.271 662.644,651.943 663.203,702.797 663.762,749.793 664.321,716.802 664.881,701.296 665.44,718.94 665.999,669.112 666.558,655.76 667.118,642.326 667.677,643.065 668.236,662.736 668.795,648.01 669.355,634.136 669.914,636.859 670.473,673.264 671.032,693.509 671.592,705.904 672.151,703.95 672.71,717.705 673.269,732.625 673.829,685.47 674.388,718.629 674.947,714.881 675.506,696.737 676.066,682.62 676.625,703.216 677.184,717.832 677.743,716.042 678.303,699.049 678.862,730.317 679.421,725.914 679.981,755.214 680.54,755.799 681.099,754.357 681.658,751.522 682.218,749.337 682.777,758.266 683.336,802.035 683.895,814.656 684.455,780.128 685.014,776.117 685.573,787.429 686.132,799.298 686.692,807.293 687.251,797.057 687.81,774.595 688.369,788.381 688.929,779.821 689.488,759.655 690.047,736.234 690.606,684.57 691.166,667.682 691.725,685.014 692.284,698.705 692.843,714.228 693.403,696.525 693.962,682.042 694.521,700.208 695.08,683.849 695.64,669.415 696.199,684.748 696.758,700.329 697.317,712.679 697.877,699.505 698.436,683.314 698.995,745.69 699.554,730.015 700.114,742.324 700.673,727.143 701.232,706.109 701.791,739.541 702.351,756.264 702.91,750.391 703.469,727.388 704.028,739.361 704.588,754.4 705.147,747.608 705.706,708.745 706.265,694.142 706.825,660.27 707.384,631.706 707.943,634.944 708.502,703.515 709.062,705.444 709.621,688.476 710.18,656.298 710.739,640.957 711.299,659.237 711.858,626.425 712.417,628.553 712.976,646.12 713.536,633.4 714.095,666.946 714.654,666.147 715.213,635.388 715.773,621.254 716.332,643.065 716.891,628.908 717.45,669.031 718.01,647.999 718.569,634.552 719.128,636.239 719.687,624.013 720.247,646.725 720.806,633.916 721.365,607.898 721.924,613.523 722.484,633.817 723.043,621.191 723.602,610.28 724.161,566.271 724.721,585.806 725.28,626.136 725.839,645.413 726.398,683.455 726.958,683.448 727.517,653.769 728.076,655.38 728.635,639.715 729.195,627.926 729.754,615.831 730.313,622.36 730.872,640.769 731.432,630.456 731.991,632.992 732.55,654.566 733.109,651.098 733.669,650.27 734.228,652.945 734.787,636.649 735.346,655.536 735.906,642.329 736.465,661.073 737.024,678.069 737.583,664.894 738.143,667.114 738.702,672.064 739.261,673.336 739.82,674.96 740.38,672.15 740.939,659.459 741.498,646.744 742.057,649.686 742.617,651.811 743.176,654.961 743.735,705.284 744.294,703.922 744.854,733.729 745.413,748.307 745.972,729.253 746.531,713.811 747.091,711.159 747.65,679.379 748.209,664.881 748.768,668.488 749.328,668.662 749.887,718.125 750.446,700.64 751.005,686.277 751.565,690.059 752.124,727.553 752.683,724.841 753.242,739.534 753.802,752.722 754.361,750.074 754.92,729.576 755.479,760.697 756.039,726.612 756.598,759.29 757.157,743.349 757.716,709.657 758.276,709.639 758.835,708.146 759.394,674.718 759.953,676.168 760.513,662.892 761.072,696.287 761.631,681.875 762.19,668.273 762.75,688.128 763.309,688.087 763.868,703.124 764.427,684.006 764.987,685.597 765.546,684.766 766.105,671.846 766.664,675.045 767.224,659.177 767.783,676.31 768.342,676.64 768.901,678.589 769.461,650.126 770.02,685.804 770.579,673.217 771.138,645.838 771.698,631.976 772.257,634.615 772.816,638.098 773.375,610.207 773.935,598.86 774.494,555.317 775.053,546.304 775.612,520.336 776.172,513.098 776.731,505.731 777.29,563.049 777.849,553.558 778.409,576.474 778.968,580.355 779.527,604.926 780.086,594.599 780.646,553.732 781.205,545.079 781.764,553.802 782.323,577.645 782.883,599.051 783.442,603.443 784.001,624.36 784.56,630.614 785.12,666.705 785.679,636.37 786.238,705.362 786.797,703.995 787.357,716.553 787.916,713.947 788.475,714.705 789.034,682.641 789.594,700.465 790.153,684.343 790.712,669.208 791.271,703.461 791.831,716.908 792.39,713.435 792.949,679.301 793.508,709.702 794.068,714.672 794.627,699.338 795.186,700.597 795.745,681.945 796.305,683.89 796.864,685.09 797.423,685.845 797.982,685.84 798.542,668.909 799.101,685.49 799.66,701.459 800.219,702.493 800.779,699.328 801.338,680.537 801.897,667.973 802.456,667.509 803.016,701.922 803.575,652.768 804.134,636.359 804.693,621.699 805.253,641.881 805.812,659.76 806.371,662.729 806.931,632.024 807.49,670.29 808.049,688.031 808.608,692.222 809.168,692.382 809.727,693.796 810.286,691.695 810.845,675.603 811.405,663.427 811.964,666.783 812.523,685.733 813.082,703.745 813.642,690.128 814.201,724.016 814.76,735.503 815.319,749.254 815.879,758.825 816.438,753.777 816.997,780.117 817.556,762.453 818.116,760.228 818.675,769.321 819.234,763.1 819.793,759.255 820.353,756.234 820.912,767.411 821.471,747.666 822.03,743.845 822.59,724.508 823.149,705.156 823.708,703.284 824.267,684.327 824.827,684.201 825.386,681.875 825.945,666.873 826.504,652.634 827.064,705.202 827.623,701.447 828.182,698.518 828.741,696.875 829.301,698.048 829.86,663.346 830.419,680.407 830.978,663.906 831.538,680.317 832.097,677.562 832.656,695.803 833.215,678.004 833.775,711.356 834.334,722.585 834.893,740.565 835.452,738.102 836.012,739.443 836.571,769.857 837.13,734.713 837.689,713.792 838.249,727.413 838.808,693.042 839.367,708.357 839.926,706.47 840.486,692.309 841.045,654.856 841.604,606.134 842.163,611.646 842.723,661.421 843.282,673.614 843.841,718.913 844.4,715.894 844.96,718.202 845.519,731.385 846.078,743.482 846.637,754.781 847.197,782.594 847.756,780.096 848.315,790.626 848.874,800.881 849.434,791.528 849.993,788.493 850.552,766.964 851.111,778.175 851.671,771.013 852.23,765.348 852.789,764.322 853.348,730.514 853.908,740.602 854.467,769.075 855.026,765.053 855.585,731.27 856.145,731.014 856.704,724.374 857.263,737.467 857.822,732.453 858.382,745.883 858.941,741.316 859.5,707.181 860.059,691.166 860.619,676.252 861.178,657.959 861.737,674.179 862.296,688.235 862.856,686.777 863.415,686.948 863.974,667.57 864.533,670.024 865.093,671.354 865.652,689.247 866.211,672.177 866.77,702.531 867.33,685.734 867.889,683.293 868.448,665.72 869.007,698.269 869.567,681.963 870.126,699.321 870.685,696.879 871.244,695.056 871.804,663.877 872.363,668.25 872.922,652.655 873.481,688.849 874.041,674.273 874.6,644.309 875.159,694.263 875.718,696.011 876.278,696.083 876.837,725.319 877.396,756.256 877.955,734.784 878.515,747.882 879.074,743.737 879.633,727.4 880.192,738.011 880.752,748.765 881.311,746.594 881.87,709.924 882.429,743.063 882.989,753.737 883.548,762.149 884.107,728.167 884.666,712.384 885.226,708.896 885.785,691.652 886.344,674.332 886.903,657.553 887.463,659.715 888.022,663.205 888.581,629.198 889.14,699.733 889.7,696.308 890.259,709.096 890.818,659.276 891.377,674.265 891.937,657.271 892.496,691.013 893.055,689.478 893.614,672.143 894.174,687.567 894.733,670.922 895.292,673.901 895.851,624.747 896.411,625.617 896.97,612.773 897.529,631.566 898.088,617.856 898.648,636.343 899.207,642.921 899.766,661.86 900.325,678.052 900.885,667.224 901.444,669.272 902.003,654.704 902.562,642.838 903.122,629.322 903.681,630.627 904.24,637.238 904.799,623.65 905.359,644.757 905.918,675.71 906.477,694.043 907.036,714.098 907.596,727.08 908.155,691.904 908.714,659.53 909.273,658.894 909.833,625.439 910.392,628.231 910.951,597.931 911.51,586.741 912.07,606.895 912.629,645.711 913.188,648.755 913.747,634.626 914.307,670.579 914.866,720.437 915.425,701.741 915.984,721.703 916.544,718.459 917.103,732.545 917.662,775.485 918.221,726.154 918.781,709.5 919.34,709.818 919.899,707.293 920.458,706.33 921.018,705.093 921.577,704.338 922.136,735.561 922.695,718.927 923.255,703.327 923.814,685.152 924.373,686.749 924.932,655.499 925.492,626.695 926.051,628.47 926.61,636.016 927.169,623.046 927.729,625.622 928.288,644.525 928.847,644.363 929.406,630.774 929.966,617.244 930.525,653.622 931.084,644.863 931.644,646.504 932.203,647.216 932.762,650.785 933.321,619.47 933.881,638.534 934.44,627.915 934.999,615.774 935.558,618.164 936.118,632.697 936.677,686.711 937.236,701.59 937.795,686.963 938.355,670.826 938.914,620.916 939.473,623.038 940.032,611.665 940.592,618.392 941.151,639.797 941.71,624.467 942.269,627.962 942.829,632.641 943.388,669.124 943.947,671.145 944.506,625.272 945.066,644.818 945.625,663.47 946.184,665.46 946.743,648.766 947.303,669.553 947.862,702.896 948.421,702.708 948.98,685.385 949.54,683.479 950.099,701.243 950.658,701.558 951.217,700.392 951.777,686.061 952.336,704.879 952.895,751.019 953.454,781.068 954.014,778.393 954.573,772.599 955.132,783.924 955.691,778.883 956.251,745.157 956.81,758.69 957.369,768.693 957.928,765.488 958.488,745.386 959.047,742.282 959.606,769.409 960.165,748.292 960.725,746.534 961.284,757.881 961.843,785.705 962.402,813.759 962.962,788.62 963.521,781.01 964.08,776.106 964.639,739.107 965.199,707.617 965.758,706.645 966.317,720.053 966.876,683.901 967.436,650.648 967.995,652.227 968.554,637.429 969.113,637.158 969.673,639.85 970.232,611.098 970.791,627.043 971.35,662.595 971.91,678.255 972.469,692.566 973.028,710.585 973.587,694.109 974.147,723.532 974.706,740.336 975.265,724.034 975.824,769.81 976.384,749.697 976.943,747.341 977.502,744.719 978.061,726.654 978.621,712.34 979.18,709.837 979.739,680.36 980.298,696.837 980.858,726.752 981.417,696.318 981.976,693.766 982.535,693.502 983.095,661.07 983.654,648.456 984.213,634.36 984.772,668.4 985.332,635.247 985.891,639.473 986.45,655.734 987.009,689.69 987.569,689.174 988.128,676.448 988.687,662.005 989.246,664.8 989.806,679.083 990.365,677.261 990.924,695.214 991.483,678.193 992.043,677.066 992.602,693.658 993.161,693.014 993.72,693.672 994.28,707.706 994.839,722.839 995.398,707.033 995.957,712.586 996.517,731.233 997.076,764.495 997.635,759.795 998.194,786.161 998.754,748.121 999.313,729.007 999.872,745.436 1000.43,745.959 1000.99,773.606 1001.55,815.155 1002.11,778.622 1002.67,754.962 1003.23,753.184 1003.79,766.846 1004.35,778.699 1004.91,787.219 1005.46,796.499 1006.02,774.231 1006.58,799.498 1007.14,794.64 1007.7,802.75 1008.26,778.666 1008.82,771.282 1009.38,748.244 1009.94,763.289 1010.5,791.577 1011.06,753.534 1011.62,733.705 1012.18,727.801 1012.73,693.718 1013.29,677.455 1013.85,659.635 1014.41,665.965 1014.97,701.387 1015.53,699.606 1016.09,666.184 1016.65,683.721 1017.21,668.26 1017.77,635.421 1018.33,636.268 1018.89,638.05 1019.45,657.674 1020.01,674.564 1020.56,673.963 1021.12,660.237 1021.68,644.472 1022.24,648.479 1022.8,647.534 1023.36,668.241 1023.92,652.085 1024.48,684.718 1025.04,664.57 1025.6,713.874 1026.16,662.498 1026.72,683.462 1027.28,734.06 1027.83,731.6 1028.39,745.156 1028.95,708.465 1029.51,691.191 1030.07,689.682 1030.63,684.316 1031.19,670.815 1031.75,669.453 1032.31,653.315 1032.87,637.438 1033.43,629.722 1033.99,634.223 1034.55,635.045 1035.1,687.532 1035.66,705.432 1036.22,706.023 1036.78,722.771 1037.34,704.673 1037.9,671.282 1038.46,723.22 1039.02,721.749 1039.58,735.11 1040.14,761.868 1040.7,758.722 1041.26,766.821 1041.82,730.256 1042.38,728.744 1042.93,729.205 1043.49,708.913 1044.05,696.155 1044.61,680.267 1045.17,711.354 1045.73,711.364 1046.29,741.323 1046.85,756.209 1047.41,753.87 1047.97,700.476 1048.53,683.045 1049.09,684.656 1049.65,703.016 1050.2,688.134 1050.76,636.854 1051.32,640.931 1051.88,626.283 1052.44,632.154 1053,633.357 1053.56,653.493 1054.12,634.144 1054.68,619.822 1055.24,621.539 1055.8,607.551 1056.36,596.851 1056.92,617.829 1057.48,623.519 1058.03,594.218 1058.59,583.502 1059.15,570.757 1059.71,576.23 1060.27,565.825 1060.83,590.389 1061.39,566.924 1061.95,558.065 1062.51,562.341 1063.07,601.911 1063.63,604.897 1064.19,609.147 1064.75,614.723 1065.3,617.295 1065.86,618.356 1066.42,604.109 1066.98,606.062 1067.54,627.773 1068.1,613.004 1068.66,615.812 1069.22,636.813 1069.78,640.722 1070.34,661.418 1070.9,644.81 1071.46,644.93 1072.02,628.992 1072.57,615.795 1073.13,635.659 1073.69,638.225 1074.25,640.502 1074.81,658.336 1075.37,611.394 1075.93,664.375 1076.49,683.896 1077.05,679.91 1077.61,697.562 1078.17,696.685 1078.73,729.793 1079.29,726.738 1079.85,742.668 1080.4,737.787 1080.96,747.781 1081.52,728.235 1082.08,711.978 1082.64,725.739 1083.2,708.254 1083.76,690.278 1084.32,704.894 1084.88,707.882 1085.44,704.417 1086,702.523 1086.56,699.075 1087.12,697.23 1087.67,710.952 1088.23,693.177 1088.79,674.336 1089.35,657.11 1089.91,658.355 1090.47,643.307 1091.03,660.653 1091.59,694.784 1092.15,677.086 1092.71,676.458 1093.27,740.356 1093.83,705.656 1094.39,720.009 1094.94,750.906 1095.5,763.452 1096.06,792.031 1096.62,819.807 1097.18,827.369 1097.74,820.031 1098.3,843.434 1098.86,814.923 1099.42,807.643 1099.98,786.783 1100.54,734.92 1101.1,749.763 1101.66,732.468 1102.22,746.057 1102.77,759.168 1103.33,756.836 1103.89,700.471 1104.45,713.278 1105.01,739.865 1105.57,670.016 1106.13,698.354 1106.69,713.812 1107.25,745.752 1107.81,757.2 1108.37,751.803 1108.93,750.568 1109.49,682.942 1110.04,653.113 1110.6,638.48 1111.16,624.149 1111.72,610.392 1112.28,633.387 1112.84,617.259 1113.4,652.391 1113.96,653.452 1114.52,671.15 1115.08,673.662 1115.64,692.265 1116.2,725.43 1116.76,725.191 1117.31,718.754 1117.87,734.321 1118.43,745.829 1118.99,758.696 1119.55,739.81 1120.11,767.558 1120.67,796.166 1121.23,775.932 1121.79,790.161 1122.35,770.984 1122.91,780.718 1123.47,793.34 1124.03,773.939 1124.59,754.995 1125.14,721.276 1125.7,701.983 1126.26,688.77 1126.82,671.23 1127.38,685.15 1127.94,685.152 1128.5,702.517 1129.06,718.111 1129.62,699.946 1130.18,701.188 1130.74,701.462 1131.3,747.495 1131.86,697.106 1132.41,693.312 1132.97,692.436 1133.53,723.26 1134.09,701.793 1134.65,763.076 1135.21,710.736 1135.77,692.28 1136.33,688.166 1136.89,686.508 1137.45,737.404 1138.01,766.335 1138.57,779.33 1139.13,758.758 1139.68,739.225 1140.24,720.796 1140.8,752.194 1141.36,714.38 1141.92,681.359 1142.48,666.321 1143.04,653.004 1143.6,638.061 1144.16,639.219 1144.72,610.927 1145.28,615.819 1145.84,570.461 1146.4,578.632 1146.96,583.78 1147.51,586.654 1148.07,574.22 1148.63,576.395 1149.19,584.687 1149.75,607.235 1150.31,597.73 1150.87,599.882 1151.43,602.233 1151.99,575.527 1152.55,629.926 1153.11,649.551 1153.67,634.429 1154.23,624.355 1154.78,611.044 1155.34,598.566 1155.9,602.004 1156.46,577.986 1157.02,564.95 1157.58,575.175 1158.14,644.762 1158.7,619.397 1159.26,621.507 1159.82,627.334 1160.38,652.039 1160.94,653.027 1161.5,655.161 1162.05,653.612 1162.61,637.639 1163.17,639.73 1163.73,643.098 1164.29,663.277 1164.85,696.811 1165.41,643.978 1165.97,645.818 1166.53,629.285 1167.09,616.526 1167.65,617.016 1168.21,668.016 1168.77,686.283 1169.33,669.353 1169.88,665.847 1170.44,684.834 1171,684.225 1171.56,669.834 1172.12,636.64 1172.68,606.863 1173.24,629.116 1173.8,631.616 1174.36,615.77 1174.92,606.836 1175.48,614.262 1176.04,615.291 1176.6,618.142 1177.15,640.058 1177.71,659.697 1178.27,645.315 1178.83,647.46 1179.39,648.492 1179.95,636.848 1180.51,639.67 1181.07,625.131 1181.63,629.82 1182.19,646.872 1182.75,649.428 1183.31,697.373 1183.87,694.829 1184.43,698.055 1184.98,698.288 1185.54,679.589 1186.1,665.87 1186.66,665.827 1187.22,667.484 1187.78,649.834 1188.34,687.007 1188.9,704.309 1189.46,735.095 1190.02,749.14 1190.58,746.782 1191.14,789.068 1191.7,812.662 1192.25,805.682 1192.81,816.175 1193.37,795.195 1193.93,789.615 1194.49,802.086 1195.05,796.589 1195.61,789.977 1196.17,786.163 1196.73,767.408 1197.29,748.845 1197.85,744.505 1198.41,754.987 1198.97,736.032 1199.52,751.16 1200.08,730.109 1200.64,727.038 1201.2,703.467 1201.76,705.413 1202.32,672.966 1202.88,672.513 1203.44,676.671 1204,694.212 1204.56,679.046 1205.12,663.432 1205.68,696.061 1206.24,678.778 1206.8,664.121 1207.35,660.872 1207.91,660.783 1208.47,627.081 1209.03,582.477 1209.59,602.626 1210.15,573.645 1210.71,597.972 1211.27,604.671 1211.83,605.394 1212.39,626.013 1212.95,643.509 1213.51,632.814 1214.07,617.896 1214.62,620.072 1215.18,625.45 1215.74,675.104 1216.3,662.43 1216.86,616.694 1217.42,636.317 1217.98,674.086 1218.54,677.593 1219.1,693.406 1219.66,693.308 1220.22,690.708 1220.78,657.14 1221.34,594.291 1221.89,601.205 1222.45,650.29 1223.01,648.41 1223.57,667.395 1224.13,653.858 1224.69,672.344 1225.25,672.803 1225.81,719.172 1226.37,766.844 1226.93,762.834 1227.49,741.433 1228.05,772.615 1228.61,751.444 1229.17,728.837 1229.72,727.045 1230.28,742.017 1230.84,721.129 1231.4,699.293 1231.96,697.594 1232.52,698.429 1233.08,699.077 1233.64,698.175 1234.2,697.914 1234.76,680.977 1235.32,664.398 1235.88,682.266 1236.44,664.745 1236.99,697.97 1237.55,731.737 1238.11,729.479 1238.67,759.942 1239.23,723.221 1239.79,668.821 1240.35,654.512 1240.91,641.574 1241.47,660.427 1242.03,646.478 1242.59,630.589 1243.15,649.932 1243.71,639.624 1244.26,655.298 1244.82,658.835 1245.38,674.946 1245.94,657.138 1246.5,658.253 1247.06,657.132 1247.62,673.037 1248.18,702.245 1248.74,701.222 1249.3,747.066 1249.86,792.877 1250.42,771.353 1250.98,749.801 1251.54,742.126 1252.09,754.966 1252.65,800.131 1253.21,777.557 1253.77,756.394 1254.33,718.073 1254.89,684.909 1255.45,682.772 1256.01,678.594 1256.57,730.695 1257.13,742.505 1257.69,727.224 1258.25,689.475 1258.81,692.199 1259.36,689.443 1259.92,689.746 1260.48,674.411 1261.04,689.678 1261.6,688.874 1262.16,700.649 1262.72,734.03 1263.28,728.118 1263.84,743.766 1264.4,725.178 1264.96,752.74 1265.52,763.787 1266.08,746.423 1266.63,742.783 1267.19,759.411 1267.75,740.834 1268.31,723.33 1268.87,719.978 1269.43,702.364 1269.99,669.761 1270.55,684.782 1271.11,671.44 1271.67,720.994 1272.23,717.409 1272.79,715.75 1273.35,698.796 1273.91,664.552 1274.46,635.061 1275.02,634.461 1275.58,653.353 1276.14,654.404 1276.7,637.875 1277.26,624.084 1277.82,623.855 1278.38,595.491 1278.94,617.399 1279.5,621.728 1280.06,609.474 1280.62,613.408 1281.18,601.975 1281.73,590.251 1282.29,563.784 1282.85,539.643 1283.41,529.443 1283.97,538.459 1284.53,548.385 1285.09,539.175 1285.65,563.814 1286.21,615.375 1286.77,655.408 1287.33,686.911 1287.89,672.874 1288.45,677.528 1289,692.389 1289.56,677.49 1290.12,675.324 1290.68,661.032 1291.24,708.798 1291.8,721.255 1292.36,685.768 1292.92,670.694 1293.48,634.045 1294.04,602.329 1294.6,621.725 1295.16,592.523 1295.72,627.472 1296.28,616.767 1296.83,624.553 1297.39,645.926 1297.95,646.835 1298.51,650.081 1299.07,634.463 1299.63,623.949 1300.19,613.541 1300.75,599.934 1301.31,606.089 1301.87,606.228 1302.43,612.399 1302.99,599.959 1303.55,620.782 1304.1,625.517 1304.66,628.077 1305.22,618.731 1305.78,637.543 1306.34,644.819 1306.9,646.213 1307.46,647.948 1308.02,630.058 1308.58,680.62 1309.14,710.576 1309.7,724.54 1310.26,704.568 1310.82,676.292 1311.38,660.1 1311.93,645.366 1312.49,648.548 1313.05,652.68 1313.61,686.396 1314.17,720.394 1314.73,749.84 1315.29,745.609 1315.85,740.83 1316.41,750.758 1316.97,745.588 1317.53,741.258 1318.09,736.552 1318.65,735.192 1319.2,734.34 1319.76,731.292 1320.32,774.544 1320.88,820.4 1321.44,784.504 1322,749.74 1322.56,776.981 1323.12,769.379 1323.68,750.318 1324.24,776.85 1324.8,785.25 1325.36,793.679 1325.92,787.9 1326.47,785.866 1327.03,778.726 1327.59,823.605 1328.15,814.503 1328.71,776.655 1329.27,771.599 1329.83,765.361 1330.39,765.644 1330.95,763.143 1331.51,743.88 1332.07,739.679 1332.63,756.21 1333.19,785.335 1333.75,764.122 1334.3,793.101 1334.86,768.506 1335.42,798.722 1335.98,760.672 1336.54,722.258 1337.1,669.287 1337.66,650.104 1338.22,651.788 1338.78,638.894 1339.34,609.621 1339.9,627.296 1340.46,628.322 1341.02,626.774 1341.57,612.438 1342.13,616.275 1342.69,650.106 1343.25,635.51 1343.81,624.644 1344.37,640.687 1344.93,646.992 1345.49,614.88 1346.05,600.473 1346.61,619.36 1347.17,636.724 1347.73,621.441 1348.29,629.366 1348.84,632.39 1349.4,665.16 1349.96,649.221 1350.52,668.419 1351.08,686.108 1351.64,688.063 1352.2,689.2 1352.76,722.525 1353.32,719.463 1353.88,716.529 1354.44,717.036 1355,713.803 1355.56,728.548 1356.12,729.115 1356.67,730.147 1357.23,761.945 1357.79,690.158 1358.35,753.894 1358.91,768.363 1359.47,779.297 1360.03,756.174 1360.59,754.441 1361.15,750.731 1361.71,744.263 1362.27,772.735 1362.83,783.132 1363.39,774.483 1363.94,785.925 1364.5,766.236 1365.06,728.492 1365.62,724.964 1366.18,690.929 1366.74,675.722 1367.3,681.191 1367.86,701.842 1368.42,719.714 1368.98,701.57 1369.54,700.15 1370.1,667.169 1370.66,636.603 1371.21,637.686 1371.77,641.28 1372.33,675.912 1372.89,660.173 1373.45,665.759 1374.01,670.267 1374.57,687.229 1375.13,670.671 1375.69,675.904 1376.25,662.914 1376.81,680.752 1377.37,666.67 1377.93,667.053 1378.49,685.197 1379.04,682.992 1379.6,586.058 1380.16,593.439 1380.72,599.933 1381.28,638.349 1381.84,674.289 1382.4,673.266 1382.96,654.865 1383.52,671.088 1384.08,688.24 1384.64,688.471 1385.2,655.452 1385.76,671.171 1386.31,687.16 1386.87,673.494 1387.43,693.127 1387.99,692.351 1388.55,708.422 1389.11,675.18 1389.67,673.794 1390.23,690.413 1390.79,687.182 1391.35,669.772 1391.91,654.884 1392.47,657.863 1393.03,658.219 1393.58,657.278 1394.14,640.196 1394.7,627.508 1395.26,630.109 1395.82,629.922 1396.38,650.829 1396.94,653.896 1397.5,687.341 1398.06,703.812 1398.62,754.37 1399.18,751.376 1399.74,762.429 1400.3,758.792 1400.86,708.569 1401.41,704.137 1401.97,701.184 1402.53,701.846 1403.09,671.654 1403.65,684.788 1404.21,699.658 1404.77,731.429 1405.33,729.182 1405.89,745.177 1406.45,758.743 1407.01,737.665 1407.57,732.343 1408.13,711.361 1408.68,697.608 1409.24,699.231 1409.8,750.278 1410.36,744.721 1410.92,759.82 1411.48,726.014 1412.04,740.512 1412.6,750.768 1413.16,744.901 1413.72,709.299 1414.28,676.185 1414.84,705.565 1415.4,719.768 1415.95,687.95 1416.51,683.343 1417.07,684.01 1417.63,700.548 1418.19,748.657 1418.75,777.549 1419.31,803.637 1419.87,783.486 1420.43,766.14 1420.99,775.819 1421.55,788.66 1422.11,785.251 1422.67,746.359 1423.23,761.189 1423.78,758.878 1424.34,739.666 1424.9,767.671 1425.46,765.437 1426.02,727.857 1426.58,726.823 1427.14,711.575 1427.7,728.005 1428.26,755.247 1428.82,764.44 1429.38,744.245 1429.94,743.791 1430.5,722.304 1431.05,736.916 1431.61,686.341 1432.17,685.798 1432.73,688.256 1433.29,673.37 1433.85,669.344 1434.41,698.725 1434.97,666.362 1435.53,667.797 1436.09,654.105 1436.65,640.749 1437.21,660.107 1437.77,658.667 1438.33,658.809 1438.88,661.323 1439.44,643.965 1440,677.359 1440.56,679 1441.12,664.213 1441.68,682.067 1442.24,650.019 1442.8,615.571 1443.36,649.361 1443.92,701.808 1444.48,735.696 1445.04,715.18 1445.6,699.266 1446.15,716.492 1446.71,794.775 1447.27,800.479 1447.83,811.047 1448.39,799.008 1448.95,823.566 1449.51,848.633 1450.07,840.716 1450.63,800.842 1451.19,794.348 1451.75,772.843 1452.31,769.162 1452.87,793.604 1453.42,782.983 1453.98,778.172 1454.54,774.056 1455.1,772.714 1455.66,798.65 1456.22,824.33 1456.78,785.042 1457.34,768.294 1457.9,776.732 1458.46,805.927 1459.02,798.179 1459.58,776.97 1460.14,738.91 1460.7,768.536 1461.25,797.157 1461.81,773.998 1462.37,703.896 1462.93,670.785 1463.49,668.655 1464.05,651.579 1464.61,666.103 1465.17,665.341 1465.73,650.789 1466.29,648.236 1466.85,635.038 1467.41,603.698 1467.97,524.123 1468.52,517.453 1469.08,510.073 1469.64,535.522 1470.2,523.96 1470.76,548.976 1471.32,541.604 1471.88,567.071 1472.44,573.848 1473,579.59 1473.56,603.478 1474.12,608.856 1474.68,626.361 1475.24,613.656 1475.79,636.077 1476.35,651.711 1476.91,685.189 1477.47,684.763 1478.03,701.408 1478.59,637.663 1479.15,609.832 1479.71,582.358 1480.27,587.686 1480.83,591.413 1481.39,595.45 1481.95,566.842 1482.51,556.895 1483.07,562.161 1483.62,599.788 1484.18,591.332 1484.74,596.103 1485.3,603.156 1485.86,588.78 1486.42,576.896 1486.98,585.367 1487.54,588.771 1488.1,560.938 1488.66,565.486 1489.22,605.824 1489.78,592.379 1490.34,581.412 1490.89,617.814 1491.45,638.476 1492.01,643.061 1492.57,660.559 1493.13,664.47 1493.69,650.091 1494.25,670.285 1494.81,670.063 1495.37,624.895 1495.93,673.627 1496.49,659.008 1497.05,678.464 1497.61,709.829 1498.16,707.429 1498.72,725.515 1499.28,725.151 1499.84,692.338 1500.4,693.555 1500.96,678.003 1501.52,697.84 1502.08,683.275 1502.64,636.393 1503.2,638.91 1503.76,611.545 1504.32,678.599 1504.88,679.596 1505.44,714.21 1505.99,697.503 1506.55,694.485 1507.11,679.331 1507.67,663.949 1508.23,712.055 1508.79,743.872 1509.35,772.504 1509.91,766.722 1510.47,746.519 1511.03,757.817 1511.59,771.331 1512.15,755.717 1512.71,750.136 1513.26,764.292 1513.82,745.416 1514.38,723.024 1514.94,736.043 1515.5,715.633 1516.06,731.005 1516.62,745.099 1517.18,760.251 1517.74,774.602 1518.3,770.802 1518.86,746.222 1519.42,778.064 1519.98,758.424 1520.53,757.968 1521.09,771.861 1521.65,781.69 1522.21,744.674 1522.77,724.179 1523.33,741.657 1523.89,736.677 1524.45,749.99 1525.01,747.392 1525.57,764.448 1526.13,761.205 1526.69,743.039 1527.25,724.523 1527.81,674.007 1528.36,653.065 1528.92,691.154 1529.48,689.814 1530.04,706.047 1530.6,689.191 1531.16,674.574 1531.72,672.133 1532.28,674.142 1532.84,676.694 1533.4,709.41 1533.96,706.105 1534.52,722.375 1535.08,721.551 1535.63,702.5 1536.19,750.447 1536.75,713.905 1537.31,743.738 1537.87,727.506 1538.43,709.985 1538.99,707.256 1539.55,702.687 1540.11,688.211 1540.67,685.346 1541.23,717.117 1541.79,683.094 1542.35,684.345 1542.9,685.529 1543.46,651.323 1544.02,653.015 1544.58,653.673 1545.14,687.284 1545.7,719.366 1546.26,702.615 1546.82,702.605 1547.38,737.196 1547.94,753.027 1548.5,763.848 1549.06,763.2 1549.62,761.406 1550.18,754.639 1550.73,717.08 1551.29,683.025 1551.85,649.048 1552.41,653.459 1552.97,655.066 1553.53,675.934 1554.09,660.638 1554.65,628.639 1555.21,582.644 1555.77,556.582 1556.33,565.847 1556.89,571.697 1557.45,579.159 1558,604.26 1558.56,613.107 1559.12,635.342 1559.68,622.79 1560.24,562.378 1560.8,568.618 1561.36,575.358 1561.92,564.484 1562.48,552.532 1563.04,572.596 1563.6,577.635 1564.16,582.619 1564.72,571.268 1565.28,579.864 1565.83,588.482 1566.39,609.155 1566.95,611.96 1567.51,597.341 1568.07,617.817 1568.63,603.501 1569.19,561.699 1569.75,550.397 1570.31,560.162 1570.87,586.549 1571.43,607.582 1571.99,615.287 1572.55,603.742 1573.1,641.141 1573.66,640.815 1574.22,659.12 1574.78,674.848 1575.34,739.787 1575.9,735.886 1576.46,746.697 1577.02,728.125 1577.58,704.442 1578.14,685.826 1578.7,654.985 1579.26,674.322 1579.82,691.768 1580.37,706.132 1580.93,719.849 1581.49,706.784 1582.05,654.869 1582.61,672.241 1583.17,674.108 1583.73,673.954 1584.29,692.377 1584.85,625.138 1585.41,609.965 1585.97,617.124 1586.53,637.186 1587.09,658.112 1587.65,647.108 1588.2,665.884 1588.76,700.141 1589.32,696.249 1589.88,665.098 1590.44,649.037 1591,649.898 1591.56,653.959 1592.12,641.825 1592.68,646.908 1593.24,644.786 1593.8,642.985 1594.36,642.655 1594.92,675.056 1595.47,675.285 1596.03,693.532 1596.59,707.094 1597.15,704.025 1597.71,705.752 1598.27,705.977 1598.83,705.561 1599.39,703.732 1599.95,685.822 1600.51,682.477 1601.07,695.489 1601.63,727.006 1602.19,753.847 1602.74,733.375 1603.3,747.069 1603.86,727.65 1604.42,724.01 1604.98,720.538 1605.54,687.157 1606.1,685.523 1606.66,667.883 1607.22,699.952 1607.78,701.318 1608.34,715.412 1608.9,694.763 1609.46,709.279 1610.02,692.816 1610.57,681.85 1611.13,667.32 1611.69,652.012 1612.25,686.381 1612.81,682.802 1613.37,680.569 1613.93,695.502 1614.49,743.297 1615.05,727.799 1615.61,726.395 1616.17,738.25 1616.73,736.413 1617.29,718.286 1617.84,715.797 1618.4,682.898 1618.96,682.759 1619.52,717.674 1620.08,761.271 1620.64,771.14 1621.2,762.754 1621.76,681.855 1622.32,712.312 1622.88,681.722 1623.44,649.049 1624,680.603 1624.56,698.678 1625.11,682.386 1625.67,682.925 1626.23,650.078 1626.79,664.988 1627.35,613.463 1627.91,584.336 1628.47,592.835 1629.03,563.845 1629.59,587.045 1630.15,593.49 1630.71,597.952 1631.27,600.412 1631.83,622.888 1632.39,624.413 1632.94,640.489 1633.5,644.568 1634.06,632.478 1634.62,668.129 1635.18,683.771 1635.74,637.554 1636.3,639.318 1636.86,644.019 1637.42,645.801 1637.98,663.006 1638.54,631.35 1639.1,652.177 1639.66,650.696 1640.21,681.938 1640.77,684.046 1641.33,715.479 1641.89,731.42 1642.45,779.925 1643.01,777.451 1643.57,803.639 1644.13,796.473 1644.69,773.667 1645.25,786.413 1645.81,781.009 1646.37,760.243 1646.93,756.675 1647.48,738.839 1648.04,718.914 1648.6,702.607 1649.16,701.807 1649.72,701.603 1650.28,702.85 1650.84,685.882 1651.4,702.141 1651.96,700.934 1652.52,701.878 1653.08,703.029 1653.64,699.2 1654.2,700.518 1654.76,682.269 1655.31,670.438 1655.87,703.251 1656.43,720.099 1656.99,781.577 1657.55,760.167 1658.11,802.733 1658.67,783.972 1659.23,760.967 1659.79,727.716 1660.35,712.624 1660.91,743.154 1661.47,739.708 1662.03,737.157 1662.58,767.227 1663.14,766.404 1663.7,729.492 1664.26,759.391 1664.82,773.339 1665.38,732.811 1665.94,764.98 1666.5,730.852 1667.06,760.201 1667.62,772.877 1668.18,766.394 1668.74,727.213 1669.3,713.72 1669.85,697.745 1670.41,668.018 1670.97,686.988 1671.53,703.898 1672.09,673.424 1672.65,659.703 1673.21,664.389 1673.77,684.858 1674.33,635.446 1674.89,651.206 1675.45,638.378 1676.01,612.847 1676.57,600.417 1677.13,605.026 1677.68,588.951 1678.24,643.81 1678.8,625.701 1679.36,693.034 1679.92,697.511 1680.48,682.048 1681.04,679.377 1681.6,700.586 1682.16,731.974 1682.72,714.18 1683.28,761.248 1683.84,744.068 1684.4,789.896 1684.95,772.149 1685.51,769.474 1686.07,731.816 1686.63,711.035 1687.19,692.331 1687.75,690.842 1688.31,689.737 1688.87,690.494 1689.43,706.495 1689.99,704.79 1690.55,673.191 1691.11,644.001 1691.67,648.622 1692.23,619.402 1692.78,640.716 1693.34,627.195 1693.9,613.758 1694.46,583.876 1695.02,602.066 1695.58,622.067 1696.14,623.49 1696.7,577.675 1697.26,584.456 1697.82,570.489 1698.38,560.502 1698.94,549.766 1699.5,571.264 1700.05,624.182 1700.61,629.41 1701.17,650.604 1701.73,637.531 1702.29,641.061 1702.85,658.574 1703.41,639.539 1703.97,640.738 1704.53,642.081 1705.09,644.739 1705.65,648.672 1706.21,601.602 1706.77,604.251 1707.32,634.731 1707.88,639.203 1708.44,623.967 1709,639.878 1709.56,658.605 1710.12,658.684 1710.68,642.379 1711.24,680.618 1711.8,662.014 1712.36,695.884 1712.92,708.732 1713.48,723.903 1714.04,687.583 1714.6,691.4 1715.15,675.896 1715.71,645.395 1716.27,678.219 1716.83,677.137 1717.39,713.119 1717.95,710.221 1718.51,723.723 1719.07,708.241 1719.63,703.495 1720.19,719.878 1720.75,718.774 1721.31,732.586 1721.87,713.112 1722.42,707.931 1722.98,707.139 1723.54,704.923 1724.1,720.202 1724.66,765.574 1725.22,777.157 1725.78,772.378 1726.34,781.824 1726.9,791.291 1727.46,782.047 1728.02,793.981 1728.58,770.964 1729.14,764.645 1729.69,759.903 1730.25,738.645 1730.81,748.541 1731.37,713.265 1731.93,664.168 1732.49,697.661 1733.05,668.053 1733.61,667.544 1734.17,652.468 1734.73,656.676 1735.29,639.449 1735.85,624.834 1736.41,628.234 1736.97,629.249 1737.52,678.785 1738.08,756.52 1738.64,735.907 1739.2,752.801 1739.76,734.215 1740.32,748.012 1740.88,742.615 1741.44,738.791 1742,735.66 1742.56,715.161 1743.12,715.82 1743.68,731.611 1744.24,760.425 1744.79,758.181 1745.35,738.271 1745.91,752.294 1746.47,729.141 1747.03,742.864 1747.59,773.485 1748.15,733.821 1748.71,728.452 1749.27,740.547 1749.83,750.068 1750.39,732.788 1750.95,728.598 1751.51,712.122 1752.06,727.89 1752.62,744.374 1753.18,722.654 1753.74,721.526 1754.3,735.089 1754.86,716.728 1755.42,712.481 1755.98,710.111 1756.54,691.971 1757.1,691.069 1757.66,674.27 1758.22,674.678 1758.78,673.742 1759.34,676.187 1759.89,676.06 1760.45,672.128 1761.01,669.627 1761.57,672.546 1762.13,687.086 1762.69,637.813 1763.25,610.492 1763.81,582.967 1764.37,537.477 1764.93,546.182 1765.49,555.106 1766.05,604.74 1766.61,575.579 1767.16,564.804 1767.72,570.708 1768.28,591.019 1768.84,629.093 1769.4,596.935 1769.96,600.214 1770.52,590.125 1771.08,596.441 1771.64,584.35 1772.2,575.312 1772.76,580.391 1773.32,600.958 1773.88,618.111 1774.43,592.045 1774.99,581.577 1775.55,587.657 1776.11,592.504 1776.67,630.089 1777.23,602.504 1777.79,625.126 1778.35,647.377 1778.91,653.707 1779.47,671.182 1780.03,674.936 1780.59,680.077 1781.15,634.783 1781.71,640.305 1782.26,708.208 1782.82,737.924 1783.38,767.668 1783.94,781.488 1784.5,790.575 1785.06,783.603 1785.62,777.242 1786.18,804.048 1786.74,828.411 1787.3,789.936 1787.86,799.195 1788.42,794.58 1788.98,790.172 1789.53,786.551 1790.09,766.898 1790.65,762.167 1791.21,789.056 1791.77,748.286 1792.33,762.499 1792.89,722.456 1793.45,706.419 1794.01,672.866 1794.57,655.178 1795.13,655.654 1795.69,624.359 1796.25,613.767 1796.8,616.58 1797.36,696.465 1797.92,710.771 1798.48,692.949 1799.04,640.092 1799.6,626.467 1800.16,649.279 1800.72,652.219 1801.28,653.549 1801.84,669.351 1802.4,654.7 1802.96,653.008 1803.52,653.356 1804.08,606.131 1804.63,611.081 1805.19,595.899 1805.75,616.459 1806.31,684.401 1806.87,669.522 1807.43,702.054 1807.99,703.475 1808.55,686.347 1809.11,653.914 1809.67,641.18 1810.23,659.209 1810.79,644.281 1811.35,675.063 1811.9,691.984 1812.46,690.237 1813.02,657.063 1813.58,658.909 1814.14,658.649 1814.7,627.806 1815.26,665.74 1815.82,647.704 1816.38,648.305 1816.94,650.342 1817.5,683.291 1818.06,685.591 1818.62,704.591 1819.18,686.417 1819.73,703.138 1820.29,701.7 1820.85,715.695 1821.41,716.123 1821.97,712.858 1822.53,660.725 1823.09,662.22 1823.65,648.462 1824.21,600.66 1824.77,589.552 1825.33,614.133 1825.89,617.701 1826.45,686.353 1827,668.619 1827.56,682.705 1828.12,667.319 1828.68,682.872 1829.24,684.072 1829.8,651.8 1830.36,640.207 1830.92,646.013 1831.48,633.062 1832.04,654.021 1832.6,656.905 1833.16,628.434 1833.72,628.376 1834.27,617.72 1834.83,619.508 1835.39,635.637 1835.95,653.801 1836.51,655.999 1837.07,658.048 1837.63,643.648 1838.19,567.019 \"/>\n<path clip-path=\"url(#clip063)\" d=\"M720.247 690.021 L720.806 690.021 L721.365 690.021 L721.924 690.021 L722.484 690.021 L723.043 690.021 L723.602 690.021 L724.161 690.021 L724.721 690.021 L725.28 690.021 L725.839 690.021 L726.398 690.021 L726.958 690.021 L727.517 690.021 L728.076 690.021 L728.635 690.021 L729.195 690.021 L729.754 690.021 L730.313 690.021 L730.872 690.021 L731.432 690.021 L731.991 690.021 L732.55 690.021 L733.109 690.021 L733.669 690.021 L734.228 690.021 L734.787 690.021 L735.346 690.021 L735.906 690.021 L736.465 690.021 L737.024 690.021 L737.583 690.021 L738.143 690.021 L738.702 690.021 L739.261 690.021 L739.82 690.021 L740.38 690.021 L740.939 690.021 L741.498 690.021 L742.057 690.021 L742.617 690.021 L743.176 690.021 L743.735 690.021 L744.294 690.021 L744.854 690.021 L745.413 690.021 L745.972 690.021 L746.531 690.021 L747.091 690.021 L747.65 690.021 L748.209 690.021 L748.768 690.021 L749.328 690.021 L749.887 690.021 L750.446 690.021 L751.005 690.021 L751.565 690.021 L752.124 690.021 L752.683 690.021 L753.242 690.021 L753.802 690.021 L754.361 690.021 L754.92 690.021 L755.479 690.021 L756.039 690.021 L756.598 690.021 L757.157 690.021 L757.716 690.021 L758.276 690.021 L758.835 690.021 L759.394 690.021 L759.953 690.021 L760.513 690.021 L761.072 690.021 L761.631 690.021 L762.19 690.021 L762.75 690.021 L763.309 690.021 L763.868 690.021 L764.427 690.021 L764.987 690.021 L765.546 690.021 L766.105 690.021 L766.664 690.021 L767.224 690.021 L767.783 690.021 L768.342 690.021 L768.901 690.021 L769.461 690.021 L770.02 690.021 L770.579 690.021 L771.138 690.021 L771.698 690.021 L772.257 690.021 L772.816 690.021 L773.375 690.021 L773.935 690.021 L774.494 690.021 L775.053 690.021 L775.612 690.021 L776.172 690.021 L776.731 690.021 L777.29 690.021 L777.849 690.021 L778.409 690.021 L778.968 690.021 L779.527 690.021 L780.086 690.021 L780.646 690.021 L781.205 690.021 L781.764 690.021 L782.323 690.021 L782.883 690.021 L783.442 690.021 L784.001 690.021 L784.56 690.021 L785.12 690.021 L785.679 690.021 L786.238 690.021 L786.797 690.021 L787.357 690.021 L787.916 690.021 L788.475 690.021 L789.034 690.021 L789.594 690.021 L790.153 690.021 L790.712 690.021 L791.271 690.021 L791.831 690.021 L792.39 690.021 L792.949 690.021 L793.508 690.021 L794.068 690.021 L794.627 690.021 L795.186 690.021 L795.745 690.021 L796.305 690.021 L796.864 690.021 L797.423 690.021 L797.982 690.021 L798.542 690.021 L799.101 690.021 L799.66 690.021 L800.219 690.021 L800.779 690.021 L801.338 690.021 L801.897 690.021 L802.456 690.021 L803.016 690.021 L803.575 690.021 L804.134 690.021 L804.693 690.021 L805.253 690.021 L805.812 690.021 L806.371 690.021 L806.931 690.021 L807.49 690.021 L808.049 690.021 L808.608 690.021 L809.168 690.021 L809.727 690.021 L810.286 690.021 L810.845 690.021 L811.405 690.021 L811.964 690.021 L812.523 690.021 L813.082 690.021 L813.642 690.021 L814.201 690.021 L814.76 690.021 L815.319 690.021 L815.879 690.021 L816.438 690.021 L816.997 690.021 L817.556 690.021 L818.116 690.021 L818.675 690.021 L819.234 690.021 L819.793 690.021 L820.353 690.021 L820.912 690.021 L821.471 690.021 L822.03 690.021 L822.59 690.021 L823.149 690.021 L823.708 690.021 L824.267 690.021 L824.827 690.021 L825.386 690.021 L825.945 690.021 L826.504 690.021 L827.064 690.021 L827.623 690.021 L828.182 690.021 L828.741 690.021 L829.301 690.021 L829.86 690.021 L830.419 690.021 L830.978 690.021 L831.538 690.021 L832.097 690.021 L832.656 690.021 L833.215 690.021 L833.775 690.021 L834.334 690.021 L834.893 690.021 L835.452 690.021 L836.012 690.021 L836.571 690.021 L837.13 690.021 L837.689 690.021 L838.249 690.021 L838.808 690.021 L839.367 690.021 L839.926 690.021 L840.486 690.021 L841.045 690.021 L841.604 690.021 L842.163 690.021 L842.723 690.021 L843.282 690.021 L843.841 690.021 L844.4 690.021 L844.96 690.021 L845.519 690.021 L846.078 690.021 L846.637 690.021 L847.197 690.021 L847.756 690.021 L848.315 690.021 L848.874 690.021 L849.434 690.021 L849.993 690.021 L850.552 690.021 L851.111 690.021 L851.671 690.021 L852.23 690.021 L852.789 690.021 L853.348 690.021 L853.908 690.021 L854.467 690.021 L855.026 690.021 L855.585 690.021 L856.145 690.021 L856.704 690.021 L857.263 690.021 L857.822 690.021 L858.382 690.021 L858.941 690.021 L859.5 690.021 L860.059 690.021 L860.619 690.021 L861.178 690.021 L861.737 690.021 L862.296 690.021 L862.856 690.021 L863.415 690.021 L863.974 690.021 L864.533 690.021 L865.093 690.021 L865.652 690.021 L866.211 690.021 L866.77 690.021 L867.33 690.021 L867.889 690.021 L868.448 690.021 L869.007 690.021 L869.567 690.021 L870.126 690.021 L870.685 690.021 L871.244 690.021 L871.804 690.021 L872.363 690.021 L872.922 690.021 L873.481 690.021 L874.041 690.021 L874.6 690.021 L875.159 690.021 L875.718 690.021 L876.278 690.021 L876.837 690.021 L877.396 690.021 L877.955 690.021 L878.515 690.021 L879.074 690.021 L879.633 690.021 L880.192 690.021 L880.752 690.021 L881.311 690.021 L881.87 690.021 L882.429 690.021 L882.989 690.021 L883.548 690.021 L884.107 690.021 L884.666 690.021 L885.226 690.021 L885.785 690.021 L886.344 690.021 L886.903 690.021 L887.463 690.021 L888.022 690.021 L888.581 690.021 L889.14 690.021 L889.7 690.021 L890.259 690.021 L890.818 690.021 L891.377 690.021 L891.937 690.021 L892.496 690.021 L893.055 690.021 L893.614 690.021 L894.174 690.021 L894.733 690.021 L895.292 690.021 L895.851 690.021 L896.411 690.021 L896.97 690.021 L897.529 690.021 L898.088 690.021 L898.648 690.021 L899.207 690.021 L899.766 690.021 L900.325 690.021 L900.885 690.021 L901.444 690.021 L902.003 690.021 L902.562 690.021 L903.122 690.021 L903.681 690.021 L904.24 690.021 L904.799 690.021 L905.359 690.021 L905.918 690.021 L906.477 690.021 L907.036 690.021 L907.596 690.021 L908.155 690.021 L908.714 690.021 L909.273 690.021 L909.833 690.021 L910.392 690.021 L910.951 690.021 L911.51 690.021 L912.07 690.021 L912.629 690.021 L913.188 690.021 L913.747 690.021 L914.307 690.021 L914.866 690.021 L915.425 690.021 L915.984 690.021 L916.544 690.021 L917.103 690.021 L917.662 690.021 L918.221 690.021 L918.781 690.021 L919.34 690.021 L919.899 690.021 L920.458 690.021 L921.018 690.021 L921.577 690.021 L922.136 690.021 L922.695 690.021 L923.255 690.021 L923.814 690.021 L924.373 690.021 L924.932 690.021 L925.492 690.021 L926.051 690.021 L926.61 690.021 L927.169 690.021 L927.729 690.021 L928.288 690.021 L928.847 690.021 L929.406 690.021 L929.966 690.021 L930.525 690.021 L931.084 690.021 L931.644 690.021 L932.203 690.021 L932.762 690.021 L933.321 690.021 L933.881 690.021 L934.44 690.021 L934.999 690.021 L935.558 690.021 L936.118 690.021 L936.677 690.021 L937.236 690.021 L937.795 690.021 L938.355 690.021 L938.914 690.021 L939.473 690.021 L940.032 690.021 L940.592 690.021 L941.151 690.021 L941.71 690.021 L942.269 690.021 L942.829 690.021 L943.388 690.021 L943.947 690.021 L944.506 690.021 L945.066 690.021 L945.625 690.021 L946.184 690.021 L946.743 690.021 L947.303 690.021 L947.862 690.021 L948.421 690.021 L948.98 690.021 L949.54 690.021 L950.099 690.021 L950.658 690.021 L951.217 690.021 L951.777 690.021 L952.336 690.021 L952.895 690.021 L953.454 690.021 L954.014 690.021 L954.573 690.021 L955.132 690.021 L955.691 690.021 L956.251 690.021 L956.81 690.021 L957.369 690.021 L957.928 690.021 L958.488 690.021 L959.047 690.021 L959.606 690.021 L960.165 690.021 L960.725 690.021 L961.284 690.021 L961.843 690.021 L962.402 690.021 L962.962 690.021 L963.521 690.021 L964.08 690.021 L964.639 690.021 L965.199 690.021 L965.758 690.021 L966.317 690.021 L966.876 690.021 L967.436 690.021 L967.995 690.021 L968.554 690.021 L969.113 690.021 L969.673 690.021 L970.232 690.021 L970.791 690.021 L971.35 690.021 L971.91 690.021 L972.469 690.021 L973.028 690.021 L973.587 690.021 L974.147 690.021 L974.706 690.021 L975.265 690.021 L975.824 690.021 L976.384 690.021 L976.943 690.021 L977.502 690.021 L978.061 690.021 L978.621 690.021 L979.18 690.021 L979.739 690.021 L980.298 690.021 L980.858 690.021 L981.417 690.021 L981.976 690.021 L982.535 690.021 L983.095 690.021 L983.654 690.021 L984.213 690.021 L984.772 690.021 L985.332 690.021 L985.891 690.021 L986.45 690.021 L987.009 690.021 L987.569 690.021 L988.128 690.021 L988.687 690.021 L989.246 690.021 L989.806 690.021 L990.365 690.021 L990.924 690.021 L991.483 690.021 L992.043 690.021 L992.602 690.021 L993.161 690.021 L993.72 690.021 L994.28 690.021 L994.839 690.021 L995.398 690.021 L995.957 690.021 L996.517 690.021 L997.076 690.021 L997.635 690.021 L998.194 690.021 L998.754 690.021 L999.313 690.021 L999.872 690.021 L1000.43 690.021 L1000.99 690.021 L1001.55 690.021 L1002.11 690.021 L1002.67 690.021 L1003.23 690.021 L1003.79 690.021 L1004.35 690.021 L1004.91 690.021 L1005.46 690.021 L1006.02 690.021 L1006.58 690.021 L1007.14 690.021 L1007.7 690.021 L1008.26 690.021 L1008.82 690.021 L1009.38 690.021 L1009.94 690.021 L1010.5 690.021 L1011.06 690.021 L1011.62 690.021 L1012.18 690.021 L1012.73 690.021 L1013.29 690.021 L1013.85 690.021 L1014.41 690.021 L1014.97 690.021 L1015.53 690.021 L1016.09 690.021 L1016.65 690.021 L1017.21 690.021 L1017.77 690.021 L1018.33 690.021 L1018.89 690.021 L1019.45 690.021 L1020.01 690.021 L1020.56 690.021 L1021.12 690.021 L1021.68 690.021 L1022.24 690.021 L1022.8 690.021 L1023.36 690.021 L1023.92 690.021 L1024.48 690.021 L1025.04 690.021 L1025.6 690.021 L1026.16 690.021 L1026.72 690.021 L1027.28 690.021 L1027.83 690.021 L1028.39 690.021 L1028.95 690.021 L1029.51 690.021 L1030.07 690.021 L1030.63 690.021 L1031.19 690.021 L1031.75 690.021 L1032.31 690.021 L1032.87 690.021 L1033.43 690.021 L1033.99 690.021 L1034.55 690.021 L1035.1 690.021 L1035.66 690.021 L1036.22 690.021 L1036.78 690.021 L1037.34 690.021 L1037.9 690.021 L1038.46 690.021 L1039.02 690.021 L1039.58 690.021 L1040.14 690.021 L1040.7 690.021 L1041.26 690.021 L1041.82 690.021 L1042.38 690.021 L1042.93 690.021 L1043.49 690.021 L1044.05 690.021 L1044.61 690.021 L1045.17 690.021 L1045.73 690.021 L1046.29 690.021 L1046.85 690.021 L1047.41 690.021 L1047.97 690.021 L1048.53 690.021 L1049.09 690.021 L1049.65 690.021 L1050.2 690.021 L1050.76 690.021 L1051.32 690.021 L1051.88 690.021 L1052.44 690.021 L1053 690.021 L1053.56 690.021 L1054.12 690.021 L1054.68 690.021 L1055.24 690.021 L1055.8 690.021 L1056.36 690.021 L1056.92 690.021 L1057.48 690.021 L1058.03 690.021 L1058.59 690.021 L1059.15 690.021 L1059.71 690.021 L1060.27 690.021 L1060.83 690.021 L1061.39 690.021 L1061.95 690.021 L1062.51 690.021 L1063.07 690.021 L1063.63 690.021 L1064.19 690.021 L1064.75 690.021 L1065.3 690.021 L1065.86 690.021 L1066.42 690.021 L1066.98 690.021 L1067.54 690.021 L1068.1 690.021 L1068.66 690.021 L1069.22 690.021 L1069.78 690.021 L1070.34 690.021 L1070.9 690.021 L1071.46 690.021 L1072.02 690.021 L1072.57 690.021 L1073.13 690.021 L1073.69 690.021 L1074.25 690.021 L1074.81 690.021 L1075.37 690.021 L1075.93 690.021 L1076.49 690.021 L1077.05 690.021 L1077.61 690.021 L1078.17 690.021 L1078.73 690.021 L1079.29 690.021 L1079.85 690.021 L1080.4 690.021 L1080.96 690.021 L1081.52 690.021 L1082.08 690.021 L1082.64 690.021 L1083.2 690.021 L1083.76 690.021 L1084.32 690.021 L1084.88 690.021 L1085.44 690.021 L1086 690.021 L1086.56 690.021 L1087.12 690.021 L1087.67 690.021 L1088.23 690.021 L1088.79 690.021 L1089.35 690.021 L1089.91 690.021 L1090.47 690.021 L1091.03 690.021 L1091.59 690.021 L1092.15 690.021 L1092.71 690.021 L1093.27 690.021 L1093.83 690.021 L1094.39 690.021 L1094.94 690.021 L1095.5 690.021 L1096.06 690.021 L1096.62 690.021 L1097.18 690.021 L1097.74 690.021 L1098.3 690.021 L1098.86 690.021 L1099.42 690.021 L1099.98 690.021 L1100.54 690.021 L1101.1 690.021 L1101.66 690.021 L1102.22 690.021 L1102.77 690.021 L1103.33 690.021 L1103.89 690.021 L1104.45 690.021 L1105.01 690.021 L1105.57 690.021 L1106.13 690.021 L1106.69 690.021 L1107.25 690.021 L1107.81 690.021 L1108.37 690.021 L1108.93 690.021 L1109.49 690.021 L1110.04 690.021 L1110.6 690.021 L1111.16 690.021 L1111.72 690.021 L1112.28 690.021 L1112.84 690.021 L1113.4 690.021 L1113.96 690.021 L1114.52 690.021 L1115.08 690.021 L1115.64 690.021 L1116.2 690.021 L1116.76 690.021 L1117.31 690.021 L1117.87 690.021 L1118.43 690.021 L1118.99 690.021 L1119.55 690.021 L1120.11 690.021 L1120.67 690.021 L1121.23 690.021 L1121.79 690.021 L1122.35 690.021 L1122.91 690.021 L1123.47 690.021 L1124.03 690.021 L1124.59 690.021 L1125.14 690.021 L1125.7 690.021 L1126.26 690.021 L1126.82 690.021 L1127.38 690.021 L1127.94 690.021 L1128.5 690.021 L1129.06 690.021 L1129.62 690.021 L1130.18 690.021 L1130.74 690.021 L1131.3 690.021 L1131.86 690.021 L1132.41 690.021 L1132.97 690.021 L1133.53 690.021 L1134.09 690.021 L1134.65 690.021 L1135.21 690.021 L1135.77 690.021 L1136.33 690.021 L1136.89 690.021 L1137.45 690.021 L1138.01 690.021 L1138.57 690.021 L1139.13 690.021 L1139.68 690.021 L1140.24 690.021 L1140.8 690.021 L1141.36 690.021 L1141.92 690.021 L1142.48 690.021 L1143.04 690.021 L1143.6 690.021 L1144.16 690.021 L1144.72 690.021 L1145.28 690.021 L1145.84 690.021 L1146.4 690.021 L1146.96 690.021 L1147.51 690.021 L1148.07 690.021 L1148.63 690.021 L1149.19 690.021 L1149.75 690.021 L1150.31 690.021 L1150.87 690.021 L1151.43 690.021 L1151.99 690.021 L1152.55 690.021 L1153.11 690.021 L1153.67 690.021 L1154.23 690.021 L1154.78 690.021 L1155.34 690.021 L1155.9 690.021 L1156.46 690.021 L1157.02 690.021 L1157.58 690.021 L1158.14 690.021 L1158.7 690.021 L1159.26 690.021 L1159.82 690.021 L1160.38 690.021 L1160.94 690.021 L1161.5 690.021 L1162.05 690.021 L1162.61 690.021 L1163.17 690.021 L1163.73 690.021 L1164.29 690.021 L1164.85 690.021 L1165.41 690.021 L1165.97 690.021 L1166.53 690.021 L1167.09 690.021 L1167.65 690.021 L1168.21 690.021 L1168.77 690.021 L1169.33 690.021 L1169.88 690.021 L1170.44 690.021 L1171 690.021 L1171.56 690.021 L1172.12 690.021 L1172.68 690.021 L1173.24 690.021 L1173.8 690.021 L1174.36 690.021 L1174.92 690.021 L1175.48 690.021 L1176.04 690.021 L1176.6 690.021 L1177.15 690.021 L1177.71 690.021 L1178.27 690.021 L1178.83 690.021 L1179.39 690.021 L1179.95 690.021 L1180.51 690.021 L1181.07 690.021 L1181.63 690.021 L1182.19 690.021 L1182.75 690.021 L1183.31 690.021 L1183.87 690.021 L1184.43 690.021 L1184.98 690.021 L1185.54 690.021 L1186.1 690.021 L1186.66 690.021 L1187.22 690.021 L1187.78 690.021 L1188.34 690.021 L1188.9 690.021 L1189.46 690.021 L1190.02 690.021 L1190.58 690.021 L1191.14 690.021 L1191.7 690.021 L1192.25 690.021 L1192.81 690.021 L1193.37 690.021 L1193.93 690.021 L1194.49 690.021 L1195.05 690.021 L1195.61 690.021 L1196.17 690.021 L1196.73 690.021 L1197.29 690.021 L1197.85 690.021 L1198.41 690.021 L1198.97 690.021 L1199.52 690.021 L1200.08 690.021 L1200.64 690.021 L1201.2 690.021 L1201.76 690.021 L1202.32 690.021 L1202.88 690.021 L1203.44 690.021 L1204 690.021 L1204.56 690.021 L1205.12 690.021 L1205.68 690.021 L1206.24 690.021 L1206.8 690.021 L1207.35 690.021 L1207.91 690.021 L1208.47 690.021 L1209.03 690.021 L1209.59 690.021 L1210.15 690.021 L1210.71 690.021 L1211.27 690.021 L1211.83 690.021 L1212.39 690.021 L1212.95 690.021 L1213.51 690.021 L1214.07 690.021 L1214.62 690.021 L1215.18 690.021 L1215.74 690.021 L1216.3 690.021 L1216.86 690.021 L1217.42 690.021 L1217.98 690.021 L1218.54 690.021 L1219.1 690.021 L1219.66 690.021 L1220.22 690.021 L1220.78 690.021 L1221.34 690.021 L1221.89 690.021 L1222.45 690.021 L1223.01 690.021 L1223.57 690.021 L1224.13 690.021 L1224.69 690.021 L1225.25 690.021 L1225.81 690.021 L1226.37 690.021 L1226.93 690.021 L1227.49 690.021 L1228.05 690.021 L1228.61 690.021 L1229.17 690.021 L1229.72 690.021 L1230.28 690.021 L1230.84 690.021 L1231.4 690.021 L1231.96 690.021 L1232.52 690.021 L1233.08 690.021 L1233.64 690.021 L1234.2 690.021 L1234.76 690.021 L1235.32 690.021 L1235.88 690.021 L1236.44 690.021 L1236.99 690.021 L1237.55 690.021 L1238.11 690.021 L1238.67 690.021 L1239.23 690.021 L1239.79 690.021 L1240.35 690.021 L1240.91 690.021 L1241.47 690.021 L1242.03 690.021 L1242.59 690.021 L1243.15 690.021 L1243.71 690.021 L1244.26 690.021 L1244.82 690.021 L1245.38 690.021 L1245.94 690.021 L1246.5 690.021 L1247.06 690.021 L1247.62 690.021 L1248.18 690.021 L1248.74 690.021 L1249.3 690.021 L1249.86 690.021 L1250.42 690.021 L1250.98 690.021 L1251.54 690.021 L1252.09 690.021 L1252.65 690.021 L1253.21 690.021 L1253.77 690.021 L1254.33 690.021 L1254.89 690.021 L1255.45 690.021 L1256.01 690.021 L1256.57 690.021 L1257.13 690.021 L1257.69 690.021 L1258.25 690.021 L1258.81 690.021 L1259.36 690.021 L1259.92 690.021 L1260.48 690.021 L1261.04 690.021 L1261.6 690.021 L1262.16 690.021 L1262.72 690.021 L1263.28 690.021 L1263.84 690.021 L1264.4 690.021 L1264.96 690.021 L1265.52 690.021 L1266.08 690.021 L1266.63 690.021 L1267.19 690.021 L1267.75 690.021 L1268.31 690.021 L1268.87 690.021 L1269.43 690.021 L1269.99 690.021 L1270.55 690.021 L1271.11 690.021 L1271.67 690.021 L1272.23 690.021 L1272.79 690.021 L1273.35 690.021 L1273.91 690.021 L1274.46 690.021 L1275.02 690.021 L1275.58 690.021 L1276.14 690.021 L1276.7 690.021 L1277.26 690.021 L1277.82 690.021 L1278.38 690.021 L1278.94 690.021 L1279.5 690.021 L1280.06 690.021 L1280.62 690.021 L1281.18 690.021 L1281.73 690.021 L1282.29 690.021 L1282.85 690.021 L1283.41 690.021 L1283.97 690.021 L1284.53 690.021 L1285.09 690.021 L1285.65 690.021 L1286.21 690.021 L1286.77 690.021 L1287.33 690.021 L1287.89 690.021 L1288.45 690.021 L1289 690.021 L1289.56 690.021 L1290.12 690.021 L1290.68 690.021 L1291.24 690.021 L1291.8 690.021 L1292.36 690.021 L1292.92 690.021 L1293.48 690.021 L1294.04 690.021 L1294.6 690.021 L1295.16 690.021 L1295.72 690.021 L1296.28 690.021 L1296.83 690.021 L1297.39 690.021 L1297.95 690.021 L1298.51 690.021 L1299.07 690.021 L1299.63 690.021 L1300.19 690.021 L1300.75 690.021 L1301.31 690.021 L1301.87 690.021 L1302.43 690.021 L1302.99 690.021 L1303.55 690.021 L1304.1 690.021 L1304.66 690.021 L1305.22 690.021 L1305.78 690.021 L1306.34 690.021 L1306.9 690.021 L1307.46 690.021 L1308.02 690.021 L1308.58 690.021 L1309.14 690.021 L1309.7 690.021 L1310.26 690.021 L1310.82 690.021 L1311.38 690.021 L1311.93 690.021 L1312.49 690.021 L1313.05 690.021 L1313.61 690.021 L1314.17 690.021 L1314.73 690.021 L1315.29 690.021 L1315.85 690.021 L1316.41 690.021 L1316.97 690.021 L1317.53 690.021 L1318.09 690.021 L1318.65 690.021 L1319.2 690.021 L1319.76 690.021 L1320.32 690.021 L1320.88 690.021 L1321.44 690.021 L1322 690.021 L1322.56 690.021 L1323.12 690.021 L1323.68 690.021 L1324.24 690.021 L1324.8 690.021 L1325.36 690.021 L1325.92 690.021 L1326.47 690.021 L1327.03 690.021 L1327.59 690.021 L1328.15 690.021 L1328.71 690.021 L1329.27 690.021 L1329.83 690.021 L1330.39 690.021 L1330.95 690.021 L1331.51 690.021 L1332.07 690.021 L1332.63 690.021 L1333.19 690.021 L1333.75 690.021 L1334.3 690.021 L1334.86 690.021 L1335.42 690.021 L1335.98 690.021 L1336.54 690.021 L1337.1 690.021 L1337.66 690.021 L1338.22 690.021 L1338.78 690.021 L1339.34 690.021 L1339.9 690.021 L1340.46 690.021 L1341.02 690.021 L1341.57 690.021 L1342.13 690.021 L1342.69 690.021 L1343.25 690.021 L1343.81 690.021 L1344.37 690.021 L1344.93 690.021 L1345.49 690.021 L1346.05 690.021 L1346.61 690.021 L1347.17 690.021 L1347.73 690.021 L1348.29 690.021 L1348.84 690.021 L1349.4 690.021 L1349.96 690.021 L1350.52 690.021 L1351.08 690.021 L1351.64 690.021 L1352.2 690.021 L1352.76 690.021 L1353.32 690.021 L1353.88 690.021 L1354.44 690.021 L1355 690.021 L1355.56 690.021 L1356.12 690.021 L1356.67 690.021 L1357.23 690.021 L1357.79 690.021 L1358.35 690.021 L1358.91 690.021 L1359.47 690.021 L1360.03 690.021 L1360.59 690.021 L1361.15 690.021 L1361.71 690.021 L1362.27 690.021 L1362.83 690.021 L1363.39 690.021 L1363.94 690.021 L1364.5 690.021 L1365.06 690.021 L1365.62 690.021 L1366.18 690.021 L1366.74 690.021 L1367.3 690.021 L1367.86 690.021 L1368.42 690.021 L1368.98 690.021 L1369.54 690.021 L1370.1 690.021 L1370.66 690.021 L1371.21 690.021 L1371.77 690.021 L1372.33 690.021 L1372.89 690.021 L1373.45 690.021 L1374.01 690.021 L1374.57 690.021 L1375.13 690.021 L1375.69 690.021 L1376.25 690.021 L1376.81 690.021 L1377.37 690.021 L1377.93 690.021 L1378.49 690.021 L1379.04 690.021 L1379.6 690.021 L1380.16 690.021 L1380.72 690.021 L1381.28 690.021 L1381.84 690.021 L1382.4 690.021 L1382.96 690.021 L1383.52 690.021 L1384.08 690.021 L1384.64 690.021 L1385.2 690.021 L1385.76 690.021 L1386.31 690.021 L1386.87 690.021 L1387.43 690.021 L1387.99 690.021 L1388.55 690.021 L1389.11 690.021 L1389.67 690.021 L1390.23 690.021 L1390.79 690.021 L1391.35 690.021 L1391.91 690.021 L1392.47 690.021 L1393.03 690.021 L1393.58 690.021 L1394.14 690.021 L1394.7 690.021 L1395.26 690.021 L1395.82 690.021 L1396.38 690.021 L1396.94 690.021 L1397.5 690.021 L1398.06 690.021 L1398.62 690.021 L1399.18 690.021 L1399.74 690.021 L1400.3 690.021 L1400.86 690.021 L1401.41 690.021 L1401.97 690.021 L1402.53 690.021 L1403.09 690.021 L1403.65 690.021 L1404.21 690.021 L1404.77 690.021 L1405.33 690.021 L1405.89 690.021 L1406.45 690.021 L1407.01 690.021 L1407.57 690.021 L1408.13 690.021 L1408.68 690.021 L1409.24 690.021 L1409.8 690.021 L1410.36 690.021 L1410.92 690.021 L1411.48 690.021 L1412.04 690.021 L1412.6 690.021 L1413.16 690.021 L1413.72 690.021 L1414.28 690.021 L1414.84 690.021 L1415.4 690.021 L1415.95 690.021 L1416.51 690.021 L1417.07 690.021 L1417.63 690.021 L1418.19 690.021 L1418.75 690.021 L1419.31 690.021 L1419.87 690.021 L1420.43 690.021 L1420.99 690.021 L1421.55 690.021 L1422.11 690.021 L1422.67 690.021 L1423.23 690.021 L1423.78 690.021 L1424.34 690.021 L1424.9 690.021 L1425.46 690.021 L1426.02 690.021 L1426.58 690.021 L1427.14 690.021 L1427.7 690.021 L1428.26 690.021 L1428.82 690.021 L1429.38 690.021 L1429.94 690.021 L1430.5 690.021 L1431.05 690.021 L1431.61 690.021 L1432.17 690.021 L1432.73 690.021 L1433.29 690.021 L1433.85 690.021 L1434.41 690.021 L1434.97 690.021 L1435.53 690.021 L1436.09 690.021 L1436.65 690.021 L1437.21 690.021 L1437.77 690.021 L1438.33 690.021 L1438.88 690.021 L1439.44 690.021 L1440 690.021 L1440.56 690.021 L1441.12 690.021 L1441.68 690.021 L1442.24 690.021 L1442.8 690.021 L1443.36 690.021 L1443.92 690.021 L1444.48 690.021 L1445.04 690.021 L1445.6 690.021 L1446.15 690.021 L1446.71 690.021 L1447.27 690.021 L1447.83 690.021 L1448.39 690.021 L1448.95 690.021 L1449.51 690.021 L1450.07 690.021 L1450.63 690.021 L1451.19 690.021 L1451.75 690.021 L1452.31 690.021 L1452.87 690.021 L1453.42 690.021 L1453.98 690.021 L1454.54 690.021 L1455.1 690.021 L1455.66 690.021 L1456.22 690.021 L1456.78 690.021 L1457.34 690.021 L1457.9 690.021 L1458.46 690.021 L1459.02 690.021 L1459.58 690.021 L1460.14 690.021 L1460.7 690.021 L1461.25 690.021 L1461.81 690.021 L1462.37 690.021 L1462.93 690.021 L1463.49 690.021 L1464.05 690.021 L1464.61 690.021 L1465.17 690.021 L1465.73 690.021 L1466.29 690.021 L1466.85 690.021 L1467.41 690.021 L1467.97 690.021 L1468.52 690.021 L1469.08 690.021 L1469.64 690.021 L1470.2 690.021 L1470.76 690.021 L1471.32 690.021 L1471.88 690.021 L1472.44 690.021 L1473 690.021 L1473.56 690.021 L1474.12 690.021 L1474.68 690.021 L1475.24 690.021 L1475.79 690.021 L1476.35 690.021 L1476.91 690.021 L1477.47 690.021 L1478.03 690.021 L1478.59 690.021 L1479.15 690.021 L1479.71 690.021 L1480.27 690.021 L1480.83 690.021 L1481.39 690.021 L1481.95 690.021 L1482.51 690.021 L1483.07 690.021 L1483.62 690.021 L1484.18 690.021 L1484.74 690.021 L1485.3 690.021 L1485.86 690.021 L1486.42 690.021 L1486.98 690.021 L1487.54 690.021 L1488.1 690.021 L1488.66 690.021 L1489.22 690.021 L1489.78 690.021 L1490.34 690.021 L1490.89 690.021 L1491.45 690.021 L1492.01 690.021 L1492.57 690.021 L1493.13 690.021 L1493.69 690.021 L1494.25 690.021 L1494.81 690.021 L1495.37 690.021 L1495.93 690.021 L1496.49 690.021 L1497.05 690.021 L1497.61 690.021 L1498.16 690.021 L1498.72 690.021 L1499.28 690.021 L1499.84 690.021 L1500.4 690.021 L1500.96 690.021 L1501.52 690.021 L1502.08 690.021 L1502.64 690.021 L1503.2 690.021 L1503.76 690.021 L1504.32 690.021 L1504.88 690.021 L1505.44 690.021 L1505.99 690.021 L1506.55 690.021 L1507.11 690.021 L1507.67 690.021 L1508.23 690.021 L1508.79 690.021 L1509.35 690.021 L1509.91 690.021 L1510.47 690.021 L1511.03 690.021 L1511.59 690.021 L1512.15 690.021 L1512.71 690.021 L1513.26 690.021 L1513.82 690.021 L1514.38 690.021 L1514.94 690.021 L1515.5 690.021 L1516.06 690.021 L1516.62 690.021 L1517.18 690.021 L1517.74 690.021 L1518.3 690.021 L1518.86 690.021 L1519.42 690.021 L1519.98 690.021 L1520.53 690.021 L1521.09 690.021 L1521.65 690.021 L1522.21 690.021 L1522.77 690.021 L1523.33 690.021 L1523.89 690.021 L1524.45 690.021 L1525.01 690.021 L1525.57 690.021 L1526.13 690.021 L1526.69 690.021 L1527.25 690.021 L1527.81 690.021 L1528.36 690.021 L1528.92 690.021 L1529.48 690.021 L1530.04 690.021 L1530.6 690.021 L1531.16 690.021 L1531.72 690.021 L1532.28 690.021 L1532.84 690.021 L1533.4 690.021 L1533.96 690.021 L1534.52 690.021 L1535.08 690.021 L1535.63 690.021 L1536.19 690.021 L1536.75 690.021 L1537.31 690.021 L1537.87 690.021 L1538.43 690.021 L1538.99 690.021 L1539.55 690.021 L1540.11 690.021 L1540.67 690.021 L1541.23 690.021 L1541.79 690.021 L1542.35 690.021 L1542.9 690.021 L1543.46 690.021 L1544.02 690.021 L1544.58 690.021 L1545.14 690.021 L1545.7 690.021 L1546.26 690.021 L1546.82 690.021 L1547.38 690.021 L1547.94 690.021 L1548.5 690.021 L1549.06 690.021 L1549.62 690.021 L1550.18 690.021 L1550.73 690.021 L1551.29 690.021 L1551.85 690.021 L1552.41 690.021 L1552.97 690.021 L1553.53 690.021 L1554.09 690.021 L1554.65 690.021 L1555.21 690.021 L1555.77 690.021 L1556.33 690.021 L1556.89 690.021 L1557.45 690.021 L1558 690.021 L1558.56 690.021 L1559.12 690.021 L1559.68 690.021 L1560.24 690.021 L1560.8 690.021 L1561.36 690.021 L1561.92 690.021 L1562.48 690.021 L1563.04 690.021 L1563.6 690.021 L1564.16 690.021 L1564.72 690.021 L1565.28 690.021 L1565.83 690.021 L1566.39 690.021 L1566.95 690.021 L1567.51 690.021 L1568.07 690.021 L1568.63 690.021 L1569.19 690.021 L1569.75 690.021 L1570.31 690.021 L1570.87 690.021 L1571.43 690.021 L1571.99 690.021 L1572.55 690.021 L1573.1 690.021 L1573.66 690.021 L1574.22 690.021 L1574.78 690.021 L1575.34 690.021 L1575.9 690.021 L1576.46 690.021 L1577.02 690.021 L1577.58 690.021 L1578.14 690.021 L1578.7 690.021 L1579.26 690.021 L1579.82 690.021 L1580.37 690.021 L1580.93 690.021 L1581.49 690.021 L1582.05 690.021 L1582.61 690.021 L1583.17 690.021 L1583.73 690.021 L1584.29 690.021 L1584.85 690.021 L1585.41 690.021 L1585.97 690.021 L1586.53 690.021 L1587.09 690.021 L1587.65 690.021 L1588.2 690.021 L1588.76 690.021 L1589.32 690.021 L1589.88 690.021 L1590.44 690.021 L1591 690.021 L1591.56 690.021 L1592.12 690.021 L1592.68 690.021 L1593.24 690.021 L1593.8 690.021 L1594.36 690.021 L1594.92 690.021 L1595.47 690.021 L1596.03 690.021 L1596.59 690.021 L1597.15 690.021 L1597.71 690.021 L1598.27 690.021 L1598.83 690.021 L1599.39 690.021 L1599.95 690.021 L1600.51 690.021 L1601.07 690.021 L1601.63 690.021 L1602.19 690.021 L1602.74 690.021 L1603.3 690.021 L1603.86 690.021 L1604.42 690.021 L1604.98 690.021 L1605.54 690.021 L1606.1 690.021 L1606.66 690.021 L1607.22 690.021 L1607.78 690.021 L1608.34 690.021 L1608.9 690.021 L1609.46 690.021 L1610.02 690.021 L1610.57 690.021 L1611.13 690.021 L1611.69 690.021 L1612.25 690.021 L1612.81 690.021 L1613.37 690.021 L1613.93 690.021 L1614.49 690.021 L1615.05 690.021 L1615.61 690.021 L1616.17 690.021 L1616.73 690.021 L1617.29 690.021 L1617.84 690.021 L1618.4 690.021 L1618.96 690.021 L1619.52 690.021 L1620.08 690.021 L1620.64 690.021 L1621.2 690.021 L1621.76 690.021 L1622.32 690.021 L1622.88 690.021 L1623.44 690.021 L1624 690.021 L1624.56 690.021 L1625.11 690.021 L1625.67 690.021 L1626.23 690.021 L1626.79 690.021 L1627.35 690.021 L1627.91 690.021 L1628.47 690.021 L1629.03 690.021 L1629.59 690.021 L1630.15 690.021 L1630.71 690.021 L1631.27 690.021 L1631.83 690.021 L1632.39 690.021 L1632.94 690.021 L1633.5 690.021 L1634.06 690.021 L1634.62 690.021 L1635.18 690.021 L1635.74 690.021 L1636.3 690.021 L1636.86 690.021 L1637.42 690.021 L1637.98 690.021 L1638.54 690.021 L1639.1 690.021 L1639.66 690.021 L1640.21 690.021 L1640.77 690.021 L1641.33 690.021 L1641.89 690.021 L1642.45 690.021 L1643.01 690.021 L1643.57 690.021 L1644.13 690.021 L1644.69 690.021 L1645.25 690.021 L1645.81 690.021 L1646.37 690.021 L1646.93 690.021 L1647.48 690.021 L1648.04 690.021 L1648.6 690.021 L1649.16 690.021 L1649.72 690.021 L1650.28 690.021 L1650.84 690.021 L1651.4 690.021 L1651.96 690.021 L1652.52 690.021 L1653.08 690.021 L1653.64 690.021 L1654.2 690.021 L1654.76 690.021 L1655.31 690.021 L1655.87 690.021 L1656.43 690.021 L1656.99 690.021 L1657.55 690.021 L1658.11 690.021 L1658.67 690.021 L1659.23 690.021 L1659.79 690.021 L1660.35 690.021 L1660.91 690.021 L1661.47 690.021 L1662.03 690.021 L1662.58 690.021 L1663.14 690.021 L1663.7 690.021 L1664.26 690.021 L1664.82 690.021 L1665.38 690.021 L1665.94 690.021 L1666.5 690.021 L1667.06 690.021 L1667.62 690.021 L1668.18 690.021 L1668.74 690.021 L1669.3 690.021 L1669.85 690.021 L1670.41 690.021 L1670.97 690.021 L1671.53 690.021 L1672.09 690.021 L1672.65 690.021 L1673.21 690.021 L1673.77 690.021 L1674.33 690.021 L1674.89 690.021 L1675.45 690.021 L1676.01 690.021 L1676.57 690.021 L1677.13 690.021 L1677.68 690.021 L1678.24 690.021 L1678.8 690.021 L1679.36 690.021 L1679.92 690.021 L1680.48 690.021 L1681.04 690.021 L1681.6 690.021 L1682.16 690.021 L1682.72 690.021 L1683.28 690.021 L1683.84 690.021 L1684.4 690.021 L1684.95 690.021 L1685.51 690.021 L1686.07 690.021 L1686.63 690.021 L1687.19 690.021 L1687.75 690.021 L1688.31 690.021 L1688.87 690.021 L1689.43 690.021 L1689.99 690.021 L1690.55 690.021 L1691.11 690.021 L1691.67 690.021 L1692.23 690.021 L1692.78 690.021 L1693.34 690.021 L1693.9 690.021 L1694.46 690.021 L1695.02 690.021 L1695.58 690.021 L1696.14 690.021 L1696.7 690.021 L1697.26 690.021 L1697.82 690.021 L1698.38 690.021 L1698.94 690.021 L1699.5 690.021 L1700.05 690.021 L1700.61 690.021 L1701.17 690.021 L1701.73 690.021 L1702.29 690.021 L1702.85 690.021 L1703.41 690.021 L1703.97 690.021 L1704.53 690.021 L1705.09 690.021 L1705.65 690.021 L1706.21 690.021 L1706.77 690.021 L1707.32 690.021 L1707.88 690.021 L1708.44 690.021 L1709 690.021 L1709.56 690.021 L1710.12 690.021 L1710.68 690.021 L1711.24 690.021 L1711.8 690.021 L1712.36 690.021 L1712.92 690.021 L1713.48 690.021 L1714.04 690.021 L1714.6 690.021 L1715.15 690.021 L1715.71 690.021 L1716.27 690.021 L1716.83 690.021 L1717.39 690.021 L1717.95 690.021 L1718.51 690.021 L1719.07 690.021 L1719.63 690.021 L1720.19 690.021 L1720.75 690.021 L1721.31 690.021 L1721.87 690.021 L1722.42 690.021 L1722.98 690.021 L1723.54 690.021 L1724.1 690.021 L1724.66 690.021 L1725.22 690.021 L1725.78 690.021 L1726.34 690.021 L1726.9 690.021 L1727.46 690.021 L1728.02 690.021 L1728.58 690.021 L1729.14 690.021 L1729.69 690.021 L1730.25 690.021 L1730.81 690.021 L1731.37 690.021 L1731.93 690.021 L1732.49 690.021 L1733.05 690.021 L1733.61 690.021 L1734.17 690.021 L1734.73 690.021 L1735.29 690.021 L1735.85 690.021 L1736.41 690.021 L1736.97 690.021 L1737.52 690.021 L1738.08 690.021 L1738.64 690.021 L1739.2 690.021 L1739.76 690.021 L1740.32 690.021 L1740.88 690.021 L1741.44 690.021 L1742 690.021 L1742.56 690.021 L1743.12 690.021 L1743.68 690.021 L1744.24 690.021 L1744.79 690.021 L1745.35 690.021 L1745.91 690.021 L1746.47 690.021 L1747.03 690.021 L1747.59 690.021 L1748.15 690.021 L1748.71 690.021 L1749.27 690.021 L1749.83 690.021 L1750.39 690.021 L1750.95 690.021 L1751.51 690.021 L1752.06 690.021 L1752.62 690.021 L1753.18 690.021 L1753.74 690.021 L1754.3 690.021 L1754.86 690.021 L1755.42 690.021 L1755.98 690.021 L1756.54 690.021 L1757.1 690.021 L1757.66 690.021 L1758.22 690.021 L1758.78 690.021 L1759.34 690.021 L1759.89 690.021 L1760.45 690.021 L1761.01 690.021 L1761.57 690.021 L1762.13 690.021 L1762.69 690.021 L1763.25 690.021 L1763.81 690.021 L1764.37 690.021 L1764.93 690.021 L1765.49 690.021 L1766.05 690.021 L1766.61 690.021 L1767.16 690.021 L1767.72 690.021 L1768.28 690.021 L1768.84 690.021 L1769.4 690.021 L1769.96 690.021 L1770.52 690.021 L1771.08 690.021 L1771.64 690.021 L1772.2 690.021 L1772.76 690.021 L1773.32 690.021 L1773.88 690.021 L1774.43 690.021 L1774.99 690.021 L1775.55 690.021 L1776.11 690.021 L1776.67 690.021 L1777.23 690.021 L1777.79 690.021 L1778.35 690.021 L1778.91 690.021 L1779.47 690.021 L1780.03 690.021 L1780.59 690.021 L1781.15 690.021 L1781.71 690.021 L1782.26 690.021 L1782.82 690.021 L1783.38 690.021 L1783.94 690.021 L1784.5 690.021 L1785.06 690.021 L1785.62 690.021 L1786.18 690.021 L1786.74 690.021 L1787.3 690.021 L1787.86 690.021 L1788.42 690.021 L1788.98 690.021 L1789.53 690.021 L1790.09 690.021 L1790.65 690.021 L1791.21 690.021 L1791.77 690.021 L1792.33 690.021 L1792.89 690.021 L1793.45 690.021 L1794.01 690.021 L1794.57 690.021 L1795.13 690.021 L1795.69 690.021 L1796.25 690.021 L1796.8 690.021 L1797.36 690.021 L1797.92 690.021 L1798.48 690.021 L1799.04 690.021 L1799.6 690.021 L1800.16 690.021 L1800.72 690.021 L1801.28 690.021 L1801.84 690.021 L1802.4 690.021 L1802.96 690.021 L1803.52 690.021 L1804.08 690.021 L1804.63 690.021 L1805.19 690.021 L1805.75 690.021 L1806.31 690.021 L1806.87 690.021 L1807.43 690.021 L1807.99 690.021 L1808.55 690.021 L1809.11 690.021 L1809.67 690.021 L1810.23 690.021 L1810.79 690.021 L1811.35 690.021 L1811.9 690.021 L1812.46 690.021 L1813.02 690.021 L1813.58 690.021 L1814.14 690.021 L1814.7 690.021 L1815.26 690.021 L1815.82 690.021 L1816.38 690.021 L1816.94 690.021 L1817.5 690.021 L1818.06 690.021 L1818.62 690.021 L1819.18 690.021 L1819.73 690.021 L1820.29 690.021 L1820.85 690.021 L1821.41 690.021 L1821.97 690.021 L1822.53 690.021 L1823.09 690.021 L1823.65 690.021 L1824.21 690.021 L1824.77 690.021 L1825.33 690.021 L1825.89 690.021 L1826.45 690.021 L1827 690.021 L1827.56 690.021 L1828.12 690.021 L1828.68 690.021 L1829.24 690.021 L1829.8 690.021 L1830.36 690.021 L1830.92 690.021 L1831.48 690.021 L1832.04 690.021 L1832.6 690.021 L1833.16 690.021 L1833.72 690.021 L1834.27 690.021 L1834.83 690.021 L1835.39 690.021 L1835.95 690.021 L1836.51 690.021 L1837.07 690.021 L1837.63 690.021 L1838.19 690.021 L1838.19 680.384 L1837.63 680.384 L1837.07 680.384 L1836.51 680.384 L1835.95 680.384 L1835.39 680.384 L1834.83 680.384 L1834.27 680.384 L1833.72 680.384 L1833.16 680.384 L1832.6 680.384 L1832.04 680.384 L1831.48 680.384 L1830.92 680.384 L1830.36 680.384 L1829.8 680.384 L1829.24 680.384 L1828.68 680.384 L1828.12 680.384 L1827.56 680.384 L1827 680.384 L1826.45 680.384 L1825.89 680.384 L1825.33 680.384 L1824.77 680.384 L1824.21 680.384 L1823.65 680.384 L1823.09 680.384 L1822.53 680.384 L1821.97 680.384 L1821.41 680.384 L1820.85 680.384 L1820.29 680.384 L1819.73 680.384 L1819.18 680.384 L1818.62 680.384 L1818.06 680.384 L1817.5 680.384 L1816.94 680.384 L1816.38 680.384 L1815.82 680.384 L1815.26 680.384 L1814.7 680.384 L1814.14 680.384 L1813.58 680.384 L1813.02 680.384 L1812.46 680.384 L1811.9 680.384 L1811.35 680.384 L1810.79 680.384 L1810.23 680.384 L1809.67 680.384 L1809.11 680.384 L1808.55 680.384 L1807.99 680.384 L1807.43 680.384 L1806.87 680.384 L1806.31 680.384 L1805.75 680.384 L1805.19 680.384 L1804.63 680.384 L1804.08 680.384 L1803.52 680.384 L1802.96 680.384 L1802.4 680.384 L1801.84 680.384 L1801.28 680.384 L1800.72 680.384 L1800.16 680.384 L1799.6 680.384 L1799.04 680.384 L1798.48 680.384 L1797.92 680.384 L1797.36 680.384 L1796.8 680.384 L1796.25 680.384 L1795.69 680.384 L1795.13 680.384 L1794.57 680.384 L1794.01 680.384 L1793.45 680.384 L1792.89 680.384 L1792.33 680.384 L1791.77 680.384 L1791.21 680.384 L1790.65 680.384 L1790.09 680.384 L1789.53 680.384 L1788.98 680.384 L1788.42 680.384 L1787.86 680.384 L1787.3 680.384 L1786.74 680.384 L1786.18 680.384 L1785.62 680.384 L1785.06 680.384 L1784.5 680.384 L1783.94 680.384 L1783.38 680.384 L1782.82 680.384 L1782.26 680.384 L1781.71 680.384 L1781.15 680.384 L1780.59 680.384 L1780.03 680.384 L1779.47 680.384 L1778.91 680.384 L1778.35 680.384 L1777.79 680.384 L1777.23 680.384 L1776.67 680.384 L1776.11 680.384 L1775.55 680.384 L1774.99 680.384 L1774.43 680.384 L1773.88 680.384 L1773.32 680.384 L1772.76 680.384 L1772.2 680.384 L1771.64 680.384 L1771.08 680.384 L1770.52 680.384 L1769.96 680.384 L1769.4 680.384 L1768.84 680.384 L1768.28 680.384 L1767.72 680.384 L1767.16 680.384 L1766.61 680.384 L1766.05 680.384 L1765.49 680.384 L1764.93 680.384 L1764.37 680.384 L1763.81 680.384 L1763.25 680.384 L1762.69 680.384 L1762.13 680.384 L1761.57 680.384 L1761.01 680.384 L1760.45 680.384 L1759.89 680.384 L1759.34 680.384 L1758.78 680.384 L1758.22 680.384 L1757.66 680.384 L1757.1 680.384 L1756.54 680.384 L1755.98 680.384 L1755.42 680.384 L1754.86 680.384 L1754.3 680.384 L1753.74 680.384 L1753.18 680.384 L1752.62 680.384 L1752.06 680.384 L1751.51 680.384 L1750.95 680.384 L1750.39 680.384 L1749.83 680.384 L1749.27 680.384 L1748.71 680.384 L1748.15 680.384 L1747.59 680.384 L1747.03 680.384 L1746.47 680.384 L1745.91 680.384 L1745.35 680.384 L1744.79 680.384 L1744.24 680.384 L1743.68 680.384 L1743.12 680.384 L1742.56 680.384 L1742 680.384 L1741.44 680.384 L1740.88 680.384 L1740.32 680.384 L1739.76 680.384 L1739.2 680.384 L1738.64 680.384 L1738.08 680.384 L1737.52 680.384 L1736.97 680.384 L1736.41 680.384 L1735.85 680.384 L1735.29 680.384 L1734.73 680.384 L1734.17 680.384 L1733.61 680.384 L1733.05 680.384 L1732.49 680.384 L1731.93 680.384 L1731.37 680.384 L1730.81 680.384 L1730.25 680.384 L1729.69 680.384 L1729.14 680.384 L1728.58 680.384 L1728.02 680.384 L1727.46 680.384 L1726.9 680.384 L1726.34 680.384 L1725.78 680.384 L1725.22 680.384 L1724.66 680.384 L1724.1 680.384 L1723.54 680.384 L1722.98 680.384 L1722.42 680.384 L1721.87 680.384 L1721.31 680.384 L1720.75 680.384 L1720.19 680.384 L1719.63 680.384 L1719.07 680.384 L1718.51 680.384 L1717.95 680.384 L1717.39 680.384 L1716.83 680.384 L1716.27 680.384 L1715.71 680.384 L1715.15 680.384 L1714.6 680.384 L1714.04 680.384 L1713.48 680.384 L1712.92 680.384 L1712.36 680.384 L1711.8 680.384 L1711.24 680.384 L1710.68 680.384 L1710.12 680.384 L1709.56 680.384 L1709 680.384 L1708.44 680.384 L1707.88 680.384 L1707.32 680.384 L1706.77 680.384 L1706.21 680.384 L1705.65 680.384 L1705.09 680.384 L1704.53 680.384 L1703.97 680.384 L1703.41 680.384 L1702.85 680.384 L1702.29 680.384 L1701.73 680.384 L1701.17 680.384 L1700.61 680.384 L1700.05 680.384 L1699.5 680.384 L1698.94 680.384 L1698.38 680.384 L1697.82 680.384 L1697.26 680.384 L1696.7 680.384 L1696.14 680.384 L1695.58 680.384 L1695.02 680.384 L1694.46 680.384 L1693.9 680.384 L1693.34 680.384 L1692.78 680.384 L1692.23 680.384 L1691.67 680.384 L1691.11 680.384 L1690.55 680.384 L1689.99 680.384 L1689.43 680.384 L1688.87 680.384 L1688.31 680.384 L1687.75 680.384 L1687.19 680.384 L1686.63 680.384 L1686.07 680.384 L1685.51 680.384 L1684.95 680.384 L1684.4 680.384 L1683.84 680.384 L1683.28 680.384 L1682.72 680.384 L1682.16 680.384 L1681.6 680.384 L1681.04 680.384 L1680.48 680.384 L1679.92 680.384 L1679.36 680.384 L1678.8 680.384 L1678.24 680.384 L1677.68 680.384 L1677.13 680.384 L1676.57 680.384 L1676.01 680.384 L1675.45 680.384 L1674.89 680.384 L1674.33 680.384 L1673.77 680.384 L1673.21 680.384 L1672.65 680.384 L1672.09 680.384 L1671.53 680.384 L1670.97 680.384 L1670.41 680.384 L1669.85 680.384 L1669.3 680.384 L1668.74 680.384 L1668.18 680.384 L1667.62 680.384 L1667.06 680.384 L1666.5 680.384 L1665.94 680.384 L1665.38 680.384 L1664.82 680.384 L1664.26 680.384 L1663.7 680.384 L1663.14 680.384 L1662.58 680.384 L1662.03 680.384 L1661.47 680.384 L1660.91 680.384 L1660.35 680.384 L1659.79 680.384 L1659.23 680.384 L1658.67 680.384 L1658.11 680.384 L1657.55 680.384 L1656.99 680.384 L1656.43 680.384 L1655.87 680.384 L1655.31 680.384 L1654.76 680.384 L1654.2 680.384 L1653.64 680.384 L1653.08 680.384 L1652.52 680.384 L1651.96 680.384 L1651.4 680.384 L1650.84 680.384 L1650.28 680.384 L1649.72 680.384 L1649.16 680.384 L1648.6 680.384 L1648.04 680.384 L1647.48 680.384 L1646.93 680.384 L1646.37 680.384 L1645.81 680.384 L1645.25 680.384 L1644.69 680.384 L1644.13 680.384 L1643.57 680.384 L1643.01 680.384 L1642.45 680.384 L1641.89 680.384 L1641.33 680.384 L1640.77 680.384 L1640.21 680.384 L1639.66 680.384 L1639.1 680.384 L1638.54 680.384 L1637.98 680.384 L1637.42 680.384 L1636.86 680.384 L1636.3 680.384 L1635.74 680.384 L1635.18 680.384 L1634.62 680.384 L1634.06 680.384 L1633.5 680.384 L1632.94 680.384 L1632.39 680.384 L1631.83 680.384 L1631.27 680.384 L1630.71 680.384 L1630.15 680.384 L1629.59 680.384 L1629.03 680.384 L1628.47 680.384 L1627.91 680.384 L1627.35 680.384 L1626.79 680.384 L1626.23 680.384 L1625.67 680.384 L1625.11 680.384 L1624.56 680.384 L1624 680.384 L1623.44 680.384 L1622.88 680.384 L1622.32 680.384 L1621.76 680.384 L1621.2 680.384 L1620.64 680.384 L1620.08 680.384 L1619.52 680.384 L1618.96 680.384 L1618.4 680.384 L1617.84 680.384 L1617.29 680.384 L1616.73 680.384 L1616.17 680.384 L1615.61 680.384 L1615.05 680.384 L1614.49 680.384 L1613.93 680.384 L1613.37 680.384 L1612.81 680.384 L1612.25 680.384 L1611.69 680.384 L1611.13 680.384 L1610.57 680.384 L1610.02 680.384 L1609.46 680.384 L1608.9 680.384 L1608.34 680.384 L1607.78 680.384 L1607.22 680.384 L1606.66 680.384 L1606.1 680.384 L1605.54 680.384 L1604.98 680.384 L1604.42 680.384 L1603.86 680.384 L1603.3 680.384 L1602.74 680.384 L1602.19 680.384 L1601.63 680.384 L1601.07 680.384 L1600.51 680.384 L1599.95 680.384 L1599.39 680.384 L1598.83 680.384 L1598.27 680.384 L1597.71 680.384 L1597.15 680.384 L1596.59 680.384 L1596.03 680.384 L1595.47 680.384 L1594.92 680.384 L1594.36 680.384 L1593.8 680.384 L1593.24 680.384 L1592.68 680.384 L1592.12 680.384 L1591.56 680.384 L1591 680.384 L1590.44 680.384 L1589.88 680.384 L1589.32 680.384 L1588.76 680.384 L1588.2 680.384 L1587.65 680.384 L1587.09 680.384 L1586.53 680.384 L1585.97 680.384 L1585.41 680.384 L1584.85 680.384 L1584.29 680.384 L1583.73 680.384 L1583.17 680.384 L1582.61 680.384 L1582.05 680.384 L1581.49 680.384 L1580.93 680.384 L1580.37 680.384 L1579.82 680.384 L1579.26 680.384 L1578.7 680.384 L1578.14 680.384 L1577.58 680.384 L1577.02 680.384 L1576.46 680.384 L1575.9 680.384 L1575.34 680.384 L1574.78 680.384 L1574.22 680.384 L1573.66 680.384 L1573.1 680.384 L1572.55 680.384 L1571.99 680.384 L1571.43 680.384 L1570.87 680.384 L1570.31 680.384 L1569.75 680.384 L1569.19 680.384 L1568.63 680.384 L1568.07 680.384 L1567.51 680.384 L1566.95 680.384 L1566.39 680.384 L1565.83 680.384 L1565.28 680.384 L1564.72 680.384 L1564.16 680.384 L1563.6 680.384 L1563.04 680.384 L1562.48 680.384 L1561.92 680.384 L1561.36 680.384 L1560.8 680.384 L1560.24 680.384 L1559.68 680.384 L1559.12 680.384 L1558.56 680.384 L1558 680.384 L1557.45 680.384 L1556.89 680.384 L1556.33 680.384 L1555.77 680.384 L1555.21 680.384 L1554.65 680.384 L1554.09 680.384 L1553.53 680.384 L1552.97 680.384 L1552.41 680.384 L1551.85 680.384 L1551.29 680.384 L1550.73 680.384 L1550.18 680.384 L1549.62 680.384 L1549.06 680.384 L1548.5 680.384 L1547.94 680.384 L1547.38 680.384 L1546.82 680.384 L1546.26 680.384 L1545.7 680.384 L1545.14 680.384 L1544.58 680.384 L1544.02 680.384 L1543.46 680.384 L1542.9 680.384 L1542.35 680.384 L1541.79 680.384 L1541.23 680.384 L1540.67 680.384 L1540.11 680.384 L1539.55 680.384 L1538.99 680.384 L1538.43 680.384 L1537.87 680.384 L1537.31 680.384 L1536.75 680.384 L1536.19 680.384 L1535.63 680.384 L1535.08 680.384 L1534.52 680.384 L1533.96 680.384 L1533.4 680.384 L1532.84 680.384 L1532.28 680.384 L1531.72 680.384 L1531.16 680.384 L1530.6 680.384 L1530.04 680.384 L1529.48 680.384 L1528.92 680.384 L1528.36 680.384 L1527.81 680.384 L1527.25 680.384 L1526.69 680.384 L1526.13 680.384 L1525.57 680.384 L1525.01 680.384 L1524.45 680.384 L1523.89 680.384 L1523.33 680.384 L1522.77 680.384 L1522.21 680.384 L1521.65 680.384 L1521.09 680.384 L1520.53 680.384 L1519.98 680.384 L1519.42 680.384 L1518.86 680.384 L1518.3 680.384 L1517.74 680.384 L1517.18 680.384 L1516.62 680.384 L1516.06 680.384 L1515.5 680.384 L1514.94 680.384 L1514.38 680.384 L1513.82 680.384 L1513.26 680.384 L1512.71 680.384 L1512.15 680.384 L1511.59 680.384 L1511.03 680.384 L1510.47 680.384 L1509.91 680.384 L1509.35 680.384 L1508.79 680.384 L1508.23 680.384 L1507.67 680.384 L1507.11 680.384 L1506.55 680.384 L1505.99 680.384 L1505.44 680.384 L1504.88 680.384 L1504.32 680.384 L1503.76 680.384 L1503.2 680.384 L1502.64 680.384 L1502.08 680.384 L1501.52 680.384 L1500.96 680.384 L1500.4 680.384 L1499.84 680.384 L1499.28 680.384 L1498.72 680.384 L1498.16 680.384 L1497.61 680.384 L1497.05 680.384 L1496.49 680.384 L1495.93 680.384 L1495.37 680.384 L1494.81 680.384 L1494.25 680.384 L1493.69 680.384 L1493.13 680.384 L1492.57 680.384 L1492.01 680.384 L1491.45 680.384 L1490.89 680.384 L1490.34 680.384 L1489.78 680.384 L1489.22 680.384 L1488.66 680.384 L1488.1 680.384 L1487.54 680.384 L1486.98 680.384 L1486.42 680.384 L1485.86 680.384 L1485.3 680.384 L1484.74 680.384 L1484.18 680.384 L1483.62 680.384 L1483.07 680.384 L1482.51 680.384 L1481.95 680.384 L1481.39 680.384 L1480.83 680.384 L1480.27 680.384 L1479.71 680.384 L1479.15 680.384 L1478.59 680.384 L1478.03 680.384 L1477.47 680.384 L1476.91 680.384 L1476.35 680.384 L1475.79 680.384 L1475.24 680.384 L1474.68 680.384 L1474.12 680.384 L1473.56 680.384 L1473 680.384 L1472.44 680.384 L1471.88 680.384 L1471.32 680.384 L1470.76 680.384 L1470.2 680.384 L1469.64 680.384 L1469.08 680.384 L1468.52 680.384 L1467.97 680.384 L1467.41 680.384 L1466.85 680.384 L1466.29 680.384 L1465.73 680.384 L1465.17 680.384 L1464.61 680.384 L1464.05 680.384 L1463.49 680.384 L1462.93 680.384 L1462.37 680.384 L1461.81 680.384 L1461.25 680.384 L1460.7 680.384 L1460.14 680.384 L1459.58 680.384 L1459.02 680.384 L1458.46 680.384 L1457.9 680.384 L1457.34 680.384 L1456.78 680.384 L1456.22 680.384 L1455.66 680.384 L1455.1 680.384 L1454.54 680.384 L1453.98 680.384 L1453.42 680.384 L1452.87 680.384 L1452.31 680.384 L1451.75 680.384 L1451.19 680.384 L1450.63 680.384 L1450.07 680.384 L1449.51 680.384 L1448.95 680.384 L1448.39 680.384 L1447.83 680.384 L1447.27 680.384 L1446.71 680.384 L1446.15 680.384 L1445.6 680.384 L1445.04 680.384 L1444.48 680.384 L1443.92 680.384 L1443.36 680.384 L1442.8 680.384 L1442.24 680.384 L1441.68 680.384 L1441.12 680.384 L1440.56 680.384 L1440 680.384 L1439.44 680.384 L1438.88 680.384 L1438.33 680.384 L1437.77 680.384 L1437.21 680.384 L1436.65 680.384 L1436.09 680.384 L1435.53 680.384 L1434.97 680.384 L1434.41 680.384 L1433.85 680.384 L1433.29 680.384 L1432.73 680.384 L1432.17 680.384 L1431.61 680.384 L1431.05 680.384 L1430.5 680.384 L1429.94 680.384 L1429.38 680.384 L1428.82 680.384 L1428.26 680.384 L1427.7 680.384 L1427.14 680.384 L1426.58 680.384 L1426.02 680.384 L1425.46 680.384 L1424.9 680.384 L1424.34 680.384 L1423.78 680.384 L1423.23 680.384 L1422.67 680.384 L1422.11 680.384 L1421.55 680.384 L1420.99 680.384 L1420.43 680.384 L1419.87 680.384 L1419.31 680.384 L1418.75 680.384 L1418.19 680.384 L1417.63 680.384 L1417.07 680.384 L1416.51 680.384 L1415.95 680.384 L1415.4 680.384 L1414.84 680.384 L1414.28 680.384 L1413.72 680.384 L1413.16 680.384 L1412.6 680.384 L1412.04 680.384 L1411.48 680.384 L1410.92 680.384 L1410.36 680.384 L1409.8 680.384 L1409.24 680.384 L1408.68 680.384 L1408.13 680.384 L1407.57 680.384 L1407.01 680.384 L1406.45 680.384 L1405.89 680.384 L1405.33 680.384 L1404.77 680.384 L1404.21 680.384 L1403.65 680.384 L1403.09 680.384 L1402.53 680.384 L1401.97 680.384 L1401.41 680.384 L1400.86 680.384 L1400.3 680.384 L1399.74 680.384 L1399.18 680.384 L1398.62 680.384 L1398.06 680.384 L1397.5 680.384 L1396.94 680.384 L1396.38 680.384 L1395.82 680.384 L1395.26 680.384 L1394.7 680.384 L1394.14 680.384 L1393.58 680.384 L1393.03 680.384 L1392.47 680.384 L1391.91 680.384 L1391.35 680.384 L1390.79 680.384 L1390.23 680.384 L1389.67 680.384 L1389.11 680.384 L1388.55 680.384 L1387.99 680.384 L1387.43 680.384 L1386.87 680.384 L1386.31 680.384 L1385.76 680.384 L1385.2 680.384 L1384.64 680.384 L1384.08 680.384 L1383.52 680.384 L1382.96 680.384 L1382.4 680.384 L1381.84 680.384 L1381.28 680.384 L1380.72 680.384 L1380.16 680.384 L1379.6 680.384 L1379.04 680.384 L1378.49 680.384 L1377.93 680.384 L1377.37 680.384 L1376.81 680.384 L1376.25 680.384 L1375.69 680.384 L1375.13 680.384 L1374.57 680.384 L1374.01 680.384 L1373.45 680.384 L1372.89 680.384 L1372.33 680.384 L1371.77 680.384 L1371.21 680.384 L1370.66 680.384 L1370.1 680.384 L1369.54 680.384 L1368.98 680.384 L1368.42 680.384 L1367.86 680.384 L1367.3 680.384 L1366.74 680.384 L1366.18 680.384 L1365.62 680.384 L1365.06 680.384 L1364.5 680.384 L1363.94 680.384 L1363.39 680.384 L1362.83 680.384 L1362.27 680.384 L1361.71 680.384 L1361.15 680.384 L1360.59 680.384 L1360.03 680.384 L1359.47 680.384 L1358.91 680.384 L1358.35 680.384 L1357.79 680.384 L1357.23 680.384 L1356.67 680.384 L1356.12 680.384 L1355.56 680.384 L1355 680.384 L1354.44 680.384 L1353.88 680.384 L1353.32 680.384 L1352.76 680.384 L1352.2 680.384 L1351.64 680.384 L1351.08 680.384 L1350.52 680.384 L1349.96 680.384 L1349.4 680.384 L1348.84 680.384 L1348.29 680.384 L1347.73 680.384 L1347.17 680.384 L1346.61 680.384 L1346.05 680.384 L1345.49 680.384 L1344.93 680.384 L1344.37 680.384 L1343.81 680.384 L1343.25 680.384 L1342.69 680.384 L1342.13 680.384 L1341.57 680.384 L1341.02 680.384 L1340.46 680.384 L1339.9 680.384 L1339.34 680.384 L1338.78 680.384 L1338.22 680.384 L1337.66 680.384 L1337.1 680.384 L1336.54 680.384 L1335.98 680.384 L1335.42 680.384 L1334.86 680.384 L1334.3 680.384 L1333.75 680.384 L1333.19 680.384 L1332.63 680.384 L1332.07 680.384 L1331.51 680.384 L1330.95 680.384 L1330.39 680.384 L1329.83 680.384 L1329.27 680.384 L1328.71 680.384 L1328.15 680.384 L1327.59 680.384 L1327.03 680.384 L1326.47 680.384 L1325.92 680.384 L1325.36 680.384 L1324.8 680.384 L1324.24 680.384 L1323.68 680.384 L1323.12 680.384 L1322.56 680.384 L1322 680.384 L1321.44 680.384 L1320.88 680.384 L1320.32 680.384 L1319.76 680.384 L1319.2 680.384 L1318.65 680.384 L1318.09 680.384 L1317.53 680.384 L1316.97 680.384 L1316.41 680.384 L1315.85 680.384 L1315.29 680.384 L1314.73 680.384 L1314.17 680.384 L1313.61 680.384 L1313.05 680.384 L1312.49 680.384 L1311.93 680.384 L1311.38 680.384 L1310.82 680.384 L1310.26 680.384 L1309.7 680.384 L1309.14 680.384 L1308.58 680.384 L1308.02 680.384 L1307.46 680.384 L1306.9 680.384 L1306.34 680.384 L1305.78 680.384 L1305.22 680.384 L1304.66 680.384 L1304.1 680.384 L1303.55 680.384 L1302.99 680.384 L1302.43 680.384 L1301.87 680.384 L1301.31 680.384 L1300.75 680.384 L1300.19 680.384 L1299.63 680.384 L1299.07 680.384 L1298.51 680.384 L1297.95 680.384 L1297.39 680.384 L1296.83 680.384 L1296.28 680.384 L1295.72 680.384 L1295.16 680.384 L1294.6 680.384 L1294.04 680.384 L1293.48 680.384 L1292.92 680.384 L1292.36 680.384 L1291.8 680.384 L1291.24 680.384 L1290.68 680.384 L1290.12 680.384 L1289.56 680.384 L1289 680.384 L1288.45 680.384 L1287.89 680.384 L1287.33 680.384 L1286.77 680.384 L1286.21 680.384 L1285.65 680.384 L1285.09 680.384 L1284.53 680.384 L1283.97 680.384 L1283.41 680.384 L1282.85 680.384 L1282.29 680.384 L1281.73 680.384 L1281.18 680.384 L1280.62 680.384 L1280.06 680.384 L1279.5 680.384 L1278.94 680.384 L1278.38 680.384 L1277.82 680.384 L1277.26 680.384 L1276.7 680.384 L1276.14 680.384 L1275.58 680.384 L1275.02 680.384 L1274.46 680.384 L1273.91 680.384 L1273.35 680.384 L1272.79 680.384 L1272.23 680.384 L1271.67 680.384 L1271.11 680.384 L1270.55 680.384 L1269.99 680.384 L1269.43 680.384 L1268.87 680.384 L1268.31 680.384 L1267.75 680.384 L1267.19 680.384 L1266.63 680.384 L1266.08 680.384 L1265.52 680.384 L1264.96 680.384 L1264.4 680.384 L1263.84 680.384 L1263.28 680.384 L1262.72 680.384 L1262.16 680.384 L1261.6 680.384 L1261.04 680.384 L1260.48 680.384 L1259.92 680.384 L1259.36 680.384 L1258.81 680.384 L1258.25 680.384 L1257.69 680.384 L1257.13 680.384 L1256.57 680.384 L1256.01 680.384 L1255.45 680.384 L1254.89 680.384 L1254.33 680.384 L1253.77 680.384 L1253.21 680.384 L1252.65 680.384 L1252.09 680.384 L1251.54 680.384 L1250.98 680.384 L1250.42 680.384 L1249.86 680.384 L1249.3 680.384 L1248.74 680.384 L1248.18 680.384 L1247.62 680.384 L1247.06 680.384 L1246.5 680.384 L1245.94 680.384 L1245.38 680.384 L1244.82 680.384 L1244.26 680.384 L1243.71 680.384 L1243.15 680.384 L1242.59 680.384 L1242.03 680.384 L1241.47 680.384 L1240.91 680.384 L1240.35 680.384 L1239.79 680.384 L1239.23 680.384 L1238.67 680.384 L1238.11 680.384 L1237.55 680.384 L1236.99 680.384 L1236.44 680.384 L1235.88 680.384 L1235.32 680.384 L1234.76 680.384 L1234.2 680.384 L1233.64 680.384 L1233.08 680.384 L1232.52 680.384 L1231.96 680.384 L1231.4 680.384 L1230.84 680.384 L1230.28 680.384 L1229.72 680.384 L1229.17 680.384 L1228.61 680.384 L1228.05 680.384 L1227.49 680.384 L1226.93 680.384 L1226.37 680.384 L1225.81 680.384 L1225.25 680.384 L1224.69 680.384 L1224.13 680.384 L1223.57 680.384 L1223.01 680.384 L1222.45 680.384 L1221.89 680.384 L1221.34 680.384 L1220.78 680.384 L1220.22 680.384 L1219.66 680.384 L1219.1 680.384 L1218.54 680.384 L1217.98 680.384 L1217.42 680.384 L1216.86 680.384 L1216.3 680.384 L1215.74 680.384 L1215.18 680.384 L1214.62 680.384 L1214.07 680.384 L1213.51 680.384 L1212.95 680.384 L1212.39 680.384 L1211.83 680.384 L1211.27 680.384 L1210.71 680.384 L1210.15 680.384 L1209.59 680.384 L1209.03 680.384 L1208.47 680.384 L1207.91 680.384 L1207.35 680.384 L1206.8 680.384 L1206.24 680.384 L1205.68 680.384 L1205.12 680.384 L1204.56 680.384 L1204 680.384 L1203.44 680.384 L1202.88 680.384 L1202.32 680.384 L1201.76 680.384 L1201.2 680.384 L1200.64 680.384 L1200.08 680.384 L1199.52 680.384 L1198.97 680.384 L1198.41 680.384 L1197.85 680.384 L1197.29 680.384 L1196.73 680.384 L1196.17 680.384 L1195.61 680.384 L1195.05 680.384 L1194.49 680.384 L1193.93 680.384 L1193.37 680.384 L1192.81 680.384 L1192.25 680.384 L1191.7 680.384 L1191.14 680.384 L1190.58 680.384 L1190.02 680.384 L1189.46 680.384 L1188.9 680.384 L1188.34 680.384 L1187.78 680.384 L1187.22 680.384 L1186.66 680.384 L1186.1 680.384 L1185.54 680.384 L1184.98 680.384 L1184.43 680.384 L1183.87 680.384 L1183.31 680.384 L1182.75 680.384 L1182.19 680.384 L1181.63 680.384 L1181.07 680.384 L1180.51 680.384 L1179.95 680.384 L1179.39 680.384 L1178.83 680.384 L1178.27 680.384 L1177.71 680.384 L1177.15 680.384 L1176.6 680.384 L1176.04 680.384 L1175.48 680.384 L1174.92 680.384 L1174.36 680.384 L1173.8 680.384 L1173.24 680.384 L1172.68 680.384 L1172.12 680.384 L1171.56 680.384 L1171 680.384 L1170.44 680.384 L1169.88 680.384 L1169.33 680.384 L1168.77 680.384 L1168.21 680.384 L1167.65 680.384 L1167.09 680.384 L1166.53 680.384 L1165.97 680.384 L1165.41 680.384 L1164.85 680.384 L1164.29 680.384 L1163.73 680.384 L1163.17 680.384 L1162.61 680.384 L1162.05 680.384 L1161.5 680.384 L1160.94 680.384 L1160.38 680.384 L1159.82 680.384 L1159.26 680.384 L1158.7 680.384 L1158.14 680.384 L1157.58 680.384 L1157.02 680.384 L1156.46 680.384 L1155.9 680.384 L1155.34 680.384 L1154.78 680.384 L1154.23 680.384 L1153.67 680.384 L1153.11 680.384 L1152.55 680.384 L1151.99 680.384 L1151.43 680.384 L1150.87 680.384 L1150.31 680.384 L1149.75 680.384 L1149.19 680.384 L1148.63 680.384 L1148.07 680.384 L1147.51 680.384 L1146.96 680.384 L1146.4 680.384 L1145.84 680.384 L1145.28 680.384 L1144.72 680.384 L1144.16 680.384 L1143.6 680.384 L1143.04 680.384 L1142.48 680.384 L1141.92 680.384 L1141.36 680.384 L1140.8 680.384 L1140.24 680.384 L1139.68 680.384 L1139.13 680.384 L1138.57 680.384 L1138.01 680.384 L1137.45 680.384 L1136.89 680.384 L1136.33 680.384 L1135.77 680.384 L1135.21 680.384 L1134.65 680.384 L1134.09 680.384 L1133.53 680.384 L1132.97 680.384 L1132.41 680.384 L1131.86 680.384 L1131.3 680.384 L1130.74 680.384 L1130.18 680.384 L1129.62 680.384 L1129.06 680.384 L1128.5 680.384 L1127.94 680.384 L1127.38 680.384 L1126.82 680.384 L1126.26 680.384 L1125.7 680.384 L1125.14 680.384 L1124.59 680.384 L1124.03 680.384 L1123.47 680.384 L1122.91 680.384 L1122.35 680.384 L1121.79 680.384 L1121.23 680.384 L1120.67 680.384 L1120.11 680.384 L1119.55 680.384 L1118.99 680.384 L1118.43 680.384 L1117.87 680.384 L1117.31 680.384 L1116.76 680.384 L1116.2 680.384 L1115.64 680.384 L1115.08 680.384 L1114.52 680.384 L1113.96 680.384 L1113.4 680.384 L1112.84 680.384 L1112.28 680.384 L1111.72 680.384 L1111.16 680.384 L1110.6 680.384 L1110.04 680.384 L1109.49 680.384 L1108.93 680.384 L1108.37 680.384 L1107.81 680.384 L1107.25 680.384 L1106.69 680.384 L1106.13 680.384 L1105.57 680.384 L1105.01 680.384 L1104.45 680.384 L1103.89 680.384 L1103.33 680.384 L1102.77 680.384 L1102.22 680.384 L1101.66 680.384 L1101.1 680.384 L1100.54 680.384 L1099.98 680.384 L1099.42 680.384 L1098.86 680.384 L1098.3 680.384 L1097.74 680.384 L1097.18 680.384 L1096.62 680.384 L1096.06 680.384 L1095.5 680.384 L1094.94 680.384 L1094.39 680.384 L1093.83 680.384 L1093.27 680.384 L1092.71 680.384 L1092.15 680.384 L1091.59 680.384 L1091.03 680.384 L1090.47 680.384 L1089.91 680.384 L1089.35 680.384 L1088.79 680.384 L1088.23 680.384 L1087.67 680.384 L1087.12 680.384 L1086.56 680.384 L1086 680.384 L1085.44 680.384 L1084.88 680.384 L1084.32 680.384 L1083.76 680.384 L1083.2 680.384 L1082.64 680.384 L1082.08 680.384 L1081.52 680.384 L1080.96 680.384 L1080.4 680.384 L1079.85 680.384 L1079.29 680.384 L1078.73 680.384 L1078.17 680.384 L1077.61 680.384 L1077.05 680.384 L1076.49 680.384 L1075.93 680.384 L1075.37 680.384 L1074.81 680.384 L1074.25 680.384 L1073.69 680.384 L1073.13 680.384 L1072.57 680.384 L1072.02 680.384 L1071.46 680.384 L1070.9 680.384 L1070.34 680.384 L1069.78 680.384 L1069.22 680.384 L1068.66 680.384 L1068.1 680.384 L1067.54 680.384 L1066.98 680.384 L1066.42 680.384 L1065.86 680.384 L1065.3 680.384 L1064.75 680.384 L1064.19 680.384 L1063.63 680.384 L1063.07 680.384 L1062.51 680.384 L1061.95 680.384 L1061.39 680.384 L1060.83 680.384 L1060.27 680.384 L1059.71 680.384 L1059.15 680.384 L1058.59 680.384 L1058.03 680.384 L1057.48 680.384 L1056.92 680.384 L1056.36 680.384 L1055.8 680.384 L1055.24 680.384 L1054.68 680.384 L1054.12 680.384 L1053.56 680.384 L1053 680.384 L1052.44 680.384 L1051.88 680.384 L1051.32 680.384 L1050.76 680.384 L1050.2 680.384 L1049.65 680.384 L1049.09 680.384 L1048.53 680.384 L1047.97 680.384 L1047.41 680.384 L1046.85 680.384 L1046.29 680.384 L1045.73 680.384 L1045.17 680.384 L1044.61 680.384 L1044.05 680.384 L1043.49 680.384 L1042.93 680.384 L1042.38 680.384 L1041.82 680.384 L1041.26 680.384 L1040.7 680.384 L1040.14 680.384 L1039.58 680.384 L1039.02 680.384 L1038.46 680.384 L1037.9 680.384 L1037.34 680.384 L1036.78 680.384 L1036.22 680.384 L1035.66 680.384 L1035.1 680.384 L1034.55 680.384 L1033.99 680.384 L1033.43 680.384 L1032.87 680.384 L1032.31 680.384 L1031.75 680.384 L1031.19 680.384 L1030.63 680.384 L1030.07 680.384 L1029.51 680.384 L1028.95 680.384 L1028.39 680.384 L1027.83 680.384 L1027.28 680.384 L1026.72 680.384 L1026.16 680.384 L1025.6 680.384 L1025.04 680.384 L1024.48 680.384 L1023.92 680.384 L1023.36 680.384 L1022.8 680.384 L1022.24 680.384 L1021.68 680.384 L1021.12 680.384 L1020.56 680.384 L1020.01 680.384 L1019.45 680.384 L1018.89 680.384 L1018.33 680.384 L1017.77 680.384 L1017.21 680.384 L1016.65 680.384 L1016.09 680.384 L1015.53 680.384 L1014.97 680.384 L1014.41 680.384 L1013.85 680.384 L1013.29 680.384 L1012.73 680.384 L1012.18 680.384 L1011.62 680.384 L1011.06 680.384 L1010.5 680.384 L1009.94 680.384 L1009.38 680.384 L1008.82 680.384 L1008.26 680.384 L1007.7 680.384 L1007.14 680.384 L1006.58 680.384 L1006.02 680.384 L1005.46 680.384 L1004.91 680.384 L1004.35 680.384 L1003.79 680.384 L1003.23 680.384 L1002.67 680.384 L1002.11 680.384 L1001.55 680.384 L1000.99 680.384 L1000.43 680.384 L999.872 680.384 L999.313 680.384 L998.754 680.384 L998.194 680.384 L997.635 680.384 L997.076 680.384 L996.517 680.384 L995.957 680.384 L995.398 680.384 L994.839 680.384 L994.28 680.384 L993.72 680.384 L993.161 680.384 L992.602 680.384 L992.043 680.384 L991.483 680.384 L990.924 680.384 L990.365 680.384 L989.806 680.384 L989.246 680.384 L988.687 680.384 L988.128 680.384 L987.569 680.384 L987.009 680.384 L986.45 680.384 L985.891 680.384 L985.332 680.384 L984.772 680.384 L984.213 680.384 L983.654 680.384 L983.095 680.384 L982.535 680.384 L981.976 680.384 L981.417 680.384 L980.858 680.384 L980.298 680.384 L979.739 680.384 L979.18 680.384 L978.621 680.384 L978.061 680.384 L977.502 680.384 L976.943 680.384 L976.384 680.384 L975.824 680.384 L975.265 680.384 L974.706 680.384 L974.147 680.384 L973.587 680.384 L973.028 680.384 L972.469 680.384 L971.91 680.384 L971.35 680.384 L970.791 680.384 L970.232 680.384 L969.673 680.384 L969.113 680.384 L968.554 680.384 L967.995 680.384 L967.436 680.384 L966.876 680.384 L966.317 680.384 L965.758 680.384 L965.199 680.384 L964.639 680.384 L964.08 680.384 L963.521 680.384 L962.962 680.384 L962.402 680.384 L961.843 680.384 L961.284 680.384 L960.725 680.384 L960.165 680.384 L959.606 680.384 L959.047 680.384 L958.488 680.384 L957.928 680.384 L957.369 680.384 L956.81 680.384 L956.251 680.384 L955.691 680.384 L955.132 680.384 L954.573 680.384 L954.014 680.384 L953.454 680.384 L952.895 680.384 L952.336 680.384 L951.777 680.384 L951.217 680.384 L950.658 680.384 L950.099 680.384 L949.54 680.384 L948.98 680.384 L948.421 680.384 L947.862 680.384 L947.303 680.384 L946.743 680.384 L946.184 680.384 L945.625 680.384 L945.066 680.384 L944.506 680.384 L943.947 680.384 L943.388 680.384 L942.829 680.384 L942.269 680.384 L941.71 680.384 L941.151 680.384 L940.592 680.384 L940.032 680.384 L939.473 680.384 L938.914 680.384 L938.355 680.384 L937.795 680.384 L937.236 680.384 L936.677 680.384 L936.118 680.384 L935.558 680.384 L934.999 680.384 L934.44 680.384 L933.881 680.384 L933.321 680.384 L932.762 680.384 L932.203 680.384 L931.644 680.384 L931.084 680.384 L930.525 680.384 L929.966 680.384 L929.406 680.384 L928.847 680.384 L928.288 680.384 L927.729 680.384 L927.169 680.384 L926.61 680.384 L926.051 680.384 L925.492 680.384 L924.932 680.384 L924.373 680.384 L923.814 680.384 L923.255 680.384 L922.695 680.384 L922.136 680.384 L921.577 680.384 L921.018 680.384 L920.458 680.384 L919.899 680.384 L919.34 680.384 L918.781 680.384 L918.221 680.384 L917.662 680.384 L917.103 680.384 L916.544 680.384 L915.984 680.384 L915.425 680.384 L914.866 680.384 L914.307 680.384 L913.747 680.384 L913.188 680.384 L912.629 680.384 L912.07 680.384 L911.51 680.384 L910.951 680.384 L910.392 680.384 L909.833 680.384 L909.273 680.384 L908.714 680.384 L908.155 680.384 L907.596 680.384 L907.036 680.384 L906.477 680.384 L905.918 680.384 L905.359 680.384 L904.799 680.384 L904.24 680.384 L903.681 680.384 L903.122 680.384 L902.562 680.384 L902.003 680.384 L901.444 680.384 L900.885 680.384 L900.325 680.384 L899.766 680.384 L899.207 680.384 L898.648 680.384 L898.088 680.384 L897.529 680.384 L896.97 680.384 L896.411 680.384 L895.851 680.384 L895.292 680.384 L894.733 680.384 L894.174 680.384 L893.614 680.384 L893.055 680.384 L892.496 680.384 L891.937 680.384 L891.377 680.384 L890.818 680.384 L890.259 680.384 L889.7 680.384 L889.14 680.384 L888.581 680.384 L888.022 680.384 L887.463 680.384 L886.903 680.384 L886.344 680.384 L885.785 680.384 L885.226 680.384 L884.666 680.384 L884.107 680.384 L883.548 680.384 L882.989 680.384 L882.429 680.384 L881.87 680.384 L881.311 680.384 L880.752 680.384 L880.192 680.384 L879.633 680.384 L879.074 680.384 L878.515 680.384 L877.955 680.384 L877.396 680.384 L876.837 680.384 L876.278 680.384 L875.718 680.384 L875.159 680.384 L874.6 680.384 L874.041 680.384 L873.481 680.384 L872.922 680.384 L872.363 680.384 L871.804 680.384 L871.244 680.384 L870.685 680.384 L870.126 680.384 L869.567 680.384 L869.007 680.384 L868.448 680.384 L867.889 680.384 L867.33 680.384 L866.77 680.384 L866.211 680.384 L865.652 680.384 L865.093 680.384 L864.533 680.384 L863.974 680.384 L863.415 680.384 L862.856 680.384 L862.296 680.384 L861.737 680.384 L861.178 680.384 L860.619 680.384 L860.059 680.384 L859.5 680.384 L858.941 680.384 L858.382 680.384 L857.822 680.384 L857.263 680.384 L856.704 680.384 L856.145 680.384 L855.585 680.384 L855.026 680.384 L854.467 680.384 L853.908 680.384 L853.348 680.384 L852.789 680.384 L852.23 680.384 L851.671 680.384 L851.111 680.384 L850.552 680.384 L849.993 680.384 L849.434 680.384 L848.874 680.384 L848.315 680.384 L847.756 680.384 L847.197 680.384 L846.637 680.384 L846.078 680.384 L845.519 680.384 L844.96 680.384 L844.4 680.384 L843.841 680.384 L843.282 680.384 L842.723 680.384 L842.163 680.384 L841.604 680.384 L841.045 680.384 L840.486 680.384 L839.926 680.384 L839.367 680.384 L838.808 680.384 L838.249 680.384 L837.689 680.384 L837.13 680.384 L836.571 680.384 L836.012 680.384 L835.452 680.384 L834.893 680.384 L834.334 680.384 L833.775 680.384 L833.215 680.384 L832.656 680.384 L832.097 680.384 L831.538 680.384 L830.978 680.384 L830.419 680.384 L829.86 680.384 L829.301 680.384 L828.741 680.384 L828.182 680.384 L827.623 680.384 L827.064 680.384 L826.504 680.384 L825.945 680.384 L825.386 680.384 L824.827 680.384 L824.267 680.384 L823.708 680.384 L823.149 680.384 L822.59 680.384 L822.03 680.384 L821.471 680.384 L820.912 680.384 L820.353 680.384 L819.793 680.384 L819.234 680.384 L818.675 680.384 L818.116 680.384 L817.556 680.384 L816.997 680.384 L816.438 680.384 L815.879 680.384 L815.319 680.384 L814.76 680.384 L814.201 680.384 L813.642 680.384 L813.082 680.384 L812.523 680.384 L811.964 680.384 L811.405 680.384 L810.845 680.384 L810.286 680.384 L809.727 680.384 L809.168 680.384 L808.608 680.384 L808.049 680.384 L807.49 680.384 L806.931 680.384 L806.371 680.384 L805.812 680.384 L805.253 680.384 L804.693 680.384 L804.134 680.384 L803.575 680.384 L803.016 680.384 L802.456 680.384 L801.897 680.384 L801.338 680.384 L800.779 680.384 L800.219 680.384 L799.66 680.384 L799.101 680.384 L798.542 680.384 L797.982 680.384 L797.423 680.384 L796.864 680.384 L796.305 680.384 L795.745 680.384 L795.186 680.384 L794.627 680.384 L794.068 680.384 L793.508 680.384 L792.949 680.384 L792.39 680.384 L791.831 680.384 L791.271 680.384 L790.712 680.384 L790.153 680.384 L789.594 680.384 L789.034 680.384 L788.475 680.384 L787.916 680.384 L787.357 680.384 L786.797 680.384 L786.238 680.384 L785.679 680.384 L785.12 680.384 L784.56 680.384 L784.001 680.384 L783.442 680.384 L782.883 680.384 L782.323 680.384 L781.764 680.384 L781.205 680.384 L780.646 680.384 L780.086 680.384 L779.527 680.384 L778.968 680.384 L778.409 680.384 L777.849 680.384 L777.29 680.384 L776.731 680.384 L776.172 680.384 L775.612 680.384 L775.053 680.384 L774.494 680.384 L773.935 680.384 L773.375 680.384 L772.816 680.384 L772.257 680.384 L771.698 680.384 L771.138 680.384 L770.579 680.384 L770.02 680.384 L769.461 680.384 L768.901 680.384 L768.342 680.384 L767.783 680.384 L767.224 680.384 L766.664 680.384 L766.105 680.384 L765.546 680.384 L764.987 680.384 L764.427 680.384 L763.868 680.384 L763.309 680.384 L762.75 680.384 L762.19 680.384 L761.631 680.384 L761.072 680.384 L760.513 680.384 L759.953 680.384 L759.394 680.384 L758.835 680.384 L758.276 680.384 L757.716 680.384 L757.157 680.384 L756.598 680.384 L756.039 680.384 L755.479 680.384 L754.92 680.384 L754.361 680.384 L753.802 680.384 L753.242 680.384 L752.683 680.384 L752.124 680.384 L751.565 680.384 L751.005 680.384 L750.446 680.384 L749.887 680.384 L749.328 680.384 L748.768 680.384 L748.209 680.384 L747.65 680.384 L747.091 680.384 L746.531 680.384 L745.972 680.384 L745.413 680.384 L744.854 680.384 L744.294 680.384 L743.735 680.384 L743.176 680.384 L742.617 680.384 L742.057 680.384 L741.498 680.384 L740.939 680.384 L740.38 680.384 L739.82 680.384 L739.261 680.384 L738.702 680.384 L738.143 680.384 L737.583 680.384 L737.024 680.384 L736.465 680.384 L735.906 680.384 L735.346 680.384 L734.787 680.384 L734.228 680.384 L733.669 680.384 L733.109 680.384 L732.55 680.384 L731.991 680.384 L731.432 680.384 L730.872 680.384 L730.313 680.384 L729.754 680.384 L729.195 680.384 L728.635 680.384 L728.076 680.384 L727.517 680.384 L726.958 680.384 L726.398 680.384 L725.839 680.384 L725.28 680.384 L724.721 680.384 L724.161 680.384 L723.602 680.384 L723.043 680.384 L722.484 680.384 L721.924 680.384 L721.365 680.384 L720.806 680.384 L720.247 680.384  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.202 720.806,685.202 721.365,685.202 721.924,685.202 722.484,685.202 723.043,685.202 723.602,685.202 724.161,685.202 724.721,685.202 725.28,685.202 725.839,685.202 726.398,685.202 726.958,685.202 727.517,685.202 728.076,685.202 728.635,685.202 729.195,685.202 729.754,685.202 730.313,685.202 730.872,685.202 731.432,685.202 731.991,685.202 732.55,685.202 733.109,685.202 733.669,685.202 734.228,685.202 734.787,685.202 735.346,685.202 735.906,685.202 736.465,685.202 737.024,685.202 737.583,685.202 738.143,685.202 738.702,685.202 739.261,685.202 739.82,685.202 740.38,685.202 740.939,685.202 741.498,685.202 742.057,685.202 742.617,685.202 743.176,685.202 743.735,685.202 744.294,685.202 744.854,685.202 745.413,685.202 745.972,685.202 746.531,685.202 747.091,685.202 747.65,685.202 748.209,685.202 748.768,685.202 749.328,685.202 749.887,685.202 750.446,685.202 751.005,685.202 751.565,685.202 752.124,685.202 752.683,685.202 753.242,685.202 753.802,685.202 754.361,685.202 754.92,685.202 755.479,685.202 756.039,685.202 756.598,685.202 757.157,685.202 757.716,685.202 758.276,685.202 758.835,685.202 759.394,685.202 759.953,685.202 760.513,685.202 761.072,685.202 761.631,685.202 762.19,685.202 762.75,685.202 763.309,685.202 763.868,685.202 764.427,685.202 764.987,685.202 765.546,685.202 766.105,685.202 766.664,685.202 767.224,685.202 767.783,685.202 768.342,685.202 768.901,685.202 769.461,685.202 770.02,685.202 770.579,685.202 771.138,685.202 771.698,685.202 772.257,685.202 772.816,685.202 773.375,685.202 773.935,685.202 774.494,685.202 775.053,685.202 775.612,685.202 776.172,685.202 776.731,685.202 777.29,685.202 777.849,685.202 778.409,685.202 778.968,685.202 779.527,685.202 780.086,685.202 780.646,685.202 781.205,685.202 781.764,685.202 782.323,685.202 782.883,685.202 783.442,685.202 784.001,685.202 784.56,685.202 785.12,685.202 785.679,685.202 786.238,685.202 786.797,685.202 787.357,685.202 787.916,685.202 788.475,685.202 789.034,685.202 789.594,685.202 790.153,685.202 790.712,685.202 791.271,685.202 791.831,685.202 792.39,685.202 792.949,685.202 793.508,685.202 794.068,685.202 794.627,685.202 795.186,685.202 795.745,685.202 796.305,685.202 796.864,685.202 797.423,685.202 797.982,685.202 798.542,685.202 799.101,685.202 799.66,685.202 800.219,685.202 800.779,685.202 801.338,685.202 801.897,685.202 802.456,685.202 803.016,685.202 803.575,685.202 804.134,685.202 804.693,685.202 805.253,685.202 805.812,685.202 806.371,685.202 806.931,685.202 807.49,685.202 808.049,685.202 808.608,685.202 809.168,685.202 809.727,685.202 810.286,685.202 810.845,685.202 811.405,685.202 811.964,685.202 812.523,685.202 813.082,685.202 813.642,685.202 814.201,685.202 814.76,685.202 815.319,685.202 815.879,685.202 816.438,685.202 816.997,685.202 817.556,685.202 818.116,685.202 818.675,685.202 819.234,685.202 819.793,685.202 820.353,685.202 820.912,685.202 821.471,685.202 822.03,685.202 822.59,685.202 823.149,685.202 823.708,685.202 824.267,685.202 824.827,685.202 825.386,685.202 825.945,685.202 826.504,685.202 827.064,685.202 827.623,685.202 828.182,685.202 828.741,685.202 829.301,685.202 829.86,685.202 830.419,685.202 830.978,685.202 831.538,685.202 832.097,685.202 832.656,685.202 833.215,685.202 833.775,685.202 834.334,685.202 834.893,685.202 835.452,685.202 836.012,685.202 836.571,685.202 837.13,685.202 837.689,685.202 838.249,685.202 838.808,685.202 839.367,685.202 839.926,685.202 840.486,685.202 841.045,685.202 841.604,685.202 842.163,685.202 842.723,685.202 843.282,685.202 843.841,685.202 844.4,685.202 844.96,685.202 845.519,685.202 846.078,685.202 846.637,685.202 847.197,685.202 847.756,685.202 848.315,685.202 848.874,685.202 849.434,685.202 849.993,685.202 850.552,685.202 851.111,685.202 851.671,685.202 852.23,685.202 852.789,685.202 853.348,685.202 853.908,685.202 854.467,685.202 855.026,685.202 855.585,685.202 856.145,685.202 856.704,685.202 857.263,685.202 857.822,685.202 858.382,685.202 858.941,685.202 859.5,685.202 860.059,685.202 860.619,685.202 861.178,685.202 861.737,685.202 862.296,685.202 862.856,685.202 863.415,685.202 863.974,685.202 864.533,685.202 865.093,685.202 865.652,685.202 866.211,685.202 866.77,685.202 867.33,685.202 867.889,685.202 868.448,685.202 869.007,685.202 869.567,685.202 870.126,685.202 870.685,685.202 871.244,685.202 871.804,685.202 872.363,685.202 872.922,685.202 873.481,685.202 874.041,685.202 874.6,685.202 875.159,685.202 875.718,685.202 876.278,685.202 876.837,685.202 877.396,685.202 877.955,685.202 878.515,685.202 879.074,685.202 879.633,685.202 880.192,685.202 880.752,685.202 881.311,685.202 881.87,685.202 882.429,685.202 882.989,685.202 883.548,685.202 884.107,685.202 884.666,685.202 885.226,685.202 885.785,685.202 886.344,685.202 886.903,685.202 887.463,685.202 888.022,685.202 888.581,685.202 889.14,685.202 889.7,685.202 890.259,685.202 890.818,685.202 891.377,685.202 891.937,685.202 892.496,685.202 893.055,685.202 893.614,685.202 894.174,685.202 894.733,685.202 895.292,685.202 895.851,685.202 896.411,685.202 896.97,685.202 897.529,685.202 898.088,685.202 898.648,685.202 899.207,685.202 899.766,685.202 900.325,685.202 900.885,685.202 901.444,685.202 902.003,685.202 902.562,685.202 903.122,685.202 903.681,685.202 904.24,685.202 904.799,685.202 905.359,685.202 905.918,685.202 906.477,685.202 907.036,685.202 907.596,685.202 908.155,685.202 908.714,685.202 909.273,685.202 909.833,685.202 910.392,685.202 910.951,685.202 911.51,685.202 912.07,685.202 912.629,685.202 913.188,685.202 913.747,685.202 914.307,685.202 914.866,685.202 915.425,685.202 915.984,685.202 916.544,685.202 917.103,685.202 917.662,685.202 918.221,685.202 918.781,685.202 919.34,685.202 919.899,685.202 920.458,685.202 921.018,685.202 921.577,685.202 922.136,685.202 922.695,685.202 923.255,685.202 923.814,685.202 924.373,685.202 924.932,685.202 925.492,685.202 926.051,685.202 926.61,685.202 927.169,685.202 927.729,685.202 928.288,685.202 928.847,685.202 929.406,685.202 929.966,685.202 930.525,685.202 931.084,685.202 931.644,685.202 932.203,685.202 932.762,685.202 933.321,685.202 933.881,685.202 934.44,685.202 934.999,685.202 935.558,685.202 936.118,685.202 936.677,685.202 937.236,685.202 937.795,685.202 938.355,685.202 938.914,685.202 939.473,685.202 940.032,685.202 940.592,685.202 941.151,685.202 941.71,685.202 942.269,685.202 942.829,685.202 943.388,685.202 943.947,685.202 944.506,685.202 945.066,685.202 945.625,685.202 946.184,685.202 946.743,685.202 947.303,685.202 947.862,685.202 948.421,685.202 948.98,685.202 949.54,685.202 950.099,685.202 950.658,685.202 951.217,685.202 951.777,685.202 952.336,685.202 952.895,685.202 953.454,685.202 954.014,685.202 954.573,685.202 955.132,685.202 955.691,685.202 956.251,685.202 956.81,685.202 957.369,685.202 957.928,685.202 958.488,685.202 959.047,685.202 959.606,685.202 960.165,685.202 960.725,685.202 961.284,685.202 961.843,685.202 962.402,685.202 962.962,685.202 963.521,685.202 964.08,685.202 964.639,685.202 965.199,685.202 965.758,685.202 966.317,685.202 966.876,685.202 967.436,685.202 967.995,685.202 968.554,685.202 969.113,685.202 969.673,685.202 970.232,685.202 970.791,685.202 971.35,685.202 971.91,685.202 972.469,685.202 973.028,685.202 973.587,685.202 974.147,685.202 974.706,685.202 975.265,685.202 975.824,685.202 976.384,685.202 976.943,685.202 977.502,685.202 978.061,685.202 978.621,685.202 979.18,685.202 979.739,685.202 980.298,685.202 980.858,685.202 981.417,685.202 981.976,685.202 982.535,685.202 983.095,685.202 983.654,685.202 984.213,685.202 984.772,685.202 985.332,685.202 985.891,685.202 986.45,685.202 987.009,685.202 987.569,685.202 988.128,685.202 988.687,685.202 989.246,685.202 989.806,685.202 990.365,685.202 990.924,685.202 991.483,685.202 992.043,685.202 992.602,685.202 993.161,685.202 993.72,685.202 994.28,685.202 994.839,685.202 995.398,685.202 995.957,685.202 996.517,685.202 997.076,685.202 997.635,685.202 998.194,685.202 998.754,685.202 999.313,685.202 999.872,685.202 1000.43,685.202 1000.99,685.202 1001.55,685.202 1002.11,685.202 1002.67,685.202 1003.23,685.202 1003.79,685.202 1004.35,685.202 1004.91,685.202 1005.46,685.202 1006.02,685.202 1006.58,685.202 1007.14,685.202 1007.7,685.202 1008.26,685.202 1008.82,685.202 1009.38,685.202 1009.94,685.202 1010.5,685.202 1011.06,685.202 1011.62,685.202 1012.18,685.202 1012.73,685.202 1013.29,685.202 1013.85,685.202 1014.41,685.202 1014.97,685.202 1015.53,685.202 1016.09,685.202 1016.65,685.202 1017.21,685.202 1017.77,685.202 1018.33,685.202 1018.89,685.202 1019.45,685.202 1020.01,685.202 1020.56,685.202 1021.12,685.202 1021.68,685.202 1022.24,685.202 1022.8,685.202 1023.36,685.202 1023.92,685.202 1024.48,685.202 1025.04,685.202 1025.6,685.202 1026.16,685.202 1026.72,685.202 1027.28,685.202 1027.83,685.202 1028.39,685.202 1028.95,685.202 1029.51,685.202 1030.07,685.202 1030.63,685.202 1031.19,685.202 1031.75,685.202 1032.31,685.202 1032.87,685.202 1033.43,685.202 1033.99,685.202 1034.55,685.202 1035.1,685.202 1035.66,685.202 1036.22,685.202 1036.78,685.202 1037.34,685.202 1037.9,685.202 1038.46,685.202 1039.02,685.202 1039.58,685.202 1040.14,685.202 1040.7,685.202 1041.26,685.202 1041.82,685.202 1042.38,685.202 1042.93,685.202 1043.49,685.202 1044.05,685.202 1044.61,685.202 1045.17,685.202 1045.73,685.202 1046.29,685.202 1046.85,685.202 1047.41,685.202 1047.97,685.202 1048.53,685.202 1049.09,685.202 1049.65,685.202 1050.2,685.202 1050.76,685.202 1051.32,685.202 1051.88,685.202 1052.44,685.202 1053,685.202 1053.56,685.202 1054.12,685.202 1054.68,685.202 1055.24,685.202 1055.8,685.202 1056.36,685.202 1056.92,685.202 1057.48,685.202 1058.03,685.202 1058.59,685.202 1059.15,685.202 1059.71,685.202 1060.27,685.202 1060.83,685.202 1061.39,685.202 1061.95,685.202 1062.51,685.202 1063.07,685.202 1063.63,685.202 1064.19,685.202 1064.75,685.202 1065.3,685.202 1065.86,685.202 1066.42,685.202 1066.98,685.202 1067.54,685.202 1068.1,685.202 1068.66,685.202 1069.22,685.202 1069.78,685.202 1070.34,685.202 1070.9,685.202 1071.46,685.202 1072.02,685.202 1072.57,685.202 1073.13,685.202 1073.69,685.202 1074.25,685.202 1074.81,685.202 1075.37,685.202 1075.93,685.202 1076.49,685.202 1077.05,685.202 1077.61,685.202 1078.17,685.202 1078.73,685.202 1079.29,685.202 1079.85,685.202 1080.4,685.202 1080.96,685.202 1081.52,685.202 1082.08,685.202 1082.64,685.202 1083.2,685.202 1083.76,685.202 1084.32,685.202 1084.88,685.202 1085.44,685.202 1086,685.202 1086.56,685.202 1087.12,685.202 1087.67,685.202 1088.23,685.202 1088.79,685.202 1089.35,685.202 1089.91,685.202 1090.47,685.202 1091.03,685.202 1091.59,685.202 1092.15,685.202 1092.71,685.202 1093.27,685.202 1093.83,685.202 1094.39,685.202 1094.94,685.202 1095.5,685.202 1096.06,685.202 1096.62,685.202 1097.18,685.202 1097.74,685.202 1098.3,685.202 1098.86,685.202 1099.42,685.202 1099.98,685.202 1100.54,685.202 1101.1,685.202 1101.66,685.202 1102.22,685.202 1102.77,685.202 1103.33,685.202 1103.89,685.202 1104.45,685.202 1105.01,685.202 1105.57,685.202 1106.13,685.202 1106.69,685.202 1107.25,685.202 1107.81,685.202 1108.37,685.202 1108.93,685.202 1109.49,685.202 1110.04,685.202 1110.6,685.202 1111.16,685.202 1111.72,685.202 1112.28,685.202 1112.84,685.202 1113.4,685.202 1113.96,685.202 1114.52,685.202 1115.08,685.202 1115.64,685.202 1116.2,685.202 1116.76,685.202 1117.31,685.202 1117.87,685.202 1118.43,685.202 1118.99,685.202 1119.55,685.202 1120.11,685.202 1120.67,685.202 1121.23,685.202 1121.79,685.202 1122.35,685.202 1122.91,685.202 1123.47,685.202 1124.03,685.202 1124.59,685.202 1125.14,685.202 1125.7,685.202 1126.26,685.202 1126.82,685.202 1127.38,685.202 1127.94,685.202 1128.5,685.202 1129.06,685.202 1129.62,685.202 1130.18,685.202 1130.74,685.202 1131.3,685.202 1131.86,685.202 1132.41,685.202 1132.97,685.202 1133.53,685.202 1134.09,685.202 1134.65,685.202 1135.21,685.202 1135.77,685.202 1136.33,685.202 1136.89,685.202 1137.45,685.202 1138.01,685.202 1138.57,685.202 1139.13,685.202 1139.68,685.202 1140.24,685.202 1140.8,685.202 1141.36,685.202 1141.92,685.202 1142.48,685.202 1143.04,685.202 1143.6,685.202 1144.16,685.202 1144.72,685.202 1145.28,685.202 1145.84,685.202 1146.4,685.202 1146.96,685.202 1147.51,685.202 1148.07,685.202 1148.63,685.202 1149.19,685.202 1149.75,685.202 1150.31,685.202 1150.87,685.202 1151.43,685.202 1151.99,685.202 1152.55,685.202 1153.11,685.202 1153.67,685.202 1154.23,685.202 1154.78,685.202 1155.34,685.202 1155.9,685.202 1156.46,685.202 1157.02,685.202 1157.58,685.202 1158.14,685.202 1158.7,685.202 1159.26,685.202 1159.82,685.202 1160.38,685.202 1160.94,685.202 1161.5,685.202 1162.05,685.202 1162.61,685.202 1163.17,685.202 1163.73,685.202 1164.29,685.202 1164.85,685.202 1165.41,685.202 1165.97,685.202 1166.53,685.202 1167.09,685.202 1167.65,685.202 1168.21,685.202 1168.77,685.202 1169.33,685.202 1169.88,685.202 1170.44,685.202 1171,685.202 1171.56,685.202 1172.12,685.202 1172.68,685.202 1173.24,685.202 1173.8,685.202 1174.36,685.202 1174.92,685.202 1175.48,685.202 1176.04,685.202 1176.6,685.202 1177.15,685.202 1177.71,685.202 1178.27,685.202 1178.83,685.202 1179.39,685.202 1179.95,685.202 1180.51,685.202 1181.07,685.202 1181.63,685.202 1182.19,685.202 1182.75,685.202 1183.31,685.202 1183.87,685.202 1184.43,685.202 1184.98,685.202 1185.54,685.202 1186.1,685.202 1186.66,685.202 1187.22,685.202 1187.78,685.202 1188.34,685.202 1188.9,685.202 1189.46,685.202 1190.02,685.202 1190.58,685.202 1191.14,685.202 1191.7,685.202 1192.25,685.202 1192.81,685.202 1193.37,685.202 1193.93,685.202 1194.49,685.202 1195.05,685.202 1195.61,685.202 1196.17,685.202 1196.73,685.202 1197.29,685.202 1197.85,685.202 1198.41,685.202 1198.97,685.202 1199.52,685.202 1200.08,685.202 1200.64,685.202 1201.2,685.202 1201.76,685.202 1202.32,685.202 1202.88,685.202 1203.44,685.202 1204,685.202 1204.56,685.202 1205.12,685.202 1205.68,685.202 1206.24,685.202 1206.8,685.202 1207.35,685.202 1207.91,685.202 1208.47,685.202 1209.03,685.202 1209.59,685.202 1210.15,685.202 1210.71,685.202 1211.27,685.202 1211.83,685.202 1212.39,685.202 1212.95,685.202 1213.51,685.202 1214.07,685.202 1214.62,685.202 1215.18,685.202 1215.74,685.202 1216.3,685.202 1216.86,685.202 1217.42,685.202 1217.98,685.202 1218.54,685.202 1219.1,685.202 1219.66,685.202 1220.22,685.202 1220.78,685.202 1221.34,685.202 1221.89,685.202 1222.45,685.202 1223.01,685.202 1223.57,685.202 1224.13,685.202 1224.69,685.202 1225.25,685.202 1225.81,685.202 1226.37,685.202 1226.93,685.202 1227.49,685.202 1228.05,685.202 1228.61,685.202 1229.17,685.202 1229.72,685.202 1230.28,685.202 1230.84,685.202 1231.4,685.202 1231.96,685.202 1232.52,685.202 1233.08,685.202 1233.64,685.202 1234.2,685.202 1234.76,685.202 1235.32,685.202 1235.88,685.202 1236.44,685.202 1236.99,685.202 1237.55,685.202 1238.11,685.202 1238.67,685.202 1239.23,685.202 1239.79,685.202 1240.35,685.202 1240.91,685.202 1241.47,685.202 1242.03,685.202 1242.59,685.202 1243.15,685.202 1243.71,685.202 1244.26,685.202 1244.82,685.202 1245.38,685.202 1245.94,685.202 1246.5,685.202 1247.06,685.202 1247.62,685.202 1248.18,685.202 1248.74,685.202 1249.3,685.202 1249.86,685.202 1250.42,685.202 1250.98,685.202 1251.54,685.202 1252.09,685.202 1252.65,685.202 1253.21,685.202 1253.77,685.202 1254.33,685.202 1254.89,685.202 1255.45,685.202 1256.01,685.202 1256.57,685.202 1257.13,685.202 1257.69,685.202 1258.25,685.202 1258.81,685.202 1259.36,685.202 1259.92,685.202 1260.48,685.202 1261.04,685.202 1261.6,685.202 1262.16,685.202 1262.72,685.202 1263.28,685.202 1263.84,685.202 1264.4,685.202 1264.96,685.202 1265.52,685.202 1266.08,685.202 1266.63,685.202 1267.19,685.202 1267.75,685.202 1268.31,685.202 1268.87,685.202 1269.43,685.202 1269.99,685.202 1270.55,685.202 1271.11,685.202 1271.67,685.202 1272.23,685.202 1272.79,685.202 1273.35,685.202 1273.91,685.202 1274.46,685.202 1275.02,685.202 1275.58,685.202 1276.14,685.202 1276.7,685.202 1277.26,685.202 1277.82,685.202 1278.38,685.202 1278.94,685.202 1279.5,685.202 1280.06,685.202 1280.62,685.202 1281.18,685.202 1281.73,685.202 1282.29,685.202 1282.85,685.202 1283.41,685.202 1283.97,685.202 1284.53,685.202 1285.09,685.202 1285.65,685.202 1286.21,685.202 1286.77,685.202 1287.33,685.202 1287.89,685.202 1288.45,685.202 1289,685.202 1289.56,685.202 1290.12,685.202 1290.68,685.202 1291.24,685.202 1291.8,685.202 1292.36,685.202 1292.92,685.202 1293.48,685.202 1294.04,685.202 1294.6,685.202 1295.16,685.202 1295.72,685.202 1296.28,685.202 1296.83,685.202 1297.39,685.202 1297.95,685.202 1298.51,685.202 1299.07,685.202 1299.63,685.202 1300.19,685.202 1300.75,685.202 1301.31,685.202 1301.87,685.202 1302.43,685.202 1302.99,685.202 1303.55,685.202 1304.1,685.202 1304.66,685.202 1305.22,685.202 1305.78,685.202 1306.34,685.202 1306.9,685.202 1307.46,685.202 1308.02,685.202 1308.58,685.202 1309.14,685.202 1309.7,685.202 1310.26,685.202 1310.82,685.202 1311.38,685.202 1311.93,685.202 1312.49,685.202 1313.05,685.202 1313.61,685.202 1314.17,685.202 1314.73,685.202 1315.29,685.202 1315.85,685.202 1316.41,685.202 1316.97,685.202 1317.53,685.202 1318.09,685.202 1318.65,685.202 1319.2,685.202 1319.76,685.202 1320.32,685.202 1320.88,685.202 1321.44,685.202 1322,685.202 1322.56,685.202 1323.12,685.202 1323.68,685.202 1324.24,685.202 1324.8,685.202 1325.36,685.202 1325.92,685.202 1326.47,685.202 1327.03,685.202 1327.59,685.202 1328.15,685.202 1328.71,685.202 1329.27,685.202 1329.83,685.202 1330.39,685.202 1330.95,685.202 1331.51,685.202 1332.07,685.202 1332.63,685.202 1333.19,685.202 1333.75,685.202 1334.3,685.202 1334.86,685.202 1335.42,685.202 1335.98,685.202 1336.54,685.202 1337.1,685.202 1337.66,685.202 1338.22,685.202 1338.78,685.202 1339.34,685.202 1339.9,685.202 1340.46,685.202 1341.02,685.202 1341.57,685.202 1342.13,685.202 1342.69,685.202 1343.25,685.202 1343.81,685.202 1344.37,685.202 1344.93,685.202 1345.49,685.202 1346.05,685.202 1346.61,685.202 1347.17,685.202 1347.73,685.202 1348.29,685.202 1348.84,685.202 1349.4,685.202 1349.96,685.202 1350.52,685.202 1351.08,685.202 1351.64,685.202 1352.2,685.202 1352.76,685.202 1353.32,685.202 1353.88,685.202 1354.44,685.202 1355,685.202 1355.56,685.202 1356.12,685.202 1356.67,685.202 1357.23,685.202 1357.79,685.202 1358.35,685.202 1358.91,685.202 1359.47,685.202 1360.03,685.202 1360.59,685.202 1361.15,685.202 1361.71,685.202 1362.27,685.202 1362.83,685.202 1363.39,685.202 1363.94,685.202 1364.5,685.202 1365.06,685.202 1365.62,685.202 1366.18,685.202 1366.74,685.202 1367.3,685.202 1367.86,685.202 1368.42,685.202 1368.98,685.202 1369.54,685.202 1370.1,685.202 1370.66,685.202 1371.21,685.202 1371.77,685.202 1372.33,685.202 1372.89,685.202 1373.45,685.202 1374.01,685.202 1374.57,685.202 1375.13,685.202 1375.69,685.202 1376.25,685.202 1376.81,685.202 1377.37,685.202 1377.93,685.202 1378.49,685.202 1379.04,685.202 1379.6,685.202 1380.16,685.202 1380.72,685.202 1381.28,685.202 1381.84,685.202 1382.4,685.202 1382.96,685.202 1383.52,685.202 1384.08,685.202 1384.64,685.202 1385.2,685.202 1385.76,685.202 1386.31,685.202 1386.87,685.202 1387.43,685.202 1387.99,685.202 1388.55,685.202 1389.11,685.202 1389.67,685.202 1390.23,685.202 1390.79,685.202 1391.35,685.202 1391.91,685.202 1392.47,685.202 1393.03,685.202 1393.58,685.202 1394.14,685.202 1394.7,685.202 1395.26,685.202 1395.82,685.202 1396.38,685.202 1396.94,685.202 1397.5,685.202 1398.06,685.202 1398.62,685.202 1399.18,685.202 1399.74,685.202 1400.3,685.202 1400.86,685.202 1401.41,685.202 1401.97,685.202 1402.53,685.202 1403.09,685.202 1403.65,685.202 1404.21,685.202 1404.77,685.202 1405.33,685.202 1405.89,685.202 1406.45,685.202 1407.01,685.202 1407.57,685.202 1408.13,685.202 1408.68,685.202 1409.24,685.202 1409.8,685.202 1410.36,685.202 1410.92,685.202 1411.48,685.202 1412.04,685.202 1412.6,685.202 1413.16,685.202 1413.72,685.202 1414.28,685.202 1414.84,685.202 1415.4,685.202 1415.95,685.202 1416.51,685.202 1417.07,685.202 1417.63,685.202 1418.19,685.202 1418.75,685.202 1419.31,685.202 1419.87,685.202 1420.43,685.202 1420.99,685.202 1421.55,685.202 1422.11,685.202 1422.67,685.202 1423.23,685.202 1423.78,685.202 1424.34,685.202 1424.9,685.202 1425.46,685.202 1426.02,685.202 1426.58,685.202 1427.14,685.202 1427.7,685.202 1428.26,685.202 1428.82,685.202 1429.38,685.202 1429.94,685.202 1430.5,685.202 1431.05,685.202 1431.61,685.202 1432.17,685.202 1432.73,685.202 1433.29,685.202 1433.85,685.202 1434.41,685.202 1434.97,685.202 1435.53,685.202 1436.09,685.202 1436.65,685.202 1437.21,685.202 1437.77,685.202 1438.33,685.202 1438.88,685.202 1439.44,685.202 1440,685.202 1440.56,685.202 1441.12,685.202 1441.68,685.202 1442.24,685.202 1442.8,685.202 1443.36,685.202 1443.92,685.202 1444.48,685.202 1445.04,685.202 1445.6,685.202 1446.15,685.202 1446.71,685.202 1447.27,685.202 1447.83,685.202 1448.39,685.202 1448.95,685.202 1449.51,685.202 1450.07,685.202 1450.63,685.202 1451.19,685.202 1451.75,685.202 1452.31,685.202 1452.87,685.202 1453.42,685.202 1453.98,685.202 1454.54,685.202 1455.1,685.202 1455.66,685.202 1456.22,685.202 1456.78,685.202 1457.34,685.202 1457.9,685.202 1458.46,685.202 1459.02,685.202 1459.58,685.202 1460.14,685.202 1460.7,685.202 1461.25,685.202 1461.81,685.202 1462.37,685.202 1462.93,685.202 1463.49,685.202 1464.05,685.202 1464.61,685.202 1465.17,685.202 1465.73,685.202 1466.29,685.202 1466.85,685.202 1467.41,685.202 1467.97,685.202 1468.52,685.202 1469.08,685.202 1469.64,685.202 1470.2,685.202 1470.76,685.202 1471.32,685.202 1471.88,685.202 1472.44,685.202 1473,685.202 1473.56,685.202 1474.12,685.202 1474.68,685.202 1475.24,685.202 1475.79,685.202 1476.35,685.202 1476.91,685.202 1477.47,685.202 1478.03,685.202 1478.59,685.202 1479.15,685.202 1479.71,685.202 1480.27,685.202 1480.83,685.202 1481.39,685.202 1481.95,685.202 1482.51,685.202 1483.07,685.202 1483.62,685.202 1484.18,685.202 1484.74,685.202 1485.3,685.202 1485.86,685.202 1486.42,685.202 1486.98,685.202 1487.54,685.202 1488.1,685.202 1488.66,685.202 1489.22,685.202 1489.78,685.202 1490.34,685.202 1490.89,685.202 1491.45,685.202 1492.01,685.202 1492.57,685.202 1493.13,685.202 1493.69,685.202 1494.25,685.202 1494.81,685.202 1495.37,685.202 1495.93,685.202 1496.49,685.202 1497.05,685.202 1497.61,685.202 1498.16,685.202 1498.72,685.202 1499.28,685.202 1499.84,685.202 1500.4,685.202 1500.96,685.202 1501.52,685.202 1502.08,685.202 1502.64,685.202 1503.2,685.202 1503.76,685.202 1504.32,685.202 1504.88,685.202 1505.44,685.202 1505.99,685.202 1506.55,685.202 1507.11,685.202 1507.67,685.202 1508.23,685.202 1508.79,685.202 1509.35,685.202 1509.91,685.202 1510.47,685.202 1511.03,685.202 1511.59,685.202 1512.15,685.202 1512.71,685.202 1513.26,685.202 1513.82,685.202 1514.38,685.202 1514.94,685.202 1515.5,685.202 1516.06,685.202 1516.62,685.202 1517.18,685.202 1517.74,685.202 1518.3,685.202 1518.86,685.202 1519.42,685.202 1519.98,685.202 1520.53,685.202 1521.09,685.202 1521.65,685.202 1522.21,685.202 1522.77,685.202 1523.33,685.202 1523.89,685.202 1524.45,685.202 1525.01,685.202 1525.57,685.202 1526.13,685.202 1526.69,685.202 1527.25,685.202 1527.81,685.202 1528.36,685.202 1528.92,685.202 1529.48,685.202 1530.04,685.202 1530.6,685.202 1531.16,685.202 1531.72,685.202 1532.28,685.202 1532.84,685.202 1533.4,685.202 1533.96,685.202 1534.52,685.202 1535.08,685.202 1535.63,685.202 1536.19,685.202 1536.75,685.202 1537.31,685.202 1537.87,685.202 1538.43,685.202 1538.99,685.202 1539.55,685.202 1540.11,685.202 1540.67,685.202 1541.23,685.202 1541.79,685.202 1542.35,685.202 1542.9,685.202 1543.46,685.202 1544.02,685.202 1544.58,685.202 1545.14,685.202 1545.7,685.202 1546.26,685.202 1546.82,685.202 1547.38,685.202 1547.94,685.202 1548.5,685.202 1549.06,685.202 1549.62,685.202 1550.18,685.202 1550.73,685.202 1551.29,685.202 1551.85,685.202 1552.41,685.202 1552.97,685.202 1553.53,685.202 1554.09,685.202 1554.65,685.202 1555.21,685.202 1555.77,685.202 1556.33,685.202 1556.89,685.202 1557.45,685.202 1558,685.202 1558.56,685.202 1559.12,685.202 1559.68,685.202 1560.24,685.202 1560.8,685.202 1561.36,685.202 1561.92,685.202 1562.48,685.202 1563.04,685.202 1563.6,685.202 1564.16,685.202 1564.72,685.202 1565.28,685.202 1565.83,685.202 1566.39,685.202 1566.95,685.202 1567.51,685.202 1568.07,685.202 1568.63,685.202 1569.19,685.202 1569.75,685.202 1570.31,685.202 1570.87,685.202 1571.43,685.202 1571.99,685.202 1572.55,685.202 1573.1,685.202 1573.66,685.202 1574.22,685.202 1574.78,685.202 1575.34,685.202 1575.9,685.202 1576.46,685.202 1577.02,685.202 1577.58,685.202 1578.14,685.202 1578.7,685.202 1579.26,685.202 1579.82,685.202 1580.37,685.202 1580.93,685.202 1581.49,685.202 1582.05,685.202 1582.61,685.202 1583.17,685.202 1583.73,685.202 1584.29,685.202 1584.85,685.202 1585.41,685.202 1585.97,685.202 1586.53,685.202 1587.09,685.202 1587.65,685.202 1588.2,685.202 1588.76,685.202 1589.32,685.202 1589.88,685.202 1590.44,685.202 1591,685.202 1591.56,685.202 1592.12,685.202 1592.68,685.202 1593.24,685.202 1593.8,685.202 1594.36,685.202 1594.92,685.202 1595.47,685.202 1596.03,685.202 1596.59,685.202 1597.15,685.202 1597.71,685.202 1598.27,685.202 1598.83,685.202 1599.39,685.202 1599.95,685.202 1600.51,685.202 1601.07,685.202 1601.63,685.202 1602.19,685.202 1602.74,685.202 1603.3,685.202 1603.86,685.202 1604.42,685.202 1604.98,685.202 1605.54,685.202 1606.1,685.202 1606.66,685.202 1607.22,685.202 1607.78,685.202 1608.34,685.202 1608.9,685.202 1609.46,685.202 1610.02,685.202 1610.57,685.202 1611.13,685.202 1611.69,685.202 1612.25,685.202 1612.81,685.202 1613.37,685.202 1613.93,685.202 1614.49,685.202 1615.05,685.202 1615.61,685.202 1616.17,685.202 1616.73,685.202 1617.29,685.202 1617.84,685.202 1618.4,685.202 1618.96,685.202 1619.52,685.202 1620.08,685.202 1620.64,685.202 1621.2,685.202 1621.76,685.202 1622.32,685.202 1622.88,685.202 1623.44,685.202 1624,685.202 1624.56,685.202 1625.11,685.202 1625.67,685.202 1626.23,685.202 1626.79,685.202 1627.35,685.202 1627.91,685.202 1628.47,685.202 1629.03,685.202 1629.59,685.202 1630.15,685.202 1630.71,685.202 1631.27,685.202 1631.83,685.202 1632.39,685.202 1632.94,685.202 1633.5,685.202 1634.06,685.202 1634.62,685.202 1635.18,685.202 1635.74,685.202 1636.3,685.202 1636.86,685.202 1637.42,685.202 1637.98,685.202 1638.54,685.202 1639.1,685.202 1639.66,685.202 1640.21,685.202 1640.77,685.202 1641.33,685.202 1641.89,685.202 1642.45,685.202 1643.01,685.202 1643.57,685.202 1644.13,685.202 1644.69,685.202 1645.25,685.202 1645.81,685.202 1646.37,685.202 1646.93,685.202 1647.48,685.202 1648.04,685.202 1648.6,685.202 1649.16,685.202 1649.72,685.202 1650.28,685.202 1650.84,685.202 1651.4,685.202 1651.96,685.202 1652.52,685.202 1653.08,685.202 1653.64,685.202 1654.2,685.202 1654.76,685.202 1655.31,685.202 1655.87,685.202 1656.43,685.202 1656.99,685.202 1657.55,685.202 1658.11,685.202 1658.67,685.202 1659.23,685.202 1659.79,685.202 1660.35,685.202 1660.91,685.202 1661.47,685.202 1662.03,685.202 1662.58,685.202 1663.14,685.202 1663.7,685.202 1664.26,685.202 1664.82,685.202 1665.38,685.202 1665.94,685.202 1666.5,685.202 1667.06,685.202 1667.62,685.202 1668.18,685.202 1668.74,685.202 1669.3,685.202 1669.85,685.202 1670.41,685.202 1670.97,685.202 1671.53,685.202 1672.09,685.202 1672.65,685.202 1673.21,685.202 1673.77,685.202 1674.33,685.202 1674.89,685.202 1675.45,685.202 1676.01,685.202 1676.57,685.202 1677.13,685.202 1677.68,685.202 1678.24,685.202 1678.8,685.202 1679.36,685.202 1679.92,685.202 1680.48,685.202 1681.04,685.202 1681.6,685.202 1682.16,685.202 1682.72,685.202 1683.28,685.202 1683.84,685.202 1684.4,685.202 1684.95,685.202 1685.51,685.202 1686.07,685.202 1686.63,685.202 1687.19,685.202 1687.75,685.202 1688.31,685.202 1688.87,685.202 1689.43,685.202 1689.99,685.202 1690.55,685.202 1691.11,685.202 1691.67,685.202 1692.23,685.202 1692.78,685.202 1693.34,685.202 1693.9,685.202 1694.46,685.202 1695.02,685.202 1695.58,685.202 1696.14,685.202 1696.7,685.202 1697.26,685.202 1697.82,685.202 1698.38,685.202 1698.94,685.202 1699.5,685.202 1700.05,685.202 1700.61,685.202 1701.17,685.202 1701.73,685.202 1702.29,685.202 1702.85,685.202 1703.41,685.202 1703.97,685.202 1704.53,685.202 1705.09,685.202 1705.65,685.202 1706.21,685.202 1706.77,685.202 1707.32,685.202 1707.88,685.202 1708.44,685.202 1709,685.202 1709.56,685.202 1710.12,685.202 1710.68,685.202 1711.24,685.202 1711.8,685.202 1712.36,685.202 1712.92,685.202 1713.48,685.202 1714.04,685.202 1714.6,685.202 1715.15,685.202 1715.71,685.202 1716.27,685.202 1716.83,685.202 1717.39,685.202 1717.95,685.202 1718.51,685.202 1719.07,685.202 1719.63,685.202 1720.19,685.202 1720.75,685.202 1721.31,685.202 1721.87,685.202 1722.42,685.202 1722.98,685.202 1723.54,685.202 1724.1,685.202 1724.66,685.202 1725.22,685.202 1725.78,685.202 1726.34,685.202 1726.9,685.202 1727.46,685.202 1728.02,685.202 1728.58,685.202 1729.14,685.202 1729.69,685.202 1730.25,685.202 1730.81,685.202 1731.37,685.202 1731.93,685.202 1732.49,685.202 1733.05,685.202 1733.61,685.202 1734.17,685.202 1734.73,685.202 1735.29,685.202 1735.85,685.202 1736.41,685.202 1736.97,685.202 1737.52,685.202 1738.08,685.202 1738.64,685.202 1739.2,685.202 1739.76,685.202 1740.32,685.202 1740.88,685.202 1741.44,685.202 1742,685.202 1742.56,685.202 1743.12,685.202 1743.68,685.202 1744.24,685.202 1744.79,685.202 1745.35,685.202 1745.91,685.202 1746.47,685.202 1747.03,685.202 1747.59,685.202 1748.15,685.202 1748.71,685.202 1749.27,685.202 1749.83,685.202 1750.39,685.202 1750.95,685.202 1751.51,685.202 1752.06,685.202 1752.62,685.202 1753.18,685.202 1753.74,685.202 1754.3,685.202 1754.86,685.202 1755.42,685.202 1755.98,685.202 1756.54,685.202 1757.1,685.202 1757.66,685.202 1758.22,685.202 1758.78,685.202 1759.34,685.202 1759.89,685.202 1760.45,685.202 1761.01,685.202 1761.57,685.202 1762.13,685.202 1762.69,685.202 1763.25,685.202 1763.81,685.202 1764.37,685.202 1764.93,685.202 1765.49,685.202 1766.05,685.202 1766.61,685.202 1767.16,685.202 1767.72,685.202 1768.28,685.202 1768.84,685.202 1769.4,685.202 1769.96,685.202 1770.52,685.202 1771.08,685.202 1771.64,685.202 1772.2,685.202 1772.76,685.202 1773.32,685.202 1773.88,685.202 1774.43,685.202 1774.99,685.202 1775.55,685.202 1776.11,685.202 1776.67,685.202 1777.23,685.202 1777.79,685.202 1778.35,685.202 1778.91,685.202 1779.47,685.202 1780.03,685.202 1780.59,685.202 1781.15,685.202 1781.71,685.202 1782.26,685.202 1782.82,685.202 1783.38,685.202 1783.94,685.202 1784.5,685.202 1785.06,685.202 1785.62,685.202 1786.18,685.202 1786.74,685.202 1787.3,685.202 1787.86,685.202 1788.42,685.202 1788.98,685.202 1789.53,685.202 1790.09,685.202 1790.65,685.202 1791.21,685.202 1791.77,685.202 1792.33,685.202 1792.89,685.202 1793.45,685.202 1794.01,685.202 1794.57,685.202 1795.13,685.202 1795.69,685.202 1796.25,685.202 1796.8,685.202 1797.36,685.202 1797.92,685.202 1798.48,685.202 1799.04,685.202 1799.6,685.202 1800.16,685.202 1800.72,685.202 1801.28,685.202 1801.84,685.202 1802.4,685.202 1802.96,685.202 1803.52,685.202 1804.08,685.202 1804.63,685.202 1805.19,685.202 1805.75,685.202 1806.31,685.202 1806.87,685.202 1807.43,685.202 1807.99,685.202 1808.55,685.202 1809.11,685.202 1809.67,685.202 1810.23,685.202 1810.79,685.202 1811.35,685.202 1811.9,685.202 1812.46,685.202 1813.02,685.202 1813.58,685.202 1814.14,685.202 1814.7,685.202 1815.26,685.202 1815.82,685.202 1816.38,685.202 1816.94,685.202 1817.5,685.202 1818.06,685.202 1818.62,685.202 1819.18,685.202 1819.73,685.202 1820.29,685.202 1820.85,685.202 1821.41,685.202 1821.97,685.202 1822.53,685.202 1823.09,685.202 1823.65,685.202 1824.21,685.202 1824.77,685.202 1825.33,685.202 1825.89,685.202 1826.45,685.202 1827,685.202 1827.56,685.202 1828.12,685.202 1828.68,685.202 1829.24,685.202 1829.8,685.202 1830.36,685.202 1830.92,685.202 1831.48,685.202 1832.04,685.202 1832.6,685.202 1833.16,685.202 1833.72,685.202 1834.27,685.202 1834.83,685.202 1835.39,685.202 1835.95,685.202 1836.51,685.202 1837.07,685.202 1837.63,685.202 1838.19,685.202 \"/>\n<path clip-path=\"url(#clip063)\" d=\"M720.247 684.384 L720.806 684.384 L721.365 684.384 L721.924 684.384 L722.484 684.384 L723.043 684.384 L723.602 684.384 L724.161 684.384 L724.721 684.384 L725.28 684.384 L725.839 684.384 L726.398 684.384 L726.958 684.384 L727.517 684.384 L728.076 684.384 L728.635 684.384 L729.195 684.384 L729.754 684.384 L730.313 684.384 L730.872 684.384 L731.432 684.384 L731.991 684.384 L732.55 684.384 L733.109 684.384 L733.669 684.384 L734.228 684.384 L734.787 684.384 L735.346 684.384 L735.906 684.384 L736.465 684.384 L737.024 684.384 L737.583 684.384 L738.143 684.384 L738.702 684.384 L739.261 684.384 L739.82 684.384 L740.38 684.384 L740.939 684.384 L741.498 684.384 L742.057 684.384 L742.617 684.384 L743.176 684.384 L743.735 684.384 L744.294 684.384 L744.854 684.384 L745.413 684.384 L745.972 684.384 L746.531 684.384 L747.091 684.384 L747.65 684.384 L748.209 684.384 L748.768 684.384 L749.328 684.384 L749.887 684.384 L750.446 684.384 L751.005 684.384 L751.565 684.384 L752.124 684.384 L752.683 684.384 L753.242 684.384 L753.802 684.384 L754.361 684.384 L754.92 684.384 L755.479 684.384 L756.039 684.384 L756.598 684.384 L757.157 684.384 L757.716 684.384 L758.276 684.384 L758.835 684.384 L759.394 684.384 L759.953 684.384 L760.513 684.384 L761.072 684.384 L761.631 684.384 L762.19 684.384 L762.75 684.384 L763.309 684.384 L763.868 684.384 L764.427 684.384 L764.987 684.384 L765.546 684.384 L766.105 684.384 L766.664 684.384 L767.224 684.384 L767.783 684.384 L768.342 684.384 L768.901 684.384 L769.461 684.384 L770.02 684.384 L770.579 684.384 L771.138 684.384 L771.698 684.384 L772.257 684.384 L772.816 684.384 L773.375 684.384 L773.935 684.384 L774.494 684.384 L775.053 684.384 L775.612 684.384 L776.172 684.384 L776.731 684.384 L777.29 684.384 L777.849 684.384 L778.409 684.384 L778.968 684.384 L779.527 684.384 L780.086 684.384 L780.646 684.384 L781.205 684.384 L781.764 684.384 L782.323 684.384 L782.883 684.384 L783.442 684.384 L784.001 684.384 L784.56 684.384 L785.12 684.384 L785.679 684.384 L786.238 684.384 L786.797 684.384 L787.357 684.384 L787.916 684.384 L788.475 684.384 L789.034 684.384 L789.594 684.384 L790.153 684.384 L790.712 684.384 L791.271 684.384 L791.831 684.384 L792.39 684.384 L792.949 684.384 L793.508 684.384 L794.068 684.384 L794.627 684.384 L795.186 684.384 L795.745 684.384 L796.305 684.384 L796.864 684.384 L797.423 684.384 L797.982 684.384 L798.542 684.384 L799.101 684.384 L799.66 684.384 L800.219 684.384 L800.779 684.384 L801.338 684.384 L801.897 684.384 L802.456 684.384 L803.016 684.384 L803.575 684.384 L804.134 684.384 L804.693 684.384 L805.253 684.384 L805.812 684.384 L806.371 684.384 L806.931 684.384 L807.49 684.384 L808.049 684.384 L808.608 684.384 L809.168 684.384 L809.727 684.384 L810.286 684.384 L810.845 684.384 L811.405 684.384 L811.964 684.384 L812.523 684.384 L813.082 684.384 L813.642 684.384 L814.201 684.384 L814.76 684.384 L815.319 684.384 L815.879 684.384 L816.438 684.384 L816.997 684.384 L817.556 684.384 L818.116 684.384 L818.675 684.384 L819.234 684.384 L819.793 684.384 L820.353 684.384 L820.912 684.384 L821.471 684.384 L822.03 684.384 L822.59 684.384 L823.149 684.384 L823.708 684.384 L824.267 684.384 L824.827 684.384 L825.386 684.384 L825.945 684.384 L826.504 684.384 L827.064 684.384 L827.623 684.384 L828.182 684.384 L828.741 684.384 L829.301 684.384 L829.86 684.384 L830.419 684.384 L830.978 684.384 L831.538 684.384 L832.097 684.384 L832.656 684.384 L833.215 684.384 L833.775 684.384 L834.334 684.384 L834.893 684.384 L835.452 684.384 L836.012 684.384 L836.571 684.384 L837.13 684.384 L837.689 684.384 L838.249 684.384 L838.808 684.384 L839.367 684.384 L839.926 684.384 L840.486 684.384 L841.045 684.384 L841.604 684.384 L842.163 684.384 L842.723 684.384 L843.282 684.384 L843.841 684.384 L844.4 684.384 L844.96 684.384 L845.519 684.384 L846.078 684.384 L846.637 684.384 L847.197 684.384 L847.756 684.384 L848.315 684.384 L848.874 684.384 L849.434 684.384 L849.993 684.384 L850.552 684.384 L851.111 684.384 L851.671 684.384 L852.23 684.384 L852.789 684.384 L853.348 684.384 L853.908 684.384 L854.467 684.384 L855.026 684.384 L855.585 684.384 L856.145 684.384 L856.704 684.384 L857.263 684.384 L857.822 684.384 L858.382 684.384 L858.941 684.384 L859.5 684.384 L860.059 684.384 L860.619 684.384 L861.178 684.384 L861.737 684.384 L862.296 684.384 L862.856 684.384 L863.415 684.384 L863.974 684.384 L864.533 684.384 L865.093 684.384 L865.652 684.384 L866.211 684.384 L866.77 684.384 L867.33 684.384 L867.889 684.384 L868.448 684.384 L869.007 684.384 L869.567 684.384 L870.126 684.384 L870.685 684.384 L871.244 684.384 L871.804 684.384 L872.363 684.384 L872.922 684.384 L873.481 684.384 L874.041 684.384 L874.6 684.384 L875.159 684.384 L875.718 684.384 L876.278 684.384 L876.837 684.384 L877.396 684.384 L877.955 684.384 L878.515 684.384 L879.074 684.384 L879.633 684.384 L880.192 684.384 L880.752 684.384 L881.311 684.384 L881.87 684.384 L882.429 684.384 L882.989 684.384 L883.548 684.384 L884.107 684.384 L884.666 684.384 L885.226 684.384 L885.785 684.384 L886.344 684.384 L886.903 684.384 L887.463 684.384 L888.022 684.384 L888.581 684.384 L889.14 684.384 L889.7 684.384 L890.259 684.384 L890.818 684.384 L891.377 684.384 L891.937 684.384 L892.496 684.384 L893.055 684.384 L893.614 684.384 L894.174 684.384 L894.733 684.384 L895.292 684.384 L895.851 684.384 L896.411 684.384 L896.97 684.384 L897.529 684.384 L898.088 684.384 L898.648 684.384 L899.207 684.384 L899.766 684.384 L900.325 684.384 L900.885 684.384 L901.444 684.384 L902.003 684.384 L902.562 684.384 L903.122 684.384 L903.681 684.384 L904.24 684.384 L904.799 684.384 L905.359 684.384 L905.918 684.384 L906.477 684.384 L907.036 684.384 L907.596 684.384 L908.155 684.384 L908.714 684.384 L909.273 684.384 L909.833 684.384 L910.392 684.384 L910.951 684.384 L911.51 684.384 L912.07 684.384 L912.629 684.384 L913.188 684.384 L913.747 684.384 L914.307 684.384 L914.866 684.384 L915.425 684.384 L915.984 684.384 L916.544 684.384 L917.103 684.384 L917.662 684.384 L918.221 684.384 L918.781 684.384 L919.34 684.384 L919.899 684.384 L920.458 684.384 L921.018 684.384 L921.577 684.384 L922.136 684.384 L922.695 684.384 L923.255 684.384 L923.814 684.384 L924.373 684.384 L924.932 684.384 L925.492 684.384 L926.051 684.384 L926.61 684.384 L927.169 684.384 L927.729 684.384 L928.288 684.384 L928.847 684.384 L929.406 684.384 L929.966 684.384 L930.525 684.384 L931.084 684.384 L931.644 684.384 L932.203 684.384 L932.762 684.384 L933.321 684.384 L933.881 684.384 L934.44 684.384 L934.999 684.384 L935.558 684.384 L936.118 684.384 L936.677 684.384 L937.236 684.384 L937.795 684.384 L938.355 684.384 L938.914 684.384 L939.473 684.384 L940.032 684.384 L940.592 684.384 L941.151 684.384 L941.71 684.384 L942.269 684.384 L942.829 684.384 L943.388 684.384 L943.947 684.384 L944.506 684.384 L945.066 684.384 L945.625 684.384 L946.184 684.384 L946.743 684.384 L947.303 684.384 L947.862 684.384 L948.421 684.384 L948.98 684.384 L949.54 684.384 L950.099 684.384 L950.658 684.384 L951.217 684.384 L951.777 684.384 L952.336 684.384 L952.895 684.384 L953.454 684.384 L954.014 684.384 L954.573 684.384 L955.132 684.384 L955.691 684.384 L956.251 684.384 L956.81 684.384 L957.369 684.384 L957.928 684.384 L958.488 684.384 L959.047 684.384 L959.606 684.384 L960.165 684.384 L960.725 684.384 L961.284 684.384 L961.843 684.384 L962.402 684.384 L962.962 684.384 L963.521 684.384 L964.08 684.384 L964.639 684.384 L965.199 684.384 L965.758 684.384 L966.317 684.384 L966.876 684.384 L967.436 684.384 L967.995 684.384 L968.554 684.384 L969.113 684.384 L969.673 684.384 L970.232 684.384 L970.791 684.384 L971.35 684.384 L971.91 684.384 L972.469 684.384 L973.028 684.384 L973.587 684.384 L974.147 684.384 L974.706 684.384 L975.265 684.384 L975.824 684.384 L976.384 684.384 L976.943 684.384 L977.502 684.384 L978.061 684.384 L978.621 684.384 L979.18 684.384 L979.739 684.384 L980.298 684.384 L980.858 684.384 L981.417 684.384 L981.976 684.384 L982.535 684.384 L983.095 684.384 L983.654 684.384 L984.213 684.384 L984.772 684.384 L985.332 684.384 L985.891 684.384 L986.45 684.384 L987.009 684.384 L987.569 684.384 L988.128 684.384 L988.687 684.384 L989.246 684.384 L989.806 684.384 L990.365 684.384 L990.924 684.384 L991.483 684.384 L992.043 684.384 L992.602 684.384 L993.161 684.384 L993.72 684.384 L994.28 684.384 L994.839 684.384 L995.398 684.384 L995.957 684.384 L996.517 684.384 L997.076 684.384 L997.635 684.384 L998.194 684.384 L998.754 684.384 L999.313 684.384 L999.872 684.384 L1000.43 684.384 L1000.99 684.384 L1001.55 684.384 L1002.11 684.384 L1002.67 684.384 L1003.23 684.384 L1003.79 684.384 L1004.35 684.384 L1004.91 684.384 L1005.46 684.384 L1006.02 684.384 L1006.58 684.384 L1007.14 684.384 L1007.7 684.384 L1008.26 684.384 L1008.82 684.384 L1009.38 684.384 L1009.94 684.384 L1010.5 684.384 L1011.06 684.384 L1011.62 684.384 L1012.18 684.384 L1012.73 684.384 L1013.29 684.384 L1013.85 684.384 L1014.41 684.384 L1014.97 684.384 L1015.53 684.384 L1016.09 684.384 L1016.65 684.384 L1017.21 684.384 L1017.77 684.384 L1018.33 684.384 L1018.89 684.384 L1019.45 684.384 L1020.01 684.384 L1020.56 684.384 L1021.12 684.384 L1021.68 684.384 L1022.24 684.384 L1022.8 684.384 L1023.36 684.384 L1023.92 684.384 L1024.48 684.384 L1025.04 684.384 L1025.6 684.384 L1026.16 684.384 L1026.72 684.384 L1027.28 684.384 L1027.83 684.384 L1028.39 684.384 L1028.95 684.384 L1029.51 684.384 L1030.07 684.384 L1030.63 684.384 L1031.19 684.384 L1031.75 684.384 L1032.31 684.384 L1032.87 684.384 L1033.43 684.384 L1033.99 684.384 L1034.55 684.384 L1035.1 684.384 L1035.66 684.384 L1036.22 684.384 L1036.78 684.384 L1037.34 684.384 L1037.9 684.384 L1038.46 684.384 L1039.02 684.384 L1039.58 684.384 L1040.14 684.384 L1040.7 684.384 L1041.26 684.384 L1041.82 684.384 L1042.38 684.384 L1042.93 684.384 L1043.49 684.384 L1044.05 684.384 L1044.61 684.384 L1045.17 684.384 L1045.73 684.384 L1046.29 684.384 L1046.85 684.384 L1047.41 684.384 L1047.97 684.384 L1048.53 684.384 L1049.09 684.384 L1049.65 684.384 L1050.2 684.384 L1050.76 684.384 L1051.32 684.384 L1051.88 684.384 L1052.44 684.384 L1053 684.384 L1053.56 684.384 L1054.12 684.384 L1054.68 684.384 L1055.24 684.384 L1055.8 684.384 L1056.36 684.384 L1056.92 684.384 L1057.48 684.384 L1058.03 684.384 L1058.59 684.384 L1059.15 684.384 L1059.71 684.384 L1060.27 684.384 L1060.83 684.384 L1061.39 684.384 L1061.95 684.384 L1062.51 684.384 L1063.07 684.384 L1063.63 684.384 L1064.19 684.384 L1064.75 684.384 L1065.3 684.384 L1065.86 684.384 L1066.42 684.384 L1066.98 684.384 L1067.54 684.384 L1068.1 684.384 L1068.66 684.384 L1069.22 684.384 L1069.78 684.384 L1070.34 684.384 L1070.9 684.384 L1071.46 684.384 L1072.02 684.384 L1072.57 684.384 L1073.13 684.384 L1073.69 684.384 L1074.25 684.384 L1074.81 684.384 L1075.37 684.384 L1075.93 684.384 L1076.49 684.384 L1077.05 684.384 L1077.61 684.384 L1078.17 684.384 L1078.73 684.384 L1079.29 684.384 L1079.85 684.384 L1080.4 684.384 L1080.96 684.384 L1081.52 684.384 L1082.08 684.384 L1082.64 684.384 L1083.2 684.384 L1083.76 684.384 L1084.32 684.384 L1084.88 684.384 L1085.44 684.384 L1086 684.384 L1086.56 684.384 L1087.12 684.384 L1087.67 684.384 L1088.23 684.384 L1088.79 684.384 L1089.35 684.384 L1089.91 684.384 L1090.47 684.384 L1091.03 684.384 L1091.59 684.384 L1092.15 684.384 L1092.71 684.384 L1093.27 684.384 L1093.83 684.384 L1094.39 684.384 L1094.94 684.384 L1095.5 684.384 L1096.06 684.384 L1096.62 684.384 L1097.18 684.384 L1097.74 684.384 L1098.3 684.384 L1098.86 684.384 L1099.42 684.384 L1099.98 684.384 L1100.54 684.384 L1101.1 684.384 L1101.66 684.384 L1102.22 684.384 L1102.77 684.384 L1103.33 684.384 L1103.89 684.384 L1104.45 684.384 L1105.01 684.384 L1105.57 684.384 L1106.13 684.384 L1106.69 684.384 L1107.25 684.384 L1107.81 684.384 L1108.37 684.384 L1108.93 684.384 L1109.49 684.384 L1110.04 684.384 L1110.6 684.384 L1111.16 684.384 L1111.72 684.384 L1112.28 684.384 L1112.84 684.384 L1113.4 684.384 L1113.96 684.384 L1114.52 684.384 L1115.08 684.384 L1115.64 684.384 L1116.2 684.384 L1116.76 684.384 L1117.31 684.384 L1117.87 684.384 L1118.43 684.384 L1118.99 684.384 L1119.55 684.384 L1120.11 684.384 L1120.67 684.384 L1121.23 684.384 L1121.79 684.384 L1122.35 684.384 L1122.91 684.384 L1123.47 684.384 L1124.03 684.384 L1124.59 684.384 L1125.14 684.384 L1125.7 684.384 L1126.26 684.384 L1126.82 684.384 L1127.38 684.384 L1127.94 684.384 L1128.5 684.384 L1129.06 684.384 L1129.62 684.384 L1130.18 684.384 L1130.74 684.384 L1131.3 684.384 L1131.86 684.384 L1132.41 684.384 L1132.97 684.384 L1133.53 684.384 L1134.09 684.384 L1134.65 684.384 L1135.21 684.384 L1135.77 684.384 L1136.33 684.384 L1136.89 684.384 L1137.45 684.384 L1138.01 684.384 L1138.57 684.384 L1139.13 684.384 L1139.68 684.384 L1140.24 684.384 L1140.8 684.384 L1141.36 684.384 L1141.92 684.384 L1142.48 684.384 L1143.04 684.384 L1143.6 684.384 L1144.16 684.384 L1144.72 684.384 L1145.28 684.384 L1145.84 684.384 L1146.4 684.384 L1146.96 684.384 L1147.51 684.384 L1148.07 684.384 L1148.63 684.384 L1149.19 684.384 L1149.75 684.384 L1150.31 684.384 L1150.87 684.384 L1151.43 684.384 L1151.99 684.384 L1152.55 684.384 L1153.11 684.384 L1153.67 684.384 L1154.23 684.384 L1154.78 684.384 L1155.34 684.384 L1155.9 684.384 L1156.46 684.384 L1157.02 684.384 L1157.58 684.384 L1158.14 684.384 L1158.7 684.384 L1159.26 684.384 L1159.82 684.384 L1160.38 684.384 L1160.94 684.384 L1161.5 684.384 L1162.05 684.384 L1162.61 684.384 L1163.17 684.384 L1163.73 684.384 L1164.29 684.384 L1164.85 684.384 L1165.41 684.384 L1165.97 684.384 L1166.53 684.384 L1167.09 684.384 L1167.65 684.384 L1168.21 684.384 L1168.77 684.384 L1169.33 684.384 L1169.88 684.384 L1170.44 684.384 L1171 684.384 L1171.56 684.384 L1172.12 684.384 L1172.68 684.384 L1173.24 684.384 L1173.8 684.384 L1174.36 684.384 L1174.92 684.384 L1175.48 684.384 L1176.04 684.384 L1176.6 684.384 L1177.15 684.384 L1177.71 684.384 L1178.27 684.384 L1178.83 684.384 L1179.39 684.384 L1179.95 684.384 L1180.51 684.384 L1181.07 684.384 L1181.63 684.384 L1182.19 684.384 L1182.75 684.384 L1183.31 684.384 L1183.87 684.384 L1184.43 684.384 L1184.98 684.384 L1185.54 684.384 L1186.1 684.384 L1186.66 684.384 L1187.22 684.384 L1187.78 684.384 L1188.34 684.384 L1188.9 684.384 L1189.46 684.384 L1190.02 684.384 L1190.58 684.384 L1191.14 684.384 L1191.7 684.384 L1192.25 684.384 L1192.81 684.384 L1193.37 684.384 L1193.93 684.384 L1194.49 684.384 L1195.05 684.384 L1195.61 684.384 L1196.17 684.384 L1196.73 684.384 L1197.29 684.384 L1197.85 684.384 L1198.41 684.384 L1198.97 684.384 L1199.52 684.384 L1200.08 684.384 L1200.64 684.384 L1201.2 684.384 L1201.76 684.384 L1202.32 684.384 L1202.88 684.384 L1203.44 684.384 L1204 684.384 L1204.56 684.384 L1205.12 684.384 L1205.68 684.384 L1206.24 684.384 L1206.8 684.384 L1207.35 684.384 L1207.91 684.384 L1208.47 684.384 L1209.03 684.384 L1209.59 684.384 L1210.15 684.384 L1210.71 684.384 L1211.27 684.384 L1211.83 684.384 L1212.39 684.384 L1212.95 684.384 L1213.51 684.384 L1214.07 684.384 L1214.62 684.384 L1215.18 684.384 L1215.74 684.384 L1216.3 684.384 L1216.86 684.384 L1217.42 684.384 L1217.98 684.384 L1218.54 684.384 L1219.1 684.384 L1219.66 684.384 L1220.22 684.384 L1220.78 684.384 L1221.34 684.384 L1221.89 684.384 L1222.45 684.384 L1223.01 684.384 L1223.57 684.384 L1224.13 684.384 L1224.69 684.384 L1225.25 684.384 L1225.81 684.384 L1226.37 684.384 L1226.93 684.384 L1227.49 684.384 L1228.05 684.384 L1228.61 684.384 L1229.17 684.384 L1229.72 684.384 L1230.28 684.384 L1230.84 684.384 L1231.4 684.384 L1231.96 684.384 L1232.52 684.384 L1233.08 684.384 L1233.64 684.384 L1234.2 684.384 L1234.76 684.384 L1235.32 684.384 L1235.88 684.384 L1236.44 684.384 L1236.99 684.384 L1237.55 684.384 L1238.11 684.384 L1238.67 684.384 L1239.23 684.384 L1239.79 684.384 L1240.35 684.384 L1240.91 684.384 L1241.47 684.384 L1242.03 684.384 L1242.59 684.384 L1243.15 684.384 L1243.71 684.384 L1244.26 684.384 L1244.82 684.384 L1245.38 684.384 L1245.94 684.384 L1246.5 684.384 L1247.06 684.384 L1247.62 684.384 L1248.18 684.384 L1248.74 684.384 L1249.3 684.384 L1249.86 684.384 L1250.42 684.384 L1250.98 684.384 L1251.54 684.384 L1252.09 684.384 L1252.65 684.384 L1253.21 684.384 L1253.77 684.384 L1254.33 684.384 L1254.89 684.384 L1255.45 684.384 L1256.01 684.384 L1256.57 684.384 L1257.13 684.384 L1257.69 684.384 L1258.25 684.384 L1258.81 684.384 L1259.36 684.384 L1259.92 684.384 L1260.48 684.384 L1261.04 684.384 L1261.6 684.384 L1262.16 684.384 L1262.72 684.384 L1263.28 684.384 L1263.84 684.384 L1264.4 684.384 L1264.96 684.384 L1265.52 684.384 L1266.08 684.384 L1266.63 684.384 L1267.19 684.384 L1267.75 684.384 L1268.31 684.384 L1268.87 684.384 L1269.43 684.384 L1269.99 684.384 L1270.55 684.384 L1271.11 684.384 L1271.67 684.384 L1272.23 684.384 L1272.79 684.384 L1273.35 684.384 L1273.91 684.384 L1274.46 684.384 L1275.02 684.384 L1275.58 684.384 L1276.14 684.384 L1276.7 684.384 L1277.26 684.384 L1277.82 684.384 L1278.38 684.384 L1278.94 684.384 L1279.5 684.384 L1280.06 684.384 L1280.62 684.384 L1281.18 684.384 L1281.73 684.384 L1282.29 684.384 L1282.85 684.384 L1283.41 684.384 L1283.97 684.384 L1284.53 684.384 L1285.09 684.384 L1285.65 684.384 L1286.21 684.384 L1286.77 684.384 L1287.33 684.384 L1287.89 684.384 L1288.45 684.384 L1289 684.384 L1289.56 684.384 L1290.12 684.384 L1290.68 684.384 L1291.24 684.384 L1291.8 684.384 L1292.36 684.384 L1292.92 684.384 L1293.48 684.384 L1294.04 684.384 L1294.6 684.384 L1295.16 684.384 L1295.72 684.384 L1296.28 684.384 L1296.83 684.384 L1297.39 684.384 L1297.95 684.384 L1298.51 684.384 L1299.07 684.384 L1299.63 684.384 L1300.19 684.384 L1300.75 684.384 L1301.31 684.384 L1301.87 684.384 L1302.43 684.384 L1302.99 684.384 L1303.55 684.384 L1304.1 684.384 L1304.66 684.384 L1305.22 684.384 L1305.78 684.384 L1306.34 684.384 L1306.9 684.384 L1307.46 684.384 L1308.02 684.384 L1308.58 684.384 L1309.14 684.384 L1309.7 684.384 L1310.26 684.384 L1310.82 684.384 L1311.38 684.384 L1311.93 684.384 L1312.49 684.384 L1313.05 684.384 L1313.61 684.384 L1314.17 684.384 L1314.73 684.384 L1315.29 684.384 L1315.85 684.384 L1316.41 684.384 L1316.97 684.384 L1317.53 684.384 L1318.09 684.384 L1318.65 684.384 L1319.2 684.384 L1319.76 684.384 L1320.32 684.384 L1320.88 684.384 L1321.44 684.384 L1322 684.384 L1322.56 684.384 L1323.12 684.384 L1323.68 684.384 L1324.24 684.384 L1324.8 684.384 L1325.36 684.384 L1325.92 684.384 L1326.47 684.384 L1327.03 684.384 L1327.59 684.384 L1328.15 684.384 L1328.71 684.384 L1329.27 684.384 L1329.83 684.384 L1330.39 684.384 L1330.95 684.384 L1331.51 684.384 L1332.07 684.384 L1332.63 684.384 L1333.19 684.384 L1333.75 684.384 L1334.3 684.384 L1334.86 684.384 L1335.42 684.384 L1335.98 684.384 L1336.54 684.384 L1337.1 684.384 L1337.66 684.384 L1338.22 684.384 L1338.78 684.384 L1339.34 684.384 L1339.9 684.384 L1340.46 684.384 L1341.02 684.384 L1341.57 684.384 L1342.13 684.384 L1342.69 684.384 L1343.25 684.384 L1343.81 684.384 L1344.37 684.384 L1344.93 684.384 L1345.49 684.384 L1346.05 684.384 L1346.61 684.384 L1347.17 684.384 L1347.73 684.384 L1348.29 684.384 L1348.84 684.384 L1349.4 684.384 L1349.96 684.384 L1350.52 684.384 L1351.08 684.384 L1351.64 684.384 L1352.2 684.384 L1352.76 684.384 L1353.32 684.384 L1353.88 684.384 L1354.44 684.384 L1355 684.384 L1355.56 684.384 L1356.12 684.384 L1356.67 684.384 L1357.23 684.384 L1357.79 684.384 L1358.35 684.384 L1358.91 684.384 L1359.47 684.384 L1360.03 684.384 L1360.59 684.384 L1361.15 684.384 L1361.71 684.384 L1362.27 684.384 L1362.83 684.384 L1363.39 684.384 L1363.94 684.384 L1364.5 684.384 L1365.06 684.384 L1365.62 684.384 L1366.18 684.384 L1366.74 684.384 L1367.3 684.384 L1367.86 684.384 L1368.42 684.384 L1368.98 684.384 L1369.54 684.384 L1370.1 684.384 L1370.66 684.384 L1371.21 684.384 L1371.77 684.384 L1372.33 684.384 L1372.89 684.384 L1373.45 684.384 L1374.01 684.384 L1374.57 684.384 L1375.13 684.384 L1375.69 684.384 L1376.25 684.384 L1376.81 684.384 L1377.37 684.384 L1377.93 684.384 L1378.49 684.384 L1379.04 684.384 L1379.6 684.384 L1380.16 684.384 L1380.72 684.384 L1381.28 684.384 L1381.84 684.384 L1382.4 684.384 L1382.96 684.384 L1383.52 684.384 L1384.08 684.384 L1384.64 684.384 L1385.2 684.384 L1385.76 684.384 L1386.31 684.384 L1386.87 684.384 L1387.43 684.384 L1387.99 684.384 L1388.55 684.384 L1389.11 684.384 L1389.67 684.384 L1390.23 684.384 L1390.79 684.384 L1391.35 684.384 L1391.91 684.384 L1392.47 684.384 L1393.03 684.384 L1393.58 684.384 L1394.14 684.384 L1394.7 684.384 L1395.26 684.384 L1395.82 684.384 L1396.38 684.384 L1396.94 684.384 L1397.5 684.384 L1398.06 684.384 L1398.62 684.384 L1399.18 684.384 L1399.74 684.384 L1400.3 684.384 L1400.86 684.384 L1401.41 684.384 L1401.97 684.384 L1402.53 684.384 L1403.09 684.384 L1403.65 684.384 L1404.21 684.384 L1404.77 684.384 L1405.33 684.384 L1405.89 684.384 L1406.45 684.384 L1407.01 684.384 L1407.57 684.384 L1408.13 684.384 L1408.68 684.384 L1409.24 684.384 L1409.8 684.384 L1410.36 684.384 L1410.92 684.384 L1411.48 684.384 L1412.04 684.384 L1412.6 684.384 L1413.16 684.384 L1413.72 684.384 L1414.28 684.384 L1414.84 684.384 L1415.4 684.384 L1415.95 684.384 L1416.51 684.384 L1417.07 684.384 L1417.63 684.384 L1418.19 684.384 L1418.75 684.384 L1419.31 684.384 L1419.87 684.384 L1420.43 684.384 L1420.99 684.384 L1421.55 684.384 L1422.11 684.384 L1422.67 684.384 L1423.23 684.384 L1423.78 684.384 L1424.34 684.384 L1424.9 684.384 L1425.46 684.384 L1426.02 684.384 L1426.58 684.384 L1427.14 684.384 L1427.7 684.384 L1428.26 684.384 L1428.82 684.384 L1429.38 684.384 L1429.94 684.384 L1430.5 684.384 L1431.05 684.384 L1431.61 684.384 L1432.17 684.384 L1432.73 684.384 L1433.29 684.384 L1433.85 684.384 L1434.41 684.384 L1434.97 684.384 L1435.53 684.384 L1436.09 684.384 L1436.65 684.384 L1437.21 684.384 L1437.77 684.384 L1438.33 684.384 L1438.88 684.384 L1439.44 684.384 L1440 684.384 L1440.56 684.384 L1441.12 684.384 L1441.68 684.384 L1442.24 684.384 L1442.8 684.384 L1443.36 684.384 L1443.92 684.384 L1444.48 684.384 L1445.04 684.384 L1445.6 684.384 L1446.15 684.384 L1446.71 684.384 L1447.27 684.384 L1447.83 684.384 L1448.39 684.384 L1448.95 684.384 L1449.51 684.384 L1450.07 684.384 L1450.63 684.384 L1451.19 684.384 L1451.75 684.384 L1452.31 684.384 L1452.87 684.384 L1453.42 684.384 L1453.98 684.384 L1454.54 684.384 L1455.1 684.384 L1455.66 684.384 L1456.22 684.384 L1456.78 684.384 L1457.34 684.384 L1457.9 684.384 L1458.46 684.384 L1459.02 684.384 L1459.58 684.384 L1460.14 684.384 L1460.7 684.384 L1461.25 684.384 L1461.81 684.384 L1462.37 684.384 L1462.93 684.384 L1463.49 684.384 L1464.05 684.384 L1464.61 684.384 L1465.17 684.384 L1465.73 684.384 L1466.29 684.384 L1466.85 684.384 L1467.41 684.384 L1467.97 684.384 L1468.52 684.384 L1469.08 684.384 L1469.64 684.384 L1470.2 684.384 L1470.76 684.384 L1471.32 684.384 L1471.88 684.384 L1472.44 684.384 L1473 684.384 L1473.56 684.384 L1474.12 684.384 L1474.68 684.384 L1475.24 684.384 L1475.79 684.384 L1476.35 684.384 L1476.91 684.384 L1477.47 684.384 L1478.03 684.384 L1478.59 684.384 L1479.15 684.384 L1479.71 684.384 L1480.27 684.384 L1480.83 684.384 L1481.39 684.384 L1481.95 684.384 L1482.51 684.384 L1483.07 684.384 L1483.62 684.384 L1484.18 684.384 L1484.74 684.384 L1485.3 684.384 L1485.86 684.384 L1486.42 684.384 L1486.98 684.384 L1487.54 684.384 L1488.1 684.384 L1488.66 684.384 L1489.22 684.384 L1489.78 684.384 L1490.34 684.384 L1490.89 684.384 L1491.45 684.384 L1492.01 684.384 L1492.57 684.384 L1493.13 684.384 L1493.69 684.384 L1494.25 684.384 L1494.81 684.384 L1495.37 684.384 L1495.93 684.384 L1496.49 684.384 L1497.05 684.384 L1497.61 684.384 L1498.16 684.384 L1498.72 684.384 L1499.28 684.384 L1499.84 684.384 L1500.4 684.384 L1500.96 684.384 L1501.52 684.384 L1502.08 684.384 L1502.64 684.384 L1503.2 684.384 L1503.76 684.384 L1504.32 684.384 L1504.88 684.384 L1505.44 684.384 L1505.99 684.384 L1506.55 684.384 L1507.11 684.384 L1507.67 684.384 L1508.23 684.384 L1508.79 684.384 L1509.35 684.384 L1509.91 684.384 L1510.47 684.384 L1511.03 684.384 L1511.59 684.384 L1512.15 684.384 L1512.71 684.384 L1513.26 684.384 L1513.82 684.384 L1514.38 684.384 L1514.94 684.384 L1515.5 684.384 L1516.06 684.384 L1516.62 684.384 L1517.18 684.384 L1517.74 684.384 L1518.3 684.384 L1518.86 684.384 L1519.42 684.384 L1519.98 684.384 L1520.53 684.384 L1521.09 684.384 L1521.65 684.384 L1522.21 684.384 L1522.77 684.384 L1523.33 684.384 L1523.89 684.384 L1524.45 684.384 L1525.01 684.384 L1525.57 684.384 L1526.13 684.384 L1526.69 684.384 L1527.25 684.384 L1527.81 684.384 L1528.36 684.384 L1528.92 684.384 L1529.48 684.384 L1530.04 684.384 L1530.6 684.384 L1531.16 684.384 L1531.72 684.384 L1532.28 684.384 L1532.84 684.384 L1533.4 684.384 L1533.96 684.384 L1534.52 684.384 L1535.08 684.384 L1535.63 684.384 L1536.19 684.384 L1536.75 684.384 L1537.31 684.384 L1537.87 684.384 L1538.43 684.384 L1538.99 684.384 L1539.55 684.384 L1540.11 684.384 L1540.67 684.384 L1541.23 684.384 L1541.79 684.384 L1542.35 684.384 L1542.9 684.384 L1543.46 684.384 L1544.02 684.384 L1544.58 684.384 L1545.14 684.384 L1545.7 684.384 L1546.26 684.384 L1546.82 684.384 L1547.38 684.384 L1547.94 684.384 L1548.5 684.384 L1549.06 684.384 L1549.62 684.384 L1550.18 684.384 L1550.73 684.384 L1551.29 684.384 L1551.85 684.384 L1552.41 684.384 L1552.97 684.384 L1553.53 684.384 L1554.09 684.384 L1554.65 684.384 L1555.21 684.384 L1555.77 684.384 L1556.33 684.384 L1556.89 684.384 L1557.45 684.384 L1558 684.384 L1558.56 684.384 L1559.12 684.384 L1559.68 684.384 L1560.24 684.384 L1560.8 684.384 L1561.36 684.384 L1561.92 684.384 L1562.48 684.384 L1563.04 684.384 L1563.6 684.384 L1564.16 684.384 L1564.72 684.384 L1565.28 684.384 L1565.83 684.384 L1566.39 684.384 L1566.95 684.384 L1567.51 684.384 L1568.07 684.384 L1568.63 684.384 L1569.19 684.384 L1569.75 684.384 L1570.31 684.384 L1570.87 684.384 L1571.43 684.384 L1571.99 684.384 L1572.55 684.384 L1573.1 684.384 L1573.66 684.384 L1574.22 684.384 L1574.78 684.384 L1575.34 684.384 L1575.9 684.384 L1576.46 684.384 L1577.02 684.384 L1577.58 684.384 L1578.14 684.384 L1578.7 684.384 L1579.26 684.384 L1579.82 684.384 L1580.37 684.384 L1580.93 684.384 L1581.49 684.384 L1582.05 684.384 L1582.61 684.384 L1583.17 684.384 L1583.73 684.384 L1584.29 684.384 L1584.85 684.384 L1585.41 684.384 L1585.97 684.384 L1586.53 684.384 L1587.09 684.384 L1587.65 684.384 L1588.2 684.384 L1588.76 684.384 L1589.32 684.384 L1589.88 684.384 L1590.44 684.384 L1591 684.384 L1591.56 684.384 L1592.12 684.384 L1592.68 684.384 L1593.24 684.384 L1593.8 684.384 L1594.36 684.384 L1594.92 684.384 L1595.47 684.384 L1596.03 684.384 L1596.59 684.384 L1597.15 684.384 L1597.71 684.384 L1598.27 684.384 L1598.83 684.384 L1599.39 684.384 L1599.95 684.384 L1600.51 684.384 L1601.07 684.384 L1601.63 684.384 L1602.19 684.384 L1602.74 684.384 L1603.3 684.384 L1603.86 684.384 L1604.42 684.384 L1604.98 684.384 L1605.54 684.384 L1606.1 684.384 L1606.66 684.384 L1607.22 684.384 L1607.78 684.384 L1608.34 684.384 L1608.9 684.384 L1609.46 684.384 L1610.02 684.384 L1610.57 684.384 L1611.13 684.384 L1611.69 684.384 L1612.25 684.384 L1612.81 684.384 L1613.37 684.384 L1613.93 684.384 L1614.49 684.384 L1615.05 684.384 L1615.61 684.384 L1616.17 684.384 L1616.73 684.384 L1617.29 684.384 L1617.84 684.384 L1618.4 684.384 L1618.96 684.384 L1619.52 684.384 L1620.08 684.384 L1620.64 684.384 L1621.2 684.384 L1621.76 684.384 L1622.32 684.384 L1622.88 684.384 L1623.44 684.384 L1624 684.384 L1624.56 684.384 L1625.11 684.384 L1625.67 684.384 L1626.23 684.384 L1626.79 684.384 L1627.35 684.384 L1627.91 684.384 L1628.47 684.384 L1629.03 684.384 L1629.59 684.384 L1630.15 684.384 L1630.71 684.384 L1631.27 684.384 L1631.83 684.384 L1632.39 684.384 L1632.94 684.384 L1633.5 684.384 L1634.06 684.384 L1634.62 684.384 L1635.18 684.384 L1635.74 684.384 L1636.3 684.384 L1636.86 684.384 L1637.42 684.384 L1637.98 684.384 L1638.54 684.384 L1639.1 684.384 L1639.66 684.384 L1640.21 684.384 L1640.77 684.384 L1641.33 684.384 L1641.89 684.384 L1642.45 684.384 L1643.01 684.384 L1643.57 684.384 L1644.13 684.384 L1644.69 684.384 L1645.25 684.384 L1645.81 684.384 L1646.37 684.384 L1646.93 684.384 L1647.48 684.384 L1648.04 684.384 L1648.6 684.384 L1649.16 684.384 L1649.72 684.384 L1650.28 684.384 L1650.84 684.384 L1651.4 684.384 L1651.96 684.384 L1652.52 684.384 L1653.08 684.384 L1653.64 684.384 L1654.2 684.384 L1654.76 684.384 L1655.31 684.384 L1655.87 684.384 L1656.43 684.384 L1656.99 684.384 L1657.55 684.384 L1658.11 684.384 L1658.67 684.384 L1659.23 684.384 L1659.79 684.384 L1660.35 684.384 L1660.91 684.384 L1661.47 684.384 L1662.03 684.384 L1662.58 684.384 L1663.14 684.384 L1663.7 684.384 L1664.26 684.384 L1664.82 684.384 L1665.38 684.384 L1665.94 684.384 L1666.5 684.384 L1667.06 684.384 L1667.62 684.384 L1668.18 684.384 L1668.74 684.384 L1669.3 684.384 L1669.85 684.384 L1670.41 684.384 L1670.97 684.384 L1671.53 684.384 L1672.09 684.384 L1672.65 684.384 L1673.21 684.384 L1673.77 684.384 L1674.33 684.384 L1674.89 684.384 L1675.45 684.384 L1676.01 684.384 L1676.57 684.384 L1677.13 684.384 L1677.68 684.384 L1678.24 684.384 L1678.8 684.384 L1679.36 684.384 L1679.92 684.384 L1680.48 684.384 L1681.04 684.384 L1681.6 684.384 L1682.16 684.384 L1682.72 684.384 L1683.28 684.384 L1683.84 684.384 L1684.4 684.384 L1684.95 684.384 L1685.51 684.384 L1686.07 684.384 L1686.63 684.384 L1687.19 684.384 L1687.75 684.384 L1688.31 684.384 L1688.87 684.384 L1689.43 684.384 L1689.99 684.384 L1690.55 684.384 L1691.11 684.384 L1691.67 684.384 L1692.23 684.384 L1692.78 684.384 L1693.34 684.384 L1693.9 684.384 L1694.46 684.384 L1695.02 684.384 L1695.58 684.384 L1696.14 684.384 L1696.7 684.384 L1697.26 684.384 L1697.82 684.384 L1698.38 684.384 L1698.94 684.384 L1699.5 684.384 L1700.05 684.384 L1700.61 684.384 L1701.17 684.384 L1701.73 684.384 L1702.29 684.384 L1702.85 684.384 L1703.41 684.384 L1703.97 684.384 L1704.53 684.384 L1705.09 684.384 L1705.65 684.384 L1706.21 684.384 L1706.77 684.384 L1707.32 684.384 L1707.88 684.384 L1708.44 684.384 L1709 684.384 L1709.56 684.384 L1710.12 684.384 L1710.68 684.384 L1711.24 684.384 L1711.8 684.384 L1712.36 684.384 L1712.92 684.384 L1713.48 684.384 L1714.04 684.384 L1714.6 684.384 L1715.15 684.384 L1715.71 684.384 L1716.27 684.384 L1716.83 684.384 L1717.39 684.384 L1717.95 684.384 L1718.51 684.384 L1719.07 684.384 L1719.63 684.384 L1720.19 684.384 L1720.75 684.384 L1721.31 684.384 L1721.87 684.384 L1722.42 684.384 L1722.98 684.384 L1723.54 684.384 L1724.1 684.384 L1724.66 684.384 L1725.22 684.384 L1725.78 684.384 L1726.34 684.384 L1726.9 684.384 L1727.46 684.384 L1728.02 684.384 L1728.58 684.384 L1729.14 684.384 L1729.69 684.384 L1730.25 684.384 L1730.81 684.384 L1731.37 684.384 L1731.93 684.384 L1732.49 684.384 L1733.05 684.384 L1733.61 684.384 L1734.17 684.384 L1734.73 684.384 L1735.29 684.384 L1735.85 684.384 L1736.41 684.384 L1736.97 684.384 L1737.52 684.384 L1738.08 684.384 L1738.64 684.384 L1739.2 684.384 L1739.76 684.384 L1740.32 684.384 L1740.88 684.384 L1741.44 684.384 L1742 684.384 L1742.56 684.384 L1743.12 684.384 L1743.68 684.384 L1744.24 684.384 L1744.79 684.384 L1745.35 684.384 L1745.91 684.384 L1746.47 684.384 L1747.03 684.384 L1747.59 684.384 L1748.15 684.384 L1748.71 684.384 L1749.27 684.384 L1749.83 684.384 L1750.39 684.384 L1750.95 684.384 L1751.51 684.384 L1752.06 684.384 L1752.62 684.384 L1753.18 684.384 L1753.74 684.384 L1754.3 684.384 L1754.86 684.384 L1755.42 684.384 L1755.98 684.384 L1756.54 684.384 L1757.1 684.384 L1757.66 684.384 L1758.22 684.384 L1758.78 684.384 L1759.34 684.384 L1759.89 684.384 L1760.45 684.384 L1761.01 684.384 L1761.57 684.384 L1762.13 684.384 L1762.69 684.384 L1763.25 684.384 L1763.81 684.384 L1764.37 684.384 L1764.93 684.384 L1765.49 684.384 L1766.05 684.384 L1766.61 684.384 L1767.16 684.384 L1767.72 684.384 L1768.28 684.384 L1768.84 684.384 L1769.4 684.384 L1769.96 684.384 L1770.52 684.384 L1771.08 684.384 L1771.64 684.384 L1772.2 684.384 L1772.76 684.384 L1773.32 684.384 L1773.88 684.384 L1774.43 684.384 L1774.99 684.384 L1775.55 684.384 L1776.11 684.384 L1776.67 684.384 L1777.23 684.384 L1777.79 684.384 L1778.35 684.384 L1778.91 684.384 L1779.47 684.384 L1780.03 684.384 L1780.59 684.384 L1781.15 684.384 L1781.71 684.384 L1782.26 684.384 L1782.82 684.384 L1783.38 684.384 L1783.94 684.384 L1784.5 684.384 L1785.06 684.384 L1785.62 684.384 L1786.18 684.384 L1786.74 684.384 L1787.3 684.384 L1787.86 684.384 L1788.42 684.384 L1788.98 684.384 L1789.53 684.384 L1790.09 684.384 L1790.65 684.384 L1791.21 684.384 L1791.77 684.384 L1792.33 684.384 L1792.89 684.384 L1793.45 684.384 L1794.01 684.384 L1794.57 684.384 L1795.13 684.384 L1795.69 684.384 L1796.25 684.384 L1796.8 684.384 L1797.36 684.384 L1797.92 684.384 L1798.48 684.384 L1799.04 684.384 L1799.6 684.384 L1800.16 684.384 L1800.72 684.384 L1801.28 684.384 L1801.84 684.384 L1802.4 684.384 L1802.96 684.384 L1803.52 684.384 L1804.08 684.384 L1804.63 684.384 L1805.19 684.384 L1805.75 684.384 L1806.31 684.384 L1806.87 684.384 L1807.43 684.384 L1807.99 684.384 L1808.55 684.384 L1809.11 684.384 L1809.67 684.384 L1810.23 684.384 L1810.79 684.384 L1811.35 684.384 L1811.9 684.384 L1812.46 684.384 L1813.02 684.384 L1813.58 684.384 L1814.14 684.384 L1814.7 684.384 L1815.26 684.384 L1815.82 684.384 L1816.38 684.384 L1816.94 684.384 L1817.5 684.384 L1818.06 684.384 L1818.62 684.384 L1819.18 684.384 L1819.73 684.384 L1820.29 684.384 L1820.85 684.384 L1821.41 684.384 L1821.97 684.384 L1822.53 684.384 L1823.09 684.384 L1823.65 684.384 L1824.21 684.384 L1824.77 684.384 L1825.33 684.384 L1825.89 684.384 L1826.45 684.384 L1827 684.384 L1827.56 684.384 L1828.12 684.384 L1828.68 684.384 L1829.24 684.384 L1829.8 684.384 L1830.36 684.384 L1830.92 684.384 L1831.48 684.384 L1832.04 684.384 L1832.6 684.384 L1833.16 684.384 L1833.72 684.384 L1834.27 684.384 L1834.83 684.384 L1835.39 684.384 L1835.95 684.384 L1836.51 684.384 L1837.07 684.384 L1837.63 684.384 L1838.19 684.384 L1838.19 682.071 L1837.63 682.071 L1837.07 682.071 L1836.51 682.071 L1835.95 682.071 L1835.39 682.071 L1834.83 682.071 L1834.27 682.071 L1833.72 682.071 L1833.16 682.071 L1832.6 682.071 L1832.04 682.071 L1831.48 682.071 L1830.92 682.071 L1830.36 682.071 L1829.8 682.071 L1829.24 682.071 L1828.68 682.071 L1828.12 682.071 L1827.56 682.071 L1827 682.071 L1826.45 682.071 L1825.89 682.071 L1825.33 682.071 L1824.77 682.071 L1824.21 682.071 L1823.65 682.071 L1823.09 682.071 L1822.53 682.071 L1821.97 682.071 L1821.41 682.071 L1820.85 682.071 L1820.29 682.071 L1819.73 682.071 L1819.18 682.071 L1818.62 682.071 L1818.06 682.071 L1817.5 682.071 L1816.94 682.071 L1816.38 682.071 L1815.82 682.071 L1815.26 682.071 L1814.7 682.071 L1814.14 682.071 L1813.58 682.071 L1813.02 682.071 L1812.46 682.071 L1811.9 682.071 L1811.35 682.071 L1810.79 682.071 L1810.23 682.071 L1809.67 682.071 L1809.11 682.071 L1808.55 682.071 L1807.99 682.071 L1807.43 682.071 L1806.87 682.071 L1806.31 682.071 L1805.75 682.071 L1805.19 682.071 L1804.63 682.071 L1804.08 682.071 L1803.52 682.071 L1802.96 682.071 L1802.4 682.071 L1801.84 682.071 L1801.28 682.071 L1800.72 682.071 L1800.16 682.071 L1799.6 682.071 L1799.04 682.071 L1798.48 682.071 L1797.92 682.071 L1797.36 682.071 L1796.8 682.071 L1796.25 682.071 L1795.69 682.071 L1795.13 682.071 L1794.57 682.071 L1794.01 682.071 L1793.45 682.071 L1792.89 682.071 L1792.33 682.071 L1791.77 682.071 L1791.21 682.071 L1790.65 682.071 L1790.09 682.071 L1789.53 682.071 L1788.98 682.071 L1788.42 682.071 L1787.86 682.071 L1787.3 682.071 L1786.74 682.071 L1786.18 682.071 L1785.62 682.071 L1785.06 682.071 L1784.5 682.071 L1783.94 682.071 L1783.38 682.071 L1782.82 682.071 L1782.26 682.071 L1781.71 682.071 L1781.15 682.071 L1780.59 682.071 L1780.03 682.071 L1779.47 682.071 L1778.91 682.071 L1778.35 682.071 L1777.79 682.071 L1777.23 682.071 L1776.67 682.071 L1776.11 682.071 L1775.55 682.071 L1774.99 682.071 L1774.43 682.071 L1773.88 682.071 L1773.32 682.071 L1772.76 682.071 L1772.2 682.071 L1771.64 682.071 L1771.08 682.071 L1770.52 682.071 L1769.96 682.071 L1769.4 682.071 L1768.84 682.071 L1768.28 682.071 L1767.72 682.071 L1767.16 682.071 L1766.61 682.071 L1766.05 682.071 L1765.49 682.071 L1764.93 682.071 L1764.37 682.071 L1763.81 682.071 L1763.25 682.071 L1762.69 682.071 L1762.13 682.071 L1761.57 682.071 L1761.01 682.071 L1760.45 682.071 L1759.89 682.071 L1759.34 682.071 L1758.78 682.071 L1758.22 682.071 L1757.66 682.071 L1757.1 682.071 L1756.54 682.071 L1755.98 682.071 L1755.42 682.071 L1754.86 682.071 L1754.3 682.071 L1753.74 682.071 L1753.18 682.071 L1752.62 682.071 L1752.06 682.071 L1751.51 682.071 L1750.95 682.071 L1750.39 682.071 L1749.83 682.071 L1749.27 682.071 L1748.71 682.071 L1748.15 682.071 L1747.59 682.071 L1747.03 682.071 L1746.47 682.071 L1745.91 682.071 L1745.35 682.071 L1744.79 682.071 L1744.24 682.071 L1743.68 682.071 L1743.12 682.071 L1742.56 682.071 L1742 682.071 L1741.44 682.071 L1740.88 682.071 L1740.32 682.071 L1739.76 682.071 L1739.2 682.071 L1738.64 682.071 L1738.08 682.071 L1737.52 682.071 L1736.97 682.071 L1736.41 682.071 L1735.85 682.071 L1735.29 682.071 L1734.73 682.071 L1734.17 682.071 L1733.61 682.071 L1733.05 682.071 L1732.49 682.071 L1731.93 682.071 L1731.37 682.071 L1730.81 682.071 L1730.25 682.071 L1729.69 682.071 L1729.14 682.071 L1728.58 682.071 L1728.02 682.071 L1727.46 682.071 L1726.9 682.071 L1726.34 682.071 L1725.78 682.071 L1725.22 682.071 L1724.66 682.071 L1724.1 682.071 L1723.54 682.071 L1722.98 682.071 L1722.42 682.071 L1721.87 682.071 L1721.31 682.071 L1720.75 682.071 L1720.19 682.071 L1719.63 682.071 L1719.07 682.071 L1718.51 682.071 L1717.95 682.071 L1717.39 682.071 L1716.83 682.071 L1716.27 682.071 L1715.71 682.071 L1715.15 682.071 L1714.6 682.071 L1714.04 682.071 L1713.48 682.071 L1712.92 682.071 L1712.36 682.071 L1711.8 682.071 L1711.24 682.071 L1710.68 682.071 L1710.12 682.071 L1709.56 682.071 L1709 682.071 L1708.44 682.071 L1707.88 682.071 L1707.32 682.071 L1706.77 682.071 L1706.21 682.071 L1705.65 682.071 L1705.09 682.071 L1704.53 682.071 L1703.97 682.071 L1703.41 682.071 L1702.85 682.071 L1702.29 682.071 L1701.73 682.071 L1701.17 682.071 L1700.61 682.071 L1700.05 682.071 L1699.5 682.071 L1698.94 682.071 L1698.38 682.071 L1697.82 682.071 L1697.26 682.071 L1696.7 682.071 L1696.14 682.071 L1695.58 682.071 L1695.02 682.071 L1694.46 682.071 L1693.9 682.071 L1693.34 682.071 L1692.78 682.071 L1692.23 682.071 L1691.67 682.071 L1691.11 682.071 L1690.55 682.071 L1689.99 682.071 L1689.43 682.071 L1688.87 682.071 L1688.31 682.071 L1687.75 682.071 L1687.19 682.071 L1686.63 682.071 L1686.07 682.071 L1685.51 682.071 L1684.95 682.071 L1684.4 682.071 L1683.84 682.071 L1683.28 682.071 L1682.72 682.071 L1682.16 682.071 L1681.6 682.071 L1681.04 682.071 L1680.48 682.071 L1679.92 682.071 L1679.36 682.071 L1678.8 682.071 L1678.24 682.071 L1677.68 682.071 L1677.13 682.071 L1676.57 682.071 L1676.01 682.071 L1675.45 682.071 L1674.89 682.071 L1674.33 682.071 L1673.77 682.071 L1673.21 682.071 L1672.65 682.071 L1672.09 682.071 L1671.53 682.071 L1670.97 682.071 L1670.41 682.071 L1669.85 682.071 L1669.3 682.071 L1668.74 682.071 L1668.18 682.071 L1667.62 682.071 L1667.06 682.071 L1666.5 682.071 L1665.94 682.071 L1665.38 682.071 L1664.82 682.071 L1664.26 682.071 L1663.7 682.071 L1663.14 682.071 L1662.58 682.071 L1662.03 682.071 L1661.47 682.071 L1660.91 682.071 L1660.35 682.071 L1659.79 682.071 L1659.23 682.071 L1658.67 682.071 L1658.11 682.071 L1657.55 682.071 L1656.99 682.071 L1656.43 682.071 L1655.87 682.071 L1655.31 682.071 L1654.76 682.071 L1654.2 682.071 L1653.64 682.071 L1653.08 682.071 L1652.52 682.071 L1651.96 682.071 L1651.4 682.071 L1650.84 682.071 L1650.28 682.071 L1649.72 682.071 L1649.16 682.071 L1648.6 682.071 L1648.04 682.071 L1647.48 682.071 L1646.93 682.071 L1646.37 682.071 L1645.81 682.071 L1645.25 682.071 L1644.69 682.071 L1644.13 682.071 L1643.57 682.071 L1643.01 682.071 L1642.45 682.071 L1641.89 682.071 L1641.33 682.071 L1640.77 682.071 L1640.21 682.071 L1639.66 682.071 L1639.1 682.071 L1638.54 682.071 L1637.98 682.071 L1637.42 682.071 L1636.86 682.071 L1636.3 682.071 L1635.74 682.071 L1635.18 682.071 L1634.62 682.071 L1634.06 682.071 L1633.5 682.071 L1632.94 682.071 L1632.39 682.071 L1631.83 682.071 L1631.27 682.071 L1630.71 682.071 L1630.15 682.071 L1629.59 682.071 L1629.03 682.071 L1628.47 682.071 L1627.91 682.071 L1627.35 682.071 L1626.79 682.071 L1626.23 682.071 L1625.67 682.071 L1625.11 682.071 L1624.56 682.071 L1624 682.071 L1623.44 682.071 L1622.88 682.071 L1622.32 682.071 L1621.76 682.071 L1621.2 682.071 L1620.64 682.071 L1620.08 682.071 L1619.52 682.071 L1618.96 682.071 L1618.4 682.071 L1617.84 682.071 L1617.29 682.071 L1616.73 682.071 L1616.17 682.071 L1615.61 682.071 L1615.05 682.071 L1614.49 682.071 L1613.93 682.071 L1613.37 682.071 L1612.81 682.071 L1612.25 682.071 L1611.69 682.071 L1611.13 682.071 L1610.57 682.071 L1610.02 682.071 L1609.46 682.071 L1608.9 682.071 L1608.34 682.071 L1607.78 682.071 L1607.22 682.071 L1606.66 682.071 L1606.1 682.071 L1605.54 682.071 L1604.98 682.071 L1604.42 682.071 L1603.86 682.071 L1603.3 682.071 L1602.74 682.071 L1602.19 682.071 L1601.63 682.071 L1601.07 682.071 L1600.51 682.071 L1599.95 682.071 L1599.39 682.071 L1598.83 682.071 L1598.27 682.071 L1597.71 682.071 L1597.15 682.071 L1596.59 682.071 L1596.03 682.071 L1595.47 682.071 L1594.92 682.071 L1594.36 682.071 L1593.8 682.071 L1593.24 682.071 L1592.68 682.071 L1592.12 682.071 L1591.56 682.071 L1591 682.071 L1590.44 682.071 L1589.88 682.071 L1589.32 682.071 L1588.76 682.071 L1588.2 682.071 L1587.65 682.071 L1587.09 682.071 L1586.53 682.071 L1585.97 682.071 L1585.41 682.071 L1584.85 682.071 L1584.29 682.071 L1583.73 682.071 L1583.17 682.071 L1582.61 682.071 L1582.05 682.071 L1581.49 682.071 L1580.93 682.071 L1580.37 682.071 L1579.82 682.071 L1579.26 682.071 L1578.7 682.071 L1578.14 682.071 L1577.58 682.071 L1577.02 682.071 L1576.46 682.071 L1575.9 682.071 L1575.34 682.071 L1574.78 682.071 L1574.22 682.071 L1573.66 682.071 L1573.1 682.071 L1572.55 682.071 L1571.99 682.071 L1571.43 682.071 L1570.87 682.071 L1570.31 682.071 L1569.75 682.071 L1569.19 682.071 L1568.63 682.071 L1568.07 682.071 L1567.51 682.071 L1566.95 682.071 L1566.39 682.071 L1565.83 682.071 L1565.28 682.071 L1564.72 682.071 L1564.16 682.071 L1563.6 682.071 L1563.04 682.071 L1562.48 682.071 L1561.92 682.071 L1561.36 682.071 L1560.8 682.071 L1560.24 682.071 L1559.68 682.071 L1559.12 682.071 L1558.56 682.071 L1558 682.071 L1557.45 682.071 L1556.89 682.071 L1556.33 682.071 L1555.77 682.071 L1555.21 682.071 L1554.65 682.071 L1554.09 682.071 L1553.53 682.071 L1552.97 682.071 L1552.41 682.071 L1551.85 682.071 L1551.29 682.071 L1550.73 682.071 L1550.18 682.071 L1549.62 682.071 L1549.06 682.071 L1548.5 682.071 L1547.94 682.071 L1547.38 682.071 L1546.82 682.071 L1546.26 682.071 L1545.7 682.071 L1545.14 682.071 L1544.58 682.071 L1544.02 682.071 L1543.46 682.071 L1542.9 682.071 L1542.35 682.071 L1541.79 682.071 L1541.23 682.071 L1540.67 682.071 L1540.11 682.071 L1539.55 682.071 L1538.99 682.071 L1538.43 682.071 L1537.87 682.071 L1537.31 682.071 L1536.75 682.071 L1536.19 682.071 L1535.63 682.071 L1535.08 682.071 L1534.52 682.071 L1533.96 682.071 L1533.4 682.071 L1532.84 682.071 L1532.28 682.071 L1531.72 682.071 L1531.16 682.071 L1530.6 682.071 L1530.04 682.071 L1529.48 682.071 L1528.92 682.071 L1528.36 682.071 L1527.81 682.071 L1527.25 682.071 L1526.69 682.071 L1526.13 682.071 L1525.57 682.071 L1525.01 682.071 L1524.45 682.071 L1523.89 682.071 L1523.33 682.071 L1522.77 682.071 L1522.21 682.071 L1521.65 682.071 L1521.09 682.071 L1520.53 682.071 L1519.98 682.071 L1519.42 682.071 L1518.86 682.071 L1518.3 682.071 L1517.74 682.071 L1517.18 682.071 L1516.62 682.071 L1516.06 682.071 L1515.5 682.071 L1514.94 682.071 L1514.38 682.071 L1513.82 682.071 L1513.26 682.071 L1512.71 682.071 L1512.15 682.071 L1511.59 682.071 L1511.03 682.071 L1510.47 682.071 L1509.91 682.071 L1509.35 682.071 L1508.79 682.071 L1508.23 682.071 L1507.67 682.071 L1507.11 682.071 L1506.55 682.071 L1505.99 682.071 L1505.44 682.071 L1504.88 682.071 L1504.32 682.071 L1503.76 682.071 L1503.2 682.071 L1502.64 682.071 L1502.08 682.071 L1501.52 682.071 L1500.96 682.071 L1500.4 682.071 L1499.84 682.071 L1499.28 682.071 L1498.72 682.071 L1498.16 682.071 L1497.61 682.071 L1497.05 682.071 L1496.49 682.071 L1495.93 682.071 L1495.37 682.071 L1494.81 682.071 L1494.25 682.071 L1493.69 682.071 L1493.13 682.071 L1492.57 682.071 L1492.01 682.071 L1491.45 682.071 L1490.89 682.071 L1490.34 682.071 L1489.78 682.071 L1489.22 682.071 L1488.66 682.071 L1488.1 682.071 L1487.54 682.071 L1486.98 682.071 L1486.42 682.071 L1485.86 682.071 L1485.3 682.071 L1484.74 682.071 L1484.18 682.071 L1483.62 682.071 L1483.07 682.071 L1482.51 682.071 L1481.95 682.071 L1481.39 682.071 L1480.83 682.071 L1480.27 682.071 L1479.71 682.071 L1479.15 682.071 L1478.59 682.071 L1478.03 682.071 L1477.47 682.071 L1476.91 682.071 L1476.35 682.071 L1475.79 682.071 L1475.24 682.071 L1474.68 682.071 L1474.12 682.071 L1473.56 682.071 L1473 682.071 L1472.44 682.071 L1471.88 682.071 L1471.32 682.071 L1470.76 682.071 L1470.2 682.071 L1469.64 682.071 L1469.08 682.071 L1468.52 682.071 L1467.97 682.071 L1467.41 682.071 L1466.85 682.071 L1466.29 682.071 L1465.73 682.071 L1465.17 682.071 L1464.61 682.071 L1464.05 682.071 L1463.49 682.071 L1462.93 682.071 L1462.37 682.071 L1461.81 682.071 L1461.25 682.071 L1460.7 682.071 L1460.14 682.071 L1459.58 682.071 L1459.02 682.071 L1458.46 682.071 L1457.9 682.071 L1457.34 682.071 L1456.78 682.071 L1456.22 682.071 L1455.66 682.071 L1455.1 682.071 L1454.54 682.071 L1453.98 682.071 L1453.42 682.071 L1452.87 682.071 L1452.31 682.071 L1451.75 682.071 L1451.19 682.071 L1450.63 682.071 L1450.07 682.071 L1449.51 682.071 L1448.95 682.071 L1448.39 682.071 L1447.83 682.071 L1447.27 682.071 L1446.71 682.071 L1446.15 682.071 L1445.6 682.071 L1445.04 682.071 L1444.48 682.071 L1443.92 682.071 L1443.36 682.071 L1442.8 682.071 L1442.24 682.071 L1441.68 682.071 L1441.12 682.071 L1440.56 682.071 L1440 682.071 L1439.44 682.071 L1438.88 682.071 L1438.33 682.071 L1437.77 682.071 L1437.21 682.071 L1436.65 682.071 L1436.09 682.071 L1435.53 682.071 L1434.97 682.071 L1434.41 682.071 L1433.85 682.071 L1433.29 682.071 L1432.73 682.071 L1432.17 682.071 L1431.61 682.071 L1431.05 682.071 L1430.5 682.071 L1429.94 682.071 L1429.38 682.071 L1428.82 682.071 L1428.26 682.071 L1427.7 682.071 L1427.14 682.071 L1426.58 682.071 L1426.02 682.071 L1425.46 682.071 L1424.9 682.071 L1424.34 682.071 L1423.78 682.071 L1423.23 682.071 L1422.67 682.071 L1422.11 682.071 L1421.55 682.071 L1420.99 682.071 L1420.43 682.071 L1419.87 682.071 L1419.31 682.071 L1418.75 682.071 L1418.19 682.071 L1417.63 682.071 L1417.07 682.071 L1416.51 682.071 L1415.95 682.071 L1415.4 682.071 L1414.84 682.071 L1414.28 682.071 L1413.72 682.071 L1413.16 682.071 L1412.6 682.071 L1412.04 682.071 L1411.48 682.071 L1410.92 682.071 L1410.36 682.071 L1409.8 682.071 L1409.24 682.071 L1408.68 682.071 L1408.13 682.071 L1407.57 682.071 L1407.01 682.071 L1406.45 682.071 L1405.89 682.071 L1405.33 682.071 L1404.77 682.071 L1404.21 682.071 L1403.65 682.071 L1403.09 682.071 L1402.53 682.071 L1401.97 682.071 L1401.41 682.071 L1400.86 682.071 L1400.3 682.071 L1399.74 682.071 L1399.18 682.071 L1398.62 682.071 L1398.06 682.071 L1397.5 682.071 L1396.94 682.071 L1396.38 682.071 L1395.82 682.071 L1395.26 682.071 L1394.7 682.071 L1394.14 682.071 L1393.58 682.071 L1393.03 682.071 L1392.47 682.071 L1391.91 682.071 L1391.35 682.071 L1390.79 682.071 L1390.23 682.071 L1389.67 682.071 L1389.11 682.071 L1388.55 682.071 L1387.99 682.071 L1387.43 682.071 L1386.87 682.071 L1386.31 682.071 L1385.76 682.071 L1385.2 682.071 L1384.64 682.071 L1384.08 682.071 L1383.52 682.071 L1382.96 682.071 L1382.4 682.071 L1381.84 682.071 L1381.28 682.071 L1380.72 682.071 L1380.16 682.071 L1379.6 682.071 L1379.04 682.071 L1378.49 682.071 L1377.93 682.071 L1377.37 682.071 L1376.81 682.071 L1376.25 682.071 L1375.69 682.071 L1375.13 682.071 L1374.57 682.071 L1374.01 682.071 L1373.45 682.071 L1372.89 682.071 L1372.33 682.071 L1371.77 682.071 L1371.21 682.071 L1370.66 682.071 L1370.1 682.071 L1369.54 682.071 L1368.98 682.071 L1368.42 682.071 L1367.86 682.071 L1367.3 682.071 L1366.74 682.071 L1366.18 682.071 L1365.62 682.071 L1365.06 682.071 L1364.5 682.071 L1363.94 682.071 L1363.39 682.071 L1362.83 682.071 L1362.27 682.071 L1361.71 682.071 L1361.15 682.071 L1360.59 682.071 L1360.03 682.071 L1359.47 682.071 L1358.91 682.071 L1358.35 682.071 L1357.79 682.071 L1357.23 682.071 L1356.67 682.071 L1356.12 682.071 L1355.56 682.071 L1355 682.071 L1354.44 682.071 L1353.88 682.071 L1353.32 682.071 L1352.76 682.071 L1352.2 682.071 L1351.64 682.071 L1351.08 682.071 L1350.52 682.071 L1349.96 682.071 L1349.4 682.071 L1348.84 682.071 L1348.29 682.071 L1347.73 682.071 L1347.17 682.071 L1346.61 682.071 L1346.05 682.071 L1345.49 682.071 L1344.93 682.071 L1344.37 682.071 L1343.81 682.071 L1343.25 682.071 L1342.69 682.071 L1342.13 682.071 L1341.57 682.071 L1341.02 682.071 L1340.46 682.071 L1339.9 682.071 L1339.34 682.071 L1338.78 682.071 L1338.22 682.071 L1337.66 682.071 L1337.1 682.071 L1336.54 682.071 L1335.98 682.071 L1335.42 682.071 L1334.86 682.071 L1334.3 682.071 L1333.75 682.071 L1333.19 682.071 L1332.63 682.071 L1332.07 682.071 L1331.51 682.071 L1330.95 682.071 L1330.39 682.071 L1329.83 682.071 L1329.27 682.071 L1328.71 682.071 L1328.15 682.071 L1327.59 682.071 L1327.03 682.071 L1326.47 682.071 L1325.92 682.071 L1325.36 682.071 L1324.8 682.071 L1324.24 682.071 L1323.68 682.071 L1323.12 682.071 L1322.56 682.071 L1322 682.071 L1321.44 682.071 L1320.88 682.071 L1320.32 682.071 L1319.76 682.071 L1319.2 682.071 L1318.65 682.071 L1318.09 682.071 L1317.53 682.071 L1316.97 682.071 L1316.41 682.071 L1315.85 682.071 L1315.29 682.071 L1314.73 682.071 L1314.17 682.071 L1313.61 682.071 L1313.05 682.071 L1312.49 682.071 L1311.93 682.071 L1311.38 682.071 L1310.82 682.071 L1310.26 682.071 L1309.7 682.071 L1309.14 682.071 L1308.58 682.071 L1308.02 682.071 L1307.46 682.071 L1306.9 682.071 L1306.34 682.071 L1305.78 682.071 L1305.22 682.071 L1304.66 682.071 L1304.1 682.071 L1303.55 682.071 L1302.99 682.071 L1302.43 682.071 L1301.87 682.071 L1301.31 682.071 L1300.75 682.071 L1300.19 682.071 L1299.63 682.071 L1299.07 682.071 L1298.51 682.071 L1297.95 682.071 L1297.39 682.071 L1296.83 682.071 L1296.28 682.071 L1295.72 682.071 L1295.16 682.071 L1294.6 682.071 L1294.04 682.071 L1293.48 682.071 L1292.92 682.071 L1292.36 682.071 L1291.8 682.071 L1291.24 682.071 L1290.68 682.071 L1290.12 682.071 L1289.56 682.071 L1289 682.071 L1288.45 682.071 L1287.89 682.071 L1287.33 682.071 L1286.77 682.071 L1286.21 682.071 L1285.65 682.071 L1285.09 682.071 L1284.53 682.071 L1283.97 682.071 L1283.41 682.071 L1282.85 682.071 L1282.29 682.071 L1281.73 682.071 L1281.18 682.071 L1280.62 682.071 L1280.06 682.071 L1279.5 682.071 L1278.94 682.071 L1278.38 682.071 L1277.82 682.071 L1277.26 682.071 L1276.7 682.071 L1276.14 682.071 L1275.58 682.071 L1275.02 682.071 L1274.46 682.071 L1273.91 682.071 L1273.35 682.071 L1272.79 682.071 L1272.23 682.071 L1271.67 682.071 L1271.11 682.071 L1270.55 682.071 L1269.99 682.071 L1269.43 682.071 L1268.87 682.071 L1268.31 682.071 L1267.75 682.071 L1267.19 682.071 L1266.63 682.071 L1266.08 682.071 L1265.52 682.071 L1264.96 682.071 L1264.4 682.071 L1263.84 682.071 L1263.28 682.071 L1262.72 682.071 L1262.16 682.071 L1261.6 682.071 L1261.04 682.071 L1260.48 682.071 L1259.92 682.071 L1259.36 682.071 L1258.81 682.071 L1258.25 682.071 L1257.69 682.071 L1257.13 682.071 L1256.57 682.071 L1256.01 682.071 L1255.45 682.071 L1254.89 682.071 L1254.33 682.071 L1253.77 682.071 L1253.21 682.071 L1252.65 682.071 L1252.09 682.071 L1251.54 682.071 L1250.98 682.071 L1250.42 682.071 L1249.86 682.071 L1249.3 682.071 L1248.74 682.071 L1248.18 682.071 L1247.62 682.071 L1247.06 682.071 L1246.5 682.071 L1245.94 682.071 L1245.38 682.071 L1244.82 682.071 L1244.26 682.071 L1243.71 682.071 L1243.15 682.071 L1242.59 682.071 L1242.03 682.071 L1241.47 682.071 L1240.91 682.071 L1240.35 682.071 L1239.79 682.071 L1239.23 682.071 L1238.67 682.071 L1238.11 682.071 L1237.55 682.071 L1236.99 682.071 L1236.44 682.071 L1235.88 682.071 L1235.32 682.071 L1234.76 682.071 L1234.2 682.071 L1233.64 682.071 L1233.08 682.071 L1232.52 682.071 L1231.96 682.071 L1231.4 682.071 L1230.84 682.071 L1230.28 682.071 L1229.72 682.071 L1229.17 682.071 L1228.61 682.071 L1228.05 682.071 L1227.49 682.071 L1226.93 682.071 L1226.37 682.071 L1225.81 682.071 L1225.25 682.071 L1224.69 682.071 L1224.13 682.071 L1223.57 682.071 L1223.01 682.071 L1222.45 682.071 L1221.89 682.071 L1221.34 682.071 L1220.78 682.071 L1220.22 682.071 L1219.66 682.071 L1219.1 682.071 L1218.54 682.071 L1217.98 682.071 L1217.42 682.071 L1216.86 682.071 L1216.3 682.071 L1215.74 682.071 L1215.18 682.071 L1214.62 682.071 L1214.07 682.071 L1213.51 682.071 L1212.95 682.071 L1212.39 682.071 L1211.83 682.071 L1211.27 682.071 L1210.71 682.071 L1210.15 682.071 L1209.59 682.071 L1209.03 682.071 L1208.47 682.071 L1207.91 682.071 L1207.35 682.071 L1206.8 682.071 L1206.24 682.071 L1205.68 682.071 L1205.12 682.071 L1204.56 682.071 L1204 682.071 L1203.44 682.071 L1202.88 682.071 L1202.32 682.071 L1201.76 682.071 L1201.2 682.071 L1200.64 682.071 L1200.08 682.071 L1199.52 682.071 L1198.97 682.071 L1198.41 682.071 L1197.85 682.071 L1197.29 682.071 L1196.73 682.071 L1196.17 682.071 L1195.61 682.071 L1195.05 682.071 L1194.49 682.071 L1193.93 682.071 L1193.37 682.071 L1192.81 682.071 L1192.25 682.071 L1191.7 682.071 L1191.14 682.071 L1190.58 682.071 L1190.02 682.071 L1189.46 682.071 L1188.9 682.071 L1188.34 682.071 L1187.78 682.071 L1187.22 682.071 L1186.66 682.071 L1186.1 682.071 L1185.54 682.071 L1184.98 682.071 L1184.43 682.071 L1183.87 682.071 L1183.31 682.071 L1182.75 682.071 L1182.19 682.071 L1181.63 682.071 L1181.07 682.071 L1180.51 682.071 L1179.95 682.071 L1179.39 682.071 L1178.83 682.071 L1178.27 682.071 L1177.71 682.071 L1177.15 682.071 L1176.6 682.071 L1176.04 682.071 L1175.48 682.071 L1174.92 682.071 L1174.36 682.071 L1173.8 682.071 L1173.24 682.071 L1172.68 682.071 L1172.12 682.071 L1171.56 682.071 L1171 682.071 L1170.44 682.071 L1169.88 682.071 L1169.33 682.071 L1168.77 682.071 L1168.21 682.071 L1167.65 682.071 L1167.09 682.071 L1166.53 682.071 L1165.97 682.071 L1165.41 682.071 L1164.85 682.071 L1164.29 682.071 L1163.73 682.071 L1163.17 682.071 L1162.61 682.071 L1162.05 682.071 L1161.5 682.071 L1160.94 682.071 L1160.38 682.071 L1159.82 682.071 L1159.26 682.071 L1158.7 682.071 L1158.14 682.071 L1157.58 682.071 L1157.02 682.071 L1156.46 682.071 L1155.9 682.071 L1155.34 682.071 L1154.78 682.071 L1154.23 682.071 L1153.67 682.071 L1153.11 682.071 L1152.55 682.071 L1151.99 682.071 L1151.43 682.071 L1150.87 682.071 L1150.31 682.071 L1149.75 682.071 L1149.19 682.071 L1148.63 682.071 L1148.07 682.071 L1147.51 682.071 L1146.96 682.071 L1146.4 682.071 L1145.84 682.071 L1145.28 682.071 L1144.72 682.071 L1144.16 682.071 L1143.6 682.071 L1143.04 682.071 L1142.48 682.071 L1141.92 682.071 L1141.36 682.071 L1140.8 682.071 L1140.24 682.071 L1139.68 682.071 L1139.13 682.071 L1138.57 682.071 L1138.01 682.071 L1137.45 682.071 L1136.89 682.071 L1136.33 682.071 L1135.77 682.071 L1135.21 682.071 L1134.65 682.071 L1134.09 682.071 L1133.53 682.071 L1132.97 682.071 L1132.41 682.071 L1131.86 682.071 L1131.3 682.071 L1130.74 682.071 L1130.18 682.071 L1129.62 682.071 L1129.06 682.071 L1128.5 682.071 L1127.94 682.071 L1127.38 682.071 L1126.82 682.071 L1126.26 682.071 L1125.7 682.071 L1125.14 682.071 L1124.59 682.071 L1124.03 682.071 L1123.47 682.071 L1122.91 682.071 L1122.35 682.071 L1121.79 682.071 L1121.23 682.071 L1120.67 682.071 L1120.11 682.071 L1119.55 682.071 L1118.99 682.071 L1118.43 682.071 L1117.87 682.071 L1117.31 682.071 L1116.76 682.071 L1116.2 682.071 L1115.64 682.071 L1115.08 682.071 L1114.52 682.071 L1113.96 682.071 L1113.4 682.071 L1112.84 682.071 L1112.28 682.071 L1111.72 682.071 L1111.16 682.071 L1110.6 682.071 L1110.04 682.071 L1109.49 682.071 L1108.93 682.071 L1108.37 682.071 L1107.81 682.071 L1107.25 682.071 L1106.69 682.071 L1106.13 682.071 L1105.57 682.071 L1105.01 682.071 L1104.45 682.071 L1103.89 682.071 L1103.33 682.071 L1102.77 682.071 L1102.22 682.071 L1101.66 682.071 L1101.1 682.071 L1100.54 682.071 L1099.98 682.071 L1099.42 682.071 L1098.86 682.071 L1098.3 682.071 L1097.74 682.071 L1097.18 682.071 L1096.62 682.071 L1096.06 682.071 L1095.5 682.071 L1094.94 682.071 L1094.39 682.071 L1093.83 682.071 L1093.27 682.071 L1092.71 682.071 L1092.15 682.071 L1091.59 682.071 L1091.03 682.071 L1090.47 682.071 L1089.91 682.071 L1089.35 682.071 L1088.79 682.071 L1088.23 682.071 L1087.67 682.071 L1087.12 682.071 L1086.56 682.071 L1086 682.071 L1085.44 682.071 L1084.88 682.071 L1084.32 682.071 L1083.76 682.071 L1083.2 682.071 L1082.64 682.071 L1082.08 682.071 L1081.52 682.071 L1080.96 682.071 L1080.4 682.071 L1079.85 682.071 L1079.29 682.071 L1078.73 682.071 L1078.17 682.071 L1077.61 682.071 L1077.05 682.071 L1076.49 682.071 L1075.93 682.071 L1075.37 682.071 L1074.81 682.071 L1074.25 682.071 L1073.69 682.071 L1073.13 682.071 L1072.57 682.071 L1072.02 682.071 L1071.46 682.071 L1070.9 682.071 L1070.34 682.071 L1069.78 682.071 L1069.22 682.071 L1068.66 682.071 L1068.1 682.071 L1067.54 682.071 L1066.98 682.071 L1066.42 682.071 L1065.86 682.071 L1065.3 682.071 L1064.75 682.071 L1064.19 682.071 L1063.63 682.071 L1063.07 682.071 L1062.51 682.071 L1061.95 682.071 L1061.39 682.071 L1060.83 682.071 L1060.27 682.071 L1059.71 682.071 L1059.15 682.071 L1058.59 682.071 L1058.03 682.071 L1057.48 682.071 L1056.92 682.071 L1056.36 682.071 L1055.8 682.071 L1055.24 682.071 L1054.68 682.071 L1054.12 682.071 L1053.56 682.071 L1053 682.071 L1052.44 682.071 L1051.88 682.071 L1051.32 682.071 L1050.76 682.071 L1050.2 682.071 L1049.65 682.071 L1049.09 682.071 L1048.53 682.071 L1047.97 682.071 L1047.41 682.071 L1046.85 682.071 L1046.29 682.071 L1045.73 682.071 L1045.17 682.071 L1044.61 682.071 L1044.05 682.071 L1043.49 682.071 L1042.93 682.071 L1042.38 682.071 L1041.82 682.071 L1041.26 682.071 L1040.7 682.071 L1040.14 682.071 L1039.58 682.071 L1039.02 682.071 L1038.46 682.071 L1037.9 682.071 L1037.34 682.071 L1036.78 682.071 L1036.22 682.071 L1035.66 682.071 L1035.1 682.071 L1034.55 682.071 L1033.99 682.071 L1033.43 682.071 L1032.87 682.071 L1032.31 682.071 L1031.75 682.071 L1031.19 682.071 L1030.63 682.071 L1030.07 682.071 L1029.51 682.071 L1028.95 682.071 L1028.39 682.071 L1027.83 682.071 L1027.28 682.071 L1026.72 682.071 L1026.16 682.071 L1025.6 682.071 L1025.04 682.071 L1024.48 682.071 L1023.92 682.071 L1023.36 682.071 L1022.8 682.071 L1022.24 682.071 L1021.68 682.071 L1021.12 682.071 L1020.56 682.071 L1020.01 682.071 L1019.45 682.071 L1018.89 682.071 L1018.33 682.071 L1017.77 682.071 L1017.21 682.071 L1016.65 682.071 L1016.09 682.071 L1015.53 682.071 L1014.97 682.071 L1014.41 682.071 L1013.85 682.071 L1013.29 682.071 L1012.73 682.071 L1012.18 682.071 L1011.62 682.071 L1011.06 682.071 L1010.5 682.071 L1009.94 682.071 L1009.38 682.071 L1008.82 682.071 L1008.26 682.071 L1007.7 682.071 L1007.14 682.071 L1006.58 682.071 L1006.02 682.071 L1005.46 682.071 L1004.91 682.071 L1004.35 682.071 L1003.79 682.071 L1003.23 682.071 L1002.67 682.071 L1002.11 682.071 L1001.55 682.071 L1000.99 682.071 L1000.43 682.071 L999.872 682.071 L999.313 682.071 L998.754 682.071 L998.194 682.071 L997.635 682.071 L997.076 682.071 L996.517 682.071 L995.957 682.071 L995.398 682.071 L994.839 682.071 L994.28 682.071 L993.72 682.071 L993.161 682.071 L992.602 682.071 L992.043 682.071 L991.483 682.071 L990.924 682.071 L990.365 682.071 L989.806 682.071 L989.246 682.071 L988.687 682.071 L988.128 682.071 L987.569 682.071 L987.009 682.071 L986.45 682.071 L985.891 682.071 L985.332 682.071 L984.772 682.071 L984.213 682.071 L983.654 682.071 L983.095 682.071 L982.535 682.071 L981.976 682.071 L981.417 682.071 L980.858 682.071 L980.298 682.071 L979.739 682.071 L979.18 682.071 L978.621 682.071 L978.061 682.071 L977.502 682.071 L976.943 682.071 L976.384 682.071 L975.824 682.071 L975.265 682.071 L974.706 682.071 L974.147 682.071 L973.587 682.071 L973.028 682.071 L972.469 682.071 L971.91 682.071 L971.35 682.071 L970.791 682.071 L970.232 682.071 L969.673 682.071 L969.113 682.071 L968.554 682.071 L967.995 682.071 L967.436 682.071 L966.876 682.071 L966.317 682.071 L965.758 682.071 L965.199 682.071 L964.639 682.071 L964.08 682.071 L963.521 682.071 L962.962 682.071 L962.402 682.071 L961.843 682.071 L961.284 682.071 L960.725 682.071 L960.165 682.071 L959.606 682.071 L959.047 682.071 L958.488 682.071 L957.928 682.071 L957.369 682.071 L956.81 682.071 L956.251 682.071 L955.691 682.071 L955.132 682.071 L954.573 682.071 L954.014 682.071 L953.454 682.071 L952.895 682.071 L952.336 682.071 L951.777 682.071 L951.217 682.071 L950.658 682.071 L950.099 682.071 L949.54 682.071 L948.98 682.071 L948.421 682.071 L947.862 682.071 L947.303 682.071 L946.743 682.071 L946.184 682.071 L945.625 682.071 L945.066 682.071 L944.506 682.071 L943.947 682.071 L943.388 682.071 L942.829 682.071 L942.269 682.071 L941.71 682.071 L941.151 682.071 L940.592 682.071 L940.032 682.071 L939.473 682.071 L938.914 682.071 L938.355 682.071 L937.795 682.071 L937.236 682.071 L936.677 682.071 L936.118 682.071 L935.558 682.071 L934.999 682.071 L934.44 682.071 L933.881 682.071 L933.321 682.071 L932.762 682.071 L932.203 682.071 L931.644 682.071 L931.084 682.071 L930.525 682.071 L929.966 682.071 L929.406 682.071 L928.847 682.071 L928.288 682.071 L927.729 682.071 L927.169 682.071 L926.61 682.071 L926.051 682.071 L925.492 682.071 L924.932 682.071 L924.373 682.071 L923.814 682.071 L923.255 682.071 L922.695 682.071 L922.136 682.071 L921.577 682.071 L921.018 682.071 L920.458 682.071 L919.899 682.071 L919.34 682.071 L918.781 682.071 L918.221 682.071 L917.662 682.071 L917.103 682.071 L916.544 682.071 L915.984 682.071 L915.425 682.071 L914.866 682.071 L914.307 682.071 L913.747 682.071 L913.188 682.071 L912.629 682.071 L912.07 682.071 L911.51 682.071 L910.951 682.071 L910.392 682.071 L909.833 682.071 L909.273 682.071 L908.714 682.071 L908.155 682.071 L907.596 682.071 L907.036 682.071 L906.477 682.071 L905.918 682.071 L905.359 682.071 L904.799 682.071 L904.24 682.071 L903.681 682.071 L903.122 682.071 L902.562 682.071 L902.003 682.071 L901.444 682.071 L900.885 682.071 L900.325 682.071 L899.766 682.071 L899.207 682.071 L898.648 682.071 L898.088 682.071 L897.529 682.071 L896.97 682.071 L896.411 682.071 L895.851 682.071 L895.292 682.071 L894.733 682.071 L894.174 682.071 L893.614 682.071 L893.055 682.071 L892.496 682.071 L891.937 682.071 L891.377 682.071 L890.818 682.071 L890.259 682.071 L889.7 682.071 L889.14 682.071 L888.581 682.071 L888.022 682.071 L887.463 682.071 L886.903 682.071 L886.344 682.071 L885.785 682.071 L885.226 682.071 L884.666 682.071 L884.107 682.071 L883.548 682.071 L882.989 682.071 L882.429 682.071 L881.87 682.071 L881.311 682.071 L880.752 682.071 L880.192 682.071 L879.633 682.071 L879.074 682.071 L878.515 682.071 L877.955 682.071 L877.396 682.071 L876.837 682.071 L876.278 682.071 L875.718 682.071 L875.159 682.071 L874.6 682.071 L874.041 682.071 L873.481 682.071 L872.922 682.071 L872.363 682.071 L871.804 682.071 L871.244 682.071 L870.685 682.071 L870.126 682.071 L869.567 682.071 L869.007 682.071 L868.448 682.071 L867.889 682.071 L867.33 682.071 L866.77 682.071 L866.211 682.071 L865.652 682.071 L865.093 682.071 L864.533 682.071 L863.974 682.071 L863.415 682.071 L862.856 682.071 L862.296 682.071 L861.737 682.071 L861.178 682.071 L860.619 682.071 L860.059 682.071 L859.5 682.071 L858.941 682.071 L858.382 682.071 L857.822 682.071 L857.263 682.071 L856.704 682.071 L856.145 682.071 L855.585 682.071 L855.026 682.071 L854.467 682.071 L853.908 682.071 L853.348 682.071 L852.789 682.071 L852.23 682.071 L851.671 682.071 L851.111 682.071 L850.552 682.071 L849.993 682.071 L849.434 682.071 L848.874 682.071 L848.315 682.071 L847.756 682.071 L847.197 682.071 L846.637 682.071 L846.078 682.071 L845.519 682.071 L844.96 682.071 L844.4 682.071 L843.841 682.071 L843.282 682.071 L842.723 682.071 L842.163 682.071 L841.604 682.071 L841.045 682.071 L840.486 682.071 L839.926 682.071 L839.367 682.071 L838.808 682.071 L838.249 682.071 L837.689 682.071 L837.13 682.071 L836.571 682.071 L836.012 682.071 L835.452 682.071 L834.893 682.071 L834.334 682.071 L833.775 682.071 L833.215 682.071 L832.656 682.071 L832.097 682.071 L831.538 682.071 L830.978 682.071 L830.419 682.071 L829.86 682.071 L829.301 682.071 L828.741 682.071 L828.182 682.071 L827.623 682.071 L827.064 682.071 L826.504 682.071 L825.945 682.071 L825.386 682.071 L824.827 682.071 L824.267 682.071 L823.708 682.071 L823.149 682.071 L822.59 682.071 L822.03 682.071 L821.471 682.071 L820.912 682.071 L820.353 682.071 L819.793 682.071 L819.234 682.071 L818.675 682.071 L818.116 682.071 L817.556 682.071 L816.997 682.071 L816.438 682.071 L815.879 682.071 L815.319 682.071 L814.76 682.071 L814.201 682.071 L813.642 682.071 L813.082 682.071 L812.523 682.071 L811.964 682.071 L811.405 682.071 L810.845 682.071 L810.286 682.071 L809.727 682.071 L809.168 682.071 L808.608 682.071 L808.049 682.071 L807.49 682.071 L806.931 682.071 L806.371 682.071 L805.812 682.071 L805.253 682.071 L804.693 682.071 L804.134 682.071 L803.575 682.071 L803.016 682.071 L802.456 682.071 L801.897 682.071 L801.338 682.071 L800.779 682.071 L800.219 682.071 L799.66 682.071 L799.101 682.071 L798.542 682.071 L797.982 682.071 L797.423 682.071 L796.864 682.071 L796.305 682.071 L795.745 682.071 L795.186 682.071 L794.627 682.071 L794.068 682.071 L793.508 682.071 L792.949 682.071 L792.39 682.071 L791.831 682.071 L791.271 682.071 L790.712 682.071 L790.153 682.071 L789.594 682.071 L789.034 682.071 L788.475 682.071 L787.916 682.071 L787.357 682.071 L786.797 682.071 L786.238 682.071 L785.679 682.071 L785.12 682.071 L784.56 682.071 L784.001 682.071 L783.442 682.071 L782.883 682.071 L782.323 682.071 L781.764 682.071 L781.205 682.071 L780.646 682.071 L780.086 682.071 L779.527 682.071 L778.968 682.071 L778.409 682.071 L777.849 682.071 L777.29 682.071 L776.731 682.071 L776.172 682.071 L775.612 682.071 L775.053 682.071 L774.494 682.071 L773.935 682.071 L773.375 682.071 L772.816 682.071 L772.257 682.071 L771.698 682.071 L771.138 682.071 L770.579 682.071 L770.02 682.071 L769.461 682.071 L768.901 682.071 L768.342 682.071 L767.783 682.071 L767.224 682.071 L766.664 682.071 L766.105 682.071 L765.546 682.071 L764.987 682.071 L764.427 682.071 L763.868 682.071 L763.309 682.071 L762.75 682.071 L762.19 682.071 L761.631 682.071 L761.072 682.071 L760.513 682.071 L759.953 682.071 L759.394 682.071 L758.835 682.071 L758.276 682.071 L757.716 682.071 L757.157 682.071 L756.598 682.071 L756.039 682.071 L755.479 682.071 L754.92 682.071 L754.361 682.071 L753.802 682.071 L753.242 682.071 L752.683 682.071 L752.124 682.071 L751.565 682.071 L751.005 682.071 L750.446 682.071 L749.887 682.071 L749.328 682.071 L748.768 682.071 L748.209 682.071 L747.65 682.071 L747.091 682.071 L746.531 682.071 L745.972 682.071 L745.413 682.071 L744.854 682.071 L744.294 682.071 L743.735 682.071 L743.176 682.071 L742.617 682.071 L742.057 682.071 L741.498 682.071 L740.939 682.071 L740.38 682.071 L739.82 682.071 L739.261 682.071 L738.702 682.071 L738.143 682.071 L737.583 682.071 L737.024 682.071 L736.465 682.071 L735.906 682.071 L735.346 682.071 L734.787 682.071 L734.228 682.071 L733.669 682.071 L733.109 682.071 L732.55 682.071 L731.991 682.071 L731.432 682.071 L730.872 682.071 L730.313 682.071 L729.754 682.071 L729.195 682.071 L728.635 682.071 L728.076 682.071 L727.517 682.071 L726.958 682.071 L726.398 682.071 L725.839 682.071 L725.28 682.071 L724.721 682.071 L724.161 682.071 L723.602 682.071 L723.043 682.071 L722.484 682.071 L721.924 682.071 L721.365 682.071 L720.806 682.071 L720.247 682.071  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.263 720.806,683.263 721.365,683.263 721.924,683.263 722.484,683.263 723.043,683.263 723.602,683.263 724.161,683.263 724.721,683.263 725.28,683.263 725.839,683.263 726.398,683.263 726.958,683.263 727.517,683.263 728.076,683.263 728.635,683.263 729.195,683.263 729.754,683.263 730.313,683.263 730.872,683.263 731.432,683.263 731.991,683.263 732.55,683.263 733.109,683.263 733.669,683.263 734.228,683.263 734.787,683.263 735.346,683.263 735.906,683.263 736.465,683.263 737.024,683.263 737.583,683.263 738.143,683.263 738.702,683.263 739.261,683.263 739.82,683.263 740.38,683.263 740.939,683.263 741.498,683.263 742.057,683.263 742.617,683.263 743.176,683.263 743.735,683.263 744.294,683.263 744.854,683.263 745.413,683.263 745.972,683.263 746.531,683.263 747.091,683.263 747.65,683.263 748.209,683.263 748.768,683.263 749.328,683.263 749.887,683.263 750.446,683.263 751.005,683.263 751.565,683.263 752.124,683.263 752.683,683.263 753.242,683.263 753.802,683.263 754.361,683.263 754.92,683.263 755.479,683.263 756.039,683.263 756.598,683.263 757.157,683.263 757.716,683.263 758.276,683.263 758.835,683.263 759.394,683.263 759.953,683.263 760.513,683.263 761.072,683.263 761.631,683.263 762.19,683.263 762.75,683.263 763.309,683.263 763.868,683.263 764.427,683.263 764.987,683.263 765.546,683.263 766.105,683.263 766.664,683.263 767.224,683.263 767.783,683.263 768.342,683.263 768.901,683.263 769.461,683.263 770.02,683.263 770.579,683.263 771.138,683.263 771.698,683.263 772.257,683.263 772.816,683.263 773.375,683.263 773.935,683.263 774.494,683.263 775.053,683.263 775.612,683.263 776.172,683.263 776.731,683.263 777.29,683.263 777.849,683.263 778.409,683.263 778.968,683.263 779.527,683.263 780.086,683.263 780.646,683.263 781.205,683.263 781.764,683.263 782.323,683.263 782.883,683.263 783.442,683.263 784.001,683.263 784.56,683.263 785.12,683.263 785.679,683.263 786.238,683.263 786.797,683.263 787.357,683.263 787.916,683.263 788.475,683.263 789.034,683.263 789.594,683.263 790.153,683.263 790.712,683.263 791.271,683.263 791.831,683.263 792.39,683.263 792.949,683.263 793.508,683.263 794.068,683.263 794.627,683.263 795.186,683.263 795.745,683.263 796.305,683.263 796.864,683.263 797.423,683.263 797.982,683.263 798.542,683.263 799.101,683.263 799.66,683.263 800.219,683.263 800.779,683.263 801.338,683.263 801.897,683.263 802.456,683.263 803.016,683.263 803.575,683.263 804.134,683.263 804.693,683.263 805.253,683.263 805.812,683.263 806.371,683.263 806.931,683.263 807.49,683.263 808.049,683.263 808.608,683.263 809.168,683.263 809.727,683.263 810.286,683.263 810.845,683.263 811.405,683.263 811.964,683.263 812.523,683.263 813.082,683.263 813.642,683.263 814.201,683.263 814.76,683.263 815.319,683.263 815.879,683.263 816.438,683.263 816.997,683.263 817.556,683.263 818.116,683.263 818.675,683.263 819.234,683.263 819.793,683.263 820.353,683.263 820.912,683.263 821.471,683.263 822.03,683.263 822.59,683.263 823.149,683.263 823.708,683.263 824.267,683.263 824.827,683.263 825.386,683.263 825.945,683.263 826.504,683.263 827.064,683.263 827.623,683.263 828.182,683.263 828.741,683.263 829.301,683.263 829.86,683.263 830.419,683.263 830.978,683.263 831.538,683.263 832.097,683.263 832.656,683.263 833.215,683.263 833.775,683.263 834.334,683.263 834.893,683.263 835.452,683.263 836.012,683.263 836.571,683.263 837.13,683.263 837.689,683.263 838.249,683.263 838.808,683.263 839.367,683.263 839.926,683.263 840.486,683.263 841.045,683.263 841.604,683.263 842.163,683.263 842.723,683.263 843.282,683.263 843.841,683.263 844.4,683.263 844.96,683.263 845.519,683.263 846.078,683.263 846.637,683.263 847.197,683.263 847.756,683.263 848.315,683.263 848.874,683.263 849.434,683.263 849.993,683.263 850.552,683.263 851.111,683.263 851.671,683.263 852.23,683.263 852.789,683.263 853.348,683.263 853.908,683.263 854.467,683.263 855.026,683.263 855.585,683.263 856.145,683.263 856.704,683.263 857.263,683.263 857.822,683.263 858.382,683.263 858.941,683.263 859.5,683.263 860.059,683.263 860.619,683.263 861.178,683.263 861.737,683.263 862.296,683.263 862.856,683.263 863.415,683.263 863.974,683.263 864.533,683.263 865.093,683.263 865.652,683.263 866.211,683.263 866.77,683.263 867.33,683.263 867.889,683.263 868.448,683.263 869.007,683.263 869.567,683.263 870.126,683.263 870.685,683.263 871.244,683.263 871.804,683.263 872.363,683.263 872.922,683.263 873.481,683.263 874.041,683.263 874.6,683.263 875.159,683.263 875.718,683.263 876.278,683.263 876.837,683.263 877.396,683.263 877.955,683.263 878.515,683.263 879.074,683.263 879.633,683.263 880.192,683.263 880.752,683.263 881.311,683.263 881.87,683.263 882.429,683.263 882.989,683.263 883.548,683.263 884.107,683.263 884.666,683.263 885.226,683.263 885.785,683.263 886.344,683.263 886.903,683.263 887.463,683.263 888.022,683.263 888.581,683.263 889.14,683.263 889.7,683.263 890.259,683.263 890.818,683.263 891.377,683.263 891.937,683.263 892.496,683.263 893.055,683.263 893.614,683.263 894.174,683.263 894.733,683.263 895.292,683.263 895.851,683.263 896.411,683.263 896.97,683.263 897.529,683.263 898.088,683.263 898.648,683.263 899.207,683.263 899.766,683.263 900.325,683.263 900.885,683.263 901.444,683.263 902.003,683.263 902.562,683.263 903.122,683.263 903.681,683.263 904.24,683.263 904.799,683.263 905.359,683.263 905.918,683.263 906.477,683.263 907.036,683.263 907.596,683.263 908.155,683.263 908.714,683.263 909.273,683.263 909.833,683.263 910.392,683.263 910.951,683.263 911.51,683.263 912.07,683.263 912.629,683.263 913.188,683.263 913.747,683.263 914.307,683.263 914.866,683.263 915.425,683.263 915.984,683.263 916.544,683.263 917.103,683.263 917.662,683.263 918.221,683.263 918.781,683.263 919.34,683.263 919.899,683.263 920.458,683.263 921.018,683.263 921.577,683.263 922.136,683.263 922.695,683.263 923.255,683.263 923.814,683.263 924.373,683.263 924.932,683.263 925.492,683.263 926.051,683.263 926.61,683.263 927.169,683.263 927.729,683.263 928.288,683.263 928.847,683.263 929.406,683.263 929.966,683.263 930.525,683.263 931.084,683.263 931.644,683.263 932.203,683.263 932.762,683.263 933.321,683.263 933.881,683.263 934.44,683.263 934.999,683.263 935.558,683.263 936.118,683.263 936.677,683.263 937.236,683.263 937.795,683.263 938.355,683.263 938.914,683.263 939.473,683.263 940.032,683.263 940.592,683.263 941.151,683.263 941.71,683.263 942.269,683.263 942.829,683.263 943.388,683.263 943.947,683.263 944.506,683.263 945.066,683.263 945.625,683.263 946.184,683.263 946.743,683.263 947.303,683.263 947.862,683.263 948.421,683.263 948.98,683.263 949.54,683.263 950.099,683.263 950.658,683.263 951.217,683.263 951.777,683.263 952.336,683.263 952.895,683.263 953.454,683.263 954.014,683.263 954.573,683.263 955.132,683.263 955.691,683.263 956.251,683.263 956.81,683.263 957.369,683.263 957.928,683.263 958.488,683.263 959.047,683.263 959.606,683.263 960.165,683.263 960.725,683.263 961.284,683.263 961.843,683.263 962.402,683.263 962.962,683.263 963.521,683.263 964.08,683.263 964.639,683.263 965.199,683.263 965.758,683.263 966.317,683.263 966.876,683.263 967.436,683.263 967.995,683.263 968.554,683.263 969.113,683.263 969.673,683.263 970.232,683.263 970.791,683.263 971.35,683.263 971.91,683.263 972.469,683.263 973.028,683.263 973.587,683.263 974.147,683.263 974.706,683.263 975.265,683.263 975.824,683.263 976.384,683.263 976.943,683.263 977.502,683.263 978.061,683.263 978.621,683.263 979.18,683.263 979.739,683.263 980.298,683.263 980.858,683.263 981.417,683.263 981.976,683.263 982.535,683.263 983.095,683.263 983.654,683.263 984.213,683.263 984.772,683.263 985.332,683.263 985.891,683.263 986.45,683.263 987.009,683.263 987.569,683.263 988.128,683.263 988.687,683.263 989.246,683.263 989.806,683.263 990.365,683.263 990.924,683.263 991.483,683.263 992.043,683.263 992.602,683.263 993.161,683.263 993.72,683.263 994.28,683.263 994.839,683.263 995.398,683.263 995.957,683.263 996.517,683.263 997.076,683.263 997.635,683.263 998.194,683.263 998.754,683.263 999.313,683.263 999.872,683.263 1000.43,683.263 1000.99,683.263 1001.55,683.263 1002.11,683.263 1002.67,683.263 1003.23,683.263 1003.79,683.263 1004.35,683.263 1004.91,683.263 1005.46,683.263 1006.02,683.263 1006.58,683.263 1007.14,683.263 1007.7,683.263 1008.26,683.263 1008.82,683.263 1009.38,683.263 1009.94,683.263 1010.5,683.263 1011.06,683.263 1011.62,683.263 1012.18,683.263 1012.73,683.263 1013.29,683.263 1013.85,683.263 1014.41,683.263 1014.97,683.263 1015.53,683.263 1016.09,683.263 1016.65,683.263 1017.21,683.263 1017.77,683.263 1018.33,683.263 1018.89,683.263 1019.45,683.263 1020.01,683.263 1020.56,683.263 1021.12,683.263 1021.68,683.263 1022.24,683.263 1022.8,683.263 1023.36,683.263 1023.92,683.263 1024.48,683.263 1025.04,683.263 1025.6,683.263 1026.16,683.263 1026.72,683.263 1027.28,683.263 1027.83,683.263 1028.39,683.263 1028.95,683.263 1029.51,683.263 1030.07,683.263 1030.63,683.263 1031.19,683.263 1031.75,683.263 1032.31,683.263 1032.87,683.263 1033.43,683.263 1033.99,683.263 1034.55,683.263 1035.1,683.263 1035.66,683.263 1036.22,683.263 1036.78,683.263 1037.34,683.263 1037.9,683.263 1038.46,683.263 1039.02,683.263 1039.58,683.263 1040.14,683.263 1040.7,683.263 1041.26,683.263 1041.82,683.263 1042.38,683.263 1042.93,683.263 1043.49,683.263 1044.05,683.263 1044.61,683.263 1045.17,683.263 1045.73,683.263 1046.29,683.263 1046.85,683.263 1047.41,683.263 1047.97,683.263 1048.53,683.263 1049.09,683.263 1049.65,683.263 1050.2,683.263 1050.76,683.263 1051.32,683.263 1051.88,683.263 1052.44,683.263 1053,683.263 1053.56,683.263 1054.12,683.263 1054.68,683.263 1055.24,683.263 1055.8,683.263 1056.36,683.263 1056.92,683.263 1057.48,683.263 1058.03,683.263 1058.59,683.263 1059.15,683.263 1059.71,683.263 1060.27,683.263 1060.83,683.263 1061.39,683.263 1061.95,683.263 1062.51,683.263 1063.07,683.263 1063.63,683.263 1064.19,683.263 1064.75,683.263 1065.3,683.263 1065.86,683.263 1066.42,683.263 1066.98,683.263 1067.54,683.263 1068.1,683.263 1068.66,683.263 1069.22,683.263 1069.78,683.263 1070.34,683.263 1070.9,683.263 1071.46,683.263 1072.02,683.263 1072.57,683.263 1073.13,683.263 1073.69,683.263 1074.25,683.263 1074.81,683.263 1075.37,683.263 1075.93,683.263 1076.49,683.263 1077.05,683.263 1077.61,683.263 1078.17,683.263 1078.73,683.263 1079.29,683.263 1079.85,683.263 1080.4,683.263 1080.96,683.263 1081.52,683.263 1082.08,683.263 1082.64,683.263 1083.2,683.263 1083.76,683.263 1084.32,683.263 1084.88,683.263 1085.44,683.263 1086,683.263 1086.56,683.263 1087.12,683.263 1087.67,683.263 1088.23,683.263 1088.79,683.263 1089.35,683.263 1089.91,683.263 1090.47,683.263 1091.03,683.263 1091.59,683.263 1092.15,683.263 1092.71,683.263 1093.27,683.263 1093.83,683.263 1094.39,683.263 1094.94,683.263 1095.5,683.263 1096.06,683.263 1096.62,683.263 1097.18,683.263 1097.74,683.263 1098.3,683.263 1098.86,683.263 1099.42,683.263 1099.98,683.263 1100.54,683.263 1101.1,683.263 1101.66,683.263 1102.22,683.263 1102.77,683.263 1103.33,683.263 1103.89,683.263 1104.45,683.263 1105.01,683.263 1105.57,683.263 1106.13,683.263 1106.69,683.263 1107.25,683.263 1107.81,683.263 1108.37,683.263 1108.93,683.263 1109.49,683.263 1110.04,683.263 1110.6,683.263 1111.16,683.263 1111.72,683.263 1112.28,683.263 1112.84,683.263 1113.4,683.263 1113.96,683.263 1114.52,683.263 1115.08,683.263 1115.64,683.263 1116.2,683.263 1116.76,683.263 1117.31,683.263 1117.87,683.263 1118.43,683.263 1118.99,683.263 1119.55,683.263 1120.11,683.263 1120.67,683.263 1121.23,683.263 1121.79,683.263 1122.35,683.263 1122.91,683.263 1123.47,683.263 1124.03,683.263 1124.59,683.263 1125.14,683.263 1125.7,683.263 1126.26,683.263 1126.82,683.263 1127.38,683.263 1127.94,683.263 1128.5,683.263 1129.06,683.263 1129.62,683.263 1130.18,683.263 1130.74,683.263 1131.3,683.263 1131.86,683.263 1132.41,683.263 1132.97,683.263 1133.53,683.263 1134.09,683.263 1134.65,683.263 1135.21,683.263 1135.77,683.263 1136.33,683.263 1136.89,683.263 1137.45,683.263 1138.01,683.263 1138.57,683.263 1139.13,683.263 1139.68,683.263 1140.24,683.263 1140.8,683.263 1141.36,683.263 1141.92,683.263 1142.48,683.263 1143.04,683.263 1143.6,683.263 1144.16,683.263 1144.72,683.263 1145.28,683.263 1145.84,683.263 1146.4,683.263 1146.96,683.263 1147.51,683.263 1148.07,683.263 1148.63,683.263 1149.19,683.263 1149.75,683.263 1150.31,683.263 1150.87,683.263 1151.43,683.263 1151.99,683.263 1152.55,683.263 1153.11,683.263 1153.67,683.263 1154.23,683.263 1154.78,683.263 1155.34,683.263 1155.9,683.263 1156.46,683.263 1157.02,683.263 1157.58,683.263 1158.14,683.263 1158.7,683.263 1159.26,683.263 1159.82,683.263 1160.38,683.263 1160.94,683.263 1161.5,683.263 1162.05,683.263 1162.61,683.263 1163.17,683.263 1163.73,683.263 1164.29,683.263 1164.85,683.263 1165.41,683.263 1165.97,683.263 1166.53,683.263 1167.09,683.263 1167.65,683.263 1168.21,683.263 1168.77,683.263 1169.33,683.263 1169.88,683.263 1170.44,683.263 1171,683.263 1171.56,683.263 1172.12,683.263 1172.68,683.263 1173.24,683.263 1173.8,683.263 1174.36,683.263 1174.92,683.263 1175.48,683.263 1176.04,683.263 1176.6,683.263 1177.15,683.263 1177.71,683.263 1178.27,683.263 1178.83,683.263 1179.39,683.263 1179.95,683.263 1180.51,683.263 1181.07,683.263 1181.63,683.263 1182.19,683.263 1182.75,683.263 1183.31,683.263 1183.87,683.263 1184.43,683.263 1184.98,683.263 1185.54,683.263 1186.1,683.263 1186.66,683.263 1187.22,683.263 1187.78,683.263 1188.34,683.263 1188.9,683.263 1189.46,683.263 1190.02,683.263 1190.58,683.263 1191.14,683.263 1191.7,683.263 1192.25,683.263 1192.81,683.263 1193.37,683.263 1193.93,683.263 1194.49,683.263 1195.05,683.263 1195.61,683.263 1196.17,683.263 1196.73,683.263 1197.29,683.263 1197.85,683.263 1198.41,683.263 1198.97,683.263 1199.52,683.263 1200.08,683.263 1200.64,683.263 1201.2,683.263 1201.76,683.263 1202.32,683.263 1202.88,683.263 1203.44,683.263 1204,683.263 1204.56,683.263 1205.12,683.263 1205.68,683.263 1206.24,683.263 1206.8,683.263 1207.35,683.263 1207.91,683.263 1208.47,683.263 1209.03,683.263 1209.59,683.263 1210.15,683.263 1210.71,683.263 1211.27,683.263 1211.83,683.263 1212.39,683.263 1212.95,683.263 1213.51,683.263 1214.07,683.263 1214.62,683.263 1215.18,683.263 1215.74,683.263 1216.3,683.263 1216.86,683.263 1217.42,683.263 1217.98,683.263 1218.54,683.263 1219.1,683.263 1219.66,683.263 1220.22,683.263 1220.78,683.263 1221.34,683.263 1221.89,683.263 1222.45,683.263 1223.01,683.263 1223.57,683.263 1224.13,683.263 1224.69,683.263 1225.25,683.263 1225.81,683.263 1226.37,683.263 1226.93,683.263 1227.49,683.263 1228.05,683.263 1228.61,683.263 1229.17,683.263 1229.72,683.263 1230.28,683.263 1230.84,683.263 1231.4,683.263 1231.96,683.263 1232.52,683.263 1233.08,683.263 1233.64,683.263 1234.2,683.263 1234.76,683.263 1235.32,683.263 1235.88,683.263 1236.44,683.263 1236.99,683.263 1237.55,683.263 1238.11,683.263 1238.67,683.263 1239.23,683.263 1239.79,683.263 1240.35,683.263 1240.91,683.263 1241.47,683.263 1242.03,683.263 1242.59,683.263 1243.15,683.263 1243.71,683.263 1244.26,683.263 1244.82,683.263 1245.38,683.263 1245.94,683.263 1246.5,683.263 1247.06,683.263 1247.62,683.263 1248.18,683.263 1248.74,683.263 1249.3,683.263 1249.86,683.263 1250.42,683.263 1250.98,683.263 1251.54,683.263 1252.09,683.263 1252.65,683.263 1253.21,683.263 1253.77,683.263 1254.33,683.263 1254.89,683.263 1255.45,683.263 1256.01,683.263 1256.57,683.263 1257.13,683.263 1257.69,683.263 1258.25,683.263 1258.81,683.263 1259.36,683.263 1259.92,683.263 1260.48,683.263 1261.04,683.263 1261.6,683.263 1262.16,683.263 1262.72,683.263 1263.28,683.263 1263.84,683.263 1264.4,683.263 1264.96,683.263 1265.52,683.263 1266.08,683.263 1266.63,683.263 1267.19,683.263 1267.75,683.263 1268.31,683.263 1268.87,683.263 1269.43,683.263 1269.99,683.263 1270.55,683.263 1271.11,683.263 1271.67,683.263 1272.23,683.263 1272.79,683.263 1273.35,683.263 1273.91,683.263 1274.46,683.263 1275.02,683.263 1275.58,683.263 1276.14,683.263 1276.7,683.263 1277.26,683.263 1277.82,683.263 1278.38,683.263 1278.94,683.263 1279.5,683.263 1280.06,683.263 1280.62,683.263 1281.18,683.263 1281.73,683.263 1282.29,683.263 1282.85,683.263 1283.41,683.263 1283.97,683.263 1284.53,683.263 1285.09,683.263 1285.65,683.263 1286.21,683.263 1286.77,683.263 1287.33,683.263 1287.89,683.263 1288.45,683.263 1289,683.263 1289.56,683.263 1290.12,683.263 1290.68,683.263 1291.24,683.263 1291.8,683.263 1292.36,683.263 1292.92,683.263 1293.48,683.263 1294.04,683.263 1294.6,683.263 1295.16,683.263 1295.72,683.263 1296.28,683.263 1296.83,683.263 1297.39,683.263 1297.95,683.263 1298.51,683.263 1299.07,683.263 1299.63,683.263 1300.19,683.263 1300.75,683.263 1301.31,683.263 1301.87,683.263 1302.43,683.263 1302.99,683.263 1303.55,683.263 1304.1,683.263 1304.66,683.263 1305.22,683.263 1305.78,683.263 1306.34,683.263 1306.9,683.263 1307.46,683.263 1308.02,683.263 1308.58,683.263 1309.14,683.263 1309.7,683.263 1310.26,683.263 1310.82,683.263 1311.38,683.263 1311.93,683.263 1312.49,683.263 1313.05,683.263 1313.61,683.263 1314.17,683.263 1314.73,683.263 1315.29,683.263 1315.85,683.263 1316.41,683.263 1316.97,683.263 1317.53,683.263 1318.09,683.263 1318.65,683.263 1319.2,683.263 1319.76,683.263 1320.32,683.263 1320.88,683.263 1321.44,683.263 1322,683.263 1322.56,683.263 1323.12,683.263 1323.68,683.263 1324.24,683.263 1324.8,683.263 1325.36,683.263 1325.92,683.263 1326.47,683.263 1327.03,683.263 1327.59,683.263 1328.15,683.263 1328.71,683.263 1329.27,683.263 1329.83,683.263 1330.39,683.263 1330.95,683.263 1331.51,683.263 1332.07,683.263 1332.63,683.263 1333.19,683.263 1333.75,683.263 1334.3,683.263 1334.86,683.263 1335.42,683.263 1335.98,683.263 1336.54,683.263 1337.1,683.263 1337.66,683.263 1338.22,683.263 1338.78,683.263 1339.34,683.263 1339.9,683.263 1340.46,683.263 1341.02,683.263 1341.57,683.263 1342.13,683.263 1342.69,683.263 1343.25,683.263 1343.81,683.263 1344.37,683.263 1344.93,683.263 1345.49,683.263 1346.05,683.263 1346.61,683.263 1347.17,683.263 1347.73,683.263 1348.29,683.263 1348.84,683.263 1349.4,683.263 1349.96,683.263 1350.52,683.263 1351.08,683.263 1351.64,683.263 1352.2,683.263 1352.76,683.263 1353.32,683.263 1353.88,683.263 1354.44,683.263 1355,683.263 1355.56,683.263 1356.12,683.263 1356.67,683.263 1357.23,683.263 1357.79,683.263 1358.35,683.263 1358.91,683.263 1359.47,683.263 1360.03,683.263 1360.59,683.263 1361.15,683.263 1361.71,683.263 1362.27,683.263 1362.83,683.263 1363.39,683.263 1363.94,683.263 1364.5,683.263 1365.06,683.263 1365.62,683.263 1366.18,683.263 1366.74,683.263 1367.3,683.263 1367.86,683.263 1368.42,683.263 1368.98,683.263 1369.54,683.263 1370.1,683.263 1370.66,683.263 1371.21,683.263 1371.77,683.263 1372.33,683.263 1372.89,683.263 1373.45,683.263 1374.01,683.263 1374.57,683.263 1375.13,683.263 1375.69,683.263 1376.25,683.263 1376.81,683.263 1377.37,683.263 1377.93,683.263 1378.49,683.263 1379.04,683.263 1379.6,683.263 1380.16,683.263 1380.72,683.263 1381.28,683.263 1381.84,683.263 1382.4,683.263 1382.96,683.263 1383.52,683.263 1384.08,683.263 1384.64,683.263 1385.2,683.263 1385.76,683.263 1386.31,683.263 1386.87,683.263 1387.43,683.263 1387.99,683.263 1388.55,683.263 1389.11,683.263 1389.67,683.263 1390.23,683.263 1390.79,683.263 1391.35,683.263 1391.91,683.263 1392.47,683.263 1393.03,683.263 1393.58,683.263 1394.14,683.263 1394.7,683.263 1395.26,683.263 1395.82,683.263 1396.38,683.263 1396.94,683.263 1397.5,683.263 1398.06,683.263 1398.62,683.263 1399.18,683.263 1399.74,683.263 1400.3,683.263 1400.86,683.263 1401.41,683.263 1401.97,683.263 1402.53,683.263 1403.09,683.263 1403.65,683.263 1404.21,683.263 1404.77,683.263 1405.33,683.263 1405.89,683.263 1406.45,683.263 1407.01,683.263 1407.57,683.263 1408.13,683.263 1408.68,683.263 1409.24,683.263 1409.8,683.263 1410.36,683.263 1410.92,683.263 1411.48,683.263 1412.04,683.263 1412.6,683.263 1413.16,683.263 1413.72,683.263 1414.28,683.263 1414.84,683.263 1415.4,683.263 1415.95,683.263 1416.51,683.263 1417.07,683.263 1417.63,683.263 1418.19,683.263 1418.75,683.263 1419.31,683.263 1419.87,683.263 1420.43,683.263 1420.99,683.263 1421.55,683.263 1422.11,683.263 1422.67,683.263 1423.23,683.263 1423.78,683.263 1424.34,683.263 1424.9,683.263 1425.46,683.263 1426.02,683.263 1426.58,683.263 1427.14,683.263 1427.7,683.263 1428.26,683.263 1428.82,683.263 1429.38,683.263 1429.94,683.263 1430.5,683.263 1431.05,683.263 1431.61,683.263 1432.17,683.263 1432.73,683.263 1433.29,683.263 1433.85,683.263 1434.41,683.263 1434.97,683.263 1435.53,683.263 1436.09,683.263 1436.65,683.263 1437.21,683.263 1437.77,683.263 1438.33,683.263 1438.88,683.263 1439.44,683.263 1440,683.263 1440.56,683.263 1441.12,683.263 1441.68,683.263 1442.24,683.263 1442.8,683.263 1443.36,683.263 1443.92,683.263 1444.48,683.263 1445.04,683.263 1445.6,683.263 1446.15,683.263 1446.71,683.263 1447.27,683.263 1447.83,683.263 1448.39,683.263 1448.95,683.263 1449.51,683.263 1450.07,683.263 1450.63,683.263 1451.19,683.263 1451.75,683.263 1452.31,683.263 1452.87,683.263 1453.42,683.263 1453.98,683.263 1454.54,683.263 1455.1,683.263 1455.66,683.263 1456.22,683.263 1456.78,683.263 1457.34,683.263 1457.9,683.263 1458.46,683.263 1459.02,683.263 1459.58,683.263 1460.14,683.263 1460.7,683.263 1461.25,683.263 1461.81,683.263 1462.37,683.263 1462.93,683.263 1463.49,683.263 1464.05,683.263 1464.61,683.263 1465.17,683.263 1465.73,683.263 1466.29,683.263 1466.85,683.263 1467.41,683.263 1467.97,683.263 1468.52,683.263 1469.08,683.263 1469.64,683.263 1470.2,683.263 1470.76,683.263 1471.32,683.263 1471.88,683.263 1472.44,683.263 1473,683.263 1473.56,683.263 1474.12,683.263 1474.68,683.263 1475.24,683.263 1475.79,683.263 1476.35,683.263 1476.91,683.263 1477.47,683.263 1478.03,683.263 1478.59,683.263 1479.15,683.263 1479.71,683.263 1480.27,683.263 1480.83,683.263 1481.39,683.263 1481.95,683.263 1482.51,683.263 1483.07,683.263 1483.62,683.263 1484.18,683.263 1484.74,683.263 1485.3,683.263 1485.86,683.263 1486.42,683.263 1486.98,683.263 1487.54,683.263 1488.1,683.263 1488.66,683.263 1489.22,683.263 1489.78,683.263 1490.34,683.263 1490.89,683.263 1491.45,683.263 1492.01,683.263 1492.57,683.263 1493.13,683.263 1493.69,683.263 1494.25,683.263 1494.81,683.263 1495.37,683.263 1495.93,683.263 1496.49,683.263 1497.05,683.263 1497.61,683.263 1498.16,683.263 1498.72,683.263 1499.28,683.263 1499.84,683.263 1500.4,683.263 1500.96,683.263 1501.52,683.263 1502.08,683.263 1502.64,683.263 1503.2,683.263 1503.76,683.263 1504.32,683.263 1504.88,683.263 1505.44,683.263 1505.99,683.263 1506.55,683.263 1507.11,683.263 1507.67,683.263 1508.23,683.263 1508.79,683.263 1509.35,683.263 1509.91,683.263 1510.47,683.263 1511.03,683.263 1511.59,683.263 1512.15,683.263 1512.71,683.263 1513.26,683.263 1513.82,683.263 1514.38,683.263 1514.94,683.263 1515.5,683.263 1516.06,683.263 1516.62,683.263 1517.18,683.263 1517.74,683.263 1518.3,683.263 1518.86,683.263 1519.42,683.263 1519.98,683.263 1520.53,683.263 1521.09,683.263 1521.65,683.263 1522.21,683.263 1522.77,683.263 1523.33,683.263 1523.89,683.263 1524.45,683.263 1525.01,683.263 1525.57,683.263 1526.13,683.263 1526.69,683.263 1527.25,683.263 1527.81,683.263 1528.36,683.263 1528.92,683.263 1529.48,683.263 1530.04,683.263 1530.6,683.263 1531.16,683.263 1531.72,683.263 1532.28,683.263 1532.84,683.263 1533.4,683.263 1533.96,683.263 1534.52,683.263 1535.08,683.263 1535.63,683.263 1536.19,683.263 1536.75,683.263 1537.31,683.263 1537.87,683.263 1538.43,683.263 1538.99,683.263 1539.55,683.263 1540.11,683.263 1540.67,683.263 1541.23,683.263 1541.79,683.263 1542.35,683.263 1542.9,683.263 1543.46,683.263 1544.02,683.263 1544.58,683.263 1545.14,683.263 1545.7,683.263 1546.26,683.263 1546.82,683.263 1547.38,683.263 1547.94,683.263 1548.5,683.263 1549.06,683.263 1549.62,683.263 1550.18,683.263 1550.73,683.263 1551.29,683.263 1551.85,683.263 1552.41,683.263 1552.97,683.263 1553.53,683.263 1554.09,683.263 1554.65,683.263 1555.21,683.263 1555.77,683.263 1556.33,683.263 1556.89,683.263 1557.45,683.263 1558,683.263 1558.56,683.263 1559.12,683.263 1559.68,683.263 1560.24,683.263 1560.8,683.263 1561.36,683.263 1561.92,683.263 1562.48,683.263 1563.04,683.263 1563.6,683.263 1564.16,683.263 1564.72,683.263 1565.28,683.263 1565.83,683.263 1566.39,683.263 1566.95,683.263 1567.51,683.263 1568.07,683.263 1568.63,683.263 1569.19,683.263 1569.75,683.263 1570.31,683.263 1570.87,683.263 1571.43,683.263 1571.99,683.263 1572.55,683.263 1573.1,683.263 1573.66,683.263 1574.22,683.263 1574.78,683.263 1575.34,683.263 1575.9,683.263 1576.46,683.263 1577.02,683.263 1577.58,683.263 1578.14,683.263 1578.7,683.263 1579.26,683.263 1579.82,683.263 1580.37,683.263 1580.93,683.263 1581.49,683.263 1582.05,683.263 1582.61,683.263 1583.17,683.263 1583.73,683.263 1584.29,683.263 1584.85,683.263 1585.41,683.263 1585.97,683.263 1586.53,683.263 1587.09,683.263 1587.65,683.263 1588.2,683.263 1588.76,683.263 1589.32,683.263 1589.88,683.263 1590.44,683.263 1591,683.263 1591.56,683.263 1592.12,683.263 1592.68,683.263 1593.24,683.263 1593.8,683.263 1594.36,683.263 1594.92,683.263 1595.47,683.263 1596.03,683.263 1596.59,683.263 1597.15,683.263 1597.71,683.263 1598.27,683.263 1598.83,683.263 1599.39,683.263 1599.95,683.263 1600.51,683.263 1601.07,683.263 1601.63,683.263 1602.19,683.263 1602.74,683.263 1603.3,683.263 1603.86,683.263 1604.42,683.263 1604.98,683.263 1605.54,683.263 1606.1,683.263 1606.66,683.263 1607.22,683.263 1607.78,683.263 1608.34,683.263 1608.9,683.263 1609.46,683.263 1610.02,683.263 1610.57,683.263 1611.13,683.263 1611.69,683.263 1612.25,683.263 1612.81,683.263 1613.37,683.263 1613.93,683.263 1614.49,683.263 1615.05,683.263 1615.61,683.263 1616.17,683.263 1616.73,683.263 1617.29,683.263 1617.84,683.263 1618.4,683.263 1618.96,683.263 1619.52,683.263 1620.08,683.263 1620.64,683.263 1621.2,683.263 1621.76,683.263 1622.32,683.263 1622.88,683.263 1623.44,683.263 1624,683.263 1624.56,683.263 1625.11,683.263 1625.67,683.263 1626.23,683.263 1626.79,683.263 1627.35,683.263 1627.91,683.263 1628.47,683.263 1629.03,683.263 1629.59,683.263 1630.15,683.263 1630.71,683.263 1631.27,683.263 1631.83,683.263 1632.39,683.263 1632.94,683.263 1633.5,683.263 1634.06,683.263 1634.62,683.263 1635.18,683.263 1635.74,683.263 1636.3,683.263 1636.86,683.263 1637.42,683.263 1637.98,683.263 1638.54,683.263 1639.1,683.263 1639.66,683.263 1640.21,683.263 1640.77,683.263 1641.33,683.263 1641.89,683.263 1642.45,683.263 1643.01,683.263 1643.57,683.263 1644.13,683.263 1644.69,683.263 1645.25,683.263 1645.81,683.263 1646.37,683.263 1646.93,683.263 1647.48,683.263 1648.04,683.263 1648.6,683.263 1649.16,683.263 1649.72,683.263 1650.28,683.263 1650.84,683.263 1651.4,683.263 1651.96,683.263 1652.52,683.263 1653.08,683.263 1653.64,683.263 1654.2,683.263 1654.76,683.263 1655.31,683.263 1655.87,683.263 1656.43,683.263 1656.99,683.263 1657.55,683.263 1658.11,683.263 1658.67,683.263 1659.23,683.263 1659.79,683.263 1660.35,683.263 1660.91,683.263 1661.47,683.263 1662.03,683.263 1662.58,683.263 1663.14,683.263 1663.7,683.263 1664.26,683.263 1664.82,683.263 1665.38,683.263 1665.94,683.263 1666.5,683.263 1667.06,683.263 1667.62,683.263 1668.18,683.263 1668.74,683.263 1669.3,683.263 1669.85,683.263 1670.41,683.263 1670.97,683.263 1671.53,683.263 1672.09,683.263 1672.65,683.263 1673.21,683.263 1673.77,683.263 1674.33,683.263 1674.89,683.263 1675.45,683.263 1676.01,683.263 1676.57,683.263 1677.13,683.263 1677.68,683.263 1678.24,683.263 1678.8,683.263 1679.36,683.263 1679.92,683.263 1680.48,683.263 1681.04,683.263 1681.6,683.263 1682.16,683.263 1682.72,683.263 1683.28,683.263 1683.84,683.263 1684.4,683.263 1684.95,683.263 1685.51,683.263 1686.07,683.263 1686.63,683.263 1687.19,683.263 1687.75,683.263 1688.31,683.263 1688.87,683.263 1689.43,683.263 1689.99,683.263 1690.55,683.263 1691.11,683.263 1691.67,683.263 1692.23,683.263 1692.78,683.263 1693.34,683.263 1693.9,683.263 1694.46,683.263 1695.02,683.263 1695.58,683.263 1696.14,683.263 1696.7,683.263 1697.26,683.263 1697.82,683.263 1698.38,683.263 1698.94,683.263 1699.5,683.263 1700.05,683.263 1700.61,683.263 1701.17,683.263 1701.73,683.263 1702.29,683.263 1702.85,683.263 1703.41,683.263 1703.97,683.263 1704.53,683.263 1705.09,683.263 1705.65,683.263 1706.21,683.263 1706.77,683.263 1707.32,683.263 1707.88,683.263 1708.44,683.263 1709,683.263 1709.56,683.263 1710.12,683.263 1710.68,683.263 1711.24,683.263 1711.8,683.263 1712.36,683.263 1712.92,683.263 1713.48,683.263 1714.04,683.263 1714.6,683.263 1715.15,683.263 1715.71,683.263 1716.27,683.263 1716.83,683.263 1717.39,683.263 1717.95,683.263 1718.51,683.263 1719.07,683.263 1719.63,683.263 1720.19,683.263 1720.75,683.263 1721.31,683.263 1721.87,683.263 1722.42,683.263 1722.98,683.263 1723.54,683.263 1724.1,683.263 1724.66,683.263 1725.22,683.263 1725.78,683.263 1726.34,683.263 1726.9,683.263 1727.46,683.263 1728.02,683.263 1728.58,683.263 1729.14,683.263 1729.69,683.263 1730.25,683.263 1730.81,683.263 1731.37,683.263 1731.93,683.263 1732.49,683.263 1733.05,683.263 1733.61,683.263 1734.17,683.263 1734.73,683.263 1735.29,683.263 1735.85,683.263 1736.41,683.263 1736.97,683.263 1737.52,683.263 1738.08,683.263 1738.64,683.263 1739.2,683.263 1739.76,683.263 1740.32,683.263 1740.88,683.263 1741.44,683.263 1742,683.263 1742.56,683.263 1743.12,683.263 1743.68,683.263 1744.24,683.263 1744.79,683.263 1745.35,683.263 1745.91,683.263 1746.47,683.263 1747.03,683.263 1747.59,683.263 1748.15,683.263 1748.71,683.263 1749.27,683.263 1749.83,683.263 1750.39,683.263 1750.95,683.263 1751.51,683.263 1752.06,683.263 1752.62,683.263 1753.18,683.263 1753.74,683.263 1754.3,683.263 1754.86,683.263 1755.42,683.263 1755.98,683.263 1756.54,683.263 1757.1,683.263 1757.66,683.263 1758.22,683.263 1758.78,683.263 1759.34,683.263 1759.89,683.263 1760.45,683.263 1761.01,683.263 1761.57,683.263 1762.13,683.263 1762.69,683.263 1763.25,683.263 1763.81,683.263 1764.37,683.263 1764.93,683.263 1765.49,683.263 1766.05,683.263 1766.61,683.263 1767.16,683.263 1767.72,683.263 1768.28,683.263 1768.84,683.263 1769.4,683.263 1769.96,683.263 1770.52,683.263 1771.08,683.263 1771.64,683.263 1772.2,683.263 1772.76,683.263 1773.32,683.263 1773.88,683.263 1774.43,683.263 1774.99,683.263 1775.55,683.263 1776.11,683.263 1776.67,683.263 1777.23,683.263 1777.79,683.263 1778.35,683.263 1778.91,683.263 1779.47,683.263 1780.03,683.263 1780.59,683.263 1781.15,683.263 1781.71,683.263 1782.26,683.263 1782.82,683.263 1783.38,683.263 1783.94,683.263 1784.5,683.263 1785.06,683.263 1785.62,683.263 1786.18,683.263 1786.74,683.263 1787.3,683.263 1787.86,683.263 1788.42,683.263 1788.98,683.263 1789.53,683.263 1790.09,683.263 1790.65,683.263 1791.21,683.263 1791.77,683.263 1792.33,683.263 1792.89,683.263 1793.45,683.263 1794.01,683.263 1794.57,683.263 1795.13,683.263 1795.69,683.263 1796.25,683.263 1796.8,683.263 1797.36,683.263 1797.92,683.263 1798.48,683.263 1799.04,683.263 1799.6,683.263 1800.16,683.263 1800.72,683.263 1801.28,683.263 1801.84,683.263 1802.4,683.263 1802.96,683.263 1803.52,683.263 1804.08,683.263 1804.63,683.263 1805.19,683.263 1805.75,683.263 1806.31,683.263 1806.87,683.263 1807.43,683.263 1807.99,683.263 1808.55,683.263 1809.11,683.263 1809.67,683.263 1810.23,683.263 1810.79,683.263 1811.35,683.263 1811.9,683.263 1812.46,683.263 1813.02,683.263 1813.58,683.263 1814.14,683.263 1814.7,683.263 1815.26,683.263 1815.82,683.263 1816.38,683.263 1816.94,683.263 1817.5,683.263 1818.06,683.263 1818.62,683.263 1819.18,683.263 1819.73,683.263 1820.29,683.263 1820.85,683.263 1821.41,683.263 1821.97,683.263 1822.53,683.263 1823.09,683.263 1823.65,683.263 1824.21,683.263 1824.77,683.263 1825.33,683.263 1825.89,683.263 1826.45,683.263 1827,683.263 1827.56,683.263 1828.12,683.263 1828.68,683.263 1829.24,683.263 1829.8,683.263 1830.36,683.263 1830.92,683.263 1831.48,683.263 1832.04,683.263 1832.6,683.263 1833.16,683.263 1833.72,683.263 1834.27,683.263 1834.83,683.263 1835.39,683.263 1835.95,683.263 1836.51,683.263 1837.07,683.263 1837.63,683.263 1838.19,683.263 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $target_walkers walkers:\n    Shift: $(se.mean) ¬± $(se.err)\n    Projected Energy: $(v.val) ¬± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.023229355417878 ¬± 0.024257679401900982\nProjected Energy: -4.013463457267202 ¬± (0.0056459923415896895, 0.0059985700450271295)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from solve as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; Œ± = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-Œ±.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ¬± 0.0029\n  with uncertainty of ¬± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13√ó6 DataFrame\n Row ‚îÇ blocks  mean      std_err      std_err_err  p_cov       mj\n     ‚îÇ Int64   Float64   Float64      Float64      Float64     Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 ‚îÇ   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 ‚îÇ   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 ‚îÇ   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 ‚îÇ    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 ‚îÇ    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 ‚îÇ    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 ‚îÇ     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 ‚îÇ     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 ‚îÇ     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 ‚îÇ      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 ‚îÇ      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 ‚îÇ      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ästd err vs blocking steps‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n    0.00423501 ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ m test\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ std err\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°†‚¢∫‚†í‚†í‚¢∫‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚°Ü‚£Ä‚†§‚°ó‚†â‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ß‚†§‚†î‚°ó‚†ä‚†â‚°è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚¢£‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚°á‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†∏‚°Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†Å‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚°á‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£¶‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†î‚†í‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n   -0.00012335 ‚îÇ‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†ß‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚îÇ\n               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n               ‚†Ä0.64‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äk‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä13.36‚†Ä\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; Œ± = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; Œ±=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.œÉ_f using x_by_y_linear. The standard error estimate r.œÉ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.Œ¥_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ¬± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*œÉ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3√ó3 DataFrame\n Row ‚îÇ res      res_l    res_u\n     ‚îÇ Float64  Float64  Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282\n   2 ‚îÇ    13.0  1.7282   1.7282\n   3 ‚îÇ    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b];\n    shift=:shift,\n    norm=:norm,\n    time_step=determine_constant_time_step(df),\n    skip=0\n)\ngrowth_witness(sim::PMCSimulation, [b]; kwargs...)\n\nCalculate the growth witness directly from the result (DataFrame or PMCSimulation) of solveing a ProjectorMonteCarloProblem. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0)\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ‚â• 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n)\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    time_step=determine_constant_time_step(df),\n    kwargs...\n)\ngrowth_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively.  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin.\n\nE_gr = E_r - frac1dœÑln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m) \n\nwhere dœÑ is the time_step\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the (biased) shift estimator.  Error propagation is done with MonteCarloMeasurements. Propagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a PMCSimulation or DataFrame returned by solve. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\ngrowth_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df or PMCSimulation sim. repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-Tuple{AbstractVector, AbstractVector, AbstractVector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    time_step=determine_constant_time_step(df),\n    kwargs...\n)\nmixed_estimator(sim::PMCSimulation, h; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up).  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin.  Additional keyword arguments are passed on to ratio_of_means.\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2), where dœÑ is the time_step, and potentially increased confidence intervals compared to the unweighted ratio.  Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\nmixed_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(df::DataFrame; skip=0, hproj=:hproj, vproj=:vproj, kwargs...)\nprojected_energy(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy(...) to set these up in ProjectorMonteCarloProblem). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n)\nrayleigh_replica_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin. Additional keyword arguments are passed on to ratio_of_means.\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\nrayleigh_replica_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...)\nshift_estimator(sim::PMCSimulation; kwargs...)\n-> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, time_step; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip and dœÑ is the time_step.\n\nSee also w_lin, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, time_step; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip and dœÑ is the time_step.\n\nSee also w_exp, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\nreplica_fidelity(sim::PMCSimulation; kwargs...)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the PMCSimulation or DataFrame returned by solve, using replicas _1 and _2. Calls ratio_of_means to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |œà‚ü© and |œï‚ü© is defined as\n\nF(œàœï) = fracœàœï^2œàœàœïœï \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v‚ãÖv == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\nvariational_energy_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame and PMCSimulation versions can extract the relevant information from the result of solve. Set up the ProjectorMonteCarloProblem with the keyword argument replica_strategy = AllOverlaps(R) and R ‚â• 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:¬±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ¬± 0.029\n  with uncertainty of ¬± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; Œ± = 0.01) -> k\nmtest(table::NamedTuple; Œ± = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-Œ± after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, œÉ_f, Œ¥_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nœÉ_f::T: std from linear propagation\nŒ¥_y::T: coefficient of variation for denominator (‚â§ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, Œº, œÉ)\nparticles(samples, Œº::AbstractVector, Œ£::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, œÉ_f, Œ¥_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nœÉ_f standard deviation of f from linear error propagation (normal approximation)\nŒ¥_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(Œº_x,Œº_y,œÉ_x,œÉ_y,œÅ) -> f, œÉ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013).\n\nœÉ_f = sqrtfracœÉ_xŒº_y^2 + fracŒº_x œÉ_yŒº_y^2^2 - frac2 œÅ Œº_xŒº_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3√ó7 DataFrame\n Row ‚îÇ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     ‚îÇ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 ‚îÇ    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 ‚îÇ    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1√ó9 DataFrame\n Row ‚îÇ val       val_l      val_u      val_f     val_œÉ_f    val_Œ¥_y    val_k  val_blocks  val_success\n     ‚îÇ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.determine_constant_time_step-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.determine_constant_time_step","text":"determine_constant_time_step(df) -> time_step\n\nGiven a DataFrame df, determine the time step that was used to compute it. Throw an error if time step is not constant.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7√ó6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS‚Ä¶</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple‚Ä¶</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.452508</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4216e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.1662e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.067e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.222e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.595e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.486e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ‚â† basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10√ó10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10√ó10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nŒîE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ŒîE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0‚ü©\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0‚ü©\"\n fs\"|0 1 2 1 0‚ü©\"\n fs\"|1 0 2 0 1‚ü©\"\n fs\"|1 0 1 2 0‚ü©\"\n fs\"|0 0 1 1 2‚ü©\"\n fs\"|0 2 1 0 1‚ü©\"\n fs\"|2 1 1 0 0‚ü©\"\n fs\"|0 2 0 2 0‚ü©\"\n fs\"|1 1 0 1 1‚ü©\"\n fs\"|2 0 0 0 2‚ü©\"\n fs\"|0 0 0 3 1‚ü©\"\n fs\"|3 0 0 1 0‚ü©\"\n fs\"|0 1 0 0 3‚ü©\"\n fs\"|1 3 0 0 0‚ü©\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770853\n  0.1358418221962161\n  0.15789998694608265\n  0.8767114411781343\n  1.530592997097334\n  1.5835732611867375\n  3.07287033032586\n  3.1256726539518445\n  4.862107221562168\n  6.260694850380594\n  6.402671211183112\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ‚âà all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0‚ü©\" => -0.0214153\n  fs\"|2 0 0 0 2‚ü©\" => -0.00237613\n  fs\"|0 0 4 0 0‚ü©\" => -0.980348\n  fs\"|0 0 0 3 1‚ü©\" => 0.00363555\n  fs\"|2 1 1 0 0‚ü©\" => -0.0119687\n  fs\"|1 0 2 0 1‚ü©\" => 0.0768085\n  fs\"|1 3 0 0 0‚ü©\" => 0.00363555\n  fs\"|0 1 2 1 0‚ü©\" => 0.177701\n  fs\"|0 0 1 1 2‚ü©\" => -0.0119687\n  fs\"|3 0 0 1 0‚ü©\" => 0.00195478\n  fs\"|0 2 0 2 0‚ü©\" => -0.0138439\n  fs\"|1 1 0 1 1‚ü©\" => -0.00234782\n  fs\"|0 1 0 0 3‚ü©\" => 0.00195478\n  fs\"|0 2 1 0 1‚ü©\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i œµ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential œµ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleœÉ t_œÉ a^_iœÉ a_jœÉ +\n  frac12sum_iœÉ u_œÉœÉ n_iœÉ (n_iœÉ - 1) +\n  sum_iœÉœÑu_œÉœÑ n_iœÉ n_iœÑ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iœÉd v_œÉd x_di^2 n_iœÉ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C √ó D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, Œ∑, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, Œ∑, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i œµ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi œµ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nŒ∑s = (): a tuple of aspect ratios for the remaining dimensions (Œ∑_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/Œ∑_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kœÉk^2 n_kœÉ \n    quad + sum_pqkœÉœÉ T_pqk a^_p-kœÉ a^_q+kœÉ a_qœÉ a_pœÉ \n    quad + sum_pqskkœÉœÉ Q_kka^_p-kœÉ a^_q+kœÉ a^_s+k-kœÉ\n                                       a_sœÉ a_qœÉ a_pœÉ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + œâN - v Œ£‚Çñ(a‚Çñ^ + a‚Çñ)\n\nwhere p is the total momentum, p_f = Œ£_k k a‚Çñ^ a‚Çñ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2œÄl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons œâ.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0‚ü©{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M√∑2, M√∑2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M√∑2, M√∑2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address Œ± is replaced by frac12(Œ±  Œ±) for even and odd parity, respectively, where Œ±ÃÑ == reverse(Œ±).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1‚ü©\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ‚âà eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ‚âà eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ‚â§ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0‚ü©{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ‚â§ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, œÉ=1, œÑ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_œÉœÑ(d) = frac1M _i n_œÉi (n_œÑi+d - Œ¥_0dŒ¥_œÉœÑ)\n\nFor multicomponent addresses, œÉ and œÑ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s b^_p  b_q a_r Œ¥_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s a^_p  a_q a_r Œ¥_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ‚â§ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ‚â§ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iœÉ = hat a^_iœÉ hat a_iœÉ\n\nwhere i is the mode and œÉ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0‚ü©\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0‚ü©\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x‚ãÖ(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1‚ü©\", -3.0)\n (fs\"|2 2 2‚ü©\", -2.449489742783178)\n (fs\"|3 1 2‚ü©\", -2.0)\n (fs\"|4 1 1‚ü©\", -2.8284271247461903)\n (fs\"|4 2 0‚ü©\", -2.0)\n (fs\"|3 3 0‚ü©\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ‚Ä¶.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb‚ãÖ(1:7) == onr(b)‚ãÖ(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w‚ãÖop(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ‚ãÖ A ‚ãÖ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1‚ü©\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ‚âà values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3√ó3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2√ó2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1‚ü©\" => -0.57735   fs\"|0 1 0‚ü©\" => -0.57735   fs\"|1 0 0‚ü©\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nŒ±mathrmnaddrrangle\n\nReturns the new address naddr and the factor Œ±. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0‚ü©\" => 1\n\njulia> fs\"|0 1 2 0‚ü©\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3‚ü©‚äó|0 1 0‚ü©\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üë‚ü©\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0‚ü©{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0‚ü©{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ‚â§ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Œ£_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) √∑ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ‚â§ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|‚ãÖ‚Üë‚Üë‚Üë‚ãÖ‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üì‚ü©\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3‚ü©{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n‚Üí (nadd, Œ±)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3‚ü©{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, Œ± = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep time_step constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; target_walkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when target_walkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ after projecting onto projector.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracPŒ®^(n+1)PŒ®^(n)right)-fracŒædœÑlnleft(fracPŒ®^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; target_walkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4, Œ± = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracŒædœÑlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-Œ±)*walkernumber() + Œ±*UniformProjector()‚ãÖœà computed with walkernumber() and UniformProjector(). When Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; target_walkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)-fracŒædœÑlnleft(fracŒ®_1^n+1Œ®_1^texttargetright)\n\nWhen Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(target_walkers, Œ∂ = 0.08, Œæ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After target_walkers is reached, update the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, Œ∂ = 0.08,   Œæ = Œ∂^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, time_step) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\nùêì = 1 + dœÑ(S - ùêá)\n\nwhere ùêá is the hamiltonian, dœÑ the time_step and S is the shift.\n\nùêì represents the first order expansion of the exponential evolution operator of the imaginary-time Schr√∂dinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(target_walkers, Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After target_walkers is reached, update the shift according to the log formula with damping parameter Œ∂.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntarget_walkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; target_walkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 9)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nŒ∂ = 0.08: Damping parameter for the shift update.\nŒæ = Œ∂^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; target_walkers, Œ∂, Œæ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * target_walkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dœÑ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(‚ãÖ,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_time_step(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndœÑ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 9)\n\njulia> size(df2)\n(200, 9)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3‚ü©\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nœÑ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; target_walkers=targetwalkers, Œ∂ = 0.08, Œæ = Œ∂^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.target_walkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ‚âà num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0, fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5\n  fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.update_time_step-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_time_step","text":"update_time_step(s<:TimeStepStrategy, time_step, tnorm) -> new_time_step\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    target_walkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schr√∂dinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Bl√∂te PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schr√∂dinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija ƒåufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. ProjectorMonteCarloProblem, ExactDiagonalizationProblem.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. ƒåufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelm√ºller, D. Huber, M. ƒåufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/œÄ^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => -1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -2.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 3.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 3.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()‚ãÖv == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
