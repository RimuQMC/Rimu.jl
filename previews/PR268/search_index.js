var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"projectormontecarlo.html#Projector-Monte-Carlo-/-FCIQMC","page":"Projector Monte Carlo","title":"Projector Monte Carlo / FCIQMC","text":"","category":"section"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"The purpose of Projector Monte Carlo is to stochastically sample the ground state, i.e. the  eigenvector corresponding to the lowest eigenvalue of a quantum Hamiltonian, or more generally,  a very large matrix. Rimu implements a flavor of Projector Monte Carlo called  Full Configuration Interaction Quantum Monte Carlo (FCIQMC).","category":"page"},{"location":"projectormontecarlo.html#ProjectorMonteCarloProblem","page":"Projector Monte Carlo","title":"ProjectorMonteCarloProblem","text":"","category":"section"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"To run a projector Monte Carlo simulation you set up a problem with ProjectorMonteCarloProblem and solve it with solve. Alternatively you can initialize a PMCSimulation struct, step!  through time steps, and solve! it to completion. ","category":"page"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"ProjectorMonteCarloProblem\ninit\nsolve\nsolve!\nstep!","category":"page"},{"location":"projectormontecarlo.html#Rimu.ProjectorMonteCarloProblem-projectormontecarlo","page":"Projector Monte Carlo","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntarget_walkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; target_walkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 9)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; target_walkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, see   TimeStepStrategy.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * target_walkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"projectormontecarlo.html#CommonSolve.init-projectormontecarlo","page":"Projector Monte Carlo","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\ninit(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"function"},{"location":"projectormontecarlo.html#CommonSolve.solve-projectormontecarlo","page":"Projector Monte Carlo","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"projectormontecarlo.html#CommonSolve.solve!-projectormontecarlo","page":"Projector Monte Carlo","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"function"},{"location":"projectormontecarlo.html#CommonSolve.step!-projectormontecarlo","page":"Projector Monte Carlo","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"function"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"After solve or solve! have been called the returned PMCSimulation contains the results of  the projector Monte Carlo calculation.","category":"page"},{"location":"projectormontecarlo.html#PMCSimulation-and-report-as-a-DataFrame","page":"Projector Monte Carlo","title":"PMCSimulation and report as a DataFrame","text":"","category":"section"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"Rimu.PMCSimulation","category":"page"},{"location":"projectormontecarlo.html#Rimu.PMCSimulation-projectormontecarlo","page":"Projector Monte Carlo","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"The DataFrame returned from DataFrame(::PNCSimulation) contains the time series data from  the projector Monte Carlo simulation that is of primary interest for analysis. Depending on the  reporting_strategy and other options passed as keyword arguments to  ProjectorMonteCarloProblem it can have different numbers of rows and columns. The rows  correspond to the reported time steps (Monte Carlo steps). There is at least one column with the name :step. Further columns are usually present with additional data reported from the simulation.","category":"page"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"For the default option algorithm = FCIQMC(; shift_strategy, time_step_strategy) with a single replica (n_replicas = 1) and single spectral state, the fields :shift, :norm, :len will  be present as well as others depending on the style argument and the post_step_strategy.","category":"page"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"If multiple replicas or spectral states are requested, then the relevant field names in the  DataFrame will have a suffix identifying the respective replica simulation, e.g. the shifts will be reported as shift_1, shift_2, ... ","category":"page"},{"location":"projectormontecarlo.html","page":"Projector Monte Carlo","title":"Projector Monte Carlo","text":"Many tools for analysing the time series data obtained from a  ProjectorMonteCarloProblem are contained in the Module StatsTools.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1⟩\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntarget_walkers = 100;\ntime_step = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"problem = ProjectorMonteCarloProblem(H;\n    style=IsDynamicSemistochastic(),\n    time_step,\n    last_step = steps_equilibrate + steps_measure,\n    target_walkers,\n    replica_strategy,\n)\nresult = solve(problem)\ndf = DataFrame(result);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.20948141071989462 ± 0.001318739745185767\n   G2(1) = 0.9175179073041889 ± 0.0007074344933628687\n   G2(2) = 0.9831547346505642 ± 0.0006596294447164453\n   G2(3) = 0.9891733053705991 ± 0.0010066513702618632\n   G2(4) = 0.9831547346505642 ± 0.0006596294447164453\n   G2(5) = 0.9175179073041889 ± 0.0007074344933628687\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.981322465981271 ± 0.1432906488094696\n   Replica 2: -3.943672343921931 ± 0.1331858744490944\n   Replica 3: -4.015514599556032 ± 0.11341470105970695\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1⟩\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"target_walkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1⟩\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    target_walkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [target_walkers];\n    label=\"target_walkers\", xlabel=\"step\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.step, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip590\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip590)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip591\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip590)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip592\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1266.04 1391.71 L1266.04 1397.25 Q1263.56 1395.98 1260.88 1395.34 Q1258.21 1394.71 1255.34 1394.71 Q1250.98 1394.71 1248.79 1396.04 Q1246.62 1397.38 1246.62 1400.05 Q1246.62 1402.09 1248.18 1403.27 Q1249.74 1404.41 1254.45 1405.46 L1256.46 1405.91 Q1262.7 1407.25 1265.31 1409.7 Q1267.95 1412.12 1267.95 1416.48 Q1267.95 1421.44 1264 1424.34 Q1260.09 1427.23 1253.21 1427.23 Q1250.35 1427.23 1247.23 1426.66 Q1244.14 1426.12 1240.7 1425.01 L1240.7 1418.96 Q1243.95 1420.65 1247.1 1421.51 Q1250.25 1422.33 1253.34 1422.33 Q1257.48 1422.33 1259.7 1420.93 Q1261.93 1419.5 1261.93 1416.92 Q1261.93 1414.54 1260.31 1413.26 Q1258.72 1411.99 1253.27 1410.81 L1251.24 1410.33 Q1245.79 1409.19 1243.38 1406.83 Q1240.96 1404.45 1240.96 1400.31 Q1240.96 1395.28 1244.52 1392.54 Q1248.09 1389.8 1254.64 1389.8 Q1257.89 1389.8 1260.75 1390.28 Q1263.62 1390.76 1266.04 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1283.07 1380.54 L1283.07 1390.66 L1295.13 1390.66 L1295.13 1395.22 L1283.07 1395.22 L1283.07 1414.57 Q1283.07 1418.93 1284.24 1420.17 Q1285.45 1421.41 1289.11 1421.41 L1295.13 1421.41 L1295.13 1426.31 L1289.11 1426.31 Q1282.33 1426.31 1279.76 1423.8 Q1277.18 1421.25 1277.18 1414.57 L1277.18 1395.22 L1272.88 1395.22 L1272.88 1390.66 L1277.18 1390.66 L1277.18 1380.54 L1283.07 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1333.32 1407.02 L1333.32 1409.89 L1306.4 1409.89 Q1306.78 1415.94 1310.02 1419.12 Q1313.3 1422.27 1319.13 1422.27 Q1322.5 1422.27 1325.65 1421.44 Q1328.84 1420.61 1331.95 1418.96 L1331.95 1424.5 Q1328.8 1425.83 1325.49 1426.53 Q1322.18 1427.23 1318.78 1427.23 Q1310.25 1427.23 1305.25 1422.27 Q1300.29 1417.3 1300.29 1408.84 Q1300.29 1400.08 1305 1394.96 Q1309.74 1389.8 1317.76 1389.8 Q1324.95 1389.8 1329.12 1394.45 Q1333.32 1399.07 1333.32 1407.02 M1327.47 1405.3 Q1327.4 1400.5 1324.76 1397.63 Q1322.15 1394.77 1317.82 1394.77 Q1312.92 1394.77 1309.96 1397.54 Q1307.03 1400.31 1306.59 1405.34 L1327.47 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1348.6 1420.96 L1348.6 1439.87 L1342.71 1439.87 L1342.71 1390.66 L1348.6 1390.66 L1348.6 1396.07 Q1350.45 1392.89 1353.25 1391.36 Q1356.08 1389.8 1360 1389.8 Q1366.49 1389.8 1370.53 1394.96 Q1374.6 1400.12 1374.6 1408.52 Q1374.6 1416.92 1370.53 1422.08 Q1366.49 1427.23 1360 1427.23 Q1356.08 1427.23 1353.25 1425.71 Q1350.45 1424.15 1348.6 1420.96 M1368.53 1408.52 Q1368.53 1402.06 1365.85 1398.4 Q1363.21 1394.71 1358.56 1394.71 Q1353.92 1394.71 1351.24 1398.4 Q1348.6 1402.06 1348.6 1408.52 Q1348.6 1414.98 1351.24 1418.67 Q1353.92 1422.33 1358.56 1422.33 Q1363.21 1422.33 1365.85 1418.67 Q1368.53 1414.98 1368.53 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1261.84 2211.02,1261.84 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1004.56 2211.02,1004.56 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,747.279 2211.02,747.279 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,489.997 2211.02,489.997 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,232.714 2211.02,232.714 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1261.84 423.181,1261.84 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1004.56 423.181,1004.56 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,747.279 423.181,747.279 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,489.997 423.181,489.997 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,232.714 423.181,232.714 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M356.339 1247.64 Q352.728 1247.64 350.899 1251.21 Q349.094 1254.75 349.094 1261.88 Q349.094 1268.99 350.899 1272.55 Q352.728 1276.09 356.339 1276.09 Q359.973 1276.09 361.779 1272.55 Q363.608 1268.99 363.608 1261.88 Q363.608 1254.75 361.779 1251.21 Q359.973 1247.64 356.339 1247.64 M356.339 1243.94 Q362.149 1243.94 365.205 1248.55 Q368.284 1253.13 368.284 1261.88 Q368.284 1270.61 365.205 1275.21 Q362.149 1279.8 356.339 1279.8 Q350.529 1279.8 347.45 1275.21 Q344.395 1270.61 344.395 1261.88 Q344.395 1253.13 347.45 1248.55 Q350.529 1243.94 356.339 1243.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M290.043 1017.91 L306.363 1017.91 L306.363 1021.84 L284.418 1021.84 L284.418 1017.91 Q287.08 1015.15 291.664 1010.52 Q296.27 1005.87 297.451 1004.53 Q299.696 1002 300.576 1000.27 Q301.478 998.509 301.478 996.819 Q301.478 994.064 299.534 992.328 Q297.613 990.592 294.511 990.592 Q292.312 990.592 289.858 991.356 Q287.427 992.12 284.65 993.671 L284.65 988.949 Q287.474 987.814 289.927 987.236 Q292.381 986.657 294.418 986.657 Q299.789 986.657 302.983 989.342 Q306.177 992.027 306.177 996.518 Q306.177 998.648 305.367 1000.57 Q304.58 1002.47 302.474 1005.06 Q301.895 1005.73 298.793 1008.95 Q295.691 1012.14 290.043 1017.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M316.224 987.282 L334.58 987.282 L334.58 991.217 L320.506 991.217 L320.506 999.689 Q321.524 999.342 322.543 999.18 Q323.562 998.995 324.58 998.995 Q330.367 998.995 333.747 1002.17 Q337.126 1005.34 337.126 1010.75 Q337.126 1016.33 333.654 1019.43 Q330.182 1022.51 323.862 1022.51 Q321.687 1022.51 319.418 1022.14 Q317.173 1021.77 314.765 1021.03 L314.765 1016.33 Q316.849 1017.47 319.071 1018.02 Q321.293 1018.58 323.77 1018.58 Q327.774 1018.58 330.112 1016.47 Q332.45 1014.37 332.45 1010.75 Q332.45 1007.14 330.112 1005.04 Q327.774 1002.93 323.77 1002.93 Q321.895 1002.93 320.02 1003.35 Q318.168 1003.76 316.224 1004.64 L316.224 987.282 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M356.339 990.361 Q352.728 990.361 350.899 993.926 Q349.094 997.467 349.094 1004.6 Q349.094 1011.7 350.899 1015.27 Q352.728 1018.81 356.339 1018.81 Q359.973 1018.81 361.779 1015.27 Q363.608 1011.7 363.608 1004.6 Q363.608 997.467 361.779 993.926 Q359.973 990.361 356.339 990.361 M356.339 986.657 Q362.149 986.657 365.205 991.264 Q368.284 995.847 368.284 1004.6 Q368.284 1013.32 365.205 1017.93 Q362.149 1022.51 356.339 1022.51 Q350.529 1022.51 347.45 1017.93 Q344.395 1013.32 344.395 1004.6 Q344.395 995.847 347.45 991.264 Q350.529 986.657 356.339 986.657 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M286.062 729.999 L304.418 729.999 L304.418 733.934 L290.344 733.934 L290.344 742.407 Q291.363 742.059 292.381 741.897 Q293.4 741.712 294.418 741.712 Q300.205 741.712 303.585 744.884 Q306.964 748.055 306.964 753.471 Q306.964 759.05 303.492 762.152 Q300.02 765.231 293.701 765.231 Q291.525 765.231 289.256 764.86 Q287.011 764.49 284.603 763.749 L284.603 759.05 Q286.687 760.184 288.909 760.74 Q291.131 761.295 293.608 761.295 Q297.613 761.295 299.951 759.189 Q302.288 757.083 302.288 753.471 Q302.288 749.86 299.951 747.754 Q297.613 745.647 293.608 745.647 Q291.733 745.647 289.858 746.064 Q288.006 746.481 286.062 747.36 L286.062 729.999 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M326.177 733.078 Q322.566 733.078 320.737 736.643 Q318.932 740.184 318.932 747.314 Q318.932 754.42 320.737 757.985 Q322.566 761.527 326.177 761.527 Q329.811 761.527 331.617 757.985 Q333.446 754.42 333.446 747.314 Q333.446 740.184 331.617 736.643 Q329.811 733.078 326.177 733.078 M326.177 729.374 Q331.987 729.374 335.043 733.981 Q338.122 738.564 338.122 747.314 Q338.122 756.041 335.043 760.647 Q331.987 765.231 326.177 765.231 Q320.367 765.231 317.288 760.647 Q314.233 756.041 314.233 747.314 Q314.233 738.564 317.288 733.981 Q320.367 729.374 326.177 729.374 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M356.339 733.078 Q352.728 733.078 350.899 736.643 Q349.094 740.184 349.094 747.314 Q349.094 754.42 350.899 757.985 Q352.728 761.527 356.339 761.527 Q359.973 761.527 361.779 757.985 Q363.608 754.42 363.608 747.314 Q363.608 740.184 361.779 736.643 Q359.973 733.078 356.339 733.078 M356.339 729.374 Q362.149 729.374 365.205 733.981 Q368.284 738.564 368.284 747.314 Q368.284 756.041 365.205 760.647 Q362.149 765.231 356.339 765.231 Q350.529 765.231 347.45 760.647 Q344.395 756.041 344.395 747.314 Q344.395 738.564 347.45 733.981 Q350.529 729.374 356.339 729.374 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M284.835 472.717 L307.057 472.717 L307.057 474.707 L294.511 507.277 L289.627 507.277 L301.432 476.652 L284.835 476.652 L284.835 472.717 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M316.224 472.717 L334.58 472.717 L334.58 476.652 L320.506 476.652 L320.506 485.124 Q321.524 484.777 322.543 484.615 Q323.562 484.429 324.58 484.429 Q330.367 484.429 333.747 487.601 Q337.126 490.772 337.126 496.189 Q337.126 501.767 333.654 504.869 Q330.182 507.948 323.862 507.948 Q321.687 507.948 319.418 507.578 Q317.173 507.207 314.765 506.466 L314.765 501.767 Q316.849 502.902 319.071 503.457 Q321.293 504.013 323.77 504.013 Q327.774 504.013 330.112 501.906 Q332.45 499.8 332.45 496.189 Q332.45 492.578 330.112 490.471 Q327.774 488.365 323.77 488.365 Q321.895 488.365 320.02 488.781 Q318.168 489.198 316.224 490.078 L316.224 472.717 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M356.339 475.795 Q352.728 475.795 350.899 479.36 Q349.094 482.902 349.094 490.031 Q349.094 497.138 350.899 500.703 Q352.728 504.244 356.339 504.244 Q359.973 504.244 361.779 500.703 Q363.608 497.138 363.608 490.031 Q363.608 482.902 361.779 479.36 Q359.973 475.795 356.339 475.795 M356.339 472.092 Q362.149 472.092 365.205 476.698 Q368.284 481.281 368.284 490.031 Q368.284 498.758 365.205 503.365 Q362.149 507.948 356.339 507.948 Q350.529 507.948 347.45 503.365 Q344.395 498.758 344.395 490.031 Q344.395 481.281 347.45 476.698 Q350.529 472.092 356.339 472.092 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M256.664 246.059 L264.303 246.059 L264.303 219.693 L255.992 221.36 L255.992 217.101 L264.256 215.434 L268.932 215.434 L268.932 246.059 L276.571 246.059 L276.571 249.994 L256.664 249.994 L256.664 246.059 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M296.015 218.513 Q292.404 218.513 290.576 222.077 Q288.77 225.619 288.77 232.749 Q288.77 239.855 290.576 243.42 Q292.404 246.961 296.015 246.961 Q299.65 246.961 301.455 243.42 Q303.284 239.855 303.284 232.749 Q303.284 225.619 301.455 222.077 Q299.65 218.513 296.015 218.513 M296.015 214.809 Q301.826 214.809 304.881 219.415 Q307.96 223.999 307.96 232.749 Q307.96 241.475 304.881 246.082 Q301.826 250.665 296.015 250.665 Q290.205 250.665 287.127 246.082 Q284.071 241.475 284.071 232.749 Q284.071 223.999 287.127 219.415 Q290.205 214.809 296.015 214.809 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M326.177 218.513 Q322.566 218.513 320.737 222.077 Q318.932 225.619 318.932 232.749 Q318.932 239.855 320.737 243.42 Q322.566 246.961 326.177 246.961 Q329.811 246.961 331.617 243.42 Q333.446 239.855 333.446 232.749 Q333.446 225.619 331.617 222.077 Q329.811 218.513 326.177 218.513 M326.177 214.809 Q331.987 214.809 335.043 219.415 Q338.122 223.999 338.122 232.749 Q338.122 241.475 335.043 246.082 Q331.987 250.665 326.177 250.665 Q320.367 250.665 317.288 246.082 Q314.233 241.475 314.233 232.749 Q314.233 223.999 317.288 219.415 Q320.367 214.809 326.177 214.809 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M356.339 218.513 Q352.728 218.513 350.899 222.077 Q349.094 225.619 349.094 232.749 Q349.094 239.855 350.899 243.42 Q352.728 246.961 356.339 246.961 Q359.973 246.961 361.779 243.42 Q363.608 239.855 363.608 232.749 Q363.608 225.619 361.779 222.077 Q359.973 218.513 356.339 218.513 M356.339 214.809 Q362.149 214.809 365.205 219.415 Q368.284 223.999 368.284 232.749 Q368.284 241.475 365.205 246.082 Q362.149 250.665 356.339 250.665 Q350.529 250.665 347.45 246.082 Q344.395 241.475 344.395 232.749 Q344.395 223.999 347.45 219.415 Q350.529 214.809 356.339 214.809 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip592)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,232.714 4017.76,232.714 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.52 455.986,1250.53 456.554,1250.46 457.123,1250.31 457.691,1249.04 458.259,1248.8 458.828,1247.44 459.396,1247.07 459.964,1246.62 460.533,1246.1 461.101,1244.47 461.669,1243.81 462.238,1243.09 462.806,1242.25 463.375,1241.34 463.943,1240.33 464.511,1239.2 465.08,1237.99 465.648,1235.64 466.216,1234.22 466.785,1232.67 467.353,1231 467.921,1228.18 468.49,1226.25 469.058,1224.16 469.626,1220.84 470.195,1217.47 470.763,1214.94 471.331,1211.24 471.9,1206.29 472.468,1202.27 473.036,1198.05 473.605,1194.77 474.173,1190.29 474.741,1185.56 475.31,1180.71 475.878,1176.81 476.446,1170.49 477.015,1166.1 477.583,1160.56 478.152,1155.7 478.72,1149.74 479.288,1143.5 479.857,1137.1 480.425,1130.46 480.993,1124.65 481.562,1116.49 482.13,1109.25 482.698,1099.89 483.267,1093.43 483.835,1085.79 484.403,1077.87 484.972,1069.73 485.54,1062.33 486.108,1053.96 486.677,1044.36 487.245,1036.6 487.813,1027.68 488.382,1019.67 488.95,1010.48 489.518,1001.12 490.087,990.396 490.655,981.79 491.224,972.143 491.792,962.36 492.36,950.437 492.929,936.52 493.497,926.899 494.065,918.029 494.634,905.032 495.202,896.305 495.77,887.444 496.339,878.399 496.907,869.244 497.475,856.99 498.044,846.789 498.612,836.616 499.18,825.391 499.749,815.183 500.317,806.041 500.885,796.817 501.454,786.648 502.022,777.505 502.59,767.422 503.159,757.263 503.727,744.143 504.295,735.145 504.864,724.244 505.432,714.434 506.001,704.673 506.569,693.995 507.137,685.489 507.706,676.071 508.274,667.684 508.842,657.279 509.411,646.207 509.979,634.222 510.547,625.626 511.116,616.088 511.684,607.722 512.252,599.406 512.821,590.086 513.389,580.847 513.957,571.836 514.526,564.032 515.094,556.491 515.662,549.944 516.231,543.4 516.799,534.061 517.367,526.638 517.936,518.538 518.504,509.66 519.072,502.996 519.641,497.627 520.209,490.09 520.778,482.762 521.346,478.795 521.914,469.633 522.483,463.969 523.051,456.249 523.619,452.827 524.188,447.212 524.756,442.688 525.324,438.212 525.893,434.985 526.461,430.598 527.029,425.388 527.598,414.913 528.166,411.213 528.734,407.65 529.303,402.99 529.871,398.453 530.439,394.845 531.008,390.605 531.576,386.214 532.144,383.098 532.713,381.158 533.281,377.981 533.85,373.915 534.418,370.904 534.986,366.971 535.555,363.022 536.123,359.276 536.691,355.67 537.26,347.852 537.828,344.81 538.396,342.838 538.965,335.806 539.533,331.913 540.101,329.474 540.67,326.984 541.238,327.722 541.806,326.356 542.375,324.767 542.943,323.289 543.511,320.579 544.08,315.911 544.648,313.625 545.216,312.603 545.785,308.273 546.353,306.425 546.921,306.594 547.49,305.353 548.058,303.442 548.627,304.609 549.195,301.268 549.763,299.291 550.332,297.403 550.9,295.266 551.468,292.308 552.037,291.766 552.605,288.015 553.173,286.657 553.742,286.207 554.31,285.837 554.878,284.285 555.447,284.937 556.015,283.617 556.583,284.009 557.152,284.313 557.72,284.778 558.288,284.198 558.857,281.552 559.425,280.981 559.993,279.106 560.562,277.482 561.13,275 561.698,275.654 562.267,274.123 562.835,272.83 563.404,271.592 563.972,270.288 564.54,271.104 565.109,271.739 565.677,271.258 566.245,271.998 566.814,271.452 567.382,268.721 567.95,267.436 568.519,266.945 569.087,266.636 569.655,266.184 570.224,266.001 570.792,265.688 571.36,261.184 571.929,260.087 572.497,259.77 573.065,259.49 573.634,259.26 574.202,262.207 574.77,261.916 575.339,262.628 575.907,260.979 576.476,261.716 577.044,259.191 577.612,258.984 578.181,258.687 578.749,258.08 579.317,258.825 579.886,254.31 580.454,255.187 581.022,256.206 581.591,253.947 582.159,255.865 582.727,255.697 583.296,255.344 583.864,253.201 584.432,253.072 585.001,251.959 585.569,249.785 586.137,249.635 586.706,251.833 587.274,250.666 587.842,249.486 588.411,249.75 588.979,248.552 589.547,247.633 590.116,247.788 590.684,247.817 591.253,246.689 591.821,246.61 592.389,246.912 592.958,244.953 593.526,247.099 594.094,247.013 594.663,246.082 595.231,244.018 595.799,244.376 596.368,244.877 596.936,244.095 597.504,242.358 598.073,243.69 598.641,241.865 599.209,243.158 599.778,242.219 600.346,243.636 600.914,242.785 601.483,242.041 602.051,240.333 602.619,240.834 603.188,241.112 603.756,242.496 604.325,242.871 604.893,242.986 605.461,243.303 606.03,243.648 606.598,242.634 607.166,241.678 607.735,240.793 608.303,242.142 608.871,242.335 609.44,242.67 610.008,242.033 610.576,243.062 611.145,243.058 611.713,243.276 612.281,242.342 612.85,242.611 613.418,239.71 613.986,239.931 614.555,240.067 615.123,240.403 615.691,240.87 616.26,241.197 616.828,240.437 617.396,239.745 617.965,240.036 618.533,240.398 619.102,241.718 619.67,240.687 620.238,240.787 620.807,242.18 621.375,243.164 621.943,242.051 622.512,241.181 623.08,241.282 623.648,239.327 624.217,239.469 624.785,238.644 625.353,238.938 625.922,239.307 626.49,239.501 627.058,238.893 627.627,240.068 628.195,238.426 628.763,239.824 629.332,239.131 629.9,239.263 630.468,239.654 631.037,239.888 631.605,237.881 632.173,241.282 632.742,240.279 633.31,239.353 633.879,239.61 634.447,240.744 635.015,240.783 635.584,240.681 636.152,238.566 636.72,237.599 637.289,237.652 637.857,237.88 638.425,239.141 638.994,239.276 639.562,240.428 640.13,238.507 640.699,241.72 641.267,242.672 641.835,242.505 642.404,241.301 642.972,240.303 643.54,240.306 644.109,238.055 644.677,236.154 645.245,236.288 645.814,237.317 646.382,236.386 646.951,237.547 647.519,236.758 648.087,239.189 648.656,239.31 649.224,238.443 649.792,237.648 650.361,235.781 650.929,235.218 651.497,233.289 652.066,233.545 652.634,232.692 653.202,233.148 653.771,235.453 654.339,235.465 654.907,234.591 655.476,237.007 656.044,239.263 656.612,240.124 657.181,237.966 657.749,239.939 658.317,239.942 658.886,239.154 659.454,239.303 660.022,239.155 660.591,240.336 661.159,239.152 661.728,236.128 662.296,235.201 662.864,235.405 663.433,235.429 664.001,237.816 664.569,235.863 665.138,240.211 665.706,239.07 666.274,239.978 666.843,239.858 667.411,239.692 667.979,240.481 668.548,240.279 669.116,239.207 669.684,239.202 670.253,239.409 670.821,239.473 671.389,238.387 671.958,235.338 672.526,235.518 673.094,233.745 673.663,234.008 674.231,233.148 674.799,230.307 675.368,231.037 675.936,229.542 676.505,231.298 677.073,230.901 677.641,232.3 678.21,230.59 678.778,231.134 679.346,230.5 679.915,232.088 680.483,230.4 681.051,229.907 681.62,232.6 682.188,234.087 682.756,234.328 683.325,232.425 683.893,232.828 684.461,232.052 685.03,234.474 685.598,235.713 686.166,236.17 686.735,237.335 687.303,237.382 687.871,237.327 688.44,235.24 689.008,234.138 689.577,233.427 690.145,233.866 690.713,233.297 691.282,233.463 691.85,233.035 692.418,232.481 692.987,233.239 693.555,234.665 694.123,234.841 694.692,236.194 695.26,237.275 695.828,234.211 696.397,234.451 696.965,235.784 697.533,234.84 698.102,235.001 698.67,235.466 699.238,233.763 699.807,233.322 700.375,232.477 700.943,234.989 701.512,237.238 702.08,239.525 702.648,237.189 703.217,237.322 703.785,236.473 704.354,235.505 704.922,236.787 705.49,237.103 706.059,237.152 706.627,236.189 707.195,235.226 707.764,237.633 708.332,237.691 708.9,237.632 709.469,236.805 710.037,235.863 710.605,237.122 711.174,237.118 711.742,235.117 712.31,233.201 712.879,233.449 713.447,235.733 714.015,235.795 714.584,235.969 715.152,236.072 715.72,237.278 716.289,239.505 716.857,243.534 717.425,242.319 717.994,242.795 718.562,242.086 719.131,243.767 719.699,243.386 720.267,242.877 720.836,240.222 721.404,238.783 721.972,239.389 722.541,241.231 723.109,240.76 723.677,241.341 724.246,241.197 724.814,243.702 725.382,243.074 725.951,240.518 726.519,241.245 727.087,240.774 727.656,239.331 728.224,239.025 728.792,239.96 729.361,238.519 729.929,237.138 730.497,237.003 731.066,236.914 731.634,235.885 732.203,234.594 732.771,234.612 733.339,232.585 733.908,230.608 734.476,232.911 735.044,231.953 735.613,233.026 736.181,236.27 736.749,236.96 737.318,239.929 737.886,239.53 738.454,239.15 739.023,236.812 739.591,236.512 740.159,235.294 740.728,235.109 741.296,233.707 741.864,232.89 742.433,232 743.001,231.074 743.569,231.127 744.138,231.472 744.706,231.64 745.274,231.631 745.843,229.675 746.411,229.923 746.98,231.22 747.548,233.611 748.116,235.731 748.685,235.639 749.253,234.474 749.821,236.683 750.39,236.478 750.958,235.236 751.526,235.246 752.095,232.033 752.663,231.244 753.231,231.284 753.8,232.334 754.368,232.375 754.936,231.701 755.505,231.787 756.073,230.092 756.641,229.468 757.21,227.915 757.778,228.532 758.346,227.983 758.915,229.613 759.483,226.894 760.052,230.555 760.62,231.001 761.188,231.19 761.757,231.197 762.325,231.448 762.893,229.727 763.462,230.083 764.03,232.425 764.598,232.898 765.167,231.207 765.735,229.645 766.303,233.092 766.872,235.326 767.44,235.534 768.008,233.293 768.577,233.297 769.145,232.223 769.713,233.3 770.282,234.529 770.85,232.562 771.418,236.752 771.987,237.562 772.555,238.235 773.123,238.064 773.692,239.99 774.26,241.683 774.829,240.038 775.397,237.755 775.965,237.506 776.534,238.355 777.102,238.136 777.67,235.821 778.239,234.652 778.807,233.923 779.375,235.008 779.944,233.952 780.512,233.669 781.08,234.867 781.649,234.005 782.217,233.896 782.785,234.063 783.354,233.017 783.922,231.834 784.49,230.983 785.059,231.156 785.627,232.265 786.195,230.569 786.764,227.707 787.332,228.274 787.9,226.622 788.469,226.326 789.037,227.885 789.606,227.463 790.174,229.895 790.742,230.257 791.311,229.364 791.879,228.692 792.447,230.196 793.016,230.497 793.584,232.974 794.152,234.276 794.721,232.319 795.289,231.808 795.857,232.944 796.426,235.222 796.994,235.063 797.562,235.961 798.131,234.788 798.699,235.8 799.267,234.796 799.836,232.666 800.404,233.877 800.972,233.721 801.541,235.807 802.109,236.692 802.678,236.679 803.246,236.604 803.814,235.404 804.383,235.611 804.951,235.732 805.519,234.938 806.088,235.996 806.656,237.049 807.224,233.759 807.793,235.661 808.361,236.583 808.929,235.608 809.498,233.441 810.066,231.715 810.634,232.009 811.203,231.455 811.771,230.745 812.339,233.16 812.908,234.035 813.476,235.22 814.044,236.23 814.613,236.188 815.181,236.037 815.749,233.955 816.318,235.065 816.886,234.988 817.455,235.07 818.023,233.935 818.591,231.845 819.16,231.957 819.728,231.237 820.296,231.469 820.865,229.514 821.433,230.042 822.001,231.381 822.57,230.608 823.138,232.009 823.706,232.2 824.275,232.299 824.843,233.441 825.411,233.529 825.98,232.488 826.548,232.673 827.116,230.658 827.685,230.942 828.253,230.258 828.821,229.385 829.39,229.915 829.958,229.388 830.526,230.843 831.095,233.148 831.663,233.193 832.232,234.576 832.8,235.432 833.368,234.389 833.937,234.511 834.505,236.674 835.073,237.52 835.642,237.341 836.21,236.114 836.778,235.913 837.347,237.907 837.915,237.619 838.483,236.431 839.052,236.405 839.62,237.445 840.188,239.261 840.757,238.813 841.325,237.323 841.893,240.212 842.462,237.493 843.03,237.23 843.598,237.92 844.167,238.572 844.735,240.359 845.304,240.933 845.872,237.193 846.44,236.887 847.009,237.599 847.577,236.43 848.145,235.435 848.714,236.341 849.282,237.204 849.85,238.014 850.419,237.579 850.987,237.063 851.555,236.927 852.124,236.743 852.692,237.555 853.26,238.071 853.829,237.547 854.397,238.236 854.965,237.942 855.534,239.483 856.102,234.787 856.67,236.635 857.239,234.231 857.807,233.145 858.375,230.145 858.944,229.321 859.512,230.458 860.081,229.65 860.649,227.815 861.217,231.149 861.786,231.379 862.354,230.45 862.922,230.658 863.491,230.681 864.059,231.599 864.627,232.902 865.196,231.74 865.764,231.811 866.332,230.737 866.901,225.681 867.469,227.14 868.037,228.811 868.606,229.973 869.174,231.338 869.742,231.578 870.311,231.684 870.879,229.858 871.447,230.229 872.016,229.275 872.584,231.509 873.152,232.683 873.721,234.805 874.289,235.727 874.858,234.698 875.426,234.68 875.994,234.658 876.563,235.465 877.131,235.426 877.699,235.159 878.268,237.208 878.836,238.148 879.404,236.842 879.973,235.553 880.541,233.298 881.109,233.211 881.678,233.238 882.246,232.91 882.814,233.925 883.383,232.68 883.951,232.796 884.519,232.946 885.088,235.023 885.656,235.176 886.224,234.872 886.793,235.745 887.361,237.643 887.93,236.211 888.498,235.946 889.066,236.659 889.635,235.45 890.203,234.154 890.771,233.019 891.34,232.848 891.908,232.026 892.476,230.07 893.045,229.285 893.613,229.406 894.181,228.83 894.75,227.974 895.318,227.143 895.886,228.536 896.455,229.889 897.023,232.109 897.591,231.295 898.16,231.491 898.728,231.571 899.296,233.855 899.865,233.853 900.433,233.814 901.001,230.719 901.57,229.682 902.138,230.875 902.707,233.112 903.275,231.133 903.843,231.294 904.412,232.238 904.98,231.386 905.548,231.265 906.117,229.472 906.685,230.719 907.253,229.771 907.822,230.045 908.39,229.118 908.958,228.466 909.527,230.939 910.095,232.165 910.663,232.222 911.232,230.214 911.8,231.505 912.368,231.659 912.937,230.607 913.505,231.879 914.073,233.173 914.642,235.277 915.21,232.234 915.779,231.319 916.347,230.581 916.915,230.739 917.484,232.068 918.052,232.016 918.62,234.329 919.189,233.386 919.757,231.242 920.325,232.385 920.894,233.42 921.462,234.432 922.03,233.453 922.599,234.414 923.167,234.301 923.735,235.357 924.304,236.13 924.872,236.053 925.44,235.923 926.009,235.839 926.577,234.583 927.145,236.427 927.714,235.038 928.282,235.906 928.85,231.656 929.419,233.674 929.987,234.856 930.556,237.824 931.124,239.482 931.692,234.038 932.261,233.068 932.829,233.143 933.397,236.467 933.966,238.277 934.534,238.736 935.102,236.035 935.671,232.636 936.239,233.615 936.807,233.594 937.376,233.577 937.944,232.479 938.512,233.467 939.081,232.498 939.649,234.609 940.217,234.339 940.786,237.346 941.354,235.087 941.922,234.942 942.491,237.844 943.059,235.323 943.627,234.036 944.196,234.854 944.764,235.54 945.333,236.151 945.901,234.668 946.469,233.521 947.038,233.318 947.606,231.259 948.174,231.262 948.743,233.359 949.311,233.378 949.879,234.367 950.448,233.198 951.016,235.151 951.584,233.89 952.153,233.824 952.721,233.813 953.289,233.761 953.858,233.541 954.426,233.416 954.994,231.193 955.563,230.277 956.131,230.378 956.699,229.483 957.268,228.571 957.836,227.66 958.405,228.993 958.973,228.232 959.541,229.679 960.11,228.686 960.678,227.178 961.246,226.622 961.815,228.089 962.383,229.493 962.951,230.664 963.52,228.787 964.088,229.124 964.656,227.427 965.225,229.081 965.793,227.467 966.361,227.84 966.93,229.233 967.498,226.421 968.066,229.067 968.635,230.585 969.203,229.814 969.771,229.089 970.34,229.535 970.908,230.043 971.476,233.386 972.045,233.473 972.613,234.508 973.182,233.584 973.75,233.779 974.318,233.789 974.887,234.964 975.455,233.687 976.023,233.618 976.592,234.588 977.16,231.601 977.728,231.782 978.297,232.013 978.865,235.358 979.433,236.27 980.002,237.155 980.57,236.985 981.138,236.856 981.707,236.597 982.275,235.365 982.843,232.087 983.412,231.273 983.98,231.488 984.548,230.608 985.117,230.744 985.685,229.931 986.253,230.364 986.822,230.426 987.39,230.698 987.959,230.899 988.527,234.333 989.095,236.588 989.664,237.4 990.232,237.295 990.8,240.263 991.369,238.938 991.937,238.588 992.505,239.195 993.074,237.857 993.642,237.331 994.21,237.108 994.779,235.942 995.347,233.692 995.915,236.832 996.484,234.42 997.052,236.238 997.62,236.095 998.189,235.884 998.757,233.525 999.325,235.286 999.894,234.092 1000.46,232.812 1001.03,230.752 1001.6,229.804 1002.17,229.087 1002.74,232.469 1003.3,232.462 1003.87,233.304 1004.44,234.238 1005.01,233.032 1005.58,233.895 1006.15,234.739 1006.71,233.41 1007.28,234.474 1007.85,236.544 1008.42,235.093 1008.99,236.012 1009.56,236.704 1010.12,235.318 1010.69,238.312 1011.26,237.854 1011.83,238.275 1012.4,238.897 1012.97,237.292 1013.53,236.776 1014.1,237.444 1014.67,239.088 1015.24,237.529 1015.81,236.092 1016.38,236.827 1016.94,234.441 1017.51,235.236 1018.08,232.992 1018.65,232.683 1019.22,234.889 1019.79,234.516 1020.35,237.225 1020.92,236.954 1021.49,237.558 1022.06,233.89 1022.63,234.615 1023.2,235.402 1023.76,237.307 1024.33,236.875 1024.9,236.559 1025.47,239.206 1026.04,238.574 1026.61,238.108 1027.17,236.629 1027.74,234.91 1028.31,235.537 1028.88,234.343 1029.45,233.919 1030.02,232.58 1030.58,233.09 1031.15,233.856 1031.72,233.425 1032.29,234.119 1032.86,234.062 1033.43,234.873 1033.99,235.402 1034.56,232.925 1035.13,232.056 1035.7,232.017 1036.27,230.657 1036.84,229.765 1037.4,228.681 1037.97,228.937 1038.54,229.109 1039.11,230.369 1039.68,229.17 1040.25,227.028 1040.81,226.384 1041.38,226.674 1041.95,224.842 1042.52,226.368 1043.09,226.642 1043.66,226.898 1044.22,225.393 1044.79,226.701 1045.36,226.073 1045.93,225.549 1046.5,227.121 1047.07,226.432 1047.63,226.885 1048.2,229.413 1048.77,228.589 1049.34,229.949 1049.91,229.227 1050.48,230.471 1051.05,231.745 1051.61,229.913 1052.18,228.847 1052.75,227.989 1053.32,229.182 1053.89,230.626 1054.46,230.93 1055.02,232.176 1055.59,232.381 1056.16,233.376 1056.73,235.266 1057.3,232.12 1057.87,232.147 1058.43,230.12 1059,230.425 1059.57,230.598 1060.14,228.732 1060.71,230.193 1061.28,230.207 1061.84,230.497 1062.41,230.561 1062.98,230.844 1063.55,231.233 1064.12,231.408 1064.69,230.562 1065.25,230.783 1065.82,230.958 1066.39,231.278 1066.96,232.586 1067.53,233.691 1068.1,233.693 1068.66,233.781 1069.23,232.798 1069.8,234.887 1070.37,234.954 1070.94,234.888 1071.51,233.665 1072.07,234.581 1072.64,234.62 1073.21,235.661 1073.78,235.299 1074.35,235.17 1074.92,237.021 1075.48,235.746 1076.05,235.684 1076.62,232.448 1077.19,233.764 1077.76,232.859 1078.33,233.058 1078.89,232.033 1079.46,233.245 1080.03,234.357 1080.6,232.471 1081.17,232.589 1081.74,232.817 1082.3,231.803 1082.87,230.78 1083.44,231.167 1084.01,230.466 1084.58,230.77 1085.15,233.086 1085.71,232.204 1086.28,233.438 1086.85,233.262 1087.42,234.41 1087.99,233.459 1088.56,233.59 1089.12,232.739 1089.69,233.028 1090.26,231.964 1090.83,232.789 1091.4,233.811 1091.97,235.779 1092.53,234.645 1093.1,235.596 1093.67,235.558 1094.24,235.55 1094.81,238.355 1095.38,237.925 1095.94,235.324 1096.51,236.184 1097.08,235.972 1097.65,234.606 1098.22,236.517 1098.79,234.202 1099.35,233.963 1099.92,233.029 1100.49,230.2 1101.06,232.223 1101.63,234.076 1102.2,230.887 1102.76,229.937 1103.33,229.917 1103.9,229.074 1104.47,228.231 1105.04,227.525 1105.61,231.899 1106.17,233.918 1106.74,234.621 1107.31,231.367 1107.88,231.404 1108.45,232.487 1109.02,232.433 1109.58,230.22 1110.15,229.561 1110.72,229.879 1111.29,230.063 1111.86,230.205 1112.43,229.328 1112.99,230.446 1113.56,230.699 1114.13,234.876 1114.7,233.503 1115.27,233.673 1115.84,229.434 1116.4,229.675 1116.97,231.037 1117.54,232.321 1118.11,233.394 1118.68,233.336 1119.25,236.605 1119.81,234.167 1120.38,233.05 1120.95,233.971 1121.52,232.703 1122.09,231.593 1122.66,236.056 1123.23,234.672 1123.79,235.595 1124.36,236.165 1124.93,232.806 1125.5,233.895 1126.07,231.861 1126.64,230.969 1127.2,232.338 1127.77,232.416 1128.34,233.453 1128.91,234.617 1129.48,235.452 1130.05,234.034 1130.61,231.899 1131.18,231.054 1131.75,231.209 1132.32,232.366 1132.89,232.559 1133.46,232.493 1134.02,233.604 1134.59,232.782 1135.16,230.881 1135.73,233.083 1136.3,232.022 1136.87,229.968 1137.43,228.183 1138,227.665 1138.57,230.215 1139.14,230.171 1139.71,229.323 1140.28,229.607 1140.84,230.078 1141.41,230.338 1141.98,228.419 1142.55,228.779 1143.12,228.267 1143.69,228.5 1144.25,228.034 1144.82,228.4 1145.39,229.872 1145.96,227.977 1146.53,228.331 1147.1,228.69 1147.66,228.114 1148.23,228.424 1148.8,229.875 1149.37,229.423 1149.94,227.957 1150.51,228.394 1151.07,232.1 1151.64,232.185 1152.21,230.31 1152.78,231.634 1153.35,231.939 1153.92,231.091 1154.48,232.391 1155.05,232.742 1155.62,233.889 1156.19,232.945 1156.76,232.719 1157.33,233.741 1157.89,234.716 1158.46,235.909 1159.03,235.87 1159.6,234.725 1160.17,234.667 1160.74,237.79 1161.3,236.601 1161.87,234.263 1162.44,230.362 1163.01,230.794 1163.58,231.057 1164.15,232.097 1164.71,231.114 1165.28,230.131 1165.85,231.249 1166.42,231.358 1166.99,231.534 1167.56,232.565 1168.12,234.708 1168.69,234.621 1169.26,234.607 1169.83,235.719 1170.4,234.475 1170.97,234.362 1171.53,233.069 1172.1,234.171 1172.67,236.062 1173.24,235.85 1173.81,237.82 1174.38,238.617 1174.94,238.511 1175.51,239.43 1176.08,240.061 1176.65,238.417 1177.22,238.084 1177.79,241.11 1178.35,240.346 1178.92,238.791 1179.49,238.486 1180.06,239.137 1180.63,237.909 1181.2,237.582 1181.76,237.357 1182.33,237.116 1182.9,237.748 1183.47,238.563 1184.04,240.158 1184.61,238.422 1185.17,236.931 1185.74,236.649 1186.31,237.291 1186.88,235.871 1187.45,234.748 1188.02,234.394 1188.58,233.819 1189.15,235.642 1189.72,235.289 1190.29,234.064 1190.86,234.951 1191.43,233.72 1192,234.565 1192.56,234.05 1193.13,234.835 1193.7,234.717 1194.27,234.55 1194.84,234.335 1195.41,234.019 1195.97,233.975 1196.54,230.724 1197.11,227.951 1197.68,226.119 1198.25,226.465 1198.82,226.71 1199.38,229.216 1199.95,229.361 1200.52,230.483 1201.09,230.633 1201.66,232.916 1202.23,233.83 1202.79,233.66 1203.36,235.354 1203.93,235.024 1204.5,233.608 1205.07,233.385 1205.64,232.302 1206.2,233.238 1206.77,234.297 1207.34,234.109 1207.91,237.98 1208.48,239.79 1209.05,240.336 1209.61,238.572 1210.18,239.941 1210.75,239.207 1211.32,237.599 1211.89,237.21 1212.46,234.844 1213.02,234.686 1213.59,233.53 1214.16,233.5 1214.73,232.123 1215.3,231.974 1215.87,232.923 1216.43,231.706 1217,230.817 1217.57,230.311 1218.14,229.289 1218.71,232.791 1219.28,230.814 1219.84,230.861 1220.41,231.824 1220.98,232.845 1221.55,231.796 1222.12,231.685 1222.69,232.684 1223.25,230.656 1223.82,230.575 1224.39,231.548 1224.96,231.614 1225.53,230.398 1226.1,229.581 1226.66,228.809 1227.23,229.365 1227.8,229.734 1228.37,228.808 1228.94,230.022 1229.51,233.161 1230.07,232.899 1230.64,232.814 1231.21,232.834 1231.78,232.788 1232.35,231.652 1232.92,230.687 1233.48,233.107 1234.05,231.849 1234.62,231.821 1235.19,230.735 1235.76,230.887 1236.33,230 1236.89,231.185 1237.46,230.38 1238.03,232.647 1238.6,231.66 1239.17,231.981 1239.74,232.158 1240.3,230.091 1240.87,228.206 1241.44,228.505 1242.01,230.883 1242.58,232.22 1243.15,233.339 1243.71,233.316 1244.28,232.226 1244.85,232.166 1245.42,233.148 1245.99,235.096 1246.56,232.915 1247.12,232.951 1247.69,234.057 1248.26,234.91 1248.83,232.45 1249.4,233.481 1249.97,232.295 1250.53,231.363 1251.1,230.407 1251.67,229.578 1252.24,229.591 1252.81,230.996 1253.38,231.115 1253.94,234.508 1254.51,233.462 1255.08,232.365 1255.65,231.264 1256.22,230.211 1256.79,231.296 1257.35,230.241 1257.92,230.359 1258.49,230.217 1259.06,229.568 1259.63,230.615 1260.2,231.652 1260.76,230.565 1261.33,232.746 1261.9,232.933 1262.47,234.034 1263.04,232.892 1263.61,233.936 1264.18,233.713 1264.74,234.608 1265.31,234.403 1265.88,234.141 1266.45,233.789 1267.02,232.845 1267.59,232.899 1268.15,235.04 1268.72,233.874 1269.29,233.781 1269.86,230.826 1270.43,230.962 1271,229.187 1271.56,227.294 1272.13,228.993 1272.7,229.325 1273.27,230.608 1273.84,230.807 1274.41,232.683 1274.97,231.664 1275.54,230.5 1276.11,229.665 1276.68,229.784 1277.25,228.949 1277.82,229.227 1278.38,231.597 1278.95,231.739 1279.52,229.846 1280.09,227.115 1280.66,226.395 1281.23,226.76 1281.79,230.447 1282.36,230.593 1282.93,230.724 1283.5,232.093 1284.07,233.292 1284.64,231.438 1285.2,230.694 1285.77,229.621 1286.34,229.016 1286.91,230.052 1287.48,229.47 1288.05,231.823 1288.61,231.088 1289.18,230.14 1289.75,230.441 1290.32,230.598 1290.89,234.103 1291.46,232.916 1292.02,234.034 1292.59,234.865 1293.16,233.567 1293.73,232.483 1294.3,232.698 1294.87,230.809 1295.43,231.181 1296,230.195 1296.57,232.424 1297.14,233.596 1297.71,235.602 1298.28,235.359 1298.84,236.235 1299.41,237.12 1299.98,237.028 1300.55,238.018 1301.12,236.717 1301.69,234.599 1302.25,234.54 1302.82,235.561 1303.39,235.133 1303.96,235.381 1304.53,235.297 1305.1,236.15 1305.66,237.04 1306.23,236.617 1306.8,235.34 1307.37,235.228 1307.94,235.165 1308.51,235.919 1309.07,234.872 1309.64,234.925 1310.21,235.865 1310.78,236.237 1311.35,236.928 1311.92,236.791 1312.48,236.256 1313.05,236.003 1313.62,234.561 1314.19,233.496 1314.76,235.572 1315.33,235.575 1315.89,235.37 1316.46,234.245 1317.03,232.961 1317.6,234.964 1318.17,233.674 1318.74,233.445 1319.3,235.432 1319.87,231.967 1320.44,228.757 1321.01,228.931 1321.58,227.266 1322.15,229.707 1322.71,228.735 1323.28,231.894 1323.85,231.895 1324.42,231.646 1324.99,233.733 1325.56,232.705 1326.12,232.614 1326.69,232.42 1327.26,233.446 1327.83,233.473 1328.4,232.374 1328.97,233.509 1329.53,231.188 1330.1,229.505 1330.67,227.916 1331.24,229.4 1331.81,229.449 1332.38,230.635 1332.94,230.55 1333.51,229.808 1334.08,230.966 1334.65,232.056 1335.22,232.355 1335.79,231.383 1336.36,229.465 1336.92,230.883 1337.49,231.19 1338.06,231.41 1338.63,231.514 1339.2,229.821 1339.77,227.01 1340.33,230.537 1340.9,229.78 1341.47,229.115 1342.04,230.317 1342.61,227.619 1343.18,228.866 1343.74,230.096 1344.31,230.284 1344.88,231.632 1345.45,229.952 1346.02,232.413 1346.59,231.59 1347.15,231.004 1347.72,228.073 1348.29,227.71 1348.86,229.243 1349.43,232.863 1350,230.804 1350.56,230.989 1351.13,234.385 1351.7,232.361 1352.27,232.156 1352.84,231.178 1353.41,231.368 1353.97,230.916 1354.54,232.018 1355.11,234.232 1355.68,234.296 1356.25,232.364 1356.82,232.69 1357.38,232.715 1357.95,232.687 1358.52,231.797 1359.09,234.043 1359.66,231.916 1360.23,231.853 1360.79,231.918 1361.36,230.915 1361.93,229.85 1362.5,230.162 1363.07,229.471 1363.64,229.85 1364.2,231.388 1364.77,233.729 1365.34,233.94 1365.91,236.125 1366.48,237.704 1367.05,237.465 1367.61,238.377 1368.18,239.007 1368.75,239.659 1369.32,240.456 1369.89,242.291 1370.46,242.638 1371.02,242.005 1371.59,236.55 1372.16,237.297 1372.73,239.18 1373.3,237.536 1373.87,238.306 1374.43,236.877 1375,236.558 1375.57,237.221 1376.14,237.851 1376.71,238.435 1377.28,237.073 1377.84,235.723 1378.41,236.561 1378.98,235.185 1379.55,235.92 1380.12,234.647 1380.69,236.484 1381.25,236.245 1381.82,233.804 1382.39,231.574 1382.96,233.836 1383.53,230.533 1384.1,230.673 1384.66,232.913 1385.23,231.953 1385.8,231.986 1386.37,231.953 1386.94,231.111 1387.51,234.383 1388.07,236.351 1388.64,235.743 1389.21,233.43 1389.78,233.365 1390.35,233.183 1390.92,233.077 1391.48,234.175 1392.05,231.359 1392.62,230.372 1393.19,229.464 1393.76,229.455 1394.33,231.788 1394.89,231.652 1395.46,230.708 1396.03,229.869 1396.6,230.189 1397.17,231.45 1397.74,235.425 1398.3,236.06 1398.87,234.766 1399.44,233.42 1400.01,234.103 1400.58,231.893 1401.15,232.684 1401.71,230.703 1402.28,230.837 1402.85,230.815 1403.42,230.89 1403.99,231.85 1404.56,232.966 1405.13,233.061 1405.69,232.084 1406.26,231.186 1406.83,230.18 1407.4,228.252 1407.97,228.584 1408.54,229.028 1409.1,228.346 1409.67,229.855 1410.24,232.004 1410.81,233.826 1411.38,231.72 1411.95,232.685 1412.51,232.54 1413.08,233.442 1413.65,234.391 1414.22,233.163 1414.79,234.215 1415.36,236.176 1415.92,232.833 1416.49,235.171 1417.06,236.949 1417.63,237.839 1418.2,237.626 1418.77,239.413 1419.33,237.823 1419.9,237.136 1420.47,234.715 1421.04,235.297 1421.61,235.131 1422.18,235.896 1422.74,235.535 1423.31,235.112 1423.88,236.981 1424.45,234.616 1425.02,232.304 1425.59,232.459 1426.15,232.333 1426.72,233.488 1427.29,233.411 1427.86,231.165 1428.43,231.198 1429,231.311 1429.56,231.21 1430.13,232.321 1430.7,233.415 1431.27,231.216 1431.84,230.238 1432.41,230.24 1432.97,231.356 1433.54,230.515 1434.11,228.355 1434.68,228.563 1435.25,227.741 1435.82,231.237 1436.38,232.404 1436.95,232.426 1437.52,231.298 1438.09,231.519 1438.66,232.374 1439.23,231.306 1439.79,230.313 1440.36,228.621 1440.93,228.75 1441.5,229.101 1442.07,228.304 1442.64,227.498 1443.2,227.787 1443.77,229.129 1444.34,226.132 1444.91,226.792 1445.48,227.187 1446.05,226.607 1446.61,226.925 1447.18,227.343 1447.75,228.856 1448.32,228.103 1448.89,228.314 1449.46,226.962 1450.02,228.535 1450.59,230.702 1451.16,232.142 1451.73,233.144 1452.3,234.221 1452.87,236.133 1453.43,234.894 1454,233.973 1454.57,234.025 1455.14,234.014 1455.71,233.049 1456.28,228.875 1456.84,228.05 1457.41,229.283 1457.98,229.576 1458.55,229.859 1459.12,232.015 1459.69,233.33 1460.25,233.058 1460.82,233.198 1461.39,233.142 1461.96,233.193 1462.53,231.328 1463.1,230.535 1463.66,228.679 1464.23,228.086 1464.8,229.309 1465.37,229.597 1465.94,229.808 1466.51,230.227 1467.07,231.672 1467.64,229.072 1468.21,231.367 1468.78,231.419 1469.35,230.645 1469.92,231.978 1470.48,234.337 1471.05,234.573 1471.62,235.502 1472.19,236.194 1472.76,234.995 1473.33,233.863 1473.89,236.146 1474.46,236.248 1475.03,236.037 1475.6,236.033 1476.17,235.918 1476.74,237.867 1477.31,236.412 1477.87,236.338 1478.44,238.435 1479.01,237.081 1479.58,237.03 1480.15,235.708 1480.72,235.314 1481.28,236.091 1481.85,233.784 1482.42,232.607 1482.99,233.782 1483.56,230.512 1484.13,231.672 1484.69,231.978 1485.26,231.982 1485.83,231.944 1486.4,232.038 1486.97,232.269 1487.54,232.132 1488.1,230.969 1488.67,230.184 1489.24,231.533 1489.81,231.553 1490.38,230.652 1490.95,230.98 1491.51,232.242 1492.08,231.155 1492.65,230.325 1493.22,232.577 1493.79,233.7 1494.36,233.818 1494.92,232.622 1495.49,233.7 1496.06,230.646 1496.63,232.814 1497.2,232.902 1497.77,229.803 1498.33,230.917 1498.9,231.187 1499.47,229.376 1500.04,231.467 1500.61,232.75 1501.18,232.916 1501.74,233.946 1502.31,234.018 1502.88,235.081 1503.45,233.06 1504.02,232.267 1504.59,233.399 1505.15,233.465 1505.72,232.358 1506.29,233.472 1506.86,234.536 1507.43,235.679 1508,235.387 1508.56,239.631 1509.13,240.131 1509.7,240.714 1510.27,241.154 1510.84,240.643 1511.41,242.116 1511.97,240.466 1512.54,239.856 1513.11,241.439 1513.68,241.698 1514.25,241.796 1514.82,242.862 1515.38,242.031 1515.95,241.255 1516.52,238.631 1517.09,239.058 1517.66,238.395 1518.23,236.826 1518.79,235.119 1519.36,235.667 1519.93,235.388 1520.5,234.821 1521.07,235.376 1521.64,235.114 1522.2,233.956 1522.77,231.748 1523.34,229.789 1523.91,231.12 1524.48,232.046 1525.05,228.785 1525.61,230.024 1526.18,231.234 1526.75,231.365 1527.32,231.503 1527.89,230.372 1528.46,229.366 1529.02,229.53 1529.59,230.59 1530.16,234.669 1530.73,234.107 1531.3,234.914 1531.87,234.691 1532.43,233.332 1533,233.134 1533.57,231.721 1534.14,230.667 1534.71,229.713 1535.28,229.681 1535.84,229.909 1536.41,231.022 1536.98,228.95 1537.55,231.031 1538.12,230.037 1538.69,229.98 1539.25,229.993 1539.82,230.896 1540.39,229.85 1540.96,228.909 1541.53,230.036 1542.1,230.373 1542.66,231.767 1543.23,232.821 1543.8,231.412 1544.37,231.347 1544.94,231.462 1545.51,231.45 1546.08,231.429 1546.64,230.484 1547.21,230.396 1547.78,230.648 1548.35,230.803 1548.92,230.938 1549.49,231.917 1550.05,230.744 1550.62,232.138 1551.19,232.104 1551.76,233.01 1552.33,232.103 1552.9,231.112 1553.46,231.205 1554.03,231.409 1554.6,230.223 1555.17,231.435 1555.74,233.574 1556.31,233.626 1556.87,233.412 1557.44,233.427 1558.01,234.576 1558.58,234.328 1559.15,233.194 1559.72,233.003 1560.28,231.881 1560.85,231.898 1561.42,230.001 1561.99,230.046 1562.56,230.009 1563.13,232.32 1563.69,234.459 1564.26,233.206 1564.83,231.1 1565.4,229.322 1565.97,229.541 1566.54,230.932 1567.1,230.911 1567.67,230.118 1568.24,231.338 1568.81,235.657 1569.38,235.235 1569.95,236.29 1570.51,234.972 1571.08,236.696 1571.65,236.377 1572.22,236.356 1572.79,233.736 1573.36,234.867 1573.92,232.658 1574.49,233.509 1575.06,234.52 1575.63,235.43 1576.2,234.172 1576.77,235.038 1577.33,234.764 1577.9,234.428 1578.47,233.233 1579.04,233.036 1579.61,234.084 1580.18,234.972 1580.74,234.532 1581.31,234.361 1581.88,234.373 1582.45,235.112 1583.02,233.777 1583.59,232.848 1584.15,234.704 1584.72,231.518 1585.29,229.576 1585.86,229.803 1586.43,226.976 1587,225.197 1587.56,226.598 1588.13,226.839 1588.7,228.076 1589.27,229.227 1589.84,228.496 1590.41,227.804 1590.97,228.08 1591.54,229.654 1592.11,229.785 1592.68,230.031 1593.25,228.189 1593.82,228.541 1594.38,230.1 1594.95,231.424 1595.52,231.631 1596.09,231.618 1596.66,230.829 1597.23,229.898 1597.79,229.31 1598.36,227.869 1598.93,229.219 1599.5,231.734 1600.07,231.034 1600.64,229.392 1601.2,230.76 1601.77,230.957 1602.34,230.066 1602.91,232.284 1603.48,233.419 1604.05,233.505 1604.61,233.707 1605.18,231.72 1605.75,231.893 1606.32,232.916 1606.89,231.847 1607.46,232.057 1608.02,232.334 1608.59,232.501 1609.16,231.806 1609.73,233.993 1610.3,235.121 1610.87,236.019 1611.43,236.769 1612,236.446 1612.57,238.393 1613.14,237.199 1613.71,235.797 1614.28,235.38 1614.84,233.233 1615.41,233.416 1615.98,231.245 1616.55,233.429 1617.12,232.261 1617.69,233.433 1618.26,233.44 1618.82,233.499 1619.39,233.548 1619.96,233.705 1620.53,233.899 1621.1,233.837 1621.67,232.887 1622.23,229.794 1622.8,232.217 1623.37,233.386 1623.94,233.334 1624.51,231.091 1625.08,230.154 1625.64,231.151 1626.21,232.3 1626.78,229.304 1627.35,229.501 1627.92,230.877 1628.49,228.988 1629.05,231.24 1629.62,230.494 1630.19,234.74 1630.76,233.764 1631.33,233.741 1631.9,235.885 1632.46,236.673 1633.03,235.033 1633.6,236.89 1634.17,235.749 1634.74,235.681 1635.31,237.611 1635.87,239.183 1636.44,237.736 1637.01,236.359 1637.58,236.099 1638.15,235.809 1638.72,234.875 1639.28,233.739 1639.85,233.557 1640.42,235.386 1640.99,235.275 1641.56,233.047 1642.13,233.003 1642.69,232.789 1643.26,234.766 1643.83,233.717 1644.4,231.855 1644.97,233.865 1645.54,232.615 1646.1,233.767 1646.67,235.744 1647.24,235.47 1647.81,236.199 1648.38,236.773 1648.95,235.467 1649.51,233.284 1650.08,232.278 1650.65,230.189 1651.22,230.235 1651.79,229.332 1652.36,231.374 1652.92,231.324 1653.49,231.492 1654.06,231.409 1654.63,231.371 1655.2,232.541 1655.77,232.566 1656.33,232.35 1656.9,234.265 1657.47,232.006 1658.04,233.066 1658.61,234.015 1659.18,231.94 1659.74,230.856 1660.31,229.801 1660.88,229.967 1661.45,229.364 1662.02,229.631 1662.59,229.761 1663.15,232.919 1663.72,233.068 1664.29,233.886 1664.86,231.592 1665.43,232.671 1666,232.615 1666.56,231.673 1667.13,232.806 1667.7,230.729 1668.27,231.92 1668.84,233.745 1669.41,232.773 1669.97,232.821 1670.54,231.866 1671.11,233.226 1671.68,234.249 1672.25,234.013 1672.82,234.036 1673.38,232.947 1673.95,235.105 1674.52,236.647 1675.09,237.353 1675.66,238.116 1676.23,237.727 1676.79,236.442 1677.36,236.094 1677.93,236.629 1678.5,236.249 1679.07,234.833 1679.64,233.516 1680.2,232.26 1680.77,233.229 1681.34,232.248 1681.91,235.274 1682.48,233.977 1683.05,232.938 1683.61,233.683 1684.18,232.308 1684.75,233.303 1685.32,234.297 1685.89,234.115 1686.46,236.155 1687.02,237.989 1687.59,236.541 1688.16,236.188 1688.73,233.754 1689.3,232.491 1689.87,231.226 1690.44,231.157 1691,229.931 1691.57,232.146 1692.14,231.175 1692.71,229.047 1693.28,229.354 1693.85,230.448 1694.41,232.679 1694.98,233.587 1695.55,234.689 1696.12,234.565 1696.69,236.461 1697.26,232.074 1697.82,232.062 1698.39,232.015 1698.96,230.06 1699.53,228.053 1700.1,226.388 1700.67,227.793 1701.23,228.164 1701.8,227.352 1702.37,229.89 1702.94,230.039 1703.51,232.346 1704.08,231.482 1704.64,232.8 1705.21,232.684 1705.78,233.802 1706.35,233.816 1706.92,233.697 1707.49,230.401 1708.05,230.417 1708.62,229.578 1709.19,230.939 1709.76,232.311 1710.33,229.368 1710.9,230.546 1711.46,231.567 1712.03,230.866 1712.6,230.975 1713.17,232.154 1713.74,231.23 1714.31,233.195 1714.87,232.223 1715.44,228.989 1716.01,229.349 1716.58,229.733 1717.15,229.862 1717.72,229.194 1718.28,230.524 1718.85,229.648 1719.42,231.081 1719.99,230.362 1720.56,229.601 1721.13,230.87 1721.69,231.26 1722.26,231.445 1722.83,230.662 1723.4,230.688 1723.97,231.689 1724.54,230.809 1725.1,232.063 1725.67,233.163 1726.24,232.396 1726.81,233.451 1727.38,233.536 1727.95,232.519 1728.51,234.93 1729.08,231.653 1729.65,233.89 1730.22,235.853 1730.79,232.705 1731.36,234.868 1731.92,235.737 1732.49,235.542 1733.06,239.518 1733.63,240.146 1734.2,241.376 1734.77,240.818 1735.33,242.343 1735.9,239.404 1736.47,238.583 1737.04,239.164 1737.61,239.579 1738.18,239.997 1738.74,241.154 1739.31,241.391 1739.88,239.883 1740.45,238.048 1741.02,237.667 1741.59,236.265 1742.15,234.971 1742.72,234.636 1743.29,233.336 1743.86,233.047 1744.43,231.91 1745,231.794 1745.56,230.549 1746.13,230.691 1746.7,230.369 1747.27,228.455 1747.84,229.583 1748.41,226.934 1748.97,228.24 1749.54,228.331 1750.11,228.687 1750.68,227.907 1751.25,228.367 1751.82,226.589 1752.38,226.05 1752.95,226.698 1753.52,225.981 1754.09,226.448 1754.66,228.646 1755.23,226.712 1755.79,227.075 1756.36,228.343 1756.93,228.79 1757.5,227.797 1758.07,227.129 1758.64,226.214 1759.21,224.447 1759.77,224.979 1760.34,226.707 1760.91,228.122 1761.48,225.381 1762.05,225.011 1762.62,226.674 1763.18,230.449 1763.75,231.752 1764.32,232.06 1764.89,234.315 1765.46,236.511 1766.03,237.304 1766.59,237.177 1767.16,234.023 1767.73,235.07 1768.3,231.047 1768.87,234.259 1769.44,234.069 1770,234.768 1770.57,234.67 1771.14,233.637 1771.71,232.451 1772.28,230.448 1772.85,230.47 1773.41,228.761 1773.98,229.229 1774.55,230.367 1775.12,231.509 1775.69,231.619 1776.26,232.735 1776.82,231.815 1777.39,234.674 1777.96,234.844 1778.53,235.964 1779.1,234.93 1779.67,234.859 1780.23,235.616 1780.8,235.242 1781.37,234.818 1781.94,237.432 1782.51,236.098 1783.08,235.733 1783.64,238.653 1784.21,235.104 1784.78,235.077 1785.35,234.878 1785.92,236.918 1786.49,235.581 1787.05,236.471 1787.62,235.154 1788.19,231.028 1788.76,233.97 1789.33,233.859 1789.9,232.924 1790.46,231.919 1791.03,232.168 1791.6,233.425 1792.17,233.421 1792.74,234.311 1793.31,235.342 1793.87,234.23 1794.44,232.103 1795.01,234.201 1795.58,234.218 1796.15,234.111 1796.72,232.943 1797.28,230.834 1797.85,229.967 1798.42,227.984 1798.99,226.467 1799.56,224.934 1800.13,223.458 1800.69,224.222 1801.26,221.868 1801.83,223.611 1802.4,225.309 1802.97,225.846 1803.54,223.316 1804.1,226.166 1804.67,225.927 1805.24,226.403 1805.81,228.709 1806.38,230.025 1806.95,229.188 1807.51,233.788 1808.08,232.886 1808.65,231.774 1809.22,232.853 1809.79,232.992 1810.36,234.132 1810.92,235.159 1811.49,235.14 1812.06,236.13 1812.63,232.822 1813.2,232.891 1813.77,234.198 1814.33,235.279 1814.9,235.288 1815.47,235.29 1816.04,232.946 1816.61,231.981 1817.18,233.02 1817.74,233.096 1818.31,233.089 1818.88,230.575 1819.45,230.806 1820.02,229.963 1820.59,231.57 1821.15,230.754 1821.72,231.986 1822.29,232.223 1822.86,232.533 1823.43,231.594 1824,232.668 1824.56,230.755 1825.13,231.957 1825.7,231.151 1826.27,229.185 1826.84,230.677 1827.41,231.648 1827.97,231.701 1828.54,234.056 1829.11,233.072 1829.68,232.226 1830.25,232.234 1830.82,235.551 1831.39,235.325 1831.95,234.333 1832.52,234.333 1833.09,235.156 1833.66,234.011 1834.23,235.047 1834.8,236.955 1835.36,237.918 1835.93,238.563 1836.5,238.013 1837.07,239.883 1837.64,239.486 1838.21,237.956 1838.77,236.597 1839.34,234.306 1839.91,239.383 1840.48,240.012 1841.05,238.424 1841.62,236.985 1842.18,236.669 1842.75,236.288 1843.32,235.164 1843.89,237.072 1844.46,235.558 1845.03,236.279 1845.59,236.778 1846.16,237.383 1846.73,235.081 1847.3,233.866 1847.87,233.844 1848.44,234.736 1849,234.434 1849.57,232.273 1850.14,231.249 1850.71,231.321 1851.28,231.503 1851.85,231.612 1852.41,232.642 1852.98,232.576 1853.55,233.819 1854.12,232.747 1854.69,231.696 1855.26,233.829 1855.82,233.735 1856.39,232.686 1856.96,234.805 1857.53,234.585 1858.1,236.55 1858.67,236.419 1859.23,232.969 1859.8,232.708 1860.37,233.746 1860.94,234.495 1861.51,234.254 1862.08,232.129 1862.64,232.217 1863.21,233.221 1863.78,232.098 1864.35,233.155 1864.92,233.121 1865.49,231.869 1866.05,233.127 1866.62,232.669 1867.19,233.594 1867.76,233.438 1868.33,234.446 1868.9,234.291 1869.46,233.078 1870.03,232.929 1870.6,232.812 1871.17,231.58 1871.74,233.565 1872.31,233.503 1872.87,234.23 1873.44,232.961 1874.01,232.96 1874.58,231.751 1875.15,231.816 1875.72,231.012 1876.28,231.165 1876.85,232.256 1877.42,229.231 1877.99,229.559 1878.56,229.617 1879.13,229.874 1879.69,232.082 1880.26,231.927 1880.83,231.851 1881.4,232.093 1881.97,235.573 1882.54,235.298 1883.1,236.04 1883.67,237.762 1884.24,236.34 1884.81,237.221 1885.38,234.851 1885.95,235.663 1886.51,232.278 1887.08,232.358 1887.65,232.282 1888.22,230.164 1888.79,231.483 1889.36,231.491 1889.92,232.585 1890.49,231.506 1891.06,232.736 1891.63,231.718 1892.2,232.621 1892.77,231.577 1893.33,233.638 1893.9,232.093 1894.47,231.234 1895.04,229.172 1895.61,230.449 1896.18,229.542 1896.74,229.543 1897.31,229.714 1897.88,228.816 1898.45,229.219 1899.02,230.56 1899.59,231.714 1900.16,230.94 1900.72,232.015 1901.29,234.12 1901.86,236.255 1902.43,236.028 1903,236.872 1903.57,235.674 1904.13,235.515 1904.7,235.399 1905.27,237.32 1905.84,237.209 1906.41,234.656 1906.98,236.662 1907.54,234.153 1908.11,233.024 1908.68,235.112 1909.25,238.222 1909.82,237.632 1910.39,237.397 1910.95,237.027 1911.52,236.665 1912.09,236.282 1912.66,236.193 1913.23,236.854 1913.8,237.525 1914.36,238.074 1914.93,237.455 1915.5,239.117 1916.07,236.644 1916.64,239.385 1917.21,236.855 1917.77,235.329 1918.34,236.152 1918.91,235.762 1919.48,234.142 1920.05,231.999 1920.62,230.844 1921.18,232.979 1921.75,234.758 1922.32,234.557 1922.89,232.29 1923.46,231.239 1924.03,231.173 1924.59,231.046 1925.16,231.941 1925.73,230.787 1926.3,230.652 1926.87,231.558 1927.44,229.49 1928,229.616 1928.57,230.61 1929.14,228.589 1929.71,228.672 1930.28,226.898 1930.85,227.174 1931.41,227.438 1931.98,228.991 1932.55,229.171 1933.12,230.298 1933.69,229.237 1934.26,227.415 1934.82,230.657 1935.39,230.972 1935.96,230.971 1936.53,232.174 1937.1,233.367 1937.67,234.181 1938.23,234.863 1938.8,232.324 1939.37,231.149 1939.94,230.027 1940.51,228.226 1941.08,228.525 1941.64,229.036 1942.21,231.259 1942.78,230.196 1943.35,227.339 1943.92,226.626 1944.49,229.013 1945.05,228.118 1945.62,228.363 1946.19,229.777 1946.76,230.985 1947.33,232.042 1947.9,231.992 1948.46,233.055 1949.03,232.164 1949.6,231.092 1950.17,230.133 1950.74,228.172 1951.31,227.657 1951.87,227.941 1952.44,229.552 1953.01,230.762 1953.58,230.88 1954.15,230.69 1954.72,230.939 1955.28,229.201 1955.85,230.62 1956.42,230.669 1956.99,228.734 1957.56,226.834 1958.13,229.408 1958.69,230.818 1959.26,230.994 1959.83,230.344 1960.4,230.514 1960.97,230.71 1961.54,230.199 1962.1,231.587 1962.67,231.688 1963.24,229.906 1963.81,232.242 1964.38,230.552 1964.95,230.583 1965.51,230.855 1966.08,227.027 1966.65,228.631 1967.22,228.78 1967.79,229.106 1968.36,230.421 1968.92,228.833 1969.49,229.285 1970.06,228.483 1970.63,230.875 1971.2,229.118 1971.77,229.436 1972.34,228.924 1972.9,230.486 1973.47,230.74 1974.04,228.909 1974.61,228.197 1975.18,228.579 1975.75,230.017 1976.31,228.479 1976.88,228.984 1977.45,229.474 1978.02,228.953 1978.59,229.385 1979.16,230.921 1979.72,232.276 1980.29,233.533 1980.86,236.537 1981.43,238.585 1982,236.201 1982.57,236.434 1983.13,238.383 1983.7,239.154 1984.27,241.849 1984.84,242.527 1985.41,240.994 1985.98,240.446 1986.54,239.876 1987.11,239.573 1987.68,239.201 1988.25,238.577 1988.82,238.139 1989.39,237.991 1989.95,236.669 1990.52,236.394 1991.09,236.053 1991.66,233.811 1992.23,233.805 1992.8,231.731 1993.36,232.766 1993.93,232.724 1994.5,233.79 1995.07,232.635 1995.64,232.795 1996.21,230.814 1996.77,231.028 1997.34,232.341 1997.91,232.653 1998.48,234.843 1999.05,235.9 1999.62,236.842 2000.18,235.732 2000.75,237.738 2001.32,235.437 2001.89,235.222 2002.46,237.175 2003.03,234.789 2003.59,233.708 2004.16,233.537 2004.73,234.471 2005.3,235.319 2005.87,234.029 2006.44,233.033 2007,234.12 2007.57,233.974 2008.14,233.88 2008.71,234.777 2009.28,232.763 2009.85,231.794 2010.41,230.837 2010.98,230.785 2011.55,230.82 2012.12,229.655 2012.69,230.968 2013.26,231.238 2013.82,230.386 2014.39,233.735 2014.96,235.523 2015.53,235.447 2016.1,236.151 2016.67,236.89 2017.23,235.787 2017.8,233.524 2018.37,232.368 2018.94,231.214 2019.51,231.322 2020.08,230.42 2020.64,230.54 2021.21,232.866 2021.78,232.822 2022.35,232.794 2022.92,234.968 2023.49,236.83 2024.05,236.475 2024.62,237.09 2025.19,236.816 2025.76,236.191 2026.33,236.797 2026.9,236.635 2027.46,236.288 2028.03,237.036 2028.6,238.822 2029.17,239.598 2029.74,237.026 2030.31,237.56 2030.87,238.407 2031.44,237.833 2032.01,236.061 2032.58,238.916 2033.15,239.166 2033.72,238.593 2034.28,236.906 2034.85,237.687 2035.42,237.438 2035.99,235.87 2036.56,234.649 2037.13,234.392 2037.69,235.103 2038.26,233.704 2038.83,236.358 2039.4,236 2039.97,237.672 2040.54,238.273 2041.11,238.725 2041.67,238.201 2042.24,241.695 2042.81,239.542 2043.38,236.856 2043.95,235.316 2044.52,232.926 2045.08,232.877 2045.65,231.787 2046.22,230.495 2046.79,229.495 2047.36,230.397 2047.93,230.443 2048.49,231.65 2049.06,231.597 2049.63,230.463 2050.2,228.391 2050.77,228.65 2051.34,222.774 2051.9,222.174 2052.47,219.895 2053.04,221.665 2053.61,222.35 2054.18,220.968 2054.75,221.847 2055.31,224.831 2055.88,225.48 2056.45,225.925 2057.02,227.44 2057.59,228.786 2058.16,230.213 2058.72,229.576 2059.29,230.748 2059.86,230.903 2060.43,231.061 2061,232.335 2061.57,233.307 2062.13,235.31 2062.7,233.165 2063.27,234.139 2063.84,234.12 2064.41,235.078 2064.98,231.83 2065.54,234.076 2066.11,233.944 2066.68,233.754 2067.25,232.6 2067.82,232.413 2068.39,230.305 2068.95,230.427 2069.52,230.707 2070.09,229.89 2070.66,231.194 2071.23,231.226 2071.8,232.359 2072.36,233.327 2072.93,232.13 2073.5,231.041 2074.07,232.047 2074.64,232.059 2075.21,231.944 2075.77,234.024 2076.34,232.991 2076.91,228.889 2077.48,229.146 2078.05,230.199 2078.62,229.544 2079.18,229.702 2079.75,229.74 2080.32,229.815 2080.89,229.934 2081.46,232.191 2082.03,232.289 2082.59,230.224 2083.16,230.396 2083.73,232.622 2084.3,233.837 2084.87,231.61 2085.44,231.466 2086,231.399 2086.57,232.349 2087.14,233.539 2087.71,232.488 2088.28,232.556 2088.85,232.482 2089.41,232.38 2089.98,231.345 2090.55,230.379 2091.12,230.364 2091.69,231.617 2092.26,232.692 2092.82,233.778 2093.39,233.957 2093.96,230.835 2094.53,229.928 2095.1,229.192 2095.67,228.389 2096.23,229.931 2096.8,229.201 2097.37,229.454 2097.94,229.645 2098.51,229.859 2099.08,230.103 2099.64,231.456 2100.21,231.442 2100.78,231.734 2101.35,230.874 2101.92,232.005 2102.49,234.104 2103.05,233.015 2103.62,233.134 2104.19,230.096 2104.76,230.334 2105.33,231.657 2105.9,229.891 2106.46,232.114 2107.03,234.173 2107.6,233.092 2108.17,233.184 2108.74,233.091 2109.31,232.953 2109.87,233.1 2110.44,233.447 2111.01,232.547 2111.58,230.647 2112.15,232.271 2112.72,232.29 2113.29,231.413 2113.85,231.743 2114.42,232.964 2114.99,231.862 2115.56,233.858 2116.13,233.66 2116.7,232.689 2117.26,233.907 2117.83,231.986 2118.4,232.26 2118.97,233.461 2119.54,231.432 2120.11,227.324 2120.67,228.781 2121.24,229.17 2121.81,229.601 2122.38,228.853 2122.95,232.214 2123.52,231.124 2124.08,231.176 2124.65,231.466 2125.22,231.866 2125.79,233.104 2126.36,235.484 2126.93,236.32 2127.49,236.077 2128.06,236.155 2128.63,237.984 2129.2,237.765 2129.77,236.574 2130.34,234.354 2130.9,235.545 2131.47,234.642 2132.04,232.614 2132.61,232.794 2133.18,231.654 2133.75,229.822 2134.31,230.018 2134.88,229.342 2135.45,230.658 2136.02,230.724 2136.59,231.077 2137.16,233.353 2137.72,234.56 2138.29,233.539 2138.86,235.66 2139.43,235.443 2140,234.267 2140.57,237.39 2141.13,235.084 2141.7,235.872 2142.27,234.494 2142.84,235.439 2143.41,238.321 2143.98,239.024 2144.54,238.667 2145.11,238.1 2145.68,238.877 2146.25,239.364 2146.82,236.932 2147.39,237.592 2147.95,237.12 2148.52,236.958 2149.09,235.434 2149.66,234.008 2150.23,233.041 2150.8,231.84 2151.36,230.904 2151.93,232.069 2152.5,233.032 2153.07,234.119 2153.64,232.998 2154.21,236.032 2154.77,233.588 2155.34,232.271 2155.91,231.308 2156.48,231.131 2157.05,231.128 2157.62,230.2 2158.18,231.368 2158.75,233.65 2159.32,231.464 2159.89,231.563 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M1625.75 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1625.75 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1625.75,1245.03 2150.8,1245.03 2150.8,1089.51 1625.75,1089.51 1625.75,1245.03 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1645.83,1141.35 1766.28,1141.35 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M1793.76 1125.34 L1793.76 1132.71 L1802.53 1132.71 L1802.53 1136.02 L1793.76 1136.02 L1793.76 1150.09 Q1793.76 1153.26 1794.61 1154.16 Q1795.49 1155.07 1798.16 1155.07 L1802.53 1155.07 L1802.53 1158.63 L1798.16 1158.63 Q1793.23 1158.63 1791.35 1156.8 Q1789.48 1154.95 1789.48 1150.09 L1789.48 1136.02 L1786.35 1136.02 L1786.35 1132.71 L1789.48 1132.71 L1789.48 1125.34 L1793.76 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1819.92 1145.6 Q1814.75 1145.6 1812.76 1146.78 Q1810.77 1147.96 1810.77 1150.81 Q1810.77 1153.08 1812.25 1154.42 Q1813.76 1155.74 1816.33 1155.74 Q1819.87 1155.74 1822 1153.24 Q1824.15 1150.72 1824.15 1146.55 L1824.15 1145.6 L1819.92 1145.6 M1828.41 1143.84 L1828.41 1158.63 L1824.15 1158.63 L1824.15 1154.7 Q1822.69 1157.06 1820.52 1158.19 Q1818.34 1159.3 1815.19 1159.3 Q1811.21 1159.3 1808.85 1157.08 Q1806.51 1154.84 1806.51 1151.09 Q1806.51 1146.71 1809.43 1144.49 Q1812.37 1142.27 1818.18 1142.27 L1824.15 1142.27 L1824.15 1141.85 Q1824.15 1138.91 1822.21 1137.31 Q1820.29 1135.69 1816.79 1135.69 Q1814.57 1135.69 1812.46 1136.22 Q1810.36 1136.76 1808.41 1137.82 L1808.41 1133.89 Q1810.75 1132.98 1812.95 1132.54 Q1815.15 1132.08 1817.23 1132.08 Q1822.86 1132.08 1825.63 1135 Q1828.41 1137.91 1828.41 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1852.21 1136.69 Q1851.49 1136.27 1850.63 1136.09 Q1849.8 1135.88 1848.78 1135.88 Q1845.17 1135.88 1843.23 1138.24 Q1841.3 1140.58 1841.3 1144.97 L1841.3 1158.63 L1837.02 1158.63 L1837.02 1132.71 L1841.3 1132.71 L1841.3 1136.73 Q1842.65 1134.37 1844.8 1133.24 Q1846.95 1132.08 1850.03 1132.08 Q1850.47 1132.08 1851 1132.15 Q1851.54 1132.2 1852.18 1132.31 L1852.21 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1872.9 1145.37 Q1872.9 1140.74 1870.98 1138.19 Q1869.08 1135.65 1865.63 1135.65 Q1862.21 1135.65 1860.29 1138.19 Q1858.39 1140.74 1858.39 1145.37 Q1858.39 1149.97 1860.29 1152.52 Q1862.21 1155.07 1865.63 1155.07 Q1869.08 1155.07 1870.98 1152.52 Q1872.9 1149.97 1872.9 1145.37 M1877.16 1155.41 Q1877.16 1162.03 1874.22 1165.25 Q1871.28 1168.49 1865.22 1168.49 Q1862.97 1168.49 1860.98 1168.15 Q1858.99 1167.82 1857.11 1167.13 L1857.11 1162.98 Q1858.99 1164 1860.82 1164.49 Q1862.65 1164.97 1864.54 1164.97 Q1868.73 1164.97 1870.82 1162.78 Q1872.9 1160.6 1872.9 1156.18 L1872.9 1154.07 Q1871.58 1156.36 1869.52 1157.5 Q1867.46 1158.63 1864.59 1158.63 Q1859.82 1158.63 1856.91 1155 Q1853.99 1151.36 1853.99 1145.37 Q1853.99 1139.35 1856.91 1135.72 Q1859.82 1132.08 1864.59 1132.08 Q1867.46 1132.08 1869.52 1133.22 Q1871.58 1134.35 1872.9 1136.64 L1872.9 1132.71 L1877.16 1132.71 L1877.16 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1908.11 1144.6 L1908.11 1146.69 L1888.53 1146.69 Q1888.8 1151.09 1891.17 1153.4 Q1893.55 1155.69 1897.79 1155.69 Q1900.24 1155.69 1902.53 1155.09 Q1904.85 1154.49 1907.11 1153.28 L1907.11 1157.31 Q1904.82 1158.28 1902.42 1158.79 Q1900.01 1159.3 1897.53 1159.3 Q1891.33 1159.3 1887.69 1155.69 Q1884.08 1152.08 1884.08 1145.92 Q1884.08 1139.56 1887.51 1135.83 Q1890.96 1132.08 1896.79 1132.08 Q1902.02 1132.08 1905.05 1135.46 Q1908.11 1138.82 1908.11 1144.6 M1903.85 1143.35 Q1903.8 1139.86 1901.88 1137.78 Q1899.98 1135.69 1896.84 1135.69 Q1893.27 1135.69 1891.12 1137.71 Q1888.99 1139.72 1888.67 1143.38 L1903.85 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1919.31 1125.34 L1919.31 1132.71 L1928.09 1132.71 L1928.09 1136.02 L1919.31 1136.02 L1919.31 1150.09 Q1919.31 1153.26 1920.17 1154.16 Q1921.05 1155.07 1923.71 1155.07 L1928.09 1155.07 L1928.09 1158.63 L1923.71 1158.63 Q1918.78 1158.63 1916.91 1156.8 Q1915.03 1154.95 1915.03 1150.09 L1915.03 1136.02 L1911.91 1136.02 L1911.91 1132.71 L1915.03 1132.71 L1915.03 1125.34 L1919.31 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1953.39 1166.5 L1953.39 1169.81 L1928.76 1169.81 L1928.76 1166.5 L1953.39 1166.5 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip590)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1645.83,1193.19 1766.28,1193.19 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M1808.06 1194.82 L1808.06 1210.47 L1803.8 1210.47 L1803.8 1194.96 Q1803.8 1191.28 1802.37 1189.45 Q1800.93 1187.62 1798.06 1187.62 Q1794.61 1187.62 1792.62 1189.82 Q1790.63 1192.02 1790.63 1195.82 L1790.63 1210.47 L1786.35 1210.47 L1786.35 1184.55 L1790.63 1184.55 L1790.63 1188.57 Q1792.16 1186.24 1794.22 1185.08 Q1796.3 1183.92 1799.01 1183.92 Q1803.48 1183.92 1805.77 1186.7 Q1808.06 1189.45 1808.06 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1826.61 1187.53 Q1823.18 1187.53 1821.19 1190.22 Q1819.2 1192.88 1819.2 1197.53 Q1819.2 1202.18 1821.17 1204.87 Q1823.16 1207.53 1826.61 1207.53 Q1830.01 1207.53 1832 1204.85 Q1833.99 1202.16 1833.99 1197.53 Q1833.99 1192.93 1832 1190.24 Q1830.01 1187.53 1826.61 1187.53 M1826.61 1183.92 Q1832.16 1183.92 1835.33 1187.53 Q1838.5 1191.14 1838.5 1197.53 Q1838.5 1203.9 1835.33 1207.53 Q1832.16 1211.14 1826.61 1211.14 Q1821.03 1211.14 1817.86 1207.53 Q1814.71 1203.9 1814.71 1197.53 Q1814.71 1191.14 1817.86 1187.53 Q1821.03 1183.92 1826.61 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1860.59 1188.53 Q1859.87 1188.11 1859.01 1187.93 Q1858.18 1187.72 1857.16 1187.72 Q1853.55 1187.72 1851.61 1190.08 Q1849.68 1192.42 1849.68 1196.81 L1849.68 1210.47 L1845.4 1210.47 L1845.4 1184.55 L1849.68 1184.55 L1849.68 1188.57 Q1851.03 1186.21 1853.18 1185.08 Q1855.33 1183.92 1858.41 1183.92 Q1858.85 1183.92 1859.38 1183.99 Q1859.92 1184.04 1860.56 1184.15 L1860.59 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1884.41 1189.52 Q1886 1186.65 1888.23 1185.29 Q1890.45 1183.92 1893.46 1183.92 Q1897.51 1183.92 1899.71 1186.77 Q1901.91 1189.59 1901.91 1194.82 L1901.91 1210.47 L1897.62 1210.47 L1897.62 1194.96 Q1897.62 1191.24 1896.3 1189.43 Q1894.98 1187.62 1892.28 1187.62 Q1888.97 1187.62 1887.04 1189.82 Q1885.12 1192.02 1885.12 1195.82 L1885.12 1210.47 L1880.84 1210.47 L1880.84 1194.96 Q1880.84 1191.21 1879.52 1189.43 Q1878.2 1187.62 1875.45 1187.62 Q1872.18 1187.62 1870.26 1189.85 Q1868.34 1192.05 1868.34 1195.82 L1868.34 1210.47 L1864.06 1210.47 L1864.06 1184.55 L1868.34 1184.55 L1868.34 1188.57 Q1869.8 1186.19 1871.84 1185.06 Q1873.87 1183.92 1876.67 1183.92 Q1879.5 1183.92 1881.47 1185.36 Q1883.46 1186.79 1884.41 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.034 ± 0.021\n  with uncertainty of ± 0.0019376238053742877\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01226 ± (0.00234546, 0.0025525) (MC)\n  95% confidence interval: [-4.01714, -4.00755]) (MC)\n  linear error propagation: -4.01239 ± 0.00249699\n  |δ_y| = |0.00192408| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.012263372663104, val_l = 0.0048798166271630805, val_u = 0.004714297034335679)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.step, df.shift, ylabel=\"energy\", xlabel=\"step\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.step[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.step[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip620\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip620)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip621\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip620)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip622\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1237.32 1391.71 L1237.32 1397.25 Q1234.84 1395.98 1232.17 1395.34 Q1229.49 1394.71 1226.63 1394.71 Q1222.27 1394.71 1220.07 1396.04 Q1217.91 1397.38 1217.91 1400.05 Q1217.91 1402.09 1219.47 1403.27 Q1221.03 1404.41 1225.74 1405.46 L1227.74 1405.91 Q1233.98 1407.25 1236.59 1409.7 Q1239.23 1412.12 1239.23 1416.48 Q1239.23 1421.44 1235.29 1424.34 Q1231.37 1427.23 1224.5 1427.23 Q1221.63 1427.23 1218.51 1426.66 Q1215.42 1426.12 1211.99 1425.01 L1211.99 1418.96 Q1215.23 1420.65 1218.38 1421.51 Q1221.54 1422.33 1224.62 1422.33 Q1228.76 1422.33 1230.99 1420.93 Q1233.22 1419.5 1233.22 1416.92 Q1233.22 1414.54 1231.59 1413.26 Q1230 1411.99 1224.56 1410.81 L1222.52 1410.33 Q1217.08 1409.19 1214.66 1406.83 Q1212.24 1404.45 1212.24 1400.31 Q1212.24 1395.28 1215.81 1392.54 Q1219.37 1389.8 1225.93 1389.8 Q1229.17 1389.8 1232.04 1390.28 Q1234.9 1390.76 1237.32 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1254.35 1380.54 L1254.35 1390.66 L1266.41 1390.66 L1266.41 1395.22 L1254.35 1395.22 L1254.35 1414.57 Q1254.35 1418.93 1255.53 1420.17 Q1256.74 1421.41 1260.4 1421.41 L1266.41 1421.41 L1266.41 1426.31 L1260.4 1426.31 Q1253.62 1426.31 1251.04 1423.8 Q1248.46 1421.25 1248.46 1414.57 L1248.46 1395.22 L1244.17 1395.22 L1244.17 1390.66 L1248.46 1390.66 L1248.46 1380.54 L1254.35 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1304.61 1407.02 L1304.61 1409.89 L1277.68 1409.89 Q1278.06 1415.94 1281.31 1419.12 Q1284.59 1422.27 1290.41 1422.27 Q1293.79 1422.27 1296.94 1421.44 Q1300.12 1420.61 1303.24 1418.96 L1303.24 1424.5 Q1300.09 1425.83 1296.78 1426.53 Q1293.47 1427.23 1290.06 1427.23 Q1281.53 1427.23 1276.54 1422.27 Q1271.57 1417.3 1271.57 1408.84 Q1271.57 1400.08 1276.28 1394.96 Q1281.02 1389.8 1289.04 1389.8 Q1296.24 1389.8 1300.41 1394.45 Q1304.61 1399.07 1304.61 1407.02 M1298.75 1405.3 Q1298.69 1400.5 1296.05 1397.63 Q1293.44 1394.77 1289.11 1394.77 Q1284.21 1394.77 1281.25 1397.54 Q1278.32 1400.31 1277.87 1405.34 L1298.75 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1319.89 1420.96 L1319.89 1439.87 L1314 1439.87 L1314 1390.66 L1319.89 1390.66 L1319.89 1396.07 Q1321.73 1392.89 1324.53 1391.36 Q1327.37 1389.8 1331.28 1389.8 Q1337.77 1389.8 1341.82 1394.96 Q1345.89 1400.12 1345.89 1408.52 Q1345.89 1416.92 1341.82 1422.08 Q1337.77 1427.23 1331.28 1427.23 Q1327.37 1427.23 1324.53 1425.71 Q1321.73 1424.15 1319.89 1420.96 M1339.81 1408.52 Q1339.81 1402.06 1337.14 1398.4 Q1334.5 1394.71 1329.85 1394.71 Q1325.2 1394.71 1322.53 1398.4 Q1319.89 1402.06 1319.89 1408.52 Q1319.89 1414.98 1322.53 1418.67 Q1325.2 1422.33 1329.85 1422.33 Q1334.5 1422.33 1337.14 1418.67 Q1339.81 1414.98 1339.81 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1152.24 2211.02,1152.24 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,984.229 2211.02,984.229 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,816.222 2211.02,816.222 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,648.214 2211.02,648.214 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,480.207 2211.02,480.207 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,312.199 2211.02,312.199 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1152.24 365.751,1152.24 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,984.229 365.751,984.229 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,816.222 365.751,816.222 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,648.214 365.751,648.214 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,480.207 365.751,480.207 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,312.199 365.751,312.199 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M298.909 1138.04 Q295.298 1138.04 293.469 1141.6 Q291.664 1145.14 291.664 1152.27 Q291.664 1159.38 293.469 1162.94 Q295.298 1166.48 298.909 1166.48 Q302.543 1166.48 304.349 1162.94 Q306.177 1159.38 306.177 1152.27 Q306.177 1145.14 304.349 1141.6 Q302.543 1138.04 298.909 1138.04 M298.909 1134.33 Q304.719 1134.33 307.775 1138.94 Q310.853 1143.52 310.853 1152.27 Q310.853 1161 307.775 1165.6 Q304.719 1170.19 298.909 1170.19 Q293.099 1170.19 290.02 1165.6 Q286.964 1161 286.964 1152.27 Q286.964 1143.52 290.02 1138.94 Q293.099 1134.33 298.909 1134.33 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M259.557 997.574 L267.196 997.574 L267.196 971.209 L258.886 972.875 L258.886 968.616 L267.15 966.949 L271.826 966.949 L271.826 997.574 L279.465 997.574 L279.465 1001.51 L259.557 1001.51 L259.557 997.574 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M298.909 970.028 Q295.298 970.028 293.469 973.593 Q291.664 977.135 291.664 984.264 Q291.664 991.371 293.469 994.935 Q295.298 998.477 298.909 998.477 Q302.543 998.477 304.349 994.935 Q306.177 991.371 306.177 984.264 Q306.177 977.135 304.349 973.593 Q302.543 970.028 298.909 970.028 M298.909 966.324 Q304.719 966.324 307.775 970.931 Q310.853 975.514 310.853 984.264 Q310.853 992.991 307.775 997.597 Q304.719 1002.18 298.909 1002.18 Q293.099 1002.18 290.02 997.597 Q286.964 992.991 286.964 984.264 Q286.964 975.514 290.02 970.931 Q293.099 966.324 298.909 966.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M262.775 829.567 L279.094 829.567 L279.094 833.502 L257.15 833.502 L257.15 829.567 Q259.812 826.812 264.395 822.183 Q269.002 817.53 270.182 816.187 Q272.428 813.664 273.307 811.928 Q274.21 810.169 274.21 808.479 Q274.21 805.724 272.266 803.988 Q270.344 802.252 267.242 802.252 Q265.043 802.252 262.59 803.016 Q260.159 803.78 257.381 805.331 L257.381 800.609 Q260.205 799.474 262.659 798.896 Q265.113 798.317 267.15 798.317 Q272.52 798.317 275.715 801.002 Q278.909 803.687 278.909 808.178 Q278.909 810.308 278.099 812.229 Q277.312 814.127 275.205 816.72 Q274.627 817.391 271.525 820.608 Q268.423 823.803 262.775 829.567 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M298.909 802.021 Q295.298 802.021 293.469 805.585 Q291.664 809.127 291.664 816.257 Q291.664 823.363 293.469 826.928 Q295.298 830.47 298.909 830.47 Q302.543 830.47 304.349 826.928 Q306.177 823.363 306.177 816.257 Q306.177 809.127 304.349 805.585 Q302.543 802.021 298.909 802.021 M298.909 798.317 Q304.719 798.317 307.775 802.923 Q310.853 807.507 310.853 816.257 Q310.853 824.983 307.775 829.59 Q304.719 834.173 298.909 834.173 Q293.099 834.173 290.02 829.59 Q286.964 824.983 286.964 816.257 Q286.964 807.507 290.02 802.923 Q293.099 798.317 298.909 798.317 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M272.914 646.86 Q276.27 647.578 278.145 649.846 Q280.043 652.115 280.043 655.448 Q280.043 660.564 276.525 663.365 Q273.006 666.166 266.525 666.166 Q264.349 666.166 262.034 665.726 Q259.742 665.309 257.289 664.453 L257.289 659.939 Q259.233 661.073 261.548 661.652 Q263.863 662.23 266.386 662.23 Q270.784 662.23 273.076 660.494 Q275.39 658.758 275.39 655.448 Q275.39 652.393 273.238 650.68 Q271.108 648.944 267.289 648.944 L263.261 648.944 L263.261 645.101 L267.474 645.101 Q270.923 645.101 272.752 643.735 Q274.58 642.346 274.58 639.754 Q274.58 637.092 272.682 635.68 Q270.807 634.245 267.289 634.245 Q265.367 634.245 263.168 634.661 Q260.969 635.078 258.33 635.957 L258.33 631.791 Q260.992 631.05 263.307 630.68 Q265.645 630.309 267.705 630.309 Q273.029 630.309 276.131 632.74 Q279.233 635.147 279.233 639.268 Q279.233 642.138 277.59 644.129 Q275.946 646.096 272.914 646.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M298.909 634.013 Q295.298 634.013 293.469 637.578 Q291.664 641.119 291.664 648.249 Q291.664 655.356 293.469 658.92 Q295.298 662.462 298.909 662.462 Q302.543 662.462 304.349 658.92 Q306.177 655.356 306.177 648.249 Q306.177 641.119 304.349 637.578 Q302.543 634.013 298.909 634.013 M298.909 630.309 Q304.719 630.309 307.775 634.916 Q310.853 639.499 310.853 648.249 Q310.853 656.976 307.775 661.582 Q304.719 666.166 298.909 666.166 Q293.099 666.166 290.02 661.582 Q286.964 656.976 286.964 648.249 Q286.964 639.499 290.02 634.916 Q293.099 630.309 298.909 630.309 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M271.594 467.001 L259.789 485.45 L271.594 485.45 L271.594 467.001 M270.367 462.927 L276.247 462.927 L276.247 485.45 L281.177 485.45 L281.177 489.339 L276.247 489.339 L276.247 497.487 L271.594 497.487 L271.594 489.339 L255.992 489.339 L255.992 484.825 L270.367 462.927 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M298.909 466.006 Q295.298 466.006 293.469 469.57 Q291.664 473.112 291.664 480.242 Q291.664 487.348 293.469 490.913 Q295.298 494.454 298.909 494.454 Q302.543 494.454 304.349 490.913 Q306.177 487.348 306.177 480.242 Q306.177 473.112 304.349 469.57 Q302.543 466.006 298.909 466.006 M298.909 462.302 Q304.719 462.302 307.775 466.908 Q310.853 471.492 310.853 480.242 Q310.853 488.968 307.775 493.575 Q304.719 498.158 298.909 498.158 Q293.099 498.158 290.02 493.575 Q286.964 488.968 286.964 480.242 Q286.964 471.492 290.02 466.908 Q293.099 462.302 298.909 462.302 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M258.793 294.919 L277.15 294.919 L277.15 298.854 L263.076 298.854 L263.076 307.327 Q264.094 306.979 265.113 306.817 Q266.131 306.632 267.15 306.632 Q272.937 306.632 276.316 309.803 Q279.696 312.975 279.696 318.391 Q279.696 323.97 276.224 327.072 Q272.752 330.151 266.432 330.151 Q264.256 330.151 261.988 329.78 Q259.742 329.41 257.335 328.669 L257.335 323.97 Q259.418 325.104 261.641 325.66 Q263.863 326.215 266.34 326.215 Q270.344 326.215 272.682 324.109 Q275.02 322.002 275.02 318.391 Q275.02 314.78 272.682 312.674 Q270.344 310.567 266.34 310.567 Q264.465 310.567 262.59 310.984 Q260.738 311.401 258.793 312.28 L258.793 294.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M298.909 297.998 Q295.298 297.998 293.469 301.563 Q291.664 305.104 291.664 312.234 Q291.664 319.34 293.469 322.905 Q295.298 326.447 298.909 326.447 Q302.543 326.447 304.349 322.905 Q306.177 319.34 306.177 312.234 Q306.177 305.104 304.349 301.563 Q302.543 297.998 298.909 297.998 M298.909 294.294 Q304.719 294.294 307.775 298.901 Q310.853 303.484 310.853 312.234 Q310.853 320.961 307.775 325.567 Q304.719 330.151 298.909 330.151 Q293.099 330.151 290.02 325.567 Q286.964 320.961 286.964 312.234 Q286.964 303.484 290.02 298.901 Q293.099 294.294 298.909 294.294 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip622)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1159.11 400.199,1037.37 400.786,924.726 401.372,821.361 401.958,843.6 402.545,751.221 403.131,770.206 403.718,689.467 404.304,617.193 404.891,549.829 405.477,572.357 406.063,513.476 406.65,459.089 407.236,411.283 407.823,367.079 408.409,327.514 408.995,293.657 409.582,262.41 410.168,289.893 410.755,263.644 411.341,241.521 411.927,221.844 412.514,247.705 413.1,232.187 413.687,219.895 414.273,246.878 414.86,268.292 415.446,259.806 416.032,281.062 416.619,327.982 417.205,345.245 417.792,362.528 418.378,356.51 418.964,371.72 419.551,387.767 420.137,402.315 420.724,398.376 421.31,429.712 421.896,428.91 422.483,442.188 423.069,444.155 423.656,457.921 424.242,472.641 424.829,486.678 425.415,501.096 426.001,505.079 426.588,530.084 427.174,544.093 427.761,574.419 428.347,578.322 428.933,590.463 429.52,603.387 430.106,616.403 430.693,623.103 431.279,635.376 431.865,654.257 432.452,660.562 433.038,672.952 433.625,679.256 434.211,691.447 434.798,703.67 435.384,722.01 435.97,728.978 436.557,740.423 437.143,751.879 437.73,772.217 438.316,800.023 438.902,809.021 439.489,814.678 440.075,836.074 440.662,840.728 441.248,845.74 441.835,851.285 442.421,857.094 443.007,873.327 443.594,882.363 444.18,891.15 444.767,903.111 445.353,911.746 445.939,917.087 446.526,922.662 447.112,930.964 447.699,936.318 448.285,944.304 448.871,952.481 449.458,968.516 450.044,973.668 450.631,983.748 451.217,991.083 451.804,998.344 452.39,1007.87 452.976,1012.27 453.563,1018.91 454.149,1023.25 454.736,1032.29 455.322,1042.87 455.908,1055.49 456.495,1060.84 457.081,1068.31 457.668,1073.43 458.254,1078.57 458.84,1085.88 459.427,1093.14 460.013,1100.06 460.6,1104.74 461.186,1109.03 461.773,1111.54 462.359,1114.18 462.945,1122.22 463.532,1126.82 464.118,1132.8 464.705,1140.33 465.291,1144 465.877,1145.48 466.464,1150.93 467.05,1156.15 467.637,1155.63 468.223,1164.23 468.809,1166.96 469.396,1173.32 469.982,1172.55 470.569,1175.56 471.155,1176.87 471.742,1178.21 472.328,1177.58 472.914,1178.96 473.501,1181.78 474.087,1193.27 474.674,1194.01 475.26,1194.62 475.846,1197.07 476.433,1199.43 477.019,1200.43 477.606,1202.51 478.192,1204.92 478.778,1205.45 479.365,1204.23 479.951,1204.98 480.538,1207.18 481.124,1207.85 481.711,1210.01 482.297,1212.29 482.883,1214.36 483.47,1216.29 484.056,1224.65 484.643,1226.02 485.229,1225.86 485.815,1233.27 486.402,1236.18 486.988,1237.05 487.575,1238.05 488.161,1234.39 488.748,1233.79 489.334,1233.55 489.92,1233.19 490.507,1234.67 491.093,1239.05 491.68,1240.09 492.266,1239.37 492.852,1243.44 493.439,1244.04 494.025,1241.8 494.612,1241.58 495.198,1242.35 495.784,1238.76 496.371,1241.59 496.957,1242.56 497.544,1243.45 498.13,1244.73 498.717,1247.24 499.303,1246.4 499.889,1250.1 500.476,1250.53 501.062,1249.71 501.649,1248.8 502.235,1249.55 502.821,1247.26 503.408,1247.71 503.994,1245.79 504.581,1243.99 505.167,1241.96 505.753,1241.38 506.34,1243.7 506.926,1243.19 507.513,1244.52 508.099,1245.54 508.686,1247.8 509.272,1245.76 509.858,1246.75 510.445,1247.44 511.031,1248.08 511.618,1248.85 512.204,1246.72 512.79,1244.82 513.377,1244.45 513.963,1242.4 514.55,1242.11 515.136,1244.85 515.722,1245.67 516.309,1245.42 516.895,1244.94 517.482,1244.66 518.068,1244.02 518.655,1243.57 519.241,1248.88 519.827,1249.63 520.414,1249.33 521,1249 521.587,1248.61 522.173,1243.87 522.759,1243.49 523.346,1241.74 523.932,1243.2 524.519,1241.44 525.105,1244.13 525.691,1243.72 526.278,1243.43 526.864,1243.57 527.451,1241.88 528.037,1247.35 528.624,1245.58 529.21,1243.6 529.796,1246.06 530.383,1242.88 530.969,1242.5 531.556,1242.38 532.142,1244.69 532.728,1244.33 533.315,1245.3 533.901,1247.74 534.488,1247.5 535.074,1244.07 535.661,1245.15 536.247,1246.28 536.833,1245.48 537.42,1246.65 538.006,1247.48 538.593,1246.87 539.179,1246.44 539.765,1247.56 540.352,1247.3 540.938,1246.53 541.525,1248.8 542.111,1245.58 542.697,1245.32 543.284,1246.2 543.87,1248.63 544.457,1247.85 545.043,1246.87 545.63,1247.61 546.216,1249.65 546.802,1247.6 547.389,1249.77 547.975,1247.79 548.562,1248.78 549.148,1246.62 549.734,1247.48 550.321,1248.21 550.907,1250.26 551.494,1249.39 552.08,1248.81 552.666,1246.73 553.253,1245.96 553.839,1245.54 554.426,1244.85 555.012,1244.1 555.599,1245.18 556.185,1246.21 556.771,1247.16 557.358,1245.14 557.944,1244.63 558.531,1243.93 559.117,1244.52 559.703,1242.89 560.29,1242.63 560.876,1242.06 561.463,1243.04 562.049,1242.43 562.635,1246.06 563.222,1245.58 563.808,1245.21 564.395,1244.57 564.981,1243.74 565.568,1243.09 566.154,1243.88 566.74,1244.61 567.327,1244.04 567.913,1243.36 568.5,1241.38 569.086,1242.53 569.672,1242.19 570.259,1240.11 570.845,1238.53 571.432,1239.76 572.018,1240.68 572.605,1240.32 573.191,1242.72 573.777,1242.36 574.364,1243.29 574.95,1242.74 575.537,1242.08 576.123,1241.65 576.709,1242.28 577.296,1240.55 577.882,1242.55 578.469,1240.53 579.055,1241.27 579.641,1240.93 580.228,1240.23 580.814,1239.74 581.401,1242.24 581.987,1237.54 582.574,1238.67 583.16,1239.71 583.746,1239.19 584.333,1237.49 584.919,1237.22 585.506,1237.15 586.092,1239.78 586.678,1240.92 587.265,1240.72 587.851,1240.29 588.438,1238.46 589.024,1238.11 589.61,1236.39 590.197,1238.77 590.783,1234.31 591.37,1232.79 591.956,1232.75 592.543,1234.11 593.129,1235.23 593.715,1235.02 594.302,1237.84 594.888,1240.25 595.475,1239.98 596.061,1238.51 596.647,1239.63 597.234,1237.98 597.82,1238.91 598.407,1235.55 598.993,1235.22 599.579,1236.21 600.166,1237.12 600.752,1239.49 601.339,1240.16 601.925,1242.67 602.512,1242.32 603.098,1243.43 603.684,1242.82 604.271,1239.74 604.857,1239.65 605.444,1240.74 606.03,1237.47 606.616,1234.33 607.203,1233.01 607.789,1235.71 608.376,1232.92 608.962,1232.73 609.548,1233.6 610.135,1233.23 610.721,1233.25 611.308,1231.5 611.894,1232.89 612.481,1236.77 613.067,1237.92 613.653,1237.58 614.24,1237.48 614.826,1234.22 615.413,1236.69 615.999,1230.79 616.585,1232.12 617.172,1230.74 617.758,1230.71 618.345,1230.74 618.931,1229.5 619.518,1229.57 620.104,1230.81 620.69,1230.65 621.277,1230.2 621.863,1229.94 622.45,1231.22 623.036,1235.14 623.622,1234.84 624.209,1237.13 624.795,1236.75 625.382,1237.86 625.968,1241.63 626.554,1240.73 627.141,1242.76 627.727,1240.51 628.314,1241.07 628.9,1239.26 629.487,1241.54 630.073,1240.87 630.659,1241.76 631.246,1239.7 631.832,1241.97 632.419,1242.68 633.005,1239.17 633.591,1237.19 634.178,1236.84 634.764,1239.33 635.351,1238.8 635.937,1239.83 636.523,1236.62 637.11,1234.92 637.696,1234.23 638.283,1232.58 638.869,1232.4 639.456,1232.35 640.042,1235.02 640.628,1236.42 641.215,1237.33 641.801,1236.73 642.388,1237.46 642.974,1237.22 643.56,1237.77 644.147,1238.5 644.733,1237.5 645.32,1235.58 645.906,1235.3 646.492,1233.44 647.079,1231.9 647.665,1235.87 648.252,1235.51 648.838,1233.69 649.425,1234.87 650.011,1234.6 650.597,1233.92 651.184,1236.12 651.77,1236.68 652.357,1237.79 652.943,1234.45 653.529,1231.38 654.116,1228.2 654.702,1231.15 655.289,1230.85 655.875,1231.87 656.462,1233.06 657.048,1231.28 657.634,1230.75 658.221,1230.57 658.807,1231.74 659.394,1232.93 659.98,1229.65 660.566,1229.44 661.153,1229.39 661.739,1230.37 662.326,1231.52 662.912,1229.76 663.498,1229.65 664.085,1232.21 664.671,1234.7 665.258,1234.36 665.844,1231.29 666.431,1231.13 667.017,1230.81 667.603,1230.59 668.19,1228.89 668.776,1225.79 669.363,1220.2 669.949,1221.55 670.535,1220.65 671.122,1221.34 671.708,1218.84 672.295,1219.06 672.881,1219.46 673.467,1222.76 674.054,1224.5 674.64,1223.52 675.227,1220.88 675.813,1221.29 676.4,1220.3 676.986,1220.26 677.572,1216.67 678.159,1217.23 678.745,1220.39 679.332,1219.21 679.918,1219.62 680.504,1221.34 681.091,1221.58 681.677,1220.16 682.264,1221.9 682.85,1223.6 683.436,1223.67 684.023,1223.67 684.609,1224.94 685.196,1226.58 685.782,1226.51 686.369,1229.16 686.955,1231.79 687.541,1228.78 688.128,1230.05 688.714,1228.64 689.301,1224.31 689.887,1223.29 690.473,1219.2 691.06,1219.55 691.646,1219.88 692.233,1222.84 692.819,1223.14 693.405,1224.66 693.992,1224.84 694.578,1226.65 695.165,1227.71 695.751,1228.9 696.338,1230.15 696.924,1230.12 697.51,1229.7 698.097,1229.51 698.683,1229.55 699.27,1232.18 699.856,1231.93 700.442,1230.28 701.029,1227.13 701.615,1224.28 702.202,1224.32 702.788,1225.8 703.375,1222.8 703.961,1222.97 704.547,1224.54 705.134,1224.46 705.72,1228.67 706.307,1229.74 706.893,1229.73 707.479,1228.37 708.066,1228.32 708.652,1229.23 709.239,1229.14 709.825,1231.42 710.411,1232.32 710.998,1234.46 711.584,1233.77 712.171,1234.61 712.757,1232.57 713.344,1236.25 713.93,1231.55 714.516,1231.01 715.103,1230.8 715.689,1230.83 716.276,1230.54 716.862,1232.86 717.448,1232.47 718.035,1229.42 718.621,1228.8 719.208,1231.04 719.794,1233.16 720.38,1228.65 720.967,1225.66 721.553,1225.31 722.14,1228.23 722.726,1228.21 723.313,1229.63 723.899,1228.21 724.485,1226.55 725.072,1229.13 725.658,1223.54 726.245,1222.35 726.831,1221.32 727.417,1221.4 728.004,1218.68 728.59,1216.22 729.177,1218.19 729.763,1221.06 730.349,1221.26 730.936,1220 731.522,1220.14 732.109,1223.1 732.695,1224.58 733.282,1225.5 733.868,1224.02 734.454,1225.37 735.041,1225.72 735.627,1224.09 736.214,1225.19 736.8,1225.3 737.386,1225.04 737.973,1226.4 738.559,1227.97 739.146,1229.13 739.732,1228.94 740.318,1227.51 740.905,1229.77 741.491,1233.63 742.078,1233.01 742.664,1235.31 743.251,1235.86 743.837,1233.96 744.423,1234.65 745.01,1231.56 745.596,1231.15 746.183,1232.4 746.769,1233.38 747.355,1231.49 747.942,1231.16 748.528,1227.92 749.115,1226.17 749.701,1228.74 750.288,1229.43 750.874,1227.94 751.46,1224.9 752.047,1225.05 752.633,1223.78 753.22,1225.27 753.806,1223.86 754.392,1225.12 754.979,1227.91 755.565,1226.29 756.152,1226.47 756.738,1223.66 757.324,1222.4 757.911,1222.31 758.497,1222.31 759.084,1223.81 759.67,1223.46 760.257,1223.22 760.843,1224.21 761.429,1222.73 762.016,1221.24 762.602,1225.52 763.189,1222.95 763.775,1221.64 764.361,1222.85 764.948,1225.66 765.534,1227.94 766.121,1227.58 766.707,1228.33 767.293,1229.31 767.88,1226.15 768.466,1224.97 769.053,1223.35 769.639,1221.94 770.226,1221.9 770.812,1222.01 771.398,1224.71 771.985,1223.19 772.571,1223.23 773.158,1223.06 773.744,1224.52 774.33,1227.27 774.917,1227.14 775.503,1228.12 776.09,1227.85 776.676,1230.48 777.262,1229.86 777.849,1228.15 778.435,1229.22 779.022,1227.41 779.608,1227.17 780.195,1227.05 780.781,1225.54 781.367,1225.41 781.954,1226.77 782.54,1226.53 783.127,1229.22 783.713,1228.89 784.299,1229.85 784.886,1231.07 785.472,1230.45 786.059,1231.23 786.645,1229.38 787.232,1226.36 787.818,1226.29 788.404,1224.43 788.991,1223.24 789.577,1224.56 790.164,1224.35 790.75,1221.42 791.336,1220.18 791.923,1220.3 792.509,1221.82 793.096,1222 793.682,1219.25 794.268,1219.49 794.855,1220.96 795.441,1220.89 796.028,1219.4 796.614,1216.85 797.201,1217.28 797.787,1219.11 798.373,1215.12 798.96,1218.57 799.546,1218.8 800.133,1217.75 800.719,1216.74 801.305,1214.19 801.892,1213.22 802.478,1218.02 803.065,1218.31 803.651,1217.25 804.237,1218.69 804.824,1219.92 805.41,1218.64 805.997,1217.39 806.583,1216.19 807.17,1216.63 807.756,1217.19 808.342,1217.26 808.929,1217.4 809.515,1216.21 810.102,1215.39 810.688,1215.95 811.274,1214.9 811.861,1215.15 812.447,1212.95 813.034,1219.05 813.62,1216.53 814.206,1219.64 814.793,1221.05 815.379,1225.03 815.966,1226.19 816.552,1224.77 817.139,1225.9 817.725,1228.41 818.311,1224.11 818.898,1223.85 819.484,1225.12 820.071,1224.9 820.657,1224.92 821.243,1223.76 821.83,1222.05 822.416,1223.59 823.003,1223.52 823.589,1224.98 824.175,1231.73 824.762,1229.99 825.348,1227.92 825.935,1226.47 826.521,1224.73 827.108,1224.45 827.694,1224.34 828.28,1226.79 828.867,1226.37 829.453,1227.7 830.04,1224.82 830.626,1223.29 831.212,1220.46 831.799,1219.18 832.385,1220.47 832.972,1220.45 833.558,1220.42 834.145,1219.3 834.731,1219.28 835.317,1219.56 835.904,1216.76 836.49,1215.38 837.077,1216.99 837.663,1218.6 838.249,1221.54 838.836,1221.64 839.422,1221.59 840.009,1222.01 840.595,1220.65 841.181,1222.28 841.768,1222.13 842.354,1221.93 842.941,1219.15 843.527,1218.89 844.114,1219.23 844.7,1218 845.286,1215.39 845.873,1217.17 846.459,1217.44 847.046,1216.4 847.632,1217.91 848.218,1219.57 848.805,1221.05 849.391,1221.27 849.978,1222.36 850.564,1224.98 851.15,1226.09 851.737,1226.02 852.323,1226.87 852.91,1228.1 853.496,1229.33 854.083,1227.63 854.669,1225.94 855.255,1223.06 855.842,1224.16 856.428,1223.94 857.015,1223.86 857.601,1220.85 858.187,1220.82 858.774,1220.84 859.36,1224.94 859.947,1226.37 860.533,1224.86 861.119,1221.93 861.706,1224.55 862.292,1224.38 862.879,1223.16 863.465,1224.31 864.052,1224.5 864.638,1226.93 865.224,1225.35 865.811,1226.66 866.397,1226.38 866.984,1227.68 867.57,1228.64 868.156,1225.46 868.743,1223.88 869.329,1223.82 869.916,1226.5 870.502,1224.85 871.089,1224.68 871.675,1226.1 872.261,1224.47 872.848,1222.76 873.434,1219.95 874.021,1223.94 874.607,1225.17 875.193,1226.18 875.78,1226.03 876.366,1224.31 876.953,1224.4 877.539,1221.34 878.125,1222.55 878.712,1225.39 879.298,1223.91 879.885,1222.53 880.471,1221.17 881.058,1222.43 881.644,1221.13 882.23,1221.23 882.817,1219.78 883.403,1218.68 883.99,1218.69 884.576,1218.78 885.162,1218.81 885.749,1220.4 886.335,1217.89 886.922,1219.65 887.508,1218.43 888.094,1224.01 888.681,1221.35 889.267,1219.75 889.854,1215.73 890.44,1213.37 891.027,1220.48 891.613,1221.73 892.199,1221.62 892.786,1217.18 893.372,1214.66 893.959,1213.89 894.545,1217.35 895.131,1221.8 895.718,1220.5 896.304,1220.5 896.891,1220.5 897.477,1221.94 898.063,1220.63 898.65,1221.9 899.236,1219.09 899.823,1219.41 900.409,1215.34 900.996,1218.24 901.582,1218.37 902.168,1214.44 902.755,1217.67 903.341,1219.32 903.928,1218.2 904.514,1217.22 905.1,1216.33 905.687,1218.23 906.273,1219.7 906.86,1219.95 907.446,1222.68 908.032,1222.71 908.619,1219.96 909.205,1219.92 909.792,1218.58 910.378,1220.1 910.965,1217.48 911.551,1219.1 912.137,1219.15 912.724,1219.14 913.31,1219.18 913.897,1219.45 914.483,1219.59 915.069,1222.53 915.656,1223.79 916.242,1223.72 916.829,1224.97 917.415,1226.27 918.002,1227.58 918.588,1225.94 919.174,1227.05 919.761,1225.25 920.347,1226.65 920.934,1228.75 921.52,1229.63 922.106,1227.85 922.693,1226.1 923.279,1224.63 923.866,1227.18 924.452,1226.83 925.038,1229.18 925.625,1227.12 926.211,1229.36 926.798,1229 927.384,1227.28 927.971,1231.1 928.557,1227.75 929.143,1225.83 929.73,1226.91 930.316,1227.95 930.903,1227.45 931.489,1226.86 932.075,1222.48 932.662,1222.35 933.248,1220.95 933.835,1222.13 934.421,1221.85 935.007,1221.81 935.594,1220.21 936.18,1221.86 936.767,1221.92 937.353,1220.61 937.94,1224.54 938.526,1224.33 939.112,1224.04 939.699,1219.6 940.285,1218.31 940.872,1217.04 941.458,1217.15 942.044,1217.21 942.631,1217.45 943.217,1218.99 943.804,1223.29 944.39,1224.39 944.976,1224.14 945.563,1225.35 946.149,1225.22 946.736,1226.35 947.322,1225.85 947.909,1225.83 948.495,1225.53 949.081,1225.31 949.668,1220.79 950.254,1217.73 950.841,1216.54 951.427,1216.56 952.013,1212.46 952.6,1214.04 953.186,1214.35 953.773,1213.38 954.359,1215.01 954.945,1215.57 955.532,1215.75 956.118,1217.2 956.705,1220.11 957.291,1215.9 957.878,1219.01 958.464,1216.54 959.05,1216.64 959.637,1216.83 960.223,1219.9 960.81,1217.53 961.396,1219.05 961.982,1220.72 962.569,1223.46 963.155,1224.77 963.742,1225.8 964.328,1221.4 964.915,1221.41 965.501,1220.3 966.087,1219.04 966.674,1220.61 967.26,1219.45 967.847,1218.29 968.433,1220.01 969.019,1218.57 969.606,1215.76 970.192,1217.6 970.779,1216.31 971.365,1215.3 971.951,1217.05 972.538,1212.97 973.124,1213.44 973.711,1212.74 974.297,1211.76 974.884,1213.75 975.47,1214.32 976.056,1213.32 976.643,1210.99 977.229,1212.92 977.816,1214.71 978.402,1213.64 978.988,1216.72 979.575,1215.61 980.161,1218.54 980.748,1218.95 981.334,1216.01 981.92,1216.45 982.507,1212.78 983.093,1213.02 983.68,1212.1 984.266,1216.88 984.853,1215.88 985.439,1214.78 986.025,1212.16 986.612,1212.62 987.198,1212.93 987.785,1209.29 988.371,1209.97 988.957,1210.44 989.544,1212.28 990.13,1214.47 990.717,1213.58 991.303,1215.1 991.889,1215.62 992.476,1217.37 993.062,1216.7 993.649,1215.66 994.235,1216.21 994.822,1215.26 995.408,1215.3 995.994,1214.19 996.581,1213.42 997.167,1216.66 997.754,1217.81 998.34,1217.88 998.926,1219.71 999.513,1220.95 1000.1,1222.46 1000.69,1222.23 1001.27,1222.1 1001.86,1220.52 1002.44,1222.17 1003.03,1225.1 1003.62,1226.11 1004.2,1225.89 1004.79,1228.47 1005.38,1226.65 1005.96,1226.46 1006.55,1226.28 1007.14,1228.42 1007.72,1226.88 1008.31,1227.87 1008.9,1228.73 1009.48,1226.84 1010.07,1227.9 1010.65,1227.46 1011.24,1224.26 1011.83,1225.44 1012.41,1223.74 1013,1224.77 1013.59,1223.21 1014.17,1221.57 1014.76,1224.04 1015.35,1225.52 1015.93,1226.76 1016.52,1225.3 1017.11,1223.48 1017.69,1223.13 1018.28,1221.52 1018.86,1221.26 1019.45,1219.94 1020.04,1217.4 1020.62,1221.53 1021.21,1221.51 1021.8,1224.22 1022.38,1223.88 1022.97,1223.71 1023.56,1226.25 1024.14,1224.41 1024.73,1224.46 1025.32,1224.14 1025.9,1224.11 1026.49,1223.79 1027.07,1223.32 1027.66,1223.13 1028.25,1224.29 1028.83,1224.05 1029.42,1223.86 1030.01,1223.49 1030.59,1221.78 1031.18,1220.31 1031.77,1220.28 1032.35,1220.14 1032.94,1221.42 1033.52,1218.64 1034.11,1218.49 1034.7,1218.52 1035.28,1220.09 1035.87,1218.85 1036.46,1218.75 1037.04,1217.31 1037.63,1217.71 1038.22,1217.82 1038.8,1215.28 1039.39,1216.87 1039.98,1216.87 1040.56,1221.11 1041.15,1219.37 1041.73,1220.54 1042.32,1220.28 1042.91,1221.63 1043.49,1220.04 1044.08,1218.54 1044.67,1221.01 1045.25,1220.86 1045.84,1220.56 1046.43,1221.91 1047.01,1223.29 1047.6,1222.83 1048.19,1223.8 1048.77,1223.45 1049.36,1220.42 1049.94,1221.59 1050.53,1219.96 1051.12,1220.17 1051.7,1218.63 1052.29,1219.85 1052.88,1219.66 1053.46,1220.77 1054.05,1220.38 1054.64,1221.79 1055.22,1220.71 1055.81,1219.35 1056.39,1216.69 1056.98,1218.13 1057.57,1216.81 1058.15,1216.78 1058.74,1216.72 1059.33,1212.89 1059.91,1213.32 1060.5,1216.66 1061.09,1215.44 1061.67,1215.64 1062.26,1217.38 1062.85,1214.77 1063.43,1217.77 1064.02,1218.05 1064.6,1219.26 1065.19,1223.01 1065.78,1220.39 1066.36,1217.93 1066.95,1222.14 1067.54,1223.45 1068.12,1223.55 1068.71,1224.75 1069.3,1225.96 1069.88,1227.01 1070.47,1221.34 1071.06,1218.67 1071.64,1217.7 1072.23,1221.99 1072.81,1221.97 1073.4,1220.56 1073.99,1220.64 1074.57,1223.59 1075.16,1224.53 1075.75,1224.19 1076.33,1224.02 1076.92,1223.9 1077.51,1225.13 1078.09,1223.74 1078.68,1223.46 1079.26,1217.95 1079.85,1219.72 1080.44,1219.48 1081.02,1225.09 1081.61,1224.86 1082.2,1223.13 1082.78,1221.46 1083.37,1220.04 1083.96,1220.1 1084.54,1215.72 1085.13,1218.87 1085.72,1220.33 1086.3,1219.09 1086.89,1220.75 1087.47,1222.22 1088.06,1216.3 1088.65,1218.06 1089.23,1216.78 1089.82,1215.94 1090.41,1220.33 1090.99,1218.88 1091.58,1221.56 1092.17,1222.77 1092.75,1220.99 1093.34,1220.9 1093.93,1219.53 1094.51,1217.95 1095.1,1216.79 1095.68,1218.61 1096.27,1221.42 1096.86,1222.56 1097.44,1222.4 1098.03,1220.9 1098.62,1220.65 1099.2,1220.74 1099.79,1219.27 1100.38,1220.34 1100.96,1222.87 1101.55,1219.99 1102.14,1221.39 1102.72,1224.14 1103.31,1226.58 1103.89,1227.39 1104.48,1224.13 1105.07,1224.26 1105.65,1225.45 1106.24,1225.16 1106.83,1224.62 1107.41,1224.34 1108,1226.95 1108.59,1226.59 1109.17,1227.37 1109.76,1227.17 1110.34,1227.9 1110.93,1227.54 1111.52,1225.7 1112.1,1228.29 1112.69,1227.94 1113.28,1227.58 1113.86,1228.45 1114.45,1228.16 1115.04,1226.34 1115.62,1227.01 1116.21,1229.05 1116.8,1228.59 1117.38,1223.78 1117.97,1223.68 1118.55,1226.19 1119.14,1224.49 1119.73,1224.11 1120.31,1225.26 1120.9,1223.57 1121.49,1223.12 1122.07,1221.59 1122.66,1222.81 1123.25,1223.11 1123.83,1221.75 1124.42,1220.42 1125.01,1218.77 1125.59,1218.74 1126.18,1220.19 1126.76,1220.21 1127.35,1215.99 1127.94,1217.44 1128.52,1220.47 1129.11,1225.62 1129.7,1225.11 1130.28,1224.81 1130.87,1223.47 1131.46,1224.79 1132.04,1226.14 1132.63,1224.72 1133.21,1224.61 1133.8,1224.41 1134.39,1223.07 1134.97,1220.22 1135.56,1220.28 1136.15,1220.25 1136.73,1218.72 1137.32,1220.3 1137.91,1220.41 1138.49,1222.09 1139.08,1220.61 1139.67,1218.04 1140.25,1218.24 1140.84,1215.52 1141.42,1214.32 1142.01,1214.31 1142.6,1212.93 1143.18,1211.9 1143.77,1213.92 1144.36,1214.21 1144.94,1210.01 1145.53,1210.82 1146.12,1212.7 1146.7,1212.95 1147.29,1211.93 1147.88,1213.41 1148.46,1213.71 1149.05,1213.88 1149.63,1214.08 1150.22,1213.12 1150.81,1211.9 1151.39,1209.61 1151.98,1211.74 1152.57,1213.59 1153.15,1213.85 1153.74,1212.89 1154.33,1214.67 1154.91,1216.09 1155.5,1216.51 1156.09,1217.23 1156.67,1214.77 1157.26,1215.16 1157.84,1216.73 1158.43,1215.51 1159.02,1217.09 1159.6,1215.94 1160.19,1216.58 1160.78,1215.5 1161.36,1215.6 1161.95,1215.77 1162.54,1216.01 1163.12,1216.39 1163.71,1216.41 1164.29,1220.71 1164.88,1224.44 1165.47,1226.99 1166.05,1226.71 1166.64,1226.55 1167.23,1223.38 1167.81,1223.28 1168.4,1221.87 1168.99,1221.73 1169.57,1218.75 1170.16,1217.53 1170.75,1217.72 1171.33,1215.44 1171.92,1215.81 1172.5,1217.64 1173.09,1217.91 1173.68,1219.34 1174.26,1218.1 1174.85,1216.68 1175.44,1216.88 1176.02,1211.67 1176.61,1209.11 1177.2,1208.19 1177.78,1210.36 1178.37,1208.37 1178.96,1209.16 1179.54,1211.15 1180.13,1211.54 1180.71,1214.59 1181.3,1214.74 1181.89,1216.23 1182.47,1216.25 1183.06,1218.06 1183.65,1218.28 1184.23,1217.03 1184.82,1218.65 1185.41,1219.86 1185.99,1220.58 1186.58,1222 1187.16,1217.43 1187.75,1220.06 1188.34,1220.05 1188.92,1218.82 1189.51,1217.48 1190.1,1218.87 1190.68,1219.04 1191.27,1217.74 1191.86,1220.44 1192.44,1220.6 1193.03,1219.36 1193.62,1219.31 1194.2,1220.95 1194.79,1222.1 1195.37,1223.21 1195.96,1222.57 1196.55,1222.17 1197.13,1223.47 1197.72,1221.96 1198.31,1217.86 1198.89,1218.19 1199.48,1218.3 1200.07,1218.27 1200.65,1218.33 1201.24,1219.84 1201.83,1221.15 1202.41,1217.98 1203,1219.65 1203.58,1219.71 1204.17,1221.18 1204.76,1221.03 1205.34,1222.25 1205.93,1220.75 1206.52,1221.86 1207.1,1218.9 1207.69,1220.22 1208.28,1219.82 1208.86,1219.6 1209.45,1222.37 1210.03,1224.94 1210.62,1224.66 1211.21,1221.61 1211.79,1219.88 1212.38,1218.4 1212.97,1218.41 1213.55,1219.85 1214.14,1219.94 1214.73,1218.65 1215.31,1216.04 1215.9,1218.89 1216.49,1218.83 1217.07,1217.35 1217.66,1216.18 1218.24,1219.4 1218.83,1218.04 1219.42,1219.6 1220,1220.85 1220.59,1222.15 1221.18,1223.32 1221.76,1223.38 1222.35,1221.59 1222.94,1221.48 1223.52,1217 1224.11,1218.35 1224.7,1219.79 1225.28,1221.27 1225.87,1222.7 1226.45,1221.33 1227.04,1222.77 1227.63,1222.67 1228.21,1222.93 1228.8,1223.85 1229.39,1222.54 1229.97,1221.22 1230.56,1222.69 1231.15,1219.85 1231.73,1219.6 1232.32,1218.12 1232.91,1219.61 1233.49,1218.21 1234.08,1218.48 1234.66,1217.26 1235.25,1217.48 1235.84,1217.79 1236.42,1218.22 1237.01,1219.45 1237.6,1219.38 1238.18,1216.52 1238.77,1218.01 1239.36,1218.1 1239.94,1222.01 1240.53,1221.88 1241.11,1224.28 1241.7,1226.89 1242.29,1224.77 1242.87,1224.43 1243.46,1222.81 1244.05,1222.6 1244.63,1220.16 1245.22,1221.52 1245.81,1223.09 1246.39,1224.26 1246.98,1224.18 1247.57,1225.36 1248.15,1225.09 1248.74,1222.03 1249.32,1221.87 1249.91,1224.42 1250.5,1228.11 1251.08,1229.21 1251.67,1228.9 1252.26,1224.16 1252.84,1224.02 1253.43,1223.91 1254.02,1222.14 1254.6,1220.55 1255.19,1223.01 1255.78,1224.03 1256.36,1225.51 1256.95,1226.39 1257.53,1225.11 1258.12,1225.96 1258.71,1222.91 1259.29,1223.91 1259.88,1225.22 1260.47,1224.88 1261.05,1224.73 1261.64,1220.12 1262.23,1221.67 1262.81,1220.17 1263.4,1219.03 1263.98,1220.71 1264.57,1222.13 1265.16,1221.85 1265.74,1224.36 1266.33,1223.92 1266.92,1225.27 1267.5,1222.37 1268.09,1220.81 1268.68,1218.11 1269.26,1218.36 1269.85,1217.12 1270.44,1215.85 1271.02,1215.86 1271.61,1214.42 1272.19,1216.02 1272.78,1218.74 1273.37,1218.77 1273.95,1217.36 1274.54,1217.86 1275.13,1217.47 1275.71,1217.51 1276.3,1216.3 1276.89,1215.02 1277.47,1215.47 1278.06,1217.08 1278.65,1217.16 1279.23,1217.18 1279.82,1216.1 1280.4,1217.42 1280.99,1217.29 1281.58,1215.98 1282.16,1215.4 1282.75,1214.38 1283.34,1214.46 1283.92,1215.06 1284.51,1215.31 1285.1,1217.15 1285.68,1218.52 1286.27,1215.73 1286.86,1215.65 1287.44,1215.85 1288.03,1217.28 1288.61,1218.96 1289.2,1216.28 1289.79,1217.94 1290.37,1218.22 1290.96,1215.55 1291.55,1220.1 1292.13,1224.38 1292.72,1224.26 1293.31,1226.56 1293.89,1223.47 1294.48,1224.84 1295.06,1220.74 1295.65,1220.76 1296.24,1221.11 1296.82,1218.36 1297.41,1219.71 1298,1219.83 1298.58,1220.09 1299.17,1218.73 1299.76,1218.67 1300.34,1220.12 1300.93,1218.62 1301.52,1221.69 1302.1,1223.96 1302.69,1226.15 1303.27,1224.31 1303.86,1224.33 1304.45,1222.84 1305.03,1223.01 1305.62,1224.05 1306.21,1222.59 1306.79,1221.18 1307.38,1220.8 1307.97,1222.1 1308.55,1224.69 1309.14,1222.89 1309.73,1222.53 1310.31,1222.28 1310.9,1222.17 1311.48,1224.45 1312.07,1228.26 1312.66,1223.73 1313.24,1224.79 1313.83,1225.75 1314.42,1224.24 1315,1227.89 1315.59,1226.37 1316.18,1224.83 1316.76,1224.65 1317.35,1222.92 1317.93,1225.19 1318.52,1221.98 1319.11,1223.09 1319.69,1223.9 1320.28,1227.83 1320.87,1228.44 1321.45,1226.53 1322.04,1221.81 1322.63,1224.55 1323.21,1224.35 1323.8,1219.87 1324.39,1222.52 1324.97,1222.81 1325.56,1224.12 1326.14,1223.91 1326.73,1224.55 1327.32,1223.13 1327.9,1220.19 1328.49,1220.07 1329.08,1222.6 1329.66,1222.18 1330.25,1222.15 1330.84,1222.18 1331.42,1223.37 1332.01,1220.4 1332.6,1223.2 1333.18,1223.3 1333.77,1223.24 1334.35,1224.6 1334.94,1226.06 1335.53,1225.72 1336.11,1226.7 1336.7,1226.28 1337.29,1224.31 1337.87,1221.23 1338.46,1220.92 1339.05,1217.97 1339.63,1215.77 1340.22,1215.96 1340.8,1214.62 1341.39,1213.62 1341.98,1212.58 1342.56,1211.33 1343.15,1208.67 1343.74,1207.95 1344.32,1208.54 1344.91,1215.61 1345.5,1214.51 1346.08,1211.87 1346.67,1213.9 1347.26,1212.74 1347.84,1214.51 1348.43,1214.82 1349.01,1213.84 1349.6,1212.88 1350.19,1211.96 1350.77,1213.63 1351.36,1215.32 1351.95,1214.13 1352.53,1215.86 1353.12,1214.82 1353.71,1216.43 1354.29,1213.93 1354.88,1214.15 1355.47,1217.32 1356.05,1220.26 1356.64,1217.27 1357.22,1221.64 1357.81,1221.51 1358.4,1218.59 1358.98,1219.86 1359.57,1219.83 1360.16,1219.9 1360.74,1221.04 1361.33,1216.72 1361.92,1214.05 1362.5,1214.77 1363.09,1217.77 1363.68,1217.84 1364.26,1218.07 1364.85,1218.2 1365.43,1216.72 1366.02,1220.44 1366.61,1221.78 1367.19,1223.05 1367.78,1223.15 1368.37,1220.13 1368.95,1220.34 1369.54,1221.62 1370.13,1222.79 1370.71,1222.44 1371.3,1220.83 1371.88,1215.56 1372.47,1214.64 1373.06,1216.28 1373.64,1218.02 1374.23,1217.09 1374.82,1220 1375.4,1218.97 1375.99,1221.61 1376.58,1221.48 1377.16,1221.56 1377.75,1221.51 1378.34,1220.28 1378.92,1218.82 1379.51,1218.68 1380.09,1219.98 1380.68,1221.19 1381.27,1222.56 1381.85,1225.19 1382.44,1224.87 1383.03,1224.38 1383.61,1225.39 1384.2,1223.5 1384.79,1220.71 1385.37,1218.3 1385.96,1221.08 1386.55,1219.82 1387.13,1220.02 1387.72,1218.82 1388.3,1217.53 1388.89,1219.13 1389.48,1217.71 1390.06,1215.06 1390.65,1219.43 1391.24,1216.3 1391.82,1213.86 1392.41,1212.56 1393,1212.71 1393.58,1210.19 1394.17,1212.14 1394.75,1212.93 1395.34,1216.05 1395.93,1215.22 1396.51,1215.37 1397.1,1214.29 1397.69,1214.69 1398.27,1215.18 1398.86,1212.62 1399.45,1215.67 1400.03,1218.7 1400.62,1218.5 1401.21,1218.68 1401.79,1217.15 1402.38,1217.23 1402.96,1220.2 1403.55,1220.2 1404.14,1220.09 1404.72,1220.26 1405.31,1218.82 1405.9,1217.37 1406.48,1220.28 1407.07,1221.62 1407.66,1221.68 1408.24,1220.27 1408.83,1221.42 1409.42,1224.35 1410,1224.18 1410.59,1225.38 1411.17,1220.87 1411.76,1219.35 1412.35,1219.33 1412.93,1220.84 1413.52,1220.58 1414.11,1219.48 1414.69,1220.91 1415.28,1222.27 1415.87,1224.57 1416.45,1224.51 1417.04,1224.15 1417.63,1225.3 1418.21,1226.48 1418.8,1226.24 1419.38,1224.58 1419.97,1228.65 1420.56,1227.95 1421.14,1227.58 1421.73,1228.49 1422.32,1228.23 1422.9,1227.83 1423.49,1225.96 1424.08,1227.06 1424.66,1226.9 1425.25,1228.81 1425.83,1226.87 1426.42,1224.1 1427.01,1222.24 1427.59,1220.92 1428.18,1219.47 1428.77,1216.88 1429.35,1218.44 1429.94,1219.62 1430.53,1219.51 1431.11,1219.49 1431.7,1220.75 1432.29,1226.29 1432.87,1227.48 1433.46,1225.97 1434.04,1225.67 1434.63,1225.37 1435.22,1222.58 1435.8,1220.85 1436.39,1221.2 1436.98,1221 1437.56,1221.06 1438.15,1220.98 1438.74,1223.45 1439.32,1224.54 1439.91,1227.07 1440.5,1227.96 1441.08,1226.46 1441.67,1226.16 1442.25,1225.96 1442.84,1225.48 1443.43,1223.63 1444.01,1227.11 1444.6,1224.15 1445.19,1224.12 1445.77,1225.18 1446.36,1223.46 1446.95,1220.34 1447.53,1219.98 1448.12,1218.69 1448.7,1217.69 1449.29,1219.21 1449.88,1220.66 1450.46,1217.58 1451.05,1217.35 1451.64,1217.54 1452.22,1217.46 1452.81,1217.53 1453.4,1214.84 1453.98,1216.65 1454.57,1216.65 1455.16,1213.75 1455.74,1215.41 1456.33,1215.37 1456.91,1217.02 1457.5,1217.47 1458.09,1216.36 1458.67,1219.35 1459.26,1220.89 1459.85,1219.33 1460.43,1223.66 1461.02,1222.17 1461.61,1221.79 1462.19,1221.81 1462.78,1221.87 1463.37,1221.77 1463.95,1221.48 1464.54,1221.67 1465.12,1223.24 1465.71,1224.32 1466.3,1222.6 1466.88,1222.6 1467.47,1223.83 1468.06,1223.45 1468.64,1221.81 1469.23,1223.27 1469.82,1224.42 1470.4,1221.48 1470.99,1219.99 1471.57,1219.81 1472.16,1221.37 1472.75,1219.94 1473.33,1223.98 1473.92,1221.15 1474.51,1221.03 1475.09,1225.14 1475.68,1223.74 1476.27,1223.43 1476.85,1225.87 1477.44,1223.18 1478.03,1221.51 1478.61,1221.29 1479.2,1219.91 1479.78,1219.78 1480.37,1218.33 1480.96,1220.96 1481.54,1222.01 1482.13,1220.51 1482.72,1220.4 1483.3,1221.86 1483.89,1220.39 1484.48,1218.95 1485.06,1217.37 1485.65,1217.68 1486.24,1211.93 1486.82,1211.08 1487.41,1210.11 1487.99,1209.3 1488.58,1209.77 1489.17,1207.58 1489.75,1209.55 1490.34,1210.17 1490.93,1207.86 1491.51,1207.28 1492.1,1206.91 1492.69,1205.24 1493.27,1206.09 1493.86,1206.89 1494.45,1210.19 1495.03,1209.46 1495.62,1210.18 1496.2,1212.13 1496.79,1214.3 1497.38,1213.51 1497.96,1213.81 1498.55,1214.49 1499.14,1213.7 1499.72,1213.98 1500.31,1215.46 1500.9,1218.37 1501.48,1221 1502.07,1219.31 1502.65,1218.11 1503.24,1222.47 1503.83,1220.92 1504.41,1219.39 1505,1219.25 1505.59,1219.1 1506.17,1220.64 1506.76,1222.03 1507.35,1221.9 1507.93,1220.58 1508.52,1215.2 1509.11,1215.9 1509.69,1214.79 1510.28,1215.03 1510.86,1216.79 1511.45,1217.04 1512.04,1218.91 1512.62,1220.33 1513.21,1221.66 1513.8,1221.78 1514.38,1221.55 1514.97,1220.15 1515.56,1222.94 1516.14,1220.28 1516.73,1221.64 1517.32,1221.79 1517.9,1221.84 1518.49,1220.71 1519.07,1222.15 1519.66,1223.47 1520.25,1222.08 1520.83,1221.7 1521.42,1219.91 1522.01,1218.53 1522.59,1220.4 1523.18,1220.52 1523.77,1220.4 1524.35,1220.45 1524.94,1220.51 1525.52,1221.8 1526.11,1221.98 1526.7,1221.7 1527.28,1221.55 1527.87,1221.42 1528.46,1220.17 1529.04,1221.75 1529.63,1219.94 1530.22,1220 1530.8,1218.81 1531.39,1220.01 1531.98,1221.35 1532.56,1221.27 1533.15,1221.03 1533.73,1222.64 1534.32,1221.1 1534.91,1218.28 1535.49,1218.19 1536.08,1218.45 1536.67,1218.41 1537.25,1216.86 1537.84,1217.15 1538.43,1218.62 1539.01,1218.86 1539.6,1220.34 1540.19,1220.34 1540.77,1222.89 1541.36,1222.9 1541.94,1223.02 1542.53,1220.01 1543.12,1217.17 1543.7,1218.8 1544.29,1221.59 1544.88,1223.99 1545.46,1223.79 1546.05,1222.03 1546.64,1222.1 1547.22,1223.2 1547.81,1221.65 1548.4,1215.92 1548.98,1216.41 1549.57,1214.94 1550.15,1216.6 1550.74,1214.24 1551.33,1214.56 1551.91,1214.5 1552.5,1217.9 1553.09,1216.36 1553.67,1219.25 1554.26,1218.12 1554.85,1216.75 1555.43,1215.49 1556.02,1217.1 1556.6,1215.9 1557.19,1216.21 1557.78,1216.6 1558.36,1218.15 1558.95,1218.4 1559.54,1216.99 1560.12,1215.77 1560.71,1216.3 1561.3,1216.48 1561.88,1216.42 1562.47,1215.39 1563.06,1217.11 1563.64,1218.32 1564.23,1215.84 1564.81,1220.04 1565.4,1222.65 1565.99,1222.43 1566.57,1226.26 1567.16,1228.76 1567.75,1227.1 1568.33,1226.94 1568.92,1225.46 1569.51,1224.05 1570.09,1225.11 1570.68,1226.14 1571.27,1225.9 1571.85,1223.93 1572.44,1223.84 1573.02,1223.59 1573.61,1226.1 1574.2,1225.76 1574.78,1223.79 1575.37,1222.1 1575.96,1221.86 1576.54,1221.91 1577.13,1222.98 1577.72,1224.27 1578.3,1225.12 1578.89,1227.12 1579.47,1225.46 1580.06,1222.21 1580.65,1223.16 1581.23,1225.39 1581.82,1223.66 1582.41,1223.45 1582.99,1224.68 1583.58,1221.8 1584.17,1220.3 1584.75,1220.16 1585.34,1219.87 1585.93,1222.49 1586.51,1222.29 1587.1,1220.95 1587.68,1222.37 1588.27,1222.11 1588.86,1221.76 1589.44,1221.55 1590.03,1222.48 1590.62,1219.59 1591.2,1218.05 1591.79,1216.79 1592.38,1215.7 1592.96,1216.02 1593.55,1213.32 1594.14,1214.77 1594.72,1216.53 1595.31,1217 1595.89,1219.8 1596.48,1219.54 1597.07,1222.41 1597.65,1219.54 1598.24,1221.08 1598.83,1219.53 1599.41,1219.5 1600,1219.4 1600.59,1219.32 1601.17,1219.09 1601.76,1218.8 1602.34,1218.86 1602.93,1220.09 1603.52,1224.2 1604.1,1221.06 1604.69,1219.51 1605.28,1219.56 1605.86,1222.53 1606.45,1223.82 1607.04,1222.56 1607.62,1221.07 1608.21,1225.07 1608.8,1224.9 1609.38,1223.15 1609.97,1225.71 1610.55,1222.81 1611.14,1223.84 1611.73,1218.25 1612.31,1219.5 1612.9,1219.5 1613.49,1216.61 1614.07,1215.47 1614.66,1217.56 1615.25,1215.02 1615.83,1216.43 1616.42,1216.45 1617.01,1213.79 1617.59,1211.55 1618.18,1213.32 1618.76,1215.03 1619.35,1215.29 1619.94,1215.59 1620.52,1216.75 1621.11,1218.21 1621.7,1218.43 1622.28,1215.96 1622.87,1216.04 1623.46,1218.95 1624.04,1219 1624.63,1219.28 1625.22,1216.64 1625.8,1217.98 1626.39,1220.44 1626.97,1217.78 1627.56,1219.42 1628.15,1217.88 1628.73,1215.22 1629.32,1215.51 1629.91,1214.46 1630.49,1213.6 1631.08,1215.24 1631.67,1218.08 1632.25,1219.41 1632.84,1222.2 1633.42,1222.2 1634.01,1223.46 1634.6,1220.84 1635.18,1220.94 1635.77,1220.75 1636.36,1220.9 1636.94,1220.98 1637.53,1219.46 1638.12,1219.43 1638.7,1219.72 1639.29,1217.18 1639.88,1220.15 1640.46,1218.75 1641.05,1217.48 1641.63,1220.21 1642.22,1221.67 1642.81,1223.12 1643.39,1222.98 1643.98,1223.85 1644.57,1223.58 1645.15,1223.49 1645.74,1219.37 1646.33,1219.16 1646.91,1218.06 1647.5,1221.09 1648.09,1219.68 1648.67,1219.76 1649.26,1221.01 1649.84,1219.53 1650.43,1222.29 1651.02,1220.76 1651.6,1218.35 1652.19,1219.62 1652.78,1219.55 1653.36,1220.82 1653.95,1219.03 1654.54,1217.66 1655.12,1217.93 1655.71,1217.87 1656.29,1219.28 1656.88,1216.4 1657.47,1214.28 1658.05,1213.23 1658.64,1212.09 1659.23,1212.47 1659.81,1214.05 1660.4,1214.42 1660.99,1213.62 1661.57,1214.02 1662.16,1215.82 1662.75,1217.52 1663.33,1219.18 1663.92,1217.9 1664.5,1219.19 1665.09,1215.17 1665.68,1216.83 1666.26,1218.18 1666.85,1217.18 1667.44,1218.99 1668.02,1217.68 1668.61,1216.34 1669.2,1216.54 1669.78,1213.78 1670.37,1211.23 1670.96,1213.03 1671.54,1213.4 1672.13,1216.56 1672.71,1218.22 1673.3,1219.91 1673.89,1220.04 1674.47,1221.71 1675.06,1218.84 1675.65,1220.14 1676.23,1223.01 1676.82,1222.7 1677.41,1221.33 1677.99,1218.42 1678.58,1217.21 1679.17,1215.72 1679.75,1215.84 1680.34,1213.25 1680.92,1219.01 1681.51,1219.04 1682.1,1219.12 1682.68,1221.74 1683.27,1224.47 1683.86,1226.8 1684.44,1225.1 1685.03,1224.74 1685.62,1225.94 1686.2,1222.71 1686.79,1222.58 1687.37,1219.58 1687.96,1220.74 1688.55,1219.02 1689.13,1219.17 1689.72,1217.68 1690.31,1217.64 1690.89,1217.77 1691.48,1222.13 1692.07,1222.17 1692.65,1223.34 1693.24,1221.62 1693.83,1219.84 1694.41,1223.76 1695,1222.28 1695.58,1220.98 1696.17,1221.94 1696.76,1221.85 1697.34,1220.32 1697.93,1221.57 1698.52,1218.99 1699.1,1220.27 1699.69,1224.58 1700.28,1224.2 1700.86,1223.78 1701.45,1223.69 1702.04,1224.65 1702.62,1222.98 1703.21,1224.2 1703.79,1222.37 1704.38,1223.37 1704.97,1224.44 1705.55,1222.84 1706.14,1222.37 1706.73,1222.16 1707.31,1223.23 1707.9,1223.25 1708.49,1221.97 1709.07,1223.17 1709.66,1221.55 1710.24,1220.1 1710.83,1221.11 1711.42,1219.72 1712,1219.58 1712.59,1220.92 1713.18,1217.71 1713.76,1222.02 1714.35,1219.06 1714.94,1216.41 1715.52,1220.53 1716.11,1217.65 1716.7,1216.43 1717.28,1216.61 1717.87,1211.22 1718.45,1210.2 1719.04,1208.35 1719.63,1208.87 1720.21,1206.61 1720.8,1210.3 1721.39,1211.23 1721.97,1210.3 1722.56,1209.57 1723.15,1208.83 1723.73,1207.09 1724.32,1206.55 1724.91,1208.34 1725.49,1210.61 1726.08,1210.98 1726.66,1212.73 1727.25,1214.37 1727.84,1214.75 1728.42,1216.44 1729.01,1216.81 1729.6,1218.31 1730.18,1218.49 1730.77,1220.17 1731.36,1220.04 1731.94,1220.52 1732.53,1223.12 1733.11,1221.73 1733.7,1225.33 1734.29,1223.75 1734.87,1223.74 1735.46,1223.39 1736.05,1224.53 1736.63,1224.04 1737.22,1226.51 1737.81,1227.38 1738.39,1226.7 1738.98,1227.8 1739.57,1227.36 1740.15,1224.61 1740.74,1227.28 1741.32,1226.96 1741.91,1225.42 1742.5,1224.94 1743.08,1226.36 1743.67,1227.38 1744.26,1228.73 1744.84,1231.24 1745.43,1230.75 1746.02,1228.67 1746.6,1226.95 1747.19,1230.7 1747.78,1231.38 1748.36,1229.38 1748.95,1224.53 1749.53,1222.85 1750.12,1222.47 1750.71,1219.48 1751.29,1216.5 1751.88,1215.34 1752.47,1215.39 1753.05,1219.49 1753.64,1218.06 1754.23,1223.36 1754.81,1219.12 1755.4,1219.34 1755.99,1218.37 1756.57,1218.45 1757.16,1219.77 1757.74,1221.33 1758.33,1224 1758.92,1224.03 1759.5,1226.36 1760.09,1225.84 1760.68,1224.42 1761.26,1222.96 1761.85,1222.85 1762.44,1221.39 1763.02,1222.62 1763.61,1218.83 1764.19,1218.55 1764.78,1217 1765.37,1218.29 1765.95,1218.33 1766.54,1217.26 1767.13,1217.69 1767.71,1218.19 1768.3,1214.64 1768.89,1216.3 1769.47,1216.7 1770.06,1212.71 1770.65,1217.3 1771.23,1217.28 1771.82,1217.48 1772.4,1214.7 1772.99,1216.38 1773.58,1215.11 1774.16,1216.77 1774.75,1222.21 1775.34,1218.33 1775.92,1218.45 1776.51,1219.66 1777.1,1221 1777.68,1220.69 1778.27,1219.03 1778.86,1219.01 1779.44,1217.81 1780.03,1216.39 1780.61,1217.81 1781.2,1220.6 1781.79,1217.82 1782.37,1217.76 1782.96,1217.86 1783.55,1219.38 1784.13,1222.19 1784.72,1223.39 1785.31,1226.09 1785.89,1228.22 1786.48,1230.41 1787.06,1232.57 1787.65,1231.8 1788.24,1235.13 1788.82,1233.11 1789.41,1231.1 1790,1230.58 1790.58,1234.11 1791.17,1230.58 1791.76,1231.07 1792.34,1230.62 1792.93,1227.72 1793.52,1226.08 1794.1,1227.26 1794.69,1221.23 1795.27,1222.41 1795.86,1223.88 1796.45,1222.47 1797.03,1222.28 1797.62,1220.76 1798.21,1219.35 1798.79,1219.31 1799.38,1217.92 1799.97,1222.25 1800.55,1222.15 1801.14,1220.41 1801.73,1218.93 1802.31,1218.85 1802.9,1218.78 1803.48,1221.84 1804.07,1223.12 1804.66,1221.75 1805.24,1221.64 1805.83,1221.64 1806.42,1224.98 1807,1224.72 1807.59,1225.9 1808.18,1223.83 1808.76,1224.95 1809.35,1223.36 1809.94,1223.06 1810.52,1222.66 1811.11,1223.92 1811.69,1222.52 1812.28,1225.06 1812.87,1223.52 1813.45,1224.61 1814.04,1227.26 1814.63,1225.37 1815.21,1224.13 1815.8,1224.09 1816.39,1220.98 1816.97,1222.25 1817.56,1223.37 1818.14,1223.37 1818.73,1218.96 1819.32,1219.19 1819.9,1220.45 1820.49,1220.4 1821.08,1219.26 1821.66,1220.73 1822.25,1219.31 1822.84,1216.7 1823.42,1215.3 1824.01,1214.3 1824.6,1214.88 1825.18,1212.24 1825.77,1212.58 1826.35,1214.46 1826.94,1216.14 1827.53,1219.1 1828.11,1212.26 1828.7,1211.25 1829.29,1213.18 1829.87,1214.96 1830.46,1215.27 1831.05,1215.68 1831.63,1217.08 1832.22,1214.47 1832.81,1216.38 1833.39,1215.34 1833.98,1214.58 1834.56,1213.67 1835.15,1216.62 1835.74,1218.18 1836.32,1218.18 1836.91,1216.96 1837.5,1217.31 1838.08,1220.15 1838.67,1221.52 1839.26,1221.46 1839.84,1221.26 1840.43,1221.14 1841.01,1219.8 1841.6,1219.89 1842.19,1218.24 1842.77,1219.64 1843.36,1221.04 1843.95,1218.22 1844.53,1218.32 1845.12,1219.69 1845.71,1216.86 1846.29,1217.1 1846.88,1214.43 1847.47,1214.5 1848.05,1219.01 1848.64,1219.35 1849.22,1217.97 1849.81,1216.94 1850.4,1217.22 1850.98,1220.01 1851.57,1219.91 1852.16,1218.58 1852.74,1220.07 1853.33,1218.67 1853.92,1218.71 1854.5,1220.36 1855.09,1218.71 1855.68,1219.31 1856.26,1218.08 1856.85,1218.26 1857.43,1216.9 1858.02,1217.06 1858.61,1218.64 1859.19,1218.83 1859.78,1218.98 1860.37,1220.62 1860.95,1218 1861.54,1218.06 1862.13,1217.07 1862.71,1218.72 1863.3,1218.72 1863.88,1220.32 1864.47,1220.26 1865.06,1221.35 1865.64,1221.19 1866.23,1219.78 1866.82,1223.82 1867.4,1223.47 1867.99,1223.48 1868.58,1223.22 1869.16,1220.36 1869.75,1220.58 1870.34,1220.7 1870.92,1220.4 1871.51,1215.78 1872.09,1216.07 1872.68,1215.01 1873.27,1212.62 1873.85,1214.39 1874.44,1213.12 1875.03,1216.17 1875.61,1215.02 1876.2,1219.46 1876.79,1219.37 1877.37,1219.48 1877.96,1222.31 1878.55,1220.62 1879.13,1220.64 1879.72,1219.22 1880.3,1220.66 1880.89,1219.05 1881.48,1220.4 1882.06,1219.23 1882.65,1220.62 1883.24,1217.91 1883.82,1219.94 1884.41,1221.1 1885,1223.88 1885.58,1222.27 1886.17,1223.54 1886.76,1223.62 1887.34,1223.47 1887.93,1224.75 1888.51,1224.31 1889.1,1222.62 1889.69,1221.14 1890.27,1222.2 1890.86,1220.82 1891.45,1218.03 1892.03,1215.14 1892.62,1215.35 1893.21,1214.14 1893.79,1215.63 1894.38,1215.76 1894.96,1215.84 1895.55,1213.21 1896.14,1213.23 1896.72,1216.53 1897.31,1213.8 1897.9,1217.05 1898.48,1218.51 1899.07,1215.72 1899.66,1211.5 1900.24,1212.14 1900.83,1212.33 1901.42,1212.7 1902,1213.07 1902.59,1213.48 1903.17,1213.51 1903.76,1212.53 1904.35,1211.53 1904.93,1210.67 1905.52,1211.35 1906.11,1209 1906.69,1212.15 1907.28,1208.37 1907.87,1211.59 1908.45,1213.52 1909.04,1212.35 1909.63,1212.78 1910.21,1214.86 1910.8,1217.68 1911.38,1219.24 1911.97,1216.45 1912.56,1214.07 1913.14,1214.28 1913.73,1217.25 1914.32,1218.66 1914.9,1218.79 1915.49,1219 1916.08,1217.85 1916.66,1219.41 1917.25,1219.64 1917.83,1218.49 1918.42,1221.27 1919.01,1221.18 1919.59,1219.94 1920.18,1222.68 1920.77,1222.68 1921.35,1225.14 1921.94,1224.92 1922.53,1224.72 1923.11,1222.79 1923.7,1222.65 1924.29,1221.25 1924.87,1222.72 1925.46,1225.23 1926.04,1221.06 1926.63,1220.7 1927.22,1220.74 1927.8,1219.19 1928.39,1217.61 1928.98,1216.51 1929.56,1215.56 1930.15,1218.89 1930.74,1220.47 1931.32,1222 1931.91,1224.46 1932.5,1224.18 1933.08,1223.61 1933.67,1220.75 1934.25,1222.2 1934.84,1226.06 1935.43,1227.15 1936.01,1224.14 1936.6,1225.42 1937.19,1225.22 1937.77,1223.45 1938.36,1221.92 1938.95,1220.56 1939.53,1220.65 1940.12,1219.25 1940.71,1220.43 1941.29,1221.87 1941.88,1223.19 1942.46,1225.86 1943.05,1226.66 1943.64,1226.41 1944.22,1224.4 1944.81,1222.87 1945.4,1222.77 1945.98,1223.07 1946.57,1222.79 1947.16,1225.15 1947.74,1223.35 1948.33,1223.34 1948.91,1225.97 1949.5,1228.59 1950.09,1225.33 1950.67,1223.54 1951.26,1223.36 1951.85,1224.27 1952.43,1224.1 1953.02,1223.9 1953.61,1224.63 1954.19,1222.85 1954.78,1222.74 1955.37,1225.14 1955.95,1222.11 1956.54,1224.37 1957.12,1224.38 1957.71,1224.08 1958.3,1229.21 1958.88,1227.23 1959.47,1227.14 1960.06,1226.81 1960.64,1225.15 1961.23,1227.32 1961.82,1226.82 1962.4,1227.98 1962.99,1224.91 1963.58,1227.29 1964.16,1226.97 1964.75,1227.73 1965.33,1225.75 1965.92,1225.47 1966.51,1227.96 1967.09,1229 1967.68,1228.61 1968.27,1226.81 1968.85,1228.92 1969.44,1228.36 1970.03,1227.81 1970.61,1228.59 1971.2,1228.11 1971.78,1226.16 1972.37,1224.4 1972.96,1222.74 1973.54,1218.71 1974.13,1215.86 1974.72,1218.9 1975.3,1218.5 1975.89,1215.79 1976.48,1214.61 1977.06,1210.83 1977.65,1209.67 1978.24,1211.48 1978.82,1211.99 1979.41,1212.56 1979.99,1212.78 1980.58,1213.09 1981.17,1213.76 1981.75,1214.19 1982.34,1214.25 1982.93,1215.88 1983.51,1216.15 1984.1,1216.5 1984.69,1219.41 1985.27,1219.39 1985.86,1222.12 1986.45,1220.77 1987.03,1220.83 1987.62,1219.41 1988.2,1220.92 1988.79,1220.71 1989.38,1223.34 1989.96,1223.1 1990.55,1221.4 1991.14,1221 1991.72,1218.08 1992.31,1216.61 1992.9,1215.27 1993.48,1216.64 1994.07,1213.88 1994.65,1216.83 1995.24,1217.04 1995.83,1214.37 1996.41,1217.44 1997,1218.83 1997.59,1219.03 1998.17,1217.76 1998.76,1216.58 1999.35,1218.24 1999.93,1219.53 2000.52,1218.07 2001.11,1218.23 2001.69,1218.32 2002.28,1217.1 2002.86,1219.73 2003.45,1221.02 2004.04,1222.31 2004.62,1222.43 2005.21,1222.43 2005.8,1224.03 2006.38,1222.37 2006.97,1222.05 2007.56,1223.23 2008.14,1218.83 2008.73,1216.41 2009.32,1216.44 2009.9,1215.43 2010.49,1214.35 2011.07,1215.72 2011.66,1218.66 2012.25,1220.18 2012.83,1221.72 2013.42,1221.62 2014.01,1222.85 2014.59,1222.75 2015.18,1219.71 2015.77,1219.77 2016.35,1219.8 2016.94,1216.9 2017.53,1214.35 2018.11,1214.72 2018.7,1213.8 2019.28,1214.05 2019.87,1214.78 2020.46,1213.88 2021.04,1213.99 2021.63,1214.35 2022.22,1213.26 2022.8,1210.75 2023.39,1209.55 2023.98,1212.82 2024.56,1211.99 2025.15,1210.73 2025.73,1211.35 2026.32,1213.58 2026.91,1209.68 2027.49,1209.18 2028.08,1209.78 2028.67,1211.88 2029.25,1210.73 2029.84,1210.93 2030.43,1212.9 2031.01,1214.45 2031.6,1214.74 2032.19,1213.75 2032.77,1215.56 2033.36,1211.99 2033.94,1212.37 2034.53,1210.05 2035.12,1209.11 2035.7,1208.36 2036.29,1208.9 2036.88,1204.07 2037.46,1206.73 2038.05,1210.15 2038.64,1212.1 2039.22,1215.22 2039.81,1215.28 2040.4,1216.72 2040.98,1218.47 2041.57,1219.85 2042.15,1218.74 2042.74,1218.74 2043.33,1217.19 2043.91,1217.29 2044.5,1218.83 2045.09,1221.64 2045.67,1221.41 2046.26,1229.29 2046.85,1230.34 2047.43,1233.61 2048.02,1231.62 2048.6,1231 2049.19,1233.09 2049.78,1232.24 2050.36,1228.58 2050.95,1227.93 2051.54,1227.53 2052.12,1225.7 2052.71,1224.05 2053.3,1222.26 2053.88,1223.17 2054.47,1221.69 2055.06,1221.54 2055.64,1221.37 2056.23,1219.72 2056.81,1218.44 2057.4,1215.75 2057.99,1218.54 2058.57,1217.23 2059.16,1217.22 2059.75,1215.91 2060.33,1220.17 2060.92,1217.2 2061.51,1217.34 2062.09,1217.57 2062.68,1219.08 2063.27,1219.33 2063.85,1222.14 2064.44,1222.04 2065.02,1221.73 2065.61,1222.87 2066.2,1221.21 2066.78,1221.2 2067.37,1219.74 2067.96,1218.45 2068.54,1220.03 2069.13,1221.5 2069.72,1220.2 2070.3,1220.2 2070.89,1220.37 2071.48,1217.62 2072.06,1218.97 2072.65,1224.41 2073.23,1224.17 2073.82,1222.87 2074.41,1223.8 2074.99,1223.68 2075.58,1223.7 2076.17,1223.68 2076.75,1223.6 2077.34,1220.67 2077.93,1220.55 2078.51,1223.31 2079.1,1223.15 2079.68,1220.25 2080.27,1218.63 2080.86,1221.57 2081.44,1221.79 2082.03,1221.91 2082.62,1220.68 2083.2,1219.1 2083.79,1220.48 2084.38,1220.4 2084.96,1220.5 2085.55,1220.64 2086.14,1222.03 2086.72,1223.35 2087.31,1223.43 2087.89,1221.82 2088.48,1220.42 2089.07,1218.97 2089.65,1218.71 2090.24,1222.83 2090.83,1224.09 2091.41,1225.14 2092,1226.29 2092.59,1224.36 2093.17,1225.4 2093.76,1225.16 2094.35,1224.99 2094.93,1224.79 2095.52,1224.54 2096.1,1222.8 2096.69,1222.86 2097.28,1222.5 2097.86,1223.67 2098.45,1222.21 2099.04,1219.44 2099.62,1220.85 2100.21,1220.68 2100.8,1224.72 2101.38,1224.47 2101.97,1222.77 2102.55,1225.15 2103.14,1222.26 2103.73,1219.54 2104.31,1220.94 2104.9,1220.81 2105.49,1220.92 2106.07,1221.09 2106.66,1220.89 2107.25,1220.42 2107.83,1221.6 2108.42,1224.13 2109.01,1222.02 2109.59,1222.01 2110.18,1223.19 2110.76,1222.78 2111.35,1221.18 2111.94,1222.64 2112.52,1220 2113.11,1220.24 2113.7,1221.51 2114.28,1219.89 2114.87,1222.41 2115.46,1222.07 2116.04,1220.48 2116.63,1223.16 2117.22,1228.65 2117.8,1226.86 2118.39,1226.45 2118.97,1225.97 2119.56,1227.04 2120.15,1222.67 2120.73,1224.14 2121.32,1224.11 2121.91,1223.76 2122.49,1223.26 2123.08,1221.64 2123.67,1218.45 2124.25,1217.26 2124.84,1217.49 2125.42,1217.3 2126.01,1214.76 2126.6,1214.92 2127.18,1216.38 2127.77,1219.24 2128.36,1217.61 2128.94,1218.74 2129.53,1221.4 2130.12,1221.16 2130.7,1222.67 2131.29,1225.14 2131.88,1224.95 2132.46,1225.92 2133.05,1224.26 2133.63,1224.23 2134.22,1223.81 2134.81,1220.82 2135.39,1219.19 2135.98,1220.51 2136.57,1217.66 2137.15,1217.87 2137.74,1219.37 2138.33,1215.15 2138.91,1218.11 2139.5,1217 2140.09,1218.76 2140.67,1217.45 2141.26,1213.52 2141.84,1212.43 2142.43,1212.75 2143.02,1213.35 2143.6,1212.17 2144.19,1211.35 2144.78,1214.44 2145.36,1213.44 2145.95,1213.95 2146.54,1214.05 2147.12,1215.97 2147.71,1217.81 2148.3,1219.06 2148.88,1220.65 2149.47,1221.92 2150.05,1220.42 2150.64,1219.15 2151.23,1217.69 2151.81,1219.15 2152.4,1215.1 2152.99,1218.27 2153.57,1220 2154.16,1221.3 2154.75,1221.57 2155.33,1221.62 2155.92,1222.89 2156.5,1221.4 2157.09,1218.4 2157.68,1221.29 2158.26,1221.19 \"/>\n<path clip-path=\"url(#clip622)\" d=\"M986.025 1220.37 L986.612 1220.37 L987.198 1220.37 L987.785 1220.37 L988.371 1220.37 L988.957 1220.37 L989.544 1220.37 L990.13 1220.37 L990.717 1220.37 L991.303 1220.37 L991.889 1220.37 L992.476 1220.37 L993.062 1220.37 L993.649 1220.37 L994.235 1220.37 L994.822 1220.37 L995.408 1220.37 L995.994 1220.37 L996.581 1220.37 L997.167 1220.37 L997.754 1220.37 L998.34 1220.37 L998.926 1220.37 L999.513 1220.37 L1000.1 1220.37 L1000.69 1220.37 L1001.27 1220.37 L1001.86 1220.37 L1002.44 1220.37 L1003.03 1220.37 L1003.62 1220.37 L1004.2 1220.37 L1004.79 1220.37 L1005.38 1220.37 L1005.96 1220.37 L1006.55 1220.37 L1007.14 1220.37 L1007.72 1220.37 L1008.31 1220.37 L1008.9 1220.37 L1009.48 1220.37 L1010.07 1220.37 L1010.65 1220.37 L1011.24 1220.37 L1011.83 1220.37 L1012.41 1220.37 L1013 1220.37 L1013.59 1220.37 L1014.17 1220.37 L1014.76 1220.37 L1015.35 1220.37 L1015.93 1220.37 L1016.52 1220.37 L1017.11 1220.37 L1017.69 1220.37 L1018.28 1220.37 L1018.86 1220.37 L1019.45 1220.37 L1020.04 1220.37 L1020.62 1220.37 L1021.21 1220.37 L1021.8 1220.37 L1022.38 1220.37 L1022.97 1220.37 L1023.56 1220.37 L1024.14 1220.37 L1024.73 1220.37 L1025.32 1220.37 L1025.9 1220.37 L1026.49 1220.37 L1027.07 1220.37 L1027.66 1220.37 L1028.25 1220.37 L1028.83 1220.37 L1029.42 1220.37 L1030.01 1220.37 L1030.59 1220.37 L1031.18 1220.37 L1031.77 1220.37 L1032.35 1220.37 L1032.94 1220.37 L1033.52 1220.37 L1034.11 1220.37 L1034.7 1220.37 L1035.28 1220.37 L1035.87 1220.37 L1036.46 1220.37 L1037.04 1220.37 L1037.63 1220.37 L1038.22 1220.37 L1038.8 1220.37 L1039.39 1220.37 L1039.98 1220.37 L1040.56 1220.37 L1041.15 1220.37 L1041.73 1220.37 L1042.32 1220.37 L1042.91 1220.37 L1043.49 1220.37 L1044.08 1220.37 L1044.67 1220.37 L1045.25 1220.37 L1045.84 1220.37 L1046.43 1220.37 L1047.01 1220.37 L1047.6 1220.37 L1048.19 1220.37 L1048.77 1220.37 L1049.36 1220.37 L1049.94 1220.37 L1050.53 1220.37 L1051.12 1220.37 L1051.7 1220.37 L1052.29 1220.37 L1052.88 1220.37 L1053.46 1220.37 L1054.05 1220.37 L1054.64 1220.37 L1055.22 1220.37 L1055.81 1220.37 L1056.39 1220.37 L1056.98 1220.37 L1057.57 1220.37 L1058.15 1220.37 L1058.74 1220.37 L1059.33 1220.37 L1059.91 1220.37 L1060.5 1220.37 L1061.09 1220.37 L1061.67 1220.37 L1062.26 1220.37 L1062.85 1220.37 L1063.43 1220.37 L1064.02 1220.37 L1064.6 1220.37 L1065.19 1220.37 L1065.78 1220.37 L1066.36 1220.37 L1066.95 1220.37 L1067.54 1220.37 L1068.12 1220.37 L1068.71 1220.37 L1069.3 1220.37 L1069.88 1220.37 L1070.47 1220.37 L1071.06 1220.37 L1071.64 1220.37 L1072.23 1220.37 L1072.81 1220.37 L1073.4 1220.37 L1073.99 1220.37 L1074.57 1220.37 L1075.16 1220.37 L1075.75 1220.37 L1076.33 1220.37 L1076.92 1220.37 L1077.51 1220.37 L1078.09 1220.37 L1078.68 1220.37 L1079.26 1220.37 L1079.85 1220.37 L1080.44 1220.37 L1081.02 1220.37 L1081.61 1220.37 L1082.2 1220.37 L1082.78 1220.37 L1083.37 1220.37 L1083.96 1220.37 L1084.54 1220.37 L1085.13 1220.37 L1085.72 1220.37 L1086.3 1220.37 L1086.89 1220.37 L1087.47 1220.37 L1088.06 1220.37 L1088.65 1220.37 L1089.23 1220.37 L1089.82 1220.37 L1090.41 1220.37 L1090.99 1220.37 L1091.58 1220.37 L1092.17 1220.37 L1092.75 1220.37 L1093.34 1220.37 L1093.93 1220.37 L1094.51 1220.37 L1095.1 1220.37 L1095.68 1220.37 L1096.27 1220.37 L1096.86 1220.37 L1097.44 1220.37 L1098.03 1220.37 L1098.62 1220.37 L1099.2 1220.37 L1099.79 1220.37 L1100.38 1220.37 L1100.96 1220.37 L1101.55 1220.37 L1102.14 1220.37 L1102.72 1220.37 L1103.31 1220.37 L1103.89 1220.37 L1104.48 1220.37 L1105.07 1220.37 L1105.65 1220.37 L1106.24 1220.37 L1106.83 1220.37 L1107.41 1220.37 L1108 1220.37 L1108.59 1220.37 L1109.17 1220.37 L1109.76 1220.37 L1110.34 1220.37 L1110.93 1220.37 L1111.52 1220.37 L1112.1 1220.37 L1112.69 1220.37 L1113.28 1220.37 L1113.86 1220.37 L1114.45 1220.37 L1115.04 1220.37 L1115.62 1220.37 L1116.21 1220.37 L1116.8 1220.37 L1117.38 1220.37 L1117.97 1220.37 L1118.55 1220.37 L1119.14 1220.37 L1119.73 1220.37 L1120.31 1220.37 L1120.9 1220.37 L1121.49 1220.37 L1122.07 1220.37 L1122.66 1220.37 L1123.25 1220.37 L1123.83 1220.37 L1124.42 1220.37 L1125.01 1220.37 L1125.59 1220.37 L1126.18 1220.37 L1126.76 1220.37 L1127.35 1220.37 L1127.94 1220.37 L1128.52 1220.37 L1129.11 1220.37 L1129.7 1220.37 L1130.28 1220.37 L1130.87 1220.37 L1131.46 1220.37 L1132.04 1220.37 L1132.63 1220.37 L1133.21 1220.37 L1133.8 1220.37 L1134.39 1220.37 L1134.97 1220.37 L1135.56 1220.37 L1136.15 1220.37 L1136.73 1220.37 L1137.32 1220.37 L1137.91 1220.37 L1138.49 1220.37 L1139.08 1220.37 L1139.67 1220.37 L1140.25 1220.37 L1140.84 1220.37 L1141.42 1220.37 L1142.01 1220.37 L1142.6 1220.37 L1143.18 1220.37 L1143.77 1220.37 L1144.36 1220.37 L1144.94 1220.37 L1145.53 1220.37 L1146.12 1220.37 L1146.7 1220.37 L1147.29 1220.37 L1147.88 1220.37 L1148.46 1220.37 L1149.05 1220.37 L1149.63 1220.37 L1150.22 1220.37 L1150.81 1220.37 L1151.39 1220.37 L1151.98 1220.37 L1152.57 1220.37 L1153.15 1220.37 L1153.74 1220.37 L1154.33 1220.37 L1154.91 1220.37 L1155.5 1220.37 L1156.09 1220.37 L1156.67 1220.37 L1157.26 1220.37 L1157.84 1220.37 L1158.43 1220.37 L1159.02 1220.37 L1159.6 1220.37 L1160.19 1220.37 L1160.78 1220.37 L1161.36 1220.37 L1161.95 1220.37 L1162.54 1220.37 L1163.12 1220.37 L1163.71 1220.37 L1164.29 1220.37 L1164.88 1220.37 L1165.47 1220.37 L1166.05 1220.37 L1166.64 1220.37 L1167.23 1220.37 L1167.81 1220.37 L1168.4 1220.37 L1168.99 1220.37 L1169.57 1220.37 L1170.16 1220.37 L1170.75 1220.37 L1171.33 1220.37 L1171.92 1220.37 L1172.5 1220.37 L1173.09 1220.37 L1173.68 1220.37 L1174.26 1220.37 L1174.85 1220.37 L1175.44 1220.37 L1176.02 1220.37 L1176.61 1220.37 L1177.2 1220.37 L1177.78 1220.37 L1178.37 1220.37 L1178.96 1220.37 L1179.54 1220.37 L1180.13 1220.37 L1180.71 1220.37 L1181.3 1220.37 L1181.89 1220.37 L1182.47 1220.37 L1183.06 1220.37 L1183.65 1220.37 L1184.23 1220.37 L1184.82 1220.37 L1185.41 1220.37 L1185.99 1220.37 L1186.58 1220.37 L1187.16 1220.37 L1187.75 1220.37 L1188.34 1220.37 L1188.92 1220.37 L1189.51 1220.37 L1190.1 1220.37 L1190.68 1220.37 L1191.27 1220.37 L1191.86 1220.37 L1192.44 1220.37 L1193.03 1220.37 L1193.62 1220.37 L1194.2 1220.37 L1194.79 1220.37 L1195.37 1220.37 L1195.96 1220.37 L1196.55 1220.37 L1197.13 1220.37 L1197.72 1220.37 L1198.31 1220.37 L1198.89 1220.37 L1199.48 1220.37 L1200.07 1220.37 L1200.65 1220.37 L1201.24 1220.37 L1201.83 1220.37 L1202.41 1220.37 L1203 1220.37 L1203.58 1220.37 L1204.17 1220.37 L1204.76 1220.37 L1205.34 1220.37 L1205.93 1220.37 L1206.52 1220.37 L1207.1 1220.37 L1207.69 1220.37 L1208.28 1220.37 L1208.86 1220.37 L1209.45 1220.37 L1210.03 1220.37 L1210.62 1220.37 L1211.21 1220.37 L1211.79 1220.37 L1212.38 1220.37 L1212.97 1220.37 L1213.55 1220.37 L1214.14 1220.37 L1214.73 1220.37 L1215.31 1220.37 L1215.9 1220.37 L1216.49 1220.37 L1217.07 1220.37 L1217.66 1220.37 L1218.24 1220.37 L1218.83 1220.37 L1219.42 1220.37 L1220 1220.37 L1220.59 1220.37 L1221.18 1220.37 L1221.76 1220.37 L1222.35 1220.37 L1222.94 1220.37 L1223.52 1220.37 L1224.11 1220.37 L1224.7 1220.37 L1225.28 1220.37 L1225.87 1220.37 L1226.45 1220.37 L1227.04 1220.37 L1227.63 1220.37 L1228.21 1220.37 L1228.8 1220.37 L1229.39 1220.37 L1229.97 1220.37 L1230.56 1220.37 L1231.15 1220.37 L1231.73 1220.37 L1232.32 1220.37 L1232.91 1220.37 L1233.49 1220.37 L1234.08 1220.37 L1234.66 1220.37 L1235.25 1220.37 L1235.84 1220.37 L1236.42 1220.37 L1237.01 1220.37 L1237.6 1220.37 L1238.18 1220.37 L1238.77 1220.37 L1239.36 1220.37 L1239.94 1220.37 L1240.53 1220.37 L1241.11 1220.37 L1241.7 1220.37 L1242.29 1220.37 L1242.87 1220.37 L1243.46 1220.37 L1244.05 1220.37 L1244.63 1220.37 L1245.22 1220.37 L1245.81 1220.37 L1246.39 1220.37 L1246.98 1220.37 L1247.57 1220.37 L1248.15 1220.37 L1248.74 1220.37 L1249.32 1220.37 L1249.91 1220.37 L1250.5 1220.37 L1251.08 1220.37 L1251.67 1220.37 L1252.26 1220.37 L1252.84 1220.37 L1253.43 1220.37 L1254.02 1220.37 L1254.6 1220.37 L1255.19 1220.37 L1255.78 1220.37 L1256.36 1220.37 L1256.95 1220.37 L1257.53 1220.37 L1258.12 1220.37 L1258.71 1220.37 L1259.29 1220.37 L1259.88 1220.37 L1260.47 1220.37 L1261.05 1220.37 L1261.64 1220.37 L1262.23 1220.37 L1262.81 1220.37 L1263.4 1220.37 L1263.98 1220.37 L1264.57 1220.37 L1265.16 1220.37 L1265.74 1220.37 L1266.33 1220.37 L1266.92 1220.37 L1267.5 1220.37 L1268.09 1220.37 L1268.68 1220.37 L1269.26 1220.37 L1269.85 1220.37 L1270.44 1220.37 L1271.02 1220.37 L1271.61 1220.37 L1272.19 1220.37 L1272.78 1220.37 L1273.37 1220.37 L1273.95 1220.37 L1274.54 1220.37 L1275.13 1220.37 L1275.71 1220.37 L1276.3 1220.37 L1276.89 1220.37 L1277.47 1220.37 L1278.06 1220.37 L1278.65 1220.37 L1279.23 1220.37 L1279.82 1220.37 L1280.4 1220.37 L1280.99 1220.37 L1281.58 1220.37 L1282.16 1220.37 L1282.75 1220.37 L1283.34 1220.37 L1283.92 1220.37 L1284.51 1220.37 L1285.1 1220.37 L1285.68 1220.37 L1286.27 1220.37 L1286.86 1220.37 L1287.44 1220.37 L1288.03 1220.37 L1288.61 1220.37 L1289.2 1220.37 L1289.79 1220.37 L1290.37 1220.37 L1290.96 1220.37 L1291.55 1220.37 L1292.13 1220.37 L1292.72 1220.37 L1293.31 1220.37 L1293.89 1220.37 L1294.48 1220.37 L1295.06 1220.37 L1295.65 1220.37 L1296.24 1220.37 L1296.82 1220.37 L1297.41 1220.37 L1298 1220.37 L1298.58 1220.37 L1299.17 1220.37 L1299.76 1220.37 L1300.34 1220.37 L1300.93 1220.37 L1301.52 1220.37 L1302.1 1220.37 L1302.69 1220.37 L1303.27 1220.37 L1303.86 1220.37 L1304.45 1220.37 L1305.03 1220.37 L1305.62 1220.37 L1306.21 1220.37 L1306.79 1220.37 L1307.38 1220.37 L1307.97 1220.37 L1308.55 1220.37 L1309.14 1220.37 L1309.73 1220.37 L1310.31 1220.37 L1310.9 1220.37 L1311.48 1220.37 L1312.07 1220.37 L1312.66 1220.37 L1313.24 1220.37 L1313.83 1220.37 L1314.42 1220.37 L1315 1220.37 L1315.59 1220.37 L1316.18 1220.37 L1316.76 1220.37 L1317.35 1220.37 L1317.93 1220.37 L1318.52 1220.37 L1319.11 1220.37 L1319.69 1220.37 L1320.28 1220.37 L1320.87 1220.37 L1321.45 1220.37 L1322.04 1220.37 L1322.63 1220.37 L1323.21 1220.37 L1323.8 1220.37 L1324.39 1220.37 L1324.97 1220.37 L1325.56 1220.37 L1326.14 1220.37 L1326.73 1220.37 L1327.32 1220.37 L1327.9 1220.37 L1328.49 1220.37 L1329.08 1220.37 L1329.66 1220.37 L1330.25 1220.37 L1330.84 1220.37 L1331.42 1220.37 L1332.01 1220.37 L1332.6 1220.37 L1333.18 1220.37 L1333.77 1220.37 L1334.35 1220.37 L1334.94 1220.37 L1335.53 1220.37 L1336.11 1220.37 L1336.7 1220.37 L1337.29 1220.37 L1337.87 1220.37 L1338.46 1220.37 L1339.05 1220.37 L1339.63 1220.37 L1340.22 1220.37 L1340.8 1220.37 L1341.39 1220.37 L1341.98 1220.37 L1342.56 1220.37 L1343.15 1220.37 L1343.74 1220.37 L1344.32 1220.37 L1344.91 1220.37 L1345.5 1220.37 L1346.08 1220.37 L1346.67 1220.37 L1347.26 1220.37 L1347.84 1220.37 L1348.43 1220.37 L1349.01 1220.37 L1349.6 1220.37 L1350.19 1220.37 L1350.77 1220.37 L1351.36 1220.37 L1351.95 1220.37 L1352.53 1220.37 L1353.12 1220.37 L1353.71 1220.37 L1354.29 1220.37 L1354.88 1220.37 L1355.47 1220.37 L1356.05 1220.37 L1356.64 1220.37 L1357.22 1220.37 L1357.81 1220.37 L1358.4 1220.37 L1358.98 1220.37 L1359.57 1220.37 L1360.16 1220.37 L1360.74 1220.37 L1361.33 1220.37 L1361.92 1220.37 L1362.5 1220.37 L1363.09 1220.37 L1363.68 1220.37 L1364.26 1220.37 L1364.85 1220.37 L1365.43 1220.37 L1366.02 1220.37 L1366.61 1220.37 L1367.19 1220.37 L1367.78 1220.37 L1368.37 1220.37 L1368.95 1220.37 L1369.54 1220.37 L1370.13 1220.37 L1370.71 1220.37 L1371.3 1220.37 L1371.88 1220.37 L1372.47 1220.37 L1373.06 1220.37 L1373.64 1220.37 L1374.23 1220.37 L1374.82 1220.37 L1375.4 1220.37 L1375.99 1220.37 L1376.58 1220.37 L1377.16 1220.37 L1377.75 1220.37 L1378.34 1220.37 L1378.92 1220.37 L1379.51 1220.37 L1380.09 1220.37 L1380.68 1220.37 L1381.27 1220.37 L1381.85 1220.37 L1382.44 1220.37 L1383.03 1220.37 L1383.61 1220.37 L1384.2 1220.37 L1384.79 1220.37 L1385.37 1220.37 L1385.96 1220.37 L1386.55 1220.37 L1387.13 1220.37 L1387.72 1220.37 L1388.3 1220.37 L1388.89 1220.37 L1389.48 1220.37 L1390.06 1220.37 L1390.65 1220.37 L1391.24 1220.37 L1391.82 1220.37 L1392.41 1220.37 L1393 1220.37 L1393.58 1220.37 L1394.17 1220.37 L1394.75 1220.37 L1395.34 1220.37 L1395.93 1220.37 L1396.51 1220.37 L1397.1 1220.37 L1397.69 1220.37 L1398.27 1220.37 L1398.86 1220.37 L1399.45 1220.37 L1400.03 1220.37 L1400.62 1220.37 L1401.21 1220.37 L1401.79 1220.37 L1402.38 1220.37 L1402.96 1220.37 L1403.55 1220.37 L1404.14 1220.37 L1404.72 1220.37 L1405.31 1220.37 L1405.9 1220.37 L1406.48 1220.37 L1407.07 1220.37 L1407.66 1220.37 L1408.24 1220.37 L1408.83 1220.37 L1409.42 1220.37 L1410 1220.37 L1410.59 1220.37 L1411.17 1220.37 L1411.76 1220.37 L1412.35 1220.37 L1412.93 1220.37 L1413.52 1220.37 L1414.11 1220.37 L1414.69 1220.37 L1415.28 1220.37 L1415.87 1220.37 L1416.45 1220.37 L1417.04 1220.37 L1417.63 1220.37 L1418.21 1220.37 L1418.8 1220.37 L1419.38 1220.37 L1419.97 1220.37 L1420.56 1220.37 L1421.14 1220.37 L1421.73 1220.37 L1422.32 1220.37 L1422.9 1220.37 L1423.49 1220.37 L1424.08 1220.37 L1424.66 1220.37 L1425.25 1220.37 L1425.83 1220.37 L1426.42 1220.37 L1427.01 1220.37 L1427.59 1220.37 L1428.18 1220.37 L1428.77 1220.37 L1429.35 1220.37 L1429.94 1220.37 L1430.53 1220.37 L1431.11 1220.37 L1431.7 1220.37 L1432.29 1220.37 L1432.87 1220.37 L1433.46 1220.37 L1434.04 1220.37 L1434.63 1220.37 L1435.22 1220.37 L1435.8 1220.37 L1436.39 1220.37 L1436.98 1220.37 L1437.56 1220.37 L1438.15 1220.37 L1438.74 1220.37 L1439.32 1220.37 L1439.91 1220.37 L1440.5 1220.37 L1441.08 1220.37 L1441.67 1220.37 L1442.25 1220.37 L1442.84 1220.37 L1443.43 1220.37 L1444.01 1220.37 L1444.6 1220.37 L1445.19 1220.37 L1445.77 1220.37 L1446.36 1220.37 L1446.95 1220.37 L1447.53 1220.37 L1448.12 1220.37 L1448.7 1220.37 L1449.29 1220.37 L1449.88 1220.37 L1450.46 1220.37 L1451.05 1220.37 L1451.64 1220.37 L1452.22 1220.37 L1452.81 1220.37 L1453.4 1220.37 L1453.98 1220.37 L1454.57 1220.37 L1455.16 1220.37 L1455.74 1220.37 L1456.33 1220.37 L1456.91 1220.37 L1457.5 1220.37 L1458.09 1220.37 L1458.67 1220.37 L1459.26 1220.37 L1459.85 1220.37 L1460.43 1220.37 L1461.02 1220.37 L1461.61 1220.37 L1462.19 1220.37 L1462.78 1220.37 L1463.37 1220.37 L1463.95 1220.37 L1464.54 1220.37 L1465.12 1220.37 L1465.71 1220.37 L1466.3 1220.37 L1466.88 1220.37 L1467.47 1220.37 L1468.06 1220.37 L1468.64 1220.37 L1469.23 1220.37 L1469.82 1220.37 L1470.4 1220.37 L1470.99 1220.37 L1471.57 1220.37 L1472.16 1220.37 L1472.75 1220.37 L1473.33 1220.37 L1473.92 1220.37 L1474.51 1220.37 L1475.09 1220.37 L1475.68 1220.37 L1476.27 1220.37 L1476.85 1220.37 L1477.44 1220.37 L1478.03 1220.37 L1478.61 1220.37 L1479.2 1220.37 L1479.78 1220.37 L1480.37 1220.37 L1480.96 1220.37 L1481.54 1220.37 L1482.13 1220.37 L1482.72 1220.37 L1483.3 1220.37 L1483.89 1220.37 L1484.48 1220.37 L1485.06 1220.37 L1485.65 1220.37 L1486.24 1220.37 L1486.82 1220.37 L1487.41 1220.37 L1487.99 1220.37 L1488.58 1220.37 L1489.17 1220.37 L1489.75 1220.37 L1490.34 1220.37 L1490.93 1220.37 L1491.51 1220.37 L1492.1 1220.37 L1492.69 1220.37 L1493.27 1220.37 L1493.86 1220.37 L1494.45 1220.37 L1495.03 1220.37 L1495.62 1220.37 L1496.2 1220.37 L1496.79 1220.37 L1497.38 1220.37 L1497.96 1220.37 L1498.55 1220.37 L1499.14 1220.37 L1499.72 1220.37 L1500.31 1220.37 L1500.9 1220.37 L1501.48 1220.37 L1502.07 1220.37 L1502.65 1220.37 L1503.24 1220.37 L1503.83 1220.37 L1504.41 1220.37 L1505 1220.37 L1505.59 1220.37 L1506.17 1220.37 L1506.76 1220.37 L1507.35 1220.37 L1507.93 1220.37 L1508.52 1220.37 L1509.11 1220.37 L1509.69 1220.37 L1510.28 1220.37 L1510.86 1220.37 L1511.45 1220.37 L1512.04 1220.37 L1512.62 1220.37 L1513.21 1220.37 L1513.8 1220.37 L1514.38 1220.37 L1514.97 1220.37 L1515.56 1220.37 L1516.14 1220.37 L1516.73 1220.37 L1517.32 1220.37 L1517.9 1220.37 L1518.49 1220.37 L1519.07 1220.37 L1519.66 1220.37 L1520.25 1220.37 L1520.83 1220.37 L1521.42 1220.37 L1522.01 1220.37 L1522.59 1220.37 L1523.18 1220.37 L1523.77 1220.37 L1524.35 1220.37 L1524.94 1220.37 L1525.52 1220.37 L1526.11 1220.37 L1526.7 1220.37 L1527.28 1220.37 L1527.87 1220.37 L1528.46 1220.37 L1529.04 1220.37 L1529.63 1220.37 L1530.22 1220.37 L1530.8 1220.37 L1531.39 1220.37 L1531.98 1220.37 L1532.56 1220.37 L1533.15 1220.37 L1533.73 1220.37 L1534.32 1220.37 L1534.91 1220.37 L1535.49 1220.37 L1536.08 1220.37 L1536.67 1220.37 L1537.25 1220.37 L1537.84 1220.37 L1538.43 1220.37 L1539.01 1220.37 L1539.6 1220.37 L1540.19 1220.37 L1540.77 1220.37 L1541.36 1220.37 L1541.94 1220.37 L1542.53 1220.37 L1543.12 1220.37 L1543.7 1220.37 L1544.29 1220.37 L1544.88 1220.37 L1545.46 1220.37 L1546.05 1220.37 L1546.64 1220.37 L1547.22 1220.37 L1547.81 1220.37 L1548.4 1220.37 L1548.98 1220.37 L1549.57 1220.37 L1550.15 1220.37 L1550.74 1220.37 L1551.33 1220.37 L1551.91 1220.37 L1552.5 1220.37 L1553.09 1220.37 L1553.67 1220.37 L1554.26 1220.37 L1554.85 1220.37 L1555.43 1220.37 L1556.02 1220.37 L1556.6 1220.37 L1557.19 1220.37 L1557.78 1220.37 L1558.36 1220.37 L1558.95 1220.37 L1559.54 1220.37 L1560.12 1220.37 L1560.71 1220.37 L1561.3 1220.37 L1561.88 1220.37 L1562.47 1220.37 L1563.06 1220.37 L1563.64 1220.37 L1564.23 1220.37 L1564.81 1220.37 L1565.4 1220.37 L1565.99 1220.37 L1566.57 1220.37 L1567.16 1220.37 L1567.75 1220.37 L1568.33 1220.37 L1568.92 1220.37 L1569.51 1220.37 L1570.09 1220.37 L1570.68 1220.37 L1571.27 1220.37 L1571.85 1220.37 L1572.44 1220.37 L1573.02 1220.37 L1573.61 1220.37 L1574.2 1220.37 L1574.78 1220.37 L1575.37 1220.37 L1575.96 1220.37 L1576.54 1220.37 L1577.13 1220.37 L1577.72 1220.37 L1578.3 1220.37 L1578.89 1220.37 L1579.47 1220.37 L1580.06 1220.37 L1580.65 1220.37 L1581.23 1220.37 L1581.82 1220.37 L1582.41 1220.37 L1582.99 1220.37 L1583.58 1220.37 L1584.17 1220.37 L1584.75 1220.37 L1585.34 1220.37 L1585.93 1220.37 L1586.51 1220.37 L1587.1 1220.37 L1587.68 1220.37 L1588.27 1220.37 L1588.86 1220.37 L1589.44 1220.37 L1590.03 1220.37 L1590.62 1220.37 L1591.2 1220.37 L1591.79 1220.37 L1592.38 1220.37 L1592.96 1220.37 L1593.55 1220.37 L1594.14 1220.37 L1594.72 1220.37 L1595.31 1220.37 L1595.89 1220.37 L1596.48 1220.37 L1597.07 1220.37 L1597.65 1220.37 L1598.24 1220.37 L1598.83 1220.37 L1599.41 1220.37 L1600 1220.37 L1600.59 1220.37 L1601.17 1220.37 L1601.76 1220.37 L1602.34 1220.37 L1602.93 1220.37 L1603.52 1220.37 L1604.1 1220.37 L1604.69 1220.37 L1605.28 1220.37 L1605.86 1220.37 L1606.45 1220.37 L1607.04 1220.37 L1607.62 1220.37 L1608.21 1220.37 L1608.8 1220.37 L1609.38 1220.37 L1609.97 1220.37 L1610.55 1220.37 L1611.14 1220.37 L1611.73 1220.37 L1612.31 1220.37 L1612.9 1220.37 L1613.49 1220.37 L1614.07 1220.37 L1614.66 1220.37 L1615.25 1220.37 L1615.83 1220.37 L1616.42 1220.37 L1617.01 1220.37 L1617.59 1220.37 L1618.18 1220.37 L1618.76 1220.37 L1619.35 1220.37 L1619.94 1220.37 L1620.52 1220.37 L1621.11 1220.37 L1621.7 1220.37 L1622.28 1220.37 L1622.87 1220.37 L1623.46 1220.37 L1624.04 1220.37 L1624.63 1220.37 L1625.22 1220.37 L1625.8 1220.37 L1626.39 1220.37 L1626.97 1220.37 L1627.56 1220.37 L1628.15 1220.37 L1628.73 1220.37 L1629.32 1220.37 L1629.91 1220.37 L1630.49 1220.37 L1631.08 1220.37 L1631.67 1220.37 L1632.25 1220.37 L1632.84 1220.37 L1633.42 1220.37 L1634.01 1220.37 L1634.6 1220.37 L1635.18 1220.37 L1635.77 1220.37 L1636.36 1220.37 L1636.94 1220.37 L1637.53 1220.37 L1638.12 1220.37 L1638.7 1220.37 L1639.29 1220.37 L1639.88 1220.37 L1640.46 1220.37 L1641.05 1220.37 L1641.63 1220.37 L1642.22 1220.37 L1642.81 1220.37 L1643.39 1220.37 L1643.98 1220.37 L1644.57 1220.37 L1645.15 1220.37 L1645.74 1220.37 L1646.33 1220.37 L1646.91 1220.37 L1647.5 1220.37 L1648.09 1220.37 L1648.67 1220.37 L1649.26 1220.37 L1649.84 1220.37 L1650.43 1220.37 L1651.02 1220.37 L1651.6 1220.37 L1652.19 1220.37 L1652.78 1220.37 L1653.36 1220.37 L1653.95 1220.37 L1654.54 1220.37 L1655.12 1220.37 L1655.71 1220.37 L1656.29 1220.37 L1656.88 1220.37 L1657.47 1220.37 L1658.05 1220.37 L1658.64 1220.37 L1659.23 1220.37 L1659.81 1220.37 L1660.4 1220.37 L1660.99 1220.37 L1661.57 1220.37 L1662.16 1220.37 L1662.75 1220.37 L1663.33 1220.37 L1663.92 1220.37 L1664.5 1220.37 L1665.09 1220.37 L1665.68 1220.37 L1666.26 1220.37 L1666.85 1220.37 L1667.44 1220.37 L1668.02 1220.37 L1668.61 1220.37 L1669.2 1220.37 L1669.78 1220.37 L1670.37 1220.37 L1670.96 1220.37 L1671.54 1220.37 L1672.13 1220.37 L1672.71 1220.37 L1673.3 1220.37 L1673.89 1220.37 L1674.47 1220.37 L1675.06 1220.37 L1675.65 1220.37 L1676.23 1220.37 L1676.82 1220.37 L1677.41 1220.37 L1677.99 1220.37 L1678.58 1220.37 L1679.17 1220.37 L1679.75 1220.37 L1680.34 1220.37 L1680.92 1220.37 L1681.51 1220.37 L1682.1 1220.37 L1682.68 1220.37 L1683.27 1220.37 L1683.86 1220.37 L1684.44 1220.37 L1685.03 1220.37 L1685.62 1220.37 L1686.2 1220.37 L1686.79 1220.37 L1687.37 1220.37 L1687.96 1220.37 L1688.55 1220.37 L1689.13 1220.37 L1689.72 1220.37 L1690.31 1220.37 L1690.89 1220.37 L1691.48 1220.37 L1692.07 1220.37 L1692.65 1220.37 L1693.24 1220.37 L1693.83 1220.37 L1694.41 1220.37 L1695 1220.37 L1695.58 1220.37 L1696.17 1220.37 L1696.76 1220.37 L1697.34 1220.37 L1697.93 1220.37 L1698.52 1220.37 L1699.1 1220.37 L1699.69 1220.37 L1700.28 1220.37 L1700.86 1220.37 L1701.45 1220.37 L1702.04 1220.37 L1702.62 1220.37 L1703.21 1220.37 L1703.79 1220.37 L1704.38 1220.37 L1704.97 1220.37 L1705.55 1220.37 L1706.14 1220.37 L1706.73 1220.37 L1707.31 1220.37 L1707.9 1220.37 L1708.49 1220.37 L1709.07 1220.37 L1709.66 1220.37 L1710.24 1220.37 L1710.83 1220.37 L1711.42 1220.37 L1712 1220.37 L1712.59 1220.37 L1713.18 1220.37 L1713.76 1220.37 L1714.35 1220.37 L1714.94 1220.37 L1715.52 1220.37 L1716.11 1220.37 L1716.7 1220.37 L1717.28 1220.37 L1717.87 1220.37 L1718.45 1220.37 L1719.04 1220.37 L1719.63 1220.37 L1720.21 1220.37 L1720.8 1220.37 L1721.39 1220.37 L1721.97 1220.37 L1722.56 1220.37 L1723.15 1220.37 L1723.73 1220.37 L1724.32 1220.37 L1724.91 1220.37 L1725.49 1220.37 L1726.08 1220.37 L1726.66 1220.37 L1727.25 1220.37 L1727.84 1220.37 L1728.42 1220.37 L1729.01 1220.37 L1729.6 1220.37 L1730.18 1220.37 L1730.77 1220.37 L1731.36 1220.37 L1731.94 1220.37 L1732.53 1220.37 L1733.11 1220.37 L1733.7 1220.37 L1734.29 1220.37 L1734.87 1220.37 L1735.46 1220.37 L1736.05 1220.37 L1736.63 1220.37 L1737.22 1220.37 L1737.81 1220.37 L1738.39 1220.37 L1738.98 1220.37 L1739.57 1220.37 L1740.15 1220.37 L1740.74 1220.37 L1741.32 1220.37 L1741.91 1220.37 L1742.5 1220.37 L1743.08 1220.37 L1743.67 1220.37 L1744.26 1220.37 L1744.84 1220.37 L1745.43 1220.37 L1746.02 1220.37 L1746.6 1220.37 L1747.19 1220.37 L1747.78 1220.37 L1748.36 1220.37 L1748.95 1220.37 L1749.53 1220.37 L1750.12 1220.37 L1750.71 1220.37 L1751.29 1220.37 L1751.88 1220.37 L1752.47 1220.37 L1753.05 1220.37 L1753.64 1220.37 L1754.23 1220.37 L1754.81 1220.37 L1755.4 1220.37 L1755.99 1220.37 L1756.57 1220.37 L1757.16 1220.37 L1757.74 1220.37 L1758.33 1220.37 L1758.92 1220.37 L1759.5 1220.37 L1760.09 1220.37 L1760.68 1220.37 L1761.26 1220.37 L1761.85 1220.37 L1762.44 1220.37 L1763.02 1220.37 L1763.61 1220.37 L1764.19 1220.37 L1764.78 1220.37 L1765.37 1220.37 L1765.95 1220.37 L1766.54 1220.37 L1767.13 1220.37 L1767.71 1220.37 L1768.3 1220.37 L1768.89 1220.37 L1769.47 1220.37 L1770.06 1220.37 L1770.65 1220.37 L1771.23 1220.37 L1771.82 1220.37 L1772.4 1220.37 L1772.99 1220.37 L1773.58 1220.37 L1774.16 1220.37 L1774.75 1220.37 L1775.34 1220.37 L1775.92 1220.37 L1776.51 1220.37 L1777.1 1220.37 L1777.68 1220.37 L1778.27 1220.37 L1778.86 1220.37 L1779.44 1220.37 L1780.03 1220.37 L1780.61 1220.37 L1781.2 1220.37 L1781.79 1220.37 L1782.37 1220.37 L1782.96 1220.37 L1783.55 1220.37 L1784.13 1220.37 L1784.72 1220.37 L1785.31 1220.37 L1785.89 1220.37 L1786.48 1220.37 L1787.06 1220.37 L1787.65 1220.37 L1788.24 1220.37 L1788.82 1220.37 L1789.41 1220.37 L1790 1220.37 L1790.58 1220.37 L1791.17 1220.37 L1791.76 1220.37 L1792.34 1220.37 L1792.93 1220.37 L1793.52 1220.37 L1794.1 1220.37 L1794.69 1220.37 L1795.27 1220.37 L1795.86 1220.37 L1796.45 1220.37 L1797.03 1220.37 L1797.62 1220.37 L1798.21 1220.37 L1798.79 1220.37 L1799.38 1220.37 L1799.97 1220.37 L1800.55 1220.37 L1801.14 1220.37 L1801.73 1220.37 L1802.31 1220.37 L1802.9 1220.37 L1803.48 1220.37 L1804.07 1220.37 L1804.66 1220.37 L1805.24 1220.37 L1805.83 1220.37 L1806.42 1220.37 L1807 1220.37 L1807.59 1220.37 L1808.18 1220.37 L1808.76 1220.37 L1809.35 1220.37 L1809.94 1220.37 L1810.52 1220.37 L1811.11 1220.37 L1811.69 1220.37 L1812.28 1220.37 L1812.87 1220.37 L1813.45 1220.37 L1814.04 1220.37 L1814.63 1220.37 L1815.21 1220.37 L1815.8 1220.37 L1816.39 1220.37 L1816.97 1220.37 L1817.56 1220.37 L1818.14 1220.37 L1818.73 1220.37 L1819.32 1220.37 L1819.9 1220.37 L1820.49 1220.37 L1821.08 1220.37 L1821.66 1220.37 L1822.25 1220.37 L1822.84 1220.37 L1823.42 1220.37 L1824.01 1220.37 L1824.6 1220.37 L1825.18 1220.37 L1825.77 1220.37 L1826.35 1220.37 L1826.94 1220.37 L1827.53 1220.37 L1828.11 1220.37 L1828.7 1220.37 L1829.29 1220.37 L1829.87 1220.37 L1830.46 1220.37 L1831.05 1220.37 L1831.63 1220.37 L1832.22 1220.37 L1832.81 1220.37 L1833.39 1220.37 L1833.98 1220.37 L1834.56 1220.37 L1835.15 1220.37 L1835.74 1220.37 L1836.32 1220.37 L1836.91 1220.37 L1837.5 1220.37 L1838.08 1220.37 L1838.67 1220.37 L1839.26 1220.37 L1839.84 1220.37 L1840.43 1220.37 L1841.01 1220.37 L1841.6 1220.37 L1842.19 1220.37 L1842.77 1220.37 L1843.36 1220.37 L1843.95 1220.37 L1844.53 1220.37 L1845.12 1220.37 L1845.71 1220.37 L1846.29 1220.37 L1846.88 1220.37 L1847.47 1220.37 L1848.05 1220.37 L1848.64 1220.37 L1849.22 1220.37 L1849.81 1220.37 L1850.4 1220.37 L1850.98 1220.37 L1851.57 1220.37 L1852.16 1220.37 L1852.74 1220.37 L1853.33 1220.37 L1853.92 1220.37 L1854.5 1220.37 L1855.09 1220.37 L1855.68 1220.37 L1856.26 1220.37 L1856.85 1220.37 L1857.43 1220.37 L1858.02 1220.37 L1858.61 1220.37 L1859.19 1220.37 L1859.78 1220.37 L1860.37 1220.37 L1860.95 1220.37 L1861.54 1220.37 L1862.13 1220.37 L1862.71 1220.37 L1863.3 1220.37 L1863.88 1220.37 L1864.47 1220.37 L1865.06 1220.37 L1865.64 1220.37 L1866.23 1220.37 L1866.82 1220.37 L1867.4 1220.37 L1867.99 1220.37 L1868.58 1220.37 L1869.16 1220.37 L1869.75 1220.37 L1870.34 1220.37 L1870.92 1220.37 L1871.51 1220.37 L1872.09 1220.37 L1872.68 1220.37 L1873.27 1220.37 L1873.85 1220.37 L1874.44 1220.37 L1875.03 1220.37 L1875.61 1220.37 L1876.2 1220.37 L1876.79 1220.37 L1877.37 1220.37 L1877.96 1220.37 L1878.55 1220.37 L1879.13 1220.37 L1879.72 1220.37 L1880.3 1220.37 L1880.89 1220.37 L1881.48 1220.37 L1882.06 1220.37 L1882.65 1220.37 L1883.24 1220.37 L1883.82 1220.37 L1884.41 1220.37 L1885 1220.37 L1885.58 1220.37 L1886.17 1220.37 L1886.76 1220.37 L1887.34 1220.37 L1887.93 1220.37 L1888.51 1220.37 L1889.1 1220.37 L1889.69 1220.37 L1890.27 1220.37 L1890.86 1220.37 L1891.45 1220.37 L1892.03 1220.37 L1892.62 1220.37 L1893.21 1220.37 L1893.79 1220.37 L1894.38 1220.37 L1894.96 1220.37 L1895.55 1220.37 L1896.14 1220.37 L1896.72 1220.37 L1897.31 1220.37 L1897.9 1220.37 L1898.48 1220.37 L1899.07 1220.37 L1899.66 1220.37 L1900.24 1220.37 L1900.83 1220.37 L1901.42 1220.37 L1902 1220.37 L1902.59 1220.37 L1903.17 1220.37 L1903.76 1220.37 L1904.35 1220.37 L1904.93 1220.37 L1905.52 1220.37 L1906.11 1220.37 L1906.69 1220.37 L1907.28 1220.37 L1907.87 1220.37 L1908.45 1220.37 L1909.04 1220.37 L1909.63 1220.37 L1910.21 1220.37 L1910.8 1220.37 L1911.38 1220.37 L1911.97 1220.37 L1912.56 1220.37 L1913.14 1220.37 L1913.73 1220.37 L1914.32 1220.37 L1914.9 1220.37 L1915.49 1220.37 L1916.08 1220.37 L1916.66 1220.37 L1917.25 1220.37 L1917.83 1220.37 L1918.42 1220.37 L1919.01 1220.37 L1919.59 1220.37 L1920.18 1220.37 L1920.77 1220.37 L1921.35 1220.37 L1921.94 1220.37 L1922.53 1220.37 L1923.11 1220.37 L1923.7 1220.37 L1924.29 1220.37 L1924.87 1220.37 L1925.46 1220.37 L1926.04 1220.37 L1926.63 1220.37 L1927.22 1220.37 L1927.8 1220.37 L1928.39 1220.37 L1928.98 1220.37 L1929.56 1220.37 L1930.15 1220.37 L1930.74 1220.37 L1931.32 1220.37 L1931.91 1220.37 L1932.5 1220.37 L1933.08 1220.37 L1933.67 1220.37 L1934.25 1220.37 L1934.84 1220.37 L1935.43 1220.37 L1936.01 1220.37 L1936.6 1220.37 L1937.19 1220.37 L1937.77 1220.37 L1938.36 1220.37 L1938.95 1220.37 L1939.53 1220.37 L1940.12 1220.37 L1940.71 1220.37 L1941.29 1220.37 L1941.88 1220.37 L1942.46 1220.37 L1943.05 1220.37 L1943.64 1220.37 L1944.22 1220.37 L1944.81 1220.37 L1945.4 1220.37 L1945.98 1220.37 L1946.57 1220.37 L1947.16 1220.37 L1947.74 1220.37 L1948.33 1220.37 L1948.91 1220.37 L1949.5 1220.37 L1950.09 1220.37 L1950.67 1220.37 L1951.26 1220.37 L1951.85 1220.37 L1952.43 1220.37 L1953.02 1220.37 L1953.61 1220.37 L1954.19 1220.37 L1954.78 1220.37 L1955.37 1220.37 L1955.95 1220.37 L1956.54 1220.37 L1957.12 1220.37 L1957.71 1220.37 L1958.3 1220.37 L1958.88 1220.37 L1959.47 1220.37 L1960.06 1220.37 L1960.64 1220.37 L1961.23 1220.37 L1961.82 1220.37 L1962.4 1220.37 L1962.99 1220.37 L1963.58 1220.37 L1964.16 1220.37 L1964.75 1220.37 L1965.33 1220.37 L1965.92 1220.37 L1966.51 1220.37 L1967.09 1220.37 L1967.68 1220.37 L1968.27 1220.37 L1968.85 1220.37 L1969.44 1220.37 L1970.03 1220.37 L1970.61 1220.37 L1971.2 1220.37 L1971.78 1220.37 L1972.37 1220.37 L1972.96 1220.37 L1973.54 1220.37 L1974.13 1220.37 L1974.72 1220.37 L1975.3 1220.37 L1975.89 1220.37 L1976.48 1220.37 L1977.06 1220.37 L1977.65 1220.37 L1978.24 1220.37 L1978.82 1220.37 L1979.41 1220.37 L1979.99 1220.37 L1980.58 1220.37 L1981.17 1220.37 L1981.75 1220.37 L1982.34 1220.37 L1982.93 1220.37 L1983.51 1220.37 L1984.1 1220.37 L1984.69 1220.37 L1985.27 1220.37 L1985.86 1220.37 L1986.45 1220.37 L1987.03 1220.37 L1987.62 1220.37 L1988.2 1220.37 L1988.79 1220.37 L1989.38 1220.37 L1989.96 1220.37 L1990.55 1220.37 L1991.14 1220.37 L1991.72 1220.37 L1992.31 1220.37 L1992.9 1220.37 L1993.48 1220.37 L1994.07 1220.37 L1994.65 1220.37 L1995.24 1220.37 L1995.83 1220.37 L1996.41 1220.37 L1997 1220.37 L1997.59 1220.37 L1998.17 1220.37 L1998.76 1220.37 L1999.35 1220.37 L1999.93 1220.37 L2000.52 1220.37 L2001.11 1220.37 L2001.69 1220.37 L2002.28 1220.37 L2002.86 1220.37 L2003.45 1220.37 L2004.04 1220.37 L2004.62 1220.37 L2005.21 1220.37 L2005.8 1220.37 L2006.38 1220.37 L2006.97 1220.37 L2007.56 1220.37 L2008.14 1220.37 L2008.73 1220.37 L2009.32 1220.37 L2009.9 1220.37 L2010.49 1220.37 L2011.07 1220.37 L2011.66 1220.37 L2012.25 1220.37 L2012.83 1220.37 L2013.42 1220.37 L2014.01 1220.37 L2014.59 1220.37 L2015.18 1220.37 L2015.77 1220.37 L2016.35 1220.37 L2016.94 1220.37 L2017.53 1220.37 L2018.11 1220.37 L2018.7 1220.37 L2019.28 1220.37 L2019.87 1220.37 L2020.46 1220.37 L2021.04 1220.37 L2021.63 1220.37 L2022.22 1220.37 L2022.8 1220.37 L2023.39 1220.37 L2023.98 1220.37 L2024.56 1220.37 L2025.15 1220.37 L2025.73 1220.37 L2026.32 1220.37 L2026.91 1220.37 L2027.49 1220.37 L2028.08 1220.37 L2028.67 1220.37 L2029.25 1220.37 L2029.84 1220.37 L2030.43 1220.37 L2031.01 1220.37 L2031.6 1220.37 L2032.19 1220.37 L2032.77 1220.37 L2033.36 1220.37 L2033.94 1220.37 L2034.53 1220.37 L2035.12 1220.37 L2035.7 1220.37 L2036.29 1220.37 L2036.88 1220.37 L2037.46 1220.37 L2038.05 1220.37 L2038.64 1220.37 L2039.22 1220.37 L2039.81 1220.37 L2040.4 1220.37 L2040.98 1220.37 L2041.57 1220.37 L2042.15 1220.37 L2042.74 1220.37 L2043.33 1220.37 L2043.91 1220.37 L2044.5 1220.37 L2045.09 1220.37 L2045.67 1220.37 L2046.26 1220.37 L2046.85 1220.37 L2047.43 1220.37 L2048.02 1220.37 L2048.6 1220.37 L2049.19 1220.37 L2049.78 1220.37 L2050.36 1220.37 L2050.95 1220.37 L2051.54 1220.37 L2052.12 1220.37 L2052.71 1220.37 L2053.3 1220.37 L2053.88 1220.37 L2054.47 1220.37 L2055.06 1220.37 L2055.64 1220.37 L2056.23 1220.37 L2056.81 1220.37 L2057.4 1220.37 L2057.99 1220.37 L2058.57 1220.37 L2059.16 1220.37 L2059.75 1220.37 L2060.33 1220.37 L2060.92 1220.37 L2061.51 1220.37 L2062.09 1220.37 L2062.68 1220.37 L2063.27 1220.37 L2063.85 1220.37 L2064.44 1220.37 L2065.02 1220.37 L2065.61 1220.37 L2066.2 1220.37 L2066.78 1220.37 L2067.37 1220.37 L2067.96 1220.37 L2068.54 1220.37 L2069.13 1220.37 L2069.72 1220.37 L2070.3 1220.37 L2070.89 1220.37 L2071.48 1220.37 L2072.06 1220.37 L2072.65 1220.37 L2073.23 1220.37 L2073.82 1220.37 L2074.41 1220.37 L2074.99 1220.37 L2075.58 1220.37 L2076.17 1220.37 L2076.75 1220.37 L2077.34 1220.37 L2077.93 1220.37 L2078.51 1220.37 L2079.1 1220.37 L2079.68 1220.37 L2080.27 1220.37 L2080.86 1220.37 L2081.44 1220.37 L2082.03 1220.37 L2082.62 1220.37 L2083.2 1220.37 L2083.79 1220.37 L2084.38 1220.37 L2084.96 1220.37 L2085.55 1220.37 L2086.14 1220.37 L2086.72 1220.37 L2087.31 1220.37 L2087.89 1220.37 L2088.48 1220.37 L2089.07 1220.37 L2089.65 1220.37 L2090.24 1220.37 L2090.83 1220.37 L2091.41 1220.37 L2092 1220.37 L2092.59 1220.37 L2093.17 1220.37 L2093.76 1220.37 L2094.35 1220.37 L2094.93 1220.37 L2095.52 1220.37 L2096.1 1220.37 L2096.69 1220.37 L2097.28 1220.37 L2097.86 1220.37 L2098.45 1220.37 L2099.04 1220.37 L2099.62 1220.37 L2100.21 1220.37 L2100.8 1220.37 L2101.38 1220.37 L2101.97 1220.37 L2102.55 1220.37 L2103.14 1220.37 L2103.73 1220.37 L2104.31 1220.37 L2104.9 1220.37 L2105.49 1220.37 L2106.07 1220.37 L2106.66 1220.37 L2107.25 1220.37 L2107.83 1220.37 L2108.42 1220.37 L2109.01 1220.37 L2109.59 1220.37 L2110.18 1220.37 L2110.76 1220.37 L2111.35 1220.37 L2111.94 1220.37 L2112.52 1220.37 L2113.11 1220.37 L2113.7 1220.37 L2114.28 1220.37 L2114.87 1220.37 L2115.46 1220.37 L2116.04 1220.37 L2116.63 1220.37 L2117.22 1220.37 L2117.8 1220.37 L2118.39 1220.37 L2118.97 1220.37 L2119.56 1220.37 L2120.15 1220.37 L2120.73 1220.37 L2121.32 1220.37 L2121.91 1220.37 L2122.49 1220.37 L2123.08 1220.37 L2123.67 1220.37 L2124.25 1220.37 L2124.84 1220.37 L2125.42 1220.37 L2126.01 1220.37 L2126.6 1220.37 L2127.18 1220.37 L2127.77 1220.37 L2128.36 1220.37 L2128.94 1220.37 L2129.53 1220.37 L2130.12 1220.37 L2130.7 1220.37 L2131.29 1220.37 L2131.88 1220.37 L2132.46 1220.37 L2133.05 1220.37 L2133.63 1220.37 L2134.22 1220.37 L2134.81 1220.37 L2135.39 1220.37 L2135.98 1220.37 L2136.57 1220.37 L2137.15 1220.37 L2137.74 1220.37 L2138.33 1220.37 L2138.91 1220.37 L2139.5 1220.37 L2140.09 1220.37 L2140.67 1220.37 L2141.26 1220.37 L2141.84 1220.37 L2142.43 1220.37 L2143.02 1220.37 L2143.6 1220.37 L2144.19 1220.37 L2144.78 1220.37 L2145.36 1220.37 L2145.95 1220.37 L2146.54 1220.37 L2147.12 1220.37 L2147.71 1220.37 L2148.3 1220.37 L2148.88 1220.37 L2149.47 1220.37 L2150.05 1220.37 L2150.64 1220.37 L2151.23 1220.37 L2151.81 1220.37 L2152.4 1220.37 L2152.99 1220.37 L2153.57 1220.37 L2154.16 1220.37 L2154.75 1220.37 L2155.33 1220.37 L2155.92 1220.37 L2156.5 1220.37 L2157.09 1220.37 L2157.68 1220.37 L2158.26 1220.37 L2158.26 1219.65 L2157.68 1219.65 L2157.09 1219.65 L2156.5 1219.65 L2155.92 1219.65 L2155.33 1219.65 L2154.75 1219.65 L2154.16 1219.65 L2153.57 1219.65 L2152.99 1219.65 L2152.4 1219.65 L2151.81 1219.65 L2151.23 1219.65 L2150.64 1219.65 L2150.05 1219.65 L2149.47 1219.65 L2148.88 1219.65 L2148.3 1219.65 L2147.71 1219.65 L2147.12 1219.65 L2146.54 1219.65 L2145.95 1219.65 L2145.36 1219.65 L2144.78 1219.65 L2144.19 1219.65 L2143.6 1219.65 L2143.02 1219.65 L2142.43 1219.65 L2141.84 1219.65 L2141.26 1219.65 L2140.67 1219.65 L2140.09 1219.65 L2139.5 1219.65 L2138.91 1219.65 L2138.33 1219.65 L2137.74 1219.65 L2137.15 1219.65 L2136.57 1219.65 L2135.98 1219.65 L2135.39 1219.65 L2134.81 1219.65 L2134.22 1219.65 L2133.63 1219.65 L2133.05 1219.65 L2132.46 1219.65 L2131.88 1219.65 L2131.29 1219.65 L2130.7 1219.65 L2130.12 1219.65 L2129.53 1219.65 L2128.94 1219.65 L2128.36 1219.65 L2127.77 1219.65 L2127.18 1219.65 L2126.6 1219.65 L2126.01 1219.65 L2125.42 1219.65 L2124.84 1219.65 L2124.25 1219.65 L2123.67 1219.65 L2123.08 1219.65 L2122.49 1219.65 L2121.91 1219.65 L2121.32 1219.65 L2120.73 1219.65 L2120.15 1219.65 L2119.56 1219.65 L2118.97 1219.65 L2118.39 1219.65 L2117.8 1219.65 L2117.22 1219.65 L2116.63 1219.65 L2116.04 1219.65 L2115.46 1219.65 L2114.87 1219.65 L2114.28 1219.65 L2113.7 1219.65 L2113.11 1219.65 L2112.52 1219.65 L2111.94 1219.65 L2111.35 1219.65 L2110.76 1219.65 L2110.18 1219.65 L2109.59 1219.65 L2109.01 1219.65 L2108.42 1219.65 L2107.83 1219.65 L2107.25 1219.65 L2106.66 1219.65 L2106.07 1219.65 L2105.49 1219.65 L2104.9 1219.65 L2104.31 1219.65 L2103.73 1219.65 L2103.14 1219.65 L2102.55 1219.65 L2101.97 1219.65 L2101.38 1219.65 L2100.8 1219.65 L2100.21 1219.65 L2099.62 1219.65 L2099.04 1219.65 L2098.45 1219.65 L2097.86 1219.65 L2097.28 1219.65 L2096.69 1219.65 L2096.1 1219.65 L2095.52 1219.65 L2094.93 1219.65 L2094.35 1219.65 L2093.76 1219.65 L2093.17 1219.65 L2092.59 1219.65 L2092 1219.65 L2091.41 1219.65 L2090.83 1219.65 L2090.24 1219.65 L2089.65 1219.65 L2089.07 1219.65 L2088.48 1219.65 L2087.89 1219.65 L2087.31 1219.65 L2086.72 1219.65 L2086.14 1219.65 L2085.55 1219.65 L2084.96 1219.65 L2084.38 1219.65 L2083.79 1219.65 L2083.2 1219.65 L2082.62 1219.65 L2082.03 1219.65 L2081.44 1219.65 L2080.86 1219.65 L2080.27 1219.65 L2079.68 1219.65 L2079.1 1219.65 L2078.51 1219.65 L2077.93 1219.65 L2077.34 1219.65 L2076.75 1219.65 L2076.17 1219.65 L2075.58 1219.65 L2074.99 1219.65 L2074.41 1219.65 L2073.82 1219.65 L2073.23 1219.65 L2072.65 1219.65 L2072.06 1219.65 L2071.48 1219.65 L2070.89 1219.65 L2070.3 1219.65 L2069.72 1219.65 L2069.13 1219.65 L2068.54 1219.65 L2067.96 1219.65 L2067.37 1219.65 L2066.78 1219.65 L2066.2 1219.65 L2065.61 1219.65 L2065.02 1219.65 L2064.44 1219.65 L2063.85 1219.65 L2063.27 1219.65 L2062.68 1219.65 L2062.09 1219.65 L2061.51 1219.65 L2060.92 1219.65 L2060.33 1219.65 L2059.75 1219.65 L2059.16 1219.65 L2058.57 1219.65 L2057.99 1219.65 L2057.4 1219.65 L2056.81 1219.65 L2056.23 1219.65 L2055.64 1219.65 L2055.06 1219.65 L2054.47 1219.65 L2053.88 1219.65 L2053.3 1219.65 L2052.71 1219.65 L2052.12 1219.65 L2051.54 1219.65 L2050.95 1219.65 L2050.36 1219.65 L2049.78 1219.65 L2049.19 1219.65 L2048.6 1219.65 L2048.02 1219.65 L2047.43 1219.65 L2046.85 1219.65 L2046.26 1219.65 L2045.67 1219.65 L2045.09 1219.65 L2044.5 1219.65 L2043.91 1219.65 L2043.33 1219.65 L2042.74 1219.65 L2042.15 1219.65 L2041.57 1219.65 L2040.98 1219.65 L2040.4 1219.65 L2039.81 1219.65 L2039.22 1219.65 L2038.64 1219.65 L2038.05 1219.65 L2037.46 1219.65 L2036.88 1219.65 L2036.29 1219.65 L2035.7 1219.65 L2035.12 1219.65 L2034.53 1219.65 L2033.94 1219.65 L2033.36 1219.65 L2032.77 1219.65 L2032.19 1219.65 L2031.6 1219.65 L2031.01 1219.65 L2030.43 1219.65 L2029.84 1219.65 L2029.25 1219.65 L2028.67 1219.65 L2028.08 1219.65 L2027.49 1219.65 L2026.91 1219.65 L2026.32 1219.65 L2025.73 1219.65 L2025.15 1219.65 L2024.56 1219.65 L2023.98 1219.65 L2023.39 1219.65 L2022.8 1219.65 L2022.22 1219.65 L2021.63 1219.65 L2021.04 1219.65 L2020.46 1219.65 L2019.87 1219.65 L2019.28 1219.65 L2018.7 1219.65 L2018.11 1219.65 L2017.53 1219.65 L2016.94 1219.65 L2016.35 1219.65 L2015.77 1219.65 L2015.18 1219.65 L2014.59 1219.65 L2014.01 1219.65 L2013.42 1219.65 L2012.83 1219.65 L2012.25 1219.65 L2011.66 1219.65 L2011.07 1219.65 L2010.49 1219.65 L2009.9 1219.65 L2009.32 1219.65 L2008.73 1219.65 L2008.14 1219.65 L2007.56 1219.65 L2006.97 1219.65 L2006.38 1219.65 L2005.8 1219.65 L2005.21 1219.65 L2004.62 1219.65 L2004.04 1219.65 L2003.45 1219.65 L2002.86 1219.65 L2002.28 1219.65 L2001.69 1219.65 L2001.11 1219.65 L2000.52 1219.65 L1999.93 1219.65 L1999.35 1219.65 L1998.76 1219.65 L1998.17 1219.65 L1997.59 1219.65 L1997 1219.65 L1996.41 1219.65 L1995.83 1219.65 L1995.24 1219.65 L1994.65 1219.65 L1994.07 1219.65 L1993.48 1219.65 L1992.9 1219.65 L1992.31 1219.65 L1991.72 1219.65 L1991.14 1219.65 L1990.55 1219.65 L1989.96 1219.65 L1989.38 1219.65 L1988.79 1219.65 L1988.2 1219.65 L1987.62 1219.65 L1987.03 1219.65 L1986.45 1219.65 L1985.86 1219.65 L1985.27 1219.65 L1984.69 1219.65 L1984.1 1219.65 L1983.51 1219.65 L1982.93 1219.65 L1982.34 1219.65 L1981.75 1219.65 L1981.17 1219.65 L1980.58 1219.65 L1979.99 1219.65 L1979.41 1219.65 L1978.82 1219.65 L1978.24 1219.65 L1977.65 1219.65 L1977.06 1219.65 L1976.48 1219.65 L1975.89 1219.65 L1975.3 1219.65 L1974.72 1219.65 L1974.13 1219.65 L1973.54 1219.65 L1972.96 1219.65 L1972.37 1219.65 L1971.78 1219.65 L1971.2 1219.65 L1970.61 1219.65 L1970.03 1219.65 L1969.44 1219.65 L1968.85 1219.65 L1968.27 1219.65 L1967.68 1219.65 L1967.09 1219.65 L1966.51 1219.65 L1965.92 1219.65 L1965.33 1219.65 L1964.75 1219.65 L1964.16 1219.65 L1963.58 1219.65 L1962.99 1219.65 L1962.4 1219.65 L1961.82 1219.65 L1961.23 1219.65 L1960.64 1219.65 L1960.06 1219.65 L1959.47 1219.65 L1958.88 1219.65 L1958.3 1219.65 L1957.71 1219.65 L1957.12 1219.65 L1956.54 1219.65 L1955.95 1219.65 L1955.37 1219.65 L1954.78 1219.65 L1954.19 1219.65 L1953.61 1219.65 L1953.02 1219.65 L1952.43 1219.65 L1951.85 1219.65 L1951.26 1219.65 L1950.67 1219.65 L1950.09 1219.65 L1949.5 1219.65 L1948.91 1219.65 L1948.33 1219.65 L1947.74 1219.65 L1947.16 1219.65 L1946.57 1219.65 L1945.98 1219.65 L1945.4 1219.65 L1944.81 1219.65 L1944.22 1219.65 L1943.64 1219.65 L1943.05 1219.65 L1942.46 1219.65 L1941.88 1219.65 L1941.29 1219.65 L1940.71 1219.65 L1940.12 1219.65 L1939.53 1219.65 L1938.95 1219.65 L1938.36 1219.65 L1937.77 1219.65 L1937.19 1219.65 L1936.6 1219.65 L1936.01 1219.65 L1935.43 1219.65 L1934.84 1219.65 L1934.25 1219.65 L1933.67 1219.65 L1933.08 1219.65 L1932.5 1219.65 L1931.91 1219.65 L1931.32 1219.65 L1930.74 1219.65 L1930.15 1219.65 L1929.56 1219.65 L1928.98 1219.65 L1928.39 1219.65 L1927.8 1219.65 L1927.22 1219.65 L1926.63 1219.65 L1926.04 1219.65 L1925.46 1219.65 L1924.87 1219.65 L1924.29 1219.65 L1923.7 1219.65 L1923.11 1219.65 L1922.53 1219.65 L1921.94 1219.65 L1921.35 1219.65 L1920.77 1219.65 L1920.18 1219.65 L1919.59 1219.65 L1919.01 1219.65 L1918.42 1219.65 L1917.83 1219.65 L1917.25 1219.65 L1916.66 1219.65 L1916.08 1219.65 L1915.49 1219.65 L1914.9 1219.65 L1914.32 1219.65 L1913.73 1219.65 L1913.14 1219.65 L1912.56 1219.65 L1911.97 1219.65 L1911.38 1219.65 L1910.8 1219.65 L1910.21 1219.65 L1909.63 1219.65 L1909.04 1219.65 L1908.45 1219.65 L1907.87 1219.65 L1907.28 1219.65 L1906.69 1219.65 L1906.11 1219.65 L1905.52 1219.65 L1904.93 1219.65 L1904.35 1219.65 L1903.76 1219.65 L1903.17 1219.65 L1902.59 1219.65 L1902 1219.65 L1901.42 1219.65 L1900.83 1219.65 L1900.24 1219.65 L1899.66 1219.65 L1899.07 1219.65 L1898.48 1219.65 L1897.9 1219.65 L1897.31 1219.65 L1896.72 1219.65 L1896.14 1219.65 L1895.55 1219.65 L1894.96 1219.65 L1894.38 1219.65 L1893.79 1219.65 L1893.21 1219.65 L1892.62 1219.65 L1892.03 1219.65 L1891.45 1219.65 L1890.86 1219.65 L1890.27 1219.65 L1889.69 1219.65 L1889.1 1219.65 L1888.51 1219.65 L1887.93 1219.65 L1887.34 1219.65 L1886.76 1219.65 L1886.17 1219.65 L1885.58 1219.65 L1885 1219.65 L1884.41 1219.65 L1883.82 1219.65 L1883.24 1219.65 L1882.65 1219.65 L1882.06 1219.65 L1881.48 1219.65 L1880.89 1219.65 L1880.3 1219.65 L1879.72 1219.65 L1879.13 1219.65 L1878.55 1219.65 L1877.96 1219.65 L1877.37 1219.65 L1876.79 1219.65 L1876.2 1219.65 L1875.61 1219.65 L1875.03 1219.65 L1874.44 1219.65 L1873.85 1219.65 L1873.27 1219.65 L1872.68 1219.65 L1872.09 1219.65 L1871.51 1219.65 L1870.92 1219.65 L1870.34 1219.65 L1869.75 1219.65 L1869.16 1219.65 L1868.58 1219.65 L1867.99 1219.65 L1867.4 1219.65 L1866.82 1219.65 L1866.23 1219.65 L1865.64 1219.65 L1865.06 1219.65 L1864.47 1219.65 L1863.88 1219.65 L1863.3 1219.65 L1862.71 1219.65 L1862.13 1219.65 L1861.54 1219.65 L1860.95 1219.65 L1860.37 1219.65 L1859.78 1219.65 L1859.19 1219.65 L1858.61 1219.65 L1858.02 1219.65 L1857.43 1219.65 L1856.85 1219.65 L1856.26 1219.65 L1855.68 1219.65 L1855.09 1219.65 L1854.5 1219.65 L1853.92 1219.65 L1853.33 1219.65 L1852.74 1219.65 L1852.16 1219.65 L1851.57 1219.65 L1850.98 1219.65 L1850.4 1219.65 L1849.81 1219.65 L1849.22 1219.65 L1848.64 1219.65 L1848.05 1219.65 L1847.47 1219.65 L1846.88 1219.65 L1846.29 1219.65 L1845.71 1219.65 L1845.12 1219.65 L1844.53 1219.65 L1843.95 1219.65 L1843.36 1219.65 L1842.77 1219.65 L1842.19 1219.65 L1841.6 1219.65 L1841.01 1219.65 L1840.43 1219.65 L1839.84 1219.65 L1839.26 1219.65 L1838.67 1219.65 L1838.08 1219.65 L1837.5 1219.65 L1836.91 1219.65 L1836.32 1219.65 L1835.74 1219.65 L1835.15 1219.65 L1834.56 1219.65 L1833.98 1219.65 L1833.39 1219.65 L1832.81 1219.65 L1832.22 1219.65 L1831.63 1219.65 L1831.05 1219.65 L1830.46 1219.65 L1829.87 1219.65 L1829.29 1219.65 L1828.7 1219.65 L1828.11 1219.65 L1827.53 1219.65 L1826.94 1219.65 L1826.35 1219.65 L1825.77 1219.65 L1825.18 1219.65 L1824.6 1219.65 L1824.01 1219.65 L1823.42 1219.65 L1822.84 1219.65 L1822.25 1219.65 L1821.66 1219.65 L1821.08 1219.65 L1820.49 1219.65 L1819.9 1219.65 L1819.32 1219.65 L1818.73 1219.65 L1818.14 1219.65 L1817.56 1219.65 L1816.97 1219.65 L1816.39 1219.65 L1815.8 1219.65 L1815.21 1219.65 L1814.63 1219.65 L1814.04 1219.65 L1813.45 1219.65 L1812.87 1219.65 L1812.28 1219.65 L1811.69 1219.65 L1811.11 1219.65 L1810.52 1219.65 L1809.94 1219.65 L1809.35 1219.65 L1808.76 1219.65 L1808.18 1219.65 L1807.59 1219.65 L1807 1219.65 L1806.42 1219.65 L1805.83 1219.65 L1805.24 1219.65 L1804.66 1219.65 L1804.07 1219.65 L1803.48 1219.65 L1802.9 1219.65 L1802.31 1219.65 L1801.73 1219.65 L1801.14 1219.65 L1800.55 1219.65 L1799.97 1219.65 L1799.38 1219.65 L1798.79 1219.65 L1798.21 1219.65 L1797.62 1219.65 L1797.03 1219.65 L1796.45 1219.65 L1795.86 1219.65 L1795.27 1219.65 L1794.69 1219.65 L1794.1 1219.65 L1793.52 1219.65 L1792.93 1219.65 L1792.34 1219.65 L1791.76 1219.65 L1791.17 1219.65 L1790.58 1219.65 L1790 1219.65 L1789.41 1219.65 L1788.82 1219.65 L1788.24 1219.65 L1787.65 1219.65 L1787.06 1219.65 L1786.48 1219.65 L1785.89 1219.65 L1785.31 1219.65 L1784.72 1219.65 L1784.13 1219.65 L1783.55 1219.65 L1782.96 1219.65 L1782.37 1219.65 L1781.79 1219.65 L1781.2 1219.65 L1780.61 1219.65 L1780.03 1219.65 L1779.44 1219.65 L1778.86 1219.65 L1778.27 1219.65 L1777.68 1219.65 L1777.1 1219.65 L1776.51 1219.65 L1775.92 1219.65 L1775.34 1219.65 L1774.75 1219.65 L1774.16 1219.65 L1773.58 1219.65 L1772.99 1219.65 L1772.4 1219.65 L1771.82 1219.65 L1771.23 1219.65 L1770.65 1219.65 L1770.06 1219.65 L1769.47 1219.65 L1768.89 1219.65 L1768.3 1219.65 L1767.71 1219.65 L1767.13 1219.65 L1766.54 1219.65 L1765.95 1219.65 L1765.37 1219.65 L1764.78 1219.65 L1764.19 1219.65 L1763.61 1219.65 L1763.02 1219.65 L1762.44 1219.65 L1761.85 1219.65 L1761.26 1219.65 L1760.68 1219.65 L1760.09 1219.65 L1759.5 1219.65 L1758.92 1219.65 L1758.33 1219.65 L1757.74 1219.65 L1757.16 1219.65 L1756.57 1219.65 L1755.99 1219.65 L1755.4 1219.65 L1754.81 1219.65 L1754.23 1219.65 L1753.64 1219.65 L1753.05 1219.65 L1752.47 1219.65 L1751.88 1219.65 L1751.29 1219.65 L1750.71 1219.65 L1750.12 1219.65 L1749.53 1219.65 L1748.95 1219.65 L1748.36 1219.65 L1747.78 1219.65 L1747.19 1219.65 L1746.6 1219.65 L1746.02 1219.65 L1745.43 1219.65 L1744.84 1219.65 L1744.26 1219.65 L1743.67 1219.65 L1743.08 1219.65 L1742.5 1219.65 L1741.91 1219.65 L1741.32 1219.65 L1740.74 1219.65 L1740.15 1219.65 L1739.57 1219.65 L1738.98 1219.65 L1738.39 1219.65 L1737.81 1219.65 L1737.22 1219.65 L1736.63 1219.65 L1736.05 1219.65 L1735.46 1219.65 L1734.87 1219.65 L1734.29 1219.65 L1733.7 1219.65 L1733.11 1219.65 L1732.53 1219.65 L1731.94 1219.65 L1731.36 1219.65 L1730.77 1219.65 L1730.18 1219.65 L1729.6 1219.65 L1729.01 1219.65 L1728.42 1219.65 L1727.84 1219.65 L1727.25 1219.65 L1726.66 1219.65 L1726.08 1219.65 L1725.49 1219.65 L1724.91 1219.65 L1724.32 1219.65 L1723.73 1219.65 L1723.15 1219.65 L1722.56 1219.65 L1721.97 1219.65 L1721.39 1219.65 L1720.8 1219.65 L1720.21 1219.65 L1719.63 1219.65 L1719.04 1219.65 L1718.45 1219.65 L1717.87 1219.65 L1717.28 1219.65 L1716.7 1219.65 L1716.11 1219.65 L1715.52 1219.65 L1714.94 1219.65 L1714.35 1219.65 L1713.76 1219.65 L1713.18 1219.65 L1712.59 1219.65 L1712 1219.65 L1711.42 1219.65 L1710.83 1219.65 L1710.24 1219.65 L1709.66 1219.65 L1709.07 1219.65 L1708.49 1219.65 L1707.9 1219.65 L1707.31 1219.65 L1706.73 1219.65 L1706.14 1219.65 L1705.55 1219.65 L1704.97 1219.65 L1704.38 1219.65 L1703.79 1219.65 L1703.21 1219.65 L1702.62 1219.65 L1702.04 1219.65 L1701.45 1219.65 L1700.86 1219.65 L1700.28 1219.65 L1699.69 1219.65 L1699.1 1219.65 L1698.52 1219.65 L1697.93 1219.65 L1697.34 1219.65 L1696.76 1219.65 L1696.17 1219.65 L1695.58 1219.65 L1695 1219.65 L1694.41 1219.65 L1693.83 1219.65 L1693.24 1219.65 L1692.65 1219.65 L1692.07 1219.65 L1691.48 1219.65 L1690.89 1219.65 L1690.31 1219.65 L1689.72 1219.65 L1689.13 1219.65 L1688.55 1219.65 L1687.96 1219.65 L1687.37 1219.65 L1686.79 1219.65 L1686.2 1219.65 L1685.62 1219.65 L1685.03 1219.65 L1684.44 1219.65 L1683.86 1219.65 L1683.27 1219.65 L1682.68 1219.65 L1682.1 1219.65 L1681.51 1219.65 L1680.92 1219.65 L1680.34 1219.65 L1679.75 1219.65 L1679.17 1219.65 L1678.58 1219.65 L1677.99 1219.65 L1677.41 1219.65 L1676.82 1219.65 L1676.23 1219.65 L1675.65 1219.65 L1675.06 1219.65 L1674.47 1219.65 L1673.89 1219.65 L1673.3 1219.65 L1672.71 1219.65 L1672.13 1219.65 L1671.54 1219.65 L1670.96 1219.65 L1670.37 1219.65 L1669.78 1219.65 L1669.2 1219.65 L1668.61 1219.65 L1668.02 1219.65 L1667.44 1219.65 L1666.85 1219.65 L1666.26 1219.65 L1665.68 1219.65 L1665.09 1219.65 L1664.5 1219.65 L1663.92 1219.65 L1663.33 1219.65 L1662.75 1219.65 L1662.16 1219.65 L1661.57 1219.65 L1660.99 1219.65 L1660.4 1219.65 L1659.81 1219.65 L1659.23 1219.65 L1658.64 1219.65 L1658.05 1219.65 L1657.47 1219.65 L1656.88 1219.65 L1656.29 1219.65 L1655.71 1219.65 L1655.12 1219.65 L1654.54 1219.65 L1653.95 1219.65 L1653.36 1219.65 L1652.78 1219.65 L1652.19 1219.65 L1651.6 1219.65 L1651.02 1219.65 L1650.43 1219.65 L1649.84 1219.65 L1649.26 1219.65 L1648.67 1219.65 L1648.09 1219.65 L1647.5 1219.65 L1646.91 1219.65 L1646.33 1219.65 L1645.74 1219.65 L1645.15 1219.65 L1644.57 1219.65 L1643.98 1219.65 L1643.39 1219.65 L1642.81 1219.65 L1642.22 1219.65 L1641.63 1219.65 L1641.05 1219.65 L1640.46 1219.65 L1639.88 1219.65 L1639.29 1219.65 L1638.7 1219.65 L1638.12 1219.65 L1637.53 1219.65 L1636.94 1219.65 L1636.36 1219.65 L1635.77 1219.65 L1635.18 1219.65 L1634.6 1219.65 L1634.01 1219.65 L1633.42 1219.65 L1632.84 1219.65 L1632.25 1219.65 L1631.67 1219.65 L1631.08 1219.65 L1630.49 1219.65 L1629.91 1219.65 L1629.32 1219.65 L1628.73 1219.65 L1628.15 1219.65 L1627.56 1219.65 L1626.97 1219.65 L1626.39 1219.65 L1625.8 1219.65 L1625.22 1219.65 L1624.63 1219.65 L1624.04 1219.65 L1623.46 1219.65 L1622.87 1219.65 L1622.28 1219.65 L1621.7 1219.65 L1621.11 1219.65 L1620.52 1219.65 L1619.94 1219.65 L1619.35 1219.65 L1618.76 1219.65 L1618.18 1219.65 L1617.59 1219.65 L1617.01 1219.65 L1616.42 1219.65 L1615.83 1219.65 L1615.25 1219.65 L1614.66 1219.65 L1614.07 1219.65 L1613.49 1219.65 L1612.9 1219.65 L1612.31 1219.65 L1611.73 1219.65 L1611.14 1219.65 L1610.55 1219.65 L1609.97 1219.65 L1609.38 1219.65 L1608.8 1219.65 L1608.21 1219.65 L1607.62 1219.65 L1607.04 1219.65 L1606.45 1219.65 L1605.86 1219.65 L1605.28 1219.65 L1604.69 1219.65 L1604.1 1219.65 L1603.52 1219.65 L1602.93 1219.65 L1602.34 1219.65 L1601.76 1219.65 L1601.17 1219.65 L1600.59 1219.65 L1600 1219.65 L1599.41 1219.65 L1598.83 1219.65 L1598.24 1219.65 L1597.65 1219.65 L1597.07 1219.65 L1596.48 1219.65 L1595.89 1219.65 L1595.31 1219.65 L1594.72 1219.65 L1594.14 1219.65 L1593.55 1219.65 L1592.96 1219.65 L1592.38 1219.65 L1591.79 1219.65 L1591.2 1219.65 L1590.62 1219.65 L1590.03 1219.65 L1589.44 1219.65 L1588.86 1219.65 L1588.27 1219.65 L1587.68 1219.65 L1587.1 1219.65 L1586.51 1219.65 L1585.93 1219.65 L1585.34 1219.65 L1584.75 1219.65 L1584.17 1219.65 L1583.58 1219.65 L1582.99 1219.65 L1582.41 1219.65 L1581.82 1219.65 L1581.23 1219.65 L1580.65 1219.65 L1580.06 1219.65 L1579.47 1219.65 L1578.89 1219.65 L1578.3 1219.65 L1577.72 1219.65 L1577.13 1219.65 L1576.54 1219.65 L1575.96 1219.65 L1575.37 1219.65 L1574.78 1219.65 L1574.2 1219.65 L1573.61 1219.65 L1573.02 1219.65 L1572.44 1219.65 L1571.85 1219.65 L1571.27 1219.65 L1570.68 1219.65 L1570.09 1219.65 L1569.51 1219.65 L1568.92 1219.65 L1568.33 1219.65 L1567.75 1219.65 L1567.16 1219.65 L1566.57 1219.65 L1565.99 1219.65 L1565.4 1219.65 L1564.81 1219.65 L1564.23 1219.65 L1563.64 1219.65 L1563.06 1219.65 L1562.47 1219.65 L1561.88 1219.65 L1561.3 1219.65 L1560.71 1219.65 L1560.12 1219.65 L1559.54 1219.65 L1558.95 1219.65 L1558.36 1219.65 L1557.78 1219.65 L1557.19 1219.65 L1556.6 1219.65 L1556.02 1219.65 L1555.43 1219.65 L1554.85 1219.65 L1554.26 1219.65 L1553.67 1219.65 L1553.09 1219.65 L1552.5 1219.65 L1551.91 1219.65 L1551.33 1219.65 L1550.74 1219.65 L1550.15 1219.65 L1549.57 1219.65 L1548.98 1219.65 L1548.4 1219.65 L1547.81 1219.65 L1547.22 1219.65 L1546.64 1219.65 L1546.05 1219.65 L1545.46 1219.65 L1544.88 1219.65 L1544.29 1219.65 L1543.7 1219.65 L1543.12 1219.65 L1542.53 1219.65 L1541.94 1219.65 L1541.36 1219.65 L1540.77 1219.65 L1540.19 1219.65 L1539.6 1219.65 L1539.01 1219.65 L1538.43 1219.65 L1537.84 1219.65 L1537.25 1219.65 L1536.67 1219.65 L1536.08 1219.65 L1535.49 1219.65 L1534.91 1219.65 L1534.32 1219.65 L1533.73 1219.65 L1533.15 1219.65 L1532.56 1219.65 L1531.98 1219.65 L1531.39 1219.65 L1530.8 1219.65 L1530.22 1219.65 L1529.63 1219.65 L1529.04 1219.65 L1528.46 1219.65 L1527.87 1219.65 L1527.28 1219.65 L1526.7 1219.65 L1526.11 1219.65 L1525.52 1219.65 L1524.94 1219.65 L1524.35 1219.65 L1523.77 1219.65 L1523.18 1219.65 L1522.59 1219.65 L1522.01 1219.65 L1521.42 1219.65 L1520.83 1219.65 L1520.25 1219.65 L1519.66 1219.65 L1519.07 1219.65 L1518.49 1219.65 L1517.9 1219.65 L1517.32 1219.65 L1516.73 1219.65 L1516.14 1219.65 L1515.56 1219.65 L1514.97 1219.65 L1514.38 1219.65 L1513.8 1219.65 L1513.21 1219.65 L1512.62 1219.65 L1512.04 1219.65 L1511.45 1219.65 L1510.86 1219.65 L1510.28 1219.65 L1509.69 1219.65 L1509.11 1219.65 L1508.52 1219.65 L1507.93 1219.65 L1507.35 1219.65 L1506.76 1219.65 L1506.17 1219.65 L1505.59 1219.65 L1505 1219.65 L1504.41 1219.65 L1503.83 1219.65 L1503.24 1219.65 L1502.65 1219.65 L1502.07 1219.65 L1501.48 1219.65 L1500.9 1219.65 L1500.31 1219.65 L1499.72 1219.65 L1499.14 1219.65 L1498.55 1219.65 L1497.96 1219.65 L1497.38 1219.65 L1496.79 1219.65 L1496.2 1219.65 L1495.62 1219.65 L1495.03 1219.65 L1494.45 1219.65 L1493.86 1219.65 L1493.27 1219.65 L1492.69 1219.65 L1492.1 1219.65 L1491.51 1219.65 L1490.93 1219.65 L1490.34 1219.65 L1489.75 1219.65 L1489.17 1219.65 L1488.58 1219.65 L1487.99 1219.65 L1487.41 1219.65 L1486.82 1219.65 L1486.24 1219.65 L1485.65 1219.65 L1485.06 1219.65 L1484.48 1219.65 L1483.89 1219.65 L1483.3 1219.65 L1482.72 1219.65 L1482.13 1219.65 L1481.54 1219.65 L1480.96 1219.65 L1480.37 1219.65 L1479.78 1219.65 L1479.2 1219.65 L1478.61 1219.65 L1478.03 1219.65 L1477.44 1219.65 L1476.85 1219.65 L1476.27 1219.65 L1475.68 1219.65 L1475.09 1219.65 L1474.51 1219.65 L1473.92 1219.65 L1473.33 1219.65 L1472.75 1219.65 L1472.16 1219.65 L1471.57 1219.65 L1470.99 1219.65 L1470.4 1219.65 L1469.82 1219.65 L1469.23 1219.65 L1468.64 1219.65 L1468.06 1219.65 L1467.47 1219.65 L1466.88 1219.65 L1466.3 1219.65 L1465.71 1219.65 L1465.12 1219.65 L1464.54 1219.65 L1463.95 1219.65 L1463.37 1219.65 L1462.78 1219.65 L1462.19 1219.65 L1461.61 1219.65 L1461.02 1219.65 L1460.43 1219.65 L1459.85 1219.65 L1459.26 1219.65 L1458.67 1219.65 L1458.09 1219.65 L1457.5 1219.65 L1456.91 1219.65 L1456.33 1219.65 L1455.74 1219.65 L1455.16 1219.65 L1454.57 1219.65 L1453.98 1219.65 L1453.4 1219.65 L1452.81 1219.65 L1452.22 1219.65 L1451.64 1219.65 L1451.05 1219.65 L1450.46 1219.65 L1449.88 1219.65 L1449.29 1219.65 L1448.7 1219.65 L1448.12 1219.65 L1447.53 1219.65 L1446.95 1219.65 L1446.36 1219.65 L1445.77 1219.65 L1445.19 1219.65 L1444.6 1219.65 L1444.01 1219.65 L1443.43 1219.65 L1442.84 1219.65 L1442.25 1219.65 L1441.67 1219.65 L1441.08 1219.65 L1440.5 1219.65 L1439.91 1219.65 L1439.32 1219.65 L1438.74 1219.65 L1438.15 1219.65 L1437.56 1219.65 L1436.98 1219.65 L1436.39 1219.65 L1435.8 1219.65 L1435.22 1219.65 L1434.63 1219.65 L1434.04 1219.65 L1433.46 1219.65 L1432.87 1219.65 L1432.29 1219.65 L1431.7 1219.65 L1431.11 1219.65 L1430.53 1219.65 L1429.94 1219.65 L1429.35 1219.65 L1428.77 1219.65 L1428.18 1219.65 L1427.59 1219.65 L1427.01 1219.65 L1426.42 1219.65 L1425.83 1219.65 L1425.25 1219.65 L1424.66 1219.65 L1424.08 1219.65 L1423.49 1219.65 L1422.9 1219.65 L1422.32 1219.65 L1421.73 1219.65 L1421.14 1219.65 L1420.56 1219.65 L1419.97 1219.65 L1419.38 1219.65 L1418.8 1219.65 L1418.21 1219.65 L1417.63 1219.65 L1417.04 1219.65 L1416.45 1219.65 L1415.87 1219.65 L1415.28 1219.65 L1414.69 1219.65 L1414.11 1219.65 L1413.52 1219.65 L1412.93 1219.65 L1412.35 1219.65 L1411.76 1219.65 L1411.17 1219.65 L1410.59 1219.65 L1410 1219.65 L1409.42 1219.65 L1408.83 1219.65 L1408.24 1219.65 L1407.66 1219.65 L1407.07 1219.65 L1406.48 1219.65 L1405.9 1219.65 L1405.31 1219.65 L1404.72 1219.65 L1404.14 1219.65 L1403.55 1219.65 L1402.96 1219.65 L1402.38 1219.65 L1401.79 1219.65 L1401.21 1219.65 L1400.62 1219.65 L1400.03 1219.65 L1399.45 1219.65 L1398.86 1219.65 L1398.27 1219.65 L1397.69 1219.65 L1397.1 1219.65 L1396.51 1219.65 L1395.93 1219.65 L1395.34 1219.65 L1394.75 1219.65 L1394.17 1219.65 L1393.58 1219.65 L1393 1219.65 L1392.41 1219.65 L1391.82 1219.65 L1391.24 1219.65 L1390.65 1219.65 L1390.06 1219.65 L1389.48 1219.65 L1388.89 1219.65 L1388.3 1219.65 L1387.72 1219.65 L1387.13 1219.65 L1386.55 1219.65 L1385.96 1219.65 L1385.37 1219.65 L1384.79 1219.65 L1384.2 1219.65 L1383.61 1219.65 L1383.03 1219.65 L1382.44 1219.65 L1381.85 1219.65 L1381.27 1219.65 L1380.68 1219.65 L1380.09 1219.65 L1379.51 1219.65 L1378.92 1219.65 L1378.34 1219.65 L1377.75 1219.65 L1377.16 1219.65 L1376.58 1219.65 L1375.99 1219.65 L1375.4 1219.65 L1374.82 1219.65 L1374.23 1219.65 L1373.64 1219.65 L1373.06 1219.65 L1372.47 1219.65 L1371.88 1219.65 L1371.3 1219.65 L1370.71 1219.65 L1370.13 1219.65 L1369.54 1219.65 L1368.95 1219.65 L1368.37 1219.65 L1367.78 1219.65 L1367.19 1219.65 L1366.61 1219.65 L1366.02 1219.65 L1365.43 1219.65 L1364.85 1219.65 L1364.26 1219.65 L1363.68 1219.65 L1363.09 1219.65 L1362.5 1219.65 L1361.92 1219.65 L1361.33 1219.65 L1360.74 1219.65 L1360.16 1219.65 L1359.57 1219.65 L1358.98 1219.65 L1358.4 1219.65 L1357.81 1219.65 L1357.22 1219.65 L1356.64 1219.65 L1356.05 1219.65 L1355.47 1219.65 L1354.88 1219.65 L1354.29 1219.65 L1353.71 1219.65 L1353.12 1219.65 L1352.53 1219.65 L1351.95 1219.65 L1351.36 1219.65 L1350.77 1219.65 L1350.19 1219.65 L1349.6 1219.65 L1349.01 1219.65 L1348.43 1219.65 L1347.84 1219.65 L1347.26 1219.65 L1346.67 1219.65 L1346.08 1219.65 L1345.5 1219.65 L1344.91 1219.65 L1344.32 1219.65 L1343.74 1219.65 L1343.15 1219.65 L1342.56 1219.65 L1341.98 1219.65 L1341.39 1219.65 L1340.8 1219.65 L1340.22 1219.65 L1339.63 1219.65 L1339.05 1219.65 L1338.46 1219.65 L1337.87 1219.65 L1337.29 1219.65 L1336.7 1219.65 L1336.11 1219.65 L1335.53 1219.65 L1334.94 1219.65 L1334.35 1219.65 L1333.77 1219.65 L1333.18 1219.65 L1332.6 1219.65 L1332.01 1219.65 L1331.42 1219.65 L1330.84 1219.65 L1330.25 1219.65 L1329.66 1219.65 L1329.08 1219.65 L1328.49 1219.65 L1327.9 1219.65 L1327.32 1219.65 L1326.73 1219.65 L1326.14 1219.65 L1325.56 1219.65 L1324.97 1219.65 L1324.39 1219.65 L1323.8 1219.65 L1323.21 1219.65 L1322.63 1219.65 L1322.04 1219.65 L1321.45 1219.65 L1320.87 1219.65 L1320.28 1219.65 L1319.69 1219.65 L1319.11 1219.65 L1318.52 1219.65 L1317.93 1219.65 L1317.35 1219.65 L1316.76 1219.65 L1316.18 1219.65 L1315.59 1219.65 L1315 1219.65 L1314.42 1219.65 L1313.83 1219.65 L1313.24 1219.65 L1312.66 1219.65 L1312.07 1219.65 L1311.48 1219.65 L1310.9 1219.65 L1310.31 1219.65 L1309.73 1219.65 L1309.14 1219.65 L1308.55 1219.65 L1307.97 1219.65 L1307.38 1219.65 L1306.79 1219.65 L1306.21 1219.65 L1305.62 1219.65 L1305.03 1219.65 L1304.45 1219.65 L1303.86 1219.65 L1303.27 1219.65 L1302.69 1219.65 L1302.1 1219.65 L1301.52 1219.65 L1300.93 1219.65 L1300.34 1219.65 L1299.76 1219.65 L1299.17 1219.65 L1298.58 1219.65 L1298 1219.65 L1297.41 1219.65 L1296.82 1219.65 L1296.24 1219.65 L1295.65 1219.65 L1295.06 1219.65 L1294.48 1219.65 L1293.89 1219.65 L1293.31 1219.65 L1292.72 1219.65 L1292.13 1219.65 L1291.55 1219.65 L1290.96 1219.65 L1290.37 1219.65 L1289.79 1219.65 L1289.2 1219.65 L1288.61 1219.65 L1288.03 1219.65 L1287.44 1219.65 L1286.86 1219.65 L1286.27 1219.65 L1285.68 1219.65 L1285.1 1219.65 L1284.51 1219.65 L1283.92 1219.65 L1283.34 1219.65 L1282.75 1219.65 L1282.16 1219.65 L1281.58 1219.65 L1280.99 1219.65 L1280.4 1219.65 L1279.82 1219.65 L1279.23 1219.65 L1278.65 1219.65 L1278.06 1219.65 L1277.47 1219.65 L1276.89 1219.65 L1276.3 1219.65 L1275.71 1219.65 L1275.13 1219.65 L1274.54 1219.65 L1273.95 1219.65 L1273.37 1219.65 L1272.78 1219.65 L1272.19 1219.65 L1271.61 1219.65 L1271.02 1219.65 L1270.44 1219.65 L1269.85 1219.65 L1269.26 1219.65 L1268.68 1219.65 L1268.09 1219.65 L1267.5 1219.65 L1266.92 1219.65 L1266.33 1219.65 L1265.74 1219.65 L1265.16 1219.65 L1264.57 1219.65 L1263.98 1219.65 L1263.4 1219.65 L1262.81 1219.65 L1262.23 1219.65 L1261.64 1219.65 L1261.05 1219.65 L1260.47 1219.65 L1259.88 1219.65 L1259.29 1219.65 L1258.71 1219.65 L1258.12 1219.65 L1257.53 1219.65 L1256.95 1219.65 L1256.36 1219.65 L1255.78 1219.65 L1255.19 1219.65 L1254.6 1219.65 L1254.02 1219.65 L1253.43 1219.65 L1252.84 1219.65 L1252.26 1219.65 L1251.67 1219.65 L1251.08 1219.65 L1250.5 1219.65 L1249.91 1219.65 L1249.32 1219.65 L1248.74 1219.65 L1248.15 1219.65 L1247.57 1219.65 L1246.98 1219.65 L1246.39 1219.65 L1245.81 1219.65 L1245.22 1219.65 L1244.63 1219.65 L1244.05 1219.65 L1243.46 1219.65 L1242.87 1219.65 L1242.29 1219.65 L1241.7 1219.65 L1241.11 1219.65 L1240.53 1219.65 L1239.94 1219.65 L1239.36 1219.65 L1238.77 1219.65 L1238.18 1219.65 L1237.6 1219.65 L1237.01 1219.65 L1236.42 1219.65 L1235.84 1219.65 L1235.25 1219.65 L1234.66 1219.65 L1234.08 1219.65 L1233.49 1219.65 L1232.91 1219.65 L1232.32 1219.65 L1231.73 1219.65 L1231.15 1219.65 L1230.56 1219.65 L1229.97 1219.65 L1229.39 1219.65 L1228.8 1219.65 L1228.21 1219.65 L1227.63 1219.65 L1227.04 1219.65 L1226.45 1219.65 L1225.87 1219.65 L1225.28 1219.65 L1224.7 1219.65 L1224.11 1219.65 L1223.52 1219.65 L1222.94 1219.65 L1222.35 1219.65 L1221.76 1219.65 L1221.18 1219.65 L1220.59 1219.65 L1220 1219.65 L1219.42 1219.65 L1218.83 1219.65 L1218.24 1219.65 L1217.66 1219.65 L1217.07 1219.65 L1216.49 1219.65 L1215.9 1219.65 L1215.31 1219.65 L1214.73 1219.65 L1214.14 1219.65 L1213.55 1219.65 L1212.97 1219.65 L1212.38 1219.65 L1211.79 1219.65 L1211.21 1219.65 L1210.62 1219.65 L1210.03 1219.65 L1209.45 1219.65 L1208.86 1219.65 L1208.28 1219.65 L1207.69 1219.65 L1207.1 1219.65 L1206.52 1219.65 L1205.93 1219.65 L1205.34 1219.65 L1204.76 1219.65 L1204.17 1219.65 L1203.58 1219.65 L1203 1219.65 L1202.41 1219.65 L1201.83 1219.65 L1201.24 1219.65 L1200.65 1219.65 L1200.07 1219.65 L1199.48 1219.65 L1198.89 1219.65 L1198.31 1219.65 L1197.72 1219.65 L1197.13 1219.65 L1196.55 1219.65 L1195.96 1219.65 L1195.37 1219.65 L1194.79 1219.65 L1194.2 1219.65 L1193.62 1219.65 L1193.03 1219.65 L1192.44 1219.65 L1191.86 1219.65 L1191.27 1219.65 L1190.68 1219.65 L1190.1 1219.65 L1189.51 1219.65 L1188.92 1219.65 L1188.34 1219.65 L1187.75 1219.65 L1187.16 1219.65 L1186.58 1219.65 L1185.99 1219.65 L1185.41 1219.65 L1184.82 1219.65 L1184.23 1219.65 L1183.65 1219.65 L1183.06 1219.65 L1182.47 1219.65 L1181.89 1219.65 L1181.3 1219.65 L1180.71 1219.65 L1180.13 1219.65 L1179.54 1219.65 L1178.96 1219.65 L1178.37 1219.65 L1177.78 1219.65 L1177.2 1219.65 L1176.61 1219.65 L1176.02 1219.65 L1175.44 1219.65 L1174.85 1219.65 L1174.26 1219.65 L1173.68 1219.65 L1173.09 1219.65 L1172.5 1219.65 L1171.92 1219.65 L1171.33 1219.65 L1170.75 1219.65 L1170.16 1219.65 L1169.57 1219.65 L1168.99 1219.65 L1168.4 1219.65 L1167.81 1219.65 L1167.23 1219.65 L1166.64 1219.65 L1166.05 1219.65 L1165.47 1219.65 L1164.88 1219.65 L1164.29 1219.65 L1163.71 1219.65 L1163.12 1219.65 L1162.54 1219.65 L1161.95 1219.65 L1161.36 1219.65 L1160.78 1219.65 L1160.19 1219.65 L1159.6 1219.65 L1159.02 1219.65 L1158.43 1219.65 L1157.84 1219.65 L1157.26 1219.65 L1156.67 1219.65 L1156.09 1219.65 L1155.5 1219.65 L1154.91 1219.65 L1154.33 1219.65 L1153.74 1219.65 L1153.15 1219.65 L1152.57 1219.65 L1151.98 1219.65 L1151.39 1219.65 L1150.81 1219.65 L1150.22 1219.65 L1149.63 1219.65 L1149.05 1219.65 L1148.46 1219.65 L1147.88 1219.65 L1147.29 1219.65 L1146.7 1219.65 L1146.12 1219.65 L1145.53 1219.65 L1144.94 1219.65 L1144.36 1219.65 L1143.77 1219.65 L1143.18 1219.65 L1142.6 1219.65 L1142.01 1219.65 L1141.42 1219.65 L1140.84 1219.65 L1140.25 1219.65 L1139.67 1219.65 L1139.08 1219.65 L1138.49 1219.65 L1137.91 1219.65 L1137.32 1219.65 L1136.73 1219.65 L1136.15 1219.65 L1135.56 1219.65 L1134.97 1219.65 L1134.39 1219.65 L1133.8 1219.65 L1133.21 1219.65 L1132.63 1219.65 L1132.04 1219.65 L1131.46 1219.65 L1130.87 1219.65 L1130.28 1219.65 L1129.7 1219.65 L1129.11 1219.65 L1128.52 1219.65 L1127.94 1219.65 L1127.35 1219.65 L1126.76 1219.65 L1126.18 1219.65 L1125.59 1219.65 L1125.01 1219.65 L1124.42 1219.65 L1123.83 1219.65 L1123.25 1219.65 L1122.66 1219.65 L1122.07 1219.65 L1121.49 1219.65 L1120.9 1219.65 L1120.31 1219.65 L1119.73 1219.65 L1119.14 1219.65 L1118.55 1219.65 L1117.97 1219.65 L1117.38 1219.65 L1116.8 1219.65 L1116.21 1219.65 L1115.62 1219.65 L1115.04 1219.65 L1114.45 1219.65 L1113.86 1219.65 L1113.28 1219.65 L1112.69 1219.65 L1112.1 1219.65 L1111.52 1219.65 L1110.93 1219.65 L1110.34 1219.65 L1109.76 1219.65 L1109.17 1219.65 L1108.59 1219.65 L1108 1219.65 L1107.41 1219.65 L1106.83 1219.65 L1106.24 1219.65 L1105.65 1219.65 L1105.07 1219.65 L1104.48 1219.65 L1103.89 1219.65 L1103.31 1219.65 L1102.72 1219.65 L1102.14 1219.65 L1101.55 1219.65 L1100.96 1219.65 L1100.38 1219.65 L1099.79 1219.65 L1099.2 1219.65 L1098.62 1219.65 L1098.03 1219.65 L1097.44 1219.65 L1096.86 1219.65 L1096.27 1219.65 L1095.68 1219.65 L1095.1 1219.65 L1094.51 1219.65 L1093.93 1219.65 L1093.34 1219.65 L1092.75 1219.65 L1092.17 1219.65 L1091.58 1219.65 L1090.99 1219.65 L1090.41 1219.65 L1089.82 1219.65 L1089.23 1219.65 L1088.65 1219.65 L1088.06 1219.65 L1087.47 1219.65 L1086.89 1219.65 L1086.3 1219.65 L1085.72 1219.65 L1085.13 1219.65 L1084.54 1219.65 L1083.96 1219.65 L1083.37 1219.65 L1082.78 1219.65 L1082.2 1219.65 L1081.61 1219.65 L1081.02 1219.65 L1080.44 1219.65 L1079.85 1219.65 L1079.26 1219.65 L1078.68 1219.65 L1078.09 1219.65 L1077.51 1219.65 L1076.92 1219.65 L1076.33 1219.65 L1075.75 1219.65 L1075.16 1219.65 L1074.57 1219.65 L1073.99 1219.65 L1073.4 1219.65 L1072.81 1219.65 L1072.23 1219.65 L1071.64 1219.65 L1071.06 1219.65 L1070.47 1219.65 L1069.88 1219.65 L1069.3 1219.65 L1068.71 1219.65 L1068.12 1219.65 L1067.54 1219.65 L1066.95 1219.65 L1066.36 1219.65 L1065.78 1219.65 L1065.19 1219.65 L1064.6 1219.65 L1064.02 1219.65 L1063.43 1219.65 L1062.85 1219.65 L1062.26 1219.65 L1061.67 1219.65 L1061.09 1219.65 L1060.5 1219.65 L1059.91 1219.65 L1059.33 1219.65 L1058.74 1219.65 L1058.15 1219.65 L1057.57 1219.65 L1056.98 1219.65 L1056.39 1219.65 L1055.81 1219.65 L1055.22 1219.65 L1054.64 1219.65 L1054.05 1219.65 L1053.46 1219.65 L1052.88 1219.65 L1052.29 1219.65 L1051.7 1219.65 L1051.12 1219.65 L1050.53 1219.65 L1049.94 1219.65 L1049.36 1219.65 L1048.77 1219.65 L1048.19 1219.65 L1047.6 1219.65 L1047.01 1219.65 L1046.43 1219.65 L1045.84 1219.65 L1045.25 1219.65 L1044.67 1219.65 L1044.08 1219.65 L1043.49 1219.65 L1042.91 1219.65 L1042.32 1219.65 L1041.73 1219.65 L1041.15 1219.65 L1040.56 1219.65 L1039.98 1219.65 L1039.39 1219.65 L1038.8 1219.65 L1038.22 1219.65 L1037.63 1219.65 L1037.04 1219.65 L1036.46 1219.65 L1035.87 1219.65 L1035.28 1219.65 L1034.7 1219.65 L1034.11 1219.65 L1033.52 1219.65 L1032.94 1219.65 L1032.35 1219.65 L1031.77 1219.65 L1031.18 1219.65 L1030.59 1219.65 L1030.01 1219.65 L1029.42 1219.65 L1028.83 1219.65 L1028.25 1219.65 L1027.66 1219.65 L1027.07 1219.65 L1026.49 1219.65 L1025.9 1219.65 L1025.32 1219.65 L1024.73 1219.65 L1024.14 1219.65 L1023.56 1219.65 L1022.97 1219.65 L1022.38 1219.65 L1021.8 1219.65 L1021.21 1219.65 L1020.62 1219.65 L1020.04 1219.65 L1019.45 1219.65 L1018.86 1219.65 L1018.28 1219.65 L1017.69 1219.65 L1017.11 1219.65 L1016.52 1219.65 L1015.93 1219.65 L1015.35 1219.65 L1014.76 1219.65 L1014.17 1219.65 L1013.59 1219.65 L1013 1219.65 L1012.41 1219.65 L1011.83 1219.65 L1011.24 1219.65 L1010.65 1219.65 L1010.07 1219.65 L1009.48 1219.65 L1008.9 1219.65 L1008.31 1219.65 L1007.72 1219.65 L1007.14 1219.65 L1006.55 1219.65 L1005.96 1219.65 L1005.38 1219.65 L1004.79 1219.65 L1004.2 1219.65 L1003.62 1219.65 L1003.03 1219.65 L1002.44 1219.65 L1001.86 1219.65 L1001.27 1219.65 L1000.69 1219.65 L1000.1 1219.65 L999.513 1219.65 L998.926 1219.65 L998.34 1219.65 L997.754 1219.65 L997.167 1219.65 L996.581 1219.65 L995.994 1219.65 L995.408 1219.65 L994.822 1219.65 L994.235 1219.65 L993.649 1219.65 L993.062 1219.65 L992.476 1219.65 L991.889 1219.65 L991.303 1219.65 L990.717 1219.65 L990.13 1219.65 L989.544 1219.65 L988.957 1219.65 L988.371 1219.65 L987.785 1219.65 L987.198 1219.65 L986.612 1219.65 L986.025 1219.65  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1220.01 986.612,1220.01 987.198,1220.01 987.785,1220.01 988.371,1220.01 988.957,1220.01 989.544,1220.01 990.13,1220.01 990.717,1220.01 991.303,1220.01 991.889,1220.01 992.476,1220.01 993.062,1220.01 993.649,1220.01 994.235,1220.01 994.822,1220.01 995.408,1220.01 995.994,1220.01 996.581,1220.01 997.167,1220.01 997.754,1220.01 998.34,1220.01 998.926,1220.01 999.513,1220.01 1000.1,1220.01 1000.69,1220.01 1001.27,1220.01 1001.86,1220.01 1002.44,1220.01 1003.03,1220.01 1003.62,1220.01 1004.2,1220.01 1004.79,1220.01 1005.38,1220.01 1005.96,1220.01 1006.55,1220.01 1007.14,1220.01 1007.72,1220.01 1008.31,1220.01 1008.9,1220.01 1009.48,1220.01 1010.07,1220.01 1010.65,1220.01 1011.24,1220.01 1011.83,1220.01 1012.41,1220.01 1013,1220.01 1013.59,1220.01 1014.17,1220.01 1014.76,1220.01 1015.35,1220.01 1015.93,1220.01 1016.52,1220.01 1017.11,1220.01 1017.69,1220.01 1018.28,1220.01 1018.86,1220.01 1019.45,1220.01 1020.04,1220.01 1020.62,1220.01 1021.21,1220.01 1021.8,1220.01 1022.38,1220.01 1022.97,1220.01 1023.56,1220.01 1024.14,1220.01 1024.73,1220.01 1025.32,1220.01 1025.9,1220.01 1026.49,1220.01 1027.07,1220.01 1027.66,1220.01 1028.25,1220.01 1028.83,1220.01 1029.42,1220.01 1030.01,1220.01 1030.59,1220.01 1031.18,1220.01 1031.77,1220.01 1032.35,1220.01 1032.94,1220.01 1033.52,1220.01 1034.11,1220.01 1034.7,1220.01 1035.28,1220.01 1035.87,1220.01 1036.46,1220.01 1037.04,1220.01 1037.63,1220.01 1038.22,1220.01 1038.8,1220.01 1039.39,1220.01 1039.98,1220.01 1040.56,1220.01 1041.15,1220.01 1041.73,1220.01 1042.32,1220.01 1042.91,1220.01 1043.49,1220.01 1044.08,1220.01 1044.67,1220.01 1045.25,1220.01 1045.84,1220.01 1046.43,1220.01 1047.01,1220.01 1047.6,1220.01 1048.19,1220.01 1048.77,1220.01 1049.36,1220.01 1049.94,1220.01 1050.53,1220.01 1051.12,1220.01 1051.7,1220.01 1052.29,1220.01 1052.88,1220.01 1053.46,1220.01 1054.05,1220.01 1054.64,1220.01 1055.22,1220.01 1055.81,1220.01 1056.39,1220.01 1056.98,1220.01 1057.57,1220.01 1058.15,1220.01 1058.74,1220.01 1059.33,1220.01 1059.91,1220.01 1060.5,1220.01 1061.09,1220.01 1061.67,1220.01 1062.26,1220.01 1062.85,1220.01 1063.43,1220.01 1064.02,1220.01 1064.6,1220.01 1065.19,1220.01 1065.78,1220.01 1066.36,1220.01 1066.95,1220.01 1067.54,1220.01 1068.12,1220.01 1068.71,1220.01 1069.3,1220.01 1069.88,1220.01 1070.47,1220.01 1071.06,1220.01 1071.64,1220.01 1072.23,1220.01 1072.81,1220.01 1073.4,1220.01 1073.99,1220.01 1074.57,1220.01 1075.16,1220.01 1075.75,1220.01 1076.33,1220.01 1076.92,1220.01 1077.51,1220.01 1078.09,1220.01 1078.68,1220.01 1079.26,1220.01 1079.85,1220.01 1080.44,1220.01 1081.02,1220.01 1081.61,1220.01 1082.2,1220.01 1082.78,1220.01 1083.37,1220.01 1083.96,1220.01 1084.54,1220.01 1085.13,1220.01 1085.72,1220.01 1086.3,1220.01 1086.89,1220.01 1087.47,1220.01 1088.06,1220.01 1088.65,1220.01 1089.23,1220.01 1089.82,1220.01 1090.41,1220.01 1090.99,1220.01 1091.58,1220.01 1092.17,1220.01 1092.75,1220.01 1093.34,1220.01 1093.93,1220.01 1094.51,1220.01 1095.1,1220.01 1095.68,1220.01 1096.27,1220.01 1096.86,1220.01 1097.44,1220.01 1098.03,1220.01 1098.62,1220.01 1099.2,1220.01 1099.79,1220.01 1100.38,1220.01 1100.96,1220.01 1101.55,1220.01 1102.14,1220.01 1102.72,1220.01 1103.31,1220.01 1103.89,1220.01 1104.48,1220.01 1105.07,1220.01 1105.65,1220.01 1106.24,1220.01 1106.83,1220.01 1107.41,1220.01 1108,1220.01 1108.59,1220.01 1109.17,1220.01 1109.76,1220.01 1110.34,1220.01 1110.93,1220.01 1111.52,1220.01 1112.1,1220.01 1112.69,1220.01 1113.28,1220.01 1113.86,1220.01 1114.45,1220.01 1115.04,1220.01 1115.62,1220.01 1116.21,1220.01 1116.8,1220.01 1117.38,1220.01 1117.97,1220.01 1118.55,1220.01 1119.14,1220.01 1119.73,1220.01 1120.31,1220.01 1120.9,1220.01 1121.49,1220.01 1122.07,1220.01 1122.66,1220.01 1123.25,1220.01 1123.83,1220.01 1124.42,1220.01 1125.01,1220.01 1125.59,1220.01 1126.18,1220.01 1126.76,1220.01 1127.35,1220.01 1127.94,1220.01 1128.52,1220.01 1129.11,1220.01 1129.7,1220.01 1130.28,1220.01 1130.87,1220.01 1131.46,1220.01 1132.04,1220.01 1132.63,1220.01 1133.21,1220.01 1133.8,1220.01 1134.39,1220.01 1134.97,1220.01 1135.56,1220.01 1136.15,1220.01 1136.73,1220.01 1137.32,1220.01 1137.91,1220.01 1138.49,1220.01 1139.08,1220.01 1139.67,1220.01 1140.25,1220.01 1140.84,1220.01 1141.42,1220.01 1142.01,1220.01 1142.6,1220.01 1143.18,1220.01 1143.77,1220.01 1144.36,1220.01 1144.94,1220.01 1145.53,1220.01 1146.12,1220.01 1146.7,1220.01 1147.29,1220.01 1147.88,1220.01 1148.46,1220.01 1149.05,1220.01 1149.63,1220.01 1150.22,1220.01 1150.81,1220.01 1151.39,1220.01 1151.98,1220.01 1152.57,1220.01 1153.15,1220.01 1153.74,1220.01 1154.33,1220.01 1154.91,1220.01 1155.5,1220.01 1156.09,1220.01 1156.67,1220.01 1157.26,1220.01 1157.84,1220.01 1158.43,1220.01 1159.02,1220.01 1159.6,1220.01 1160.19,1220.01 1160.78,1220.01 1161.36,1220.01 1161.95,1220.01 1162.54,1220.01 1163.12,1220.01 1163.71,1220.01 1164.29,1220.01 1164.88,1220.01 1165.47,1220.01 1166.05,1220.01 1166.64,1220.01 1167.23,1220.01 1167.81,1220.01 1168.4,1220.01 1168.99,1220.01 1169.57,1220.01 1170.16,1220.01 1170.75,1220.01 1171.33,1220.01 1171.92,1220.01 1172.5,1220.01 1173.09,1220.01 1173.68,1220.01 1174.26,1220.01 1174.85,1220.01 1175.44,1220.01 1176.02,1220.01 1176.61,1220.01 1177.2,1220.01 1177.78,1220.01 1178.37,1220.01 1178.96,1220.01 1179.54,1220.01 1180.13,1220.01 1180.71,1220.01 1181.3,1220.01 1181.89,1220.01 1182.47,1220.01 1183.06,1220.01 1183.65,1220.01 1184.23,1220.01 1184.82,1220.01 1185.41,1220.01 1185.99,1220.01 1186.58,1220.01 1187.16,1220.01 1187.75,1220.01 1188.34,1220.01 1188.92,1220.01 1189.51,1220.01 1190.1,1220.01 1190.68,1220.01 1191.27,1220.01 1191.86,1220.01 1192.44,1220.01 1193.03,1220.01 1193.62,1220.01 1194.2,1220.01 1194.79,1220.01 1195.37,1220.01 1195.96,1220.01 1196.55,1220.01 1197.13,1220.01 1197.72,1220.01 1198.31,1220.01 1198.89,1220.01 1199.48,1220.01 1200.07,1220.01 1200.65,1220.01 1201.24,1220.01 1201.83,1220.01 1202.41,1220.01 1203,1220.01 1203.58,1220.01 1204.17,1220.01 1204.76,1220.01 1205.34,1220.01 1205.93,1220.01 1206.52,1220.01 1207.1,1220.01 1207.69,1220.01 1208.28,1220.01 1208.86,1220.01 1209.45,1220.01 1210.03,1220.01 1210.62,1220.01 1211.21,1220.01 1211.79,1220.01 1212.38,1220.01 1212.97,1220.01 1213.55,1220.01 1214.14,1220.01 1214.73,1220.01 1215.31,1220.01 1215.9,1220.01 1216.49,1220.01 1217.07,1220.01 1217.66,1220.01 1218.24,1220.01 1218.83,1220.01 1219.42,1220.01 1220,1220.01 1220.59,1220.01 1221.18,1220.01 1221.76,1220.01 1222.35,1220.01 1222.94,1220.01 1223.52,1220.01 1224.11,1220.01 1224.7,1220.01 1225.28,1220.01 1225.87,1220.01 1226.45,1220.01 1227.04,1220.01 1227.63,1220.01 1228.21,1220.01 1228.8,1220.01 1229.39,1220.01 1229.97,1220.01 1230.56,1220.01 1231.15,1220.01 1231.73,1220.01 1232.32,1220.01 1232.91,1220.01 1233.49,1220.01 1234.08,1220.01 1234.66,1220.01 1235.25,1220.01 1235.84,1220.01 1236.42,1220.01 1237.01,1220.01 1237.6,1220.01 1238.18,1220.01 1238.77,1220.01 1239.36,1220.01 1239.94,1220.01 1240.53,1220.01 1241.11,1220.01 1241.7,1220.01 1242.29,1220.01 1242.87,1220.01 1243.46,1220.01 1244.05,1220.01 1244.63,1220.01 1245.22,1220.01 1245.81,1220.01 1246.39,1220.01 1246.98,1220.01 1247.57,1220.01 1248.15,1220.01 1248.74,1220.01 1249.32,1220.01 1249.91,1220.01 1250.5,1220.01 1251.08,1220.01 1251.67,1220.01 1252.26,1220.01 1252.84,1220.01 1253.43,1220.01 1254.02,1220.01 1254.6,1220.01 1255.19,1220.01 1255.78,1220.01 1256.36,1220.01 1256.95,1220.01 1257.53,1220.01 1258.12,1220.01 1258.71,1220.01 1259.29,1220.01 1259.88,1220.01 1260.47,1220.01 1261.05,1220.01 1261.64,1220.01 1262.23,1220.01 1262.81,1220.01 1263.4,1220.01 1263.98,1220.01 1264.57,1220.01 1265.16,1220.01 1265.74,1220.01 1266.33,1220.01 1266.92,1220.01 1267.5,1220.01 1268.09,1220.01 1268.68,1220.01 1269.26,1220.01 1269.85,1220.01 1270.44,1220.01 1271.02,1220.01 1271.61,1220.01 1272.19,1220.01 1272.78,1220.01 1273.37,1220.01 1273.95,1220.01 1274.54,1220.01 1275.13,1220.01 1275.71,1220.01 1276.3,1220.01 1276.89,1220.01 1277.47,1220.01 1278.06,1220.01 1278.65,1220.01 1279.23,1220.01 1279.82,1220.01 1280.4,1220.01 1280.99,1220.01 1281.58,1220.01 1282.16,1220.01 1282.75,1220.01 1283.34,1220.01 1283.92,1220.01 1284.51,1220.01 1285.1,1220.01 1285.68,1220.01 1286.27,1220.01 1286.86,1220.01 1287.44,1220.01 1288.03,1220.01 1288.61,1220.01 1289.2,1220.01 1289.79,1220.01 1290.37,1220.01 1290.96,1220.01 1291.55,1220.01 1292.13,1220.01 1292.72,1220.01 1293.31,1220.01 1293.89,1220.01 1294.48,1220.01 1295.06,1220.01 1295.65,1220.01 1296.24,1220.01 1296.82,1220.01 1297.41,1220.01 1298,1220.01 1298.58,1220.01 1299.17,1220.01 1299.76,1220.01 1300.34,1220.01 1300.93,1220.01 1301.52,1220.01 1302.1,1220.01 1302.69,1220.01 1303.27,1220.01 1303.86,1220.01 1304.45,1220.01 1305.03,1220.01 1305.62,1220.01 1306.21,1220.01 1306.79,1220.01 1307.38,1220.01 1307.97,1220.01 1308.55,1220.01 1309.14,1220.01 1309.73,1220.01 1310.31,1220.01 1310.9,1220.01 1311.48,1220.01 1312.07,1220.01 1312.66,1220.01 1313.24,1220.01 1313.83,1220.01 1314.42,1220.01 1315,1220.01 1315.59,1220.01 1316.18,1220.01 1316.76,1220.01 1317.35,1220.01 1317.93,1220.01 1318.52,1220.01 1319.11,1220.01 1319.69,1220.01 1320.28,1220.01 1320.87,1220.01 1321.45,1220.01 1322.04,1220.01 1322.63,1220.01 1323.21,1220.01 1323.8,1220.01 1324.39,1220.01 1324.97,1220.01 1325.56,1220.01 1326.14,1220.01 1326.73,1220.01 1327.32,1220.01 1327.9,1220.01 1328.49,1220.01 1329.08,1220.01 1329.66,1220.01 1330.25,1220.01 1330.84,1220.01 1331.42,1220.01 1332.01,1220.01 1332.6,1220.01 1333.18,1220.01 1333.77,1220.01 1334.35,1220.01 1334.94,1220.01 1335.53,1220.01 1336.11,1220.01 1336.7,1220.01 1337.29,1220.01 1337.87,1220.01 1338.46,1220.01 1339.05,1220.01 1339.63,1220.01 1340.22,1220.01 1340.8,1220.01 1341.39,1220.01 1341.98,1220.01 1342.56,1220.01 1343.15,1220.01 1343.74,1220.01 1344.32,1220.01 1344.91,1220.01 1345.5,1220.01 1346.08,1220.01 1346.67,1220.01 1347.26,1220.01 1347.84,1220.01 1348.43,1220.01 1349.01,1220.01 1349.6,1220.01 1350.19,1220.01 1350.77,1220.01 1351.36,1220.01 1351.95,1220.01 1352.53,1220.01 1353.12,1220.01 1353.71,1220.01 1354.29,1220.01 1354.88,1220.01 1355.47,1220.01 1356.05,1220.01 1356.64,1220.01 1357.22,1220.01 1357.81,1220.01 1358.4,1220.01 1358.98,1220.01 1359.57,1220.01 1360.16,1220.01 1360.74,1220.01 1361.33,1220.01 1361.92,1220.01 1362.5,1220.01 1363.09,1220.01 1363.68,1220.01 1364.26,1220.01 1364.85,1220.01 1365.43,1220.01 1366.02,1220.01 1366.61,1220.01 1367.19,1220.01 1367.78,1220.01 1368.37,1220.01 1368.95,1220.01 1369.54,1220.01 1370.13,1220.01 1370.71,1220.01 1371.3,1220.01 1371.88,1220.01 1372.47,1220.01 1373.06,1220.01 1373.64,1220.01 1374.23,1220.01 1374.82,1220.01 1375.4,1220.01 1375.99,1220.01 1376.58,1220.01 1377.16,1220.01 1377.75,1220.01 1378.34,1220.01 1378.92,1220.01 1379.51,1220.01 1380.09,1220.01 1380.68,1220.01 1381.27,1220.01 1381.85,1220.01 1382.44,1220.01 1383.03,1220.01 1383.61,1220.01 1384.2,1220.01 1384.79,1220.01 1385.37,1220.01 1385.96,1220.01 1386.55,1220.01 1387.13,1220.01 1387.72,1220.01 1388.3,1220.01 1388.89,1220.01 1389.48,1220.01 1390.06,1220.01 1390.65,1220.01 1391.24,1220.01 1391.82,1220.01 1392.41,1220.01 1393,1220.01 1393.58,1220.01 1394.17,1220.01 1394.75,1220.01 1395.34,1220.01 1395.93,1220.01 1396.51,1220.01 1397.1,1220.01 1397.69,1220.01 1398.27,1220.01 1398.86,1220.01 1399.45,1220.01 1400.03,1220.01 1400.62,1220.01 1401.21,1220.01 1401.79,1220.01 1402.38,1220.01 1402.96,1220.01 1403.55,1220.01 1404.14,1220.01 1404.72,1220.01 1405.31,1220.01 1405.9,1220.01 1406.48,1220.01 1407.07,1220.01 1407.66,1220.01 1408.24,1220.01 1408.83,1220.01 1409.42,1220.01 1410,1220.01 1410.59,1220.01 1411.17,1220.01 1411.76,1220.01 1412.35,1220.01 1412.93,1220.01 1413.52,1220.01 1414.11,1220.01 1414.69,1220.01 1415.28,1220.01 1415.87,1220.01 1416.45,1220.01 1417.04,1220.01 1417.63,1220.01 1418.21,1220.01 1418.8,1220.01 1419.38,1220.01 1419.97,1220.01 1420.56,1220.01 1421.14,1220.01 1421.73,1220.01 1422.32,1220.01 1422.9,1220.01 1423.49,1220.01 1424.08,1220.01 1424.66,1220.01 1425.25,1220.01 1425.83,1220.01 1426.42,1220.01 1427.01,1220.01 1427.59,1220.01 1428.18,1220.01 1428.77,1220.01 1429.35,1220.01 1429.94,1220.01 1430.53,1220.01 1431.11,1220.01 1431.7,1220.01 1432.29,1220.01 1432.87,1220.01 1433.46,1220.01 1434.04,1220.01 1434.63,1220.01 1435.22,1220.01 1435.8,1220.01 1436.39,1220.01 1436.98,1220.01 1437.56,1220.01 1438.15,1220.01 1438.74,1220.01 1439.32,1220.01 1439.91,1220.01 1440.5,1220.01 1441.08,1220.01 1441.67,1220.01 1442.25,1220.01 1442.84,1220.01 1443.43,1220.01 1444.01,1220.01 1444.6,1220.01 1445.19,1220.01 1445.77,1220.01 1446.36,1220.01 1446.95,1220.01 1447.53,1220.01 1448.12,1220.01 1448.7,1220.01 1449.29,1220.01 1449.88,1220.01 1450.46,1220.01 1451.05,1220.01 1451.64,1220.01 1452.22,1220.01 1452.81,1220.01 1453.4,1220.01 1453.98,1220.01 1454.57,1220.01 1455.16,1220.01 1455.74,1220.01 1456.33,1220.01 1456.91,1220.01 1457.5,1220.01 1458.09,1220.01 1458.67,1220.01 1459.26,1220.01 1459.85,1220.01 1460.43,1220.01 1461.02,1220.01 1461.61,1220.01 1462.19,1220.01 1462.78,1220.01 1463.37,1220.01 1463.95,1220.01 1464.54,1220.01 1465.12,1220.01 1465.71,1220.01 1466.3,1220.01 1466.88,1220.01 1467.47,1220.01 1468.06,1220.01 1468.64,1220.01 1469.23,1220.01 1469.82,1220.01 1470.4,1220.01 1470.99,1220.01 1471.57,1220.01 1472.16,1220.01 1472.75,1220.01 1473.33,1220.01 1473.92,1220.01 1474.51,1220.01 1475.09,1220.01 1475.68,1220.01 1476.27,1220.01 1476.85,1220.01 1477.44,1220.01 1478.03,1220.01 1478.61,1220.01 1479.2,1220.01 1479.78,1220.01 1480.37,1220.01 1480.96,1220.01 1481.54,1220.01 1482.13,1220.01 1482.72,1220.01 1483.3,1220.01 1483.89,1220.01 1484.48,1220.01 1485.06,1220.01 1485.65,1220.01 1486.24,1220.01 1486.82,1220.01 1487.41,1220.01 1487.99,1220.01 1488.58,1220.01 1489.17,1220.01 1489.75,1220.01 1490.34,1220.01 1490.93,1220.01 1491.51,1220.01 1492.1,1220.01 1492.69,1220.01 1493.27,1220.01 1493.86,1220.01 1494.45,1220.01 1495.03,1220.01 1495.62,1220.01 1496.2,1220.01 1496.79,1220.01 1497.38,1220.01 1497.96,1220.01 1498.55,1220.01 1499.14,1220.01 1499.72,1220.01 1500.31,1220.01 1500.9,1220.01 1501.48,1220.01 1502.07,1220.01 1502.65,1220.01 1503.24,1220.01 1503.83,1220.01 1504.41,1220.01 1505,1220.01 1505.59,1220.01 1506.17,1220.01 1506.76,1220.01 1507.35,1220.01 1507.93,1220.01 1508.52,1220.01 1509.11,1220.01 1509.69,1220.01 1510.28,1220.01 1510.86,1220.01 1511.45,1220.01 1512.04,1220.01 1512.62,1220.01 1513.21,1220.01 1513.8,1220.01 1514.38,1220.01 1514.97,1220.01 1515.56,1220.01 1516.14,1220.01 1516.73,1220.01 1517.32,1220.01 1517.9,1220.01 1518.49,1220.01 1519.07,1220.01 1519.66,1220.01 1520.25,1220.01 1520.83,1220.01 1521.42,1220.01 1522.01,1220.01 1522.59,1220.01 1523.18,1220.01 1523.77,1220.01 1524.35,1220.01 1524.94,1220.01 1525.52,1220.01 1526.11,1220.01 1526.7,1220.01 1527.28,1220.01 1527.87,1220.01 1528.46,1220.01 1529.04,1220.01 1529.63,1220.01 1530.22,1220.01 1530.8,1220.01 1531.39,1220.01 1531.98,1220.01 1532.56,1220.01 1533.15,1220.01 1533.73,1220.01 1534.32,1220.01 1534.91,1220.01 1535.49,1220.01 1536.08,1220.01 1536.67,1220.01 1537.25,1220.01 1537.84,1220.01 1538.43,1220.01 1539.01,1220.01 1539.6,1220.01 1540.19,1220.01 1540.77,1220.01 1541.36,1220.01 1541.94,1220.01 1542.53,1220.01 1543.12,1220.01 1543.7,1220.01 1544.29,1220.01 1544.88,1220.01 1545.46,1220.01 1546.05,1220.01 1546.64,1220.01 1547.22,1220.01 1547.81,1220.01 1548.4,1220.01 1548.98,1220.01 1549.57,1220.01 1550.15,1220.01 1550.74,1220.01 1551.33,1220.01 1551.91,1220.01 1552.5,1220.01 1553.09,1220.01 1553.67,1220.01 1554.26,1220.01 1554.85,1220.01 1555.43,1220.01 1556.02,1220.01 1556.6,1220.01 1557.19,1220.01 1557.78,1220.01 1558.36,1220.01 1558.95,1220.01 1559.54,1220.01 1560.12,1220.01 1560.71,1220.01 1561.3,1220.01 1561.88,1220.01 1562.47,1220.01 1563.06,1220.01 1563.64,1220.01 1564.23,1220.01 1564.81,1220.01 1565.4,1220.01 1565.99,1220.01 1566.57,1220.01 1567.16,1220.01 1567.75,1220.01 1568.33,1220.01 1568.92,1220.01 1569.51,1220.01 1570.09,1220.01 1570.68,1220.01 1571.27,1220.01 1571.85,1220.01 1572.44,1220.01 1573.02,1220.01 1573.61,1220.01 1574.2,1220.01 1574.78,1220.01 1575.37,1220.01 1575.96,1220.01 1576.54,1220.01 1577.13,1220.01 1577.72,1220.01 1578.3,1220.01 1578.89,1220.01 1579.47,1220.01 1580.06,1220.01 1580.65,1220.01 1581.23,1220.01 1581.82,1220.01 1582.41,1220.01 1582.99,1220.01 1583.58,1220.01 1584.17,1220.01 1584.75,1220.01 1585.34,1220.01 1585.93,1220.01 1586.51,1220.01 1587.1,1220.01 1587.68,1220.01 1588.27,1220.01 1588.86,1220.01 1589.44,1220.01 1590.03,1220.01 1590.62,1220.01 1591.2,1220.01 1591.79,1220.01 1592.38,1220.01 1592.96,1220.01 1593.55,1220.01 1594.14,1220.01 1594.72,1220.01 1595.31,1220.01 1595.89,1220.01 1596.48,1220.01 1597.07,1220.01 1597.65,1220.01 1598.24,1220.01 1598.83,1220.01 1599.41,1220.01 1600,1220.01 1600.59,1220.01 1601.17,1220.01 1601.76,1220.01 1602.34,1220.01 1602.93,1220.01 1603.52,1220.01 1604.1,1220.01 1604.69,1220.01 1605.28,1220.01 1605.86,1220.01 1606.45,1220.01 1607.04,1220.01 1607.62,1220.01 1608.21,1220.01 1608.8,1220.01 1609.38,1220.01 1609.97,1220.01 1610.55,1220.01 1611.14,1220.01 1611.73,1220.01 1612.31,1220.01 1612.9,1220.01 1613.49,1220.01 1614.07,1220.01 1614.66,1220.01 1615.25,1220.01 1615.83,1220.01 1616.42,1220.01 1617.01,1220.01 1617.59,1220.01 1618.18,1220.01 1618.76,1220.01 1619.35,1220.01 1619.94,1220.01 1620.52,1220.01 1621.11,1220.01 1621.7,1220.01 1622.28,1220.01 1622.87,1220.01 1623.46,1220.01 1624.04,1220.01 1624.63,1220.01 1625.22,1220.01 1625.8,1220.01 1626.39,1220.01 1626.97,1220.01 1627.56,1220.01 1628.15,1220.01 1628.73,1220.01 1629.32,1220.01 1629.91,1220.01 1630.49,1220.01 1631.08,1220.01 1631.67,1220.01 1632.25,1220.01 1632.84,1220.01 1633.42,1220.01 1634.01,1220.01 1634.6,1220.01 1635.18,1220.01 1635.77,1220.01 1636.36,1220.01 1636.94,1220.01 1637.53,1220.01 1638.12,1220.01 1638.7,1220.01 1639.29,1220.01 1639.88,1220.01 1640.46,1220.01 1641.05,1220.01 1641.63,1220.01 1642.22,1220.01 1642.81,1220.01 1643.39,1220.01 1643.98,1220.01 1644.57,1220.01 1645.15,1220.01 1645.74,1220.01 1646.33,1220.01 1646.91,1220.01 1647.5,1220.01 1648.09,1220.01 1648.67,1220.01 1649.26,1220.01 1649.84,1220.01 1650.43,1220.01 1651.02,1220.01 1651.6,1220.01 1652.19,1220.01 1652.78,1220.01 1653.36,1220.01 1653.95,1220.01 1654.54,1220.01 1655.12,1220.01 1655.71,1220.01 1656.29,1220.01 1656.88,1220.01 1657.47,1220.01 1658.05,1220.01 1658.64,1220.01 1659.23,1220.01 1659.81,1220.01 1660.4,1220.01 1660.99,1220.01 1661.57,1220.01 1662.16,1220.01 1662.75,1220.01 1663.33,1220.01 1663.92,1220.01 1664.5,1220.01 1665.09,1220.01 1665.68,1220.01 1666.26,1220.01 1666.85,1220.01 1667.44,1220.01 1668.02,1220.01 1668.61,1220.01 1669.2,1220.01 1669.78,1220.01 1670.37,1220.01 1670.96,1220.01 1671.54,1220.01 1672.13,1220.01 1672.71,1220.01 1673.3,1220.01 1673.89,1220.01 1674.47,1220.01 1675.06,1220.01 1675.65,1220.01 1676.23,1220.01 1676.82,1220.01 1677.41,1220.01 1677.99,1220.01 1678.58,1220.01 1679.17,1220.01 1679.75,1220.01 1680.34,1220.01 1680.92,1220.01 1681.51,1220.01 1682.1,1220.01 1682.68,1220.01 1683.27,1220.01 1683.86,1220.01 1684.44,1220.01 1685.03,1220.01 1685.62,1220.01 1686.2,1220.01 1686.79,1220.01 1687.37,1220.01 1687.96,1220.01 1688.55,1220.01 1689.13,1220.01 1689.72,1220.01 1690.31,1220.01 1690.89,1220.01 1691.48,1220.01 1692.07,1220.01 1692.65,1220.01 1693.24,1220.01 1693.83,1220.01 1694.41,1220.01 1695,1220.01 1695.58,1220.01 1696.17,1220.01 1696.76,1220.01 1697.34,1220.01 1697.93,1220.01 1698.52,1220.01 1699.1,1220.01 1699.69,1220.01 1700.28,1220.01 1700.86,1220.01 1701.45,1220.01 1702.04,1220.01 1702.62,1220.01 1703.21,1220.01 1703.79,1220.01 1704.38,1220.01 1704.97,1220.01 1705.55,1220.01 1706.14,1220.01 1706.73,1220.01 1707.31,1220.01 1707.9,1220.01 1708.49,1220.01 1709.07,1220.01 1709.66,1220.01 1710.24,1220.01 1710.83,1220.01 1711.42,1220.01 1712,1220.01 1712.59,1220.01 1713.18,1220.01 1713.76,1220.01 1714.35,1220.01 1714.94,1220.01 1715.52,1220.01 1716.11,1220.01 1716.7,1220.01 1717.28,1220.01 1717.87,1220.01 1718.45,1220.01 1719.04,1220.01 1719.63,1220.01 1720.21,1220.01 1720.8,1220.01 1721.39,1220.01 1721.97,1220.01 1722.56,1220.01 1723.15,1220.01 1723.73,1220.01 1724.32,1220.01 1724.91,1220.01 1725.49,1220.01 1726.08,1220.01 1726.66,1220.01 1727.25,1220.01 1727.84,1220.01 1728.42,1220.01 1729.01,1220.01 1729.6,1220.01 1730.18,1220.01 1730.77,1220.01 1731.36,1220.01 1731.94,1220.01 1732.53,1220.01 1733.11,1220.01 1733.7,1220.01 1734.29,1220.01 1734.87,1220.01 1735.46,1220.01 1736.05,1220.01 1736.63,1220.01 1737.22,1220.01 1737.81,1220.01 1738.39,1220.01 1738.98,1220.01 1739.57,1220.01 1740.15,1220.01 1740.74,1220.01 1741.32,1220.01 1741.91,1220.01 1742.5,1220.01 1743.08,1220.01 1743.67,1220.01 1744.26,1220.01 1744.84,1220.01 1745.43,1220.01 1746.02,1220.01 1746.6,1220.01 1747.19,1220.01 1747.78,1220.01 1748.36,1220.01 1748.95,1220.01 1749.53,1220.01 1750.12,1220.01 1750.71,1220.01 1751.29,1220.01 1751.88,1220.01 1752.47,1220.01 1753.05,1220.01 1753.64,1220.01 1754.23,1220.01 1754.81,1220.01 1755.4,1220.01 1755.99,1220.01 1756.57,1220.01 1757.16,1220.01 1757.74,1220.01 1758.33,1220.01 1758.92,1220.01 1759.5,1220.01 1760.09,1220.01 1760.68,1220.01 1761.26,1220.01 1761.85,1220.01 1762.44,1220.01 1763.02,1220.01 1763.61,1220.01 1764.19,1220.01 1764.78,1220.01 1765.37,1220.01 1765.95,1220.01 1766.54,1220.01 1767.13,1220.01 1767.71,1220.01 1768.3,1220.01 1768.89,1220.01 1769.47,1220.01 1770.06,1220.01 1770.65,1220.01 1771.23,1220.01 1771.82,1220.01 1772.4,1220.01 1772.99,1220.01 1773.58,1220.01 1774.16,1220.01 1774.75,1220.01 1775.34,1220.01 1775.92,1220.01 1776.51,1220.01 1777.1,1220.01 1777.68,1220.01 1778.27,1220.01 1778.86,1220.01 1779.44,1220.01 1780.03,1220.01 1780.61,1220.01 1781.2,1220.01 1781.79,1220.01 1782.37,1220.01 1782.96,1220.01 1783.55,1220.01 1784.13,1220.01 1784.72,1220.01 1785.31,1220.01 1785.89,1220.01 1786.48,1220.01 1787.06,1220.01 1787.65,1220.01 1788.24,1220.01 1788.82,1220.01 1789.41,1220.01 1790,1220.01 1790.58,1220.01 1791.17,1220.01 1791.76,1220.01 1792.34,1220.01 1792.93,1220.01 1793.52,1220.01 1794.1,1220.01 1794.69,1220.01 1795.27,1220.01 1795.86,1220.01 1796.45,1220.01 1797.03,1220.01 1797.62,1220.01 1798.21,1220.01 1798.79,1220.01 1799.38,1220.01 1799.97,1220.01 1800.55,1220.01 1801.14,1220.01 1801.73,1220.01 1802.31,1220.01 1802.9,1220.01 1803.48,1220.01 1804.07,1220.01 1804.66,1220.01 1805.24,1220.01 1805.83,1220.01 1806.42,1220.01 1807,1220.01 1807.59,1220.01 1808.18,1220.01 1808.76,1220.01 1809.35,1220.01 1809.94,1220.01 1810.52,1220.01 1811.11,1220.01 1811.69,1220.01 1812.28,1220.01 1812.87,1220.01 1813.45,1220.01 1814.04,1220.01 1814.63,1220.01 1815.21,1220.01 1815.8,1220.01 1816.39,1220.01 1816.97,1220.01 1817.56,1220.01 1818.14,1220.01 1818.73,1220.01 1819.32,1220.01 1819.9,1220.01 1820.49,1220.01 1821.08,1220.01 1821.66,1220.01 1822.25,1220.01 1822.84,1220.01 1823.42,1220.01 1824.01,1220.01 1824.6,1220.01 1825.18,1220.01 1825.77,1220.01 1826.35,1220.01 1826.94,1220.01 1827.53,1220.01 1828.11,1220.01 1828.7,1220.01 1829.29,1220.01 1829.87,1220.01 1830.46,1220.01 1831.05,1220.01 1831.63,1220.01 1832.22,1220.01 1832.81,1220.01 1833.39,1220.01 1833.98,1220.01 1834.56,1220.01 1835.15,1220.01 1835.74,1220.01 1836.32,1220.01 1836.91,1220.01 1837.5,1220.01 1838.08,1220.01 1838.67,1220.01 1839.26,1220.01 1839.84,1220.01 1840.43,1220.01 1841.01,1220.01 1841.6,1220.01 1842.19,1220.01 1842.77,1220.01 1843.36,1220.01 1843.95,1220.01 1844.53,1220.01 1845.12,1220.01 1845.71,1220.01 1846.29,1220.01 1846.88,1220.01 1847.47,1220.01 1848.05,1220.01 1848.64,1220.01 1849.22,1220.01 1849.81,1220.01 1850.4,1220.01 1850.98,1220.01 1851.57,1220.01 1852.16,1220.01 1852.74,1220.01 1853.33,1220.01 1853.92,1220.01 1854.5,1220.01 1855.09,1220.01 1855.68,1220.01 1856.26,1220.01 1856.85,1220.01 1857.43,1220.01 1858.02,1220.01 1858.61,1220.01 1859.19,1220.01 1859.78,1220.01 1860.37,1220.01 1860.95,1220.01 1861.54,1220.01 1862.13,1220.01 1862.71,1220.01 1863.3,1220.01 1863.88,1220.01 1864.47,1220.01 1865.06,1220.01 1865.64,1220.01 1866.23,1220.01 1866.82,1220.01 1867.4,1220.01 1867.99,1220.01 1868.58,1220.01 1869.16,1220.01 1869.75,1220.01 1870.34,1220.01 1870.92,1220.01 1871.51,1220.01 1872.09,1220.01 1872.68,1220.01 1873.27,1220.01 1873.85,1220.01 1874.44,1220.01 1875.03,1220.01 1875.61,1220.01 1876.2,1220.01 1876.79,1220.01 1877.37,1220.01 1877.96,1220.01 1878.55,1220.01 1879.13,1220.01 1879.72,1220.01 1880.3,1220.01 1880.89,1220.01 1881.48,1220.01 1882.06,1220.01 1882.65,1220.01 1883.24,1220.01 1883.82,1220.01 1884.41,1220.01 1885,1220.01 1885.58,1220.01 1886.17,1220.01 1886.76,1220.01 1887.34,1220.01 1887.93,1220.01 1888.51,1220.01 1889.1,1220.01 1889.69,1220.01 1890.27,1220.01 1890.86,1220.01 1891.45,1220.01 1892.03,1220.01 1892.62,1220.01 1893.21,1220.01 1893.79,1220.01 1894.38,1220.01 1894.96,1220.01 1895.55,1220.01 1896.14,1220.01 1896.72,1220.01 1897.31,1220.01 1897.9,1220.01 1898.48,1220.01 1899.07,1220.01 1899.66,1220.01 1900.24,1220.01 1900.83,1220.01 1901.42,1220.01 1902,1220.01 1902.59,1220.01 1903.17,1220.01 1903.76,1220.01 1904.35,1220.01 1904.93,1220.01 1905.52,1220.01 1906.11,1220.01 1906.69,1220.01 1907.28,1220.01 1907.87,1220.01 1908.45,1220.01 1909.04,1220.01 1909.63,1220.01 1910.21,1220.01 1910.8,1220.01 1911.38,1220.01 1911.97,1220.01 1912.56,1220.01 1913.14,1220.01 1913.73,1220.01 1914.32,1220.01 1914.9,1220.01 1915.49,1220.01 1916.08,1220.01 1916.66,1220.01 1917.25,1220.01 1917.83,1220.01 1918.42,1220.01 1919.01,1220.01 1919.59,1220.01 1920.18,1220.01 1920.77,1220.01 1921.35,1220.01 1921.94,1220.01 1922.53,1220.01 1923.11,1220.01 1923.7,1220.01 1924.29,1220.01 1924.87,1220.01 1925.46,1220.01 1926.04,1220.01 1926.63,1220.01 1927.22,1220.01 1927.8,1220.01 1928.39,1220.01 1928.98,1220.01 1929.56,1220.01 1930.15,1220.01 1930.74,1220.01 1931.32,1220.01 1931.91,1220.01 1932.5,1220.01 1933.08,1220.01 1933.67,1220.01 1934.25,1220.01 1934.84,1220.01 1935.43,1220.01 1936.01,1220.01 1936.6,1220.01 1937.19,1220.01 1937.77,1220.01 1938.36,1220.01 1938.95,1220.01 1939.53,1220.01 1940.12,1220.01 1940.71,1220.01 1941.29,1220.01 1941.88,1220.01 1942.46,1220.01 1943.05,1220.01 1943.64,1220.01 1944.22,1220.01 1944.81,1220.01 1945.4,1220.01 1945.98,1220.01 1946.57,1220.01 1947.16,1220.01 1947.74,1220.01 1948.33,1220.01 1948.91,1220.01 1949.5,1220.01 1950.09,1220.01 1950.67,1220.01 1951.26,1220.01 1951.85,1220.01 1952.43,1220.01 1953.02,1220.01 1953.61,1220.01 1954.19,1220.01 1954.78,1220.01 1955.37,1220.01 1955.95,1220.01 1956.54,1220.01 1957.12,1220.01 1957.71,1220.01 1958.3,1220.01 1958.88,1220.01 1959.47,1220.01 1960.06,1220.01 1960.64,1220.01 1961.23,1220.01 1961.82,1220.01 1962.4,1220.01 1962.99,1220.01 1963.58,1220.01 1964.16,1220.01 1964.75,1220.01 1965.33,1220.01 1965.92,1220.01 1966.51,1220.01 1967.09,1220.01 1967.68,1220.01 1968.27,1220.01 1968.85,1220.01 1969.44,1220.01 1970.03,1220.01 1970.61,1220.01 1971.2,1220.01 1971.78,1220.01 1972.37,1220.01 1972.96,1220.01 1973.54,1220.01 1974.13,1220.01 1974.72,1220.01 1975.3,1220.01 1975.89,1220.01 1976.48,1220.01 1977.06,1220.01 1977.65,1220.01 1978.24,1220.01 1978.82,1220.01 1979.41,1220.01 1979.99,1220.01 1980.58,1220.01 1981.17,1220.01 1981.75,1220.01 1982.34,1220.01 1982.93,1220.01 1983.51,1220.01 1984.1,1220.01 1984.69,1220.01 1985.27,1220.01 1985.86,1220.01 1986.45,1220.01 1987.03,1220.01 1987.62,1220.01 1988.2,1220.01 1988.79,1220.01 1989.38,1220.01 1989.96,1220.01 1990.55,1220.01 1991.14,1220.01 1991.72,1220.01 1992.31,1220.01 1992.9,1220.01 1993.48,1220.01 1994.07,1220.01 1994.65,1220.01 1995.24,1220.01 1995.83,1220.01 1996.41,1220.01 1997,1220.01 1997.59,1220.01 1998.17,1220.01 1998.76,1220.01 1999.35,1220.01 1999.93,1220.01 2000.52,1220.01 2001.11,1220.01 2001.69,1220.01 2002.28,1220.01 2002.86,1220.01 2003.45,1220.01 2004.04,1220.01 2004.62,1220.01 2005.21,1220.01 2005.8,1220.01 2006.38,1220.01 2006.97,1220.01 2007.56,1220.01 2008.14,1220.01 2008.73,1220.01 2009.32,1220.01 2009.9,1220.01 2010.49,1220.01 2011.07,1220.01 2011.66,1220.01 2012.25,1220.01 2012.83,1220.01 2013.42,1220.01 2014.01,1220.01 2014.59,1220.01 2015.18,1220.01 2015.77,1220.01 2016.35,1220.01 2016.94,1220.01 2017.53,1220.01 2018.11,1220.01 2018.7,1220.01 2019.28,1220.01 2019.87,1220.01 2020.46,1220.01 2021.04,1220.01 2021.63,1220.01 2022.22,1220.01 2022.8,1220.01 2023.39,1220.01 2023.98,1220.01 2024.56,1220.01 2025.15,1220.01 2025.73,1220.01 2026.32,1220.01 2026.91,1220.01 2027.49,1220.01 2028.08,1220.01 2028.67,1220.01 2029.25,1220.01 2029.84,1220.01 2030.43,1220.01 2031.01,1220.01 2031.6,1220.01 2032.19,1220.01 2032.77,1220.01 2033.36,1220.01 2033.94,1220.01 2034.53,1220.01 2035.12,1220.01 2035.7,1220.01 2036.29,1220.01 2036.88,1220.01 2037.46,1220.01 2038.05,1220.01 2038.64,1220.01 2039.22,1220.01 2039.81,1220.01 2040.4,1220.01 2040.98,1220.01 2041.57,1220.01 2042.15,1220.01 2042.74,1220.01 2043.33,1220.01 2043.91,1220.01 2044.5,1220.01 2045.09,1220.01 2045.67,1220.01 2046.26,1220.01 2046.85,1220.01 2047.43,1220.01 2048.02,1220.01 2048.6,1220.01 2049.19,1220.01 2049.78,1220.01 2050.36,1220.01 2050.95,1220.01 2051.54,1220.01 2052.12,1220.01 2052.71,1220.01 2053.3,1220.01 2053.88,1220.01 2054.47,1220.01 2055.06,1220.01 2055.64,1220.01 2056.23,1220.01 2056.81,1220.01 2057.4,1220.01 2057.99,1220.01 2058.57,1220.01 2059.16,1220.01 2059.75,1220.01 2060.33,1220.01 2060.92,1220.01 2061.51,1220.01 2062.09,1220.01 2062.68,1220.01 2063.27,1220.01 2063.85,1220.01 2064.44,1220.01 2065.02,1220.01 2065.61,1220.01 2066.2,1220.01 2066.78,1220.01 2067.37,1220.01 2067.96,1220.01 2068.54,1220.01 2069.13,1220.01 2069.72,1220.01 2070.3,1220.01 2070.89,1220.01 2071.48,1220.01 2072.06,1220.01 2072.65,1220.01 2073.23,1220.01 2073.82,1220.01 2074.41,1220.01 2074.99,1220.01 2075.58,1220.01 2076.17,1220.01 2076.75,1220.01 2077.34,1220.01 2077.93,1220.01 2078.51,1220.01 2079.1,1220.01 2079.68,1220.01 2080.27,1220.01 2080.86,1220.01 2081.44,1220.01 2082.03,1220.01 2082.62,1220.01 2083.2,1220.01 2083.79,1220.01 2084.38,1220.01 2084.96,1220.01 2085.55,1220.01 2086.14,1220.01 2086.72,1220.01 2087.31,1220.01 2087.89,1220.01 2088.48,1220.01 2089.07,1220.01 2089.65,1220.01 2090.24,1220.01 2090.83,1220.01 2091.41,1220.01 2092,1220.01 2092.59,1220.01 2093.17,1220.01 2093.76,1220.01 2094.35,1220.01 2094.93,1220.01 2095.52,1220.01 2096.1,1220.01 2096.69,1220.01 2097.28,1220.01 2097.86,1220.01 2098.45,1220.01 2099.04,1220.01 2099.62,1220.01 2100.21,1220.01 2100.8,1220.01 2101.38,1220.01 2101.97,1220.01 2102.55,1220.01 2103.14,1220.01 2103.73,1220.01 2104.31,1220.01 2104.9,1220.01 2105.49,1220.01 2106.07,1220.01 2106.66,1220.01 2107.25,1220.01 2107.83,1220.01 2108.42,1220.01 2109.01,1220.01 2109.59,1220.01 2110.18,1220.01 2110.76,1220.01 2111.35,1220.01 2111.94,1220.01 2112.52,1220.01 2113.11,1220.01 2113.7,1220.01 2114.28,1220.01 2114.87,1220.01 2115.46,1220.01 2116.04,1220.01 2116.63,1220.01 2117.22,1220.01 2117.8,1220.01 2118.39,1220.01 2118.97,1220.01 2119.56,1220.01 2120.15,1220.01 2120.73,1220.01 2121.32,1220.01 2121.91,1220.01 2122.49,1220.01 2123.08,1220.01 2123.67,1220.01 2124.25,1220.01 2124.84,1220.01 2125.42,1220.01 2126.01,1220.01 2126.6,1220.01 2127.18,1220.01 2127.77,1220.01 2128.36,1220.01 2128.94,1220.01 2129.53,1220.01 2130.12,1220.01 2130.7,1220.01 2131.29,1220.01 2131.88,1220.01 2132.46,1220.01 2133.05,1220.01 2133.63,1220.01 2134.22,1220.01 2134.81,1220.01 2135.39,1220.01 2135.98,1220.01 2136.57,1220.01 2137.15,1220.01 2137.74,1220.01 2138.33,1220.01 2138.91,1220.01 2139.5,1220.01 2140.09,1220.01 2140.67,1220.01 2141.26,1220.01 2141.84,1220.01 2142.43,1220.01 2143.02,1220.01 2143.6,1220.01 2144.19,1220.01 2144.78,1220.01 2145.36,1220.01 2145.95,1220.01 2146.54,1220.01 2147.12,1220.01 2147.71,1220.01 2148.3,1220.01 2148.88,1220.01 2149.47,1220.01 2150.05,1220.01 2150.64,1220.01 2151.23,1220.01 2151.81,1220.01 2152.4,1220.01 2152.99,1220.01 2153.57,1220.01 2154.16,1220.01 2154.75,1220.01 2155.33,1220.01 2155.92,1220.01 2156.5,1220.01 2157.09,1220.01 2157.68,1220.01 2158.26,1220.01 \"/>\n<path clip-path=\"url(#clip622)\" d=\"M986.025 1219.73 L986.612 1219.73 L987.198 1219.73 L987.785 1219.73 L988.371 1219.73 L988.957 1219.73 L989.544 1219.73 L990.13 1219.73 L990.717 1219.73 L991.303 1219.73 L991.889 1219.73 L992.476 1219.73 L993.062 1219.73 L993.649 1219.73 L994.235 1219.73 L994.822 1219.73 L995.408 1219.73 L995.994 1219.73 L996.581 1219.73 L997.167 1219.73 L997.754 1219.73 L998.34 1219.73 L998.926 1219.73 L999.513 1219.73 L1000.1 1219.73 L1000.69 1219.73 L1001.27 1219.73 L1001.86 1219.73 L1002.44 1219.73 L1003.03 1219.73 L1003.62 1219.73 L1004.2 1219.73 L1004.79 1219.73 L1005.38 1219.73 L1005.96 1219.73 L1006.55 1219.73 L1007.14 1219.73 L1007.72 1219.73 L1008.31 1219.73 L1008.9 1219.73 L1009.48 1219.73 L1010.07 1219.73 L1010.65 1219.73 L1011.24 1219.73 L1011.83 1219.73 L1012.41 1219.73 L1013 1219.73 L1013.59 1219.73 L1014.17 1219.73 L1014.76 1219.73 L1015.35 1219.73 L1015.93 1219.73 L1016.52 1219.73 L1017.11 1219.73 L1017.69 1219.73 L1018.28 1219.73 L1018.86 1219.73 L1019.45 1219.73 L1020.04 1219.73 L1020.62 1219.73 L1021.21 1219.73 L1021.8 1219.73 L1022.38 1219.73 L1022.97 1219.73 L1023.56 1219.73 L1024.14 1219.73 L1024.73 1219.73 L1025.32 1219.73 L1025.9 1219.73 L1026.49 1219.73 L1027.07 1219.73 L1027.66 1219.73 L1028.25 1219.73 L1028.83 1219.73 L1029.42 1219.73 L1030.01 1219.73 L1030.59 1219.73 L1031.18 1219.73 L1031.77 1219.73 L1032.35 1219.73 L1032.94 1219.73 L1033.52 1219.73 L1034.11 1219.73 L1034.7 1219.73 L1035.28 1219.73 L1035.87 1219.73 L1036.46 1219.73 L1037.04 1219.73 L1037.63 1219.73 L1038.22 1219.73 L1038.8 1219.73 L1039.39 1219.73 L1039.98 1219.73 L1040.56 1219.73 L1041.15 1219.73 L1041.73 1219.73 L1042.32 1219.73 L1042.91 1219.73 L1043.49 1219.73 L1044.08 1219.73 L1044.67 1219.73 L1045.25 1219.73 L1045.84 1219.73 L1046.43 1219.73 L1047.01 1219.73 L1047.6 1219.73 L1048.19 1219.73 L1048.77 1219.73 L1049.36 1219.73 L1049.94 1219.73 L1050.53 1219.73 L1051.12 1219.73 L1051.7 1219.73 L1052.29 1219.73 L1052.88 1219.73 L1053.46 1219.73 L1054.05 1219.73 L1054.64 1219.73 L1055.22 1219.73 L1055.81 1219.73 L1056.39 1219.73 L1056.98 1219.73 L1057.57 1219.73 L1058.15 1219.73 L1058.74 1219.73 L1059.33 1219.73 L1059.91 1219.73 L1060.5 1219.73 L1061.09 1219.73 L1061.67 1219.73 L1062.26 1219.73 L1062.85 1219.73 L1063.43 1219.73 L1064.02 1219.73 L1064.6 1219.73 L1065.19 1219.73 L1065.78 1219.73 L1066.36 1219.73 L1066.95 1219.73 L1067.54 1219.73 L1068.12 1219.73 L1068.71 1219.73 L1069.3 1219.73 L1069.88 1219.73 L1070.47 1219.73 L1071.06 1219.73 L1071.64 1219.73 L1072.23 1219.73 L1072.81 1219.73 L1073.4 1219.73 L1073.99 1219.73 L1074.57 1219.73 L1075.16 1219.73 L1075.75 1219.73 L1076.33 1219.73 L1076.92 1219.73 L1077.51 1219.73 L1078.09 1219.73 L1078.68 1219.73 L1079.26 1219.73 L1079.85 1219.73 L1080.44 1219.73 L1081.02 1219.73 L1081.61 1219.73 L1082.2 1219.73 L1082.78 1219.73 L1083.37 1219.73 L1083.96 1219.73 L1084.54 1219.73 L1085.13 1219.73 L1085.72 1219.73 L1086.3 1219.73 L1086.89 1219.73 L1087.47 1219.73 L1088.06 1219.73 L1088.65 1219.73 L1089.23 1219.73 L1089.82 1219.73 L1090.41 1219.73 L1090.99 1219.73 L1091.58 1219.73 L1092.17 1219.73 L1092.75 1219.73 L1093.34 1219.73 L1093.93 1219.73 L1094.51 1219.73 L1095.1 1219.73 L1095.68 1219.73 L1096.27 1219.73 L1096.86 1219.73 L1097.44 1219.73 L1098.03 1219.73 L1098.62 1219.73 L1099.2 1219.73 L1099.79 1219.73 L1100.38 1219.73 L1100.96 1219.73 L1101.55 1219.73 L1102.14 1219.73 L1102.72 1219.73 L1103.31 1219.73 L1103.89 1219.73 L1104.48 1219.73 L1105.07 1219.73 L1105.65 1219.73 L1106.24 1219.73 L1106.83 1219.73 L1107.41 1219.73 L1108 1219.73 L1108.59 1219.73 L1109.17 1219.73 L1109.76 1219.73 L1110.34 1219.73 L1110.93 1219.73 L1111.52 1219.73 L1112.1 1219.73 L1112.69 1219.73 L1113.28 1219.73 L1113.86 1219.73 L1114.45 1219.73 L1115.04 1219.73 L1115.62 1219.73 L1116.21 1219.73 L1116.8 1219.73 L1117.38 1219.73 L1117.97 1219.73 L1118.55 1219.73 L1119.14 1219.73 L1119.73 1219.73 L1120.31 1219.73 L1120.9 1219.73 L1121.49 1219.73 L1122.07 1219.73 L1122.66 1219.73 L1123.25 1219.73 L1123.83 1219.73 L1124.42 1219.73 L1125.01 1219.73 L1125.59 1219.73 L1126.18 1219.73 L1126.76 1219.73 L1127.35 1219.73 L1127.94 1219.73 L1128.52 1219.73 L1129.11 1219.73 L1129.7 1219.73 L1130.28 1219.73 L1130.87 1219.73 L1131.46 1219.73 L1132.04 1219.73 L1132.63 1219.73 L1133.21 1219.73 L1133.8 1219.73 L1134.39 1219.73 L1134.97 1219.73 L1135.56 1219.73 L1136.15 1219.73 L1136.73 1219.73 L1137.32 1219.73 L1137.91 1219.73 L1138.49 1219.73 L1139.08 1219.73 L1139.67 1219.73 L1140.25 1219.73 L1140.84 1219.73 L1141.42 1219.73 L1142.01 1219.73 L1142.6 1219.73 L1143.18 1219.73 L1143.77 1219.73 L1144.36 1219.73 L1144.94 1219.73 L1145.53 1219.73 L1146.12 1219.73 L1146.7 1219.73 L1147.29 1219.73 L1147.88 1219.73 L1148.46 1219.73 L1149.05 1219.73 L1149.63 1219.73 L1150.22 1219.73 L1150.81 1219.73 L1151.39 1219.73 L1151.98 1219.73 L1152.57 1219.73 L1153.15 1219.73 L1153.74 1219.73 L1154.33 1219.73 L1154.91 1219.73 L1155.5 1219.73 L1156.09 1219.73 L1156.67 1219.73 L1157.26 1219.73 L1157.84 1219.73 L1158.43 1219.73 L1159.02 1219.73 L1159.6 1219.73 L1160.19 1219.73 L1160.78 1219.73 L1161.36 1219.73 L1161.95 1219.73 L1162.54 1219.73 L1163.12 1219.73 L1163.71 1219.73 L1164.29 1219.73 L1164.88 1219.73 L1165.47 1219.73 L1166.05 1219.73 L1166.64 1219.73 L1167.23 1219.73 L1167.81 1219.73 L1168.4 1219.73 L1168.99 1219.73 L1169.57 1219.73 L1170.16 1219.73 L1170.75 1219.73 L1171.33 1219.73 L1171.92 1219.73 L1172.5 1219.73 L1173.09 1219.73 L1173.68 1219.73 L1174.26 1219.73 L1174.85 1219.73 L1175.44 1219.73 L1176.02 1219.73 L1176.61 1219.73 L1177.2 1219.73 L1177.78 1219.73 L1178.37 1219.73 L1178.96 1219.73 L1179.54 1219.73 L1180.13 1219.73 L1180.71 1219.73 L1181.3 1219.73 L1181.89 1219.73 L1182.47 1219.73 L1183.06 1219.73 L1183.65 1219.73 L1184.23 1219.73 L1184.82 1219.73 L1185.41 1219.73 L1185.99 1219.73 L1186.58 1219.73 L1187.16 1219.73 L1187.75 1219.73 L1188.34 1219.73 L1188.92 1219.73 L1189.51 1219.73 L1190.1 1219.73 L1190.68 1219.73 L1191.27 1219.73 L1191.86 1219.73 L1192.44 1219.73 L1193.03 1219.73 L1193.62 1219.73 L1194.2 1219.73 L1194.79 1219.73 L1195.37 1219.73 L1195.96 1219.73 L1196.55 1219.73 L1197.13 1219.73 L1197.72 1219.73 L1198.31 1219.73 L1198.89 1219.73 L1199.48 1219.73 L1200.07 1219.73 L1200.65 1219.73 L1201.24 1219.73 L1201.83 1219.73 L1202.41 1219.73 L1203 1219.73 L1203.58 1219.73 L1204.17 1219.73 L1204.76 1219.73 L1205.34 1219.73 L1205.93 1219.73 L1206.52 1219.73 L1207.1 1219.73 L1207.69 1219.73 L1208.28 1219.73 L1208.86 1219.73 L1209.45 1219.73 L1210.03 1219.73 L1210.62 1219.73 L1211.21 1219.73 L1211.79 1219.73 L1212.38 1219.73 L1212.97 1219.73 L1213.55 1219.73 L1214.14 1219.73 L1214.73 1219.73 L1215.31 1219.73 L1215.9 1219.73 L1216.49 1219.73 L1217.07 1219.73 L1217.66 1219.73 L1218.24 1219.73 L1218.83 1219.73 L1219.42 1219.73 L1220 1219.73 L1220.59 1219.73 L1221.18 1219.73 L1221.76 1219.73 L1222.35 1219.73 L1222.94 1219.73 L1223.52 1219.73 L1224.11 1219.73 L1224.7 1219.73 L1225.28 1219.73 L1225.87 1219.73 L1226.45 1219.73 L1227.04 1219.73 L1227.63 1219.73 L1228.21 1219.73 L1228.8 1219.73 L1229.39 1219.73 L1229.97 1219.73 L1230.56 1219.73 L1231.15 1219.73 L1231.73 1219.73 L1232.32 1219.73 L1232.91 1219.73 L1233.49 1219.73 L1234.08 1219.73 L1234.66 1219.73 L1235.25 1219.73 L1235.84 1219.73 L1236.42 1219.73 L1237.01 1219.73 L1237.6 1219.73 L1238.18 1219.73 L1238.77 1219.73 L1239.36 1219.73 L1239.94 1219.73 L1240.53 1219.73 L1241.11 1219.73 L1241.7 1219.73 L1242.29 1219.73 L1242.87 1219.73 L1243.46 1219.73 L1244.05 1219.73 L1244.63 1219.73 L1245.22 1219.73 L1245.81 1219.73 L1246.39 1219.73 L1246.98 1219.73 L1247.57 1219.73 L1248.15 1219.73 L1248.74 1219.73 L1249.32 1219.73 L1249.91 1219.73 L1250.5 1219.73 L1251.08 1219.73 L1251.67 1219.73 L1252.26 1219.73 L1252.84 1219.73 L1253.43 1219.73 L1254.02 1219.73 L1254.6 1219.73 L1255.19 1219.73 L1255.78 1219.73 L1256.36 1219.73 L1256.95 1219.73 L1257.53 1219.73 L1258.12 1219.73 L1258.71 1219.73 L1259.29 1219.73 L1259.88 1219.73 L1260.47 1219.73 L1261.05 1219.73 L1261.64 1219.73 L1262.23 1219.73 L1262.81 1219.73 L1263.4 1219.73 L1263.98 1219.73 L1264.57 1219.73 L1265.16 1219.73 L1265.74 1219.73 L1266.33 1219.73 L1266.92 1219.73 L1267.5 1219.73 L1268.09 1219.73 L1268.68 1219.73 L1269.26 1219.73 L1269.85 1219.73 L1270.44 1219.73 L1271.02 1219.73 L1271.61 1219.73 L1272.19 1219.73 L1272.78 1219.73 L1273.37 1219.73 L1273.95 1219.73 L1274.54 1219.73 L1275.13 1219.73 L1275.71 1219.73 L1276.3 1219.73 L1276.89 1219.73 L1277.47 1219.73 L1278.06 1219.73 L1278.65 1219.73 L1279.23 1219.73 L1279.82 1219.73 L1280.4 1219.73 L1280.99 1219.73 L1281.58 1219.73 L1282.16 1219.73 L1282.75 1219.73 L1283.34 1219.73 L1283.92 1219.73 L1284.51 1219.73 L1285.1 1219.73 L1285.68 1219.73 L1286.27 1219.73 L1286.86 1219.73 L1287.44 1219.73 L1288.03 1219.73 L1288.61 1219.73 L1289.2 1219.73 L1289.79 1219.73 L1290.37 1219.73 L1290.96 1219.73 L1291.55 1219.73 L1292.13 1219.73 L1292.72 1219.73 L1293.31 1219.73 L1293.89 1219.73 L1294.48 1219.73 L1295.06 1219.73 L1295.65 1219.73 L1296.24 1219.73 L1296.82 1219.73 L1297.41 1219.73 L1298 1219.73 L1298.58 1219.73 L1299.17 1219.73 L1299.76 1219.73 L1300.34 1219.73 L1300.93 1219.73 L1301.52 1219.73 L1302.1 1219.73 L1302.69 1219.73 L1303.27 1219.73 L1303.86 1219.73 L1304.45 1219.73 L1305.03 1219.73 L1305.62 1219.73 L1306.21 1219.73 L1306.79 1219.73 L1307.38 1219.73 L1307.97 1219.73 L1308.55 1219.73 L1309.14 1219.73 L1309.73 1219.73 L1310.31 1219.73 L1310.9 1219.73 L1311.48 1219.73 L1312.07 1219.73 L1312.66 1219.73 L1313.24 1219.73 L1313.83 1219.73 L1314.42 1219.73 L1315 1219.73 L1315.59 1219.73 L1316.18 1219.73 L1316.76 1219.73 L1317.35 1219.73 L1317.93 1219.73 L1318.52 1219.73 L1319.11 1219.73 L1319.69 1219.73 L1320.28 1219.73 L1320.87 1219.73 L1321.45 1219.73 L1322.04 1219.73 L1322.63 1219.73 L1323.21 1219.73 L1323.8 1219.73 L1324.39 1219.73 L1324.97 1219.73 L1325.56 1219.73 L1326.14 1219.73 L1326.73 1219.73 L1327.32 1219.73 L1327.9 1219.73 L1328.49 1219.73 L1329.08 1219.73 L1329.66 1219.73 L1330.25 1219.73 L1330.84 1219.73 L1331.42 1219.73 L1332.01 1219.73 L1332.6 1219.73 L1333.18 1219.73 L1333.77 1219.73 L1334.35 1219.73 L1334.94 1219.73 L1335.53 1219.73 L1336.11 1219.73 L1336.7 1219.73 L1337.29 1219.73 L1337.87 1219.73 L1338.46 1219.73 L1339.05 1219.73 L1339.63 1219.73 L1340.22 1219.73 L1340.8 1219.73 L1341.39 1219.73 L1341.98 1219.73 L1342.56 1219.73 L1343.15 1219.73 L1343.74 1219.73 L1344.32 1219.73 L1344.91 1219.73 L1345.5 1219.73 L1346.08 1219.73 L1346.67 1219.73 L1347.26 1219.73 L1347.84 1219.73 L1348.43 1219.73 L1349.01 1219.73 L1349.6 1219.73 L1350.19 1219.73 L1350.77 1219.73 L1351.36 1219.73 L1351.95 1219.73 L1352.53 1219.73 L1353.12 1219.73 L1353.71 1219.73 L1354.29 1219.73 L1354.88 1219.73 L1355.47 1219.73 L1356.05 1219.73 L1356.64 1219.73 L1357.22 1219.73 L1357.81 1219.73 L1358.4 1219.73 L1358.98 1219.73 L1359.57 1219.73 L1360.16 1219.73 L1360.74 1219.73 L1361.33 1219.73 L1361.92 1219.73 L1362.5 1219.73 L1363.09 1219.73 L1363.68 1219.73 L1364.26 1219.73 L1364.85 1219.73 L1365.43 1219.73 L1366.02 1219.73 L1366.61 1219.73 L1367.19 1219.73 L1367.78 1219.73 L1368.37 1219.73 L1368.95 1219.73 L1369.54 1219.73 L1370.13 1219.73 L1370.71 1219.73 L1371.3 1219.73 L1371.88 1219.73 L1372.47 1219.73 L1373.06 1219.73 L1373.64 1219.73 L1374.23 1219.73 L1374.82 1219.73 L1375.4 1219.73 L1375.99 1219.73 L1376.58 1219.73 L1377.16 1219.73 L1377.75 1219.73 L1378.34 1219.73 L1378.92 1219.73 L1379.51 1219.73 L1380.09 1219.73 L1380.68 1219.73 L1381.27 1219.73 L1381.85 1219.73 L1382.44 1219.73 L1383.03 1219.73 L1383.61 1219.73 L1384.2 1219.73 L1384.79 1219.73 L1385.37 1219.73 L1385.96 1219.73 L1386.55 1219.73 L1387.13 1219.73 L1387.72 1219.73 L1388.3 1219.73 L1388.89 1219.73 L1389.48 1219.73 L1390.06 1219.73 L1390.65 1219.73 L1391.24 1219.73 L1391.82 1219.73 L1392.41 1219.73 L1393 1219.73 L1393.58 1219.73 L1394.17 1219.73 L1394.75 1219.73 L1395.34 1219.73 L1395.93 1219.73 L1396.51 1219.73 L1397.1 1219.73 L1397.69 1219.73 L1398.27 1219.73 L1398.86 1219.73 L1399.45 1219.73 L1400.03 1219.73 L1400.62 1219.73 L1401.21 1219.73 L1401.79 1219.73 L1402.38 1219.73 L1402.96 1219.73 L1403.55 1219.73 L1404.14 1219.73 L1404.72 1219.73 L1405.31 1219.73 L1405.9 1219.73 L1406.48 1219.73 L1407.07 1219.73 L1407.66 1219.73 L1408.24 1219.73 L1408.83 1219.73 L1409.42 1219.73 L1410 1219.73 L1410.59 1219.73 L1411.17 1219.73 L1411.76 1219.73 L1412.35 1219.73 L1412.93 1219.73 L1413.52 1219.73 L1414.11 1219.73 L1414.69 1219.73 L1415.28 1219.73 L1415.87 1219.73 L1416.45 1219.73 L1417.04 1219.73 L1417.63 1219.73 L1418.21 1219.73 L1418.8 1219.73 L1419.38 1219.73 L1419.97 1219.73 L1420.56 1219.73 L1421.14 1219.73 L1421.73 1219.73 L1422.32 1219.73 L1422.9 1219.73 L1423.49 1219.73 L1424.08 1219.73 L1424.66 1219.73 L1425.25 1219.73 L1425.83 1219.73 L1426.42 1219.73 L1427.01 1219.73 L1427.59 1219.73 L1428.18 1219.73 L1428.77 1219.73 L1429.35 1219.73 L1429.94 1219.73 L1430.53 1219.73 L1431.11 1219.73 L1431.7 1219.73 L1432.29 1219.73 L1432.87 1219.73 L1433.46 1219.73 L1434.04 1219.73 L1434.63 1219.73 L1435.22 1219.73 L1435.8 1219.73 L1436.39 1219.73 L1436.98 1219.73 L1437.56 1219.73 L1438.15 1219.73 L1438.74 1219.73 L1439.32 1219.73 L1439.91 1219.73 L1440.5 1219.73 L1441.08 1219.73 L1441.67 1219.73 L1442.25 1219.73 L1442.84 1219.73 L1443.43 1219.73 L1444.01 1219.73 L1444.6 1219.73 L1445.19 1219.73 L1445.77 1219.73 L1446.36 1219.73 L1446.95 1219.73 L1447.53 1219.73 L1448.12 1219.73 L1448.7 1219.73 L1449.29 1219.73 L1449.88 1219.73 L1450.46 1219.73 L1451.05 1219.73 L1451.64 1219.73 L1452.22 1219.73 L1452.81 1219.73 L1453.4 1219.73 L1453.98 1219.73 L1454.57 1219.73 L1455.16 1219.73 L1455.74 1219.73 L1456.33 1219.73 L1456.91 1219.73 L1457.5 1219.73 L1458.09 1219.73 L1458.67 1219.73 L1459.26 1219.73 L1459.85 1219.73 L1460.43 1219.73 L1461.02 1219.73 L1461.61 1219.73 L1462.19 1219.73 L1462.78 1219.73 L1463.37 1219.73 L1463.95 1219.73 L1464.54 1219.73 L1465.12 1219.73 L1465.71 1219.73 L1466.3 1219.73 L1466.88 1219.73 L1467.47 1219.73 L1468.06 1219.73 L1468.64 1219.73 L1469.23 1219.73 L1469.82 1219.73 L1470.4 1219.73 L1470.99 1219.73 L1471.57 1219.73 L1472.16 1219.73 L1472.75 1219.73 L1473.33 1219.73 L1473.92 1219.73 L1474.51 1219.73 L1475.09 1219.73 L1475.68 1219.73 L1476.27 1219.73 L1476.85 1219.73 L1477.44 1219.73 L1478.03 1219.73 L1478.61 1219.73 L1479.2 1219.73 L1479.78 1219.73 L1480.37 1219.73 L1480.96 1219.73 L1481.54 1219.73 L1482.13 1219.73 L1482.72 1219.73 L1483.3 1219.73 L1483.89 1219.73 L1484.48 1219.73 L1485.06 1219.73 L1485.65 1219.73 L1486.24 1219.73 L1486.82 1219.73 L1487.41 1219.73 L1487.99 1219.73 L1488.58 1219.73 L1489.17 1219.73 L1489.75 1219.73 L1490.34 1219.73 L1490.93 1219.73 L1491.51 1219.73 L1492.1 1219.73 L1492.69 1219.73 L1493.27 1219.73 L1493.86 1219.73 L1494.45 1219.73 L1495.03 1219.73 L1495.62 1219.73 L1496.2 1219.73 L1496.79 1219.73 L1497.38 1219.73 L1497.96 1219.73 L1498.55 1219.73 L1499.14 1219.73 L1499.72 1219.73 L1500.31 1219.73 L1500.9 1219.73 L1501.48 1219.73 L1502.07 1219.73 L1502.65 1219.73 L1503.24 1219.73 L1503.83 1219.73 L1504.41 1219.73 L1505 1219.73 L1505.59 1219.73 L1506.17 1219.73 L1506.76 1219.73 L1507.35 1219.73 L1507.93 1219.73 L1508.52 1219.73 L1509.11 1219.73 L1509.69 1219.73 L1510.28 1219.73 L1510.86 1219.73 L1511.45 1219.73 L1512.04 1219.73 L1512.62 1219.73 L1513.21 1219.73 L1513.8 1219.73 L1514.38 1219.73 L1514.97 1219.73 L1515.56 1219.73 L1516.14 1219.73 L1516.73 1219.73 L1517.32 1219.73 L1517.9 1219.73 L1518.49 1219.73 L1519.07 1219.73 L1519.66 1219.73 L1520.25 1219.73 L1520.83 1219.73 L1521.42 1219.73 L1522.01 1219.73 L1522.59 1219.73 L1523.18 1219.73 L1523.77 1219.73 L1524.35 1219.73 L1524.94 1219.73 L1525.52 1219.73 L1526.11 1219.73 L1526.7 1219.73 L1527.28 1219.73 L1527.87 1219.73 L1528.46 1219.73 L1529.04 1219.73 L1529.63 1219.73 L1530.22 1219.73 L1530.8 1219.73 L1531.39 1219.73 L1531.98 1219.73 L1532.56 1219.73 L1533.15 1219.73 L1533.73 1219.73 L1534.32 1219.73 L1534.91 1219.73 L1535.49 1219.73 L1536.08 1219.73 L1536.67 1219.73 L1537.25 1219.73 L1537.84 1219.73 L1538.43 1219.73 L1539.01 1219.73 L1539.6 1219.73 L1540.19 1219.73 L1540.77 1219.73 L1541.36 1219.73 L1541.94 1219.73 L1542.53 1219.73 L1543.12 1219.73 L1543.7 1219.73 L1544.29 1219.73 L1544.88 1219.73 L1545.46 1219.73 L1546.05 1219.73 L1546.64 1219.73 L1547.22 1219.73 L1547.81 1219.73 L1548.4 1219.73 L1548.98 1219.73 L1549.57 1219.73 L1550.15 1219.73 L1550.74 1219.73 L1551.33 1219.73 L1551.91 1219.73 L1552.5 1219.73 L1553.09 1219.73 L1553.67 1219.73 L1554.26 1219.73 L1554.85 1219.73 L1555.43 1219.73 L1556.02 1219.73 L1556.6 1219.73 L1557.19 1219.73 L1557.78 1219.73 L1558.36 1219.73 L1558.95 1219.73 L1559.54 1219.73 L1560.12 1219.73 L1560.71 1219.73 L1561.3 1219.73 L1561.88 1219.73 L1562.47 1219.73 L1563.06 1219.73 L1563.64 1219.73 L1564.23 1219.73 L1564.81 1219.73 L1565.4 1219.73 L1565.99 1219.73 L1566.57 1219.73 L1567.16 1219.73 L1567.75 1219.73 L1568.33 1219.73 L1568.92 1219.73 L1569.51 1219.73 L1570.09 1219.73 L1570.68 1219.73 L1571.27 1219.73 L1571.85 1219.73 L1572.44 1219.73 L1573.02 1219.73 L1573.61 1219.73 L1574.2 1219.73 L1574.78 1219.73 L1575.37 1219.73 L1575.96 1219.73 L1576.54 1219.73 L1577.13 1219.73 L1577.72 1219.73 L1578.3 1219.73 L1578.89 1219.73 L1579.47 1219.73 L1580.06 1219.73 L1580.65 1219.73 L1581.23 1219.73 L1581.82 1219.73 L1582.41 1219.73 L1582.99 1219.73 L1583.58 1219.73 L1584.17 1219.73 L1584.75 1219.73 L1585.34 1219.73 L1585.93 1219.73 L1586.51 1219.73 L1587.1 1219.73 L1587.68 1219.73 L1588.27 1219.73 L1588.86 1219.73 L1589.44 1219.73 L1590.03 1219.73 L1590.62 1219.73 L1591.2 1219.73 L1591.79 1219.73 L1592.38 1219.73 L1592.96 1219.73 L1593.55 1219.73 L1594.14 1219.73 L1594.72 1219.73 L1595.31 1219.73 L1595.89 1219.73 L1596.48 1219.73 L1597.07 1219.73 L1597.65 1219.73 L1598.24 1219.73 L1598.83 1219.73 L1599.41 1219.73 L1600 1219.73 L1600.59 1219.73 L1601.17 1219.73 L1601.76 1219.73 L1602.34 1219.73 L1602.93 1219.73 L1603.52 1219.73 L1604.1 1219.73 L1604.69 1219.73 L1605.28 1219.73 L1605.86 1219.73 L1606.45 1219.73 L1607.04 1219.73 L1607.62 1219.73 L1608.21 1219.73 L1608.8 1219.73 L1609.38 1219.73 L1609.97 1219.73 L1610.55 1219.73 L1611.14 1219.73 L1611.73 1219.73 L1612.31 1219.73 L1612.9 1219.73 L1613.49 1219.73 L1614.07 1219.73 L1614.66 1219.73 L1615.25 1219.73 L1615.83 1219.73 L1616.42 1219.73 L1617.01 1219.73 L1617.59 1219.73 L1618.18 1219.73 L1618.76 1219.73 L1619.35 1219.73 L1619.94 1219.73 L1620.52 1219.73 L1621.11 1219.73 L1621.7 1219.73 L1622.28 1219.73 L1622.87 1219.73 L1623.46 1219.73 L1624.04 1219.73 L1624.63 1219.73 L1625.22 1219.73 L1625.8 1219.73 L1626.39 1219.73 L1626.97 1219.73 L1627.56 1219.73 L1628.15 1219.73 L1628.73 1219.73 L1629.32 1219.73 L1629.91 1219.73 L1630.49 1219.73 L1631.08 1219.73 L1631.67 1219.73 L1632.25 1219.73 L1632.84 1219.73 L1633.42 1219.73 L1634.01 1219.73 L1634.6 1219.73 L1635.18 1219.73 L1635.77 1219.73 L1636.36 1219.73 L1636.94 1219.73 L1637.53 1219.73 L1638.12 1219.73 L1638.7 1219.73 L1639.29 1219.73 L1639.88 1219.73 L1640.46 1219.73 L1641.05 1219.73 L1641.63 1219.73 L1642.22 1219.73 L1642.81 1219.73 L1643.39 1219.73 L1643.98 1219.73 L1644.57 1219.73 L1645.15 1219.73 L1645.74 1219.73 L1646.33 1219.73 L1646.91 1219.73 L1647.5 1219.73 L1648.09 1219.73 L1648.67 1219.73 L1649.26 1219.73 L1649.84 1219.73 L1650.43 1219.73 L1651.02 1219.73 L1651.6 1219.73 L1652.19 1219.73 L1652.78 1219.73 L1653.36 1219.73 L1653.95 1219.73 L1654.54 1219.73 L1655.12 1219.73 L1655.71 1219.73 L1656.29 1219.73 L1656.88 1219.73 L1657.47 1219.73 L1658.05 1219.73 L1658.64 1219.73 L1659.23 1219.73 L1659.81 1219.73 L1660.4 1219.73 L1660.99 1219.73 L1661.57 1219.73 L1662.16 1219.73 L1662.75 1219.73 L1663.33 1219.73 L1663.92 1219.73 L1664.5 1219.73 L1665.09 1219.73 L1665.68 1219.73 L1666.26 1219.73 L1666.85 1219.73 L1667.44 1219.73 L1668.02 1219.73 L1668.61 1219.73 L1669.2 1219.73 L1669.78 1219.73 L1670.37 1219.73 L1670.96 1219.73 L1671.54 1219.73 L1672.13 1219.73 L1672.71 1219.73 L1673.3 1219.73 L1673.89 1219.73 L1674.47 1219.73 L1675.06 1219.73 L1675.65 1219.73 L1676.23 1219.73 L1676.82 1219.73 L1677.41 1219.73 L1677.99 1219.73 L1678.58 1219.73 L1679.17 1219.73 L1679.75 1219.73 L1680.34 1219.73 L1680.92 1219.73 L1681.51 1219.73 L1682.1 1219.73 L1682.68 1219.73 L1683.27 1219.73 L1683.86 1219.73 L1684.44 1219.73 L1685.03 1219.73 L1685.62 1219.73 L1686.2 1219.73 L1686.79 1219.73 L1687.37 1219.73 L1687.96 1219.73 L1688.55 1219.73 L1689.13 1219.73 L1689.72 1219.73 L1690.31 1219.73 L1690.89 1219.73 L1691.48 1219.73 L1692.07 1219.73 L1692.65 1219.73 L1693.24 1219.73 L1693.83 1219.73 L1694.41 1219.73 L1695 1219.73 L1695.58 1219.73 L1696.17 1219.73 L1696.76 1219.73 L1697.34 1219.73 L1697.93 1219.73 L1698.52 1219.73 L1699.1 1219.73 L1699.69 1219.73 L1700.28 1219.73 L1700.86 1219.73 L1701.45 1219.73 L1702.04 1219.73 L1702.62 1219.73 L1703.21 1219.73 L1703.79 1219.73 L1704.38 1219.73 L1704.97 1219.73 L1705.55 1219.73 L1706.14 1219.73 L1706.73 1219.73 L1707.31 1219.73 L1707.9 1219.73 L1708.49 1219.73 L1709.07 1219.73 L1709.66 1219.73 L1710.24 1219.73 L1710.83 1219.73 L1711.42 1219.73 L1712 1219.73 L1712.59 1219.73 L1713.18 1219.73 L1713.76 1219.73 L1714.35 1219.73 L1714.94 1219.73 L1715.52 1219.73 L1716.11 1219.73 L1716.7 1219.73 L1717.28 1219.73 L1717.87 1219.73 L1718.45 1219.73 L1719.04 1219.73 L1719.63 1219.73 L1720.21 1219.73 L1720.8 1219.73 L1721.39 1219.73 L1721.97 1219.73 L1722.56 1219.73 L1723.15 1219.73 L1723.73 1219.73 L1724.32 1219.73 L1724.91 1219.73 L1725.49 1219.73 L1726.08 1219.73 L1726.66 1219.73 L1727.25 1219.73 L1727.84 1219.73 L1728.42 1219.73 L1729.01 1219.73 L1729.6 1219.73 L1730.18 1219.73 L1730.77 1219.73 L1731.36 1219.73 L1731.94 1219.73 L1732.53 1219.73 L1733.11 1219.73 L1733.7 1219.73 L1734.29 1219.73 L1734.87 1219.73 L1735.46 1219.73 L1736.05 1219.73 L1736.63 1219.73 L1737.22 1219.73 L1737.81 1219.73 L1738.39 1219.73 L1738.98 1219.73 L1739.57 1219.73 L1740.15 1219.73 L1740.74 1219.73 L1741.32 1219.73 L1741.91 1219.73 L1742.5 1219.73 L1743.08 1219.73 L1743.67 1219.73 L1744.26 1219.73 L1744.84 1219.73 L1745.43 1219.73 L1746.02 1219.73 L1746.6 1219.73 L1747.19 1219.73 L1747.78 1219.73 L1748.36 1219.73 L1748.95 1219.73 L1749.53 1219.73 L1750.12 1219.73 L1750.71 1219.73 L1751.29 1219.73 L1751.88 1219.73 L1752.47 1219.73 L1753.05 1219.73 L1753.64 1219.73 L1754.23 1219.73 L1754.81 1219.73 L1755.4 1219.73 L1755.99 1219.73 L1756.57 1219.73 L1757.16 1219.73 L1757.74 1219.73 L1758.33 1219.73 L1758.92 1219.73 L1759.5 1219.73 L1760.09 1219.73 L1760.68 1219.73 L1761.26 1219.73 L1761.85 1219.73 L1762.44 1219.73 L1763.02 1219.73 L1763.61 1219.73 L1764.19 1219.73 L1764.78 1219.73 L1765.37 1219.73 L1765.95 1219.73 L1766.54 1219.73 L1767.13 1219.73 L1767.71 1219.73 L1768.3 1219.73 L1768.89 1219.73 L1769.47 1219.73 L1770.06 1219.73 L1770.65 1219.73 L1771.23 1219.73 L1771.82 1219.73 L1772.4 1219.73 L1772.99 1219.73 L1773.58 1219.73 L1774.16 1219.73 L1774.75 1219.73 L1775.34 1219.73 L1775.92 1219.73 L1776.51 1219.73 L1777.1 1219.73 L1777.68 1219.73 L1778.27 1219.73 L1778.86 1219.73 L1779.44 1219.73 L1780.03 1219.73 L1780.61 1219.73 L1781.2 1219.73 L1781.79 1219.73 L1782.37 1219.73 L1782.96 1219.73 L1783.55 1219.73 L1784.13 1219.73 L1784.72 1219.73 L1785.31 1219.73 L1785.89 1219.73 L1786.48 1219.73 L1787.06 1219.73 L1787.65 1219.73 L1788.24 1219.73 L1788.82 1219.73 L1789.41 1219.73 L1790 1219.73 L1790.58 1219.73 L1791.17 1219.73 L1791.76 1219.73 L1792.34 1219.73 L1792.93 1219.73 L1793.52 1219.73 L1794.1 1219.73 L1794.69 1219.73 L1795.27 1219.73 L1795.86 1219.73 L1796.45 1219.73 L1797.03 1219.73 L1797.62 1219.73 L1798.21 1219.73 L1798.79 1219.73 L1799.38 1219.73 L1799.97 1219.73 L1800.55 1219.73 L1801.14 1219.73 L1801.73 1219.73 L1802.31 1219.73 L1802.9 1219.73 L1803.48 1219.73 L1804.07 1219.73 L1804.66 1219.73 L1805.24 1219.73 L1805.83 1219.73 L1806.42 1219.73 L1807 1219.73 L1807.59 1219.73 L1808.18 1219.73 L1808.76 1219.73 L1809.35 1219.73 L1809.94 1219.73 L1810.52 1219.73 L1811.11 1219.73 L1811.69 1219.73 L1812.28 1219.73 L1812.87 1219.73 L1813.45 1219.73 L1814.04 1219.73 L1814.63 1219.73 L1815.21 1219.73 L1815.8 1219.73 L1816.39 1219.73 L1816.97 1219.73 L1817.56 1219.73 L1818.14 1219.73 L1818.73 1219.73 L1819.32 1219.73 L1819.9 1219.73 L1820.49 1219.73 L1821.08 1219.73 L1821.66 1219.73 L1822.25 1219.73 L1822.84 1219.73 L1823.42 1219.73 L1824.01 1219.73 L1824.6 1219.73 L1825.18 1219.73 L1825.77 1219.73 L1826.35 1219.73 L1826.94 1219.73 L1827.53 1219.73 L1828.11 1219.73 L1828.7 1219.73 L1829.29 1219.73 L1829.87 1219.73 L1830.46 1219.73 L1831.05 1219.73 L1831.63 1219.73 L1832.22 1219.73 L1832.81 1219.73 L1833.39 1219.73 L1833.98 1219.73 L1834.56 1219.73 L1835.15 1219.73 L1835.74 1219.73 L1836.32 1219.73 L1836.91 1219.73 L1837.5 1219.73 L1838.08 1219.73 L1838.67 1219.73 L1839.26 1219.73 L1839.84 1219.73 L1840.43 1219.73 L1841.01 1219.73 L1841.6 1219.73 L1842.19 1219.73 L1842.77 1219.73 L1843.36 1219.73 L1843.95 1219.73 L1844.53 1219.73 L1845.12 1219.73 L1845.71 1219.73 L1846.29 1219.73 L1846.88 1219.73 L1847.47 1219.73 L1848.05 1219.73 L1848.64 1219.73 L1849.22 1219.73 L1849.81 1219.73 L1850.4 1219.73 L1850.98 1219.73 L1851.57 1219.73 L1852.16 1219.73 L1852.74 1219.73 L1853.33 1219.73 L1853.92 1219.73 L1854.5 1219.73 L1855.09 1219.73 L1855.68 1219.73 L1856.26 1219.73 L1856.85 1219.73 L1857.43 1219.73 L1858.02 1219.73 L1858.61 1219.73 L1859.19 1219.73 L1859.78 1219.73 L1860.37 1219.73 L1860.95 1219.73 L1861.54 1219.73 L1862.13 1219.73 L1862.71 1219.73 L1863.3 1219.73 L1863.88 1219.73 L1864.47 1219.73 L1865.06 1219.73 L1865.64 1219.73 L1866.23 1219.73 L1866.82 1219.73 L1867.4 1219.73 L1867.99 1219.73 L1868.58 1219.73 L1869.16 1219.73 L1869.75 1219.73 L1870.34 1219.73 L1870.92 1219.73 L1871.51 1219.73 L1872.09 1219.73 L1872.68 1219.73 L1873.27 1219.73 L1873.85 1219.73 L1874.44 1219.73 L1875.03 1219.73 L1875.61 1219.73 L1876.2 1219.73 L1876.79 1219.73 L1877.37 1219.73 L1877.96 1219.73 L1878.55 1219.73 L1879.13 1219.73 L1879.72 1219.73 L1880.3 1219.73 L1880.89 1219.73 L1881.48 1219.73 L1882.06 1219.73 L1882.65 1219.73 L1883.24 1219.73 L1883.82 1219.73 L1884.41 1219.73 L1885 1219.73 L1885.58 1219.73 L1886.17 1219.73 L1886.76 1219.73 L1887.34 1219.73 L1887.93 1219.73 L1888.51 1219.73 L1889.1 1219.73 L1889.69 1219.73 L1890.27 1219.73 L1890.86 1219.73 L1891.45 1219.73 L1892.03 1219.73 L1892.62 1219.73 L1893.21 1219.73 L1893.79 1219.73 L1894.38 1219.73 L1894.96 1219.73 L1895.55 1219.73 L1896.14 1219.73 L1896.72 1219.73 L1897.31 1219.73 L1897.9 1219.73 L1898.48 1219.73 L1899.07 1219.73 L1899.66 1219.73 L1900.24 1219.73 L1900.83 1219.73 L1901.42 1219.73 L1902 1219.73 L1902.59 1219.73 L1903.17 1219.73 L1903.76 1219.73 L1904.35 1219.73 L1904.93 1219.73 L1905.52 1219.73 L1906.11 1219.73 L1906.69 1219.73 L1907.28 1219.73 L1907.87 1219.73 L1908.45 1219.73 L1909.04 1219.73 L1909.63 1219.73 L1910.21 1219.73 L1910.8 1219.73 L1911.38 1219.73 L1911.97 1219.73 L1912.56 1219.73 L1913.14 1219.73 L1913.73 1219.73 L1914.32 1219.73 L1914.9 1219.73 L1915.49 1219.73 L1916.08 1219.73 L1916.66 1219.73 L1917.25 1219.73 L1917.83 1219.73 L1918.42 1219.73 L1919.01 1219.73 L1919.59 1219.73 L1920.18 1219.73 L1920.77 1219.73 L1921.35 1219.73 L1921.94 1219.73 L1922.53 1219.73 L1923.11 1219.73 L1923.7 1219.73 L1924.29 1219.73 L1924.87 1219.73 L1925.46 1219.73 L1926.04 1219.73 L1926.63 1219.73 L1927.22 1219.73 L1927.8 1219.73 L1928.39 1219.73 L1928.98 1219.73 L1929.56 1219.73 L1930.15 1219.73 L1930.74 1219.73 L1931.32 1219.73 L1931.91 1219.73 L1932.5 1219.73 L1933.08 1219.73 L1933.67 1219.73 L1934.25 1219.73 L1934.84 1219.73 L1935.43 1219.73 L1936.01 1219.73 L1936.6 1219.73 L1937.19 1219.73 L1937.77 1219.73 L1938.36 1219.73 L1938.95 1219.73 L1939.53 1219.73 L1940.12 1219.73 L1940.71 1219.73 L1941.29 1219.73 L1941.88 1219.73 L1942.46 1219.73 L1943.05 1219.73 L1943.64 1219.73 L1944.22 1219.73 L1944.81 1219.73 L1945.4 1219.73 L1945.98 1219.73 L1946.57 1219.73 L1947.16 1219.73 L1947.74 1219.73 L1948.33 1219.73 L1948.91 1219.73 L1949.5 1219.73 L1950.09 1219.73 L1950.67 1219.73 L1951.26 1219.73 L1951.85 1219.73 L1952.43 1219.73 L1953.02 1219.73 L1953.61 1219.73 L1954.19 1219.73 L1954.78 1219.73 L1955.37 1219.73 L1955.95 1219.73 L1956.54 1219.73 L1957.12 1219.73 L1957.71 1219.73 L1958.3 1219.73 L1958.88 1219.73 L1959.47 1219.73 L1960.06 1219.73 L1960.64 1219.73 L1961.23 1219.73 L1961.82 1219.73 L1962.4 1219.73 L1962.99 1219.73 L1963.58 1219.73 L1964.16 1219.73 L1964.75 1219.73 L1965.33 1219.73 L1965.92 1219.73 L1966.51 1219.73 L1967.09 1219.73 L1967.68 1219.73 L1968.27 1219.73 L1968.85 1219.73 L1969.44 1219.73 L1970.03 1219.73 L1970.61 1219.73 L1971.2 1219.73 L1971.78 1219.73 L1972.37 1219.73 L1972.96 1219.73 L1973.54 1219.73 L1974.13 1219.73 L1974.72 1219.73 L1975.3 1219.73 L1975.89 1219.73 L1976.48 1219.73 L1977.06 1219.73 L1977.65 1219.73 L1978.24 1219.73 L1978.82 1219.73 L1979.41 1219.73 L1979.99 1219.73 L1980.58 1219.73 L1981.17 1219.73 L1981.75 1219.73 L1982.34 1219.73 L1982.93 1219.73 L1983.51 1219.73 L1984.1 1219.73 L1984.69 1219.73 L1985.27 1219.73 L1985.86 1219.73 L1986.45 1219.73 L1987.03 1219.73 L1987.62 1219.73 L1988.2 1219.73 L1988.79 1219.73 L1989.38 1219.73 L1989.96 1219.73 L1990.55 1219.73 L1991.14 1219.73 L1991.72 1219.73 L1992.31 1219.73 L1992.9 1219.73 L1993.48 1219.73 L1994.07 1219.73 L1994.65 1219.73 L1995.24 1219.73 L1995.83 1219.73 L1996.41 1219.73 L1997 1219.73 L1997.59 1219.73 L1998.17 1219.73 L1998.76 1219.73 L1999.35 1219.73 L1999.93 1219.73 L2000.52 1219.73 L2001.11 1219.73 L2001.69 1219.73 L2002.28 1219.73 L2002.86 1219.73 L2003.45 1219.73 L2004.04 1219.73 L2004.62 1219.73 L2005.21 1219.73 L2005.8 1219.73 L2006.38 1219.73 L2006.97 1219.73 L2007.56 1219.73 L2008.14 1219.73 L2008.73 1219.73 L2009.32 1219.73 L2009.9 1219.73 L2010.49 1219.73 L2011.07 1219.73 L2011.66 1219.73 L2012.25 1219.73 L2012.83 1219.73 L2013.42 1219.73 L2014.01 1219.73 L2014.59 1219.73 L2015.18 1219.73 L2015.77 1219.73 L2016.35 1219.73 L2016.94 1219.73 L2017.53 1219.73 L2018.11 1219.73 L2018.7 1219.73 L2019.28 1219.73 L2019.87 1219.73 L2020.46 1219.73 L2021.04 1219.73 L2021.63 1219.73 L2022.22 1219.73 L2022.8 1219.73 L2023.39 1219.73 L2023.98 1219.73 L2024.56 1219.73 L2025.15 1219.73 L2025.73 1219.73 L2026.32 1219.73 L2026.91 1219.73 L2027.49 1219.73 L2028.08 1219.73 L2028.67 1219.73 L2029.25 1219.73 L2029.84 1219.73 L2030.43 1219.73 L2031.01 1219.73 L2031.6 1219.73 L2032.19 1219.73 L2032.77 1219.73 L2033.36 1219.73 L2033.94 1219.73 L2034.53 1219.73 L2035.12 1219.73 L2035.7 1219.73 L2036.29 1219.73 L2036.88 1219.73 L2037.46 1219.73 L2038.05 1219.73 L2038.64 1219.73 L2039.22 1219.73 L2039.81 1219.73 L2040.4 1219.73 L2040.98 1219.73 L2041.57 1219.73 L2042.15 1219.73 L2042.74 1219.73 L2043.33 1219.73 L2043.91 1219.73 L2044.5 1219.73 L2045.09 1219.73 L2045.67 1219.73 L2046.26 1219.73 L2046.85 1219.73 L2047.43 1219.73 L2048.02 1219.73 L2048.6 1219.73 L2049.19 1219.73 L2049.78 1219.73 L2050.36 1219.73 L2050.95 1219.73 L2051.54 1219.73 L2052.12 1219.73 L2052.71 1219.73 L2053.3 1219.73 L2053.88 1219.73 L2054.47 1219.73 L2055.06 1219.73 L2055.64 1219.73 L2056.23 1219.73 L2056.81 1219.73 L2057.4 1219.73 L2057.99 1219.73 L2058.57 1219.73 L2059.16 1219.73 L2059.75 1219.73 L2060.33 1219.73 L2060.92 1219.73 L2061.51 1219.73 L2062.09 1219.73 L2062.68 1219.73 L2063.27 1219.73 L2063.85 1219.73 L2064.44 1219.73 L2065.02 1219.73 L2065.61 1219.73 L2066.2 1219.73 L2066.78 1219.73 L2067.37 1219.73 L2067.96 1219.73 L2068.54 1219.73 L2069.13 1219.73 L2069.72 1219.73 L2070.3 1219.73 L2070.89 1219.73 L2071.48 1219.73 L2072.06 1219.73 L2072.65 1219.73 L2073.23 1219.73 L2073.82 1219.73 L2074.41 1219.73 L2074.99 1219.73 L2075.58 1219.73 L2076.17 1219.73 L2076.75 1219.73 L2077.34 1219.73 L2077.93 1219.73 L2078.51 1219.73 L2079.1 1219.73 L2079.68 1219.73 L2080.27 1219.73 L2080.86 1219.73 L2081.44 1219.73 L2082.03 1219.73 L2082.62 1219.73 L2083.2 1219.73 L2083.79 1219.73 L2084.38 1219.73 L2084.96 1219.73 L2085.55 1219.73 L2086.14 1219.73 L2086.72 1219.73 L2087.31 1219.73 L2087.89 1219.73 L2088.48 1219.73 L2089.07 1219.73 L2089.65 1219.73 L2090.24 1219.73 L2090.83 1219.73 L2091.41 1219.73 L2092 1219.73 L2092.59 1219.73 L2093.17 1219.73 L2093.76 1219.73 L2094.35 1219.73 L2094.93 1219.73 L2095.52 1219.73 L2096.1 1219.73 L2096.69 1219.73 L2097.28 1219.73 L2097.86 1219.73 L2098.45 1219.73 L2099.04 1219.73 L2099.62 1219.73 L2100.21 1219.73 L2100.8 1219.73 L2101.38 1219.73 L2101.97 1219.73 L2102.55 1219.73 L2103.14 1219.73 L2103.73 1219.73 L2104.31 1219.73 L2104.9 1219.73 L2105.49 1219.73 L2106.07 1219.73 L2106.66 1219.73 L2107.25 1219.73 L2107.83 1219.73 L2108.42 1219.73 L2109.01 1219.73 L2109.59 1219.73 L2110.18 1219.73 L2110.76 1219.73 L2111.35 1219.73 L2111.94 1219.73 L2112.52 1219.73 L2113.11 1219.73 L2113.7 1219.73 L2114.28 1219.73 L2114.87 1219.73 L2115.46 1219.73 L2116.04 1219.73 L2116.63 1219.73 L2117.22 1219.73 L2117.8 1219.73 L2118.39 1219.73 L2118.97 1219.73 L2119.56 1219.73 L2120.15 1219.73 L2120.73 1219.73 L2121.32 1219.73 L2121.91 1219.73 L2122.49 1219.73 L2123.08 1219.73 L2123.67 1219.73 L2124.25 1219.73 L2124.84 1219.73 L2125.42 1219.73 L2126.01 1219.73 L2126.6 1219.73 L2127.18 1219.73 L2127.77 1219.73 L2128.36 1219.73 L2128.94 1219.73 L2129.53 1219.73 L2130.12 1219.73 L2130.7 1219.73 L2131.29 1219.73 L2131.88 1219.73 L2132.46 1219.73 L2133.05 1219.73 L2133.63 1219.73 L2134.22 1219.73 L2134.81 1219.73 L2135.39 1219.73 L2135.98 1219.73 L2136.57 1219.73 L2137.15 1219.73 L2137.74 1219.73 L2138.33 1219.73 L2138.91 1219.73 L2139.5 1219.73 L2140.09 1219.73 L2140.67 1219.73 L2141.26 1219.73 L2141.84 1219.73 L2142.43 1219.73 L2143.02 1219.73 L2143.6 1219.73 L2144.19 1219.73 L2144.78 1219.73 L2145.36 1219.73 L2145.95 1219.73 L2146.54 1219.73 L2147.12 1219.73 L2147.71 1219.73 L2148.3 1219.73 L2148.88 1219.73 L2149.47 1219.73 L2150.05 1219.73 L2150.64 1219.73 L2151.23 1219.73 L2151.81 1219.73 L2152.4 1219.73 L2152.99 1219.73 L2153.57 1219.73 L2154.16 1219.73 L2154.75 1219.73 L2155.33 1219.73 L2155.92 1219.73 L2156.5 1219.73 L2157.09 1219.73 L2157.68 1219.73 L2158.26 1219.73 L2158.26 1219.57 L2157.68 1219.57 L2157.09 1219.57 L2156.5 1219.57 L2155.92 1219.57 L2155.33 1219.57 L2154.75 1219.57 L2154.16 1219.57 L2153.57 1219.57 L2152.99 1219.57 L2152.4 1219.57 L2151.81 1219.57 L2151.23 1219.57 L2150.64 1219.57 L2150.05 1219.57 L2149.47 1219.57 L2148.88 1219.57 L2148.3 1219.57 L2147.71 1219.57 L2147.12 1219.57 L2146.54 1219.57 L2145.95 1219.57 L2145.36 1219.57 L2144.78 1219.57 L2144.19 1219.57 L2143.6 1219.57 L2143.02 1219.57 L2142.43 1219.57 L2141.84 1219.57 L2141.26 1219.57 L2140.67 1219.57 L2140.09 1219.57 L2139.5 1219.57 L2138.91 1219.57 L2138.33 1219.57 L2137.74 1219.57 L2137.15 1219.57 L2136.57 1219.57 L2135.98 1219.57 L2135.39 1219.57 L2134.81 1219.57 L2134.22 1219.57 L2133.63 1219.57 L2133.05 1219.57 L2132.46 1219.57 L2131.88 1219.57 L2131.29 1219.57 L2130.7 1219.57 L2130.12 1219.57 L2129.53 1219.57 L2128.94 1219.57 L2128.36 1219.57 L2127.77 1219.57 L2127.18 1219.57 L2126.6 1219.57 L2126.01 1219.57 L2125.42 1219.57 L2124.84 1219.57 L2124.25 1219.57 L2123.67 1219.57 L2123.08 1219.57 L2122.49 1219.57 L2121.91 1219.57 L2121.32 1219.57 L2120.73 1219.57 L2120.15 1219.57 L2119.56 1219.57 L2118.97 1219.57 L2118.39 1219.57 L2117.8 1219.57 L2117.22 1219.57 L2116.63 1219.57 L2116.04 1219.57 L2115.46 1219.57 L2114.87 1219.57 L2114.28 1219.57 L2113.7 1219.57 L2113.11 1219.57 L2112.52 1219.57 L2111.94 1219.57 L2111.35 1219.57 L2110.76 1219.57 L2110.18 1219.57 L2109.59 1219.57 L2109.01 1219.57 L2108.42 1219.57 L2107.83 1219.57 L2107.25 1219.57 L2106.66 1219.57 L2106.07 1219.57 L2105.49 1219.57 L2104.9 1219.57 L2104.31 1219.57 L2103.73 1219.57 L2103.14 1219.57 L2102.55 1219.57 L2101.97 1219.57 L2101.38 1219.57 L2100.8 1219.57 L2100.21 1219.57 L2099.62 1219.57 L2099.04 1219.57 L2098.45 1219.57 L2097.86 1219.57 L2097.28 1219.57 L2096.69 1219.57 L2096.1 1219.57 L2095.52 1219.57 L2094.93 1219.57 L2094.35 1219.57 L2093.76 1219.57 L2093.17 1219.57 L2092.59 1219.57 L2092 1219.57 L2091.41 1219.57 L2090.83 1219.57 L2090.24 1219.57 L2089.65 1219.57 L2089.07 1219.57 L2088.48 1219.57 L2087.89 1219.57 L2087.31 1219.57 L2086.72 1219.57 L2086.14 1219.57 L2085.55 1219.57 L2084.96 1219.57 L2084.38 1219.57 L2083.79 1219.57 L2083.2 1219.57 L2082.62 1219.57 L2082.03 1219.57 L2081.44 1219.57 L2080.86 1219.57 L2080.27 1219.57 L2079.68 1219.57 L2079.1 1219.57 L2078.51 1219.57 L2077.93 1219.57 L2077.34 1219.57 L2076.75 1219.57 L2076.17 1219.57 L2075.58 1219.57 L2074.99 1219.57 L2074.41 1219.57 L2073.82 1219.57 L2073.23 1219.57 L2072.65 1219.57 L2072.06 1219.57 L2071.48 1219.57 L2070.89 1219.57 L2070.3 1219.57 L2069.72 1219.57 L2069.13 1219.57 L2068.54 1219.57 L2067.96 1219.57 L2067.37 1219.57 L2066.78 1219.57 L2066.2 1219.57 L2065.61 1219.57 L2065.02 1219.57 L2064.44 1219.57 L2063.85 1219.57 L2063.27 1219.57 L2062.68 1219.57 L2062.09 1219.57 L2061.51 1219.57 L2060.92 1219.57 L2060.33 1219.57 L2059.75 1219.57 L2059.16 1219.57 L2058.57 1219.57 L2057.99 1219.57 L2057.4 1219.57 L2056.81 1219.57 L2056.23 1219.57 L2055.64 1219.57 L2055.06 1219.57 L2054.47 1219.57 L2053.88 1219.57 L2053.3 1219.57 L2052.71 1219.57 L2052.12 1219.57 L2051.54 1219.57 L2050.95 1219.57 L2050.36 1219.57 L2049.78 1219.57 L2049.19 1219.57 L2048.6 1219.57 L2048.02 1219.57 L2047.43 1219.57 L2046.85 1219.57 L2046.26 1219.57 L2045.67 1219.57 L2045.09 1219.57 L2044.5 1219.57 L2043.91 1219.57 L2043.33 1219.57 L2042.74 1219.57 L2042.15 1219.57 L2041.57 1219.57 L2040.98 1219.57 L2040.4 1219.57 L2039.81 1219.57 L2039.22 1219.57 L2038.64 1219.57 L2038.05 1219.57 L2037.46 1219.57 L2036.88 1219.57 L2036.29 1219.57 L2035.7 1219.57 L2035.12 1219.57 L2034.53 1219.57 L2033.94 1219.57 L2033.36 1219.57 L2032.77 1219.57 L2032.19 1219.57 L2031.6 1219.57 L2031.01 1219.57 L2030.43 1219.57 L2029.84 1219.57 L2029.25 1219.57 L2028.67 1219.57 L2028.08 1219.57 L2027.49 1219.57 L2026.91 1219.57 L2026.32 1219.57 L2025.73 1219.57 L2025.15 1219.57 L2024.56 1219.57 L2023.98 1219.57 L2023.39 1219.57 L2022.8 1219.57 L2022.22 1219.57 L2021.63 1219.57 L2021.04 1219.57 L2020.46 1219.57 L2019.87 1219.57 L2019.28 1219.57 L2018.7 1219.57 L2018.11 1219.57 L2017.53 1219.57 L2016.94 1219.57 L2016.35 1219.57 L2015.77 1219.57 L2015.18 1219.57 L2014.59 1219.57 L2014.01 1219.57 L2013.42 1219.57 L2012.83 1219.57 L2012.25 1219.57 L2011.66 1219.57 L2011.07 1219.57 L2010.49 1219.57 L2009.9 1219.57 L2009.32 1219.57 L2008.73 1219.57 L2008.14 1219.57 L2007.56 1219.57 L2006.97 1219.57 L2006.38 1219.57 L2005.8 1219.57 L2005.21 1219.57 L2004.62 1219.57 L2004.04 1219.57 L2003.45 1219.57 L2002.86 1219.57 L2002.28 1219.57 L2001.69 1219.57 L2001.11 1219.57 L2000.52 1219.57 L1999.93 1219.57 L1999.35 1219.57 L1998.76 1219.57 L1998.17 1219.57 L1997.59 1219.57 L1997 1219.57 L1996.41 1219.57 L1995.83 1219.57 L1995.24 1219.57 L1994.65 1219.57 L1994.07 1219.57 L1993.48 1219.57 L1992.9 1219.57 L1992.31 1219.57 L1991.72 1219.57 L1991.14 1219.57 L1990.55 1219.57 L1989.96 1219.57 L1989.38 1219.57 L1988.79 1219.57 L1988.2 1219.57 L1987.62 1219.57 L1987.03 1219.57 L1986.45 1219.57 L1985.86 1219.57 L1985.27 1219.57 L1984.69 1219.57 L1984.1 1219.57 L1983.51 1219.57 L1982.93 1219.57 L1982.34 1219.57 L1981.75 1219.57 L1981.17 1219.57 L1980.58 1219.57 L1979.99 1219.57 L1979.41 1219.57 L1978.82 1219.57 L1978.24 1219.57 L1977.65 1219.57 L1977.06 1219.57 L1976.48 1219.57 L1975.89 1219.57 L1975.3 1219.57 L1974.72 1219.57 L1974.13 1219.57 L1973.54 1219.57 L1972.96 1219.57 L1972.37 1219.57 L1971.78 1219.57 L1971.2 1219.57 L1970.61 1219.57 L1970.03 1219.57 L1969.44 1219.57 L1968.85 1219.57 L1968.27 1219.57 L1967.68 1219.57 L1967.09 1219.57 L1966.51 1219.57 L1965.92 1219.57 L1965.33 1219.57 L1964.75 1219.57 L1964.16 1219.57 L1963.58 1219.57 L1962.99 1219.57 L1962.4 1219.57 L1961.82 1219.57 L1961.23 1219.57 L1960.64 1219.57 L1960.06 1219.57 L1959.47 1219.57 L1958.88 1219.57 L1958.3 1219.57 L1957.71 1219.57 L1957.12 1219.57 L1956.54 1219.57 L1955.95 1219.57 L1955.37 1219.57 L1954.78 1219.57 L1954.19 1219.57 L1953.61 1219.57 L1953.02 1219.57 L1952.43 1219.57 L1951.85 1219.57 L1951.26 1219.57 L1950.67 1219.57 L1950.09 1219.57 L1949.5 1219.57 L1948.91 1219.57 L1948.33 1219.57 L1947.74 1219.57 L1947.16 1219.57 L1946.57 1219.57 L1945.98 1219.57 L1945.4 1219.57 L1944.81 1219.57 L1944.22 1219.57 L1943.64 1219.57 L1943.05 1219.57 L1942.46 1219.57 L1941.88 1219.57 L1941.29 1219.57 L1940.71 1219.57 L1940.12 1219.57 L1939.53 1219.57 L1938.95 1219.57 L1938.36 1219.57 L1937.77 1219.57 L1937.19 1219.57 L1936.6 1219.57 L1936.01 1219.57 L1935.43 1219.57 L1934.84 1219.57 L1934.25 1219.57 L1933.67 1219.57 L1933.08 1219.57 L1932.5 1219.57 L1931.91 1219.57 L1931.32 1219.57 L1930.74 1219.57 L1930.15 1219.57 L1929.56 1219.57 L1928.98 1219.57 L1928.39 1219.57 L1927.8 1219.57 L1927.22 1219.57 L1926.63 1219.57 L1926.04 1219.57 L1925.46 1219.57 L1924.87 1219.57 L1924.29 1219.57 L1923.7 1219.57 L1923.11 1219.57 L1922.53 1219.57 L1921.94 1219.57 L1921.35 1219.57 L1920.77 1219.57 L1920.18 1219.57 L1919.59 1219.57 L1919.01 1219.57 L1918.42 1219.57 L1917.83 1219.57 L1917.25 1219.57 L1916.66 1219.57 L1916.08 1219.57 L1915.49 1219.57 L1914.9 1219.57 L1914.32 1219.57 L1913.73 1219.57 L1913.14 1219.57 L1912.56 1219.57 L1911.97 1219.57 L1911.38 1219.57 L1910.8 1219.57 L1910.21 1219.57 L1909.63 1219.57 L1909.04 1219.57 L1908.45 1219.57 L1907.87 1219.57 L1907.28 1219.57 L1906.69 1219.57 L1906.11 1219.57 L1905.52 1219.57 L1904.93 1219.57 L1904.35 1219.57 L1903.76 1219.57 L1903.17 1219.57 L1902.59 1219.57 L1902 1219.57 L1901.42 1219.57 L1900.83 1219.57 L1900.24 1219.57 L1899.66 1219.57 L1899.07 1219.57 L1898.48 1219.57 L1897.9 1219.57 L1897.31 1219.57 L1896.72 1219.57 L1896.14 1219.57 L1895.55 1219.57 L1894.96 1219.57 L1894.38 1219.57 L1893.79 1219.57 L1893.21 1219.57 L1892.62 1219.57 L1892.03 1219.57 L1891.45 1219.57 L1890.86 1219.57 L1890.27 1219.57 L1889.69 1219.57 L1889.1 1219.57 L1888.51 1219.57 L1887.93 1219.57 L1887.34 1219.57 L1886.76 1219.57 L1886.17 1219.57 L1885.58 1219.57 L1885 1219.57 L1884.41 1219.57 L1883.82 1219.57 L1883.24 1219.57 L1882.65 1219.57 L1882.06 1219.57 L1881.48 1219.57 L1880.89 1219.57 L1880.3 1219.57 L1879.72 1219.57 L1879.13 1219.57 L1878.55 1219.57 L1877.96 1219.57 L1877.37 1219.57 L1876.79 1219.57 L1876.2 1219.57 L1875.61 1219.57 L1875.03 1219.57 L1874.44 1219.57 L1873.85 1219.57 L1873.27 1219.57 L1872.68 1219.57 L1872.09 1219.57 L1871.51 1219.57 L1870.92 1219.57 L1870.34 1219.57 L1869.75 1219.57 L1869.16 1219.57 L1868.58 1219.57 L1867.99 1219.57 L1867.4 1219.57 L1866.82 1219.57 L1866.23 1219.57 L1865.64 1219.57 L1865.06 1219.57 L1864.47 1219.57 L1863.88 1219.57 L1863.3 1219.57 L1862.71 1219.57 L1862.13 1219.57 L1861.54 1219.57 L1860.95 1219.57 L1860.37 1219.57 L1859.78 1219.57 L1859.19 1219.57 L1858.61 1219.57 L1858.02 1219.57 L1857.43 1219.57 L1856.85 1219.57 L1856.26 1219.57 L1855.68 1219.57 L1855.09 1219.57 L1854.5 1219.57 L1853.92 1219.57 L1853.33 1219.57 L1852.74 1219.57 L1852.16 1219.57 L1851.57 1219.57 L1850.98 1219.57 L1850.4 1219.57 L1849.81 1219.57 L1849.22 1219.57 L1848.64 1219.57 L1848.05 1219.57 L1847.47 1219.57 L1846.88 1219.57 L1846.29 1219.57 L1845.71 1219.57 L1845.12 1219.57 L1844.53 1219.57 L1843.95 1219.57 L1843.36 1219.57 L1842.77 1219.57 L1842.19 1219.57 L1841.6 1219.57 L1841.01 1219.57 L1840.43 1219.57 L1839.84 1219.57 L1839.26 1219.57 L1838.67 1219.57 L1838.08 1219.57 L1837.5 1219.57 L1836.91 1219.57 L1836.32 1219.57 L1835.74 1219.57 L1835.15 1219.57 L1834.56 1219.57 L1833.98 1219.57 L1833.39 1219.57 L1832.81 1219.57 L1832.22 1219.57 L1831.63 1219.57 L1831.05 1219.57 L1830.46 1219.57 L1829.87 1219.57 L1829.29 1219.57 L1828.7 1219.57 L1828.11 1219.57 L1827.53 1219.57 L1826.94 1219.57 L1826.35 1219.57 L1825.77 1219.57 L1825.18 1219.57 L1824.6 1219.57 L1824.01 1219.57 L1823.42 1219.57 L1822.84 1219.57 L1822.25 1219.57 L1821.66 1219.57 L1821.08 1219.57 L1820.49 1219.57 L1819.9 1219.57 L1819.32 1219.57 L1818.73 1219.57 L1818.14 1219.57 L1817.56 1219.57 L1816.97 1219.57 L1816.39 1219.57 L1815.8 1219.57 L1815.21 1219.57 L1814.63 1219.57 L1814.04 1219.57 L1813.45 1219.57 L1812.87 1219.57 L1812.28 1219.57 L1811.69 1219.57 L1811.11 1219.57 L1810.52 1219.57 L1809.94 1219.57 L1809.35 1219.57 L1808.76 1219.57 L1808.18 1219.57 L1807.59 1219.57 L1807 1219.57 L1806.42 1219.57 L1805.83 1219.57 L1805.24 1219.57 L1804.66 1219.57 L1804.07 1219.57 L1803.48 1219.57 L1802.9 1219.57 L1802.31 1219.57 L1801.73 1219.57 L1801.14 1219.57 L1800.55 1219.57 L1799.97 1219.57 L1799.38 1219.57 L1798.79 1219.57 L1798.21 1219.57 L1797.62 1219.57 L1797.03 1219.57 L1796.45 1219.57 L1795.86 1219.57 L1795.27 1219.57 L1794.69 1219.57 L1794.1 1219.57 L1793.52 1219.57 L1792.93 1219.57 L1792.34 1219.57 L1791.76 1219.57 L1791.17 1219.57 L1790.58 1219.57 L1790 1219.57 L1789.41 1219.57 L1788.82 1219.57 L1788.24 1219.57 L1787.65 1219.57 L1787.06 1219.57 L1786.48 1219.57 L1785.89 1219.57 L1785.31 1219.57 L1784.72 1219.57 L1784.13 1219.57 L1783.55 1219.57 L1782.96 1219.57 L1782.37 1219.57 L1781.79 1219.57 L1781.2 1219.57 L1780.61 1219.57 L1780.03 1219.57 L1779.44 1219.57 L1778.86 1219.57 L1778.27 1219.57 L1777.68 1219.57 L1777.1 1219.57 L1776.51 1219.57 L1775.92 1219.57 L1775.34 1219.57 L1774.75 1219.57 L1774.16 1219.57 L1773.58 1219.57 L1772.99 1219.57 L1772.4 1219.57 L1771.82 1219.57 L1771.23 1219.57 L1770.65 1219.57 L1770.06 1219.57 L1769.47 1219.57 L1768.89 1219.57 L1768.3 1219.57 L1767.71 1219.57 L1767.13 1219.57 L1766.54 1219.57 L1765.95 1219.57 L1765.37 1219.57 L1764.78 1219.57 L1764.19 1219.57 L1763.61 1219.57 L1763.02 1219.57 L1762.44 1219.57 L1761.85 1219.57 L1761.26 1219.57 L1760.68 1219.57 L1760.09 1219.57 L1759.5 1219.57 L1758.92 1219.57 L1758.33 1219.57 L1757.74 1219.57 L1757.16 1219.57 L1756.57 1219.57 L1755.99 1219.57 L1755.4 1219.57 L1754.81 1219.57 L1754.23 1219.57 L1753.64 1219.57 L1753.05 1219.57 L1752.47 1219.57 L1751.88 1219.57 L1751.29 1219.57 L1750.71 1219.57 L1750.12 1219.57 L1749.53 1219.57 L1748.95 1219.57 L1748.36 1219.57 L1747.78 1219.57 L1747.19 1219.57 L1746.6 1219.57 L1746.02 1219.57 L1745.43 1219.57 L1744.84 1219.57 L1744.26 1219.57 L1743.67 1219.57 L1743.08 1219.57 L1742.5 1219.57 L1741.91 1219.57 L1741.32 1219.57 L1740.74 1219.57 L1740.15 1219.57 L1739.57 1219.57 L1738.98 1219.57 L1738.39 1219.57 L1737.81 1219.57 L1737.22 1219.57 L1736.63 1219.57 L1736.05 1219.57 L1735.46 1219.57 L1734.87 1219.57 L1734.29 1219.57 L1733.7 1219.57 L1733.11 1219.57 L1732.53 1219.57 L1731.94 1219.57 L1731.36 1219.57 L1730.77 1219.57 L1730.18 1219.57 L1729.6 1219.57 L1729.01 1219.57 L1728.42 1219.57 L1727.84 1219.57 L1727.25 1219.57 L1726.66 1219.57 L1726.08 1219.57 L1725.49 1219.57 L1724.91 1219.57 L1724.32 1219.57 L1723.73 1219.57 L1723.15 1219.57 L1722.56 1219.57 L1721.97 1219.57 L1721.39 1219.57 L1720.8 1219.57 L1720.21 1219.57 L1719.63 1219.57 L1719.04 1219.57 L1718.45 1219.57 L1717.87 1219.57 L1717.28 1219.57 L1716.7 1219.57 L1716.11 1219.57 L1715.52 1219.57 L1714.94 1219.57 L1714.35 1219.57 L1713.76 1219.57 L1713.18 1219.57 L1712.59 1219.57 L1712 1219.57 L1711.42 1219.57 L1710.83 1219.57 L1710.24 1219.57 L1709.66 1219.57 L1709.07 1219.57 L1708.49 1219.57 L1707.9 1219.57 L1707.31 1219.57 L1706.73 1219.57 L1706.14 1219.57 L1705.55 1219.57 L1704.97 1219.57 L1704.38 1219.57 L1703.79 1219.57 L1703.21 1219.57 L1702.62 1219.57 L1702.04 1219.57 L1701.45 1219.57 L1700.86 1219.57 L1700.28 1219.57 L1699.69 1219.57 L1699.1 1219.57 L1698.52 1219.57 L1697.93 1219.57 L1697.34 1219.57 L1696.76 1219.57 L1696.17 1219.57 L1695.58 1219.57 L1695 1219.57 L1694.41 1219.57 L1693.83 1219.57 L1693.24 1219.57 L1692.65 1219.57 L1692.07 1219.57 L1691.48 1219.57 L1690.89 1219.57 L1690.31 1219.57 L1689.72 1219.57 L1689.13 1219.57 L1688.55 1219.57 L1687.96 1219.57 L1687.37 1219.57 L1686.79 1219.57 L1686.2 1219.57 L1685.62 1219.57 L1685.03 1219.57 L1684.44 1219.57 L1683.86 1219.57 L1683.27 1219.57 L1682.68 1219.57 L1682.1 1219.57 L1681.51 1219.57 L1680.92 1219.57 L1680.34 1219.57 L1679.75 1219.57 L1679.17 1219.57 L1678.58 1219.57 L1677.99 1219.57 L1677.41 1219.57 L1676.82 1219.57 L1676.23 1219.57 L1675.65 1219.57 L1675.06 1219.57 L1674.47 1219.57 L1673.89 1219.57 L1673.3 1219.57 L1672.71 1219.57 L1672.13 1219.57 L1671.54 1219.57 L1670.96 1219.57 L1670.37 1219.57 L1669.78 1219.57 L1669.2 1219.57 L1668.61 1219.57 L1668.02 1219.57 L1667.44 1219.57 L1666.85 1219.57 L1666.26 1219.57 L1665.68 1219.57 L1665.09 1219.57 L1664.5 1219.57 L1663.92 1219.57 L1663.33 1219.57 L1662.75 1219.57 L1662.16 1219.57 L1661.57 1219.57 L1660.99 1219.57 L1660.4 1219.57 L1659.81 1219.57 L1659.23 1219.57 L1658.64 1219.57 L1658.05 1219.57 L1657.47 1219.57 L1656.88 1219.57 L1656.29 1219.57 L1655.71 1219.57 L1655.12 1219.57 L1654.54 1219.57 L1653.95 1219.57 L1653.36 1219.57 L1652.78 1219.57 L1652.19 1219.57 L1651.6 1219.57 L1651.02 1219.57 L1650.43 1219.57 L1649.84 1219.57 L1649.26 1219.57 L1648.67 1219.57 L1648.09 1219.57 L1647.5 1219.57 L1646.91 1219.57 L1646.33 1219.57 L1645.74 1219.57 L1645.15 1219.57 L1644.57 1219.57 L1643.98 1219.57 L1643.39 1219.57 L1642.81 1219.57 L1642.22 1219.57 L1641.63 1219.57 L1641.05 1219.57 L1640.46 1219.57 L1639.88 1219.57 L1639.29 1219.57 L1638.7 1219.57 L1638.12 1219.57 L1637.53 1219.57 L1636.94 1219.57 L1636.36 1219.57 L1635.77 1219.57 L1635.18 1219.57 L1634.6 1219.57 L1634.01 1219.57 L1633.42 1219.57 L1632.84 1219.57 L1632.25 1219.57 L1631.67 1219.57 L1631.08 1219.57 L1630.49 1219.57 L1629.91 1219.57 L1629.32 1219.57 L1628.73 1219.57 L1628.15 1219.57 L1627.56 1219.57 L1626.97 1219.57 L1626.39 1219.57 L1625.8 1219.57 L1625.22 1219.57 L1624.63 1219.57 L1624.04 1219.57 L1623.46 1219.57 L1622.87 1219.57 L1622.28 1219.57 L1621.7 1219.57 L1621.11 1219.57 L1620.52 1219.57 L1619.94 1219.57 L1619.35 1219.57 L1618.76 1219.57 L1618.18 1219.57 L1617.59 1219.57 L1617.01 1219.57 L1616.42 1219.57 L1615.83 1219.57 L1615.25 1219.57 L1614.66 1219.57 L1614.07 1219.57 L1613.49 1219.57 L1612.9 1219.57 L1612.31 1219.57 L1611.73 1219.57 L1611.14 1219.57 L1610.55 1219.57 L1609.97 1219.57 L1609.38 1219.57 L1608.8 1219.57 L1608.21 1219.57 L1607.62 1219.57 L1607.04 1219.57 L1606.45 1219.57 L1605.86 1219.57 L1605.28 1219.57 L1604.69 1219.57 L1604.1 1219.57 L1603.52 1219.57 L1602.93 1219.57 L1602.34 1219.57 L1601.76 1219.57 L1601.17 1219.57 L1600.59 1219.57 L1600 1219.57 L1599.41 1219.57 L1598.83 1219.57 L1598.24 1219.57 L1597.65 1219.57 L1597.07 1219.57 L1596.48 1219.57 L1595.89 1219.57 L1595.31 1219.57 L1594.72 1219.57 L1594.14 1219.57 L1593.55 1219.57 L1592.96 1219.57 L1592.38 1219.57 L1591.79 1219.57 L1591.2 1219.57 L1590.62 1219.57 L1590.03 1219.57 L1589.44 1219.57 L1588.86 1219.57 L1588.27 1219.57 L1587.68 1219.57 L1587.1 1219.57 L1586.51 1219.57 L1585.93 1219.57 L1585.34 1219.57 L1584.75 1219.57 L1584.17 1219.57 L1583.58 1219.57 L1582.99 1219.57 L1582.41 1219.57 L1581.82 1219.57 L1581.23 1219.57 L1580.65 1219.57 L1580.06 1219.57 L1579.47 1219.57 L1578.89 1219.57 L1578.3 1219.57 L1577.72 1219.57 L1577.13 1219.57 L1576.54 1219.57 L1575.96 1219.57 L1575.37 1219.57 L1574.78 1219.57 L1574.2 1219.57 L1573.61 1219.57 L1573.02 1219.57 L1572.44 1219.57 L1571.85 1219.57 L1571.27 1219.57 L1570.68 1219.57 L1570.09 1219.57 L1569.51 1219.57 L1568.92 1219.57 L1568.33 1219.57 L1567.75 1219.57 L1567.16 1219.57 L1566.57 1219.57 L1565.99 1219.57 L1565.4 1219.57 L1564.81 1219.57 L1564.23 1219.57 L1563.64 1219.57 L1563.06 1219.57 L1562.47 1219.57 L1561.88 1219.57 L1561.3 1219.57 L1560.71 1219.57 L1560.12 1219.57 L1559.54 1219.57 L1558.95 1219.57 L1558.36 1219.57 L1557.78 1219.57 L1557.19 1219.57 L1556.6 1219.57 L1556.02 1219.57 L1555.43 1219.57 L1554.85 1219.57 L1554.26 1219.57 L1553.67 1219.57 L1553.09 1219.57 L1552.5 1219.57 L1551.91 1219.57 L1551.33 1219.57 L1550.74 1219.57 L1550.15 1219.57 L1549.57 1219.57 L1548.98 1219.57 L1548.4 1219.57 L1547.81 1219.57 L1547.22 1219.57 L1546.64 1219.57 L1546.05 1219.57 L1545.46 1219.57 L1544.88 1219.57 L1544.29 1219.57 L1543.7 1219.57 L1543.12 1219.57 L1542.53 1219.57 L1541.94 1219.57 L1541.36 1219.57 L1540.77 1219.57 L1540.19 1219.57 L1539.6 1219.57 L1539.01 1219.57 L1538.43 1219.57 L1537.84 1219.57 L1537.25 1219.57 L1536.67 1219.57 L1536.08 1219.57 L1535.49 1219.57 L1534.91 1219.57 L1534.32 1219.57 L1533.73 1219.57 L1533.15 1219.57 L1532.56 1219.57 L1531.98 1219.57 L1531.39 1219.57 L1530.8 1219.57 L1530.22 1219.57 L1529.63 1219.57 L1529.04 1219.57 L1528.46 1219.57 L1527.87 1219.57 L1527.28 1219.57 L1526.7 1219.57 L1526.11 1219.57 L1525.52 1219.57 L1524.94 1219.57 L1524.35 1219.57 L1523.77 1219.57 L1523.18 1219.57 L1522.59 1219.57 L1522.01 1219.57 L1521.42 1219.57 L1520.83 1219.57 L1520.25 1219.57 L1519.66 1219.57 L1519.07 1219.57 L1518.49 1219.57 L1517.9 1219.57 L1517.32 1219.57 L1516.73 1219.57 L1516.14 1219.57 L1515.56 1219.57 L1514.97 1219.57 L1514.38 1219.57 L1513.8 1219.57 L1513.21 1219.57 L1512.62 1219.57 L1512.04 1219.57 L1511.45 1219.57 L1510.86 1219.57 L1510.28 1219.57 L1509.69 1219.57 L1509.11 1219.57 L1508.52 1219.57 L1507.93 1219.57 L1507.35 1219.57 L1506.76 1219.57 L1506.17 1219.57 L1505.59 1219.57 L1505 1219.57 L1504.41 1219.57 L1503.83 1219.57 L1503.24 1219.57 L1502.65 1219.57 L1502.07 1219.57 L1501.48 1219.57 L1500.9 1219.57 L1500.31 1219.57 L1499.72 1219.57 L1499.14 1219.57 L1498.55 1219.57 L1497.96 1219.57 L1497.38 1219.57 L1496.79 1219.57 L1496.2 1219.57 L1495.62 1219.57 L1495.03 1219.57 L1494.45 1219.57 L1493.86 1219.57 L1493.27 1219.57 L1492.69 1219.57 L1492.1 1219.57 L1491.51 1219.57 L1490.93 1219.57 L1490.34 1219.57 L1489.75 1219.57 L1489.17 1219.57 L1488.58 1219.57 L1487.99 1219.57 L1487.41 1219.57 L1486.82 1219.57 L1486.24 1219.57 L1485.65 1219.57 L1485.06 1219.57 L1484.48 1219.57 L1483.89 1219.57 L1483.3 1219.57 L1482.72 1219.57 L1482.13 1219.57 L1481.54 1219.57 L1480.96 1219.57 L1480.37 1219.57 L1479.78 1219.57 L1479.2 1219.57 L1478.61 1219.57 L1478.03 1219.57 L1477.44 1219.57 L1476.85 1219.57 L1476.27 1219.57 L1475.68 1219.57 L1475.09 1219.57 L1474.51 1219.57 L1473.92 1219.57 L1473.33 1219.57 L1472.75 1219.57 L1472.16 1219.57 L1471.57 1219.57 L1470.99 1219.57 L1470.4 1219.57 L1469.82 1219.57 L1469.23 1219.57 L1468.64 1219.57 L1468.06 1219.57 L1467.47 1219.57 L1466.88 1219.57 L1466.3 1219.57 L1465.71 1219.57 L1465.12 1219.57 L1464.54 1219.57 L1463.95 1219.57 L1463.37 1219.57 L1462.78 1219.57 L1462.19 1219.57 L1461.61 1219.57 L1461.02 1219.57 L1460.43 1219.57 L1459.85 1219.57 L1459.26 1219.57 L1458.67 1219.57 L1458.09 1219.57 L1457.5 1219.57 L1456.91 1219.57 L1456.33 1219.57 L1455.74 1219.57 L1455.16 1219.57 L1454.57 1219.57 L1453.98 1219.57 L1453.4 1219.57 L1452.81 1219.57 L1452.22 1219.57 L1451.64 1219.57 L1451.05 1219.57 L1450.46 1219.57 L1449.88 1219.57 L1449.29 1219.57 L1448.7 1219.57 L1448.12 1219.57 L1447.53 1219.57 L1446.95 1219.57 L1446.36 1219.57 L1445.77 1219.57 L1445.19 1219.57 L1444.6 1219.57 L1444.01 1219.57 L1443.43 1219.57 L1442.84 1219.57 L1442.25 1219.57 L1441.67 1219.57 L1441.08 1219.57 L1440.5 1219.57 L1439.91 1219.57 L1439.32 1219.57 L1438.74 1219.57 L1438.15 1219.57 L1437.56 1219.57 L1436.98 1219.57 L1436.39 1219.57 L1435.8 1219.57 L1435.22 1219.57 L1434.63 1219.57 L1434.04 1219.57 L1433.46 1219.57 L1432.87 1219.57 L1432.29 1219.57 L1431.7 1219.57 L1431.11 1219.57 L1430.53 1219.57 L1429.94 1219.57 L1429.35 1219.57 L1428.77 1219.57 L1428.18 1219.57 L1427.59 1219.57 L1427.01 1219.57 L1426.42 1219.57 L1425.83 1219.57 L1425.25 1219.57 L1424.66 1219.57 L1424.08 1219.57 L1423.49 1219.57 L1422.9 1219.57 L1422.32 1219.57 L1421.73 1219.57 L1421.14 1219.57 L1420.56 1219.57 L1419.97 1219.57 L1419.38 1219.57 L1418.8 1219.57 L1418.21 1219.57 L1417.63 1219.57 L1417.04 1219.57 L1416.45 1219.57 L1415.87 1219.57 L1415.28 1219.57 L1414.69 1219.57 L1414.11 1219.57 L1413.52 1219.57 L1412.93 1219.57 L1412.35 1219.57 L1411.76 1219.57 L1411.17 1219.57 L1410.59 1219.57 L1410 1219.57 L1409.42 1219.57 L1408.83 1219.57 L1408.24 1219.57 L1407.66 1219.57 L1407.07 1219.57 L1406.48 1219.57 L1405.9 1219.57 L1405.31 1219.57 L1404.72 1219.57 L1404.14 1219.57 L1403.55 1219.57 L1402.96 1219.57 L1402.38 1219.57 L1401.79 1219.57 L1401.21 1219.57 L1400.62 1219.57 L1400.03 1219.57 L1399.45 1219.57 L1398.86 1219.57 L1398.27 1219.57 L1397.69 1219.57 L1397.1 1219.57 L1396.51 1219.57 L1395.93 1219.57 L1395.34 1219.57 L1394.75 1219.57 L1394.17 1219.57 L1393.58 1219.57 L1393 1219.57 L1392.41 1219.57 L1391.82 1219.57 L1391.24 1219.57 L1390.65 1219.57 L1390.06 1219.57 L1389.48 1219.57 L1388.89 1219.57 L1388.3 1219.57 L1387.72 1219.57 L1387.13 1219.57 L1386.55 1219.57 L1385.96 1219.57 L1385.37 1219.57 L1384.79 1219.57 L1384.2 1219.57 L1383.61 1219.57 L1383.03 1219.57 L1382.44 1219.57 L1381.85 1219.57 L1381.27 1219.57 L1380.68 1219.57 L1380.09 1219.57 L1379.51 1219.57 L1378.92 1219.57 L1378.34 1219.57 L1377.75 1219.57 L1377.16 1219.57 L1376.58 1219.57 L1375.99 1219.57 L1375.4 1219.57 L1374.82 1219.57 L1374.23 1219.57 L1373.64 1219.57 L1373.06 1219.57 L1372.47 1219.57 L1371.88 1219.57 L1371.3 1219.57 L1370.71 1219.57 L1370.13 1219.57 L1369.54 1219.57 L1368.95 1219.57 L1368.37 1219.57 L1367.78 1219.57 L1367.19 1219.57 L1366.61 1219.57 L1366.02 1219.57 L1365.43 1219.57 L1364.85 1219.57 L1364.26 1219.57 L1363.68 1219.57 L1363.09 1219.57 L1362.5 1219.57 L1361.92 1219.57 L1361.33 1219.57 L1360.74 1219.57 L1360.16 1219.57 L1359.57 1219.57 L1358.98 1219.57 L1358.4 1219.57 L1357.81 1219.57 L1357.22 1219.57 L1356.64 1219.57 L1356.05 1219.57 L1355.47 1219.57 L1354.88 1219.57 L1354.29 1219.57 L1353.71 1219.57 L1353.12 1219.57 L1352.53 1219.57 L1351.95 1219.57 L1351.36 1219.57 L1350.77 1219.57 L1350.19 1219.57 L1349.6 1219.57 L1349.01 1219.57 L1348.43 1219.57 L1347.84 1219.57 L1347.26 1219.57 L1346.67 1219.57 L1346.08 1219.57 L1345.5 1219.57 L1344.91 1219.57 L1344.32 1219.57 L1343.74 1219.57 L1343.15 1219.57 L1342.56 1219.57 L1341.98 1219.57 L1341.39 1219.57 L1340.8 1219.57 L1340.22 1219.57 L1339.63 1219.57 L1339.05 1219.57 L1338.46 1219.57 L1337.87 1219.57 L1337.29 1219.57 L1336.7 1219.57 L1336.11 1219.57 L1335.53 1219.57 L1334.94 1219.57 L1334.35 1219.57 L1333.77 1219.57 L1333.18 1219.57 L1332.6 1219.57 L1332.01 1219.57 L1331.42 1219.57 L1330.84 1219.57 L1330.25 1219.57 L1329.66 1219.57 L1329.08 1219.57 L1328.49 1219.57 L1327.9 1219.57 L1327.32 1219.57 L1326.73 1219.57 L1326.14 1219.57 L1325.56 1219.57 L1324.97 1219.57 L1324.39 1219.57 L1323.8 1219.57 L1323.21 1219.57 L1322.63 1219.57 L1322.04 1219.57 L1321.45 1219.57 L1320.87 1219.57 L1320.28 1219.57 L1319.69 1219.57 L1319.11 1219.57 L1318.52 1219.57 L1317.93 1219.57 L1317.35 1219.57 L1316.76 1219.57 L1316.18 1219.57 L1315.59 1219.57 L1315 1219.57 L1314.42 1219.57 L1313.83 1219.57 L1313.24 1219.57 L1312.66 1219.57 L1312.07 1219.57 L1311.48 1219.57 L1310.9 1219.57 L1310.31 1219.57 L1309.73 1219.57 L1309.14 1219.57 L1308.55 1219.57 L1307.97 1219.57 L1307.38 1219.57 L1306.79 1219.57 L1306.21 1219.57 L1305.62 1219.57 L1305.03 1219.57 L1304.45 1219.57 L1303.86 1219.57 L1303.27 1219.57 L1302.69 1219.57 L1302.1 1219.57 L1301.52 1219.57 L1300.93 1219.57 L1300.34 1219.57 L1299.76 1219.57 L1299.17 1219.57 L1298.58 1219.57 L1298 1219.57 L1297.41 1219.57 L1296.82 1219.57 L1296.24 1219.57 L1295.65 1219.57 L1295.06 1219.57 L1294.48 1219.57 L1293.89 1219.57 L1293.31 1219.57 L1292.72 1219.57 L1292.13 1219.57 L1291.55 1219.57 L1290.96 1219.57 L1290.37 1219.57 L1289.79 1219.57 L1289.2 1219.57 L1288.61 1219.57 L1288.03 1219.57 L1287.44 1219.57 L1286.86 1219.57 L1286.27 1219.57 L1285.68 1219.57 L1285.1 1219.57 L1284.51 1219.57 L1283.92 1219.57 L1283.34 1219.57 L1282.75 1219.57 L1282.16 1219.57 L1281.58 1219.57 L1280.99 1219.57 L1280.4 1219.57 L1279.82 1219.57 L1279.23 1219.57 L1278.65 1219.57 L1278.06 1219.57 L1277.47 1219.57 L1276.89 1219.57 L1276.3 1219.57 L1275.71 1219.57 L1275.13 1219.57 L1274.54 1219.57 L1273.95 1219.57 L1273.37 1219.57 L1272.78 1219.57 L1272.19 1219.57 L1271.61 1219.57 L1271.02 1219.57 L1270.44 1219.57 L1269.85 1219.57 L1269.26 1219.57 L1268.68 1219.57 L1268.09 1219.57 L1267.5 1219.57 L1266.92 1219.57 L1266.33 1219.57 L1265.74 1219.57 L1265.16 1219.57 L1264.57 1219.57 L1263.98 1219.57 L1263.4 1219.57 L1262.81 1219.57 L1262.23 1219.57 L1261.64 1219.57 L1261.05 1219.57 L1260.47 1219.57 L1259.88 1219.57 L1259.29 1219.57 L1258.71 1219.57 L1258.12 1219.57 L1257.53 1219.57 L1256.95 1219.57 L1256.36 1219.57 L1255.78 1219.57 L1255.19 1219.57 L1254.6 1219.57 L1254.02 1219.57 L1253.43 1219.57 L1252.84 1219.57 L1252.26 1219.57 L1251.67 1219.57 L1251.08 1219.57 L1250.5 1219.57 L1249.91 1219.57 L1249.32 1219.57 L1248.74 1219.57 L1248.15 1219.57 L1247.57 1219.57 L1246.98 1219.57 L1246.39 1219.57 L1245.81 1219.57 L1245.22 1219.57 L1244.63 1219.57 L1244.05 1219.57 L1243.46 1219.57 L1242.87 1219.57 L1242.29 1219.57 L1241.7 1219.57 L1241.11 1219.57 L1240.53 1219.57 L1239.94 1219.57 L1239.36 1219.57 L1238.77 1219.57 L1238.18 1219.57 L1237.6 1219.57 L1237.01 1219.57 L1236.42 1219.57 L1235.84 1219.57 L1235.25 1219.57 L1234.66 1219.57 L1234.08 1219.57 L1233.49 1219.57 L1232.91 1219.57 L1232.32 1219.57 L1231.73 1219.57 L1231.15 1219.57 L1230.56 1219.57 L1229.97 1219.57 L1229.39 1219.57 L1228.8 1219.57 L1228.21 1219.57 L1227.63 1219.57 L1227.04 1219.57 L1226.45 1219.57 L1225.87 1219.57 L1225.28 1219.57 L1224.7 1219.57 L1224.11 1219.57 L1223.52 1219.57 L1222.94 1219.57 L1222.35 1219.57 L1221.76 1219.57 L1221.18 1219.57 L1220.59 1219.57 L1220 1219.57 L1219.42 1219.57 L1218.83 1219.57 L1218.24 1219.57 L1217.66 1219.57 L1217.07 1219.57 L1216.49 1219.57 L1215.9 1219.57 L1215.31 1219.57 L1214.73 1219.57 L1214.14 1219.57 L1213.55 1219.57 L1212.97 1219.57 L1212.38 1219.57 L1211.79 1219.57 L1211.21 1219.57 L1210.62 1219.57 L1210.03 1219.57 L1209.45 1219.57 L1208.86 1219.57 L1208.28 1219.57 L1207.69 1219.57 L1207.1 1219.57 L1206.52 1219.57 L1205.93 1219.57 L1205.34 1219.57 L1204.76 1219.57 L1204.17 1219.57 L1203.58 1219.57 L1203 1219.57 L1202.41 1219.57 L1201.83 1219.57 L1201.24 1219.57 L1200.65 1219.57 L1200.07 1219.57 L1199.48 1219.57 L1198.89 1219.57 L1198.31 1219.57 L1197.72 1219.57 L1197.13 1219.57 L1196.55 1219.57 L1195.96 1219.57 L1195.37 1219.57 L1194.79 1219.57 L1194.2 1219.57 L1193.62 1219.57 L1193.03 1219.57 L1192.44 1219.57 L1191.86 1219.57 L1191.27 1219.57 L1190.68 1219.57 L1190.1 1219.57 L1189.51 1219.57 L1188.92 1219.57 L1188.34 1219.57 L1187.75 1219.57 L1187.16 1219.57 L1186.58 1219.57 L1185.99 1219.57 L1185.41 1219.57 L1184.82 1219.57 L1184.23 1219.57 L1183.65 1219.57 L1183.06 1219.57 L1182.47 1219.57 L1181.89 1219.57 L1181.3 1219.57 L1180.71 1219.57 L1180.13 1219.57 L1179.54 1219.57 L1178.96 1219.57 L1178.37 1219.57 L1177.78 1219.57 L1177.2 1219.57 L1176.61 1219.57 L1176.02 1219.57 L1175.44 1219.57 L1174.85 1219.57 L1174.26 1219.57 L1173.68 1219.57 L1173.09 1219.57 L1172.5 1219.57 L1171.92 1219.57 L1171.33 1219.57 L1170.75 1219.57 L1170.16 1219.57 L1169.57 1219.57 L1168.99 1219.57 L1168.4 1219.57 L1167.81 1219.57 L1167.23 1219.57 L1166.64 1219.57 L1166.05 1219.57 L1165.47 1219.57 L1164.88 1219.57 L1164.29 1219.57 L1163.71 1219.57 L1163.12 1219.57 L1162.54 1219.57 L1161.95 1219.57 L1161.36 1219.57 L1160.78 1219.57 L1160.19 1219.57 L1159.6 1219.57 L1159.02 1219.57 L1158.43 1219.57 L1157.84 1219.57 L1157.26 1219.57 L1156.67 1219.57 L1156.09 1219.57 L1155.5 1219.57 L1154.91 1219.57 L1154.33 1219.57 L1153.74 1219.57 L1153.15 1219.57 L1152.57 1219.57 L1151.98 1219.57 L1151.39 1219.57 L1150.81 1219.57 L1150.22 1219.57 L1149.63 1219.57 L1149.05 1219.57 L1148.46 1219.57 L1147.88 1219.57 L1147.29 1219.57 L1146.7 1219.57 L1146.12 1219.57 L1145.53 1219.57 L1144.94 1219.57 L1144.36 1219.57 L1143.77 1219.57 L1143.18 1219.57 L1142.6 1219.57 L1142.01 1219.57 L1141.42 1219.57 L1140.84 1219.57 L1140.25 1219.57 L1139.67 1219.57 L1139.08 1219.57 L1138.49 1219.57 L1137.91 1219.57 L1137.32 1219.57 L1136.73 1219.57 L1136.15 1219.57 L1135.56 1219.57 L1134.97 1219.57 L1134.39 1219.57 L1133.8 1219.57 L1133.21 1219.57 L1132.63 1219.57 L1132.04 1219.57 L1131.46 1219.57 L1130.87 1219.57 L1130.28 1219.57 L1129.7 1219.57 L1129.11 1219.57 L1128.52 1219.57 L1127.94 1219.57 L1127.35 1219.57 L1126.76 1219.57 L1126.18 1219.57 L1125.59 1219.57 L1125.01 1219.57 L1124.42 1219.57 L1123.83 1219.57 L1123.25 1219.57 L1122.66 1219.57 L1122.07 1219.57 L1121.49 1219.57 L1120.9 1219.57 L1120.31 1219.57 L1119.73 1219.57 L1119.14 1219.57 L1118.55 1219.57 L1117.97 1219.57 L1117.38 1219.57 L1116.8 1219.57 L1116.21 1219.57 L1115.62 1219.57 L1115.04 1219.57 L1114.45 1219.57 L1113.86 1219.57 L1113.28 1219.57 L1112.69 1219.57 L1112.1 1219.57 L1111.52 1219.57 L1110.93 1219.57 L1110.34 1219.57 L1109.76 1219.57 L1109.17 1219.57 L1108.59 1219.57 L1108 1219.57 L1107.41 1219.57 L1106.83 1219.57 L1106.24 1219.57 L1105.65 1219.57 L1105.07 1219.57 L1104.48 1219.57 L1103.89 1219.57 L1103.31 1219.57 L1102.72 1219.57 L1102.14 1219.57 L1101.55 1219.57 L1100.96 1219.57 L1100.38 1219.57 L1099.79 1219.57 L1099.2 1219.57 L1098.62 1219.57 L1098.03 1219.57 L1097.44 1219.57 L1096.86 1219.57 L1096.27 1219.57 L1095.68 1219.57 L1095.1 1219.57 L1094.51 1219.57 L1093.93 1219.57 L1093.34 1219.57 L1092.75 1219.57 L1092.17 1219.57 L1091.58 1219.57 L1090.99 1219.57 L1090.41 1219.57 L1089.82 1219.57 L1089.23 1219.57 L1088.65 1219.57 L1088.06 1219.57 L1087.47 1219.57 L1086.89 1219.57 L1086.3 1219.57 L1085.72 1219.57 L1085.13 1219.57 L1084.54 1219.57 L1083.96 1219.57 L1083.37 1219.57 L1082.78 1219.57 L1082.2 1219.57 L1081.61 1219.57 L1081.02 1219.57 L1080.44 1219.57 L1079.85 1219.57 L1079.26 1219.57 L1078.68 1219.57 L1078.09 1219.57 L1077.51 1219.57 L1076.92 1219.57 L1076.33 1219.57 L1075.75 1219.57 L1075.16 1219.57 L1074.57 1219.57 L1073.99 1219.57 L1073.4 1219.57 L1072.81 1219.57 L1072.23 1219.57 L1071.64 1219.57 L1071.06 1219.57 L1070.47 1219.57 L1069.88 1219.57 L1069.3 1219.57 L1068.71 1219.57 L1068.12 1219.57 L1067.54 1219.57 L1066.95 1219.57 L1066.36 1219.57 L1065.78 1219.57 L1065.19 1219.57 L1064.6 1219.57 L1064.02 1219.57 L1063.43 1219.57 L1062.85 1219.57 L1062.26 1219.57 L1061.67 1219.57 L1061.09 1219.57 L1060.5 1219.57 L1059.91 1219.57 L1059.33 1219.57 L1058.74 1219.57 L1058.15 1219.57 L1057.57 1219.57 L1056.98 1219.57 L1056.39 1219.57 L1055.81 1219.57 L1055.22 1219.57 L1054.64 1219.57 L1054.05 1219.57 L1053.46 1219.57 L1052.88 1219.57 L1052.29 1219.57 L1051.7 1219.57 L1051.12 1219.57 L1050.53 1219.57 L1049.94 1219.57 L1049.36 1219.57 L1048.77 1219.57 L1048.19 1219.57 L1047.6 1219.57 L1047.01 1219.57 L1046.43 1219.57 L1045.84 1219.57 L1045.25 1219.57 L1044.67 1219.57 L1044.08 1219.57 L1043.49 1219.57 L1042.91 1219.57 L1042.32 1219.57 L1041.73 1219.57 L1041.15 1219.57 L1040.56 1219.57 L1039.98 1219.57 L1039.39 1219.57 L1038.8 1219.57 L1038.22 1219.57 L1037.63 1219.57 L1037.04 1219.57 L1036.46 1219.57 L1035.87 1219.57 L1035.28 1219.57 L1034.7 1219.57 L1034.11 1219.57 L1033.52 1219.57 L1032.94 1219.57 L1032.35 1219.57 L1031.77 1219.57 L1031.18 1219.57 L1030.59 1219.57 L1030.01 1219.57 L1029.42 1219.57 L1028.83 1219.57 L1028.25 1219.57 L1027.66 1219.57 L1027.07 1219.57 L1026.49 1219.57 L1025.9 1219.57 L1025.32 1219.57 L1024.73 1219.57 L1024.14 1219.57 L1023.56 1219.57 L1022.97 1219.57 L1022.38 1219.57 L1021.8 1219.57 L1021.21 1219.57 L1020.62 1219.57 L1020.04 1219.57 L1019.45 1219.57 L1018.86 1219.57 L1018.28 1219.57 L1017.69 1219.57 L1017.11 1219.57 L1016.52 1219.57 L1015.93 1219.57 L1015.35 1219.57 L1014.76 1219.57 L1014.17 1219.57 L1013.59 1219.57 L1013 1219.57 L1012.41 1219.57 L1011.83 1219.57 L1011.24 1219.57 L1010.65 1219.57 L1010.07 1219.57 L1009.48 1219.57 L1008.9 1219.57 L1008.31 1219.57 L1007.72 1219.57 L1007.14 1219.57 L1006.55 1219.57 L1005.96 1219.57 L1005.38 1219.57 L1004.79 1219.57 L1004.2 1219.57 L1003.62 1219.57 L1003.03 1219.57 L1002.44 1219.57 L1001.86 1219.57 L1001.27 1219.57 L1000.69 1219.57 L1000.1 1219.57 L999.513 1219.57 L998.926 1219.57 L998.34 1219.57 L997.754 1219.57 L997.167 1219.57 L996.581 1219.57 L995.994 1219.57 L995.408 1219.57 L994.822 1219.57 L994.235 1219.57 L993.649 1219.57 L993.062 1219.57 L992.476 1219.57 L991.889 1219.57 L991.303 1219.57 L990.717 1219.57 L990.13 1219.57 L989.544 1219.57 L988.957 1219.57 L988.371 1219.57 L987.785 1219.57 L987.198 1219.57 L986.612 1219.57 L986.025 1219.57  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1219.65 986.612,1219.65 987.198,1219.65 987.785,1219.65 988.371,1219.65 988.957,1219.65 989.544,1219.65 990.13,1219.65 990.717,1219.65 991.303,1219.65 991.889,1219.65 992.476,1219.65 993.062,1219.65 993.649,1219.65 994.235,1219.65 994.822,1219.65 995.408,1219.65 995.994,1219.65 996.581,1219.65 997.167,1219.65 997.754,1219.65 998.34,1219.65 998.926,1219.65 999.513,1219.65 1000.1,1219.65 1000.69,1219.65 1001.27,1219.65 1001.86,1219.65 1002.44,1219.65 1003.03,1219.65 1003.62,1219.65 1004.2,1219.65 1004.79,1219.65 1005.38,1219.65 1005.96,1219.65 1006.55,1219.65 1007.14,1219.65 1007.72,1219.65 1008.31,1219.65 1008.9,1219.65 1009.48,1219.65 1010.07,1219.65 1010.65,1219.65 1011.24,1219.65 1011.83,1219.65 1012.41,1219.65 1013,1219.65 1013.59,1219.65 1014.17,1219.65 1014.76,1219.65 1015.35,1219.65 1015.93,1219.65 1016.52,1219.65 1017.11,1219.65 1017.69,1219.65 1018.28,1219.65 1018.86,1219.65 1019.45,1219.65 1020.04,1219.65 1020.62,1219.65 1021.21,1219.65 1021.8,1219.65 1022.38,1219.65 1022.97,1219.65 1023.56,1219.65 1024.14,1219.65 1024.73,1219.65 1025.32,1219.65 1025.9,1219.65 1026.49,1219.65 1027.07,1219.65 1027.66,1219.65 1028.25,1219.65 1028.83,1219.65 1029.42,1219.65 1030.01,1219.65 1030.59,1219.65 1031.18,1219.65 1031.77,1219.65 1032.35,1219.65 1032.94,1219.65 1033.52,1219.65 1034.11,1219.65 1034.7,1219.65 1035.28,1219.65 1035.87,1219.65 1036.46,1219.65 1037.04,1219.65 1037.63,1219.65 1038.22,1219.65 1038.8,1219.65 1039.39,1219.65 1039.98,1219.65 1040.56,1219.65 1041.15,1219.65 1041.73,1219.65 1042.32,1219.65 1042.91,1219.65 1043.49,1219.65 1044.08,1219.65 1044.67,1219.65 1045.25,1219.65 1045.84,1219.65 1046.43,1219.65 1047.01,1219.65 1047.6,1219.65 1048.19,1219.65 1048.77,1219.65 1049.36,1219.65 1049.94,1219.65 1050.53,1219.65 1051.12,1219.65 1051.7,1219.65 1052.29,1219.65 1052.88,1219.65 1053.46,1219.65 1054.05,1219.65 1054.64,1219.65 1055.22,1219.65 1055.81,1219.65 1056.39,1219.65 1056.98,1219.65 1057.57,1219.65 1058.15,1219.65 1058.74,1219.65 1059.33,1219.65 1059.91,1219.65 1060.5,1219.65 1061.09,1219.65 1061.67,1219.65 1062.26,1219.65 1062.85,1219.65 1063.43,1219.65 1064.02,1219.65 1064.6,1219.65 1065.19,1219.65 1065.78,1219.65 1066.36,1219.65 1066.95,1219.65 1067.54,1219.65 1068.12,1219.65 1068.71,1219.65 1069.3,1219.65 1069.88,1219.65 1070.47,1219.65 1071.06,1219.65 1071.64,1219.65 1072.23,1219.65 1072.81,1219.65 1073.4,1219.65 1073.99,1219.65 1074.57,1219.65 1075.16,1219.65 1075.75,1219.65 1076.33,1219.65 1076.92,1219.65 1077.51,1219.65 1078.09,1219.65 1078.68,1219.65 1079.26,1219.65 1079.85,1219.65 1080.44,1219.65 1081.02,1219.65 1081.61,1219.65 1082.2,1219.65 1082.78,1219.65 1083.37,1219.65 1083.96,1219.65 1084.54,1219.65 1085.13,1219.65 1085.72,1219.65 1086.3,1219.65 1086.89,1219.65 1087.47,1219.65 1088.06,1219.65 1088.65,1219.65 1089.23,1219.65 1089.82,1219.65 1090.41,1219.65 1090.99,1219.65 1091.58,1219.65 1092.17,1219.65 1092.75,1219.65 1093.34,1219.65 1093.93,1219.65 1094.51,1219.65 1095.1,1219.65 1095.68,1219.65 1096.27,1219.65 1096.86,1219.65 1097.44,1219.65 1098.03,1219.65 1098.62,1219.65 1099.2,1219.65 1099.79,1219.65 1100.38,1219.65 1100.96,1219.65 1101.55,1219.65 1102.14,1219.65 1102.72,1219.65 1103.31,1219.65 1103.89,1219.65 1104.48,1219.65 1105.07,1219.65 1105.65,1219.65 1106.24,1219.65 1106.83,1219.65 1107.41,1219.65 1108,1219.65 1108.59,1219.65 1109.17,1219.65 1109.76,1219.65 1110.34,1219.65 1110.93,1219.65 1111.52,1219.65 1112.1,1219.65 1112.69,1219.65 1113.28,1219.65 1113.86,1219.65 1114.45,1219.65 1115.04,1219.65 1115.62,1219.65 1116.21,1219.65 1116.8,1219.65 1117.38,1219.65 1117.97,1219.65 1118.55,1219.65 1119.14,1219.65 1119.73,1219.65 1120.31,1219.65 1120.9,1219.65 1121.49,1219.65 1122.07,1219.65 1122.66,1219.65 1123.25,1219.65 1123.83,1219.65 1124.42,1219.65 1125.01,1219.65 1125.59,1219.65 1126.18,1219.65 1126.76,1219.65 1127.35,1219.65 1127.94,1219.65 1128.52,1219.65 1129.11,1219.65 1129.7,1219.65 1130.28,1219.65 1130.87,1219.65 1131.46,1219.65 1132.04,1219.65 1132.63,1219.65 1133.21,1219.65 1133.8,1219.65 1134.39,1219.65 1134.97,1219.65 1135.56,1219.65 1136.15,1219.65 1136.73,1219.65 1137.32,1219.65 1137.91,1219.65 1138.49,1219.65 1139.08,1219.65 1139.67,1219.65 1140.25,1219.65 1140.84,1219.65 1141.42,1219.65 1142.01,1219.65 1142.6,1219.65 1143.18,1219.65 1143.77,1219.65 1144.36,1219.65 1144.94,1219.65 1145.53,1219.65 1146.12,1219.65 1146.7,1219.65 1147.29,1219.65 1147.88,1219.65 1148.46,1219.65 1149.05,1219.65 1149.63,1219.65 1150.22,1219.65 1150.81,1219.65 1151.39,1219.65 1151.98,1219.65 1152.57,1219.65 1153.15,1219.65 1153.74,1219.65 1154.33,1219.65 1154.91,1219.65 1155.5,1219.65 1156.09,1219.65 1156.67,1219.65 1157.26,1219.65 1157.84,1219.65 1158.43,1219.65 1159.02,1219.65 1159.6,1219.65 1160.19,1219.65 1160.78,1219.65 1161.36,1219.65 1161.95,1219.65 1162.54,1219.65 1163.12,1219.65 1163.71,1219.65 1164.29,1219.65 1164.88,1219.65 1165.47,1219.65 1166.05,1219.65 1166.64,1219.65 1167.23,1219.65 1167.81,1219.65 1168.4,1219.65 1168.99,1219.65 1169.57,1219.65 1170.16,1219.65 1170.75,1219.65 1171.33,1219.65 1171.92,1219.65 1172.5,1219.65 1173.09,1219.65 1173.68,1219.65 1174.26,1219.65 1174.85,1219.65 1175.44,1219.65 1176.02,1219.65 1176.61,1219.65 1177.2,1219.65 1177.78,1219.65 1178.37,1219.65 1178.96,1219.65 1179.54,1219.65 1180.13,1219.65 1180.71,1219.65 1181.3,1219.65 1181.89,1219.65 1182.47,1219.65 1183.06,1219.65 1183.65,1219.65 1184.23,1219.65 1184.82,1219.65 1185.41,1219.65 1185.99,1219.65 1186.58,1219.65 1187.16,1219.65 1187.75,1219.65 1188.34,1219.65 1188.92,1219.65 1189.51,1219.65 1190.1,1219.65 1190.68,1219.65 1191.27,1219.65 1191.86,1219.65 1192.44,1219.65 1193.03,1219.65 1193.62,1219.65 1194.2,1219.65 1194.79,1219.65 1195.37,1219.65 1195.96,1219.65 1196.55,1219.65 1197.13,1219.65 1197.72,1219.65 1198.31,1219.65 1198.89,1219.65 1199.48,1219.65 1200.07,1219.65 1200.65,1219.65 1201.24,1219.65 1201.83,1219.65 1202.41,1219.65 1203,1219.65 1203.58,1219.65 1204.17,1219.65 1204.76,1219.65 1205.34,1219.65 1205.93,1219.65 1206.52,1219.65 1207.1,1219.65 1207.69,1219.65 1208.28,1219.65 1208.86,1219.65 1209.45,1219.65 1210.03,1219.65 1210.62,1219.65 1211.21,1219.65 1211.79,1219.65 1212.38,1219.65 1212.97,1219.65 1213.55,1219.65 1214.14,1219.65 1214.73,1219.65 1215.31,1219.65 1215.9,1219.65 1216.49,1219.65 1217.07,1219.65 1217.66,1219.65 1218.24,1219.65 1218.83,1219.65 1219.42,1219.65 1220,1219.65 1220.59,1219.65 1221.18,1219.65 1221.76,1219.65 1222.35,1219.65 1222.94,1219.65 1223.52,1219.65 1224.11,1219.65 1224.7,1219.65 1225.28,1219.65 1225.87,1219.65 1226.45,1219.65 1227.04,1219.65 1227.63,1219.65 1228.21,1219.65 1228.8,1219.65 1229.39,1219.65 1229.97,1219.65 1230.56,1219.65 1231.15,1219.65 1231.73,1219.65 1232.32,1219.65 1232.91,1219.65 1233.49,1219.65 1234.08,1219.65 1234.66,1219.65 1235.25,1219.65 1235.84,1219.65 1236.42,1219.65 1237.01,1219.65 1237.6,1219.65 1238.18,1219.65 1238.77,1219.65 1239.36,1219.65 1239.94,1219.65 1240.53,1219.65 1241.11,1219.65 1241.7,1219.65 1242.29,1219.65 1242.87,1219.65 1243.46,1219.65 1244.05,1219.65 1244.63,1219.65 1245.22,1219.65 1245.81,1219.65 1246.39,1219.65 1246.98,1219.65 1247.57,1219.65 1248.15,1219.65 1248.74,1219.65 1249.32,1219.65 1249.91,1219.65 1250.5,1219.65 1251.08,1219.65 1251.67,1219.65 1252.26,1219.65 1252.84,1219.65 1253.43,1219.65 1254.02,1219.65 1254.6,1219.65 1255.19,1219.65 1255.78,1219.65 1256.36,1219.65 1256.95,1219.65 1257.53,1219.65 1258.12,1219.65 1258.71,1219.65 1259.29,1219.65 1259.88,1219.65 1260.47,1219.65 1261.05,1219.65 1261.64,1219.65 1262.23,1219.65 1262.81,1219.65 1263.4,1219.65 1263.98,1219.65 1264.57,1219.65 1265.16,1219.65 1265.74,1219.65 1266.33,1219.65 1266.92,1219.65 1267.5,1219.65 1268.09,1219.65 1268.68,1219.65 1269.26,1219.65 1269.85,1219.65 1270.44,1219.65 1271.02,1219.65 1271.61,1219.65 1272.19,1219.65 1272.78,1219.65 1273.37,1219.65 1273.95,1219.65 1274.54,1219.65 1275.13,1219.65 1275.71,1219.65 1276.3,1219.65 1276.89,1219.65 1277.47,1219.65 1278.06,1219.65 1278.65,1219.65 1279.23,1219.65 1279.82,1219.65 1280.4,1219.65 1280.99,1219.65 1281.58,1219.65 1282.16,1219.65 1282.75,1219.65 1283.34,1219.65 1283.92,1219.65 1284.51,1219.65 1285.1,1219.65 1285.68,1219.65 1286.27,1219.65 1286.86,1219.65 1287.44,1219.65 1288.03,1219.65 1288.61,1219.65 1289.2,1219.65 1289.79,1219.65 1290.37,1219.65 1290.96,1219.65 1291.55,1219.65 1292.13,1219.65 1292.72,1219.65 1293.31,1219.65 1293.89,1219.65 1294.48,1219.65 1295.06,1219.65 1295.65,1219.65 1296.24,1219.65 1296.82,1219.65 1297.41,1219.65 1298,1219.65 1298.58,1219.65 1299.17,1219.65 1299.76,1219.65 1300.34,1219.65 1300.93,1219.65 1301.52,1219.65 1302.1,1219.65 1302.69,1219.65 1303.27,1219.65 1303.86,1219.65 1304.45,1219.65 1305.03,1219.65 1305.62,1219.65 1306.21,1219.65 1306.79,1219.65 1307.38,1219.65 1307.97,1219.65 1308.55,1219.65 1309.14,1219.65 1309.73,1219.65 1310.31,1219.65 1310.9,1219.65 1311.48,1219.65 1312.07,1219.65 1312.66,1219.65 1313.24,1219.65 1313.83,1219.65 1314.42,1219.65 1315,1219.65 1315.59,1219.65 1316.18,1219.65 1316.76,1219.65 1317.35,1219.65 1317.93,1219.65 1318.52,1219.65 1319.11,1219.65 1319.69,1219.65 1320.28,1219.65 1320.87,1219.65 1321.45,1219.65 1322.04,1219.65 1322.63,1219.65 1323.21,1219.65 1323.8,1219.65 1324.39,1219.65 1324.97,1219.65 1325.56,1219.65 1326.14,1219.65 1326.73,1219.65 1327.32,1219.65 1327.9,1219.65 1328.49,1219.65 1329.08,1219.65 1329.66,1219.65 1330.25,1219.65 1330.84,1219.65 1331.42,1219.65 1332.01,1219.65 1332.6,1219.65 1333.18,1219.65 1333.77,1219.65 1334.35,1219.65 1334.94,1219.65 1335.53,1219.65 1336.11,1219.65 1336.7,1219.65 1337.29,1219.65 1337.87,1219.65 1338.46,1219.65 1339.05,1219.65 1339.63,1219.65 1340.22,1219.65 1340.8,1219.65 1341.39,1219.65 1341.98,1219.65 1342.56,1219.65 1343.15,1219.65 1343.74,1219.65 1344.32,1219.65 1344.91,1219.65 1345.5,1219.65 1346.08,1219.65 1346.67,1219.65 1347.26,1219.65 1347.84,1219.65 1348.43,1219.65 1349.01,1219.65 1349.6,1219.65 1350.19,1219.65 1350.77,1219.65 1351.36,1219.65 1351.95,1219.65 1352.53,1219.65 1353.12,1219.65 1353.71,1219.65 1354.29,1219.65 1354.88,1219.65 1355.47,1219.65 1356.05,1219.65 1356.64,1219.65 1357.22,1219.65 1357.81,1219.65 1358.4,1219.65 1358.98,1219.65 1359.57,1219.65 1360.16,1219.65 1360.74,1219.65 1361.33,1219.65 1361.92,1219.65 1362.5,1219.65 1363.09,1219.65 1363.68,1219.65 1364.26,1219.65 1364.85,1219.65 1365.43,1219.65 1366.02,1219.65 1366.61,1219.65 1367.19,1219.65 1367.78,1219.65 1368.37,1219.65 1368.95,1219.65 1369.54,1219.65 1370.13,1219.65 1370.71,1219.65 1371.3,1219.65 1371.88,1219.65 1372.47,1219.65 1373.06,1219.65 1373.64,1219.65 1374.23,1219.65 1374.82,1219.65 1375.4,1219.65 1375.99,1219.65 1376.58,1219.65 1377.16,1219.65 1377.75,1219.65 1378.34,1219.65 1378.92,1219.65 1379.51,1219.65 1380.09,1219.65 1380.68,1219.65 1381.27,1219.65 1381.85,1219.65 1382.44,1219.65 1383.03,1219.65 1383.61,1219.65 1384.2,1219.65 1384.79,1219.65 1385.37,1219.65 1385.96,1219.65 1386.55,1219.65 1387.13,1219.65 1387.72,1219.65 1388.3,1219.65 1388.89,1219.65 1389.48,1219.65 1390.06,1219.65 1390.65,1219.65 1391.24,1219.65 1391.82,1219.65 1392.41,1219.65 1393,1219.65 1393.58,1219.65 1394.17,1219.65 1394.75,1219.65 1395.34,1219.65 1395.93,1219.65 1396.51,1219.65 1397.1,1219.65 1397.69,1219.65 1398.27,1219.65 1398.86,1219.65 1399.45,1219.65 1400.03,1219.65 1400.62,1219.65 1401.21,1219.65 1401.79,1219.65 1402.38,1219.65 1402.96,1219.65 1403.55,1219.65 1404.14,1219.65 1404.72,1219.65 1405.31,1219.65 1405.9,1219.65 1406.48,1219.65 1407.07,1219.65 1407.66,1219.65 1408.24,1219.65 1408.83,1219.65 1409.42,1219.65 1410,1219.65 1410.59,1219.65 1411.17,1219.65 1411.76,1219.65 1412.35,1219.65 1412.93,1219.65 1413.52,1219.65 1414.11,1219.65 1414.69,1219.65 1415.28,1219.65 1415.87,1219.65 1416.45,1219.65 1417.04,1219.65 1417.63,1219.65 1418.21,1219.65 1418.8,1219.65 1419.38,1219.65 1419.97,1219.65 1420.56,1219.65 1421.14,1219.65 1421.73,1219.65 1422.32,1219.65 1422.9,1219.65 1423.49,1219.65 1424.08,1219.65 1424.66,1219.65 1425.25,1219.65 1425.83,1219.65 1426.42,1219.65 1427.01,1219.65 1427.59,1219.65 1428.18,1219.65 1428.77,1219.65 1429.35,1219.65 1429.94,1219.65 1430.53,1219.65 1431.11,1219.65 1431.7,1219.65 1432.29,1219.65 1432.87,1219.65 1433.46,1219.65 1434.04,1219.65 1434.63,1219.65 1435.22,1219.65 1435.8,1219.65 1436.39,1219.65 1436.98,1219.65 1437.56,1219.65 1438.15,1219.65 1438.74,1219.65 1439.32,1219.65 1439.91,1219.65 1440.5,1219.65 1441.08,1219.65 1441.67,1219.65 1442.25,1219.65 1442.84,1219.65 1443.43,1219.65 1444.01,1219.65 1444.6,1219.65 1445.19,1219.65 1445.77,1219.65 1446.36,1219.65 1446.95,1219.65 1447.53,1219.65 1448.12,1219.65 1448.7,1219.65 1449.29,1219.65 1449.88,1219.65 1450.46,1219.65 1451.05,1219.65 1451.64,1219.65 1452.22,1219.65 1452.81,1219.65 1453.4,1219.65 1453.98,1219.65 1454.57,1219.65 1455.16,1219.65 1455.74,1219.65 1456.33,1219.65 1456.91,1219.65 1457.5,1219.65 1458.09,1219.65 1458.67,1219.65 1459.26,1219.65 1459.85,1219.65 1460.43,1219.65 1461.02,1219.65 1461.61,1219.65 1462.19,1219.65 1462.78,1219.65 1463.37,1219.65 1463.95,1219.65 1464.54,1219.65 1465.12,1219.65 1465.71,1219.65 1466.3,1219.65 1466.88,1219.65 1467.47,1219.65 1468.06,1219.65 1468.64,1219.65 1469.23,1219.65 1469.82,1219.65 1470.4,1219.65 1470.99,1219.65 1471.57,1219.65 1472.16,1219.65 1472.75,1219.65 1473.33,1219.65 1473.92,1219.65 1474.51,1219.65 1475.09,1219.65 1475.68,1219.65 1476.27,1219.65 1476.85,1219.65 1477.44,1219.65 1478.03,1219.65 1478.61,1219.65 1479.2,1219.65 1479.78,1219.65 1480.37,1219.65 1480.96,1219.65 1481.54,1219.65 1482.13,1219.65 1482.72,1219.65 1483.3,1219.65 1483.89,1219.65 1484.48,1219.65 1485.06,1219.65 1485.65,1219.65 1486.24,1219.65 1486.82,1219.65 1487.41,1219.65 1487.99,1219.65 1488.58,1219.65 1489.17,1219.65 1489.75,1219.65 1490.34,1219.65 1490.93,1219.65 1491.51,1219.65 1492.1,1219.65 1492.69,1219.65 1493.27,1219.65 1493.86,1219.65 1494.45,1219.65 1495.03,1219.65 1495.62,1219.65 1496.2,1219.65 1496.79,1219.65 1497.38,1219.65 1497.96,1219.65 1498.55,1219.65 1499.14,1219.65 1499.72,1219.65 1500.31,1219.65 1500.9,1219.65 1501.48,1219.65 1502.07,1219.65 1502.65,1219.65 1503.24,1219.65 1503.83,1219.65 1504.41,1219.65 1505,1219.65 1505.59,1219.65 1506.17,1219.65 1506.76,1219.65 1507.35,1219.65 1507.93,1219.65 1508.52,1219.65 1509.11,1219.65 1509.69,1219.65 1510.28,1219.65 1510.86,1219.65 1511.45,1219.65 1512.04,1219.65 1512.62,1219.65 1513.21,1219.65 1513.8,1219.65 1514.38,1219.65 1514.97,1219.65 1515.56,1219.65 1516.14,1219.65 1516.73,1219.65 1517.32,1219.65 1517.9,1219.65 1518.49,1219.65 1519.07,1219.65 1519.66,1219.65 1520.25,1219.65 1520.83,1219.65 1521.42,1219.65 1522.01,1219.65 1522.59,1219.65 1523.18,1219.65 1523.77,1219.65 1524.35,1219.65 1524.94,1219.65 1525.52,1219.65 1526.11,1219.65 1526.7,1219.65 1527.28,1219.65 1527.87,1219.65 1528.46,1219.65 1529.04,1219.65 1529.63,1219.65 1530.22,1219.65 1530.8,1219.65 1531.39,1219.65 1531.98,1219.65 1532.56,1219.65 1533.15,1219.65 1533.73,1219.65 1534.32,1219.65 1534.91,1219.65 1535.49,1219.65 1536.08,1219.65 1536.67,1219.65 1537.25,1219.65 1537.84,1219.65 1538.43,1219.65 1539.01,1219.65 1539.6,1219.65 1540.19,1219.65 1540.77,1219.65 1541.36,1219.65 1541.94,1219.65 1542.53,1219.65 1543.12,1219.65 1543.7,1219.65 1544.29,1219.65 1544.88,1219.65 1545.46,1219.65 1546.05,1219.65 1546.64,1219.65 1547.22,1219.65 1547.81,1219.65 1548.4,1219.65 1548.98,1219.65 1549.57,1219.65 1550.15,1219.65 1550.74,1219.65 1551.33,1219.65 1551.91,1219.65 1552.5,1219.65 1553.09,1219.65 1553.67,1219.65 1554.26,1219.65 1554.85,1219.65 1555.43,1219.65 1556.02,1219.65 1556.6,1219.65 1557.19,1219.65 1557.78,1219.65 1558.36,1219.65 1558.95,1219.65 1559.54,1219.65 1560.12,1219.65 1560.71,1219.65 1561.3,1219.65 1561.88,1219.65 1562.47,1219.65 1563.06,1219.65 1563.64,1219.65 1564.23,1219.65 1564.81,1219.65 1565.4,1219.65 1565.99,1219.65 1566.57,1219.65 1567.16,1219.65 1567.75,1219.65 1568.33,1219.65 1568.92,1219.65 1569.51,1219.65 1570.09,1219.65 1570.68,1219.65 1571.27,1219.65 1571.85,1219.65 1572.44,1219.65 1573.02,1219.65 1573.61,1219.65 1574.2,1219.65 1574.78,1219.65 1575.37,1219.65 1575.96,1219.65 1576.54,1219.65 1577.13,1219.65 1577.72,1219.65 1578.3,1219.65 1578.89,1219.65 1579.47,1219.65 1580.06,1219.65 1580.65,1219.65 1581.23,1219.65 1581.82,1219.65 1582.41,1219.65 1582.99,1219.65 1583.58,1219.65 1584.17,1219.65 1584.75,1219.65 1585.34,1219.65 1585.93,1219.65 1586.51,1219.65 1587.1,1219.65 1587.68,1219.65 1588.27,1219.65 1588.86,1219.65 1589.44,1219.65 1590.03,1219.65 1590.62,1219.65 1591.2,1219.65 1591.79,1219.65 1592.38,1219.65 1592.96,1219.65 1593.55,1219.65 1594.14,1219.65 1594.72,1219.65 1595.31,1219.65 1595.89,1219.65 1596.48,1219.65 1597.07,1219.65 1597.65,1219.65 1598.24,1219.65 1598.83,1219.65 1599.41,1219.65 1600,1219.65 1600.59,1219.65 1601.17,1219.65 1601.76,1219.65 1602.34,1219.65 1602.93,1219.65 1603.52,1219.65 1604.1,1219.65 1604.69,1219.65 1605.28,1219.65 1605.86,1219.65 1606.45,1219.65 1607.04,1219.65 1607.62,1219.65 1608.21,1219.65 1608.8,1219.65 1609.38,1219.65 1609.97,1219.65 1610.55,1219.65 1611.14,1219.65 1611.73,1219.65 1612.31,1219.65 1612.9,1219.65 1613.49,1219.65 1614.07,1219.65 1614.66,1219.65 1615.25,1219.65 1615.83,1219.65 1616.42,1219.65 1617.01,1219.65 1617.59,1219.65 1618.18,1219.65 1618.76,1219.65 1619.35,1219.65 1619.94,1219.65 1620.52,1219.65 1621.11,1219.65 1621.7,1219.65 1622.28,1219.65 1622.87,1219.65 1623.46,1219.65 1624.04,1219.65 1624.63,1219.65 1625.22,1219.65 1625.8,1219.65 1626.39,1219.65 1626.97,1219.65 1627.56,1219.65 1628.15,1219.65 1628.73,1219.65 1629.32,1219.65 1629.91,1219.65 1630.49,1219.65 1631.08,1219.65 1631.67,1219.65 1632.25,1219.65 1632.84,1219.65 1633.42,1219.65 1634.01,1219.65 1634.6,1219.65 1635.18,1219.65 1635.77,1219.65 1636.36,1219.65 1636.94,1219.65 1637.53,1219.65 1638.12,1219.65 1638.7,1219.65 1639.29,1219.65 1639.88,1219.65 1640.46,1219.65 1641.05,1219.65 1641.63,1219.65 1642.22,1219.65 1642.81,1219.65 1643.39,1219.65 1643.98,1219.65 1644.57,1219.65 1645.15,1219.65 1645.74,1219.65 1646.33,1219.65 1646.91,1219.65 1647.5,1219.65 1648.09,1219.65 1648.67,1219.65 1649.26,1219.65 1649.84,1219.65 1650.43,1219.65 1651.02,1219.65 1651.6,1219.65 1652.19,1219.65 1652.78,1219.65 1653.36,1219.65 1653.95,1219.65 1654.54,1219.65 1655.12,1219.65 1655.71,1219.65 1656.29,1219.65 1656.88,1219.65 1657.47,1219.65 1658.05,1219.65 1658.64,1219.65 1659.23,1219.65 1659.81,1219.65 1660.4,1219.65 1660.99,1219.65 1661.57,1219.65 1662.16,1219.65 1662.75,1219.65 1663.33,1219.65 1663.92,1219.65 1664.5,1219.65 1665.09,1219.65 1665.68,1219.65 1666.26,1219.65 1666.85,1219.65 1667.44,1219.65 1668.02,1219.65 1668.61,1219.65 1669.2,1219.65 1669.78,1219.65 1670.37,1219.65 1670.96,1219.65 1671.54,1219.65 1672.13,1219.65 1672.71,1219.65 1673.3,1219.65 1673.89,1219.65 1674.47,1219.65 1675.06,1219.65 1675.65,1219.65 1676.23,1219.65 1676.82,1219.65 1677.41,1219.65 1677.99,1219.65 1678.58,1219.65 1679.17,1219.65 1679.75,1219.65 1680.34,1219.65 1680.92,1219.65 1681.51,1219.65 1682.1,1219.65 1682.68,1219.65 1683.27,1219.65 1683.86,1219.65 1684.44,1219.65 1685.03,1219.65 1685.62,1219.65 1686.2,1219.65 1686.79,1219.65 1687.37,1219.65 1687.96,1219.65 1688.55,1219.65 1689.13,1219.65 1689.72,1219.65 1690.31,1219.65 1690.89,1219.65 1691.48,1219.65 1692.07,1219.65 1692.65,1219.65 1693.24,1219.65 1693.83,1219.65 1694.41,1219.65 1695,1219.65 1695.58,1219.65 1696.17,1219.65 1696.76,1219.65 1697.34,1219.65 1697.93,1219.65 1698.52,1219.65 1699.1,1219.65 1699.69,1219.65 1700.28,1219.65 1700.86,1219.65 1701.45,1219.65 1702.04,1219.65 1702.62,1219.65 1703.21,1219.65 1703.79,1219.65 1704.38,1219.65 1704.97,1219.65 1705.55,1219.65 1706.14,1219.65 1706.73,1219.65 1707.31,1219.65 1707.9,1219.65 1708.49,1219.65 1709.07,1219.65 1709.66,1219.65 1710.24,1219.65 1710.83,1219.65 1711.42,1219.65 1712,1219.65 1712.59,1219.65 1713.18,1219.65 1713.76,1219.65 1714.35,1219.65 1714.94,1219.65 1715.52,1219.65 1716.11,1219.65 1716.7,1219.65 1717.28,1219.65 1717.87,1219.65 1718.45,1219.65 1719.04,1219.65 1719.63,1219.65 1720.21,1219.65 1720.8,1219.65 1721.39,1219.65 1721.97,1219.65 1722.56,1219.65 1723.15,1219.65 1723.73,1219.65 1724.32,1219.65 1724.91,1219.65 1725.49,1219.65 1726.08,1219.65 1726.66,1219.65 1727.25,1219.65 1727.84,1219.65 1728.42,1219.65 1729.01,1219.65 1729.6,1219.65 1730.18,1219.65 1730.77,1219.65 1731.36,1219.65 1731.94,1219.65 1732.53,1219.65 1733.11,1219.65 1733.7,1219.65 1734.29,1219.65 1734.87,1219.65 1735.46,1219.65 1736.05,1219.65 1736.63,1219.65 1737.22,1219.65 1737.81,1219.65 1738.39,1219.65 1738.98,1219.65 1739.57,1219.65 1740.15,1219.65 1740.74,1219.65 1741.32,1219.65 1741.91,1219.65 1742.5,1219.65 1743.08,1219.65 1743.67,1219.65 1744.26,1219.65 1744.84,1219.65 1745.43,1219.65 1746.02,1219.65 1746.6,1219.65 1747.19,1219.65 1747.78,1219.65 1748.36,1219.65 1748.95,1219.65 1749.53,1219.65 1750.12,1219.65 1750.71,1219.65 1751.29,1219.65 1751.88,1219.65 1752.47,1219.65 1753.05,1219.65 1753.64,1219.65 1754.23,1219.65 1754.81,1219.65 1755.4,1219.65 1755.99,1219.65 1756.57,1219.65 1757.16,1219.65 1757.74,1219.65 1758.33,1219.65 1758.92,1219.65 1759.5,1219.65 1760.09,1219.65 1760.68,1219.65 1761.26,1219.65 1761.85,1219.65 1762.44,1219.65 1763.02,1219.65 1763.61,1219.65 1764.19,1219.65 1764.78,1219.65 1765.37,1219.65 1765.95,1219.65 1766.54,1219.65 1767.13,1219.65 1767.71,1219.65 1768.3,1219.65 1768.89,1219.65 1769.47,1219.65 1770.06,1219.65 1770.65,1219.65 1771.23,1219.65 1771.82,1219.65 1772.4,1219.65 1772.99,1219.65 1773.58,1219.65 1774.16,1219.65 1774.75,1219.65 1775.34,1219.65 1775.92,1219.65 1776.51,1219.65 1777.1,1219.65 1777.68,1219.65 1778.27,1219.65 1778.86,1219.65 1779.44,1219.65 1780.03,1219.65 1780.61,1219.65 1781.2,1219.65 1781.79,1219.65 1782.37,1219.65 1782.96,1219.65 1783.55,1219.65 1784.13,1219.65 1784.72,1219.65 1785.31,1219.65 1785.89,1219.65 1786.48,1219.65 1787.06,1219.65 1787.65,1219.65 1788.24,1219.65 1788.82,1219.65 1789.41,1219.65 1790,1219.65 1790.58,1219.65 1791.17,1219.65 1791.76,1219.65 1792.34,1219.65 1792.93,1219.65 1793.52,1219.65 1794.1,1219.65 1794.69,1219.65 1795.27,1219.65 1795.86,1219.65 1796.45,1219.65 1797.03,1219.65 1797.62,1219.65 1798.21,1219.65 1798.79,1219.65 1799.38,1219.65 1799.97,1219.65 1800.55,1219.65 1801.14,1219.65 1801.73,1219.65 1802.31,1219.65 1802.9,1219.65 1803.48,1219.65 1804.07,1219.65 1804.66,1219.65 1805.24,1219.65 1805.83,1219.65 1806.42,1219.65 1807,1219.65 1807.59,1219.65 1808.18,1219.65 1808.76,1219.65 1809.35,1219.65 1809.94,1219.65 1810.52,1219.65 1811.11,1219.65 1811.69,1219.65 1812.28,1219.65 1812.87,1219.65 1813.45,1219.65 1814.04,1219.65 1814.63,1219.65 1815.21,1219.65 1815.8,1219.65 1816.39,1219.65 1816.97,1219.65 1817.56,1219.65 1818.14,1219.65 1818.73,1219.65 1819.32,1219.65 1819.9,1219.65 1820.49,1219.65 1821.08,1219.65 1821.66,1219.65 1822.25,1219.65 1822.84,1219.65 1823.42,1219.65 1824.01,1219.65 1824.6,1219.65 1825.18,1219.65 1825.77,1219.65 1826.35,1219.65 1826.94,1219.65 1827.53,1219.65 1828.11,1219.65 1828.7,1219.65 1829.29,1219.65 1829.87,1219.65 1830.46,1219.65 1831.05,1219.65 1831.63,1219.65 1832.22,1219.65 1832.81,1219.65 1833.39,1219.65 1833.98,1219.65 1834.56,1219.65 1835.15,1219.65 1835.74,1219.65 1836.32,1219.65 1836.91,1219.65 1837.5,1219.65 1838.08,1219.65 1838.67,1219.65 1839.26,1219.65 1839.84,1219.65 1840.43,1219.65 1841.01,1219.65 1841.6,1219.65 1842.19,1219.65 1842.77,1219.65 1843.36,1219.65 1843.95,1219.65 1844.53,1219.65 1845.12,1219.65 1845.71,1219.65 1846.29,1219.65 1846.88,1219.65 1847.47,1219.65 1848.05,1219.65 1848.64,1219.65 1849.22,1219.65 1849.81,1219.65 1850.4,1219.65 1850.98,1219.65 1851.57,1219.65 1852.16,1219.65 1852.74,1219.65 1853.33,1219.65 1853.92,1219.65 1854.5,1219.65 1855.09,1219.65 1855.68,1219.65 1856.26,1219.65 1856.85,1219.65 1857.43,1219.65 1858.02,1219.65 1858.61,1219.65 1859.19,1219.65 1859.78,1219.65 1860.37,1219.65 1860.95,1219.65 1861.54,1219.65 1862.13,1219.65 1862.71,1219.65 1863.3,1219.65 1863.88,1219.65 1864.47,1219.65 1865.06,1219.65 1865.64,1219.65 1866.23,1219.65 1866.82,1219.65 1867.4,1219.65 1867.99,1219.65 1868.58,1219.65 1869.16,1219.65 1869.75,1219.65 1870.34,1219.65 1870.92,1219.65 1871.51,1219.65 1872.09,1219.65 1872.68,1219.65 1873.27,1219.65 1873.85,1219.65 1874.44,1219.65 1875.03,1219.65 1875.61,1219.65 1876.2,1219.65 1876.79,1219.65 1877.37,1219.65 1877.96,1219.65 1878.55,1219.65 1879.13,1219.65 1879.72,1219.65 1880.3,1219.65 1880.89,1219.65 1881.48,1219.65 1882.06,1219.65 1882.65,1219.65 1883.24,1219.65 1883.82,1219.65 1884.41,1219.65 1885,1219.65 1885.58,1219.65 1886.17,1219.65 1886.76,1219.65 1887.34,1219.65 1887.93,1219.65 1888.51,1219.65 1889.1,1219.65 1889.69,1219.65 1890.27,1219.65 1890.86,1219.65 1891.45,1219.65 1892.03,1219.65 1892.62,1219.65 1893.21,1219.65 1893.79,1219.65 1894.38,1219.65 1894.96,1219.65 1895.55,1219.65 1896.14,1219.65 1896.72,1219.65 1897.31,1219.65 1897.9,1219.65 1898.48,1219.65 1899.07,1219.65 1899.66,1219.65 1900.24,1219.65 1900.83,1219.65 1901.42,1219.65 1902,1219.65 1902.59,1219.65 1903.17,1219.65 1903.76,1219.65 1904.35,1219.65 1904.93,1219.65 1905.52,1219.65 1906.11,1219.65 1906.69,1219.65 1907.28,1219.65 1907.87,1219.65 1908.45,1219.65 1909.04,1219.65 1909.63,1219.65 1910.21,1219.65 1910.8,1219.65 1911.38,1219.65 1911.97,1219.65 1912.56,1219.65 1913.14,1219.65 1913.73,1219.65 1914.32,1219.65 1914.9,1219.65 1915.49,1219.65 1916.08,1219.65 1916.66,1219.65 1917.25,1219.65 1917.83,1219.65 1918.42,1219.65 1919.01,1219.65 1919.59,1219.65 1920.18,1219.65 1920.77,1219.65 1921.35,1219.65 1921.94,1219.65 1922.53,1219.65 1923.11,1219.65 1923.7,1219.65 1924.29,1219.65 1924.87,1219.65 1925.46,1219.65 1926.04,1219.65 1926.63,1219.65 1927.22,1219.65 1927.8,1219.65 1928.39,1219.65 1928.98,1219.65 1929.56,1219.65 1930.15,1219.65 1930.74,1219.65 1931.32,1219.65 1931.91,1219.65 1932.5,1219.65 1933.08,1219.65 1933.67,1219.65 1934.25,1219.65 1934.84,1219.65 1935.43,1219.65 1936.01,1219.65 1936.6,1219.65 1937.19,1219.65 1937.77,1219.65 1938.36,1219.65 1938.95,1219.65 1939.53,1219.65 1940.12,1219.65 1940.71,1219.65 1941.29,1219.65 1941.88,1219.65 1942.46,1219.65 1943.05,1219.65 1943.64,1219.65 1944.22,1219.65 1944.81,1219.65 1945.4,1219.65 1945.98,1219.65 1946.57,1219.65 1947.16,1219.65 1947.74,1219.65 1948.33,1219.65 1948.91,1219.65 1949.5,1219.65 1950.09,1219.65 1950.67,1219.65 1951.26,1219.65 1951.85,1219.65 1952.43,1219.65 1953.02,1219.65 1953.61,1219.65 1954.19,1219.65 1954.78,1219.65 1955.37,1219.65 1955.95,1219.65 1956.54,1219.65 1957.12,1219.65 1957.71,1219.65 1958.3,1219.65 1958.88,1219.65 1959.47,1219.65 1960.06,1219.65 1960.64,1219.65 1961.23,1219.65 1961.82,1219.65 1962.4,1219.65 1962.99,1219.65 1963.58,1219.65 1964.16,1219.65 1964.75,1219.65 1965.33,1219.65 1965.92,1219.65 1966.51,1219.65 1967.09,1219.65 1967.68,1219.65 1968.27,1219.65 1968.85,1219.65 1969.44,1219.65 1970.03,1219.65 1970.61,1219.65 1971.2,1219.65 1971.78,1219.65 1972.37,1219.65 1972.96,1219.65 1973.54,1219.65 1974.13,1219.65 1974.72,1219.65 1975.3,1219.65 1975.89,1219.65 1976.48,1219.65 1977.06,1219.65 1977.65,1219.65 1978.24,1219.65 1978.82,1219.65 1979.41,1219.65 1979.99,1219.65 1980.58,1219.65 1981.17,1219.65 1981.75,1219.65 1982.34,1219.65 1982.93,1219.65 1983.51,1219.65 1984.1,1219.65 1984.69,1219.65 1985.27,1219.65 1985.86,1219.65 1986.45,1219.65 1987.03,1219.65 1987.62,1219.65 1988.2,1219.65 1988.79,1219.65 1989.38,1219.65 1989.96,1219.65 1990.55,1219.65 1991.14,1219.65 1991.72,1219.65 1992.31,1219.65 1992.9,1219.65 1993.48,1219.65 1994.07,1219.65 1994.65,1219.65 1995.24,1219.65 1995.83,1219.65 1996.41,1219.65 1997,1219.65 1997.59,1219.65 1998.17,1219.65 1998.76,1219.65 1999.35,1219.65 1999.93,1219.65 2000.52,1219.65 2001.11,1219.65 2001.69,1219.65 2002.28,1219.65 2002.86,1219.65 2003.45,1219.65 2004.04,1219.65 2004.62,1219.65 2005.21,1219.65 2005.8,1219.65 2006.38,1219.65 2006.97,1219.65 2007.56,1219.65 2008.14,1219.65 2008.73,1219.65 2009.32,1219.65 2009.9,1219.65 2010.49,1219.65 2011.07,1219.65 2011.66,1219.65 2012.25,1219.65 2012.83,1219.65 2013.42,1219.65 2014.01,1219.65 2014.59,1219.65 2015.18,1219.65 2015.77,1219.65 2016.35,1219.65 2016.94,1219.65 2017.53,1219.65 2018.11,1219.65 2018.7,1219.65 2019.28,1219.65 2019.87,1219.65 2020.46,1219.65 2021.04,1219.65 2021.63,1219.65 2022.22,1219.65 2022.8,1219.65 2023.39,1219.65 2023.98,1219.65 2024.56,1219.65 2025.15,1219.65 2025.73,1219.65 2026.32,1219.65 2026.91,1219.65 2027.49,1219.65 2028.08,1219.65 2028.67,1219.65 2029.25,1219.65 2029.84,1219.65 2030.43,1219.65 2031.01,1219.65 2031.6,1219.65 2032.19,1219.65 2032.77,1219.65 2033.36,1219.65 2033.94,1219.65 2034.53,1219.65 2035.12,1219.65 2035.7,1219.65 2036.29,1219.65 2036.88,1219.65 2037.46,1219.65 2038.05,1219.65 2038.64,1219.65 2039.22,1219.65 2039.81,1219.65 2040.4,1219.65 2040.98,1219.65 2041.57,1219.65 2042.15,1219.65 2042.74,1219.65 2043.33,1219.65 2043.91,1219.65 2044.5,1219.65 2045.09,1219.65 2045.67,1219.65 2046.26,1219.65 2046.85,1219.65 2047.43,1219.65 2048.02,1219.65 2048.6,1219.65 2049.19,1219.65 2049.78,1219.65 2050.36,1219.65 2050.95,1219.65 2051.54,1219.65 2052.12,1219.65 2052.71,1219.65 2053.3,1219.65 2053.88,1219.65 2054.47,1219.65 2055.06,1219.65 2055.64,1219.65 2056.23,1219.65 2056.81,1219.65 2057.4,1219.65 2057.99,1219.65 2058.57,1219.65 2059.16,1219.65 2059.75,1219.65 2060.33,1219.65 2060.92,1219.65 2061.51,1219.65 2062.09,1219.65 2062.68,1219.65 2063.27,1219.65 2063.85,1219.65 2064.44,1219.65 2065.02,1219.65 2065.61,1219.65 2066.2,1219.65 2066.78,1219.65 2067.37,1219.65 2067.96,1219.65 2068.54,1219.65 2069.13,1219.65 2069.72,1219.65 2070.3,1219.65 2070.89,1219.65 2071.48,1219.65 2072.06,1219.65 2072.65,1219.65 2073.23,1219.65 2073.82,1219.65 2074.41,1219.65 2074.99,1219.65 2075.58,1219.65 2076.17,1219.65 2076.75,1219.65 2077.34,1219.65 2077.93,1219.65 2078.51,1219.65 2079.1,1219.65 2079.68,1219.65 2080.27,1219.65 2080.86,1219.65 2081.44,1219.65 2082.03,1219.65 2082.62,1219.65 2083.2,1219.65 2083.79,1219.65 2084.38,1219.65 2084.96,1219.65 2085.55,1219.65 2086.14,1219.65 2086.72,1219.65 2087.31,1219.65 2087.89,1219.65 2088.48,1219.65 2089.07,1219.65 2089.65,1219.65 2090.24,1219.65 2090.83,1219.65 2091.41,1219.65 2092,1219.65 2092.59,1219.65 2093.17,1219.65 2093.76,1219.65 2094.35,1219.65 2094.93,1219.65 2095.52,1219.65 2096.1,1219.65 2096.69,1219.65 2097.28,1219.65 2097.86,1219.65 2098.45,1219.65 2099.04,1219.65 2099.62,1219.65 2100.21,1219.65 2100.8,1219.65 2101.38,1219.65 2101.97,1219.65 2102.55,1219.65 2103.14,1219.65 2103.73,1219.65 2104.31,1219.65 2104.9,1219.65 2105.49,1219.65 2106.07,1219.65 2106.66,1219.65 2107.25,1219.65 2107.83,1219.65 2108.42,1219.65 2109.01,1219.65 2109.59,1219.65 2110.18,1219.65 2110.76,1219.65 2111.35,1219.65 2111.94,1219.65 2112.52,1219.65 2113.11,1219.65 2113.7,1219.65 2114.28,1219.65 2114.87,1219.65 2115.46,1219.65 2116.04,1219.65 2116.63,1219.65 2117.22,1219.65 2117.8,1219.65 2118.39,1219.65 2118.97,1219.65 2119.56,1219.65 2120.15,1219.65 2120.73,1219.65 2121.32,1219.65 2121.91,1219.65 2122.49,1219.65 2123.08,1219.65 2123.67,1219.65 2124.25,1219.65 2124.84,1219.65 2125.42,1219.65 2126.01,1219.65 2126.6,1219.65 2127.18,1219.65 2127.77,1219.65 2128.36,1219.65 2128.94,1219.65 2129.53,1219.65 2130.12,1219.65 2130.7,1219.65 2131.29,1219.65 2131.88,1219.65 2132.46,1219.65 2133.05,1219.65 2133.63,1219.65 2134.22,1219.65 2134.81,1219.65 2135.39,1219.65 2135.98,1219.65 2136.57,1219.65 2137.15,1219.65 2137.74,1219.65 2138.33,1219.65 2138.91,1219.65 2139.5,1219.65 2140.09,1219.65 2140.67,1219.65 2141.26,1219.65 2141.84,1219.65 2142.43,1219.65 2143.02,1219.65 2143.6,1219.65 2144.19,1219.65 2144.78,1219.65 2145.36,1219.65 2145.95,1219.65 2146.54,1219.65 2147.12,1219.65 2147.71,1219.65 2148.3,1219.65 2148.88,1219.65 2149.47,1219.65 2150.05,1219.65 2150.64,1219.65 2151.23,1219.65 2151.81,1219.65 2152.4,1219.65 2152.99,1219.65 2153.57,1219.65 2154.16,1219.65 2154.75,1219.65 2155.33,1219.65 2155.92,1219.65 2156.5,1219.65 2157.09,1219.65 2157.68,1219.65 2158.26,1219.65 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.81,1200.96 1397.71,899.083 \"/>\n<polyline clip-path=\"url(#clip622)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1237.92 985.439,1200.96 2158.26,1200.96 2158.26,1237.92 985.439,1237.92 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip620)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip620)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip623\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip620)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip620)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip620)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip623)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-32.6883 161.555,-1471.99 162.114,-2803.74 162.673,-4025.81 163.232,-3762.87 163.792,-4855.05 164.351,-4630.6 164.91,-5585.15 165.469,-6439.63 166.029,-7236.05 166.588,-6969.71 167.147,-7665.85 167.706,-8308.86 168.266,-8874.05 168.825,-9396.66 169.384,-9864.43 169.943,-10264.7 170.503,-10634.1 171.062,-10309.2 171.621,-10619.5 172.18,-10881.1 172.74,-11113.7 173.299,-10808 173.858,-10991.5 174.417,-11136.8 174.977,-10817.8 175.536,-10564.6 176.095,-10664.9 176.655,-10413.6 177.214,-9858.9 177.773,-9654.8 178.332,-9450.46 178.892,-9521.62 179.451,-9341.79 180.01,-9152.08 180.569,-8980.07 181.129,-9026.65 181.688,-8656.17 182.247,-8665.65 182.806,-8508.67 183.366,-8485.41 183.925,-8322.66 184.484,-8148.63 185.043,-7982.67 185.603,-7812.21 186.162,-7765.12 186.721,-7469.49 187.28,-7303.87 187.84,-6945.33 188.399,-6899.19 188.958,-6755.65 189.517,-6602.85 190.077,-6448.97 190.636,-6369.75 191.195,-6224.66 191.754,-6001.43 192.314,-5926.88 192.873,-5780.41 193.432,-5705.87 193.991,-5561.74 194.551,-5417.23 195.11,-5200.4 195.669,-5118.03 196.228,-4982.72 196.788,-4847.27 197.347,-4606.81 197.906,-4278.07 198.465,-4171.69 199.025,-4104.81 199.584,-3851.85 200.143,-3796.83 200.702,-3737.57 201.262,-3672.01 201.821,-3603.34 202.38,-3411.42 202.939,-3304.58 203.499,-3200.71 204.058,-3059.3 204.617,-2957.21 205.176,-2894.06 205.736,-2828.15 206.295,-2729.99 206.854,-2666.69 207.413,-2572.27 207.973,-2475.6 208.532,-2286.03 209.091,-2225.11 209.65,-2105.94 210.21,-2019.22 210.769,-1933.38 211.328,-1820.7 211.887,-1768.7 212.447,-1690.21 213.006,-1638.89 213.565,-1532.09 214.124,-1407.01 214.684,-1257.78 215.243,-1194.47 215.802,-1106.14 216.361,-1045.6 216.921,-984.868 217.48,-898.441 218.039,-812.609 218.598,-730.759 219.158,-675.53 219.717,-624.792 220.276,-595.094 220.835,-563.909 221.395,-468.799 221.954,-414.415 222.513,-343.709 223.072,-254.675 223.632,-211.324 224.191,-193.877 224.75,-129.405 225.309,-67.6907 225.869,-73.833 226.428,27.8559 226.987,60.1674 227.546,135.353 228.106,126.229 228.665,161.858 229.224,177.349 229.783,193.151 230.343,185.728 230.902,201.96 231.461,235.358 232.02,371.194 232.58,379.919 233.139,387.14 233.698,416.103 234.257,444.02 234.817,455.812 235.376,480.384 235.935,508.944 236.494,515.19 237.054,500.724 237.613,509.586 238.172,535.612 238.731,543.592 239.291,569.152 239.85,596.094 240.409,620.471 240.968,643.404 241.528,742.196 242.087,758.348 242.646,756.52 243.205,844.099 243.765,878.553 244.324,888.793 244.883,900.633 245.442,857.302 246.002,850.196 246.561,847.392 247.12,843.154 247.679,860.61 248.239,912.429 248.798,924.77 249.357,916.204 249.916,964.282 250.476,971.425 251.035,944.938 251.594,942.314 252.153,951.397 252.713,909.019 253.272,942.478 253.831,953.898 254.39,964.398 254.95,979.642 255.509,1009.24 256.068,999.335 256.627,1043.11 257.187,1048.14 257.746,1038.5 258.305,1027.69 258.864,1036.6 259.424,1009.45 259.983,1014.79 260.542,992.164 261.101,970.873 261.661,946.815 262.22,939.942 262.779,967.443 263.338,961.419 263.898,977.102 264.457,989.212 265.016,1015.9 265.575,991.815 266.135,1003.42 266.694,1011.57 267.253,1019.21 267.812,1028.3 268.372,1003.13 268.931,980.653 269.49,976.25 270.049,951.992 270.609,948.564 271.168,981.002 271.727,990.641 272.286,987.737 272.846,982.019 273.405,978.723 273.964,971.193 274.523,965.849 275.083,1028.62 275.642,1037.46 276.201,1034.01 276.76,1030.08 277.32,1025.42 277.879,969.394 278.438,964.876 278.997,944.18 279.557,961.537 280.116,940.738 280.675,972.531 281.234,967.587 281.794,964.177 282.353,965.861 282.912,945.884 283.471,1010.52 284.031,989.666 284.59,966.227 285.149,995.256 285.708,957.765 286.268,953.241 286.827,951.744 287.386,979.147 287.945,974.83 288.505,986.353 289.064,1015.22 289.623,1012.3 290.182,971.791 290.742,984.554 291.301,997.864 291.86,988.414 292.419,1002.29 292.979,1012.05 293.538,1004.93 294.097,999.775 294.656,1013.1 295.216,1010.01 295.775,1000.87 296.334,1027.72 296.893,989.668 297.453,986.557 298.012,996.976 298.571,1025.73 299.13,1016.52 299.69,1004.91 300.249,1013.59 300.808,1037.7 301.368,1013.52 301.927,1039.14 302.486,1015.73 303.045,1027.43 303.605,1001.93 304.164,1012.08 304.723,1020.79 305.282,1045.02 305.842,1034.7 306.401,1027.78 306.96,1003.18 307.519,994.183 308.079,989.202 308.638,980.965 309.197,972.194 309.756,984.926 310.316,997.043 310.875,1008.32 311.434,984.382 311.993,978.395 312.553,970.073 313.112,977.125 313.671,957.857 314.23,954.717 314.79,948.032 315.349,959.609 315.908,952.357 316.467,995.343 317.027,989.667 317.586,985.279 318.145,977.665 318.704,967.873 319.264,960.154 319.823,969.581 320.382,978.173 320.941,971.372 321.501,963.365 322.06,940.017 322.619,953.607 323.178,949.543 323.738,924.913 324.297,906.332 324.856,920.781 325.415,931.713 325.975,927.485 326.534,955.845 327.093,951.535 327.652,962.526 328.212,956.024 328.771,948.25 329.33,943.126 329.889,950.674 330.449,930.118 331.008,953.864 331.567,929.944 332.126,938.728 332.686,934.649 333.245,926.419 333.804,920.556 334.363,950.13 334.923,894.619 335.482,907.881 336.041,920.215 336.6,914.093 337.16,893.958 337.719,890.845 338.278,889.97 338.837,921.034 339.397,934.525 339.956,932.183 340.515,927.048 341.074,905.473 341.634,901.347 342.193,881.041 342.752,909.096 343.311,856.335 343.871,838.407 344.43,837.983 344.989,854.066 345.548,867.257 346.108,864.844 346.667,898.17 347.226,926.596 347.785,923.401 348.345,906.035 348.904,919.334 349.463,899.83 350.022,910.812 350.582,871.087 351.141,867.16 351.7,878.851 352.259,889.667 352.819,917.646 353.378,925.591 353.937,955.241 354.496,951.037 355.056,964.217 355.615,957.035 356.174,920.546 356.733,919.51 357.293,932.458 357.852,893.713 358.411,856.661 358.97,840.984 359.53,872.89 360.089,840 360.648,837.7 361.207,847.965 361.767,843.612 362.326,843.917 362.885,823.191 363.444,839.601 364.004,885.466 364.563,899.05 365.122,895.05 365.681,893.84 366.241,855.275 366.8,884.576 367.359,814.765 367.918,830.523 368.478,814.161 369.037,813.825 369.596,814.235 370.155,799.564 370.715,800.357 371.274,815.004 371.833,813.077 372.392,807.793 372.952,804.697 373.511,819.814 374.07,866.262 374.629,862.624 375.189,889.732 375.748,885.267 376.307,898.412 376.866,942.983 377.426,932.252 377.985,956.251 378.544,929.648 379.103,936.326 379.663,914.878 380.222,941.895 380.781,933.998 381.34,944.454 381.9,920.163 382.459,946.908 383.018,955.358 383.577,913.869 384.137,890.475 384.696,886.251 385.255,915.744 385.814,909.477 386.374,921.674 386.933,883.711 387.492,863.607 388.051,855.457 388.611,835.963 389.17,833.788 389.729,833.22 390.288,864.78 390.848,881.388 391.407,892.152 391.966,885.003 392.525,893.625 393.085,890.831 393.644,897.338 394.203,905.965 394.762,894.094 395.322,871.446 395.881,868.067 396.44,846.049 396.999,827.884 397.559,874.869 398.118,870.61 398.677,849.039 399.236,862.995 399.796,859.799 400.355,851.742 400.914,877.767 401.473,884.396 402.033,897.514 402.592,857.989 403.151,821.739 403.71,784.118 404.27,819.013 404.829,815.519 405.388,827.518 405.947,841.652 406.507,820.531 407.066,814.27 407.625,812.133 408.184,825.986 408.744,840.127 409.303,801.307 409.862,798.857 410.421,798.252 410.981,809.807 411.54,823.44 412.099,802.564 412.658,801.257 413.218,831.517 413.777,860.999 414.336,856.927 414.895,820.674 415.455,818.748 416.014,815.055 416.573,812.42 417.132,792.311 417.692,755.637 418.251,689.533 418.81,705.501 419.369,694.939 419.929,703.082 420.488,673.445 421.047,676.078 421.606,680.858 422.166,719.882 422.725,740.366 423.284,728.88 423.843,697.593 424.403,702.434 424.962,690.713 425.521,690.32 426.08,647.862 426.64,654.448 427.199,691.837 427.758,677.881 428.318,682.709 428.877,703.106 429.436,705.901 429.995,689.127 430.555,709.715 431.114,729.786 431.673,730.542 432.232,730.632 432.792,745.597 433.351,765.002 433.91,764.125 434.469,795.489 435.029,826.643 435.588,791.047 436.147,806.08 436.706,789.411 437.266,738.134 437.825,726.114 438.384,677.789 438.943,681.872 439.503,685.788 440.062,720.81 440.621,724.279 441.18,742.35 441.74,744.47 442.299,765.841 442.858,778.409 443.417,792.379 443.977,807.166 444.536,806.83 445.095,801.891 445.654,799.63 446.214,800.114 446.773,831.183 447.332,828.225 447.891,808.7 448.451,771.519 449.01,737.798 449.569,738.31 450.128,755.799 450.688,720.358 451.247,722.372 451.806,740.829 452.365,739.903 452.925,789.767 453.484,802.379 454.043,802.216 454.602,786.132 455.162,785.599 455.721,796.32 456.28,795.267 456.839,822.213 457.399,832.82 457.958,858.188 458.517,849.98 459.076,859.882 459.636,835.767 460.195,879.358 460.754,823.712 461.313,817.371 461.873,814.928 462.432,815.287 462.991,811.804 463.55,839.242 464.11,834.582 464.669,798.555 465.228,791.192 465.787,817.758 466.347,842.77 466.906,789.496 467.465,754.139 468.024,750.043 468.584,784.525 469.143,784.287 469.702,801.022 470.261,784.217 470.821,764.649 471.38,795.095 471.939,729.031 472.498,714.961 473.058,702.808 473.617,703.808 474.176,671.636 474.735,642.504 475.295,665.84 475.854,699.731 476.413,702.117 476.972,687.2 477.532,688.911 478.091,723.845 478.65,741.348 479.209,752.237 479.769,734.757 480.328,750.702 480.887,754.776 481.446,735.586 482.006,748.526 482.565,749.843 483.124,746.845 483.683,762.912 484.243,781.452 484.802,795.098 485.361,792.925 485.92,775.947 486.48,802.769 487.039,848.352 487.598,841.006 488.157,868.261 488.717,874.762 489.276,852.311 489.835,860.409 490.394,823.874 490.954,819.065 491.513,833.848 492.072,845.42 492.631,823.042 493.191,819.099 493.75,780.809 494.309,760.192 494.868,790.559 495.428,798.714 495.987,781.116 496.546,745.124 497.105,746.861 497.665,731.953 498.224,749.458 498.783,732.837 499.342,747.748 499.902,780.674 500.461,761.602 501.02,763.716 501.579,730.484 502.139,715.531 502.698,714.509 503.257,714.466 503.816,732.221 504.376,728.131 504.935,725.312 505.494,736.924 506.053,719.534 506.613,701.861 507.172,752.472 507.731,722.133 508.29,706.657 508.85,720.864 509.409,754.169 509.968,781.11 510.527,776.792 511.087,785.732 511.646,797.29 512.205,759.885 512.764,745.956 513.324,726.85 513.883,710.13 514.442,709.697 515.001,711.014 515.561,742.849 516.12,724.942 516.679,725.439 517.238,723.439 517.798,740.614 518.357,773.161 518.916,771.667 519.475,783.232 520.035,780.03 520.594,811.146 521.153,803.835 521.712,783.623 522.272,796.175 522.831,774.799 523.39,772.005 523.949,770.61 524.509,752.753 525.068,751.13 525.627,767.287 526.186,764.442 526.746,796.16 527.305,792.325 527.864,803.618 528.423,818.091 528.983,810.79 529.542,819.93 530.101,798.106 530.66,762.407 531.22,761.555 531.779,739.606 532.338,725.514 532.897,741.133 533.457,738.689 534.016,703.979 534.575,689.377 535.134,690.723 535.694,708.686 536.253,710.805 536.812,678.285 537.371,681.232 537.931,698.509 538.49,697.775 539.049,680.174 539.608,649.954 540.168,655.024 540.727,676.728 541.286,629.53 541.845,670.292 542.405,672.967 542.964,660.657 543.523,648.716 544.082,618.567 544.642,607.092 545.201,663.818 545.76,667.272 546.319,654.711 546.879,671.685 547.438,686.251 547.997,671.11 548.556,656.328 549.116,642.127 549.675,647.364 550.234,654.034 550.793,654.829 551.353,656.435 551.912,642.348 552.471,632.678 553.031,639.311 553.59,626.91 554.149,629.865 554.708,603.831 555.268,676.004 555.827,646.176 556.386,682.93 556.945,699.582 557.505,746.641 558.064,760.383 558.623,743.574 559.182,756.953 559.742,786.685 560.301,735.852 560.86,732.712 561.419,747.738 561.979,745.159 562.538,745.433 563.097,731.637 563.656,711.46 564.216,729.695 564.775,728.883 565.334,746.055 565.893,825.949 566.453,805.277 567.012,780.788 567.571,763.756 568.13,743.142 568.69,739.791 569.249,738.48 569.808,767.492 570.367,762.554 570.927,778.292 571.486,744.252 572.045,726.142 572.604,692.701 573.164,677.501 573.723,692.812 574.282,692.476 574.841,692.219 575.401,678.878 575.96,678.639 576.519,682.017 577.078,648.893 577.638,632.624 578.197,651.597 578.756,670.694 579.315,705.39 579.875,706.587 580.434,706.002 580.993,711.007 581.552,694.947 582.112,714.199 582.671,712.373 583.23,709.996 583.789,677.169 584.349,674.043 584.908,678.071 585.467,663.62 586.026,632.678 586.586,653.8 587.145,656.911 587.704,644.643 588.263,662.516 588.823,682.127 589.382,699.565 589.941,702.177 590.5,715.074 591.06,746.039 591.619,759.178 592.178,758.337 592.737,768.398 593.297,783.025 593.856,797.5 594.415,777.381 594.974,757.434 595.534,723.403 596.093,736.393 596.652,733.751 597.211,732.869 597.771,697.246 598.33,696.922 598.889,697.189 599.448,745.574 600.008,762.488 600.567,744.67 601.126,710.038 601.685,741.055 602.245,739.022 602.804,724.598 603.363,738.156 603.922,740.469 604.482,769.084 605.041,750.498 605.6,766.002 606.159,762.619 606.719,777.998 607.278,789.338 607.837,751.802 608.396,733.06 608.956,732.334 609.515,764.074 610.074,744.544 610.633,742.5 611.193,759.365 611.752,740.01 612.311,719.892 612.87,686.57 613.43,733.749 613.989,748.29 614.548,760.316 615.107,758.506 615.667,738.208 616.226,739.214 616.785,702.994 617.344,717.362 617.904,750.913 618.463,733.38 619.022,717.17 619.581,701 620.141,715.908 620.7,700.521 621.259,701.78 621.818,684.622 622.378,671.599 622.937,671.755 623.496,672.781 624.055,673.118 624.615,691.977 625.174,662.27 625.733,683.063 626.292,668.634 626.852,734.657 627.411,703.205 627.97,684.268 628.529,636.688 629.089,608.839 629.648,692.825 630.207,707.702 630.766,706.413 631.326,653.833 631.885,624.031 632.444,615.031 633.003,655.899 633.563,708.496 634.122,693.098 634.681,693.153 635.24,693.135 635.8,710.181 636.359,694.688 636.918,709.715 637.477,676.505 638.037,680.185 638.596,632.172 639.155,666.436 639.714,667.988 640.274,621.439 640.833,659.708 641.392,679.201 641.951,665.893 642.511,654.396 643.07,643.873 643.629,666.226 644.188,683.716 644.748,686.66 645.307,718.885 645.866,719.299 646.425,686.723 646.985,686.234 647.544,670.437 648.103,688.348 648.662,657.402 649.222,676.538 649.781,677.215 650.34,677.052 650.899,677.529 651.459,680.666 652.018,682.378 652.577,717.165 653.136,732.035 653.696,731.195 654.255,745.974 654.814,761.29 655.373,776.854 655.933,757.492 656.492,770.59 657.051,749.265 657.61,765.774 658.17,790.655 658.729,801.072 659.288,779.967 659.847,759.369 660.407,741.966 660.966,772.067 661.525,767.985 662.084,795.71 662.644,771.405 663.203,797.826 663.762,793.601 664.321,773.246 664.881,818.4 665.44,778.874 665.999,756.151 666.558,768.925 667.118,781.204 667.677,775.314 668.236,768.323 668.795,716.548 669.355,714.968 669.914,698.412 670.473,712.426 671.032,709.087 671.592,708.595 672.151,689.721 672.71,709.175 673.269,709.959 673.829,694.386 674.388,740.862 674.947,738.364 675.506,735.011 676.066,682.494 676.625,667.281 677.184,652.187 677.743,653.499 678.303,654.214 678.862,657.027 679.421,675.299 679.981,726.15 680.54,739.145 681.099,736.21 681.658,750.436 682.218,748.937 682.777,762.325 683.336,756.382 683.895,756.126 684.455,752.567 685.014,750.016 685.573,696.5 686.132,660.389 686.692,646.347 687.251,646.568 687.81,598.118 688.369,616.788 688.929,620.408 689.488,608.979 690.047,628.159 690.606,634.881 691.166,636.987 691.725,654.063 692.284,688.565 692.843,638.693 693.403,675.509 693.962,646.277 694.521,647.451 695.08,649.743 695.64,685.977 696.199,657.952 696.758,675.994 697.317,695.738 697.877,728.136 698.436,743.625 698.995,755.781 699.554,703.742 700.114,703.916 700.673,690.74 701.232,675.832 701.791,694.366 702.351,680.663 702.91,666.986 703.469,687.319 704.028,670.327 704.588,637.089 705.147,658.839 705.706,643.585 706.265,631.619 706.825,652.295 707.384,604.135 707.943,609.655 708.502,601.4 709.062,589.822 709.621,613.331 710.18,620.065 710.739,608.251 711.299,580.742 711.858,603.464 712.417,624.696 712.976,612.032 713.536,648.451 714.095,635.362 714.654,669.979 715.213,674.749 715.773,639.983 716.332,645.204 716.891,601.843 717.45,604.738 718.01,593.862 718.569,650.311 719.128,638.512 719.687,625.503 720.247,594.558 720.806,599.968 721.365,603.674 721.924,560.596 722.484,568.597 723.043,574.154 723.602,595.892 724.161,621.831 724.721,611.25 725.28,629.223 725.839,635.403 726.398,656.141 726.958,648.139 727.517,635.954 728.076,642.393 728.635,631.227 729.195,631.701 729.754,618.491 730.313,609.463 730.872,647.704 731.432,661.324 731.991,662.132 732.55,683.749 733.109,698.392 733.669,716.321 734.228,713.539 734.787,712.008 735.346,693.336 735.906,712.879 736.465,747.555 737.024,759.403 737.583,756.803 738.143,787.326 738.702,765.88 739.261,763.54 739.82,761.399 740.38,786.745 740.939,768.53 741.498,780.217 742.057,790.459 742.617,768.052 743.176,780.559 743.735,775.414 744.294,737.557 744.854,751.505 745.413,731.439 745.972,743.622 746.531,725.163 747.091,705.82 747.65,734.921 748.209,752.517 748.768,767.161 749.328,749.9 749.887,728.322 750.446,724.176 751.005,705.131 751.565,702.076 752.124,686.495 752.683,656.486 753.242,705.282 753.802,705.05 754.361,737.099 754.92,733.101 755.479,731.093 756.039,761.047 756.598,739.335 757.157,739.891 757.716,736.11 758.276,735.792 758.835,732.005 759.394,726.46 759.953,724.162 760.513,737.875 761.072,735.066 761.631,732.9 762.19,728.414 762.75,708.277 763.309,690.9 763.868,690.57 764.427,688.873 764.987,704.035 765.546,671.086 766.105,669.347 766.664,669.702 767.224,688.32 767.783,673.573 768.342,672.391 768.901,655.355 769.461,660.173 770.02,661.404 770.579,631.399 771.138,650.214 771.698,650.26 772.257,700.369 772.816,679.726 773.375,693.65 773.935,690.47 774.494,706.515 775.053,687.626 775.612,669.941 776.172,699.151 776.731,697.369 777.29,693.823 777.849,709.755 778.409,726.116 778.968,720.628 779.527,732.128 780.086,728.042 780.646,692.196 781.205,705.97 781.764,686.698 782.323,689.245 782.883,670.971 783.442,685.444 784.001,683.155 784.56,696.288 785.12,691.727 785.679,708.387 786.238,695.634 786.797,679.494 787.357,648.11 787.916,665.064 788.475,649.449 789.034,649.153 789.594,648.41 790.153,603.163 790.712,608.23 791.271,647.738 791.831,633.346 792.39,635.614 792.949,656.179 793.508,625.418 794.068,660.786 794.627,664.104 795.186,678.443 795.745,722.844 796.305,691.812 796.864,662.769 797.423,712.55 797.982,728.053 798.542,729.216 799.101,743.313 799.66,757.668 800.219,770.11 800.779,703.023 801.338,671.476 801.897,660.012 802.456,710.683 803.016,710.514 803.575,693.878 804.134,694.802 804.693,729.696 805.253,740.814 805.812,736.789 806.371,734.765 806.931,733.366 807.49,747.913 808.049,731.394 808.608,728.109 809.168,662.947 809.727,683.925 810.286,681.007 810.845,747.404 811.405,744.633 811.964,724.161 812.523,704.482 813.082,687.696 813.642,688.403 814.201,636.608 814.76,673.895 815.319,691.067 815.879,676.435 816.438,696.033 816.997,713.512 817.556,643.49 818.116,664.309 818.675,649.141 819.234,639.243 819.793,691.166 820.353,673.979 820.912,705.649 821.471,719.941 822.03,698.939 822.59,697.828 823.149,681.594 823.708,663.005 824.267,649.229 824.827,670.767 825.386,703.985 825.945,717.534 826.504,715.613 827.064,697.867 827.623,694.94 828.182,696.015 828.741,678.591 829.301,691.27 829.86,721.165 830.419,687.07 830.978,703.661 831.538,736.164 832.097,765.028 832.656,774.547 833.215,736.095 833.775,737.545 834.334,751.644 834.893,748.242 835.452,741.796 836.012,738.531 836.571,769.387 837.13,765.062 837.689,774.313 838.249,772.016 838.808,780.623 839.367,776.327 839.926,754.564 840.486,785.162 841.045,781.082 841.604,776.793 842.163,787.07 842.723,783.632 843.282,762.181 843.841,770.143 844.4,794.157 844.96,788.771 845.519,731.876 846.078,730.729 846.637,760.388 847.197,740.306 847.756,735.837 848.315,749.422 848.874,729.466 849.434,724.042 849.993,705.951 850.552,720.474 851.111,723.963 851.671,707.844 852.23,692.162 852.789,672.705 853.348,672.334 853.908,689.427 854.467,689.726 855.026,639.762 855.585,656.998 856.145,692.726 856.704,753.649 857.263,747.587 857.822,744.053 858.382,728.204 858.941,743.854 859.5,759.804 860.059,743.02 860.619,741.761 861.178,739.403 861.737,723.544 862.296,689.814 862.856,690.565 863.415,690.205 863.974,672.059 864.533,690.768 865.093,692.01 865.652,711.873 866.211,694.398 866.77,664.092 867.33,666.407 867.889,634.287 868.448,620.093 869.007,619.942 869.567,603.579 870.126,591.498 870.685,615.28 871.244,618.775 871.804,569.143 872.363,578.664 872.922,600.954 873.481,603.906 874.041,591.798 874.6,609.253 875.159,612.826 875.718,614.887 876.278,617.257 876.837,605.897 877.396,591.438 877.955,564.342 878.515,589.544 879.074,611.368 879.633,614.533 880.192,603.152 880.752,624.198 881.311,640.944 881.87,645.907 882.429,654.447 882.989,625.343 883.548,630.011 884.107,648.546 884.666,634.136 885.226,652.86 885.785,639.222 886.344,646.77 886.903,633.984 887.463,635.186 888.022,637.2 888.581,640.017 889.14,644.499 889.7,644.797 890.259,695.585 890.818,739.732 891.377,769.898 891.937,766.515 892.496,764.604 893.055,727.155 893.614,725.968 894.174,709.368 894.733,707.711 895.292,672.422 895.851,657.963 896.411,660.291 896.97,633.271 897.529,637.663 898.088,659.29 898.648,662.528 899.207,679.375 899.766,664.767 900.325,647.912 900.885,650.376 901.444,588.782 902.003,558.475 902.562,547.62 903.122,573.226 903.681,549.72 904.24,559.103 904.799,582.568 905.359,587.211 905.918,623.196 906.477,625.029 907.036,642.664 907.596,642.87 908.155,664.331 908.714,666.845 909.273,652.133 909.833,671.236 910.392,685.526 910.951,694.064 911.51,710.856 912.07,656.849 912.629,687.938 913.188,687.784 913.747,673.209 914.307,657.398 914.866,673.872 915.425,675.901 915.984,660.507 916.544,692.412 917.103,694.326 917.662,679.692 918.221,679.009 918.781,698.473 919.34,712.013 919.899,725.102 920.458,717.571 921.018,712.814 921.577,728.265 922.136,710.413 922.695,661.851 923.255,665.855 923.814,667.122 924.373,666.79 924.932,667.475 925.492,685.337 926.051,700.839 926.61,663.373 927.169,683.056 927.729,683.775 928.288,701.122 928.847,699.341 929.406,713.857 929.966,696.068 930.525,709.183 931.084,674.239 931.644,689.803 932.203,685.069 932.762,682.523 933.321,715.199 933.881,745.584 934.44,742.281 934.999,706.236 935.558,685.769 936.118,668.3 936.677,668.465 937.236,685.459 937.795,686.543 938.355,671.255 938.914,640.393 939.473,674.052 940.032,673.417 940.592,655.916 941.151,642.04 941.71,680.147 942.269,663.979 942.829,682.437 943.388,697.226 943.947,712.674 944.506,726.406 945.066,727.171 945.625,706.052 946.184,704.707 946.743,651.763 947.303,667.697 947.862,684.75 948.421,702.19 948.98,719.189 949.54,702.901 950.099,719.921 950.658,718.826 951.217,721.795 951.777,732.759 952.336,717.273 952.895,701.617 953.454,719.044 954.014,685.381 954.573,682.436 955.132,665.014 955.691,682.605 956.251,666.091 956.81,669.224 957.369,654.805 957.928,657.462 958.488,661.059 959.047,666.176 959.606,680.713 960.165,679.833 960.725,646.008 961.284,663.69 961.843,664.792 962.402,710.978 962.962,709.426 963.521,737.85 964.08,768.629 964.639,743.648 965.199,739.593 965.758,720.487 966.317,718.004 966.876,689.072 967.436,705.123 967.995,723.752 968.554,737.549 969.113,736.625 969.673,750.635 970.232,747.435 970.791,711.261 971.35,709.368 971.91,739.435 972.469,783.148 973.028,796.152 973.587,792.386 974.147,736.377 974.706,734.788 975.265,733.379 975.824,712.46 976.384,693.765 976.943,722.783 977.502,734.871 978.061,752.355 978.621,762.808 979.18,747.681 979.739,757.632 980.298,721.65 980.858,733.486 981.417,748.889 981.976,744.953 982.535,743.185 983.095,688.657 983.654,706.935 984.213,689.263 984.772,675.732 985.332,695.552 985.891,712.353 986.45,709.041 987.009,738.77 987.569,733.511 988.128,749.483 988.687,715.209 989.246,696.829 989.806,664.9 990.365,667.849 990.924,653.196 991.483,638.113 992.043,638.208 992.602,621.199 993.161,640.144 993.72,672.363 994.28,672.702 994.839,656.032 995.398,661.91 995.957,657.241 996.517,657.74 997.076,643.473 997.635,628.341 998.194,633.689 998.754,652.655 999.313,653.605 999.872,653.824 1000.43,641.159 1000.99,656.703 1001.55,655.195 1002.11,639.678 1002.67,632.819 1003.23,620.809 1003.79,621.668 1004.35,628.862 1004.91,631.771 1005.46,653.518 1006.02,669.747 1006.58,636.74 1007.14,635.812 1007.7,638.167 1008.26,655.098 1008.82,674.862 1009.38,643.204 1009.94,662.852 1010.5,666.171 1011.06,634.6 1011.62,688.388 1012.18,739.047 1012.73,737.544 1013.29,764.821 1013.85,728.2 1014.41,744.385 1014.97,695.975 1015.53,696.213 1016.09,700.389 1016.65,667.852 1017.21,683.738 1017.77,685.165 1018.33,688.253 1018.89,672.181 1019.45,671.523 1020.01,688.606 1020.56,670.836 1021.12,707.133 1021.68,734.041 1022.24,759.964 1022.8,738.163 1023.36,738.406 1023.92,720.797 1024.48,722.769 1025.04,735.099 1025.6,717.792 1026.16,701.187 1026.72,696.68 1027.28,712.082 1027.83,742.636 1028.39,721.368 1028.95,717.093 1029.51,714.109 1030.07,712.87 1030.63,739.865 1031.19,784.835 1031.75,731.258 1032.31,743.821 1032.87,755.159 1033.43,737.396 1033.99,780.485 1034.55,762.487 1035.1,744.361 1035.66,742.227 1036.22,721.777 1036.78,748.522 1037.34,710.662 1037.9,723.709 1038.46,733.278 1039.02,779.82 1039.58,786.94 1040.14,764.442 1040.7,708.598 1041.26,740.944 1041.82,738.633 1042.38,685.681 1042.93,717.051 1043.49,720.386 1044.05,735.957 1044.61,733.437 1045.17,740.955 1045.73,724.185 1046.29,689.509 1046.85,688.028 1047.41,717.986 1047.97,712.959 1048.53,712.579 1049.09,713.021 1049.65,727.037 1050.2,691.947 1050.76,725.038 1051.32,726.28 1051.88,725.522 1052.44,741.535 1053,758.833 1053.56,754.809 1054.12,766.452 1054.68,761.497 1055.24,738.21 1055.8,701.755 1056.36,698.12 1056.92,663.243 1057.48,637.226 1058.03,639.463 1058.59,623.555 1059.15,611.821 1059.71,599.526 1060.27,584.732 1060.83,553.2 1061.39,544.71 1061.95,551.688 1062.51,635.275 1063.07,622.271 1063.63,591.037 1064.19,615.069 1064.75,601.384 1065.3,622.267 1065.86,626.026 1066.42,614.35 1066.98,602.983 1067.54,592.153 1068.1,611.928 1068.66,631.92 1069.22,617.757 1069.78,638.291 1070.34,625.93 1070.9,645.033 1071.46,615.421 1072.02,618.037 1072.57,655.467 1073.13,690.253 1073.69,654.981 1074.25,706.624 1074.81,705.096 1075.37,670.491 1075.93,685.538 1076.49,685.254 1077.05,685.995 1077.61,699.48 1078.17,648.444 1078.73,616.844 1079.29,625.334 1079.85,660.888 1080.4,661.693 1080.96,664.364 1081.52,665.891 1082.08,648.458 1082.64,692.371 1083.2,708.295 1083.76,723.292 1084.32,724.433 1084.88,688.769 1085.44,691.197 1086,706.359 1086.56,720.159 1087.12,716.009 1087.67,696.977 1088.23,634.709 1088.79,623.846 1089.35,643.241 1089.91,663.835 1090.47,652.852 1091.03,687.237 1091.59,675.032 1092.15,706.219 1092.71,704.733 1093.27,705.645 1093.83,705.064 1094.39,690.517 1094.94,673.211 1095.5,671.648 1096.06,686.926 1096.62,701.249 1097.18,717.53 1097.74,748.568 1098.3,744.733 1098.86,739.04 1099.42,750.879 1099.98,728.543 1100.54,695.633 1101.1,667.154 1101.66,699.991 1102.22,685.102 1102.77,687.395 1103.33,673.23 1103.89,658.042 1104.45,676.894 1105.01,660.167 1105.57,628.749 1106.13,680.418 1106.69,643.507 1107.25,614.652 1107.81,599.263 1108.37,601.043 1108.93,571.216 1109.49,594.327 1110.04,603.624 1110.6,640.504 1111.16,630.7 1111.72,632.512 1112.28,619.698 1112.84,624.414 1113.4,630.223 1113.96,599.94 1114.52,635.982 1115.08,671.826 1115.64,669.524 1116.2,671.583 1116.76,653.504 1117.31,654.473 1117.87,689.631 1118.43,689.586 1118.99,688.28 1119.55,690.3 1120.11,673.27 1120.67,656.169 1121.23,690.568 1121.79,706.397 1122.35,707.129 1122.91,690.36 1123.47,703.996 1124.03,738.584 1124.59,736.661 1125.14,750.839 1125.7,697.478 1126.26,679.57 1126.82,679.32 1127.38,697.166 1127.94,694.114 1128.5,681.042 1129.06,697.951 1129.62,713.991 1130.18,741.298 1130.74,740.525 1131.3,736.246 1131.86,749.861 1132.41,763.859 1132.97,760.936 1133.53,741.403 1134.09,789.474 1134.65,781.17 1135.21,776.81 1135.77,787.602 1136.33,784.494 1136.89,779.738 1137.45,757.665 1138.01,770.664 1138.57,768.768 1139.13,791.324 1139.68,768.434 1140.24,735.7 1140.8,713.668 1141.36,698.07 1141.92,680.955 1142.48,650.298 1143.04,668.812 1143.6,682.662 1144.16,681.453 1144.72,681.222 1145.28,696.031 1145.84,761.561 1146.4,775.682 1146.96,757.77 1147.51,754.239 1148.07,750.753 1148.63,717.733 1149.19,697.249 1149.75,701.343 1150.31,699.034 1150.87,699.761 1151.43,698.826 1151.99,728.031 1152.55,740.932 1153.11,770.75 1153.67,781.297 1154.23,763.528 1154.78,760.053 1155.34,757.714 1155.9,752.025 1156.46,730.067 1157.02,771.249 1157.58,736.318 1158.14,735.908 1158.7,748.479 1159.26,728.159 1159.82,691.207 1160.38,686.982 1160.94,671.753 1161.5,659.947 1162.05,677.816 1162.61,694.962 1163.17,658.576 1163.73,655.893 1164.29,658.136 1164.85,657.173 1165.41,657.968 1165.97,626.156 1166.53,647.574 1167.09,647.599 1167.65,613.293 1168.21,632.959 1168.77,632.415 1169.33,651.967 1169.88,657.27 1170.44,644.184 1171,679.566 1171.56,697.779 1172.12,679.3 1172.68,730.439 1173.24,712.876 1173.8,708.384 1174.36,708.55 1174.92,709.364 1175.48,708.13 1176.04,704.702 1176.6,707.001 1177.15,725.466 1177.71,738.339 1178.27,717.917 1178.83,717.97 1179.39,732.493 1179.95,727.968 1180.51,708.655 1181.07,725.905 1181.63,739.435 1182.19,704.752 1182.75,687.092 1183.31,684.933 1183.87,703.44 1184.43,686.469 1184.98,734.242 1185.54,700.776 1186.1,699.347 1186.66,748.034 1187.22,731.431 1187.78,727.741 1188.34,756.663 1188.9,724.843 1189.46,705.018 1190.02,702.403 1190.58,686.108 1191.14,684.581 1191.7,667.416 1192.25,698.551 1192.81,710.933 1193.37,693.239 1193.93,691.988 1194.49,709.192 1195.05,691.764 1195.61,674.744 1196.17,656.145 1196.73,659.827 1197.29,591.847 1197.85,581.776 1198.41,570.229 1198.97,560.76 1199.52,566.262 1200.08,540.402 1200.64,563.696 1201.2,570.965 1201.76,543.626 1202.32,536.816 1202.88,532.457 1203.44,512.695 1204,522.769 1204.56,532.202 1205.12,571.174 1205.68,562.566 1206.24,571.11 1206.8,594.183 1207.35,619.874 1207.91,610.484 1208.47,613.968 1209.03,622.095 1209.59,612.679 1210.15,616 1210.71,633.535 1211.27,667.92 1211.83,699.02 1212.39,678.995 1212.95,664.918 1213.51,716.375 1214.07,698.139 1214.62,679.946 1215.18,678.349 1215.74,676.587 1216.3,694.744 1216.86,711.268 1217.42,709.718 1217.98,694.062 1218.54,630.474 1219.1,638.742 1219.66,625.567 1220.22,628.418 1220.78,649.23 1221.34,652.159 1221.89,674.281 1222.45,691.163 1223.01,706.786 1223.57,708.202 1224.13,705.556 1224.69,688.932 1225.25,722.006 1225.81,690.471 1226.37,706.619 1226.93,708.339 1227.49,708.984 1228.05,695.63 1228.61,712.62 1229.17,728.276 1229.72,711.766 1230.28,707.288 1230.84,686.098 1231.4,669.79 1231.96,691.934 1232.52,693.354 1233.08,691.977 1233.64,692.555 1234.2,693.277 1234.76,708.53 1235.32,710.601 1235.88,707.354 1236.44,705.553 1236.99,704.015 1237.55,689.166 1238.11,707.865 1238.67,686.547 1239.23,687.252 1239.79,673.182 1240.35,687.369 1240.91,703.152 1241.47,702.171 1242.03,699.433 1242.59,718.476 1243.15,700.198 1243.71,666.908 1244.26,665.832 1244.82,668.916 1245.38,668.461 1245.94,650.12 1246.5,653.46 1247.06,670.843 1247.62,673.71 1248.18,691.285 1248.74,691.267 1249.3,721.347 1249.86,721.484 1250.42,722.885 1250.98,687.365 1251.54,653.785 1252.09,672.998 1252.65,705.995 1253.21,734.432 1253.77,732.033 1254.33,711.169 1254.89,712.036 1255.45,725.064 1256.01,706.689 1256.57,639.029 1257.13,644.794 1257.69,627.345 1258.25,647.047 1258.81,619.129 1259.36,622.936 1259.92,622.13 1260.48,662.364 1261.04,644.202 1261.6,678.37 1262.16,664.976 1262.72,648.783 1263.28,633.861 1263.84,652.877 1264.4,638.768 1264.96,642.371 1265.52,647.038 1266.08,665.348 1266.63,668.297 1267.19,651.672 1267.75,637.236 1268.31,643.489 1268.87,645.614 1269.43,644.925 1269.99,632.745 1270.55,653.061 1271.11,667.385 1271.67,638.073 1272.23,687.66 1272.79,718.551 1273.35,715.946 1273.91,761.194 1274.46,790.786 1275.02,771.183 1275.58,769.291 1276.14,751.724 1276.7,735.094 1277.26,747.639 1277.82,759.791 1278.38,756.968 1278.94,733.703 1279.5,732.591 1280.06,729.638 1280.62,759.366 1281.18,755.249 1281.73,732.051 1282.29,712.044 1282.85,709.196 1283.41,709.732 1283.97,722.477 1284.53,737.693 1285.09,747.789 1285.65,771.445 1286.21,751.754 1286.77,713.314 1287.33,724.622 1287.89,750.936 1288.45,730.467 1289,727.976 1289.56,742.523 1290.12,708.463 1290.68,690.72 1291.24,689.149 1291.8,685.714 1292.36,716.705 1292.92,714.291 1293.48,698.44 1294.04,715.207 1294.6,712.169 1295.16,708.011 1295.72,705.497 1296.28,716.503 1296.83,682.336 1297.39,664.14 1297.95,649.216 1298.51,636.334 1299.07,640.191 1299.63,608.225 1300.19,625.369 1300.75,646.143 1301.31,651.779 1301.87,684.82 1302.43,681.778 1302.99,715.727 1303.55,681.81 1304.1,699.985 1304.66,681.661 1305.22,681.334 1305.78,680.166 1306.34,679.159 1306.9,676.432 1307.46,673.059 1308.02,673.676 1308.58,688.302 1309.14,736.894 1309.7,699.687 1310.26,681.436 1310.82,682.048 1311.38,717.167 1311.93,732.39 1312.49,717.516 1313.05,699.915 1313.61,747.136 1314.17,745.101 1314.73,724.469 1315.29,754.703 1315.85,720.485 1316.41,732.665 1316.97,666.482 1317.53,681.247 1318.09,681.289 1318.65,647.136 1319.2,633.704 1319.76,658.385 1320.32,628.328 1320.88,645.06 1321.44,645.204 1322,613.771 1322.56,587.355 1323.12,608.28 1323.68,628.491 1324.24,631.47 1324.8,635.014 1325.36,648.806 1325.92,666.061 1326.47,668.6 1327.03,639.49 1327.59,640.42 1328.15,674.77 1328.71,675.354 1329.27,678.644 1329.83,647.438 1330.39,663.356 1330.95,692.369 1331.51,660.978 1332.07,680.312 1332.63,662.197 1333.19,630.669 1333.75,634.069 1334.3,621.697 1334.86,611.542 1335.42,630.921 1335.98,664.514 1336.54,680.177 1337.1,713.17 1337.66,713.225 1338.22,728.172 1338.78,697.132 1339.34,698.33 1339.9,696.114 1340.46,697.799 1341.02,698.791 1341.57,680.79 1342.13,680.463 1342.69,683.907 1343.25,653.84 1343.81,688.951 1344.37,672.483 1344.93,657.406 1345.49,689.697 1346.05,706.983 1346.61,724.134 1347.17,722.42 1347.73,732.75 1348.29,729.582 1348.84,728.496 1349.4,679.742 1349.96,677.316 1350.52,664.321 1351.08,700.095 1351.64,683.454 1352.2,684.339 1352.76,699.206 1353.32,681.693 1353.88,714.337 1354.44,696.231 1355,667.728 1355.56,682.724 1356.12,681.942 1356.67,696.955 1357.23,675.789 1357.79,659.505 1358.35,662.758 1358.91,661.993 1359.47,678.742 1360.03,644.64 1360.59,619.548 1361.15,607.155 1361.71,593.653 1362.27,598.142 1362.83,616.904 1363.39,621.248 1363.94,611.747 1364.5,616.55 1365.06,637.819 1365.62,657.938 1366.18,677.468 1366.74,662.348 1367.3,677.634 1367.86,630.085 1368.42,649.743 1368.98,665.734 1369.54,653.922 1370.1,675.287 1370.66,659.748 1371.21,643.896 1371.77,646.269 1372.33,613.632 1372.89,583.553 1373.45,604.838 1374.01,609.228 1374.57,646.578 1375.13,666.145 1375.69,686.122 1376.25,687.677 1376.81,707.427 1377.37,673.443 1377.93,688.9 1378.49,722.808 1379.04,719.114 1379.6,702.971 1380.16,668.576 1380.72,654.274 1381.28,636.62 1381.84,637.976 1382.4,607.463 1382.96,675.495 1383.52,675.888 1384.08,676.83 1384.64,707.783 1385.2,740.099 1385.76,767.613 1386.31,747.562 1386.87,743.254 1387.43,757.39 1387.99,719.215 1388.55,717.756 1389.11,682.291 1389.67,696.007 1390.23,675.635 1390.79,677.445 1391.35,659.833 1391.91,659.278 1392.47,660.806 1393.03,712.381 1393.58,712.853 1394.14,726.732 1394.7,706.325 1395.26,685.281 1395.82,731.679 1396.38,714.197 1396.94,698.821 1397.5,710.188 1398.06,709.055 1398.62,691.041 1399.18,705.746 1399.74,675.275 1400.3,690.434 1400.86,741.409 1401.41,736.917 1401.97,731.928 1402.53,730.807 1403.09,742.174 1403.65,722.383 1404.21,736.814 1404.77,715.24 1405.33,727.052 1405.89,739.733 1406.45,720.742 1407.01,715.184 1407.57,712.727 1408.13,725.429 1408.68,725.645 1409.24,710.532 1409.8,724.698 1410.36,705.562 1410.92,688.427 1411.48,700.378 1412.04,683.853 1412.6,682.279 1413.16,698.048 1413.72,660.11 1414.28,711.055 1414.84,676.152 1415.4,644.801 1415.95,693.485 1416.51,659.388 1417.07,644.999 1417.63,647.147 1418.19,583.355 1418.75,571.29 1419.31,549.472 1419.87,555.644 1420.43,528.897 1420.99,572.565 1421.55,583.505 1422.11,572.481 1422.67,563.902 1423.23,555.16 1423.78,534.529 1424.34,528.15 1424.9,549.402 1425.46,576.244 1426.02,580.623 1426.58,601.265 1427.14,620.601 1427.7,625.19 1428.26,645.101 1428.82,649.467 1429.38,667.27 1429.94,669.331 1430.5,689.198 1431.05,687.636 1431.61,693.325 1432.17,724.095 1432.73,707.695 1433.29,750.21 1433.85,731.515 1434.41,731.47 1434.97,727.238 1435.53,740.718 1436.09,734.981 1436.65,764.184 1437.21,774.509 1437.77,766.409 1438.33,779.481 1438.88,774.244 1439.44,741.738 1440,773.306 1440.56,769.47 1441.12,751.334 1441.68,745.667 1442.24,762.447 1442.8,774.425 1443.36,790.465 1443.92,820.101 1444.48,814.338 1445.04,789.673 1445.6,769.355 1446.15,813.695 1446.71,821.734 1447.27,798.092 1447.83,740.726 1448.39,720.934 1448.95,716.393 1449.51,681.062 1450.07,645.887 1450.63,632.174 1451.19,632.753 1451.75,681.194 1452.31,664.269 1452.87,726.917 1453.42,676.852 1453.98,679.364 1454.54,667.932 1455.1,668.833 1455.66,684.52 1456.22,702.93 1456.78,734.511 1457.34,734.873 1457.9,762.397 1458.46,756.261 1459.02,739.476 1459.58,722.245 1460.14,720.876 1460.7,703.65 1461.25,718.131 1461.81,673.358 1462.37,670.06 1462.93,651.718 1463.49,667.045 1464.05,667.481 1464.61,654.858 1465.17,659.88 1465.73,665.785 1466.29,623.829 1466.85,643.454 1467.41,648.182 1467.97,601.056 1468.52,655.346 1469.08,655.024 1469.64,657.439 1470.2,624.538 1470.76,644.371 1471.32,629.423 1471.88,649.059 1472.44,713.313 1473,667.508 1473.56,668.87 1474.12,683.247 1474.68,699.012 1475.24,695.344 1475.79,675.709 1476.35,675.548 1476.91,661.295 1477.47,644.532 1478.03,661.274 1478.59,694.31 1479.15,661.441 1479.71,660.721 1480.27,661.948 1480.83,679.923 1481.39,713.045 1481.95,727.238 1482.51,759.215 1483.07,784.438 1483.62,810.338 1484.18,835.783 1484.74,826.697 1485.3,866.047 1485.86,842.178 1486.42,818.46 1486.98,812.327 1487.54,853.983 1488.1,812.332 1488.66,818.089 1489.22,812.717 1489.78,778.531 1490.34,759.11 1490.89,773.072 1491.45,701.804 1492.01,715.681 1492.57,733.139 1493.13,716.445 1493.69,714.203 1494.25,696.151 1494.81,679.515 1495.37,679.057 1495.93,662.669 1496.49,713.798 1497.05,712.677 1497.61,692.017 1498.16,674.502 1498.72,673.57 1499.28,672.746 1499.84,708.92 1500.4,724.04 1500.96,707.902 1501.52,706.604 1502.08,706.603 1502.64,746.044 1503.2,743.072 1503.76,756.911 1504.32,732.502 1504.88,745.681 1505.44,726.907 1505.99,723.402 1506.55,718.682 1507.11,733.503 1507.67,716.95 1508.23,747.06 1508.79,728.768 1509.35,741.681 1509.91,773.047 1510.47,750.698 1511.03,736.065 1511.59,735.558 1512.15,698.763 1512.71,713.865 1513.26,727.072 1513.82,727.105 1514.38,674.948 1514.94,677.635 1515.5,692.489 1516.06,691.995 1516.62,678.505 1517.18,695.815 1517.74,679.07 1518.3,648.206 1518.86,631.643 1519.42,619.82 1519.98,626.724 1520.53,595.454 1521.09,599.53 1521.65,621.667 1522.21,641.54 1522.77,676.517 1523.33,595.738 1523.89,583.706 1524.45,606.617 1525.01,627.617 1525.57,631.284 1526.13,636.092 1526.69,652.731 1527.25,621.833 1527.81,644.408 1528.36,632.14 1528.92,623.157 1529.48,612.318 1530.04,647.251 1530.6,665.694 1531.16,665.689 1531.72,651.263 1532.28,655.401 1532.84,688.934 1533.4,705.179 1533.96,704.496 1534.52,702.058 1535.08,700.721 1535.63,684.858 1536.19,685.916 1536.75,666.364 1537.31,682.913 1537.87,699.452 1538.43,666.168 1538.99,667.309 1539.55,683.52 1540.11,650.131 1540.67,652.953 1541.23,621.338 1541.79,622.223 1542.35,675.524 1542.9,679.557 1543.46,663.198 1544.02,651.061 1544.58,654.32 1545.14,687.323 1545.7,686.117 1546.26,670.464 1546.82,687.986 1547.38,671.527 1547.94,671.936 1548.5,691.519 1549.06,671.967 1549.62,679.057 1550.18,664.496 1550.73,666.679 1551.29,650.568 1551.85,652.48 1552.41,671.107 1552.97,673.35 1553.53,675.121 1554.09,694.492 1554.65,663.582 1555.21,664.286 1555.77,652.586 1556.33,672.119 1556.89,672.061 1557.45,691.02 1558,690.299 1558.56,703.224 1559.12,701.336 1559.68,684.648 1560.24,732.333 1560.8,728.268 1561.36,728.335 1561.92,725.249 1562.48,691.414 1563.04,694.042 1563.6,695.475 1564.16,691.931 1564.72,637.261 1565.28,640.712 1565.83,628.203 1566.39,599.945 1566.95,620.876 1567.51,605.81 1568.07,641.876 1568.63,628.388 1569.19,680.858 1569.75,679.725 1570.31,681.037 1570.87,714.481 1571.43,694.521 1571.99,694.782 1572.55,677.938 1573.1,694.969 1573.66,675.982 1574.22,691.989 1574.78,678.083 1575.34,694.545 1575.9,662.45 1576.46,686.495 1577.02,700.195 1577.58,733.05 1578.14,714.096 1578.7,729.036 1579.26,729.993 1579.82,728.287 1580.37,743.311 1580.93,738.196 1581.49,718.209 1582.05,700.715 1582.61,713.209 1583.17,696.846 1583.73,663.886 1584.29,629.747 1584.85,632.244 1585.41,617.883 1585.97,635.526 1586.53,637.113 1587.09,638.08 1587.65,606.892 1588.2,607.217 1588.76,646.173 1589.32,613.88 1589.88,652.284 1590.44,669.627 1591,636.607 1591.56,586.701 1592.12,594.326 1592.68,596.522 1593.24,600.936 1593.8,605.314 1594.36,610.147 1594.92,610.456 1595.47,598.928 1596.03,587.03 1596.59,576.851 1597.15,584.99 1597.71,557.211 1598.27,594.364 1598.83,549.753 1599.39,587.751 1599.95,610.578 1600.51,596.769 1601.07,601.872 1601.63,626.493 1602.19,659.822 1602.74,678.202 1603.3,645.184 1603.86,617.057 1604.42,619.585 1604.98,654.744 1605.54,671.423 1606.1,672.908 1606.66,675.386 1607.22,661.821 1607.78,680.204 1608.34,682.922 1608.9,669.32 1609.46,702.179 1610.02,701.181 1610.57,686.531 1611.13,718.91 1611.69,718.873 1612.25,747.938 1612.81,745.408 1613.37,742.977 1613.93,720.247 1614.49,718.561 1615.05,701.956 1615.61,719.365 1616.17,749.008 1616.73,699.766 1617.29,695.446 1617.84,695.997 1618.4,677.618 1618.96,658.996 1619.52,645.949 1620.08,634.74 1620.64,674.093 1621.2,692.711 1621.76,710.83 1622.32,739.917 1622.88,736.618 1623.44,729.894 1624,696.106 1624.56,713.26 1625.11,758.858 1625.67,771.686 1626.23,736.136 1626.79,751.313 1627.35,748.89 1627.91,728.042 1628.47,709.968 1629.03,693.87 1629.59,694.872 1630.15,678.356 1630.71,692.27 1631.27,709.309 1631.83,724.879 1632.39,756.462 1632.94,765.925 1633.5,763.034 1634.06,739.228 1634.62,721.196 1635.18,719.946 1635.74,723.499 1636.3,720.211 1636.86,748.059 1637.42,726.856 1637.98,726.736 1638.54,757.752 1639.1,788.755 1639.66,750.213 1640.21,729.074 1640.77,726.894 1641.33,737.635 1641.89,735.704 1642.45,733.292 1643.01,741.944 1643.57,720.905 1644.13,719.653 1644.69,747.99 1645.25,712.131 1645.81,738.847 1646.37,739.038 1646.93,735.417 1647.48,796.051 1648.04,772.663 1648.6,771.582 1649.16,767.676 1649.72,748.145 1650.28,773.78 1650.84,767.89 1651.4,781.536 1651.96,745.265 1652.52,773.433 1653.08,769.555 1653.64,778.607 1654.2,755.243 1654.76,751.934 1655.31,781.3 1655.87,793.639 1656.43,789.035 1656.99,767.74 1657.55,792.711 1658.11,786.097 1658.67,779.563 1659.23,788.731 1659.79,783.118 1660.35,760.003 1660.91,739.237 1661.47,719.578 1662.03,671.91 1662.58,638.317 1663.14,674.224 1663.7,669.449 1664.26,637.46 1664.82,623.502 1665.38,578.736 1665.94,565.12 1666.5,586.432 1667.06,592.566 1667.62,599.221 1668.18,601.804 1668.74,605.572 1669.3,613.455 1669.85,618.564 1670.41,619.225 1670.97,638.512 1671.53,641.642 1672.09,645.883 1672.65,680.243 1673.21,679.994 1673.77,712.327 1674.33,696.328 1674.89,696.982 1675.45,680.184 1676.01,698.052 1676.57,695.548 1677.13,726.691 1677.68,723.912 1678.24,703.778 1678.8,698.979 1679.36,664.48 1679.92,647.133 1680.48,631.25 1681.04,647.516 1681.6,614.874 1682.16,649.689 1682.72,652.244 1683.28,620.605 1683.84,656.921 1684.4,673.327 1684.95,675.721 1685.51,660.739 1686.07,646.803 1686.63,666.362 1687.19,681.651 1687.75,664.414 1688.31,666.278 1688.87,667.374 1689.43,652.866 1689.99,683.986 1690.55,699.216 1691.11,714.566 1691.67,715.961 1692.23,715.997 1692.78,734.891 1693.34,715.195 1693.9,711.501 1694.46,725.343 1695.02,673.344 1695.58,644.813 1696.14,645.155 1696.7,633.193 1697.26,620.437 1697.82,636.584 1698.38,671.342 1698.94,689.296 1699.5,707.57 1700.05,706.323 1700.61,720.948 1701.17,719.76 1701.73,683.828 1702.29,684.488 1702.85,684.884 1703.41,650.592 1703.97,620.465 1704.53,624.814 1705.09,613.928 1705.65,616.909 1706.21,625.506 1706.77,614.85 1707.32,616.161 1707.88,620.434 1708.44,607.492 1709,577.888 1709.56,563.69 1710.12,602.285 1710.68,592.506 1711.24,577.598 1711.8,584.921 1712.36,611.366 1712.92,565.156 1713.48,559.279 1714.04,566.348 1714.6,591.239 1715.15,577.573 1715.71,579.974 1716.27,603.3 1716.83,621.612 1717.39,625.065 1717.95,613.326 1718.51,634.658 1719.07,592.461 1719.63,596.986 1720.19,569.532 1720.75,558.481 1721.31,549.602 1721.87,556.034 1722.42,498.923 1722.98,530.306 1723.54,570.729 1724.1,593.773 1724.66,630.66 1725.22,631.364 1725.78,648.478 1726.34,669.087 1726.9,685.474 1727.46,672.301 1728.02,672.294 1728.58,654.009 1729.14,655.173 1729.69,673.356 1730.25,706.582 1730.81,703.84 1731.37,797.019 1731.93,809.424 1732.49,848.15 1733.05,824.534 1733.61,817.249 1734.17,841.969 1734.73,831.883 1735.29,788.649 1735.85,780.93 1736.41,776.195 1736.97,754.557 1737.52,735.072 1738.08,713.891 1738.64,724.663 1739.2,707.219 1739.76,705.383 1740.32,703.46 1740.88,683.929 1741.44,668.734 1742,636.951 1742.56,669.989 1743.12,654.497 1743.68,654.35 1744.24,638.8 1744.79,689.262 1745.35,654.159 1745.91,655.811 1746.47,658.434 1747.03,676.295 1747.59,679.264 1748.15,712.517 1748.71,711.352 1749.27,707.644 1749.83,721.11 1750.39,701.485 1750.95,701.446 1751.51,684.085 1752.06,668.936 1752.62,687.612 1753.18,704.915 1753.74,689.608 1754.3,689.621 1754.86,691.631 1755.42,659.11 1755.98,674.99 1756.54,739.384 1757.1,736.531 1757.66,721.105 1758.22,732.161 1758.78,730.665 1759.34,730.991 1759.89,730.736 1760.45,729.758 1761.01,695.122 1761.57,693.749 1762.13,726.35 1762.69,724.418 1763.25,690.12 1763.81,671.003 1764.37,705.732 1764.93,708.326 1765.49,709.772 1766.05,695.234 1766.61,676.587 1767.16,692.902 1767.72,691.89 1768.28,693.105 1768.84,694.782 1769.4,711.17 1769.96,726.782 1770.52,727.734 1771.08,708.762 1771.64,692.186 1772.2,675.073 1772.76,671.93 1773.32,720.703 1773.88,735.528 1774.43,747.937 1774.99,761.628 1775.55,738.762 1776.11,751.076 1776.67,748.183 1777.23,746.201 1777.79,743.786 1778.35,740.836 1778.91,720.372 1779.47,720.979 1780.03,716.775 1780.59,730.595 1781.15,713.385 1781.71,680.53 1782.26,697.266 1782.82,695.289 1783.38,742.963 1783.94,740.025 1784.5,719.958 1785.06,748.049 1785.62,713.963 1786.18,681.719 1786.74,698.308 1787.3,696.732 1787.86,698.053 1788.42,700.107 1788.98,697.728 1789.53,692.142 1790.09,706.08 1790.65,736.037 1791.21,711.129 1791.77,710.96 1792.33,724.889 1792.89,720.106 1793.45,701.17 1794.01,718.444 1794.57,687.266 1795.13,690.04 1795.69,705.043 1796.25,685.858 1796.8,715.747 1797.36,711.671 1797.92,692.882 1798.48,724.608 1799.04,789.492 1799.6,768.304 1800.16,763.409 1800.72,757.743 1801.28,770.446 1801.84,718.813 1802.4,736.115 1802.96,735.788 1803.52,731.696 1804.08,725.8 1804.63,706.557 1805.19,668.896 1805.75,654.837 1806.31,657.553 1806.87,655.279 1807.43,625.291 1807.99,627.125 1808.55,644.407 1809.11,678.267 1809.67,658.967 1810.23,672.341 1810.79,703.712 1811.35,700.907 1811.9,718.834 1812.46,747.958 1813.02,745.761 1813.58,757.21 1814.14,737.583 1814.7,737.18 1815.26,732.238 1815.82,696.925 1816.38,677.686 1816.94,693.216 1817.5,659.494 1818.06,662.011 1818.62,679.727 1819.18,629.916 1819.73,664.913 1820.29,651.73 1820.85,672.509 1821.41,657.055 1821.97,610.634 1822.53,597.757 1823.09,601.464 1823.65,608.597 1824.21,594.613 1824.77,585 1825.33,621.436 1825.89,609.686 1826.45,615.649 1827,616.857 1827.56,639.614 1828.12,661.282 1828.68,676.121 1829.24,694.931 1829.8,709.921 1830.36,692.159 1830.92,677.188 1831.48,659.955 1832.04,677.198 1832.6,629.242 1833.16,666.789 1833.72,687.265 1834.27,702.551 1834.83,705.774 1835.39,706.308 1835.95,721.384 1836.51,703.8 1837.07,668.277 1837.63,702.406 1838.19,701.233 \"/>\n<path clip-path=\"url(#clip623)\" d=\"M720.247 691.538 L720.806 691.538 L721.365 691.538 L721.924 691.538 L722.484 691.538 L723.043 691.538 L723.602 691.538 L724.161 691.538 L724.721 691.538 L725.28 691.538 L725.839 691.538 L726.398 691.538 L726.958 691.538 L727.517 691.538 L728.076 691.538 L728.635 691.538 L729.195 691.538 L729.754 691.538 L730.313 691.538 L730.872 691.538 L731.432 691.538 L731.991 691.538 L732.55 691.538 L733.109 691.538 L733.669 691.538 L734.228 691.538 L734.787 691.538 L735.346 691.538 L735.906 691.538 L736.465 691.538 L737.024 691.538 L737.583 691.538 L738.143 691.538 L738.702 691.538 L739.261 691.538 L739.82 691.538 L740.38 691.538 L740.939 691.538 L741.498 691.538 L742.057 691.538 L742.617 691.538 L743.176 691.538 L743.735 691.538 L744.294 691.538 L744.854 691.538 L745.413 691.538 L745.972 691.538 L746.531 691.538 L747.091 691.538 L747.65 691.538 L748.209 691.538 L748.768 691.538 L749.328 691.538 L749.887 691.538 L750.446 691.538 L751.005 691.538 L751.565 691.538 L752.124 691.538 L752.683 691.538 L753.242 691.538 L753.802 691.538 L754.361 691.538 L754.92 691.538 L755.479 691.538 L756.039 691.538 L756.598 691.538 L757.157 691.538 L757.716 691.538 L758.276 691.538 L758.835 691.538 L759.394 691.538 L759.953 691.538 L760.513 691.538 L761.072 691.538 L761.631 691.538 L762.19 691.538 L762.75 691.538 L763.309 691.538 L763.868 691.538 L764.427 691.538 L764.987 691.538 L765.546 691.538 L766.105 691.538 L766.664 691.538 L767.224 691.538 L767.783 691.538 L768.342 691.538 L768.901 691.538 L769.461 691.538 L770.02 691.538 L770.579 691.538 L771.138 691.538 L771.698 691.538 L772.257 691.538 L772.816 691.538 L773.375 691.538 L773.935 691.538 L774.494 691.538 L775.053 691.538 L775.612 691.538 L776.172 691.538 L776.731 691.538 L777.29 691.538 L777.849 691.538 L778.409 691.538 L778.968 691.538 L779.527 691.538 L780.086 691.538 L780.646 691.538 L781.205 691.538 L781.764 691.538 L782.323 691.538 L782.883 691.538 L783.442 691.538 L784.001 691.538 L784.56 691.538 L785.12 691.538 L785.679 691.538 L786.238 691.538 L786.797 691.538 L787.357 691.538 L787.916 691.538 L788.475 691.538 L789.034 691.538 L789.594 691.538 L790.153 691.538 L790.712 691.538 L791.271 691.538 L791.831 691.538 L792.39 691.538 L792.949 691.538 L793.508 691.538 L794.068 691.538 L794.627 691.538 L795.186 691.538 L795.745 691.538 L796.305 691.538 L796.864 691.538 L797.423 691.538 L797.982 691.538 L798.542 691.538 L799.101 691.538 L799.66 691.538 L800.219 691.538 L800.779 691.538 L801.338 691.538 L801.897 691.538 L802.456 691.538 L803.016 691.538 L803.575 691.538 L804.134 691.538 L804.693 691.538 L805.253 691.538 L805.812 691.538 L806.371 691.538 L806.931 691.538 L807.49 691.538 L808.049 691.538 L808.608 691.538 L809.168 691.538 L809.727 691.538 L810.286 691.538 L810.845 691.538 L811.405 691.538 L811.964 691.538 L812.523 691.538 L813.082 691.538 L813.642 691.538 L814.201 691.538 L814.76 691.538 L815.319 691.538 L815.879 691.538 L816.438 691.538 L816.997 691.538 L817.556 691.538 L818.116 691.538 L818.675 691.538 L819.234 691.538 L819.793 691.538 L820.353 691.538 L820.912 691.538 L821.471 691.538 L822.03 691.538 L822.59 691.538 L823.149 691.538 L823.708 691.538 L824.267 691.538 L824.827 691.538 L825.386 691.538 L825.945 691.538 L826.504 691.538 L827.064 691.538 L827.623 691.538 L828.182 691.538 L828.741 691.538 L829.301 691.538 L829.86 691.538 L830.419 691.538 L830.978 691.538 L831.538 691.538 L832.097 691.538 L832.656 691.538 L833.215 691.538 L833.775 691.538 L834.334 691.538 L834.893 691.538 L835.452 691.538 L836.012 691.538 L836.571 691.538 L837.13 691.538 L837.689 691.538 L838.249 691.538 L838.808 691.538 L839.367 691.538 L839.926 691.538 L840.486 691.538 L841.045 691.538 L841.604 691.538 L842.163 691.538 L842.723 691.538 L843.282 691.538 L843.841 691.538 L844.4 691.538 L844.96 691.538 L845.519 691.538 L846.078 691.538 L846.637 691.538 L847.197 691.538 L847.756 691.538 L848.315 691.538 L848.874 691.538 L849.434 691.538 L849.993 691.538 L850.552 691.538 L851.111 691.538 L851.671 691.538 L852.23 691.538 L852.789 691.538 L853.348 691.538 L853.908 691.538 L854.467 691.538 L855.026 691.538 L855.585 691.538 L856.145 691.538 L856.704 691.538 L857.263 691.538 L857.822 691.538 L858.382 691.538 L858.941 691.538 L859.5 691.538 L860.059 691.538 L860.619 691.538 L861.178 691.538 L861.737 691.538 L862.296 691.538 L862.856 691.538 L863.415 691.538 L863.974 691.538 L864.533 691.538 L865.093 691.538 L865.652 691.538 L866.211 691.538 L866.77 691.538 L867.33 691.538 L867.889 691.538 L868.448 691.538 L869.007 691.538 L869.567 691.538 L870.126 691.538 L870.685 691.538 L871.244 691.538 L871.804 691.538 L872.363 691.538 L872.922 691.538 L873.481 691.538 L874.041 691.538 L874.6 691.538 L875.159 691.538 L875.718 691.538 L876.278 691.538 L876.837 691.538 L877.396 691.538 L877.955 691.538 L878.515 691.538 L879.074 691.538 L879.633 691.538 L880.192 691.538 L880.752 691.538 L881.311 691.538 L881.87 691.538 L882.429 691.538 L882.989 691.538 L883.548 691.538 L884.107 691.538 L884.666 691.538 L885.226 691.538 L885.785 691.538 L886.344 691.538 L886.903 691.538 L887.463 691.538 L888.022 691.538 L888.581 691.538 L889.14 691.538 L889.7 691.538 L890.259 691.538 L890.818 691.538 L891.377 691.538 L891.937 691.538 L892.496 691.538 L893.055 691.538 L893.614 691.538 L894.174 691.538 L894.733 691.538 L895.292 691.538 L895.851 691.538 L896.411 691.538 L896.97 691.538 L897.529 691.538 L898.088 691.538 L898.648 691.538 L899.207 691.538 L899.766 691.538 L900.325 691.538 L900.885 691.538 L901.444 691.538 L902.003 691.538 L902.562 691.538 L903.122 691.538 L903.681 691.538 L904.24 691.538 L904.799 691.538 L905.359 691.538 L905.918 691.538 L906.477 691.538 L907.036 691.538 L907.596 691.538 L908.155 691.538 L908.714 691.538 L909.273 691.538 L909.833 691.538 L910.392 691.538 L910.951 691.538 L911.51 691.538 L912.07 691.538 L912.629 691.538 L913.188 691.538 L913.747 691.538 L914.307 691.538 L914.866 691.538 L915.425 691.538 L915.984 691.538 L916.544 691.538 L917.103 691.538 L917.662 691.538 L918.221 691.538 L918.781 691.538 L919.34 691.538 L919.899 691.538 L920.458 691.538 L921.018 691.538 L921.577 691.538 L922.136 691.538 L922.695 691.538 L923.255 691.538 L923.814 691.538 L924.373 691.538 L924.932 691.538 L925.492 691.538 L926.051 691.538 L926.61 691.538 L927.169 691.538 L927.729 691.538 L928.288 691.538 L928.847 691.538 L929.406 691.538 L929.966 691.538 L930.525 691.538 L931.084 691.538 L931.644 691.538 L932.203 691.538 L932.762 691.538 L933.321 691.538 L933.881 691.538 L934.44 691.538 L934.999 691.538 L935.558 691.538 L936.118 691.538 L936.677 691.538 L937.236 691.538 L937.795 691.538 L938.355 691.538 L938.914 691.538 L939.473 691.538 L940.032 691.538 L940.592 691.538 L941.151 691.538 L941.71 691.538 L942.269 691.538 L942.829 691.538 L943.388 691.538 L943.947 691.538 L944.506 691.538 L945.066 691.538 L945.625 691.538 L946.184 691.538 L946.743 691.538 L947.303 691.538 L947.862 691.538 L948.421 691.538 L948.98 691.538 L949.54 691.538 L950.099 691.538 L950.658 691.538 L951.217 691.538 L951.777 691.538 L952.336 691.538 L952.895 691.538 L953.454 691.538 L954.014 691.538 L954.573 691.538 L955.132 691.538 L955.691 691.538 L956.251 691.538 L956.81 691.538 L957.369 691.538 L957.928 691.538 L958.488 691.538 L959.047 691.538 L959.606 691.538 L960.165 691.538 L960.725 691.538 L961.284 691.538 L961.843 691.538 L962.402 691.538 L962.962 691.538 L963.521 691.538 L964.08 691.538 L964.639 691.538 L965.199 691.538 L965.758 691.538 L966.317 691.538 L966.876 691.538 L967.436 691.538 L967.995 691.538 L968.554 691.538 L969.113 691.538 L969.673 691.538 L970.232 691.538 L970.791 691.538 L971.35 691.538 L971.91 691.538 L972.469 691.538 L973.028 691.538 L973.587 691.538 L974.147 691.538 L974.706 691.538 L975.265 691.538 L975.824 691.538 L976.384 691.538 L976.943 691.538 L977.502 691.538 L978.061 691.538 L978.621 691.538 L979.18 691.538 L979.739 691.538 L980.298 691.538 L980.858 691.538 L981.417 691.538 L981.976 691.538 L982.535 691.538 L983.095 691.538 L983.654 691.538 L984.213 691.538 L984.772 691.538 L985.332 691.538 L985.891 691.538 L986.45 691.538 L987.009 691.538 L987.569 691.538 L988.128 691.538 L988.687 691.538 L989.246 691.538 L989.806 691.538 L990.365 691.538 L990.924 691.538 L991.483 691.538 L992.043 691.538 L992.602 691.538 L993.161 691.538 L993.72 691.538 L994.28 691.538 L994.839 691.538 L995.398 691.538 L995.957 691.538 L996.517 691.538 L997.076 691.538 L997.635 691.538 L998.194 691.538 L998.754 691.538 L999.313 691.538 L999.872 691.538 L1000.43 691.538 L1000.99 691.538 L1001.55 691.538 L1002.11 691.538 L1002.67 691.538 L1003.23 691.538 L1003.79 691.538 L1004.35 691.538 L1004.91 691.538 L1005.46 691.538 L1006.02 691.538 L1006.58 691.538 L1007.14 691.538 L1007.7 691.538 L1008.26 691.538 L1008.82 691.538 L1009.38 691.538 L1009.94 691.538 L1010.5 691.538 L1011.06 691.538 L1011.62 691.538 L1012.18 691.538 L1012.73 691.538 L1013.29 691.538 L1013.85 691.538 L1014.41 691.538 L1014.97 691.538 L1015.53 691.538 L1016.09 691.538 L1016.65 691.538 L1017.21 691.538 L1017.77 691.538 L1018.33 691.538 L1018.89 691.538 L1019.45 691.538 L1020.01 691.538 L1020.56 691.538 L1021.12 691.538 L1021.68 691.538 L1022.24 691.538 L1022.8 691.538 L1023.36 691.538 L1023.92 691.538 L1024.48 691.538 L1025.04 691.538 L1025.6 691.538 L1026.16 691.538 L1026.72 691.538 L1027.28 691.538 L1027.83 691.538 L1028.39 691.538 L1028.95 691.538 L1029.51 691.538 L1030.07 691.538 L1030.63 691.538 L1031.19 691.538 L1031.75 691.538 L1032.31 691.538 L1032.87 691.538 L1033.43 691.538 L1033.99 691.538 L1034.55 691.538 L1035.1 691.538 L1035.66 691.538 L1036.22 691.538 L1036.78 691.538 L1037.34 691.538 L1037.9 691.538 L1038.46 691.538 L1039.02 691.538 L1039.58 691.538 L1040.14 691.538 L1040.7 691.538 L1041.26 691.538 L1041.82 691.538 L1042.38 691.538 L1042.93 691.538 L1043.49 691.538 L1044.05 691.538 L1044.61 691.538 L1045.17 691.538 L1045.73 691.538 L1046.29 691.538 L1046.85 691.538 L1047.41 691.538 L1047.97 691.538 L1048.53 691.538 L1049.09 691.538 L1049.65 691.538 L1050.2 691.538 L1050.76 691.538 L1051.32 691.538 L1051.88 691.538 L1052.44 691.538 L1053 691.538 L1053.56 691.538 L1054.12 691.538 L1054.68 691.538 L1055.24 691.538 L1055.8 691.538 L1056.36 691.538 L1056.92 691.538 L1057.48 691.538 L1058.03 691.538 L1058.59 691.538 L1059.15 691.538 L1059.71 691.538 L1060.27 691.538 L1060.83 691.538 L1061.39 691.538 L1061.95 691.538 L1062.51 691.538 L1063.07 691.538 L1063.63 691.538 L1064.19 691.538 L1064.75 691.538 L1065.3 691.538 L1065.86 691.538 L1066.42 691.538 L1066.98 691.538 L1067.54 691.538 L1068.1 691.538 L1068.66 691.538 L1069.22 691.538 L1069.78 691.538 L1070.34 691.538 L1070.9 691.538 L1071.46 691.538 L1072.02 691.538 L1072.57 691.538 L1073.13 691.538 L1073.69 691.538 L1074.25 691.538 L1074.81 691.538 L1075.37 691.538 L1075.93 691.538 L1076.49 691.538 L1077.05 691.538 L1077.61 691.538 L1078.17 691.538 L1078.73 691.538 L1079.29 691.538 L1079.85 691.538 L1080.4 691.538 L1080.96 691.538 L1081.52 691.538 L1082.08 691.538 L1082.64 691.538 L1083.2 691.538 L1083.76 691.538 L1084.32 691.538 L1084.88 691.538 L1085.44 691.538 L1086 691.538 L1086.56 691.538 L1087.12 691.538 L1087.67 691.538 L1088.23 691.538 L1088.79 691.538 L1089.35 691.538 L1089.91 691.538 L1090.47 691.538 L1091.03 691.538 L1091.59 691.538 L1092.15 691.538 L1092.71 691.538 L1093.27 691.538 L1093.83 691.538 L1094.39 691.538 L1094.94 691.538 L1095.5 691.538 L1096.06 691.538 L1096.62 691.538 L1097.18 691.538 L1097.74 691.538 L1098.3 691.538 L1098.86 691.538 L1099.42 691.538 L1099.98 691.538 L1100.54 691.538 L1101.1 691.538 L1101.66 691.538 L1102.22 691.538 L1102.77 691.538 L1103.33 691.538 L1103.89 691.538 L1104.45 691.538 L1105.01 691.538 L1105.57 691.538 L1106.13 691.538 L1106.69 691.538 L1107.25 691.538 L1107.81 691.538 L1108.37 691.538 L1108.93 691.538 L1109.49 691.538 L1110.04 691.538 L1110.6 691.538 L1111.16 691.538 L1111.72 691.538 L1112.28 691.538 L1112.84 691.538 L1113.4 691.538 L1113.96 691.538 L1114.52 691.538 L1115.08 691.538 L1115.64 691.538 L1116.2 691.538 L1116.76 691.538 L1117.31 691.538 L1117.87 691.538 L1118.43 691.538 L1118.99 691.538 L1119.55 691.538 L1120.11 691.538 L1120.67 691.538 L1121.23 691.538 L1121.79 691.538 L1122.35 691.538 L1122.91 691.538 L1123.47 691.538 L1124.03 691.538 L1124.59 691.538 L1125.14 691.538 L1125.7 691.538 L1126.26 691.538 L1126.82 691.538 L1127.38 691.538 L1127.94 691.538 L1128.5 691.538 L1129.06 691.538 L1129.62 691.538 L1130.18 691.538 L1130.74 691.538 L1131.3 691.538 L1131.86 691.538 L1132.41 691.538 L1132.97 691.538 L1133.53 691.538 L1134.09 691.538 L1134.65 691.538 L1135.21 691.538 L1135.77 691.538 L1136.33 691.538 L1136.89 691.538 L1137.45 691.538 L1138.01 691.538 L1138.57 691.538 L1139.13 691.538 L1139.68 691.538 L1140.24 691.538 L1140.8 691.538 L1141.36 691.538 L1141.92 691.538 L1142.48 691.538 L1143.04 691.538 L1143.6 691.538 L1144.16 691.538 L1144.72 691.538 L1145.28 691.538 L1145.84 691.538 L1146.4 691.538 L1146.96 691.538 L1147.51 691.538 L1148.07 691.538 L1148.63 691.538 L1149.19 691.538 L1149.75 691.538 L1150.31 691.538 L1150.87 691.538 L1151.43 691.538 L1151.99 691.538 L1152.55 691.538 L1153.11 691.538 L1153.67 691.538 L1154.23 691.538 L1154.78 691.538 L1155.34 691.538 L1155.9 691.538 L1156.46 691.538 L1157.02 691.538 L1157.58 691.538 L1158.14 691.538 L1158.7 691.538 L1159.26 691.538 L1159.82 691.538 L1160.38 691.538 L1160.94 691.538 L1161.5 691.538 L1162.05 691.538 L1162.61 691.538 L1163.17 691.538 L1163.73 691.538 L1164.29 691.538 L1164.85 691.538 L1165.41 691.538 L1165.97 691.538 L1166.53 691.538 L1167.09 691.538 L1167.65 691.538 L1168.21 691.538 L1168.77 691.538 L1169.33 691.538 L1169.88 691.538 L1170.44 691.538 L1171 691.538 L1171.56 691.538 L1172.12 691.538 L1172.68 691.538 L1173.24 691.538 L1173.8 691.538 L1174.36 691.538 L1174.92 691.538 L1175.48 691.538 L1176.04 691.538 L1176.6 691.538 L1177.15 691.538 L1177.71 691.538 L1178.27 691.538 L1178.83 691.538 L1179.39 691.538 L1179.95 691.538 L1180.51 691.538 L1181.07 691.538 L1181.63 691.538 L1182.19 691.538 L1182.75 691.538 L1183.31 691.538 L1183.87 691.538 L1184.43 691.538 L1184.98 691.538 L1185.54 691.538 L1186.1 691.538 L1186.66 691.538 L1187.22 691.538 L1187.78 691.538 L1188.34 691.538 L1188.9 691.538 L1189.46 691.538 L1190.02 691.538 L1190.58 691.538 L1191.14 691.538 L1191.7 691.538 L1192.25 691.538 L1192.81 691.538 L1193.37 691.538 L1193.93 691.538 L1194.49 691.538 L1195.05 691.538 L1195.61 691.538 L1196.17 691.538 L1196.73 691.538 L1197.29 691.538 L1197.85 691.538 L1198.41 691.538 L1198.97 691.538 L1199.52 691.538 L1200.08 691.538 L1200.64 691.538 L1201.2 691.538 L1201.76 691.538 L1202.32 691.538 L1202.88 691.538 L1203.44 691.538 L1204 691.538 L1204.56 691.538 L1205.12 691.538 L1205.68 691.538 L1206.24 691.538 L1206.8 691.538 L1207.35 691.538 L1207.91 691.538 L1208.47 691.538 L1209.03 691.538 L1209.59 691.538 L1210.15 691.538 L1210.71 691.538 L1211.27 691.538 L1211.83 691.538 L1212.39 691.538 L1212.95 691.538 L1213.51 691.538 L1214.07 691.538 L1214.62 691.538 L1215.18 691.538 L1215.74 691.538 L1216.3 691.538 L1216.86 691.538 L1217.42 691.538 L1217.98 691.538 L1218.54 691.538 L1219.1 691.538 L1219.66 691.538 L1220.22 691.538 L1220.78 691.538 L1221.34 691.538 L1221.89 691.538 L1222.45 691.538 L1223.01 691.538 L1223.57 691.538 L1224.13 691.538 L1224.69 691.538 L1225.25 691.538 L1225.81 691.538 L1226.37 691.538 L1226.93 691.538 L1227.49 691.538 L1228.05 691.538 L1228.61 691.538 L1229.17 691.538 L1229.72 691.538 L1230.28 691.538 L1230.84 691.538 L1231.4 691.538 L1231.96 691.538 L1232.52 691.538 L1233.08 691.538 L1233.64 691.538 L1234.2 691.538 L1234.76 691.538 L1235.32 691.538 L1235.88 691.538 L1236.44 691.538 L1236.99 691.538 L1237.55 691.538 L1238.11 691.538 L1238.67 691.538 L1239.23 691.538 L1239.79 691.538 L1240.35 691.538 L1240.91 691.538 L1241.47 691.538 L1242.03 691.538 L1242.59 691.538 L1243.15 691.538 L1243.71 691.538 L1244.26 691.538 L1244.82 691.538 L1245.38 691.538 L1245.94 691.538 L1246.5 691.538 L1247.06 691.538 L1247.62 691.538 L1248.18 691.538 L1248.74 691.538 L1249.3 691.538 L1249.86 691.538 L1250.42 691.538 L1250.98 691.538 L1251.54 691.538 L1252.09 691.538 L1252.65 691.538 L1253.21 691.538 L1253.77 691.538 L1254.33 691.538 L1254.89 691.538 L1255.45 691.538 L1256.01 691.538 L1256.57 691.538 L1257.13 691.538 L1257.69 691.538 L1258.25 691.538 L1258.81 691.538 L1259.36 691.538 L1259.92 691.538 L1260.48 691.538 L1261.04 691.538 L1261.6 691.538 L1262.16 691.538 L1262.72 691.538 L1263.28 691.538 L1263.84 691.538 L1264.4 691.538 L1264.96 691.538 L1265.52 691.538 L1266.08 691.538 L1266.63 691.538 L1267.19 691.538 L1267.75 691.538 L1268.31 691.538 L1268.87 691.538 L1269.43 691.538 L1269.99 691.538 L1270.55 691.538 L1271.11 691.538 L1271.67 691.538 L1272.23 691.538 L1272.79 691.538 L1273.35 691.538 L1273.91 691.538 L1274.46 691.538 L1275.02 691.538 L1275.58 691.538 L1276.14 691.538 L1276.7 691.538 L1277.26 691.538 L1277.82 691.538 L1278.38 691.538 L1278.94 691.538 L1279.5 691.538 L1280.06 691.538 L1280.62 691.538 L1281.18 691.538 L1281.73 691.538 L1282.29 691.538 L1282.85 691.538 L1283.41 691.538 L1283.97 691.538 L1284.53 691.538 L1285.09 691.538 L1285.65 691.538 L1286.21 691.538 L1286.77 691.538 L1287.33 691.538 L1287.89 691.538 L1288.45 691.538 L1289 691.538 L1289.56 691.538 L1290.12 691.538 L1290.68 691.538 L1291.24 691.538 L1291.8 691.538 L1292.36 691.538 L1292.92 691.538 L1293.48 691.538 L1294.04 691.538 L1294.6 691.538 L1295.16 691.538 L1295.72 691.538 L1296.28 691.538 L1296.83 691.538 L1297.39 691.538 L1297.95 691.538 L1298.51 691.538 L1299.07 691.538 L1299.63 691.538 L1300.19 691.538 L1300.75 691.538 L1301.31 691.538 L1301.87 691.538 L1302.43 691.538 L1302.99 691.538 L1303.55 691.538 L1304.1 691.538 L1304.66 691.538 L1305.22 691.538 L1305.78 691.538 L1306.34 691.538 L1306.9 691.538 L1307.46 691.538 L1308.02 691.538 L1308.58 691.538 L1309.14 691.538 L1309.7 691.538 L1310.26 691.538 L1310.82 691.538 L1311.38 691.538 L1311.93 691.538 L1312.49 691.538 L1313.05 691.538 L1313.61 691.538 L1314.17 691.538 L1314.73 691.538 L1315.29 691.538 L1315.85 691.538 L1316.41 691.538 L1316.97 691.538 L1317.53 691.538 L1318.09 691.538 L1318.65 691.538 L1319.2 691.538 L1319.76 691.538 L1320.32 691.538 L1320.88 691.538 L1321.44 691.538 L1322 691.538 L1322.56 691.538 L1323.12 691.538 L1323.68 691.538 L1324.24 691.538 L1324.8 691.538 L1325.36 691.538 L1325.92 691.538 L1326.47 691.538 L1327.03 691.538 L1327.59 691.538 L1328.15 691.538 L1328.71 691.538 L1329.27 691.538 L1329.83 691.538 L1330.39 691.538 L1330.95 691.538 L1331.51 691.538 L1332.07 691.538 L1332.63 691.538 L1333.19 691.538 L1333.75 691.538 L1334.3 691.538 L1334.86 691.538 L1335.42 691.538 L1335.98 691.538 L1336.54 691.538 L1337.1 691.538 L1337.66 691.538 L1338.22 691.538 L1338.78 691.538 L1339.34 691.538 L1339.9 691.538 L1340.46 691.538 L1341.02 691.538 L1341.57 691.538 L1342.13 691.538 L1342.69 691.538 L1343.25 691.538 L1343.81 691.538 L1344.37 691.538 L1344.93 691.538 L1345.49 691.538 L1346.05 691.538 L1346.61 691.538 L1347.17 691.538 L1347.73 691.538 L1348.29 691.538 L1348.84 691.538 L1349.4 691.538 L1349.96 691.538 L1350.52 691.538 L1351.08 691.538 L1351.64 691.538 L1352.2 691.538 L1352.76 691.538 L1353.32 691.538 L1353.88 691.538 L1354.44 691.538 L1355 691.538 L1355.56 691.538 L1356.12 691.538 L1356.67 691.538 L1357.23 691.538 L1357.79 691.538 L1358.35 691.538 L1358.91 691.538 L1359.47 691.538 L1360.03 691.538 L1360.59 691.538 L1361.15 691.538 L1361.71 691.538 L1362.27 691.538 L1362.83 691.538 L1363.39 691.538 L1363.94 691.538 L1364.5 691.538 L1365.06 691.538 L1365.62 691.538 L1366.18 691.538 L1366.74 691.538 L1367.3 691.538 L1367.86 691.538 L1368.42 691.538 L1368.98 691.538 L1369.54 691.538 L1370.1 691.538 L1370.66 691.538 L1371.21 691.538 L1371.77 691.538 L1372.33 691.538 L1372.89 691.538 L1373.45 691.538 L1374.01 691.538 L1374.57 691.538 L1375.13 691.538 L1375.69 691.538 L1376.25 691.538 L1376.81 691.538 L1377.37 691.538 L1377.93 691.538 L1378.49 691.538 L1379.04 691.538 L1379.6 691.538 L1380.16 691.538 L1380.72 691.538 L1381.28 691.538 L1381.84 691.538 L1382.4 691.538 L1382.96 691.538 L1383.52 691.538 L1384.08 691.538 L1384.64 691.538 L1385.2 691.538 L1385.76 691.538 L1386.31 691.538 L1386.87 691.538 L1387.43 691.538 L1387.99 691.538 L1388.55 691.538 L1389.11 691.538 L1389.67 691.538 L1390.23 691.538 L1390.79 691.538 L1391.35 691.538 L1391.91 691.538 L1392.47 691.538 L1393.03 691.538 L1393.58 691.538 L1394.14 691.538 L1394.7 691.538 L1395.26 691.538 L1395.82 691.538 L1396.38 691.538 L1396.94 691.538 L1397.5 691.538 L1398.06 691.538 L1398.62 691.538 L1399.18 691.538 L1399.74 691.538 L1400.3 691.538 L1400.86 691.538 L1401.41 691.538 L1401.97 691.538 L1402.53 691.538 L1403.09 691.538 L1403.65 691.538 L1404.21 691.538 L1404.77 691.538 L1405.33 691.538 L1405.89 691.538 L1406.45 691.538 L1407.01 691.538 L1407.57 691.538 L1408.13 691.538 L1408.68 691.538 L1409.24 691.538 L1409.8 691.538 L1410.36 691.538 L1410.92 691.538 L1411.48 691.538 L1412.04 691.538 L1412.6 691.538 L1413.16 691.538 L1413.72 691.538 L1414.28 691.538 L1414.84 691.538 L1415.4 691.538 L1415.95 691.538 L1416.51 691.538 L1417.07 691.538 L1417.63 691.538 L1418.19 691.538 L1418.75 691.538 L1419.31 691.538 L1419.87 691.538 L1420.43 691.538 L1420.99 691.538 L1421.55 691.538 L1422.11 691.538 L1422.67 691.538 L1423.23 691.538 L1423.78 691.538 L1424.34 691.538 L1424.9 691.538 L1425.46 691.538 L1426.02 691.538 L1426.58 691.538 L1427.14 691.538 L1427.7 691.538 L1428.26 691.538 L1428.82 691.538 L1429.38 691.538 L1429.94 691.538 L1430.5 691.538 L1431.05 691.538 L1431.61 691.538 L1432.17 691.538 L1432.73 691.538 L1433.29 691.538 L1433.85 691.538 L1434.41 691.538 L1434.97 691.538 L1435.53 691.538 L1436.09 691.538 L1436.65 691.538 L1437.21 691.538 L1437.77 691.538 L1438.33 691.538 L1438.88 691.538 L1439.44 691.538 L1440 691.538 L1440.56 691.538 L1441.12 691.538 L1441.68 691.538 L1442.24 691.538 L1442.8 691.538 L1443.36 691.538 L1443.92 691.538 L1444.48 691.538 L1445.04 691.538 L1445.6 691.538 L1446.15 691.538 L1446.71 691.538 L1447.27 691.538 L1447.83 691.538 L1448.39 691.538 L1448.95 691.538 L1449.51 691.538 L1450.07 691.538 L1450.63 691.538 L1451.19 691.538 L1451.75 691.538 L1452.31 691.538 L1452.87 691.538 L1453.42 691.538 L1453.98 691.538 L1454.54 691.538 L1455.1 691.538 L1455.66 691.538 L1456.22 691.538 L1456.78 691.538 L1457.34 691.538 L1457.9 691.538 L1458.46 691.538 L1459.02 691.538 L1459.58 691.538 L1460.14 691.538 L1460.7 691.538 L1461.25 691.538 L1461.81 691.538 L1462.37 691.538 L1462.93 691.538 L1463.49 691.538 L1464.05 691.538 L1464.61 691.538 L1465.17 691.538 L1465.73 691.538 L1466.29 691.538 L1466.85 691.538 L1467.41 691.538 L1467.97 691.538 L1468.52 691.538 L1469.08 691.538 L1469.64 691.538 L1470.2 691.538 L1470.76 691.538 L1471.32 691.538 L1471.88 691.538 L1472.44 691.538 L1473 691.538 L1473.56 691.538 L1474.12 691.538 L1474.68 691.538 L1475.24 691.538 L1475.79 691.538 L1476.35 691.538 L1476.91 691.538 L1477.47 691.538 L1478.03 691.538 L1478.59 691.538 L1479.15 691.538 L1479.71 691.538 L1480.27 691.538 L1480.83 691.538 L1481.39 691.538 L1481.95 691.538 L1482.51 691.538 L1483.07 691.538 L1483.62 691.538 L1484.18 691.538 L1484.74 691.538 L1485.3 691.538 L1485.86 691.538 L1486.42 691.538 L1486.98 691.538 L1487.54 691.538 L1488.1 691.538 L1488.66 691.538 L1489.22 691.538 L1489.78 691.538 L1490.34 691.538 L1490.89 691.538 L1491.45 691.538 L1492.01 691.538 L1492.57 691.538 L1493.13 691.538 L1493.69 691.538 L1494.25 691.538 L1494.81 691.538 L1495.37 691.538 L1495.93 691.538 L1496.49 691.538 L1497.05 691.538 L1497.61 691.538 L1498.16 691.538 L1498.72 691.538 L1499.28 691.538 L1499.84 691.538 L1500.4 691.538 L1500.96 691.538 L1501.52 691.538 L1502.08 691.538 L1502.64 691.538 L1503.2 691.538 L1503.76 691.538 L1504.32 691.538 L1504.88 691.538 L1505.44 691.538 L1505.99 691.538 L1506.55 691.538 L1507.11 691.538 L1507.67 691.538 L1508.23 691.538 L1508.79 691.538 L1509.35 691.538 L1509.91 691.538 L1510.47 691.538 L1511.03 691.538 L1511.59 691.538 L1512.15 691.538 L1512.71 691.538 L1513.26 691.538 L1513.82 691.538 L1514.38 691.538 L1514.94 691.538 L1515.5 691.538 L1516.06 691.538 L1516.62 691.538 L1517.18 691.538 L1517.74 691.538 L1518.3 691.538 L1518.86 691.538 L1519.42 691.538 L1519.98 691.538 L1520.53 691.538 L1521.09 691.538 L1521.65 691.538 L1522.21 691.538 L1522.77 691.538 L1523.33 691.538 L1523.89 691.538 L1524.45 691.538 L1525.01 691.538 L1525.57 691.538 L1526.13 691.538 L1526.69 691.538 L1527.25 691.538 L1527.81 691.538 L1528.36 691.538 L1528.92 691.538 L1529.48 691.538 L1530.04 691.538 L1530.6 691.538 L1531.16 691.538 L1531.72 691.538 L1532.28 691.538 L1532.84 691.538 L1533.4 691.538 L1533.96 691.538 L1534.52 691.538 L1535.08 691.538 L1535.63 691.538 L1536.19 691.538 L1536.75 691.538 L1537.31 691.538 L1537.87 691.538 L1538.43 691.538 L1538.99 691.538 L1539.55 691.538 L1540.11 691.538 L1540.67 691.538 L1541.23 691.538 L1541.79 691.538 L1542.35 691.538 L1542.9 691.538 L1543.46 691.538 L1544.02 691.538 L1544.58 691.538 L1545.14 691.538 L1545.7 691.538 L1546.26 691.538 L1546.82 691.538 L1547.38 691.538 L1547.94 691.538 L1548.5 691.538 L1549.06 691.538 L1549.62 691.538 L1550.18 691.538 L1550.73 691.538 L1551.29 691.538 L1551.85 691.538 L1552.41 691.538 L1552.97 691.538 L1553.53 691.538 L1554.09 691.538 L1554.65 691.538 L1555.21 691.538 L1555.77 691.538 L1556.33 691.538 L1556.89 691.538 L1557.45 691.538 L1558 691.538 L1558.56 691.538 L1559.12 691.538 L1559.68 691.538 L1560.24 691.538 L1560.8 691.538 L1561.36 691.538 L1561.92 691.538 L1562.48 691.538 L1563.04 691.538 L1563.6 691.538 L1564.16 691.538 L1564.72 691.538 L1565.28 691.538 L1565.83 691.538 L1566.39 691.538 L1566.95 691.538 L1567.51 691.538 L1568.07 691.538 L1568.63 691.538 L1569.19 691.538 L1569.75 691.538 L1570.31 691.538 L1570.87 691.538 L1571.43 691.538 L1571.99 691.538 L1572.55 691.538 L1573.1 691.538 L1573.66 691.538 L1574.22 691.538 L1574.78 691.538 L1575.34 691.538 L1575.9 691.538 L1576.46 691.538 L1577.02 691.538 L1577.58 691.538 L1578.14 691.538 L1578.7 691.538 L1579.26 691.538 L1579.82 691.538 L1580.37 691.538 L1580.93 691.538 L1581.49 691.538 L1582.05 691.538 L1582.61 691.538 L1583.17 691.538 L1583.73 691.538 L1584.29 691.538 L1584.85 691.538 L1585.41 691.538 L1585.97 691.538 L1586.53 691.538 L1587.09 691.538 L1587.65 691.538 L1588.2 691.538 L1588.76 691.538 L1589.32 691.538 L1589.88 691.538 L1590.44 691.538 L1591 691.538 L1591.56 691.538 L1592.12 691.538 L1592.68 691.538 L1593.24 691.538 L1593.8 691.538 L1594.36 691.538 L1594.92 691.538 L1595.47 691.538 L1596.03 691.538 L1596.59 691.538 L1597.15 691.538 L1597.71 691.538 L1598.27 691.538 L1598.83 691.538 L1599.39 691.538 L1599.95 691.538 L1600.51 691.538 L1601.07 691.538 L1601.63 691.538 L1602.19 691.538 L1602.74 691.538 L1603.3 691.538 L1603.86 691.538 L1604.42 691.538 L1604.98 691.538 L1605.54 691.538 L1606.1 691.538 L1606.66 691.538 L1607.22 691.538 L1607.78 691.538 L1608.34 691.538 L1608.9 691.538 L1609.46 691.538 L1610.02 691.538 L1610.57 691.538 L1611.13 691.538 L1611.69 691.538 L1612.25 691.538 L1612.81 691.538 L1613.37 691.538 L1613.93 691.538 L1614.49 691.538 L1615.05 691.538 L1615.61 691.538 L1616.17 691.538 L1616.73 691.538 L1617.29 691.538 L1617.84 691.538 L1618.4 691.538 L1618.96 691.538 L1619.52 691.538 L1620.08 691.538 L1620.64 691.538 L1621.2 691.538 L1621.76 691.538 L1622.32 691.538 L1622.88 691.538 L1623.44 691.538 L1624 691.538 L1624.56 691.538 L1625.11 691.538 L1625.67 691.538 L1626.23 691.538 L1626.79 691.538 L1627.35 691.538 L1627.91 691.538 L1628.47 691.538 L1629.03 691.538 L1629.59 691.538 L1630.15 691.538 L1630.71 691.538 L1631.27 691.538 L1631.83 691.538 L1632.39 691.538 L1632.94 691.538 L1633.5 691.538 L1634.06 691.538 L1634.62 691.538 L1635.18 691.538 L1635.74 691.538 L1636.3 691.538 L1636.86 691.538 L1637.42 691.538 L1637.98 691.538 L1638.54 691.538 L1639.1 691.538 L1639.66 691.538 L1640.21 691.538 L1640.77 691.538 L1641.33 691.538 L1641.89 691.538 L1642.45 691.538 L1643.01 691.538 L1643.57 691.538 L1644.13 691.538 L1644.69 691.538 L1645.25 691.538 L1645.81 691.538 L1646.37 691.538 L1646.93 691.538 L1647.48 691.538 L1648.04 691.538 L1648.6 691.538 L1649.16 691.538 L1649.72 691.538 L1650.28 691.538 L1650.84 691.538 L1651.4 691.538 L1651.96 691.538 L1652.52 691.538 L1653.08 691.538 L1653.64 691.538 L1654.2 691.538 L1654.76 691.538 L1655.31 691.538 L1655.87 691.538 L1656.43 691.538 L1656.99 691.538 L1657.55 691.538 L1658.11 691.538 L1658.67 691.538 L1659.23 691.538 L1659.79 691.538 L1660.35 691.538 L1660.91 691.538 L1661.47 691.538 L1662.03 691.538 L1662.58 691.538 L1663.14 691.538 L1663.7 691.538 L1664.26 691.538 L1664.82 691.538 L1665.38 691.538 L1665.94 691.538 L1666.5 691.538 L1667.06 691.538 L1667.62 691.538 L1668.18 691.538 L1668.74 691.538 L1669.3 691.538 L1669.85 691.538 L1670.41 691.538 L1670.97 691.538 L1671.53 691.538 L1672.09 691.538 L1672.65 691.538 L1673.21 691.538 L1673.77 691.538 L1674.33 691.538 L1674.89 691.538 L1675.45 691.538 L1676.01 691.538 L1676.57 691.538 L1677.13 691.538 L1677.68 691.538 L1678.24 691.538 L1678.8 691.538 L1679.36 691.538 L1679.92 691.538 L1680.48 691.538 L1681.04 691.538 L1681.6 691.538 L1682.16 691.538 L1682.72 691.538 L1683.28 691.538 L1683.84 691.538 L1684.4 691.538 L1684.95 691.538 L1685.51 691.538 L1686.07 691.538 L1686.63 691.538 L1687.19 691.538 L1687.75 691.538 L1688.31 691.538 L1688.87 691.538 L1689.43 691.538 L1689.99 691.538 L1690.55 691.538 L1691.11 691.538 L1691.67 691.538 L1692.23 691.538 L1692.78 691.538 L1693.34 691.538 L1693.9 691.538 L1694.46 691.538 L1695.02 691.538 L1695.58 691.538 L1696.14 691.538 L1696.7 691.538 L1697.26 691.538 L1697.82 691.538 L1698.38 691.538 L1698.94 691.538 L1699.5 691.538 L1700.05 691.538 L1700.61 691.538 L1701.17 691.538 L1701.73 691.538 L1702.29 691.538 L1702.85 691.538 L1703.41 691.538 L1703.97 691.538 L1704.53 691.538 L1705.09 691.538 L1705.65 691.538 L1706.21 691.538 L1706.77 691.538 L1707.32 691.538 L1707.88 691.538 L1708.44 691.538 L1709 691.538 L1709.56 691.538 L1710.12 691.538 L1710.68 691.538 L1711.24 691.538 L1711.8 691.538 L1712.36 691.538 L1712.92 691.538 L1713.48 691.538 L1714.04 691.538 L1714.6 691.538 L1715.15 691.538 L1715.71 691.538 L1716.27 691.538 L1716.83 691.538 L1717.39 691.538 L1717.95 691.538 L1718.51 691.538 L1719.07 691.538 L1719.63 691.538 L1720.19 691.538 L1720.75 691.538 L1721.31 691.538 L1721.87 691.538 L1722.42 691.538 L1722.98 691.538 L1723.54 691.538 L1724.1 691.538 L1724.66 691.538 L1725.22 691.538 L1725.78 691.538 L1726.34 691.538 L1726.9 691.538 L1727.46 691.538 L1728.02 691.538 L1728.58 691.538 L1729.14 691.538 L1729.69 691.538 L1730.25 691.538 L1730.81 691.538 L1731.37 691.538 L1731.93 691.538 L1732.49 691.538 L1733.05 691.538 L1733.61 691.538 L1734.17 691.538 L1734.73 691.538 L1735.29 691.538 L1735.85 691.538 L1736.41 691.538 L1736.97 691.538 L1737.52 691.538 L1738.08 691.538 L1738.64 691.538 L1739.2 691.538 L1739.76 691.538 L1740.32 691.538 L1740.88 691.538 L1741.44 691.538 L1742 691.538 L1742.56 691.538 L1743.12 691.538 L1743.68 691.538 L1744.24 691.538 L1744.79 691.538 L1745.35 691.538 L1745.91 691.538 L1746.47 691.538 L1747.03 691.538 L1747.59 691.538 L1748.15 691.538 L1748.71 691.538 L1749.27 691.538 L1749.83 691.538 L1750.39 691.538 L1750.95 691.538 L1751.51 691.538 L1752.06 691.538 L1752.62 691.538 L1753.18 691.538 L1753.74 691.538 L1754.3 691.538 L1754.86 691.538 L1755.42 691.538 L1755.98 691.538 L1756.54 691.538 L1757.1 691.538 L1757.66 691.538 L1758.22 691.538 L1758.78 691.538 L1759.34 691.538 L1759.89 691.538 L1760.45 691.538 L1761.01 691.538 L1761.57 691.538 L1762.13 691.538 L1762.69 691.538 L1763.25 691.538 L1763.81 691.538 L1764.37 691.538 L1764.93 691.538 L1765.49 691.538 L1766.05 691.538 L1766.61 691.538 L1767.16 691.538 L1767.72 691.538 L1768.28 691.538 L1768.84 691.538 L1769.4 691.538 L1769.96 691.538 L1770.52 691.538 L1771.08 691.538 L1771.64 691.538 L1772.2 691.538 L1772.76 691.538 L1773.32 691.538 L1773.88 691.538 L1774.43 691.538 L1774.99 691.538 L1775.55 691.538 L1776.11 691.538 L1776.67 691.538 L1777.23 691.538 L1777.79 691.538 L1778.35 691.538 L1778.91 691.538 L1779.47 691.538 L1780.03 691.538 L1780.59 691.538 L1781.15 691.538 L1781.71 691.538 L1782.26 691.538 L1782.82 691.538 L1783.38 691.538 L1783.94 691.538 L1784.5 691.538 L1785.06 691.538 L1785.62 691.538 L1786.18 691.538 L1786.74 691.538 L1787.3 691.538 L1787.86 691.538 L1788.42 691.538 L1788.98 691.538 L1789.53 691.538 L1790.09 691.538 L1790.65 691.538 L1791.21 691.538 L1791.77 691.538 L1792.33 691.538 L1792.89 691.538 L1793.45 691.538 L1794.01 691.538 L1794.57 691.538 L1795.13 691.538 L1795.69 691.538 L1796.25 691.538 L1796.8 691.538 L1797.36 691.538 L1797.92 691.538 L1798.48 691.538 L1799.04 691.538 L1799.6 691.538 L1800.16 691.538 L1800.72 691.538 L1801.28 691.538 L1801.84 691.538 L1802.4 691.538 L1802.96 691.538 L1803.52 691.538 L1804.08 691.538 L1804.63 691.538 L1805.19 691.538 L1805.75 691.538 L1806.31 691.538 L1806.87 691.538 L1807.43 691.538 L1807.99 691.538 L1808.55 691.538 L1809.11 691.538 L1809.67 691.538 L1810.23 691.538 L1810.79 691.538 L1811.35 691.538 L1811.9 691.538 L1812.46 691.538 L1813.02 691.538 L1813.58 691.538 L1814.14 691.538 L1814.7 691.538 L1815.26 691.538 L1815.82 691.538 L1816.38 691.538 L1816.94 691.538 L1817.5 691.538 L1818.06 691.538 L1818.62 691.538 L1819.18 691.538 L1819.73 691.538 L1820.29 691.538 L1820.85 691.538 L1821.41 691.538 L1821.97 691.538 L1822.53 691.538 L1823.09 691.538 L1823.65 691.538 L1824.21 691.538 L1824.77 691.538 L1825.33 691.538 L1825.89 691.538 L1826.45 691.538 L1827 691.538 L1827.56 691.538 L1828.12 691.538 L1828.68 691.538 L1829.24 691.538 L1829.8 691.538 L1830.36 691.538 L1830.92 691.538 L1831.48 691.538 L1832.04 691.538 L1832.6 691.538 L1833.16 691.538 L1833.72 691.538 L1834.27 691.538 L1834.83 691.538 L1835.39 691.538 L1835.95 691.538 L1836.51 691.538 L1837.07 691.538 L1837.63 691.538 L1838.19 691.538 L1838.19 683.036 L1837.63 683.036 L1837.07 683.036 L1836.51 683.036 L1835.95 683.036 L1835.39 683.036 L1834.83 683.036 L1834.27 683.036 L1833.72 683.036 L1833.16 683.036 L1832.6 683.036 L1832.04 683.036 L1831.48 683.036 L1830.92 683.036 L1830.36 683.036 L1829.8 683.036 L1829.24 683.036 L1828.68 683.036 L1828.12 683.036 L1827.56 683.036 L1827 683.036 L1826.45 683.036 L1825.89 683.036 L1825.33 683.036 L1824.77 683.036 L1824.21 683.036 L1823.65 683.036 L1823.09 683.036 L1822.53 683.036 L1821.97 683.036 L1821.41 683.036 L1820.85 683.036 L1820.29 683.036 L1819.73 683.036 L1819.18 683.036 L1818.62 683.036 L1818.06 683.036 L1817.5 683.036 L1816.94 683.036 L1816.38 683.036 L1815.82 683.036 L1815.26 683.036 L1814.7 683.036 L1814.14 683.036 L1813.58 683.036 L1813.02 683.036 L1812.46 683.036 L1811.9 683.036 L1811.35 683.036 L1810.79 683.036 L1810.23 683.036 L1809.67 683.036 L1809.11 683.036 L1808.55 683.036 L1807.99 683.036 L1807.43 683.036 L1806.87 683.036 L1806.31 683.036 L1805.75 683.036 L1805.19 683.036 L1804.63 683.036 L1804.08 683.036 L1803.52 683.036 L1802.96 683.036 L1802.4 683.036 L1801.84 683.036 L1801.28 683.036 L1800.72 683.036 L1800.16 683.036 L1799.6 683.036 L1799.04 683.036 L1798.48 683.036 L1797.92 683.036 L1797.36 683.036 L1796.8 683.036 L1796.25 683.036 L1795.69 683.036 L1795.13 683.036 L1794.57 683.036 L1794.01 683.036 L1793.45 683.036 L1792.89 683.036 L1792.33 683.036 L1791.77 683.036 L1791.21 683.036 L1790.65 683.036 L1790.09 683.036 L1789.53 683.036 L1788.98 683.036 L1788.42 683.036 L1787.86 683.036 L1787.3 683.036 L1786.74 683.036 L1786.18 683.036 L1785.62 683.036 L1785.06 683.036 L1784.5 683.036 L1783.94 683.036 L1783.38 683.036 L1782.82 683.036 L1782.26 683.036 L1781.71 683.036 L1781.15 683.036 L1780.59 683.036 L1780.03 683.036 L1779.47 683.036 L1778.91 683.036 L1778.35 683.036 L1777.79 683.036 L1777.23 683.036 L1776.67 683.036 L1776.11 683.036 L1775.55 683.036 L1774.99 683.036 L1774.43 683.036 L1773.88 683.036 L1773.32 683.036 L1772.76 683.036 L1772.2 683.036 L1771.64 683.036 L1771.08 683.036 L1770.52 683.036 L1769.96 683.036 L1769.4 683.036 L1768.84 683.036 L1768.28 683.036 L1767.72 683.036 L1767.16 683.036 L1766.61 683.036 L1766.05 683.036 L1765.49 683.036 L1764.93 683.036 L1764.37 683.036 L1763.81 683.036 L1763.25 683.036 L1762.69 683.036 L1762.13 683.036 L1761.57 683.036 L1761.01 683.036 L1760.45 683.036 L1759.89 683.036 L1759.34 683.036 L1758.78 683.036 L1758.22 683.036 L1757.66 683.036 L1757.1 683.036 L1756.54 683.036 L1755.98 683.036 L1755.42 683.036 L1754.86 683.036 L1754.3 683.036 L1753.74 683.036 L1753.18 683.036 L1752.62 683.036 L1752.06 683.036 L1751.51 683.036 L1750.95 683.036 L1750.39 683.036 L1749.83 683.036 L1749.27 683.036 L1748.71 683.036 L1748.15 683.036 L1747.59 683.036 L1747.03 683.036 L1746.47 683.036 L1745.91 683.036 L1745.35 683.036 L1744.79 683.036 L1744.24 683.036 L1743.68 683.036 L1743.12 683.036 L1742.56 683.036 L1742 683.036 L1741.44 683.036 L1740.88 683.036 L1740.32 683.036 L1739.76 683.036 L1739.2 683.036 L1738.64 683.036 L1738.08 683.036 L1737.52 683.036 L1736.97 683.036 L1736.41 683.036 L1735.85 683.036 L1735.29 683.036 L1734.73 683.036 L1734.17 683.036 L1733.61 683.036 L1733.05 683.036 L1732.49 683.036 L1731.93 683.036 L1731.37 683.036 L1730.81 683.036 L1730.25 683.036 L1729.69 683.036 L1729.14 683.036 L1728.58 683.036 L1728.02 683.036 L1727.46 683.036 L1726.9 683.036 L1726.34 683.036 L1725.78 683.036 L1725.22 683.036 L1724.66 683.036 L1724.1 683.036 L1723.54 683.036 L1722.98 683.036 L1722.42 683.036 L1721.87 683.036 L1721.31 683.036 L1720.75 683.036 L1720.19 683.036 L1719.63 683.036 L1719.07 683.036 L1718.51 683.036 L1717.95 683.036 L1717.39 683.036 L1716.83 683.036 L1716.27 683.036 L1715.71 683.036 L1715.15 683.036 L1714.6 683.036 L1714.04 683.036 L1713.48 683.036 L1712.92 683.036 L1712.36 683.036 L1711.8 683.036 L1711.24 683.036 L1710.68 683.036 L1710.12 683.036 L1709.56 683.036 L1709 683.036 L1708.44 683.036 L1707.88 683.036 L1707.32 683.036 L1706.77 683.036 L1706.21 683.036 L1705.65 683.036 L1705.09 683.036 L1704.53 683.036 L1703.97 683.036 L1703.41 683.036 L1702.85 683.036 L1702.29 683.036 L1701.73 683.036 L1701.17 683.036 L1700.61 683.036 L1700.05 683.036 L1699.5 683.036 L1698.94 683.036 L1698.38 683.036 L1697.82 683.036 L1697.26 683.036 L1696.7 683.036 L1696.14 683.036 L1695.58 683.036 L1695.02 683.036 L1694.46 683.036 L1693.9 683.036 L1693.34 683.036 L1692.78 683.036 L1692.23 683.036 L1691.67 683.036 L1691.11 683.036 L1690.55 683.036 L1689.99 683.036 L1689.43 683.036 L1688.87 683.036 L1688.31 683.036 L1687.75 683.036 L1687.19 683.036 L1686.63 683.036 L1686.07 683.036 L1685.51 683.036 L1684.95 683.036 L1684.4 683.036 L1683.84 683.036 L1683.28 683.036 L1682.72 683.036 L1682.16 683.036 L1681.6 683.036 L1681.04 683.036 L1680.48 683.036 L1679.92 683.036 L1679.36 683.036 L1678.8 683.036 L1678.24 683.036 L1677.68 683.036 L1677.13 683.036 L1676.57 683.036 L1676.01 683.036 L1675.45 683.036 L1674.89 683.036 L1674.33 683.036 L1673.77 683.036 L1673.21 683.036 L1672.65 683.036 L1672.09 683.036 L1671.53 683.036 L1670.97 683.036 L1670.41 683.036 L1669.85 683.036 L1669.3 683.036 L1668.74 683.036 L1668.18 683.036 L1667.62 683.036 L1667.06 683.036 L1666.5 683.036 L1665.94 683.036 L1665.38 683.036 L1664.82 683.036 L1664.26 683.036 L1663.7 683.036 L1663.14 683.036 L1662.58 683.036 L1662.03 683.036 L1661.47 683.036 L1660.91 683.036 L1660.35 683.036 L1659.79 683.036 L1659.23 683.036 L1658.67 683.036 L1658.11 683.036 L1657.55 683.036 L1656.99 683.036 L1656.43 683.036 L1655.87 683.036 L1655.31 683.036 L1654.76 683.036 L1654.2 683.036 L1653.64 683.036 L1653.08 683.036 L1652.52 683.036 L1651.96 683.036 L1651.4 683.036 L1650.84 683.036 L1650.28 683.036 L1649.72 683.036 L1649.16 683.036 L1648.6 683.036 L1648.04 683.036 L1647.48 683.036 L1646.93 683.036 L1646.37 683.036 L1645.81 683.036 L1645.25 683.036 L1644.69 683.036 L1644.13 683.036 L1643.57 683.036 L1643.01 683.036 L1642.45 683.036 L1641.89 683.036 L1641.33 683.036 L1640.77 683.036 L1640.21 683.036 L1639.66 683.036 L1639.1 683.036 L1638.54 683.036 L1637.98 683.036 L1637.42 683.036 L1636.86 683.036 L1636.3 683.036 L1635.74 683.036 L1635.18 683.036 L1634.62 683.036 L1634.06 683.036 L1633.5 683.036 L1632.94 683.036 L1632.39 683.036 L1631.83 683.036 L1631.27 683.036 L1630.71 683.036 L1630.15 683.036 L1629.59 683.036 L1629.03 683.036 L1628.47 683.036 L1627.91 683.036 L1627.35 683.036 L1626.79 683.036 L1626.23 683.036 L1625.67 683.036 L1625.11 683.036 L1624.56 683.036 L1624 683.036 L1623.44 683.036 L1622.88 683.036 L1622.32 683.036 L1621.76 683.036 L1621.2 683.036 L1620.64 683.036 L1620.08 683.036 L1619.52 683.036 L1618.96 683.036 L1618.4 683.036 L1617.84 683.036 L1617.29 683.036 L1616.73 683.036 L1616.17 683.036 L1615.61 683.036 L1615.05 683.036 L1614.49 683.036 L1613.93 683.036 L1613.37 683.036 L1612.81 683.036 L1612.25 683.036 L1611.69 683.036 L1611.13 683.036 L1610.57 683.036 L1610.02 683.036 L1609.46 683.036 L1608.9 683.036 L1608.34 683.036 L1607.78 683.036 L1607.22 683.036 L1606.66 683.036 L1606.1 683.036 L1605.54 683.036 L1604.98 683.036 L1604.42 683.036 L1603.86 683.036 L1603.3 683.036 L1602.74 683.036 L1602.19 683.036 L1601.63 683.036 L1601.07 683.036 L1600.51 683.036 L1599.95 683.036 L1599.39 683.036 L1598.83 683.036 L1598.27 683.036 L1597.71 683.036 L1597.15 683.036 L1596.59 683.036 L1596.03 683.036 L1595.47 683.036 L1594.92 683.036 L1594.36 683.036 L1593.8 683.036 L1593.24 683.036 L1592.68 683.036 L1592.12 683.036 L1591.56 683.036 L1591 683.036 L1590.44 683.036 L1589.88 683.036 L1589.32 683.036 L1588.76 683.036 L1588.2 683.036 L1587.65 683.036 L1587.09 683.036 L1586.53 683.036 L1585.97 683.036 L1585.41 683.036 L1584.85 683.036 L1584.29 683.036 L1583.73 683.036 L1583.17 683.036 L1582.61 683.036 L1582.05 683.036 L1581.49 683.036 L1580.93 683.036 L1580.37 683.036 L1579.82 683.036 L1579.26 683.036 L1578.7 683.036 L1578.14 683.036 L1577.58 683.036 L1577.02 683.036 L1576.46 683.036 L1575.9 683.036 L1575.34 683.036 L1574.78 683.036 L1574.22 683.036 L1573.66 683.036 L1573.1 683.036 L1572.55 683.036 L1571.99 683.036 L1571.43 683.036 L1570.87 683.036 L1570.31 683.036 L1569.75 683.036 L1569.19 683.036 L1568.63 683.036 L1568.07 683.036 L1567.51 683.036 L1566.95 683.036 L1566.39 683.036 L1565.83 683.036 L1565.28 683.036 L1564.72 683.036 L1564.16 683.036 L1563.6 683.036 L1563.04 683.036 L1562.48 683.036 L1561.92 683.036 L1561.36 683.036 L1560.8 683.036 L1560.24 683.036 L1559.68 683.036 L1559.12 683.036 L1558.56 683.036 L1558 683.036 L1557.45 683.036 L1556.89 683.036 L1556.33 683.036 L1555.77 683.036 L1555.21 683.036 L1554.65 683.036 L1554.09 683.036 L1553.53 683.036 L1552.97 683.036 L1552.41 683.036 L1551.85 683.036 L1551.29 683.036 L1550.73 683.036 L1550.18 683.036 L1549.62 683.036 L1549.06 683.036 L1548.5 683.036 L1547.94 683.036 L1547.38 683.036 L1546.82 683.036 L1546.26 683.036 L1545.7 683.036 L1545.14 683.036 L1544.58 683.036 L1544.02 683.036 L1543.46 683.036 L1542.9 683.036 L1542.35 683.036 L1541.79 683.036 L1541.23 683.036 L1540.67 683.036 L1540.11 683.036 L1539.55 683.036 L1538.99 683.036 L1538.43 683.036 L1537.87 683.036 L1537.31 683.036 L1536.75 683.036 L1536.19 683.036 L1535.63 683.036 L1535.08 683.036 L1534.52 683.036 L1533.96 683.036 L1533.4 683.036 L1532.84 683.036 L1532.28 683.036 L1531.72 683.036 L1531.16 683.036 L1530.6 683.036 L1530.04 683.036 L1529.48 683.036 L1528.92 683.036 L1528.36 683.036 L1527.81 683.036 L1527.25 683.036 L1526.69 683.036 L1526.13 683.036 L1525.57 683.036 L1525.01 683.036 L1524.45 683.036 L1523.89 683.036 L1523.33 683.036 L1522.77 683.036 L1522.21 683.036 L1521.65 683.036 L1521.09 683.036 L1520.53 683.036 L1519.98 683.036 L1519.42 683.036 L1518.86 683.036 L1518.3 683.036 L1517.74 683.036 L1517.18 683.036 L1516.62 683.036 L1516.06 683.036 L1515.5 683.036 L1514.94 683.036 L1514.38 683.036 L1513.82 683.036 L1513.26 683.036 L1512.71 683.036 L1512.15 683.036 L1511.59 683.036 L1511.03 683.036 L1510.47 683.036 L1509.91 683.036 L1509.35 683.036 L1508.79 683.036 L1508.23 683.036 L1507.67 683.036 L1507.11 683.036 L1506.55 683.036 L1505.99 683.036 L1505.44 683.036 L1504.88 683.036 L1504.32 683.036 L1503.76 683.036 L1503.2 683.036 L1502.64 683.036 L1502.08 683.036 L1501.52 683.036 L1500.96 683.036 L1500.4 683.036 L1499.84 683.036 L1499.28 683.036 L1498.72 683.036 L1498.16 683.036 L1497.61 683.036 L1497.05 683.036 L1496.49 683.036 L1495.93 683.036 L1495.37 683.036 L1494.81 683.036 L1494.25 683.036 L1493.69 683.036 L1493.13 683.036 L1492.57 683.036 L1492.01 683.036 L1491.45 683.036 L1490.89 683.036 L1490.34 683.036 L1489.78 683.036 L1489.22 683.036 L1488.66 683.036 L1488.1 683.036 L1487.54 683.036 L1486.98 683.036 L1486.42 683.036 L1485.86 683.036 L1485.3 683.036 L1484.74 683.036 L1484.18 683.036 L1483.62 683.036 L1483.07 683.036 L1482.51 683.036 L1481.95 683.036 L1481.39 683.036 L1480.83 683.036 L1480.27 683.036 L1479.71 683.036 L1479.15 683.036 L1478.59 683.036 L1478.03 683.036 L1477.47 683.036 L1476.91 683.036 L1476.35 683.036 L1475.79 683.036 L1475.24 683.036 L1474.68 683.036 L1474.12 683.036 L1473.56 683.036 L1473 683.036 L1472.44 683.036 L1471.88 683.036 L1471.32 683.036 L1470.76 683.036 L1470.2 683.036 L1469.64 683.036 L1469.08 683.036 L1468.52 683.036 L1467.97 683.036 L1467.41 683.036 L1466.85 683.036 L1466.29 683.036 L1465.73 683.036 L1465.17 683.036 L1464.61 683.036 L1464.05 683.036 L1463.49 683.036 L1462.93 683.036 L1462.37 683.036 L1461.81 683.036 L1461.25 683.036 L1460.7 683.036 L1460.14 683.036 L1459.58 683.036 L1459.02 683.036 L1458.46 683.036 L1457.9 683.036 L1457.34 683.036 L1456.78 683.036 L1456.22 683.036 L1455.66 683.036 L1455.1 683.036 L1454.54 683.036 L1453.98 683.036 L1453.42 683.036 L1452.87 683.036 L1452.31 683.036 L1451.75 683.036 L1451.19 683.036 L1450.63 683.036 L1450.07 683.036 L1449.51 683.036 L1448.95 683.036 L1448.39 683.036 L1447.83 683.036 L1447.27 683.036 L1446.71 683.036 L1446.15 683.036 L1445.6 683.036 L1445.04 683.036 L1444.48 683.036 L1443.92 683.036 L1443.36 683.036 L1442.8 683.036 L1442.24 683.036 L1441.68 683.036 L1441.12 683.036 L1440.56 683.036 L1440 683.036 L1439.44 683.036 L1438.88 683.036 L1438.33 683.036 L1437.77 683.036 L1437.21 683.036 L1436.65 683.036 L1436.09 683.036 L1435.53 683.036 L1434.97 683.036 L1434.41 683.036 L1433.85 683.036 L1433.29 683.036 L1432.73 683.036 L1432.17 683.036 L1431.61 683.036 L1431.05 683.036 L1430.5 683.036 L1429.94 683.036 L1429.38 683.036 L1428.82 683.036 L1428.26 683.036 L1427.7 683.036 L1427.14 683.036 L1426.58 683.036 L1426.02 683.036 L1425.46 683.036 L1424.9 683.036 L1424.34 683.036 L1423.78 683.036 L1423.23 683.036 L1422.67 683.036 L1422.11 683.036 L1421.55 683.036 L1420.99 683.036 L1420.43 683.036 L1419.87 683.036 L1419.31 683.036 L1418.75 683.036 L1418.19 683.036 L1417.63 683.036 L1417.07 683.036 L1416.51 683.036 L1415.95 683.036 L1415.4 683.036 L1414.84 683.036 L1414.28 683.036 L1413.72 683.036 L1413.16 683.036 L1412.6 683.036 L1412.04 683.036 L1411.48 683.036 L1410.92 683.036 L1410.36 683.036 L1409.8 683.036 L1409.24 683.036 L1408.68 683.036 L1408.13 683.036 L1407.57 683.036 L1407.01 683.036 L1406.45 683.036 L1405.89 683.036 L1405.33 683.036 L1404.77 683.036 L1404.21 683.036 L1403.65 683.036 L1403.09 683.036 L1402.53 683.036 L1401.97 683.036 L1401.41 683.036 L1400.86 683.036 L1400.3 683.036 L1399.74 683.036 L1399.18 683.036 L1398.62 683.036 L1398.06 683.036 L1397.5 683.036 L1396.94 683.036 L1396.38 683.036 L1395.82 683.036 L1395.26 683.036 L1394.7 683.036 L1394.14 683.036 L1393.58 683.036 L1393.03 683.036 L1392.47 683.036 L1391.91 683.036 L1391.35 683.036 L1390.79 683.036 L1390.23 683.036 L1389.67 683.036 L1389.11 683.036 L1388.55 683.036 L1387.99 683.036 L1387.43 683.036 L1386.87 683.036 L1386.31 683.036 L1385.76 683.036 L1385.2 683.036 L1384.64 683.036 L1384.08 683.036 L1383.52 683.036 L1382.96 683.036 L1382.4 683.036 L1381.84 683.036 L1381.28 683.036 L1380.72 683.036 L1380.16 683.036 L1379.6 683.036 L1379.04 683.036 L1378.49 683.036 L1377.93 683.036 L1377.37 683.036 L1376.81 683.036 L1376.25 683.036 L1375.69 683.036 L1375.13 683.036 L1374.57 683.036 L1374.01 683.036 L1373.45 683.036 L1372.89 683.036 L1372.33 683.036 L1371.77 683.036 L1371.21 683.036 L1370.66 683.036 L1370.1 683.036 L1369.54 683.036 L1368.98 683.036 L1368.42 683.036 L1367.86 683.036 L1367.3 683.036 L1366.74 683.036 L1366.18 683.036 L1365.62 683.036 L1365.06 683.036 L1364.5 683.036 L1363.94 683.036 L1363.39 683.036 L1362.83 683.036 L1362.27 683.036 L1361.71 683.036 L1361.15 683.036 L1360.59 683.036 L1360.03 683.036 L1359.47 683.036 L1358.91 683.036 L1358.35 683.036 L1357.79 683.036 L1357.23 683.036 L1356.67 683.036 L1356.12 683.036 L1355.56 683.036 L1355 683.036 L1354.44 683.036 L1353.88 683.036 L1353.32 683.036 L1352.76 683.036 L1352.2 683.036 L1351.64 683.036 L1351.08 683.036 L1350.52 683.036 L1349.96 683.036 L1349.4 683.036 L1348.84 683.036 L1348.29 683.036 L1347.73 683.036 L1347.17 683.036 L1346.61 683.036 L1346.05 683.036 L1345.49 683.036 L1344.93 683.036 L1344.37 683.036 L1343.81 683.036 L1343.25 683.036 L1342.69 683.036 L1342.13 683.036 L1341.57 683.036 L1341.02 683.036 L1340.46 683.036 L1339.9 683.036 L1339.34 683.036 L1338.78 683.036 L1338.22 683.036 L1337.66 683.036 L1337.1 683.036 L1336.54 683.036 L1335.98 683.036 L1335.42 683.036 L1334.86 683.036 L1334.3 683.036 L1333.75 683.036 L1333.19 683.036 L1332.63 683.036 L1332.07 683.036 L1331.51 683.036 L1330.95 683.036 L1330.39 683.036 L1329.83 683.036 L1329.27 683.036 L1328.71 683.036 L1328.15 683.036 L1327.59 683.036 L1327.03 683.036 L1326.47 683.036 L1325.92 683.036 L1325.36 683.036 L1324.8 683.036 L1324.24 683.036 L1323.68 683.036 L1323.12 683.036 L1322.56 683.036 L1322 683.036 L1321.44 683.036 L1320.88 683.036 L1320.32 683.036 L1319.76 683.036 L1319.2 683.036 L1318.65 683.036 L1318.09 683.036 L1317.53 683.036 L1316.97 683.036 L1316.41 683.036 L1315.85 683.036 L1315.29 683.036 L1314.73 683.036 L1314.17 683.036 L1313.61 683.036 L1313.05 683.036 L1312.49 683.036 L1311.93 683.036 L1311.38 683.036 L1310.82 683.036 L1310.26 683.036 L1309.7 683.036 L1309.14 683.036 L1308.58 683.036 L1308.02 683.036 L1307.46 683.036 L1306.9 683.036 L1306.34 683.036 L1305.78 683.036 L1305.22 683.036 L1304.66 683.036 L1304.1 683.036 L1303.55 683.036 L1302.99 683.036 L1302.43 683.036 L1301.87 683.036 L1301.31 683.036 L1300.75 683.036 L1300.19 683.036 L1299.63 683.036 L1299.07 683.036 L1298.51 683.036 L1297.95 683.036 L1297.39 683.036 L1296.83 683.036 L1296.28 683.036 L1295.72 683.036 L1295.16 683.036 L1294.6 683.036 L1294.04 683.036 L1293.48 683.036 L1292.92 683.036 L1292.36 683.036 L1291.8 683.036 L1291.24 683.036 L1290.68 683.036 L1290.12 683.036 L1289.56 683.036 L1289 683.036 L1288.45 683.036 L1287.89 683.036 L1287.33 683.036 L1286.77 683.036 L1286.21 683.036 L1285.65 683.036 L1285.09 683.036 L1284.53 683.036 L1283.97 683.036 L1283.41 683.036 L1282.85 683.036 L1282.29 683.036 L1281.73 683.036 L1281.18 683.036 L1280.62 683.036 L1280.06 683.036 L1279.5 683.036 L1278.94 683.036 L1278.38 683.036 L1277.82 683.036 L1277.26 683.036 L1276.7 683.036 L1276.14 683.036 L1275.58 683.036 L1275.02 683.036 L1274.46 683.036 L1273.91 683.036 L1273.35 683.036 L1272.79 683.036 L1272.23 683.036 L1271.67 683.036 L1271.11 683.036 L1270.55 683.036 L1269.99 683.036 L1269.43 683.036 L1268.87 683.036 L1268.31 683.036 L1267.75 683.036 L1267.19 683.036 L1266.63 683.036 L1266.08 683.036 L1265.52 683.036 L1264.96 683.036 L1264.4 683.036 L1263.84 683.036 L1263.28 683.036 L1262.72 683.036 L1262.16 683.036 L1261.6 683.036 L1261.04 683.036 L1260.48 683.036 L1259.92 683.036 L1259.36 683.036 L1258.81 683.036 L1258.25 683.036 L1257.69 683.036 L1257.13 683.036 L1256.57 683.036 L1256.01 683.036 L1255.45 683.036 L1254.89 683.036 L1254.33 683.036 L1253.77 683.036 L1253.21 683.036 L1252.65 683.036 L1252.09 683.036 L1251.54 683.036 L1250.98 683.036 L1250.42 683.036 L1249.86 683.036 L1249.3 683.036 L1248.74 683.036 L1248.18 683.036 L1247.62 683.036 L1247.06 683.036 L1246.5 683.036 L1245.94 683.036 L1245.38 683.036 L1244.82 683.036 L1244.26 683.036 L1243.71 683.036 L1243.15 683.036 L1242.59 683.036 L1242.03 683.036 L1241.47 683.036 L1240.91 683.036 L1240.35 683.036 L1239.79 683.036 L1239.23 683.036 L1238.67 683.036 L1238.11 683.036 L1237.55 683.036 L1236.99 683.036 L1236.44 683.036 L1235.88 683.036 L1235.32 683.036 L1234.76 683.036 L1234.2 683.036 L1233.64 683.036 L1233.08 683.036 L1232.52 683.036 L1231.96 683.036 L1231.4 683.036 L1230.84 683.036 L1230.28 683.036 L1229.72 683.036 L1229.17 683.036 L1228.61 683.036 L1228.05 683.036 L1227.49 683.036 L1226.93 683.036 L1226.37 683.036 L1225.81 683.036 L1225.25 683.036 L1224.69 683.036 L1224.13 683.036 L1223.57 683.036 L1223.01 683.036 L1222.45 683.036 L1221.89 683.036 L1221.34 683.036 L1220.78 683.036 L1220.22 683.036 L1219.66 683.036 L1219.1 683.036 L1218.54 683.036 L1217.98 683.036 L1217.42 683.036 L1216.86 683.036 L1216.3 683.036 L1215.74 683.036 L1215.18 683.036 L1214.62 683.036 L1214.07 683.036 L1213.51 683.036 L1212.95 683.036 L1212.39 683.036 L1211.83 683.036 L1211.27 683.036 L1210.71 683.036 L1210.15 683.036 L1209.59 683.036 L1209.03 683.036 L1208.47 683.036 L1207.91 683.036 L1207.35 683.036 L1206.8 683.036 L1206.24 683.036 L1205.68 683.036 L1205.12 683.036 L1204.56 683.036 L1204 683.036 L1203.44 683.036 L1202.88 683.036 L1202.32 683.036 L1201.76 683.036 L1201.2 683.036 L1200.64 683.036 L1200.08 683.036 L1199.52 683.036 L1198.97 683.036 L1198.41 683.036 L1197.85 683.036 L1197.29 683.036 L1196.73 683.036 L1196.17 683.036 L1195.61 683.036 L1195.05 683.036 L1194.49 683.036 L1193.93 683.036 L1193.37 683.036 L1192.81 683.036 L1192.25 683.036 L1191.7 683.036 L1191.14 683.036 L1190.58 683.036 L1190.02 683.036 L1189.46 683.036 L1188.9 683.036 L1188.34 683.036 L1187.78 683.036 L1187.22 683.036 L1186.66 683.036 L1186.1 683.036 L1185.54 683.036 L1184.98 683.036 L1184.43 683.036 L1183.87 683.036 L1183.31 683.036 L1182.75 683.036 L1182.19 683.036 L1181.63 683.036 L1181.07 683.036 L1180.51 683.036 L1179.95 683.036 L1179.39 683.036 L1178.83 683.036 L1178.27 683.036 L1177.71 683.036 L1177.15 683.036 L1176.6 683.036 L1176.04 683.036 L1175.48 683.036 L1174.92 683.036 L1174.36 683.036 L1173.8 683.036 L1173.24 683.036 L1172.68 683.036 L1172.12 683.036 L1171.56 683.036 L1171 683.036 L1170.44 683.036 L1169.88 683.036 L1169.33 683.036 L1168.77 683.036 L1168.21 683.036 L1167.65 683.036 L1167.09 683.036 L1166.53 683.036 L1165.97 683.036 L1165.41 683.036 L1164.85 683.036 L1164.29 683.036 L1163.73 683.036 L1163.17 683.036 L1162.61 683.036 L1162.05 683.036 L1161.5 683.036 L1160.94 683.036 L1160.38 683.036 L1159.82 683.036 L1159.26 683.036 L1158.7 683.036 L1158.14 683.036 L1157.58 683.036 L1157.02 683.036 L1156.46 683.036 L1155.9 683.036 L1155.34 683.036 L1154.78 683.036 L1154.23 683.036 L1153.67 683.036 L1153.11 683.036 L1152.55 683.036 L1151.99 683.036 L1151.43 683.036 L1150.87 683.036 L1150.31 683.036 L1149.75 683.036 L1149.19 683.036 L1148.63 683.036 L1148.07 683.036 L1147.51 683.036 L1146.96 683.036 L1146.4 683.036 L1145.84 683.036 L1145.28 683.036 L1144.72 683.036 L1144.16 683.036 L1143.6 683.036 L1143.04 683.036 L1142.48 683.036 L1141.92 683.036 L1141.36 683.036 L1140.8 683.036 L1140.24 683.036 L1139.68 683.036 L1139.13 683.036 L1138.57 683.036 L1138.01 683.036 L1137.45 683.036 L1136.89 683.036 L1136.33 683.036 L1135.77 683.036 L1135.21 683.036 L1134.65 683.036 L1134.09 683.036 L1133.53 683.036 L1132.97 683.036 L1132.41 683.036 L1131.86 683.036 L1131.3 683.036 L1130.74 683.036 L1130.18 683.036 L1129.62 683.036 L1129.06 683.036 L1128.5 683.036 L1127.94 683.036 L1127.38 683.036 L1126.82 683.036 L1126.26 683.036 L1125.7 683.036 L1125.14 683.036 L1124.59 683.036 L1124.03 683.036 L1123.47 683.036 L1122.91 683.036 L1122.35 683.036 L1121.79 683.036 L1121.23 683.036 L1120.67 683.036 L1120.11 683.036 L1119.55 683.036 L1118.99 683.036 L1118.43 683.036 L1117.87 683.036 L1117.31 683.036 L1116.76 683.036 L1116.2 683.036 L1115.64 683.036 L1115.08 683.036 L1114.52 683.036 L1113.96 683.036 L1113.4 683.036 L1112.84 683.036 L1112.28 683.036 L1111.72 683.036 L1111.16 683.036 L1110.6 683.036 L1110.04 683.036 L1109.49 683.036 L1108.93 683.036 L1108.37 683.036 L1107.81 683.036 L1107.25 683.036 L1106.69 683.036 L1106.13 683.036 L1105.57 683.036 L1105.01 683.036 L1104.45 683.036 L1103.89 683.036 L1103.33 683.036 L1102.77 683.036 L1102.22 683.036 L1101.66 683.036 L1101.1 683.036 L1100.54 683.036 L1099.98 683.036 L1099.42 683.036 L1098.86 683.036 L1098.3 683.036 L1097.74 683.036 L1097.18 683.036 L1096.62 683.036 L1096.06 683.036 L1095.5 683.036 L1094.94 683.036 L1094.39 683.036 L1093.83 683.036 L1093.27 683.036 L1092.71 683.036 L1092.15 683.036 L1091.59 683.036 L1091.03 683.036 L1090.47 683.036 L1089.91 683.036 L1089.35 683.036 L1088.79 683.036 L1088.23 683.036 L1087.67 683.036 L1087.12 683.036 L1086.56 683.036 L1086 683.036 L1085.44 683.036 L1084.88 683.036 L1084.32 683.036 L1083.76 683.036 L1083.2 683.036 L1082.64 683.036 L1082.08 683.036 L1081.52 683.036 L1080.96 683.036 L1080.4 683.036 L1079.85 683.036 L1079.29 683.036 L1078.73 683.036 L1078.17 683.036 L1077.61 683.036 L1077.05 683.036 L1076.49 683.036 L1075.93 683.036 L1075.37 683.036 L1074.81 683.036 L1074.25 683.036 L1073.69 683.036 L1073.13 683.036 L1072.57 683.036 L1072.02 683.036 L1071.46 683.036 L1070.9 683.036 L1070.34 683.036 L1069.78 683.036 L1069.22 683.036 L1068.66 683.036 L1068.1 683.036 L1067.54 683.036 L1066.98 683.036 L1066.42 683.036 L1065.86 683.036 L1065.3 683.036 L1064.75 683.036 L1064.19 683.036 L1063.63 683.036 L1063.07 683.036 L1062.51 683.036 L1061.95 683.036 L1061.39 683.036 L1060.83 683.036 L1060.27 683.036 L1059.71 683.036 L1059.15 683.036 L1058.59 683.036 L1058.03 683.036 L1057.48 683.036 L1056.92 683.036 L1056.36 683.036 L1055.8 683.036 L1055.24 683.036 L1054.68 683.036 L1054.12 683.036 L1053.56 683.036 L1053 683.036 L1052.44 683.036 L1051.88 683.036 L1051.32 683.036 L1050.76 683.036 L1050.2 683.036 L1049.65 683.036 L1049.09 683.036 L1048.53 683.036 L1047.97 683.036 L1047.41 683.036 L1046.85 683.036 L1046.29 683.036 L1045.73 683.036 L1045.17 683.036 L1044.61 683.036 L1044.05 683.036 L1043.49 683.036 L1042.93 683.036 L1042.38 683.036 L1041.82 683.036 L1041.26 683.036 L1040.7 683.036 L1040.14 683.036 L1039.58 683.036 L1039.02 683.036 L1038.46 683.036 L1037.9 683.036 L1037.34 683.036 L1036.78 683.036 L1036.22 683.036 L1035.66 683.036 L1035.1 683.036 L1034.55 683.036 L1033.99 683.036 L1033.43 683.036 L1032.87 683.036 L1032.31 683.036 L1031.75 683.036 L1031.19 683.036 L1030.63 683.036 L1030.07 683.036 L1029.51 683.036 L1028.95 683.036 L1028.39 683.036 L1027.83 683.036 L1027.28 683.036 L1026.72 683.036 L1026.16 683.036 L1025.6 683.036 L1025.04 683.036 L1024.48 683.036 L1023.92 683.036 L1023.36 683.036 L1022.8 683.036 L1022.24 683.036 L1021.68 683.036 L1021.12 683.036 L1020.56 683.036 L1020.01 683.036 L1019.45 683.036 L1018.89 683.036 L1018.33 683.036 L1017.77 683.036 L1017.21 683.036 L1016.65 683.036 L1016.09 683.036 L1015.53 683.036 L1014.97 683.036 L1014.41 683.036 L1013.85 683.036 L1013.29 683.036 L1012.73 683.036 L1012.18 683.036 L1011.62 683.036 L1011.06 683.036 L1010.5 683.036 L1009.94 683.036 L1009.38 683.036 L1008.82 683.036 L1008.26 683.036 L1007.7 683.036 L1007.14 683.036 L1006.58 683.036 L1006.02 683.036 L1005.46 683.036 L1004.91 683.036 L1004.35 683.036 L1003.79 683.036 L1003.23 683.036 L1002.67 683.036 L1002.11 683.036 L1001.55 683.036 L1000.99 683.036 L1000.43 683.036 L999.872 683.036 L999.313 683.036 L998.754 683.036 L998.194 683.036 L997.635 683.036 L997.076 683.036 L996.517 683.036 L995.957 683.036 L995.398 683.036 L994.839 683.036 L994.28 683.036 L993.72 683.036 L993.161 683.036 L992.602 683.036 L992.043 683.036 L991.483 683.036 L990.924 683.036 L990.365 683.036 L989.806 683.036 L989.246 683.036 L988.687 683.036 L988.128 683.036 L987.569 683.036 L987.009 683.036 L986.45 683.036 L985.891 683.036 L985.332 683.036 L984.772 683.036 L984.213 683.036 L983.654 683.036 L983.095 683.036 L982.535 683.036 L981.976 683.036 L981.417 683.036 L980.858 683.036 L980.298 683.036 L979.739 683.036 L979.18 683.036 L978.621 683.036 L978.061 683.036 L977.502 683.036 L976.943 683.036 L976.384 683.036 L975.824 683.036 L975.265 683.036 L974.706 683.036 L974.147 683.036 L973.587 683.036 L973.028 683.036 L972.469 683.036 L971.91 683.036 L971.35 683.036 L970.791 683.036 L970.232 683.036 L969.673 683.036 L969.113 683.036 L968.554 683.036 L967.995 683.036 L967.436 683.036 L966.876 683.036 L966.317 683.036 L965.758 683.036 L965.199 683.036 L964.639 683.036 L964.08 683.036 L963.521 683.036 L962.962 683.036 L962.402 683.036 L961.843 683.036 L961.284 683.036 L960.725 683.036 L960.165 683.036 L959.606 683.036 L959.047 683.036 L958.488 683.036 L957.928 683.036 L957.369 683.036 L956.81 683.036 L956.251 683.036 L955.691 683.036 L955.132 683.036 L954.573 683.036 L954.014 683.036 L953.454 683.036 L952.895 683.036 L952.336 683.036 L951.777 683.036 L951.217 683.036 L950.658 683.036 L950.099 683.036 L949.54 683.036 L948.98 683.036 L948.421 683.036 L947.862 683.036 L947.303 683.036 L946.743 683.036 L946.184 683.036 L945.625 683.036 L945.066 683.036 L944.506 683.036 L943.947 683.036 L943.388 683.036 L942.829 683.036 L942.269 683.036 L941.71 683.036 L941.151 683.036 L940.592 683.036 L940.032 683.036 L939.473 683.036 L938.914 683.036 L938.355 683.036 L937.795 683.036 L937.236 683.036 L936.677 683.036 L936.118 683.036 L935.558 683.036 L934.999 683.036 L934.44 683.036 L933.881 683.036 L933.321 683.036 L932.762 683.036 L932.203 683.036 L931.644 683.036 L931.084 683.036 L930.525 683.036 L929.966 683.036 L929.406 683.036 L928.847 683.036 L928.288 683.036 L927.729 683.036 L927.169 683.036 L926.61 683.036 L926.051 683.036 L925.492 683.036 L924.932 683.036 L924.373 683.036 L923.814 683.036 L923.255 683.036 L922.695 683.036 L922.136 683.036 L921.577 683.036 L921.018 683.036 L920.458 683.036 L919.899 683.036 L919.34 683.036 L918.781 683.036 L918.221 683.036 L917.662 683.036 L917.103 683.036 L916.544 683.036 L915.984 683.036 L915.425 683.036 L914.866 683.036 L914.307 683.036 L913.747 683.036 L913.188 683.036 L912.629 683.036 L912.07 683.036 L911.51 683.036 L910.951 683.036 L910.392 683.036 L909.833 683.036 L909.273 683.036 L908.714 683.036 L908.155 683.036 L907.596 683.036 L907.036 683.036 L906.477 683.036 L905.918 683.036 L905.359 683.036 L904.799 683.036 L904.24 683.036 L903.681 683.036 L903.122 683.036 L902.562 683.036 L902.003 683.036 L901.444 683.036 L900.885 683.036 L900.325 683.036 L899.766 683.036 L899.207 683.036 L898.648 683.036 L898.088 683.036 L897.529 683.036 L896.97 683.036 L896.411 683.036 L895.851 683.036 L895.292 683.036 L894.733 683.036 L894.174 683.036 L893.614 683.036 L893.055 683.036 L892.496 683.036 L891.937 683.036 L891.377 683.036 L890.818 683.036 L890.259 683.036 L889.7 683.036 L889.14 683.036 L888.581 683.036 L888.022 683.036 L887.463 683.036 L886.903 683.036 L886.344 683.036 L885.785 683.036 L885.226 683.036 L884.666 683.036 L884.107 683.036 L883.548 683.036 L882.989 683.036 L882.429 683.036 L881.87 683.036 L881.311 683.036 L880.752 683.036 L880.192 683.036 L879.633 683.036 L879.074 683.036 L878.515 683.036 L877.955 683.036 L877.396 683.036 L876.837 683.036 L876.278 683.036 L875.718 683.036 L875.159 683.036 L874.6 683.036 L874.041 683.036 L873.481 683.036 L872.922 683.036 L872.363 683.036 L871.804 683.036 L871.244 683.036 L870.685 683.036 L870.126 683.036 L869.567 683.036 L869.007 683.036 L868.448 683.036 L867.889 683.036 L867.33 683.036 L866.77 683.036 L866.211 683.036 L865.652 683.036 L865.093 683.036 L864.533 683.036 L863.974 683.036 L863.415 683.036 L862.856 683.036 L862.296 683.036 L861.737 683.036 L861.178 683.036 L860.619 683.036 L860.059 683.036 L859.5 683.036 L858.941 683.036 L858.382 683.036 L857.822 683.036 L857.263 683.036 L856.704 683.036 L856.145 683.036 L855.585 683.036 L855.026 683.036 L854.467 683.036 L853.908 683.036 L853.348 683.036 L852.789 683.036 L852.23 683.036 L851.671 683.036 L851.111 683.036 L850.552 683.036 L849.993 683.036 L849.434 683.036 L848.874 683.036 L848.315 683.036 L847.756 683.036 L847.197 683.036 L846.637 683.036 L846.078 683.036 L845.519 683.036 L844.96 683.036 L844.4 683.036 L843.841 683.036 L843.282 683.036 L842.723 683.036 L842.163 683.036 L841.604 683.036 L841.045 683.036 L840.486 683.036 L839.926 683.036 L839.367 683.036 L838.808 683.036 L838.249 683.036 L837.689 683.036 L837.13 683.036 L836.571 683.036 L836.012 683.036 L835.452 683.036 L834.893 683.036 L834.334 683.036 L833.775 683.036 L833.215 683.036 L832.656 683.036 L832.097 683.036 L831.538 683.036 L830.978 683.036 L830.419 683.036 L829.86 683.036 L829.301 683.036 L828.741 683.036 L828.182 683.036 L827.623 683.036 L827.064 683.036 L826.504 683.036 L825.945 683.036 L825.386 683.036 L824.827 683.036 L824.267 683.036 L823.708 683.036 L823.149 683.036 L822.59 683.036 L822.03 683.036 L821.471 683.036 L820.912 683.036 L820.353 683.036 L819.793 683.036 L819.234 683.036 L818.675 683.036 L818.116 683.036 L817.556 683.036 L816.997 683.036 L816.438 683.036 L815.879 683.036 L815.319 683.036 L814.76 683.036 L814.201 683.036 L813.642 683.036 L813.082 683.036 L812.523 683.036 L811.964 683.036 L811.405 683.036 L810.845 683.036 L810.286 683.036 L809.727 683.036 L809.168 683.036 L808.608 683.036 L808.049 683.036 L807.49 683.036 L806.931 683.036 L806.371 683.036 L805.812 683.036 L805.253 683.036 L804.693 683.036 L804.134 683.036 L803.575 683.036 L803.016 683.036 L802.456 683.036 L801.897 683.036 L801.338 683.036 L800.779 683.036 L800.219 683.036 L799.66 683.036 L799.101 683.036 L798.542 683.036 L797.982 683.036 L797.423 683.036 L796.864 683.036 L796.305 683.036 L795.745 683.036 L795.186 683.036 L794.627 683.036 L794.068 683.036 L793.508 683.036 L792.949 683.036 L792.39 683.036 L791.831 683.036 L791.271 683.036 L790.712 683.036 L790.153 683.036 L789.594 683.036 L789.034 683.036 L788.475 683.036 L787.916 683.036 L787.357 683.036 L786.797 683.036 L786.238 683.036 L785.679 683.036 L785.12 683.036 L784.56 683.036 L784.001 683.036 L783.442 683.036 L782.883 683.036 L782.323 683.036 L781.764 683.036 L781.205 683.036 L780.646 683.036 L780.086 683.036 L779.527 683.036 L778.968 683.036 L778.409 683.036 L777.849 683.036 L777.29 683.036 L776.731 683.036 L776.172 683.036 L775.612 683.036 L775.053 683.036 L774.494 683.036 L773.935 683.036 L773.375 683.036 L772.816 683.036 L772.257 683.036 L771.698 683.036 L771.138 683.036 L770.579 683.036 L770.02 683.036 L769.461 683.036 L768.901 683.036 L768.342 683.036 L767.783 683.036 L767.224 683.036 L766.664 683.036 L766.105 683.036 L765.546 683.036 L764.987 683.036 L764.427 683.036 L763.868 683.036 L763.309 683.036 L762.75 683.036 L762.19 683.036 L761.631 683.036 L761.072 683.036 L760.513 683.036 L759.953 683.036 L759.394 683.036 L758.835 683.036 L758.276 683.036 L757.716 683.036 L757.157 683.036 L756.598 683.036 L756.039 683.036 L755.479 683.036 L754.92 683.036 L754.361 683.036 L753.802 683.036 L753.242 683.036 L752.683 683.036 L752.124 683.036 L751.565 683.036 L751.005 683.036 L750.446 683.036 L749.887 683.036 L749.328 683.036 L748.768 683.036 L748.209 683.036 L747.65 683.036 L747.091 683.036 L746.531 683.036 L745.972 683.036 L745.413 683.036 L744.854 683.036 L744.294 683.036 L743.735 683.036 L743.176 683.036 L742.617 683.036 L742.057 683.036 L741.498 683.036 L740.939 683.036 L740.38 683.036 L739.82 683.036 L739.261 683.036 L738.702 683.036 L738.143 683.036 L737.583 683.036 L737.024 683.036 L736.465 683.036 L735.906 683.036 L735.346 683.036 L734.787 683.036 L734.228 683.036 L733.669 683.036 L733.109 683.036 L732.55 683.036 L731.991 683.036 L731.432 683.036 L730.872 683.036 L730.313 683.036 L729.754 683.036 L729.195 683.036 L728.635 683.036 L728.076 683.036 L727.517 683.036 L726.958 683.036 L726.398 683.036 L725.839 683.036 L725.28 683.036 L724.721 683.036 L724.161 683.036 L723.602 683.036 L723.043 683.036 L722.484 683.036 L721.924 683.036 L721.365 683.036 L720.806 683.036 L720.247 683.036  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.287 720.806,687.287 721.365,687.287 721.924,687.287 722.484,687.287 723.043,687.287 723.602,687.287 724.161,687.287 724.721,687.287 725.28,687.287 725.839,687.287 726.398,687.287 726.958,687.287 727.517,687.287 728.076,687.287 728.635,687.287 729.195,687.287 729.754,687.287 730.313,687.287 730.872,687.287 731.432,687.287 731.991,687.287 732.55,687.287 733.109,687.287 733.669,687.287 734.228,687.287 734.787,687.287 735.346,687.287 735.906,687.287 736.465,687.287 737.024,687.287 737.583,687.287 738.143,687.287 738.702,687.287 739.261,687.287 739.82,687.287 740.38,687.287 740.939,687.287 741.498,687.287 742.057,687.287 742.617,687.287 743.176,687.287 743.735,687.287 744.294,687.287 744.854,687.287 745.413,687.287 745.972,687.287 746.531,687.287 747.091,687.287 747.65,687.287 748.209,687.287 748.768,687.287 749.328,687.287 749.887,687.287 750.446,687.287 751.005,687.287 751.565,687.287 752.124,687.287 752.683,687.287 753.242,687.287 753.802,687.287 754.361,687.287 754.92,687.287 755.479,687.287 756.039,687.287 756.598,687.287 757.157,687.287 757.716,687.287 758.276,687.287 758.835,687.287 759.394,687.287 759.953,687.287 760.513,687.287 761.072,687.287 761.631,687.287 762.19,687.287 762.75,687.287 763.309,687.287 763.868,687.287 764.427,687.287 764.987,687.287 765.546,687.287 766.105,687.287 766.664,687.287 767.224,687.287 767.783,687.287 768.342,687.287 768.901,687.287 769.461,687.287 770.02,687.287 770.579,687.287 771.138,687.287 771.698,687.287 772.257,687.287 772.816,687.287 773.375,687.287 773.935,687.287 774.494,687.287 775.053,687.287 775.612,687.287 776.172,687.287 776.731,687.287 777.29,687.287 777.849,687.287 778.409,687.287 778.968,687.287 779.527,687.287 780.086,687.287 780.646,687.287 781.205,687.287 781.764,687.287 782.323,687.287 782.883,687.287 783.442,687.287 784.001,687.287 784.56,687.287 785.12,687.287 785.679,687.287 786.238,687.287 786.797,687.287 787.357,687.287 787.916,687.287 788.475,687.287 789.034,687.287 789.594,687.287 790.153,687.287 790.712,687.287 791.271,687.287 791.831,687.287 792.39,687.287 792.949,687.287 793.508,687.287 794.068,687.287 794.627,687.287 795.186,687.287 795.745,687.287 796.305,687.287 796.864,687.287 797.423,687.287 797.982,687.287 798.542,687.287 799.101,687.287 799.66,687.287 800.219,687.287 800.779,687.287 801.338,687.287 801.897,687.287 802.456,687.287 803.016,687.287 803.575,687.287 804.134,687.287 804.693,687.287 805.253,687.287 805.812,687.287 806.371,687.287 806.931,687.287 807.49,687.287 808.049,687.287 808.608,687.287 809.168,687.287 809.727,687.287 810.286,687.287 810.845,687.287 811.405,687.287 811.964,687.287 812.523,687.287 813.082,687.287 813.642,687.287 814.201,687.287 814.76,687.287 815.319,687.287 815.879,687.287 816.438,687.287 816.997,687.287 817.556,687.287 818.116,687.287 818.675,687.287 819.234,687.287 819.793,687.287 820.353,687.287 820.912,687.287 821.471,687.287 822.03,687.287 822.59,687.287 823.149,687.287 823.708,687.287 824.267,687.287 824.827,687.287 825.386,687.287 825.945,687.287 826.504,687.287 827.064,687.287 827.623,687.287 828.182,687.287 828.741,687.287 829.301,687.287 829.86,687.287 830.419,687.287 830.978,687.287 831.538,687.287 832.097,687.287 832.656,687.287 833.215,687.287 833.775,687.287 834.334,687.287 834.893,687.287 835.452,687.287 836.012,687.287 836.571,687.287 837.13,687.287 837.689,687.287 838.249,687.287 838.808,687.287 839.367,687.287 839.926,687.287 840.486,687.287 841.045,687.287 841.604,687.287 842.163,687.287 842.723,687.287 843.282,687.287 843.841,687.287 844.4,687.287 844.96,687.287 845.519,687.287 846.078,687.287 846.637,687.287 847.197,687.287 847.756,687.287 848.315,687.287 848.874,687.287 849.434,687.287 849.993,687.287 850.552,687.287 851.111,687.287 851.671,687.287 852.23,687.287 852.789,687.287 853.348,687.287 853.908,687.287 854.467,687.287 855.026,687.287 855.585,687.287 856.145,687.287 856.704,687.287 857.263,687.287 857.822,687.287 858.382,687.287 858.941,687.287 859.5,687.287 860.059,687.287 860.619,687.287 861.178,687.287 861.737,687.287 862.296,687.287 862.856,687.287 863.415,687.287 863.974,687.287 864.533,687.287 865.093,687.287 865.652,687.287 866.211,687.287 866.77,687.287 867.33,687.287 867.889,687.287 868.448,687.287 869.007,687.287 869.567,687.287 870.126,687.287 870.685,687.287 871.244,687.287 871.804,687.287 872.363,687.287 872.922,687.287 873.481,687.287 874.041,687.287 874.6,687.287 875.159,687.287 875.718,687.287 876.278,687.287 876.837,687.287 877.396,687.287 877.955,687.287 878.515,687.287 879.074,687.287 879.633,687.287 880.192,687.287 880.752,687.287 881.311,687.287 881.87,687.287 882.429,687.287 882.989,687.287 883.548,687.287 884.107,687.287 884.666,687.287 885.226,687.287 885.785,687.287 886.344,687.287 886.903,687.287 887.463,687.287 888.022,687.287 888.581,687.287 889.14,687.287 889.7,687.287 890.259,687.287 890.818,687.287 891.377,687.287 891.937,687.287 892.496,687.287 893.055,687.287 893.614,687.287 894.174,687.287 894.733,687.287 895.292,687.287 895.851,687.287 896.411,687.287 896.97,687.287 897.529,687.287 898.088,687.287 898.648,687.287 899.207,687.287 899.766,687.287 900.325,687.287 900.885,687.287 901.444,687.287 902.003,687.287 902.562,687.287 903.122,687.287 903.681,687.287 904.24,687.287 904.799,687.287 905.359,687.287 905.918,687.287 906.477,687.287 907.036,687.287 907.596,687.287 908.155,687.287 908.714,687.287 909.273,687.287 909.833,687.287 910.392,687.287 910.951,687.287 911.51,687.287 912.07,687.287 912.629,687.287 913.188,687.287 913.747,687.287 914.307,687.287 914.866,687.287 915.425,687.287 915.984,687.287 916.544,687.287 917.103,687.287 917.662,687.287 918.221,687.287 918.781,687.287 919.34,687.287 919.899,687.287 920.458,687.287 921.018,687.287 921.577,687.287 922.136,687.287 922.695,687.287 923.255,687.287 923.814,687.287 924.373,687.287 924.932,687.287 925.492,687.287 926.051,687.287 926.61,687.287 927.169,687.287 927.729,687.287 928.288,687.287 928.847,687.287 929.406,687.287 929.966,687.287 930.525,687.287 931.084,687.287 931.644,687.287 932.203,687.287 932.762,687.287 933.321,687.287 933.881,687.287 934.44,687.287 934.999,687.287 935.558,687.287 936.118,687.287 936.677,687.287 937.236,687.287 937.795,687.287 938.355,687.287 938.914,687.287 939.473,687.287 940.032,687.287 940.592,687.287 941.151,687.287 941.71,687.287 942.269,687.287 942.829,687.287 943.388,687.287 943.947,687.287 944.506,687.287 945.066,687.287 945.625,687.287 946.184,687.287 946.743,687.287 947.303,687.287 947.862,687.287 948.421,687.287 948.98,687.287 949.54,687.287 950.099,687.287 950.658,687.287 951.217,687.287 951.777,687.287 952.336,687.287 952.895,687.287 953.454,687.287 954.014,687.287 954.573,687.287 955.132,687.287 955.691,687.287 956.251,687.287 956.81,687.287 957.369,687.287 957.928,687.287 958.488,687.287 959.047,687.287 959.606,687.287 960.165,687.287 960.725,687.287 961.284,687.287 961.843,687.287 962.402,687.287 962.962,687.287 963.521,687.287 964.08,687.287 964.639,687.287 965.199,687.287 965.758,687.287 966.317,687.287 966.876,687.287 967.436,687.287 967.995,687.287 968.554,687.287 969.113,687.287 969.673,687.287 970.232,687.287 970.791,687.287 971.35,687.287 971.91,687.287 972.469,687.287 973.028,687.287 973.587,687.287 974.147,687.287 974.706,687.287 975.265,687.287 975.824,687.287 976.384,687.287 976.943,687.287 977.502,687.287 978.061,687.287 978.621,687.287 979.18,687.287 979.739,687.287 980.298,687.287 980.858,687.287 981.417,687.287 981.976,687.287 982.535,687.287 983.095,687.287 983.654,687.287 984.213,687.287 984.772,687.287 985.332,687.287 985.891,687.287 986.45,687.287 987.009,687.287 987.569,687.287 988.128,687.287 988.687,687.287 989.246,687.287 989.806,687.287 990.365,687.287 990.924,687.287 991.483,687.287 992.043,687.287 992.602,687.287 993.161,687.287 993.72,687.287 994.28,687.287 994.839,687.287 995.398,687.287 995.957,687.287 996.517,687.287 997.076,687.287 997.635,687.287 998.194,687.287 998.754,687.287 999.313,687.287 999.872,687.287 1000.43,687.287 1000.99,687.287 1001.55,687.287 1002.11,687.287 1002.67,687.287 1003.23,687.287 1003.79,687.287 1004.35,687.287 1004.91,687.287 1005.46,687.287 1006.02,687.287 1006.58,687.287 1007.14,687.287 1007.7,687.287 1008.26,687.287 1008.82,687.287 1009.38,687.287 1009.94,687.287 1010.5,687.287 1011.06,687.287 1011.62,687.287 1012.18,687.287 1012.73,687.287 1013.29,687.287 1013.85,687.287 1014.41,687.287 1014.97,687.287 1015.53,687.287 1016.09,687.287 1016.65,687.287 1017.21,687.287 1017.77,687.287 1018.33,687.287 1018.89,687.287 1019.45,687.287 1020.01,687.287 1020.56,687.287 1021.12,687.287 1021.68,687.287 1022.24,687.287 1022.8,687.287 1023.36,687.287 1023.92,687.287 1024.48,687.287 1025.04,687.287 1025.6,687.287 1026.16,687.287 1026.72,687.287 1027.28,687.287 1027.83,687.287 1028.39,687.287 1028.95,687.287 1029.51,687.287 1030.07,687.287 1030.63,687.287 1031.19,687.287 1031.75,687.287 1032.31,687.287 1032.87,687.287 1033.43,687.287 1033.99,687.287 1034.55,687.287 1035.1,687.287 1035.66,687.287 1036.22,687.287 1036.78,687.287 1037.34,687.287 1037.9,687.287 1038.46,687.287 1039.02,687.287 1039.58,687.287 1040.14,687.287 1040.7,687.287 1041.26,687.287 1041.82,687.287 1042.38,687.287 1042.93,687.287 1043.49,687.287 1044.05,687.287 1044.61,687.287 1045.17,687.287 1045.73,687.287 1046.29,687.287 1046.85,687.287 1047.41,687.287 1047.97,687.287 1048.53,687.287 1049.09,687.287 1049.65,687.287 1050.2,687.287 1050.76,687.287 1051.32,687.287 1051.88,687.287 1052.44,687.287 1053,687.287 1053.56,687.287 1054.12,687.287 1054.68,687.287 1055.24,687.287 1055.8,687.287 1056.36,687.287 1056.92,687.287 1057.48,687.287 1058.03,687.287 1058.59,687.287 1059.15,687.287 1059.71,687.287 1060.27,687.287 1060.83,687.287 1061.39,687.287 1061.95,687.287 1062.51,687.287 1063.07,687.287 1063.63,687.287 1064.19,687.287 1064.75,687.287 1065.3,687.287 1065.86,687.287 1066.42,687.287 1066.98,687.287 1067.54,687.287 1068.1,687.287 1068.66,687.287 1069.22,687.287 1069.78,687.287 1070.34,687.287 1070.9,687.287 1071.46,687.287 1072.02,687.287 1072.57,687.287 1073.13,687.287 1073.69,687.287 1074.25,687.287 1074.81,687.287 1075.37,687.287 1075.93,687.287 1076.49,687.287 1077.05,687.287 1077.61,687.287 1078.17,687.287 1078.73,687.287 1079.29,687.287 1079.85,687.287 1080.4,687.287 1080.96,687.287 1081.52,687.287 1082.08,687.287 1082.64,687.287 1083.2,687.287 1083.76,687.287 1084.32,687.287 1084.88,687.287 1085.44,687.287 1086,687.287 1086.56,687.287 1087.12,687.287 1087.67,687.287 1088.23,687.287 1088.79,687.287 1089.35,687.287 1089.91,687.287 1090.47,687.287 1091.03,687.287 1091.59,687.287 1092.15,687.287 1092.71,687.287 1093.27,687.287 1093.83,687.287 1094.39,687.287 1094.94,687.287 1095.5,687.287 1096.06,687.287 1096.62,687.287 1097.18,687.287 1097.74,687.287 1098.3,687.287 1098.86,687.287 1099.42,687.287 1099.98,687.287 1100.54,687.287 1101.1,687.287 1101.66,687.287 1102.22,687.287 1102.77,687.287 1103.33,687.287 1103.89,687.287 1104.45,687.287 1105.01,687.287 1105.57,687.287 1106.13,687.287 1106.69,687.287 1107.25,687.287 1107.81,687.287 1108.37,687.287 1108.93,687.287 1109.49,687.287 1110.04,687.287 1110.6,687.287 1111.16,687.287 1111.72,687.287 1112.28,687.287 1112.84,687.287 1113.4,687.287 1113.96,687.287 1114.52,687.287 1115.08,687.287 1115.64,687.287 1116.2,687.287 1116.76,687.287 1117.31,687.287 1117.87,687.287 1118.43,687.287 1118.99,687.287 1119.55,687.287 1120.11,687.287 1120.67,687.287 1121.23,687.287 1121.79,687.287 1122.35,687.287 1122.91,687.287 1123.47,687.287 1124.03,687.287 1124.59,687.287 1125.14,687.287 1125.7,687.287 1126.26,687.287 1126.82,687.287 1127.38,687.287 1127.94,687.287 1128.5,687.287 1129.06,687.287 1129.62,687.287 1130.18,687.287 1130.74,687.287 1131.3,687.287 1131.86,687.287 1132.41,687.287 1132.97,687.287 1133.53,687.287 1134.09,687.287 1134.65,687.287 1135.21,687.287 1135.77,687.287 1136.33,687.287 1136.89,687.287 1137.45,687.287 1138.01,687.287 1138.57,687.287 1139.13,687.287 1139.68,687.287 1140.24,687.287 1140.8,687.287 1141.36,687.287 1141.92,687.287 1142.48,687.287 1143.04,687.287 1143.6,687.287 1144.16,687.287 1144.72,687.287 1145.28,687.287 1145.84,687.287 1146.4,687.287 1146.96,687.287 1147.51,687.287 1148.07,687.287 1148.63,687.287 1149.19,687.287 1149.75,687.287 1150.31,687.287 1150.87,687.287 1151.43,687.287 1151.99,687.287 1152.55,687.287 1153.11,687.287 1153.67,687.287 1154.23,687.287 1154.78,687.287 1155.34,687.287 1155.9,687.287 1156.46,687.287 1157.02,687.287 1157.58,687.287 1158.14,687.287 1158.7,687.287 1159.26,687.287 1159.82,687.287 1160.38,687.287 1160.94,687.287 1161.5,687.287 1162.05,687.287 1162.61,687.287 1163.17,687.287 1163.73,687.287 1164.29,687.287 1164.85,687.287 1165.41,687.287 1165.97,687.287 1166.53,687.287 1167.09,687.287 1167.65,687.287 1168.21,687.287 1168.77,687.287 1169.33,687.287 1169.88,687.287 1170.44,687.287 1171,687.287 1171.56,687.287 1172.12,687.287 1172.68,687.287 1173.24,687.287 1173.8,687.287 1174.36,687.287 1174.92,687.287 1175.48,687.287 1176.04,687.287 1176.6,687.287 1177.15,687.287 1177.71,687.287 1178.27,687.287 1178.83,687.287 1179.39,687.287 1179.95,687.287 1180.51,687.287 1181.07,687.287 1181.63,687.287 1182.19,687.287 1182.75,687.287 1183.31,687.287 1183.87,687.287 1184.43,687.287 1184.98,687.287 1185.54,687.287 1186.1,687.287 1186.66,687.287 1187.22,687.287 1187.78,687.287 1188.34,687.287 1188.9,687.287 1189.46,687.287 1190.02,687.287 1190.58,687.287 1191.14,687.287 1191.7,687.287 1192.25,687.287 1192.81,687.287 1193.37,687.287 1193.93,687.287 1194.49,687.287 1195.05,687.287 1195.61,687.287 1196.17,687.287 1196.73,687.287 1197.29,687.287 1197.85,687.287 1198.41,687.287 1198.97,687.287 1199.52,687.287 1200.08,687.287 1200.64,687.287 1201.2,687.287 1201.76,687.287 1202.32,687.287 1202.88,687.287 1203.44,687.287 1204,687.287 1204.56,687.287 1205.12,687.287 1205.68,687.287 1206.24,687.287 1206.8,687.287 1207.35,687.287 1207.91,687.287 1208.47,687.287 1209.03,687.287 1209.59,687.287 1210.15,687.287 1210.71,687.287 1211.27,687.287 1211.83,687.287 1212.39,687.287 1212.95,687.287 1213.51,687.287 1214.07,687.287 1214.62,687.287 1215.18,687.287 1215.74,687.287 1216.3,687.287 1216.86,687.287 1217.42,687.287 1217.98,687.287 1218.54,687.287 1219.1,687.287 1219.66,687.287 1220.22,687.287 1220.78,687.287 1221.34,687.287 1221.89,687.287 1222.45,687.287 1223.01,687.287 1223.57,687.287 1224.13,687.287 1224.69,687.287 1225.25,687.287 1225.81,687.287 1226.37,687.287 1226.93,687.287 1227.49,687.287 1228.05,687.287 1228.61,687.287 1229.17,687.287 1229.72,687.287 1230.28,687.287 1230.84,687.287 1231.4,687.287 1231.96,687.287 1232.52,687.287 1233.08,687.287 1233.64,687.287 1234.2,687.287 1234.76,687.287 1235.32,687.287 1235.88,687.287 1236.44,687.287 1236.99,687.287 1237.55,687.287 1238.11,687.287 1238.67,687.287 1239.23,687.287 1239.79,687.287 1240.35,687.287 1240.91,687.287 1241.47,687.287 1242.03,687.287 1242.59,687.287 1243.15,687.287 1243.71,687.287 1244.26,687.287 1244.82,687.287 1245.38,687.287 1245.94,687.287 1246.5,687.287 1247.06,687.287 1247.62,687.287 1248.18,687.287 1248.74,687.287 1249.3,687.287 1249.86,687.287 1250.42,687.287 1250.98,687.287 1251.54,687.287 1252.09,687.287 1252.65,687.287 1253.21,687.287 1253.77,687.287 1254.33,687.287 1254.89,687.287 1255.45,687.287 1256.01,687.287 1256.57,687.287 1257.13,687.287 1257.69,687.287 1258.25,687.287 1258.81,687.287 1259.36,687.287 1259.92,687.287 1260.48,687.287 1261.04,687.287 1261.6,687.287 1262.16,687.287 1262.72,687.287 1263.28,687.287 1263.84,687.287 1264.4,687.287 1264.96,687.287 1265.52,687.287 1266.08,687.287 1266.63,687.287 1267.19,687.287 1267.75,687.287 1268.31,687.287 1268.87,687.287 1269.43,687.287 1269.99,687.287 1270.55,687.287 1271.11,687.287 1271.67,687.287 1272.23,687.287 1272.79,687.287 1273.35,687.287 1273.91,687.287 1274.46,687.287 1275.02,687.287 1275.58,687.287 1276.14,687.287 1276.7,687.287 1277.26,687.287 1277.82,687.287 1278.38,687.287 1278.94,687.287 1279.5,687.287 1280.06,687.287 1280.62,687.287 1281.18,687.287 1281.73,687.287 1282.29,687.287 1282.85,687.287 1283.41,687.287 1283.97,687.287 1284.53,687.287 1285.09,687.287 1285.65,687.287 1286.21,687.287 1286.77,687.287 1287.33,687.287 1287.89,687.287 1288.45,687.287 1289,687.287 1289.56,687.287 1290.12,687.287 1290.68,687.287 1291.24,687.287 1291.8,687.287 1292.36,687.287 1292.92,687.287 1293.48,687.287 1294.04,687.287 1294.6,687.287 1295.16,687.287 1295.72,687.287 1296.28,687.287 1296.83,687.287 1297.39,687.287 1297.95,687.287 1298.51,687.287 1299.07,687.287 1299.63,687.287 1300.19,687.287 1300.75,687.287 1301.31,687.287 1301.87,687.287 1302.43,687.287 1302.99,687.287 1303.55,687.287 1304.1,687.287 1304.66,687.287 1305.22,687.287 1305.78,687.287 1306.34,687.287 1306.9,687.287 1307.46,687.287 1308.02,687.287 1308.58,687.287 1309.14,687.287 1309.7,687.287 1310.26,687.287 1310.82,687.287 1311.38,687.287 1311.93,687.287 1312.49,687.287 1313.05,687.287 1313.61,687.287 1314.17,687.287 1314.73,687.287 1315.29,687.287 1315.85,687.287 1316.41,687.287 1316.97,687.287 1317.53,687.287 1318.09,687.287 1318.65,687.287 1319.2,687.287 1319.76,687.287 1320.32,687.287 1320.88,687.287 1321.44,687.287 1322,687.287 1322.56,687.287 1323.12,687.287 1323.68,687.287 1324.24,687.287 1324.8,687.287 1325.36,687.287 1325.92,687.287 1326.47,687.287 1327.03,687.287 1327.59,687.287 1328.15,687.287 1328.71,687.287 1329.27,687.287 1329.83,687.287 1330.39,687.287 1330.95,687.287 1331.51,687.287 1332.07,687.287 1332.63,687.287 1333.19,687.287 1333.75,687.287 1334.3,687.287 1334.86,687.287 1335.42,687.287 1335.98,687.287 1336.54,687.287 1337.1,687.287 1337.66,687.287 1338.22,687.287 1338.78,687.287 1339.34,687.287 1339.9,687.287 1340.46,687.287 1341.02,687.287 1341.57,687.287 1342.13,687.287 1342.69,687.287 1343.25,687.287 1343.81,687.287 1344.37,687.287 1344.93,687.287 1345.49,687.287 1346.05,687.287 1346.61,687.287 1347.17,687.287 1347.73,687.287 1348.29,687.287 1348.84,687.287 1349.4,687.287 1349.96,687.287 1350.52,687.287 1351.08,687.287 1351.64,687.287 1352.2,687.287 1352.76,687.287 1353.32,687.287 1353.88,687.287 1354.44,687.287 1355,687.287 1355.56,687.287 1356.12,687.287 1356.67,687.287 1357.23,687.287 1357.79,687.287 1358.35,687.287 1358.91,687.287 1359.47,687.287 1360.03,687.287 1360.59,687.287 1361.15,687.287 1361.71,687.287 1362.27,687.287 1362.83,687.287 1363.39,687.287 1363.94,687.287 1364.5,687.287 1365.06,687.287 1365.62,687.287 1366.18,687.287 1366.74,687.287 1367.3,687.287 1367.86,687.287 1368.42,687.287 1368.98,687.287 1369.54,687.287 1370.1,687.287 1370.66,687.287 1371.21,687.287 1371.77,687.287 1372.33,687.287 1372.89,687.287 1373.45,687.287 1374.01,687.287 1374.57,687.287 1375.13,687.287 1375.69,687.287 1376.25,687.287 1376.81,687.287 1377.37,687.287 1377.93,687.287 1378.49,687.287 1379.04,687.287 1379.6,687.287 1380.16,687.287 1380.72,687.287 1381.28,687.287 1381.84,687.287 1382.4,687.287 1382.96,687.287 1383.52,687.287 1384.08,687.287 1384.64,687.287 1385.2,687.287 1385.76,687.287 1386.31,687.287 1386.87,687.287 1387.43,687.287 1387.99,687.287 1388.55,687.287 1389.11,687.287 1389.67,687.287 1390.23,687.287 1390.79,687.287 1391.35,687.287 1391.91,687.287 1392.47,687.287 1393.03,687.287 1393.58,687.287 1394.14,687.287 1394.7,687.287 1395.26,687.287 1395.82,687.287 1396.38,687.287 1396.94,687.287 1397.5,687.287 1398.06,687.287 1398.62,687.287 1399.18,687.287 1399.74,687.287 1400.3,687.287 1400.86,687.287 1401.41,687.287 1401.97,687.287 1402.53,687.287 1403.09,687.287 1403.65,687.287 1404.21,687.287 1404.77,687.287 1405.33,687.287 1405.89,687.287 1406.45,687.287 1407.01,687.287 1407.57,687.287 1408.13,687.287 1408.68,687.287 1409.24,687.287 1409.8,687.287 1410.36,687.287 1410.92,687.287 1411.48,687.287 1412.04,687.287 1412.6,687.287 1413.16,687.287 1413.72,687.287 1414.28,687.287 1414.84,687.287 1415.4,687.287 1415.95,687.287 1416.51,687.287 1417.07,687.287 1417.63,687.287 1418.19,687.287 1418.75,687.287 1419.31,687.287 1419.87,687.287 1420.43,687.287 1420.99,687.287 1421.55,687.287 1422.11,687.287 1422.67,687.287 1423.23,687.287 1423.78,687.287 1424.34,687.287 1424.9,687.287 1425.46,687.287 1426.02,687.287 1426.58,687.287 1427.14,687.287 1427.7,687.287 1428.26,687.287 1428.82,687.287 1429.38,687.287 1429.94,687.287 1430.5,687.287 1431.05,687.287 1431.61,687.287 1432.17,687.287 1432.73,687.287 1433.29,687.287 1433.85,687.287 1434.41,687.287 1434.97,687.287 1435.53,687.287 1436.09,687.287 1436.65,687.287 1437.21,687.287 1437.77,687.287 1438.33,687.287 1438.88,687.287 1439.44,687.287 1440,687.287 1440.56,687.287 1441.12,687.287 1441.68,687.287 1442.24,687.287 1442.8,687.287 1443.36,687.287 1443.92,687.287 1444.48,687.287 1445.04,687.287 1445.6,687.287 1446.15,687.287 1446.71,687.287 1447.27,687.287 1447.83,687.287 1448.39,687.287 1448.95,687.287 1449.51,687.287 1450.07,687.287 1450.63,687.287 1451.19,687.287 1451.75,687.287 1452.31,687.287 1452.87,687.287 1453.42,687.287 1453.98,687.287 1454.54,687.287 1455.1,687.287 1455.66,687.287 1456.22,687.287 1456.78,687.287 1457.34,687.287 1457.9,687.287 1458.46,687.287 1459.02,687.287 1459.58,687.287 1460.14,687.287 1460.7,687.287 1461.25,687.287 1461.81,687.287 1462.37,687.287 1462.93,687.287 1463.49,687.287 1464.05,687.287 1464.61,687.287 1465.17,687.287 1465.73,687.287 1466.29,687.287 1466.85,687.287 1467.41,687.287 1467.97,687.287 1468.52,687.287 1469.08,687.287 1469.64,687.287 1470.2,687.287 1470.76,687.287 1471.32,687.287 1471.88,687.287 1472.44,687.287 1473,687.287 1473.56,687.287 1474.12,687.287 1474.68,687.287 1475.24,687.287 1475.79,687.287 1476.35,687.287 1476.91,687.287 1477.47,687.287 1478.03,687.287 1478.59,687.287 1479.15,687.287 1479.71,687.287 1480.27,687.287 1480.83,687.287 1481.39,687.287 1481.95,687.287 1482.51,687.287 1483.07,687.287 1483.62,687.287 1484.18,687.287 1484.74,687.287 1485.3,687.287 1485.86,687.287 1486.42,687.287 1486.98,687.287 1487.54,687.287 1488.1,687.287 1488.66,687.287 1489.22,687.287 1489.78,687.287 1490.34,687.287 1490.89,687.287 1491.45,687.287 1492.01,687.287 1492.57,687.287 1493.13,687.287 1493.69,687.287 1494.25,687.287 1494.81,687.287 1495.37,687.287 1495.93,687.287 1496.49,687.287 1497.05,687.287 1497.61,687.287 1498.16,687.287 1498.72,687.287 1499.28,687.287 1499.84,687.287 1500.4,687.287 1500.96,687.287 1501.52,687.287 1502.08,687.287 1502.64,687.287 1503.2,687.287 1503.76,687.287 1504.32,687.287 1504.88,687.287 1505.44,687.287 1505.99,687.287 1506.55,687.287 1507.11,687.287 1507.67,687.287 1508.23,687.287 1508.79,687.287 1509.35,687.287 1509.91,687.287 1510.47,687.287 1511.03,687.287 1511.59,687.287 1512.15,687.287 1512.71,687.287 1513.26,687.287 1513.82,687.287 1514.38,687.287 1514.94,687.287 1515.5,687.287 1516.06,687.287 1516.62,687.287 1517.18,687.287 1517.74,687.287 1518.3,687.287 1518.86,687.287 1519.42,687.287 1519.98,687.287 1520.53,687.287 1521.09,687.287 1521.65,687.287 1522.21,687.287 1522.77,687.287 1523.33,687.287 1523.89,687.287 1524.45,687.287 1525.01,687.287 1525.57,687.287 1526.13,687.287 1526.69,687.287 1527.25,687.287 1527.81,687.287 1528.36,687.287 1528.92,687.287 1529.48,687.287 1530.04,687.287 1530.6,687.287 1531.16,687.287 1531.72,687.287 1532.28,687.287 1532.84,687.287 1533.4,687.287 1533.96,687.287 1534.52,687.287 1535.08,687.287 1535.63,687.287 1536.19,687.287 1536.75,687.287 1537.31,687.287 1537.87,687.287 1538.43,687.287 1538.99,687.287 1539.55,687.287 1540.11,687.287 1540.67,687.287 1541.23,687.287 1541.79,687.287 1542.35,687.287 1542.9,687.287 1543.46,687.287 1544.02,687.287 1544.58,687.287 1545.14,687.287 1545.7,687.287 1546.26,687.287 1546.82,687.287 1547.38,687.287 1547.94,687.287 1548.5,687.287 1549.06,687.287 1549.62,687.287 1550.18,687.287 1550.73,687.287 1551.29,687.287 1551.85,687.287 1552.41,687.287 1552.97,687.287 1553.53,687.287 1554.09,687.287 1554.65,687.287 1555.21,687.287 1555.77,687.287 1556.33,687.287 1556.89,687.287 1557.45,687.287 1558,687.287 1558.56,687.287 1559.12,687.287 1559.68,687.287 1560.24,687.287 1560.8,687.287 1561.36,687.287 1561.92,687.287 1562.48,687.287 1563.04,687.287 1563.6,687.287 1564.16,687.287 1564.72,687.287 1565.28,687.287 1565.83,687.287 1566.39,687.287 1566.95,687.287 1567.51,687.287 1568.07,687.287 1568.63,687.287 1569.19,687.287 1569.75,687.287 1570.31,687.287 1570.87,687.287 1571.43,687.287 1571.99,687.287 1572.55,687.287 1573.1,687.287 1573.66,687.287 1574.22,687.287 1574.78,687.287 1575.34,687.287 1575.9,687.287 1576.46,687.287 1577.02,687.287 1577.58,687.287 1578.14,687.287 1578.7,687.287 1579.26,687.287 1579.82,687.287 1580.37,687.287 1580.93,687.287 1581.49,687.287 1582.05,687.287 1582.61,687.287 1583.17,687.287 1583.73,687.287 1584.29,687.287 1584.85,687.287 1585.41,687.287 1585.97,687.287 1586.53,687.287 1587.09,687.287 1587.65,687.287 1588.2,687.287 1588.76,687.287 1589.32,687.287 1589.88,687.287 1590.44,687.287 1591,687.287 1591.56,687.287 1592.12,687.287 1592.68,687.287 1593.24,687.287 1593.8,687.287 1594.36,687.287 1594.92,687.287 1595.47,687.287 1596.03,687.287 1596.59,687.287 1597.15,687.287 1597.71,687.287 1598.27,687.287 1598.83,687.287 1599.39,687.287 1599.95,687.287 1600.51,687.287 1601.07,687.287 1601.63,687.287 1602.19,687.287 1602.74,687.287 1603.3,687.287 1603.86,687.287 1604.42,687.287 1604.98,687.287 1605.54,687.287 1606.1,687.287 1606.66,687.287 1607.22,687.287 1607.78,687.287 1608.34,687.287 1608.9,687.287 1609.46,687.287 1610.02,687.287 1610.57,687.287 1611.13,687.287 1611.69,687.287 1612.25,687.287 1612.81,687.287 1613.37,687.287 1613.93,687.287 1614.49,687.287 1615.05,687.287 1615.61,687.287 1616.17,687.287 1616.73,687.287 1617.29,687.287 1617.84,687.287 1618.4,687.287 1618.96,687.287 1619.52,687.287 1620.08,687.287 1620.64,687.287 1621.2,687.287 1621.76,687.287 1622.32,687.287 1622.88,687.287 1623.44,687.287 1624,687.287 1624.56,687.287 1625.11,687.287 1625.67,687.287 1626.23,687.287 1626.79,687.287 1627.35,687.287 1627.91,687.287 1628.47,687.287 1629.03,687.287 1629.59,687.287 1630.15,687.287 1630.71,687.287 1631.27,687.287 1631.83,687.287 1632.39,687.287 1632.94,687.287 1633.5,687.287 1634.06,687.287 1634.62,687.287 1635.18,687.287 1635.74,687.287 1636.3,687.287 1636.86,687.287 1637.42,687.287 1637.98,687.287 1638.54,687.287 1639.1,687.287 1639.66,687.287 1640.21,687.287 1640.77,687.287 1641.33,687.287 1641.89,687.287 1642.45,687.287 1643.01,687.287 1643.57,687.287 1644.13,687.287 1644.69,687.287 1645.25,687.287 1645.81,687.287 1646.37,687.287 1646.93,687.287 1647.48,687.287 1648.04,687.287 1648.6,687.287 1649.16,687.287 1649.72,687.287 1650.28,687.287 1650.84,687.287 1651.4,687.287 1651.96,687.287 1652.52,687.287 1653.08,687.287 1653.64,687.287 1654.2,687.287 1654.76,687.287 1655.31,687.287 1655.87,687.287 1656.43,687.287 1656.99,687.287 1657.55,687.287 1658.11,687.287 1658.67,687.287 1659.23,687.287 1659.79,687.287 1660.35,687.287 1660.91,687.287 1661.47,687.287 1662.03,687.287 1662.58,687.287 1663.14,687.287 1663.7,687.287 1664.26,687.287 1664.82,687.287 1665.38,687.287 1665.94,687.287 1666.5,687.287 1667.06,687.287 1667.62,687.287 1668.18,687.287 1668.74,687.287 1669.3,687.287 1669.85,687.287 1670.41,687.287 1670.97,687.287 1671.53,687.287 1672.09,687.287 1672.65,687.287 1673.21,687.287 1673.77,687.287 1674.33,687.287 1674.89,687.287 1675.45,687.287 1676.01,687.287 1676.57,687.287 1677.13,687.287 1677.68,687.287 1678.24,687.287 1678.8,687.287 1679.36,687.287 1679.92,687.287 1680.48,687.287 1681.04,687.287 1681.6,687.287 1682.16,687.287 1682.72,687.287 1683.28,687.287 1683.84,687.287 1684.4,687.287 1684.95,687.287 1685.51,687.287 1686.07,687.287 1686.63,687.287 1687.19,687.287 1687.75,687.287 1688.31,687.287 1688.87,687.287 1689.43,687.287 1689.99,687.287 1690.55,687.287 1691.11,687.287 1691.67,687.287 1692.23,687.287 1692.78,687.287 1693.34,687.287 1693.9,687.287 1694.46,687.287 1695.02,687.287 1695.58,687.287 1696.14,687.287 1696.7,687.287 1697.26,687.287 1697.82,687.287 1698.38,687.287 1698.94,687.287 1699.5,687.287 1700.05,687.287 1700.61,687.287 1701.17,687.287 1701.73,687.287 1702.29,687.287 1702.85,687.287 1703.41,687.287 1703.97,687.287 1704.53,687.287 1705.09,687.287 1705.65,687.287 1706.21,687.287 1706.77,687.287 1707.32,687.287 1707.88,687.287 1708.44,687.287 1709,687.287 1709.56,687.287 1710.12,687.287 1710.68,687.287 1711.24,687.287 1711.8,687.287 1712.36,687.287 1712.92,687.287 1713.48,687.287 1714.04,687.287 1714.6,687.287 1715.15,687.287 1715.71,687.287 1716.27,687.287 1716.83,687.287 1717.39,687.287 1717.95,687.287 1718.51,687.287 1719.07,687.287 1719.63,687.287 1720.19,687.287 1720.75,687.287 1721.31,687.287 1721.87,687.287 1722.42,687.287 1722.98,687.287 1723.54,687.287 1724.1,687.287 1724.66,687.287 1725.22,687.287 1725.78,687.287 1726.34,687.287 1726.9,687.287 1727.46,687.287 1728.02,687.287 1728.58,687.287 1729.14,687.287 1729.69,687.287 1730.25,687.287 1730.81,687.287 1731.37,687.287 1731.93,687.287 1732.49,687.287 1733.05,687.287 1733.61,687.287 1734.17,687.287 1734.73,687.287 1735.29,687.287 1735.85,687.287 1736.41,687.287 1736.97,687.287 1737.52,687.287 1738.08,687.287 1738.64,687.287 1739.2,687.287 1739.76,687.287 1740.32,687.287 1740.88,687.287 1741.44,687.287 1742,687.287 1742.56,687.287 1743.12,687.287 1743.68,687.287 1744.24,687.287 1744.79,687.287 1745.35,687.287 1745.91,687.287 1746.47,687.287 1747.03,687.287 1747.59,687.287 1748.15,687.287 1748.71,687.287 1749.27,687.287 1749.83,687.287 1750.39,687.287 1750.95,687.287 1751.51,687.287 1752.06,687.287 1752.62,687.287 1753.18,687.287 1753.74,687.287 1754.3,687.287 1754.86,687.287 1755.42,687.287 1755.98,687.287 1756.54,687.287 1757.1,687.287 1757.66,687.287 1758.22,687.287 1758.78,687.287 1759.34,687.287 1759.89,687.287 1760.45,687.287 1761.01,687.287 1761.57,687.287 1762.13,687.287 1762.69,687.287 1763.25,687.287 1763.81,687.287 1764.37,687.287 1764.93,687.287 1765.49,687.287 1766.05,687.287 1766.61,687.287 1767.16,687.287 1767.72,687.287 1768.28,687.287 1768.84,687.287 1769.4,687.287 1769.96,687.287 1770.52,687.287 1771.08,687.287 1771.64,687.287 1772.2,687.287 1772.76,687.287 1773.32,687.287 1773.88,687.287 1774.43,687.287 1774.99,687.287 1775.55,687.287 1776.11,687.287 1776.67,687.287 1777.23,687.287 1777.79,687.287 1778.35,687.287 1778.91,687.287 1779.47,687.287 1780.03,687.287 1780.59,687.287 1781.15,687.287 1781.71,687.287 1782.26,687.287 1782.82,687.287 1783.38,687.287 1783.94,687.287 1784.5,687.287 1785.06,687.287 1785.62,687.287 1786.18,687.287 1786.74,687.287 1787.3,687.287 1787.86,687.287 1788.42,687.287 1788.98,687.287 1789.53,687.287 1790.09,687.287 1790.65,687.287 1791.21,687.287 1791.77,687.287 1792.33,687.287 1792.89,687.287 1793.45,687.287 1794.01,687.287 1794.57,687.287 1795.13,687.287 1795.69,687.287 1796.25,687.287 1796.8,687.287 1797.36,687.287 1797.92,687.287 1798.48,687.287 1799.04,687.287 1799.6,687.287 1800.16,687.287 1800.72,687.287 1801.28,687.287 1801.84,687.287 1802.4,687.287 1802.96,687.287 1803.52,687.287 1804.08,687.287 1804.63,687.287 1805.19,687.287 1805.75,687.287 1806.31,687.287 1806.87,687.287 1807.43,687.287 1807.99,687.287 1808.55,687.287 1809.11,687.287 1809.67,687.287 1810.23,687.287 1810.79,687.287 1811.35,687.287 1811.9,687.287 1812.46,687.287 1813.02,687.287 1813.58,687.287 1814.14,687.287 1814.7,687.287 1815.26,687.287 1815.82,687.287 1816.38,687.287 1816.94,687.287 1817.5,687.287 1818.06,687.287 1818.62,687.287 1819.18,687.287 1819.73,687.287 1820.29,687.287 1820.85,687.287 1821.41,687.287 1821.97,687.287 1822.53,687.287 1823.09,687.287 1823.65,687.287 1824.21,687.287 1824.77,687.287 1825.33,687.287 1825.89,687.287 1826.45,687.287 1827,687.287 1827.56,687.287 1828.12,687.287 1828.68,687.287 1829.24,687.287 1829.8,687.287 1830.36,687.287 1830.92,687.287 1831.48,687.287 1832.04,687.287 1832.6,687.287 1833.16,687.287 1833.72,687.287 1834.27,687.287 1834.83,687.287 1835.39,687.287 1835.95,687.287 1836.51,687.287 1837.07,687.287 1837.63,687.287 1838.19,687.287 \"/>\n<path clip-path=\"url(#clip623)\" d=\"M720.247 683.994 L720.806 683.994 L721.365 683.994 L721.924 683.994 L722.484 683.994 L723.043 683.994 L723.602 683.994 L724.161 683.994 L724.721 683.994 L725.28 683.994 L725.839 683.994 L726.398 683.994 L726.958 683.994 L727.517 683.994 L728.076 683.994 L728.635 683.994 L729.195 683.994 L729.754 683.994 L730.313 683.994 L730.872 683.994 L731.432 683.994 L731.991 683.994 L732.55 683.994 L733.109 683.994 L733.669 683.994 L734.228 683.994 L734.787 683.994 L735.346 683.994 L735.906 683.994 L736.465 683.994 L737.024 683.994 L737.583 683.994 L738.143 683.994 L738.702 683.994 L739.261 683.994 L739.82 683.994 L740.38 683.994 L740.939 683.994 L741.498 683.994 L742.057 683.994 L742.617 683.994 L743.176 683.994 L743.735 683.994 L744.294 683.994 L744.854 683.994 L745.413 683.994 L745.972 683.994 L746.531 683.994 L747.091 683.994 L747.65 683.994 L748.209 683.994 L748.768 683.994 L749.328 683.994 L749.887 683.994 L750.446 683.994 L751.005 683.994 L751.565 683.994 L752.124 683.994 L752.683 683.994 L753.242 683.994 L753.802 683.994 L754.361 683.994 L754.92 683.994 L755.479 683.994 L756.039 683.994 L756.598 683.994 L757.157 683.994 L757.716 683.994 L758.276 683.994 L758.835 683.994 L759.394 683.994 L759.953 683.994 L760.513 683.994 L761.072 683.994 L761.631 683.994 L762.19 683.994 L762.75 683.994 L763.309 683.994 L763.868 683.994 L764.427 683.994 L764.987 683.994 L765.546 683.994 L766.105 683.994 L766.664 683.994 L767.224 683.994 L767.783 683.994 L768.342 683.994 L768.901 683.994 L769.461 683.994 L770.02 683.994 L770.579 683.994 L771.138 683.994 L771.698 683.994 L772.257 683.994 L772.816 683.994 L773.375 683.994 L773.935 683.994 L774.494 683.994 L775.053 683.994 L775.612 683.994 L776.172 683.994 L776.731 683.994 L777.29 683.994 L777.849 683.994 L778.409 683.994 L778.968 683.994 L779.527 683.994 L780.086 683.994 L780.646 683.994 L781.205 683.994 L781.764 683.994 L782.323 683.994 L782.883 683.994 L783.442 683.994 L784.001 683.994 L784.56 683.994 L785.12 683.994 L785.679 683.994 L786.238 683.994 L786.797 683.994 L787.357 683.994 L787.916 683.994 L788.475 683.994 L789.034 683.994 L789.594 683.994 L790.153 683.994 L790.712 683.994 L791.271 683.994 L791.831 683.994 L792.39 683.994 L792.949 683.994 L793.508 683.994 L794.068 683.994 L794.627 683.994 L795.186 683.994 L795.745 683.994 L796.305 683.994 L796.864 683.994 L797.423 683.994 L797.982 683.994 L798.542 683.994 L799.101 683.994 L799.66 683.994 L800.219 683.994 L800.779 683.994 L801.338 683.994 L801.897 683.994 L802.456 683.994 L803.016 683.994 L803.575 683.994 L804.134 683.994 L804.693 683.994 L805.253 683.994 L805.812 683.994 L806.371 683.994 L806.931 683.994 L807.49 683.994 L808.049 683.994 L808.608 683.994 L809.168 683.994 L809.727 683.994 L810.286 683.994 L810.845 683.994 L811.405 683.994 L811.964 683.994 L812.523 683.994 L813.082 683.994 L813.642 683.994 L814.201 683.994 L814.76 683.994 L815.319 683.994 L815.879 683.994 L816.438 683.994 L816.997 683.994 L817.556 683.994 L818.116 683.994 L818.675 683.994 L819.234 683.994 L819.793 683.994 L820.353 683.994 L820.912 683.994 L821.471 683.994 L822.03 683.994 L822.59 683.994 L823.149 683.994 L823.708 683.994 L824.267 683.994 L824.827 683.994 L825.386 683.994 L825.945 683.994 L826.504 683.994 L827.064 683.994 L827.623 683.994 L828.182 683.994 L828.741 683.994 L829.301 683.994 L829.86 683.994 L830.419 683.994 L830.978 683.994 L831.538 683.994 L832.097 683.994 L832.656 683.994 L833.215 683.994 L833.775 683.994 L834.334 683.994 L834.893 683.994 L835.452 683.994 L836.012 683.994 L836.571 683.994 L837.13 683.994 L837.689 683.994 L838.249 683.994 L838.808 683.994 L839.367 683.994 L839.926 683.994 L840.486 683.994 L841.045 683.994 L841.604 683.994 L842.163 683.994 L842.723 683.994 L843.282 683.994 L843.841 683.994 L844.4 683.994 L844.96 683.994 L845.519 683.994 L846.078 683.994 L846.637 683.994 L847.197 683.994 L847.756 683.994 L848.315 683.994 L848.874 683.994 L849.434 683.994 L849.993 683.994 L850.552 683.994 L851.111 683.994 L851.671 683.994 L852.23 683.994 L852.789 683.994 L853.348 683.994 L853.908 683.994 L854.467 683.994 L855.026 683.994 L855.585 683.994 L856.145 683.994 L856.704 683.994 L857.263 683.994 L857.822 683.994 L858.382 683.994 L858.941 683.994 L859.5 683.994 L860.059 683.994 L860.619 683.994 L861.178 683.994 L861.737 683.994 L862.296 683.994 L862.856 683.994 L863.415 683.994 L863.974 683.994 L864.533 683.994 L865.093 683.994 L865.652 683.994 L866.211 683.994 L866.77 683.994 L867.33 683.994 L867.889 683.994 L868.448 683.994 L869.007 683.994 L869.567 683.994 L870.126 683.994 L870.685 683.994 L871.244 683.994 L871.804 683.994 L872.363 683.994 L872.922 683.994 L873.481 683.994 L874.041 683.994 L874.6 683.994 L875.159 683.994 L875.718 683.994 L876.278 683.994 L876.837 683.994 L877.396 683.994 L877.955 683.994 L878.515 683.994 L879.074 683.994 L879.633 683.994 L880.192 683.994 L880.752 683.994 L881.311 683.994 L881.87 683.994 L882.429 683.994 L882.989 683.994 L883.548 683.994 L884.107 683.994 L884.666 683.994 L885.226 683.994 L885.785 683.994 L886.344 683.994 L886.903 683.994 L887.463 683.994 L888.022 683.994 L888.581 683.994 L889.14 683.994 L889.7 683.994 L890.259 683.994 L890.818 683.994 L891.377 683.994 L891.937 683.994 L892.496 683.994 L893.055 683.994 L893.614 683.994 L894.174 683.994 L894.733 683.994 L895.292 683.994 L895.851 683.994 L896.411 683.994 L896.97 683.994 L897.529 683.994 L898.088 683.994 L898.648 683.994 L899.207 683.994 L899.766 683.994 L900.325 683.994 L900.885 683.994 L901.444 683.994 L902.003 683.994 L902.562 683.994 L903.122 683.994 L903.681 683.994 L904.24 683.994 L904.799 683.994 L905.359 683.994 L905.918 683.994 L906.477 683.994 L907.036 683.994 L907.596 683.994 L908.155 683.994 L908.714 683.994 L909.273 683.994 L909.833 683.994 L910.392 683.994 L910.951 683.994 L911.51 683.994 L912.07 683.994 L912.629 683.994 L913.188 683.994 L913.747 683.994 L914.307 683.994 L914.866 683.994 L915.425 683.994 L915.984 683.994 L916.544 683.994 L917.103 683.994 L917.662 683.994 L918.221 683.994 L918.781 683.994 L919.34 683.994 L919.899 683.994 L920.458 683.994 L921.018 683.994 L921.577 683.994 L922.136 683.994 L922.695 683.994 L923.255 683.994 L923.814 683.994 L924.373 683.994 L924.932 683.994 L925.492 683.994 L926.051 683.994 L926.61 683.994 L927.169 683.994 L927.729 683.994 L928.288 683.994 L928.847 683.994 L929.406 683.994 L929.966 683.994 L930.525 683.994 L931.084 683.994 L931.644 683.994 L932.203 683.994 L932.762 683.994 L933.321 683.994 L933.881 683.994 L934.44 683.994 L934.999 683.994 L935.558 683.994 L936.118 683.994 L936.677 683.994 L937.236 683.994 L937.795 683.994 L938.355 683.994 L938.914 683.994 L939.473 683.994 L940.032 683.994 L940.592 683.994 L941.151 683.994 L941.71 683.994 L942.269 683.994 L942.829 683.994 L943.388 683.994 L943.947 683.994 L944.506 683.994 L945.066 683.994 L945.625 683.994 L946.184 683.994 L946.743 683.994 L947.303 683.994 L947.862 683.994 L948.421 683.994 L948.98 683.994 L949.54 683.994 L950.099 683.994 L950.658 683.994 L951.217 683.994 L951.777 683.994 L952.336 683.994 L952.895 683.994 L953.454 683.994 L954.014 683.994 L954.573 683.994 L955.132 683.994 L955.691 683.994 L956.251 683.994 L956.81 683.994 L957.369 683.994 L957.928 683.994 L958.488 683.994 L959.047 683.994 L959.606 683.994 L960.165 683.994 L960.725 683.994 L961.284 683.994 L961.843 683.994 L962.402 683.994 L962.962 683.994 L963.521 683.994 L964.08 683.994 L964.639 683.994 L965.199 683.994 L965.758 683.994 L966.317 683.994 L966.876 683.994 L967.436 683.994 L967.995 683.994 L968.554 683.994 L969.113 683.994 L969.673 683.994 L970.232 683.994 L970.791 683.994 L971.35 683.994 L971.91 683.994 L972.469 683.994 L973.028 683.994 L973.587 683.994 L974.147 683.994 L974.706 683.994 L975.265 683.994 L975.824 683.994 L976.384 683.994 L976.943 683.994 L977.502 683.994 L978.061 683.994 L978.621 683.994 L979.18 683.994 L979.739 683.994 L980.298 683.994 L980.858 683.994 L981.417 683.994 L981.976 683.994 L982.535 683.994 L983.095 683.994 L983.654 683.994 L984.213 683.994 L984.772 683.994 L985.332 683.994 L985.891 683.994 L986.45 683.994 L987.009 683.994 L987.569 683.994 L988.128 683.994 L988.687 683.994 L989.246 683.994 L989.806 683.994 L990.365 683.994 L990.924 683.994 L991.483 683.994 L992.043 683.994 L992.602 683.994 L993.161 683.994 L993.72 683.994 L994.28 683.994 L994.839 683.994 L995.398 683.994 L995.957 683.994 L996.517 683.994 L997.076 683.994 L997.635 683.994 L998.194 683.994 L998.754 683.994 L999.313 683.994 L999.872 683.994 L1000.43 683.994 L1000.99 683.994 L1001.55 683.994 L1002.11 683.994 L1002.67 683.994 L1003.23 683.994 L1003.79 683.994 L1004.35 683.994 L1004.91 683.994 L1005.46 683.994 L1006.02 683.994 L1006.58 683.994 L1007.14 683.994 L1007.7 683.994 L1008.26 683.994 L1008.82 683.994 L1009.38 683.994 L1009.94 683.994 L1010.5 683.994 L1011.06 683.994 L1011.62 683.994 L1012.18 683.994 L1012.73 683.994 L1013.29 683.994 L1013.85 683.994 L1014.41 683.994 L1014.97 683.994 L1015.53 683.994 L1016.09 683.994 L1016.65 683.994 L1017.21 683.994 L1017.77 683.994 L1018.33 683.994 L1018.89 683.994 L1019.45 683.994 L1020.01 683.994 L1020.56 683.994 L1021.12 683.994 L1021.68 683.994 L1022.24 683.994 L1022.8 683.994 L1023.36 683.994 L1023.92 683.994 L1024.48 683.994 L1025.04 683.994 L1025.6 683.994 L1026.16 683.994 L1026.72 683.994 L1027.28 683.994 L1027.83 683.994 L1028.39 683.994 L1028.95 683.994 L1029.51 683.994 L1030.07 683.994 L1030.63 683.994 L1031.19 683.994 L1031.75 683.994 L1032.31 683.994 L1032.87 683.994 L1033.43 683.994 L1033.99 683.994 L1034.55 683.994 L1035.1 683.994 L1035.66 683.994 L1036.22 683.994 L1036.78 683.994 L1037.34 683.994 L1037.9 683.994 L1038.46 683.994 L1039.02 683.994 L1039.58 683.994 L1040.14 683.994 L1040.7 683.994 L1041.26 683.994 L1041.82 683.994 L1042.38 683.994 L1042.93 683.994 L1043.49 683.994 L1044.05 683.994 L1044.61 683.994 L1045.17 683.994 L1045.73 683.994 L1046.29 683.994 L1046.85 683.994 L1047.41 683.994 L1047.97 683.994 L1048.53 683.994 L1049.09 683.994 L1049.65 683.994 L1050.2 683.994 L1050.76 683.994 L1051.32 683.994 L1051.88 683.994 L1052.44 683.994 L1053 683.994 L1053.56 683.994 L1054.12 683.994 L1054.68 683.994 L1055.24 683.994 L1055.8 683.994 L1056.36 683.994 L1056.92 683.994 L1057.48 683.994 L1058.03 683.994 L1058.59 683.994 L1059.15 683.994 L1059.71 683.994 L1060.27 683.994 L1060.83 683.994 L1061.39 683.994 L1061.95 683.994 L1062.51 683.994 L1063.07 683.994 L1063.63 683.994 L1064.19 683.994 L1064.75 683.994 L1065.3 683.994 L1065.86 683.994 L1066.42 683.994 L1066.98 683.994 L1067.54 683.994 L1068.1 683.994 L1068.66 683.994 L1069.22 683.994 L1069.78 683.994 L1070.34 683.994 L1070.9 683.994 L1071.46 683.994 L1072.02 683.994 L1072.57 683.994 L1073.13 683.994 L1073.69 683.994 L1074.25 683.994 L1074.81 683.994 L1075.37 683.994 L1075.93 683.994 L1076.49 683.994 L1077.05 683.994 L1077.61 683.994 L1078.17 683.994 L1078.73 683.994 L1079.29 683.994 L1079.85 683.994 L1080.4 683.994 L1080.96 683.994 L1081.52 683.994 L1082.08 683.994 L1082.64 683.994 L1083.2 683.994 L1083.76 683.994 L1084.32 683.994 L1084.88 683.994 L1085.44 683.994 L1086 683.994 L1086.56 683.994 L1087.12 683.994 L1087.67 683.994 L1088.23 683.994 L1088.79 683.994 L1089.35 683.994 L1089.91 683.994 L1090.47 683.994 L1091.03 683.994 L1091.59 683.994 L1092.15 683.994 L1092.71 683.994 L1093.27 683.994 L1093.83 683.994 L1094.39 683.994 L1094.94 683.994 L1095.5 683.994 L1096.06 683.994 L1096.62 683.994 L1097.18 683.994 L1097.74 683.994 L1098.3 683.994 L1098.86 683.994 L1099.42 683.994 L1099.98 683.994 L1100.54 683.994 L1101.1 683.994 L1101.66 683.994 L1102.22 683.994 L1102.77 683.994 L1103.33 683.994 L1103.89 683.994 L1104.45 683.994 L1105.01 683.994 L1105.57 683.994 L1106.13 683.994 L1106.69 683.994 L1107.25 683.994 L1107.81 683.994 L1108.37 683.994 L1108.93 683.994 L1109.49 683.994 L1110.04 683.994 L1110.6 683.994 L1111.16 683.994 L1111.72 683.994 L1112.28 683.994 L1112.84 683.994 L1113.4 683.994 L1113.96 683.994 L1114.52 683.994 L1115.08 683.994 L1115.64 683.994 L1116.2 683.994 L1116.76 683.994 L1117.31 683.994 L1117.87 683.994 L1118.43 683.994 L1118.99 683.994 L1119.55 683.994 L1120.11 683.994 L1120.67 683.994 L1121.23 683.994 L1121.79 683.994 L1122.35 683.994 L1122.91 683.994 L1123.47 683.994 L1124.03 683.994 L1124.59 683.994 L1125.14 683.994 L1125.7 683.994 L1126.26 683.994 L1126.82 683.994 L1127.38 683.994 L1127.94 683.994 L1128.5 683.994 L1129.06 683.994 L1129.62 683.994 L1130.18 683.994 L1130.74 683.994 L1131.3 683.994 L1131.86 683.994 L1132.41 683.994 L1132.97 683.994 L1133.53 683.994 L1134.09 683.994 L1134.65 683.994 L1135.21 683.994 L1135.77 683.994 L1136.33 683.994 L1136.89 683.994 L1137.45 683.994 L1138.01 683.994 L1138.57 683.994 L1139.13 683.994 L1139.68 683.994 L1140.24 683.994 L1140.8 683.994 L1141.36 683.994 L1141.92 683.994 L1142.48 683.994 L1143.04 683.994 L1143.6 683.994 L1144.16 683.994 L1144.72 683.994 L1145.28 683.994 L1145.84 683.994 L1146.4 683.994 L1146.96 683.994 L1147.51 683.994 L1148.07 683.994 L1148.63 683.994 L1149.19 683.994 L1149.75 683.994 L1150.31 683.994 L1150.87 683.994 L1151.43 683.994 L1151.99 683.994 L1152.55 683.994 L1153.11 683.994 L1153.67 683.994 L1154.23 683.994 L1154.78 683.994 L1155.34 683.994 L1155.9 683.994 L1156.46 683.994 L1157.02 683.994 L1157.58 683.994 L1158.14 683.994 L1158.7 683.994 L1159.26 683.994 L1159.82 683.994 L1160.38 683.994 L1160.94 683.994 L1161.5 683.994 L1162.05 683.994 L1162.61 683.994 L1163.17 683.994 L1163.73 683.994 L1164.29 683.994 L1164.85 683.994 L1165.41 683.994 L1165.97 683.994 L1166.53 683.994 L1167.09 683.994 L1167.65 683.994 L1168.21 683.994 L1168.77 683.994 L1169.33 683.994 L1169.88 683.994 L1170.44 683.994 L1171 683.994 L1171.56 683.994 L1172.12 683.994 L1172.68 683.994 L1173.24 683.994 L1173.8 683.994 L1174.36 683.994 L1174.92 683.994 L1175.48 683.994 L1176.04 683.994 L1176.6 683.994 L1177.15 683.994 L1177.71 683.994 L1178.27 683.994 L1178.83 683.994 L1179.39 683.994 L1179.95 683.994 L1180.51 683.994 L1181.07 683.994 L1181.63 683.994 L1182.19 683.994 L1182.75 683.994 L1183.31 683.994 L1183.87 683.994 L1184.43 683.994 L1184.98 683.994 L1185.54 683.994 L1186.1 683.994 L1186.66 683.994 L1187.22 683.994 L1187.78 683.994 L1188.34 683.994 L1188.9 683.994 L1189.46 683.994 L1190.02 683.994 L1190.58 683.994 L1191.14 683.994 L1191.7 683.994 L1192.25 683.994 L1192.81 683.994 L1193.37 683.994 L1193.93 683.994 L1194.49 683.994 L1195.05 683.994 L1195.61 683.994 L1196.17 683.994 L1196.73 683.994 L1197.29 683.994 L1197.85 683.994 L1198.41 683.994 L1198.97 683.994 L1199.52 683.994 L1200.08 683.994 L1200.64 683.994 L1201.2 683.994 L1201.76 683.994 L1202.32 683.994 L1202.88 683.994 L1203.44 683.994 L1204 683.994 L1204.56 683.994 L1205.12 683.994 L1205.68 683.994 L1206.24 683.994 L1206.8 683.994 L1207.35 683.994 L1207.91 683.994 L1208.47 683.994 L1209.03 683.994 L1209.59 683.994 L1210.15 683.994 L1210.71 683.994 L1211.27 683.994 L1211.83 683.994 L1212.39 683.994 L1212.95 683.994 L1213.51 683.994 L1214.07 683.994 L1214.62 683.994 L1215.18 683.994 L1215.74 683.994 L1216.3 683.994 L1216.86 683.994 L1217.42 683.994 L1217.98 683.994 L1218.54 683.994 L1219.1 683.994 L1219.66 683.994 L1220.22 683.994 L1220.78 683.994 L1221.34 683.994 L1221.89 683.994 L1222.45 683.994 L1223.01 683.994 L1223.57 683.994 L1224.13 683.994 L1224.69 683.994 L1225.25 683.994 L1225.81 683.994 L1226.37 683.994 L1226.93 683.994 L1227.49 683.994 L1228.05 683.994 L1228.61 683.994 L1229.17 683.994 L1229.72 683.994 L1230.28 683.994 L1230.84 683.994 L1231.4 683.994 L1231.96 683.994 L1232.52 683.994 L1233.08 683.994 L1233.64 683.994 L1234.2 683.994 L1234.76 683.994 L1235.32 683.994 L1235.88 683.994 L1236.44 683.994 L1236.99 683.994 L1237.55 683.994 L1238.11 683.994 L1238.67 683.994 L1239.23 683.994 L1239.79 683.994 L1240.35 683.994 L1240.91 683.994 L1241.47 683.994 L1242.03 683.994 L1242.59 683.994 L1243.15 683.994 L1243.71 683.994 L1244.26 683.994 L1244.82 683.994 L1245.38 683.994 L1245.94 683.994 L1246.5 683.994 L1247.06 683.994 L1247.62 683.994 L1248.18 683.994 L1248.74 683.994 L1249.3 683.994 L1249.86 683.994 L1250.42 683.994 L1250.98 683.994 L1251.54 683.994 L1252.09 683.994 L1252.65 683.994 L1253.21 683.994 L1253.77 683.994 L1254.33 683.994 L1254.89 683.994 L1255.45 683.994 L1256.01 683.994 L1256.57 683.994 L1257.13 683.994 L1257.69 683.994 L1258.25 683.994 L1258.81 683.994 L1259.36 683.994 L1259.92 683.994 L1260.48 683.994 L1261.04 683.994 L1261.6 683.994 L1262.16 683.994 L1262.72 683.994 L1263.28 683.994 L1263.84 683.994 L1264.4 683.994 L1264.96 683.994 L1265.52 683.994 L1266.08 683.994 L1266.63 683.994 L1267.19 683.994 L1267.75 683.994 L1268.31 683.994 L1268.87 683.994 L1269.43 683.994 L1269.99 683.994 L1270.55 683.994 L1271.11 683.994 L1271.67 683.994 L1272.23 683.994 L1272.79 683.994 L1273.35 683.994 L1273.91 683.994 L1274.46 683.994 L1275.02 683.994 L1275.58 683.994 L1276.14 683.994 L1276.7 683.994 L1277.26 683.994 L1277.82 683.994 L1278.38 683.994 L1278.94 683.994 L1279.5 683.994 L1280.06 683.994 L1280.62 683.994 L1281.18 683.994 L1281.73 683.994 L1282.29 683.994 L1282.85 683.994 L1283.41 683.994 L1283.97 683.994 L1284.53 683.994 L1285.09 683.994 L1285.65 683.994 L1286.21 683.994 L1286.77 683.994 L1287.33 683.994 L1287.89 683.994 L1288.45 683.994 L1289 683.994 L1289.56 683.994 L1290.12 683.994 L1290.68 683.994 L1291.24 683.994 L1291.8 683.994 L1292.36 683.994 L1292.92 683.994 L1293.48 683.994 L1294.04 683.994 L1294.6 683.994 L1295.16 683.994 L1295.72 683.994 L1296.28 683.994 L1296.83 683.994 L1297.39 683.994 L1297.95 683.994 L1298.51 683.994 L1299.07 683.994 L1299.63 683.994 L1300.19 683.994 L1300.75 683.994 L1301.31 683.994 L1301.87 683.994 L1302.43 683.994 L1302.99 683.994 L1303.55 683.994 L1304.1 683.994 L1304.66 683.994 L1305.22 683.994 L1305.78 683.994 L1306.34 683.994 L1306.9 683.994 L1307.46 683.994 L1308.02 683.994 L1308.58 683.994 L1309.14 683.994 L1309.7 683.994 L1310.26 683.994 L1310.82 683.994 L1311.38 683.994 L1311.93 683.994 L1312.49 683.994 L1313.05 683.994 L1313.61 683.994 L1314.17 683.994 L1314.73 683.994 L1315.29 683.994 L1315.85 683.994 L1316.41 683.994 L1316.97 683.994 L1317.53 683.994 L1318.09 683.994 L1318.65 683.994 L1319.2 683.994 L1319.76 683.994 L1320.32 683.994 L1320.88 683.994 L1321.44 683.994 L1322 683.994 L1322.56 683.994 L1323.12 683.994 L1323.68 683.994 L1324.24 683.994 L1324.8 683.994 L1325.36 683.994 L1325.92 683.994 L1326.47 683.994 L1327.03 683.994 L1327.59 683.994 L1328.15 683.994 L1328.71 683.994 L1329.27 683.994 L1329.83 683.994 L1330.39 683.994 L1330.95 683.994 L1331.51 683.994 L1332.07 683.994 L1332.63 683.994 L1333.19 683.994 L1333.75 683.994 L1334.3 683.994 L1334.86 683.994 L1335.42 683.994 L1335.98 683.994 L1336.54 683.994 L1337.1 683.994 L1337.66 683.994 L1338.22 683.994 L1338.78 683.994 L1339.34 683.994 L1339.9 683.994 L1340.46 683.994 L1341.02 683.994 L1341.57 683.994 L1342.13 683.994 L1342.69 683.994 L1343.25 683.994 L1343.81 683.994 L1344.37 683.994 L1344.93 683.994 L1345.49 683.994 L1346.05 683.994 L1346.61 683.994 L1347.17 683.994 L1347.73 683.994 L1348.29 683.994 L1348.84 683.994 L1349.4 683.994 L1349.96 683.994 L1350.52 683.994 L1351.08 683.994 L1351.64 683.994 L1352.2 683.994 L1352.76 683.994 L1353.32 683.994 L1353.88 683.994 L1354.44 683.994 L1355 683.994 L1355.56 683.994 L1356.12 683.994 L1356.67 683.994 L1357.23 683.994 L1357.79 683.994 L1358.35 683.994 L1358.91 683.994 L1359.47 683.994 L1360.03 683.994 L1360.59 683.994 L1361.15 683.994 L1361.71 683.994 L1362.27 683.994 L1362.83 683.994 L1363.39 683.994 L1363.94 683.994 L1364.5 683.994 L1365.06 683.994 L1365.62 683.994 L1366.18 683.994 L1366.74 683.994 L1367.3 683.994 L1367.86 683.994 L1368.42 683.994 L1368.98 683.994 L1369.54 683.994 L1370.1 683.994 L1370.66 683.994 L1371.21 683.994 L1371.77 683.994 L1372.33 683.994 L1372.89 683.994 L1373.45 683.994 L1374.01 683.994 L1374.57 683.994 L1375.13 683.994 L1375.69 683.994 L1376.25 683.994 L1376.81 683.994 L1377.37 683.994 L1377.93 683.994 L1378.49 683.994 L1379.04 683.994 L1379.6 683.994 L1380.16 683.994 L1380.72 683.994 L1381.28 683.994 L1381.84 683.994 L1382.4 683.994 L1382.96 683.994 L1383.52 683.994 L1384.08 683.994 L1384.64 683.994 L1385.2 683.994 L1385.76 683.994 L1386.31 683.994 L1386.87 683.994 L1387.43 683.994 L1387.99 683.994 L1388.55 683.994 L1389.11 683.994 L1389.67 683.994 L1390.23 683.994 L1390.79 683.994 L1391.35 683.994 L1391.91 683.994 L1392.47 683.994 L1393.03 683.994 L1393.58 683.994 L1394.14 683.994 L1394.7 683.994 L1395.26 683.994 L1395.82 683.994 L1396.38 683.994 L1396.94 683.994 L1397.5 683.994 L1398.06 683.994 L1398.62 683.994 L1399.18 683.994 L1399.74 683.994 L1400.3 683.994 L1400.86 683.994 L1401.41 683.994 L1401.97 683.994 L1402.53 683.994 L1403.09 683.994 L1403.65 683.994 L1404.21 683.994 L1404.77 683.994 L1405.33 683.994 L1405.89 683.994 L1406.45 683.994 L1407.01 683.994 L1407.57 683.994 L1408.13 683.994 L1408.68 683.994 L1409.24 683.994 L1409.8 683.994 L1410.36 683.994 L1410.92 683.994 L1411.48 683.994 L1412.04 683.994 L1412.6 683.994 L1413.16 683.994 L1413.72 683.994 L1414.28 683.994 L1414.84 683.994 L1415.4 683.994 L1415.95 683.994 L1416.51 683.994 L1417.07 683.994 L1417.63 683.994 L1418.19 683.994 L1418.75 683.994 L1419.31 683.994 L1419.87 683.994 L1420.43 683.994 L1420.99 683.994 L1421.55 683.994 L1422.11 683.994 L1422.67 683.994 L1423.23 683.994 L1423.78 683.994 L1424.34 683.994 L1424.9 683.994 L1425.46 683.994 L1426.02 683.994 L1426.58 683.994 L1427.14 683.994 L1427.7 683.994 L1428.26 683.994 L1428.82 683.994 L1429.38 683.994 L1429.94 683.994 L1430.5 683.994 L1431.05 683.994 L1431.61 683.994 L1432.17 683.994 L1432.73 683.994 L1433.29 683.994 L1433.85 683.994 L1434.41 683.994 L1434.97 683.994 L1435.53 683.994 L1436.09 683.994 L1436.65 683.994 L1437.21 683.994 L1437.77 683.994 L1438.33 683.994 L1438.88 683.994 L1439.44 683.994 L1440 683.994 L1440.56 683.994 L1441.12 683.994 L1441.68 683.994 L1442.24 683.994 L1442.8 683.994 L1443.36 683.994 L1443.92 683.994 L1444.48 683.994 L1445.04 683.994 L1445.6 683.994 L1446.15 683.994 L1446.71 683.994 L1447.27 683.994 L1447.83 683.994 L1448.39 683.994 L1448.95 683.994 L1449.51 683.994 L1450.07 683.994 L1450.63 683.994 L1451.19 683.994 L1451.75 683.994 L1452.31 683.994 L1452.87 683.994 L1453.42 683.994 L1453.98 683.994 L1454.54 683.994 L1455.1 683.994 L1455.66 683.994 L1456.22 683.994 L1456.78 683.994 L1457.34 683.994 L1457.9 683.994 L1458.46 683.994 L1459.02 683.994 L1459.58 683.994 L1460.14 683.994 L1460.7 683.994 L1461.25 683.994 L1461.81 683.994 L1462.37 683.994 L1462.93 683.994 L1463.49 683.994 L1464.05 683.994 L1464.61 683.994 L1465.17 683.994 L1465.73 683.994 L1466.29 683.994 L1466.85 683.994 L1467.41 683.994 L1467.97 683.994 L1468.52 683.994 L1469.08 683.994 L1469.64 683.994 L1470.2 683.994 L1470.76 683.994 L1471.32 683.994 L1471.88 683.994 L1472.44 683.994 L1473 683.994 L1473.56 683.994 L1474.12 683.994 L1474.68 683.994 L1475.24 683.994 L1475.79 683.994 L1476.35 683.994 L1476.91 683.994 L1477.47 683.994 L1478.03 683.994 L1478.59 683.994 L1479.15 683.994 L1479.71 683.994 L1480.27 683.994 L1480.83 683.994 L1481.39 683.994 L1481.95 683.994 L1482.51 683.994 L1483.07 683.994 L1483.62 683.994 L1484.18 683.994 L1484.74 683.994 L1485.3 683.994 L1485.86 683.994 L1486.42 683.994 L1486.98 683.994 L1487.54 683.994 L1488.1 683.994 L1488.66 683.994 L1489.22 683.994 L1489.78 683.994 L1490.34 683.994 L1490.89 683.994 L1491.45 683.994 L1492.01 683.994 L1492.57 683.994 L1493.13 683.994 L1493.69 683.994 L1494.25 683.994 L1494.81 683.994 L1495.37 683.994 L1495.93 683.994 L1496.49 683.994 L1497.05 683.994 L1497.61 683.994 L1498.16 683.994 L1498.72 683.994 L1499.28 683.994 L1499.84 683.994 L1500.4 683.994 L1500.96 683.994 L1501.52 683.994 L1502.08 683.994 L1502.64 683.994 L1503.2 683.994 L1503.76 683.994 L1504.32 683.994 L1504.88 683.994 L1505.44 683.994 L1505.99 683.994 L1506.55 683.994 L1507.11 683.994 L1507.67 683.994 L1508.23 683.994 L1508.79 683.994 L1509.35 683.994 L1509.91 683.994 L1510.47 683.994 L1511.03 683.994 L1511.59 683.994 L1512.15 683.994 L1512.71 683.994 L1513.26 683.994 L1513.82 683.994 L1514.38 683.994 L1514.94 683.994 L1515.5 683.994 L1516.06 683.994 L1516.62 683.994 L1517.18 683.994 L1517.74 683.994 L1518.3 683.994 L1518.86 683.994 L1519.42 683.994 L1519.98 683.994 L1520.53 683.994 L1521.09 683.994 L1521.65 683.994 L1522.21 683.994 L1522.77 683.994 L1523.33 683.994 L1523.89 683.994 L1524.45 683.994 L1525.01 683.994 L1525.57 683.994 L1526.13 683.994 L1526.69 683.994 L1527.25 683.994 L1527.81 683.994 L1528.36 683.994 L1528.92 683.994 L1529.48 683.994 L1530.04 683.994 L1530.6 683.994 L1531.16 683.994 L1531.72 683.994 L1532.28 683.994 L1532.84 683.994 L1533.4 683.994 L1533.96 683.994 L1534.52 683.994 L1535.08 683.994 L1535.63 683.994 L1536.19 683.994 L1536.75 683.994 L1537.31 683.994 L1537.87 683.994 L1538.43 683.994 L1538.99 683.994 L1539.55 683.994 L1540.11 683.994 L1540.67 683.994 L1541.23 683.994 L1541.79 683.994 L1542.35 683.994 L1542.9 683.994 L1543.46 683.994 L1544.02 683.994 L1544.58 683.994 L1545.14 683.994 L1545.7 683.994 L1546.26 683.994 L1546.82 683.994 L1547.38 683.994 L1547.94 683.994 L1548.5 683.994 L1549.06 683.994 L1549.62 683.994 L1550.18 683.994 L1550.73 683.994 L1551.29 683.994 L1551.85 683.994 L1552.41 683.994 L1552.97 683.994 L1553.53 683.994 L1554.09 683.994 L1554.65 683.994 L1555.21 683.994 L1555.77 683.994 L1556.33 683.994 L1556.89 683.994 L1557.45 683.994 L1558 683.994 L1558.56 683.994 L1559.12 683.994 L1559.68 683.994 L1560.24 683.994 L1560.8 683.994 L1561.36 683.994 L1561.92 683.994 L1562.48 683.994 L1563.04 683.994 L1563.6 683.994 L1564.16 683.994 L1564.72 683.994 L1565.28 683.994 L1565.83 683.994 L1566.39 683.994 L1566.95 683.994 L1567.51 683.994 L1568.07 683.994 L1568.63 683.994 L1569.19 683.994 L1569.75 683.994 L1570.31 683.994 L1570.87 683.994 L1571.43 683.994 L1571.99 683.994 L1572.55 683.994 L1573.1 683.994 L1573.66 683.994 L1574.22 683.994 L1574.78 683.994 L1575.34 683.994 L1575.9 683.994 L1576.46 683.994 L1577.02 683.994 L1577.58 683.994 L1578.14 683.994 L1578.7 683.994 L1579.26 683.994 L1579.82 683.994 L1580.37 683.994 L1580.93 683.994 L1581.49 683.994 L1582.05 683.994 L1582.61 683.994 L1583.17 683.994 L1583.73 683.994 L1584.29 683.994 L1584.85 683.994 L1585.41 683.994 L1585.97 683.994 L1586.53 683.994 L1587.09 683.994 L1587.65 683.994 L1588.2 683.994 L1588.76 683.994 L1589.32 683.994 L1589.88 683.994 L1590.44 683.994 L1591 683.994 L1591.56 683.994 L1592.12 683.994 L1592.68 683.994 L1593.24 683.994 L1593.8 683.994 L1594.36 683.994 L1594.92 683.994 L1595.47 683.994 L1596.03 683.994 L1596.59 683.994 L1597.15 683.994 L1597.71 683.994 L1598.27 683.994 L1598.83 683.994 L1599.39 683.994 L1599.95 683.994 L1600.51 683.994 L1601.07 683.994 L1601.63 683.994 L1602.19 683.994 L1602.74 683.994 L1603.3 683.994 L1603.86 683.994 L1604.42 683.994 L1604.98 683.994 L1605.54 683.994 L1606.1 683.994 L1606.66 683.994 L1607.22 683.994 L1607.78 683.994 L1608.34 683.994 L1608.9 683.994 L1609.46 683.994 L1610.02 683.994 L1610.57 683.994 L1611.13 683.994 L1611.69 683.994 L1612.25 683.994 L1612.81 683.994 L1613.37 683.994 L1613.93 683.994 L1614.49 683.994 L1615.05 683.994 L1615.61 683.994 L1616.17 683.994 L1616.73 683.994 L1617.29 683.994 L1617.84 683.994 L1618.4 683.994 L1618.96 683.994 L1619.52 683.994 L1620.08 683.994 L1620.64 683.994 L1621.2 683.994 L1621.76 683.994 L1622.32 683.994 L1622.88 683.994 L1623.44 683.994 L1624 683.994 L1624.56 683.994 L1625.11 683.994 L1625.67 683.994 L1626.23 683.994 L1626.79 683.994 L1627.35 683.994 L1627.91 683.994 L1628.47 683.994 L1629.03 683.994 L1629.59 683.994 L1630.15 683.994 L1630.71 683.994 L1631.27 683.994 L1631.83 683.994 L1632.39 683.994 L1632.94 683.994 L1633.5 683.994 L1634.06 683.994 L1634.62 683.994 L1635.18 683.994 L1635.74 683.994 L1636.3 683.994 L1636.86 683.994 L1637.42 683.994 L1637.98 683.994 L1638.54 683.994 L1639.1 683.994 L1639.66 683.994 L1640.21 683.994 L1640.77 683.994 L1641.33 683.994 L1641.89 683.994 L1642.45 683.994 L1643.01 683.994 L1643.57 683.994 L1644.13 683.994 L1644.69 683.994 L1645.25 683.994 L1645.81 683.994 L1646.37 683.994 L1646.93 683.994 L1647.48 683.994 L1648.04 683.994 L1648.6 683.994 L1649.16 683.994 L1649.72 683.994 L1650.28 683.994 L1650.84 683.994 L1651.4 683.994 L1651.96 683.994 L1652.52 683.994 L1653.08 683.994 L1653.64 683.994 L1654.2 683.994 L1654.76 683.994 L1655.31 683.994 L1655.87 683.994 L1656.43 683.994 L1656.99 683.994 L1657.55 683.994 L1658.11 683.994 L1658.67 683.994 L1659.23 683.994 L1659.79 683.994 L1660.35 683.994 L1660.91 683.994 L1661.47 683.994 L1662.03 683.994 L1662.58 683.994 L1663.14 683.994 L1663.7 683.994 L1664.26 683.994 L1664.82 683.994 L1665.38 683.994 L1665.94 683.994 L1666.5 683.994 L1667.06 683.994 L1667.62 683.994 L1668.18 683.994 L1668.74 683.994 L1669.3 683.994 L1669.85 683.994 L1670.41 683.994 L1670.97 683.994 L1671.53 683.994 L1672.09 683.994 L1672.65 683.994 L1673.21 683.994 L1673.77 683.994 L1674.33 683.994 L1674.89 683.994 L1675.45 683.994 L1676.01 683.994 L1676.57 683.994 L1677.13 683.994 L1677.68 683.994 L1678.24 683.994 L1678.8 683.994 L1679.36 683.994 L1679.92 683.994 L1680.48 683.994 L1681.04 683.994 L1681.6 683.994 L1682.16 683.994 L1682.72 683.994 L1683.28 683.994 L1683.84 683.994 L1684.4 683.994 L1684.95 683.994 L1685.51 683.994 L1686.07 683.994 L1686.63 683.994 L1687.19 683.994 L1687.75 683.994 L1688.31 683.994 L1688.87 683.994 L1689.43 683.994 L1689.99 683.994 L1690.55 683.994 L1691.11 683.994 L1691.67 683.994 L1692.23 683.994 L1692.78 683.994 L1693.34 683.994 L1693.9 683.994 L1694.46 683.994 L1695.02 683.994 L1695.58 683.994 L1696.14 683.994 L1696.7 683.994 L1697.26 683.994 L1697.82 683.994 L1698.38 683.994 L1698.94 683.994 L1699.5 683.994 L1700.05 683.994 L1700.61 683.994 L1701.17 683.994 L1701.73 683.994 L1702.29 683.994 L1702.85 683.994 L1703.41 683.994 L1703.97 683.994 L1704.53 683.994 L1705.09 683.994 L1705.65 683.994 L1706.21 683.994 L1706.77 683.994 L1707.32 683.994 L1707.88 683.994 L1708.44 683.994 L1709 683.994 L1709.56 683.994 L1710.12 683.994 L1710.68 683.994 L1711.24 683.994 L1711.8 683.994 L1712.36 683.994 L1712.92 683.994 L1713.48 683.994 L1714.04 683.994 L1714.6 683.994 L1715.15 683.994 L1715.71 683.994 L1716.27 683.994 L1716.83 683.994 L1717.39 683.994 L1717.95 683.994 L1718.51 683.994 L1719.07 683.994 L1719.63 683.994 L1720.19 683.994 L1720.75 683.994 L1721.31 683.994 L1721.87 683.994 L1722.42 683.994 L1722.98 683.994 L1723.54 683.994 L1724.1 683.994 L1724.66 683.994 L1725.22 683.994 L1725.78 683.994 L1726.34 683.994 L1726.9 683.994 L1727.46 683.994 L1728.02 683.994 L1728.58 683.994 L1729.14 683.994 L1729.69 683.994 L1730.25 683.994 L1730.81 683.994 L1731.37 683.994 L1731.93 683.994 L1732.49 683.994 L1733.05 683.994 L1733.61 683.994 L1734.17 683.994 L1734.73 683.994 L1735.29 683.994 L1735.85 683.994 L1736.41 683.994 L1736.97 683.994 L1737.52 683.994 L1738.08 683.994 L1738.64 683.994 L1739.2 683.994 L1739.76 683.994 L1740.32 683.994 L1740.88 683.994 L1741.44 683.994 L1742 683.994 L1742.56 683.994 L1743.12 683.994 L1743.68 683.994 L1744.24 683.994 L1744.79 683.994 L1745.35 683.994 L1745.91 683.994 L1746.47 683.994 L1747.03 683.994 L1747.59 683.994 L1748.15 683.994 L1748.71 683.994 L1749.27 683.994 L1749.83 683.994 L1750.39 683.994 L1750.95 683.994 L1751.51 683.994 L1752.06 683.994 L1752.62 683.994 L1753.18 683.994 L1753.74 683.994 L1754.3 683.994 L1754.86 683.994 L1755.42 683.994 L1755.98 683.994 L1756.54 683.994 L1757.1 683.994 L1757.66 683.994 L1758.22 683.994 L1758.78 683.994 L1759.34 683.994 L1759.89 683.994 L1760.45 683.994 L1761.01 683.994 L1761.57 683.994 L1762.13 683.994 L1762.69 683.994 L1763.25 683.994 L1763.81 683.994 L1764.37 683.994 L1764.93 683.994 L1765.49 683.994 L1766.05 683.994 L1766.61 683.994 L1767.16 683.994 L1767.72 683.994 L1768.28 683.994 L1768.84 683.994 L1769.4 683.994 L1769.96 683.994 L1770.52 683.994 L1771.08 683.994 L1771.64 683.994 L1772.2 683.994 L1772.76 683.994 L1773.32 683.994 L1773.88 683.994 L1774.43 683.994 L1774.99 683.994 L1775.55 683.994 L1776.11 683.994 L1776.67 683.994 L1777.23 683.994 L1777.79 683.994 L1778.35 683.994 L1778.91 683.994 L1779.47 683.994 L1780.03 683.994 L1780.59 683.994 L1781.15 683.994 L1781.71 683.994 L1782.26 683.994 L1782.82 683.994 L1783.38 683.994 L1783.94 683.994 L1784.5 683.994 L1785.06 683.994 L1785.62 683.994 L1786.18 683.994 L1786.74 683.994 L1787.3 683.994 L1787.86 683.994 L1788.42 683.994 L1788.98 683.994 L1789.53 683.994 L1790.09 683.994 L1790.65 683.994 L1791.21 683.994 L1791.77 683.994 L1792.33 683.994 L1792.89 683.994 L1793.45 683.994 L1794.01 683.994 L1794.57 683.994 L1795.13 683.994 L1795.69 683.994 L1796.25 683.994 L1796.8 683.994 L1797.36 683.994 L1797.92 683.994 L1798.48 683.994 L1799.04 683.994 L1799.6 683.994 L1800.16 683.994 L1800.72 683.994 L1801.28 683.994 L1801.84 683.994 L1802.4 683.994 L1802.96 683.994 L1803.52 683.994 L1804.08 683.994 L1804.63 683.994 L1805.19 683.994 L1805.75 683.994 L1806.31 683.994 L1806.87 683.994 L1807.43 683.994 L1807.99 683.994 L1808.55 683.994 L1809.11 683.994 L1809.67 683.994 L1810.23 683.994 L1810.79 683.994 L1811.35 683.994 L1811.9 683.994 L1812.46 683.994 L1813.02 683.994 L1813.58 683.994 L1814.14 683.994 L1814.7 683.994 L1815.26 683.994 L1815.82 683.994 L1816.38 683.994 L1816.94 683.994 L1817.5 683.994 L1818.06 683.994 L1818.62 683.994 L1819.18 683.994 L1819.73 683.994 L1820.29 683.994 L1820.85 683.994 L1821.41 683.994 L1821.97 683.994 L1822.53 683.994 L1823.09 683.994 L1823.65 683.994 L1824.21 683.994 L1824.77 683.994 L1825.33 683.994 L1825.89 683.994 L1826.45 683.994 L1827 683.994 L1827.56 683.994 L1828.12 683.994 L1828.68 683.994 L1829.24 683.994 L1829.8 683.994 L1830.36 683.994 L1830.92 683.994 L1831.48 683.994 L1832.04 683.994 L1832.6 683.994 L1833.16 683.994 L1833.72 683.994 L1834.27 683.994 L1834.83 683.994 L1835.39 683.994 L1835.95 683.994 L1836.51 683.994 L1837.07 683.994 L1837.63 683.994 L1838.19 683.994 L1838.19 682.088 L1837.63 682.088 L1837.07 682.088 L1836.51 682.088 L1835.95 682.088 L1835.39 682.088 L1834.83 682.088 L1834.27 682.088 L1833.72 682.088 L1833.16 682.088 L1832.6 682.088 L1832.04 682.088 L1831.48 682.088 L1830.92 682.088 L1830.36 682.088 L1829.8 682.088 L1829.24 682.088 L1828.68 682.088 L1828.12 682.088 L1827.56 682.088 L1827 682.088 L1826.45 682.088 L1825.89 682.088 L1825.33 682.088 L1824.77 682.088 L1824.21 682.088 L1823.65 682.088 L1823.09 682.088 L1822.53 682.088 L1821.97 682.088 L1821.41 682.088 L1820.85 682.088 L1820.29 682.088 L1819.73 682.088 L1819.18 682.088 L1818.62 682.088 L1818.06 682.088 L1817.5 682.088 L1816.94 682.088 L1816.38 682.088 L1815.82 682.088 L1815.26 682.088 L1814.7 682.088 L1814.14 682.088 L1813.58 682.088 L1813.02 682.088 L1812.46 682.088 L1811.9 682.088 L1811.35 682.088 L1810.79 682.088 L1810.23 682.088 L1809.67 682.088 L1809.11 682.088 L1808.55 682.088 L1807.99 682.088 L1807.43 682.088 L1806.87 682.088 L1806.31 682.088 L1805.75 682.088 L1805.19 682.088 L1804.63 682.088 L1804.08 682.088 L1803.52 682.088 L1802.96 682.088 L1802.4 682.088 L1801.84 682.088 L1801.28 682.088 L1800.72 682.088 L1800.16 682.088 L1799.6 682.088 L1799.04 682.088 L1798.48 682.088 L1797.92 682.088 L1797.36 682.088 L1796.8 682.088 L1796.25 682.088 L1795.69 682.088 L1795.13 682.088 L1794.57 682.088 L1794.01 682.088 L1793.45 682.088 L1792.89 682.088 L1792.33 682.088 L1791.77 682.088 L1791.21 682.088 L1790.65 682.088 L1790.09 682.088 L1789.53 682.088 L1788.98 682.088 L1788.42 682.088 L1787.86 682.088 L1787.3 682.088 L1786.74 682.088 L1786.18 682.088 L1785.62 682.088 L1785.06 682.088 L1784.5 682.088 L1783.94 682.088 L1783.38 682.088 L1782.82 682.088 L1782.26 682.088 L1781.71 682.088 L1781.15 682.088 L1780.59 682.088 L1780.03 682.088 L1779.47 682.088 L1778.91 682.088 L1778.35 682.088 L1777.79 682.088 L1777.23 682.088 L1776.67 682.088 L1776.11 682.088 L1775.55 682.088 L1774.99 682.088 L1774.43 682.088 L1773.88 682.088 L1773.32 682.088 L1772.76 682.088 L1772.2 682.088 L1771.64 682.088 L1771.08 682.088 L1770.52 682.088 L1769.96 682.088 L1769.4 682.088 L1768.84 682.088 L1768.28 682.088 L1767.72 682.088 L1767.16 682.088 L1766.61 682.088 L1766.05 682.088 L1765.49 682.088 L1764.93 682.088 L1764.37 682.088 L1763.81 682.088 L1763.25 682.088 L1762.69 682.088 L1762.13 682.088 L1761.57 682.088 L1761.01 682.088 L1760.45 682.088 L1759.89 682.088 L1759.34 682.088 L1758.78 682.088 L1758.22 682.088 L1757.66 682.088 L1757.1 682.088 L1756.54 682.088 L1755.98 682.088 L1755.42 682.088 L1754.86 682.088 L1754.3 682.088 L1753.74 682.088 L1753.18 682.088 L1752.62 682.088 L1752.06 682.088 L1751.51 682.088 L1750.95 682.088 L1750.39 682.088 L1749.83 682.088 L1749.27 682.088 L1748.71 682.088 L1748.15 682.088 L1747.59 682.088 L1747.03 682.088 L1746.47 682.088 L1745.91 682.088 L1745.35 682.088 L1744.79 682.088 L1744.24 682.088 L1743.68 682.088 L1743.12 682.088 L1742.56 682.088 L1742 682.088 L1741.44 682.088 L1740.88 682.088 L1740.32 682.088 L1739.76 682.088 L1739.2 682.088 L1738.64 682.088 L1738.08 682.088 L1737.52 682.088 L1736.97 682.088 L1736.41 682.088 L1735.85 682.088 L1735.29 682.088 L1734.73 682.088 L1734.17 682.088 L1733.61 682.088 L1733.05 682.088 L1732.49 682.088 L1731.93 682.088 L1731.37 682.088 L1730.81 682.088 L1730.25 682.088 L1729.69 682.088 L1729.14 682.088 L1728.58 682.088 L1728.02 682.088 L1727.46 682.088 L1726.9 682.088 L1726.34 682.088 L1725.78 682.088 L1725.22 682.088 L1724.66 682.088 L1724.1 682.088 L1723.54 682.088 L1722.98 682.088 L1722.42 682.088 L1721.87 682.088 L1721.31 682.088 L1720.75 682.088 L1720.19 682.088 L1719.63 682.088 L1719.07 682.088 L1718.51 682.088 L1717.95 682.088 L1717.39 682.088 L1716.83 682.088 L1716.27 682.088 L1715.71 682.088 L1715.15 682.088 L1714.6 682.088 L1714.04 682.088 L1713.48 682.088 L1712.92 682.088 L1712.36 682.088 L1711.8 682.088 L1711.24 682.088 L1710.68 682.088 L1710.12 682.088 L1709.56 682.088 L1709 682.088 L1708.44 682.088 L1707.88 682.088 L1707.32 682.088 L1706.77 682.088 L1706.21 682.088 L1705.65 682.088 L1705.09 682.088 L1704.53 682.088 L1703.97 682.088 L1703.41 682.088 L1702.85 682.088 L1702.29 682.088 L1701.73 682.088 L1701.17 682.088 L1700.61 682.088 L1700.05 682.088 L1699.5 682.088 L1698.94 682.088 L1698.38 682.088 L1697.82 682.088 L1697.26 682.088 L1696.7 682.088 L1696.14 682.088 L1695.58 682.088 L1695.02 682.088 L1694.46 682.088 L1693.9 682.088 L1693.34 682.088 L1692.78 682.088 L1692.23 682.088 L1691.67 682.088 L1691.11 682.088 L1690.55 682.088 L1689.99 682.088 L1689.43 682.088 L1688.87 682.088 L1688.31 682.088 L1687.75 682.088 L1687.19 682.088 L1686.63 682.088 L1686.07 682.088 L1685.51 682.088 L1684.95 682.088 L1684.4 682.088 L1683.84 682.088 L1683.28 682.088 L1682.72 682.088 L1682.16 682.088 L1681.6 682.088 L1681.04 682.088 L1680.48 682.088 L1679.92 682.088 L1679.36 682.088 L1678.8 682.088 L1678.24 682.088 L1677.68 682.088 L1677.13 682.088 L1676.57 682.088 L1676.01 682.088 L1675.45 682.088 L1674.89 682.088 L1674.33 682.088 L1673.77 682.088 L1673.21 682.088 L1672.65 682.088 L1672.09 682.088 L1671.53 682.088 L1670.97 682.088 L1670.41 682.088 L1669.85 682.088 L1669.3 682.088 L1668.74 682.088 L1668.18 682.088 L1667.62 682.088 L1667.06 682.088 L1666.5 682.088 L1665.94 682.088 L1665.38 682.088 L1664.82 682.088 L1664.26 682.088 L1663.7 682.088 L1663.14 682.088 L1662.58 682.088 L1662.03 682.088 L1661.47 682.088 L1660.91 682.088 L1660.35 682.088 L1659.79 682.088 L1659.23 682.088 L1658.67 682.088 L1658.11 682.088 L1657.55 682.088 L1656.99 682.088 L1656.43 682.088 L1655.87 682.088 L1655.31 682.088 L1654.76 682.088 L1654.2 682.088 L1653.64 682.088 L1653.08 682.088 L1652.52 682.088 L1651.96 682.088 L1651.4 682.088 L1650.84 682.088 L1650.28 682.088 L1649.72 682.088 L1649.16 682.088 L1648.6 682.088 L1648.04 682.088 L1647.48 682.088 L1646.93 682.088 L1646.37 682.088 L1645.81 682.088 L1645.25 682.088 L1644.69 682.088 L1644.13 682.088 L1643.57 682.088 L1643.01 682.088 L1642.45 682.088 L1641.89 682.088 L1641.33 682.088 L1640.77 682.088 L1640.21 682.088 L1639.66 682.088 L1639.1 682.088 L1638.54 682.088 L1637.98 682.088 L1637.42 682.088 L1636.86 682.088 L1636.3 682.088 L1635.74 682.088 L1635.18 682.088 L1634.62 682.088 L1634.06 682.088 L1633.5 682.088 L1632.94 682.088 L1632.39 682.088 L1631.83 682.088 L1631.27 682.088 L1630.71 682.088 L1630.15 682.088 L1629.59 682.088 L1629.03 682.088 L1628.47 682.088 L1627.91 682.088 L1627.35 682.088 L1626.79 682.088 L1626.23 682.088 L1625.67 682.088 L1625.11 682.088 L1624.56 682.088 L1624 682.088 L1623.44 682.088 L1622.88 682.088 L1622.32 682.088 L1621.76 682.088 L1621.2 682.088 L1620.64 682.088 L1620.08 682.088 L1619.52 682.088 L1618.96 682.088 L1618.4 682.088 L1617.84 682.088 L1617.29 682.088 L1616.73 682.088 L1616.17 682.088 L1615.61 682.088 L1615.05 682.088 L1614.49 682.088 L1613.93 682.088 L1613.37 682.088 L1612.81 682.088 L1612.25 682.088 L1611.69 682.088 L1611.13 682.088 L1610.57 682.088 L1610.02 682.088 L1609.46 682.088 L1608.9 682.088 L1608.34 682.088 L1607.78 682.088 L1607.22 682.088 L1606.66 682.088 L1606.1 682.088 L1605.54 682.088 L1604.98 682.088 L1604.42 682.088 L1603.86 682.088 L1603.3 682.088 L1602.74 682.088 L1602.19 682.088 L1601.63 682.088 L1601.07 682.088 L1600.51 682.088 L1599.95 682.088 L1599.39 682.088 L1598.83 682.088 L1598.27 682.088 L1597.71 682.088 L1597.15 682.088 L1596.59 682.088 L1596.03 682.088 L1595.47 682.088 L1594.92 682.088 L1594.36 682.088 L1593.8 682.088 L1593.24 682.088 L1592.68 682.088 L1592.12 682.088 L1591.56 682.088 L1591 682.088 L1590.44 682.088 L1589.88 682.088 L1589.32 682.088 L1588.76 682.088 L1588.2 682.088 L1587.65 682.088 L1587.09 682.088 L1586.53 682.088 L1585.97 682.088 L1585.41 682.088 L1584.85 682.088 L1584.29 682.088 L1583.73 682.088 L1583.17 682.088 L1582.61 682.088 L1582.05 682.088 L1581.49 682.088 L1580.93 682.088 L1580.37 682.088 L1579.82 682.088 L1579.26 682.088 L1578.7 682.088 L1578.14 682.088 L1577.58 682.088 L1577.02 682.088 L1576.46 682.088 L1575.9 682.088 L1575.34 682.088 L1574.78 682.088 L1574.22 682.088 L1573.66 682.088 L1573.1 682.088 L1572.55 682.088 L1571.99 682.088 L1571.43 682.088 L1570.87 682.088 L1570.31 682.088 L1569.75 682.088 L1569.19 682.088 L1568.63 682.088 L1568.07 682.088 L1567.51 682.088 L1566.95 682.088 L1566.39 682.088 L1565.83 682.088 L1565.28 682.088 L1564.72 682.088 L1564.16 682.088 L1563.6 682.088 L1563.04 682.088 L1562.48 682.088 L1561.92 682.088 L1561.36 682.088 L1560.8 682.088 L1560.24 682.088 L1559.68 682.088 L1559.12 682.088 L1558.56 682.088 L1558 682.088 L1557.45 682.088 L1556.89 682.088 L1556.33 682.088 L1555.77 682.088 L1555.21 682.088 L1554.65 682.088 L1554.09 682.088 L1553.53 682.088 L1552.97 682.088 L1552.41 682.088 L1551.85 682.088 L1551.29 682.088 L1550.73 682.088 L1550.18 682.088 L1549.62 682.088 L1549.06 682.088 L1548.5 682.088 L1547.94 682.088 L1547.38 682.088 L1546.82 682.088 L1546.26 682.088 L1545.7 682.088 L1545.14 682.088 L1544.58 682.088 L1544.02 682.088 L1543.46 682.088 L1542.9 682.088 L1542.35 682.088 L1541.79 682.088 L1541.23 682.088 L1540.67 682.088 L1540.11 682.088 L1539.55 682.088 L1538.99 682.088 L1538.43 682.088 L1537.87 682.088 L1537.31 682.088 L1536.75 682.088 L1536.19 682.088 L1535.63 682.088 L1535.08 682.088 L1534.52 682.088 L1533.96 682.088 L1533.4 682.088 L1532.84 682.088 L1532.28 682.088 L1531.72 682.088 L1531.16 682.088 L1530.6 682.088 L1530.04 682.088 L1529.48 682.088 L1528.92 682.088 L1528.36 682.088 L1527.81 682.088 L1527.25 682.088 L1526.69 682.088 L1526.13 682.088 L1525.57 682.088 L1525.01 682.088 L1524.45 682.088 L1523.89 682.088 L1523.33 682.088 L1522.77 682.088 L1522.21 682.088 L1521.65 682.088 L1521.09 682.088 L1520.53 682.088 L1519.98 682.088 L1519.42 682.088 L1518.86 682.088 L1518.3 682.088 L1517.74 682.088 L1517.18 682.088 L1516.62 682.088 L1516.06 682.088 L1515.5 682.088 L1514.94 682.088 L1514.38 682.088 L1513.82 682.088 L1513.26 682.088 L1512.71 682.088 L1512.15 682.088 L1511.59 682.088 L1511.03 682.088 L1510.47 682.088 L1509.91 682.088 L1509.35 682.088 L1508.79 682.088 L1508.23 682.088 L1507.67 682.088 L1507.11 682.088 L1506.55 682.088 L1505.99 682.088 L1505.44 682.088 L1504.88 682.088 L1504.32 682.088 L1503.76 682.088 L1503.2 682.088 L1502.64 682.088 L1502.08 682.088 L1501.52 682.088 L1500.96 682.088 L1500.4 682.088 L1499.84 682.088 L1499.28 682.088 L1498.72 682.088 L1498.16 682.088 L1497.61 682.088 L1497.05 682.088 L1496.49 682.088 L1495.93 682.088 L1495.37 682.088 L1494.81 682.088 L1494.25 682.088 L1493.69 682.088 L1493.13 682.088 L1492.57 682.088 L1492.01 682.088 L1491.45 682.088 L1490.89 682.088 L1490.34 682.088 L1489.78 682.088 L1489.22 682.088 L1488.66 682.088 L1488.1 682.088 L1487.54 682.088 L1486.98 682.088 L1486.42 682.088 L1485.86 682.088 L1485.3 682.088 L1484.74 682.088 L1484.18 682.088 L1483.62 682.088 L1483.07 682.088 L1482.51 682.088 L1481.95 682.088 L1481.39 682.088 L1480.83 682.088 L1480.27 682.088 L1479.71 682.088 L1479.15 682.088 L1478.59 682.088 L1478.03 682.088 L1477.47 682.088 L1476.91 682.088 L1476.35 682.088 L1475.79 682.088 L1475.24 682.088 L1474.68 682.088 L1474.12 682.088 L1473.56 682.088 L1473 682.088 L1472.44 682.088 L1471.88 682.088 L1471.32 682.088 L1470.76 682.088 L1470.2 682.088 L1469.64 682.088 L1469.08 682.088 L1468.52 682.088 L1467.97 682.088 L1467.41 682.088 L1466.85 682.088 L1466.29 682.088 L1465.73 682.088 L1465.17 682.088 L1464.61 682.088 L1464.05 682.088 L1463.49 682.088 L1462.93 682.088 L1462.37 682.088 L1461.81 682.088 L1461.25 682.088 L1460.7 682.088 L1460.14 682.088 L1459.58 682.088 L1459.02 682.088 L1458.46 682.088 L1457.9 682.088 L1457.34 682.088 L1456.78 682.088 L1456.22 682.088 L1455.66 682.088 L1455.1 682.088 L1454.54 682.088 L1453.98 682.088 L1453.42 682.088 L1452.87 682.088 L1452.31 682.088 L1451.75 682.088 L1451.19 682.088 L1450.63 682.088 L1450.07 682.088 L1449.51 682.088 L1448.95 682.088 L1448.39 682.088 L1447.83 682.088 L1447.27 682.088 L1446.71 682.088 L1446.15 682.088 L1445.6 682.088 L1445.04 682.088 L1444.48 682.088 L1443.92 682.088 L1443.36 682.088 L1442.8 682.088 L1442.24 682.088 L1441.68 682.088 L1441.12 682.088 L1440.56 682.088 L1440 682.088 L1439.44 682.088 L1438.88 682.088 L1438.33 682.088 L1437.77 682.088 L1437.21 682.088 L1436.65 682.088 L1436.09 682.088 L1435.53 682.088 L1434.97 682.088 L1434.41 682.088 L1433.85 682.088 L1433.29 682.088 L1432.73 682.088 L1432.17 682.088 L1431.61 682.088 L1431.05 682.088 L1430.5 682.088 L1429.94 682.088 L1429.38 682.088 L1428.82 682.088 L1428.26 682.088 L1427.7 682.088 L1427.14 682.088 L1426.58 682.088 L1426.02 682.088 L1425.46 682.088 L1424.9 682.088 L1424.34 682.088 L1423.78 682.088 L1423.23 682.088 L1422.67 682.088 L1422.11 682.088 L1421.55 682.088 L1420.99 682.088 L1420.43 682.088 L1419.87 682.088 L1419.31 682.088 L1418.75 682.088 L1418.19 682.088 L1417.63 682.088 L1417.07 682.088 L1416.51 682.088 L1415.95 682.088 L1415.4 682.088 L1414.84 682.088 L1414.28 682.088 L1413.72 682.088 L1413.16 682.088 L1412.6 682.088 L1412.04 682.088 L1411.48 682.088 L1410.92 682.088 L1410.36 682.088 L1409.8 682.088 L1409.24 682.088 L1408.68 682.088 L1408.13 682.088 L1407.57 682.088 L1407.01 682.088 L1406.45 682.088 L1405.89 682.088 L1405.33 682.088 L1404.77 682.088 L1404.21 682.088 L1403.65 682.088 L1403.09 682.088 L1402.53 682.088 L1401.97 682.088 L1401.41 682.088 L1400.86 682.088 L1400.3 682.088 L1399.74 682.088 L1399.18 682.088 L1398.62 682.088 L1398.06 682.088 L1397.5 682.088 L1396.94 682.088 L1396.38 682.088 L1395.82 682.088 L1395.26 682.088 L1394.7 682.088 L1394.14 682.088 L1393.58 682.088 L1393.03 682.088 L1392.47 682.088 L1391.91 682.088 L1391.35 682.088 L1390.79 682.088 L1390.23 682.088 L1389.67 682.088 L1389.11 682.088 L1388.55 682.088 L1387.99 682.088 L1387.43 682.088 L1386.87 682.088 L1386.31 682.088 L1385.76 682.088 L1385.2 682.088 L1384.64 682.088 L1384.08 682.088 L1383.52 682.088 L1382.96 682.088 L1382.4 682.088 L1381.84 682.088 L1381.28 682.088 L1380.72 682.088 L1380.16 682.088 L1379.6 682.088 L1379.04 682.088 L1378.49 682.088 L1377.93 682.088 L1377.37 682.088 L1376.81 682.088 L1376.25 682.088 L1375.69 682.088 L1375.13 682.088 L1374.57 682.088 L1374.01 682.088 L1373.45 682.088 L1372.89 682.088 L1372.33 682.088 L1371.77 682.088 L1371.21 682.088 L1370.66 682.088 L1370.1 682.088 L1369.54 682.088 L1368.98 682.088 L1368.42 682.088 L1367.86 682.088 L1367.3 682.088 L1366.74 682.088 L1366.18 682.088 L1365.62 682.088 L1365.06 682.088 L1364.5 682.088 L1363.94 682.088 L1363.39 682.088 L1362.83 682.088 L1362.27 682.088 L1361.71 682.088 L1361.15 682.088 L1360.59 682.088 L1360.03 682.088 L1359.47 682.088 L1358.91 682.088 L1358.35 682.088 L1357.79 682.088 L1357.23 682.088 L1356.67 682.088 L1356.12 682.088 L1355.56 682.088 L1355 682.088 L1354.44 682.088 L1353.88 682.088 L1353.32 682.088 L1352.76 682.088 L1352.2 682.088 L1351.64 682.088 L1351.08 682.088 L1350.52 682.088 L1349.96 682.088 L1349.4 682.088 L1348.84 682.088 L1348.29 682.088 L1347.73 682.088 L1347.17 682.088 L1346.61 682.088 L1346.05 682.088 L1345.49 682.088 L1344.93 682.088 L1344.37 682.088 L1343.81 682.088 L1343.25 682.088 L1342.69 682.088 L1342.13 682.088 L1341.57 682.088 L1341.02 682.088 L1340.46 682.088 L1339.9 682.088 L1339.34 682.088 L1338.78 682.088 L1338.22 682.088 L1337.66 682.088 L1337.1 682.088 L1336.54 682.088 L1335.98 682.088 L1335.42 682.088 L1334.86 682.088 L1334.3 682.088 L1333.75 682.088 L1333.19 682.088 L1332.63 682.088 L1332.07 682.088 L1331.51 682.088 L1330.95 682.088 L1330.39 682.088 L1329.83 682.088 L1329.27 682.088 L1328.71 682.088 L1328.15 682.088 L1327.59 682.088 L1327.03 682.088 L1326.47 682.088 L1325.92 682.088 L1325.36 682.088 L1324.8 682.088 L1324.24 682.088 L1323.68 682.088 L1323.12 682.088 L1322.56 682.088 L1322 682.088 L1321.44 682.088 L1320.88 682.088 L1320.32 682.088 L1319.76 682.088 L1319.2 682.088 L1318.65 682.088 L1318.09 682.088 L1317.53 682.088 L1316.97 682.088 L1316.41 682.088 L1315.85 682.088 L1315.29 682.088 L1314.73 682.088 L1314.17 682.088 L1313.61 682.088 L1313.05 682.088 L1312.49 682.088 L1311.93 682.088 L1311.38 682.088 L1310.82 682.088 L1310.26 682.088 L1309.7 682.088 L1309.14 682.088 L1308.58 682.088 L1308.02 682.088 L1307.46 682.088 L1306.9 682.088 L1306.34 682.088 L1305.78 682.088 L1305.22 682.088 L1304.66 682.088 L1304.1 682.088 L1303.55 682.088 L1302.99 682.088 L1302.43 682.088 L1301.87 682.088 L1301.31 682.088 L1300.75 682.088 L1300.19 682.088 L1299.63 682.088 L1299.07 682.088 L1298.51 682.088 L1297.95 682.088 L1297.39 682.088 L1296.83 682.088 L1296.28 682.088 L1295.72 682.088 L1295.16 682.088 L1294.6 682.088 L1294.04 682.088 L1293.48 682.088 L1292.92 682.088 L1292.36 682.088 L1291.8 682.088 L1291.24 682.088 L1290.68 682.088 L1290.12 682.088 L1289.56 682.088 L1289 682.088 L1288.45 682.088 L1287.89 682.088 L1287.33 682.088 L1286.77 682.088 L1286.21 682.088 L1285.65 682.088 L1285.09 682.088 L1284.53 682.088 L1283.97 682.088 L1283.41 682.088 L1282.85 682.088 L1282.29 682.088 L1281.73 682.088 L1281.18 682.088 L1280.62 682.088 L1280.06 682.088 L1279.5 682.088 L1278.94 682.088 L1278.38 682.088 L1277.82 682.088 L1277.26 682.088 L1276.7 682.088 L1276.14 682.088 L1275.58 682.088 L1275.02 682.088 L1274.46 682.088 L1273.91 682.088 L1273.35 682.088 L1272.79 682.088 L1272.23 682.088 L1271.67 682.088 L1271.11 682.088 L1270.55 682.088 L1269.99 682.088 L1269.43 682.088 L1268.87 682.088 L1268.31 682.088 L1267.75 682.088 L1267.19 682.088 L1266.63 682.088 L1266.08 682.088 L1265.52 682.088 L1264.96 682.088 L1264.4 682.088 L1263.84 682.088 L1263.28 682.088 L1262.72 682.088 L1262.16 682.088 L1261.6 682.088 L1261.04 682.088 L1260.48 682.088 L1259.92 682.088 L1259.36 682.088 L1258.81 682.088 L1258.25 682.088 L1257.69 682.088 L1257.13 682.088 L1256.57 682.088 L1256.01 682.088 L1255.45 682.088 L1254.89 682.088 L1254.33 682.088 L1253.77 682.088 L1253.21 682.088 L1252.65 682.088 L1252.09 682.088 L1251.54 682.088 L1250.98 682.088 L1250.42 682.088 L1249.86 682.088 L1249.3 682.088 L1248.74 682.088 L1248.18 682.088 L1247.62 682.088 L1247.06 682.088 L1246.5 682.088 L1245.94 682.088 L1245.38 682.088 L1244.82 682.088 L1244.26 682.088 L1243.71 682.088 L1243.15 682.088 L1242.59 682.088 L1242.03 682.088 L1241.47 682.088 L1240.91 682.088 L1240.35 682.088 L1239.79 682.088 L1239.23 682.088 L1238.67 682.088 L1238.11 682.088 L1237.55 682.088 L1236.99 682.088 L1236.44 682.088 L1235.88 682.088 L1235.32 682.088 L1234.76 682.088 L1234.2 682.088 L1233.64 682.088 L1233.08 682.088 L1232.52 682.088 L1231.96 682.088 L1231.4 682.088 L1230.84 682.088 L1230.28 682.088 L1229.72 682.088 L1229.17 682.088 L1228.61 682.088 L1228.05 682.088 L1227.49 682.088 L1226.93 682.088 L1226.37 682.088 L1225.81 682.088 L1225.25 682.088 L1224.69 682.088 L1224.13 682.088 L1223.57 682.088 L1223.01 682.088 L1222.45 682.088 L1221.89 682.088 L1221.34 682.088 L1220.78 682.088 L1220.22 682.088 L1219.66 682.088 L1219.1 682.088 L1218.54 682.088 L1217.98 682.088 L1217.42 682.088 L1216.86 682.088 L1216.3 682.088 L1215.74 682.088 L1215.18 682.088 L1214.62 682.088 L1214.07 682.088 L1213.51 682.088 L1212.95 682.088 L1212.39 682.088 L1211.83 682.088 L1211.27 682.088 L1210.71 682.088 L1210.15 682.088 L1209.59 682.088 L1209.03 682.088 L1208.47 682.088 L1207.91 682.088 L1207.35 682.088 L1206.8 682.088 L1206.24 682.088 L1205.68 682.088 L1205.12 682.088 L1204.56 682.088 L1204 682.088 L1203.44 682.088 L1202.88 682.088 L1202.32 682.088 L1201.76 682.088 L1201.2 682.088 L1200.64 682.088 L1200.08 682.088 L1199.52 682.088 L1198.97 682.088 L1198.41 682.088 L1197.85 682.088 L1197.29 682.088 L1196.73 682.088 L1196.17 682.088 L1195.61 682.088 L1195.05 682.088 L1194.49 682.088 L1193.93 682.088 L1193.37 682.088 L1192.81 682.088 L1192.25 682.088 L1191.7 682.088 L1191.14 682.088 L1190.58 682.088 L1190.02 682.088 L1189.46 682.088 L1188.9 682.088 L1188.34 682.088 L1187.78 682.088 L1187.22 682.088 L1186.66 682.088 L1186.1 682.088 L1185.54 682.088 L1184.98 682.088 L1184.43 682.088 L1183.87 682.088 L1183.31 682.088 L1182.75 682.088 L1182.19 682.088 L1181.63 682.088 L1181.07 682.088 L1180.51 682.088 L1179.95 682.088 L1179.39 682.088 L1178.83 682.088 L1178.27 682.088 L1177.71 682.088 L1177.15 682.088 L1176.6 682.088 L1176.04 682.088 L1175.48 682.088 L1174.92 682.088 L1174.36 682.088 L1173.8 682.088 L1173.24 682.088 L1172.68 682.088 L1172.12 682.088 L1171.56 682.088 L1171 682.088 L1170.44 682.088 L1169.88 682.088 L1169.33 682.088 L1168.77 682.088 L1168.21 682.088 L1167.65 682.088 L1167.09 682.088 L1166.53 682.088 L1165.97 682.088 L1165.41 682.088 L1164.85 682.088 L1164.29 682.088 L1163.73 682.088 L1163.17 682.088 L1162.61 682.088 L1162.05 682.088 L1161.5 682.088 L1160.94 682.088 L1160.38 682.088 L1159.82 682.088 L1159.26 682.088 L1158.7 682.088 L1158.14 682.088 L1157.58 682.088 L1157.02 682.088 L1156.46 682.088 L1155.9 682.088 L1155.34 682.088 L1154.78 682.088 L1154.23 682.088 L1153.67 682.088 L1153.11 682.088 L1152.55 682.088 L1151.99 682.088 L1151.43 682.088 L1150.87 682.088 L1150.31 682.088 L1149.75 682.088 L1149.19 682.088 L1148.63 682.088 L1148.07 682.088 L1147.51 682.088 L1146.96 682.088 L1146.4 682.088 L1145.84 682.088 L1145.28 682.088 L1144.72 682.088 L1144.16 682.088 L1143.6 682.088 L1143.04 682.088 L1142.48 682.088 L1141.92 682.088 L1141.36 682.088 L1140.8 682.088 L1140.24 682.088 L1139.68 682.088 L1139.13 682.088 L1138.57 682.088 L1138.01 682.088 L1137.45 682.088 L1136.89 682.088 L1136.33 682.088 L1135.77 682.088 L1135.21 682.088 L1134.65 682.088 L1134.09 682.088 L1133.53 682.088 L1132.97 682.088 L1132.41 682.088 L1131.86 682.088 L1131.3 682.088 L1130.74 682.088 L1130.18 682.088 L1129.62 682.088 L1129.06 682.088 L1128.5 682.088 L1127.94 682.088 L1127.38 682.088 L1126.82 682.088 L1126.26 682.088 L1125.7 682.088 L1125.14 682.088 L1124.59 682.088 L1124.03 682.088 L1123.47 682.088 L1122.91 682.088 L1122.35 682.088 L1121.79 682.088 L1121.23 682.088 L1120.67 682.088 L1120.11 682.088 L1119.55 682.088 L1118.99 682.088 L1118.43 682.088 L1117.87 682.088 L1117.31 682.088 L1116.76 682.088 L1116.2 682.088 L1115.64 682.088 L1115.08 682.088 L1114.52 682.088 L1113.96 682.088 L1113.4 682.088 L1112.84 682.088 L1112.28 682.088 L1111.72 682.088 L1111.16 682.088 L1110.6 682.088 L1110.04 682.088 L1109.49 682.088 L1108.93 682.088 L1108.37 682.088 L1107.81 682.088 L1107.25 682.088 L1106.69 682.088 L1106.13 682.088 L1105.57 682.088 L1105.01 682.088 L1104.45 682.088 L1103.89 682.088 L1103.33 682.088 L1102.77 682.088 L1102.22 682.088 L1101.66 682.088 L1101.1 682.088 L1100.54 682.088 L1099.98 682.088 L1099.42 682.088 L1098.86 682.088 L1098.3 682.088 L1097.74 682.088 L1097.18 682.088 L1096.62 682.088 L1096.06 682.088 L1095.5 682.088 L1094.94 682.088 L1094.39 682.088 L1093.83 682.088 L1093.27 682.088 L1092.71 682.088 L1092.15 682.088 L1091.59 682.088 L1091.03 682.088 L1090.47 682.088 L1089.91 682.088 L1089.35 682.088 L1088.79 682.088 L1088.23 682.088 L1087.67 682.088 L1087.12 682.088 L1086.56 682.088 L1086 682.088 L1085.44 682.088 L1084.88 682.088 L1084.32 682.088 L1083.76 682.088 L1083.2 682.088 L1082.64 682.088 L1082.08 682.088 L1081.52 682.088 L1080.96 682.088 L1080.4 682.088 L1079.85 682.088 L1079.29 682.088 L1078.73 682.088 L1078.17 682.088 L1077.61 682.088 L1077.05 682.088 L1076.49 682.088 L1075.93 682.088 L1075.37 682.088 L1074.81 682.088 L1074.25 682.088 L1073.69 682.088 L1073.13 682.088 L1072.57 682.088 L1072.02 682.088 L1071.46 682.088 L1070.9 682.088 L1070.34 682.088 L1069.78 682.088 L1069.22 682.088 L1068.66 682.088 L1068.1 682.088 L1067.54 682.088 L1066.98 682.088 L1066.42 682.088 L1065.86 682.088 L1065.3 682.088 L1064.75 682.088 L1064.19 682.088 L1063.63 682.088 L1063.07 682.088 L1062.51 682.088 L1061.95 682.088 L1061.39 682.088 L1060.83 682.088 L1060.27 682.088 L1059.71 682.088 L1059.15 682.088 L1058.59 682.088 L1058.03 682.088 L1057.48 682.088 L1056.92 682.088 L1056.36 682.088 L1055.8 682.088 L1055.24 682.088 L1054.68 682.088 L1054.12 682.088 L1053.56 682.088 L1053 682.088 L1052.44 682.088 L1051.88 682.088 L1051.32 682.088 L1050.76 682.088 L1050.2 682.088 L1049.65 682.088 L1049.09 682.088 L1048.53 682.088 L1047.97 682.088 L1047.41 682.088 L1046.85 682.088 L1046.29 682.088 L1045.73 682.088 L1045.17 682.088 L1044.61 682.088 L1044.05 682.088 L1043.49 682.088 L1042.93 682.088 L1042.38 682.088 L1041.82 682.088 L1041.26 682.088 L1040.7 682.088 L1040.14 682.088 L1039.58 682.088 L1039.02 682.088 L1038.46 682.088 L1037.9 682.088 L1037.34 682.088 L1036.78 682.088 L1036.22 682.088 L1035.66 682.088 L1035.1 682.088 L1034.55 682.088 L1033.99 682.088 L1033.43 682.088 L1032.87 682.088 L1032.31 682.088 L1031.75 682.088 L1031.19 682.088 L1030.63 682.088 L1030.07 682.088 L1029.51 682.088 L1028.95 682.088 L1028.39 682.088 L1027.83 682.088 L1027.28 682.088 L1026.72 682.088 L1026.16 682.088 L1025.6 682.088 L1025.04 682.088 L1024.48 682.088 L1023.92 682.088 L1023.36 682.088 L1022.8 682.088 L1022.24 682.088 L1021.68 682.088 L1021.12 682.088 L1020.56 682.088 L1020.01 682.088 L1019.45 682.088 L1018.89 682.088 L1018.33 682.088 L1017.77 682.088 L1017.21 682.088 L1016.65 682.088 L1016.09 682.088 L1015.53 682.088 L1014.97 682.088 L1014.41 682.088 L1013.85 682.088 L1013.29 682.088 L1012.73 682.088 L1012.18 682.088 L1011.62 682.088 L1011.06 682.088 L1010.5 682.088 L1009.94 682.088 L1009.38 682.088 L1008.82 682.088 L1008.26 682.088 L1007.7 682.088 L1007.14 682.088 L1006.58 682.088 L1006.02 682.088 L1005.46 682.088 L1004.91 682.088 L1004.35 682.088 L1003.79 682.088 L1003.23 682.088 L1002.67 682.088 L1002.11 682.088 L1001.55 682.088 L1000.99 682.088 L1000.43 682.088 L999.872 682.088 L999.313 682.088 L998.754 682.088 L998.194 682.088 L997.635 682.088 L997.076 682.088 L996.517 682.088 L995.957 682.088 L995.398 682.088 L994.839 682.088 L994.28 682.088 L993.72 682.088 L993.161 682.088 L992.602 682.088 L992.043 682.088 L991.483 682.088 L990.924 682.088 L990.365 682.088 L989.806 682.088 L989.246 682.088 L988.687 682.088 L988.128 682.088 L987.569 682.088 L987.009 682.088 L986.45 682.088 L985.891 682.088 L985.332 682.088 L984.772 682.088 L984.213 682.088 L983.654 682.088 L983.095 682.088 L982.535 682.088 L981.976 682.088 L981.417 682.088 L980.858 682.088 L980.298 682.088 L979.739 682.088 L979.18 682.088 L978.621 682.088 L978.061 682.088 L977.502 682.088 L976.943 682.088 L976.384 682.088 L975.824 682.088 L975.265 682.088 L974.706 682.088 L974.147 682.088 L973.587 682.088 L973.028 682.088 L972.469 682.088 L971.91 682.088 L971.35 682.088 L970.791 682.088 L970.232 682.088 L969.673 682.088 L969.113 682.088 L968.554 682.088 L967.995 682.088 L967.436 682.088 L966.876 682.088 L966.317 682.088 L965.758 682.088 L965.199 682.088 L964.639 682.088 L964.08 682.088 L963.521 682.088 L962.962 682.088 L962.402 682.088 L961.843 682.088 L961.284 682.088 L960.725 682.088 L960.165 682.088 L959.606 682.088 L959.047 682.088 L958.488 682.088 L957.928 682.088 L957.369 682.088 L956.81 682.088 L956.251 682.088 L955.691 682.088 L955.132 682.088 L954.573 682.088 L954.014 682.088 L953.454 682.088 L952.895 682.088 L952.336 682.088 L951.777 682.088 L951.217 682.088 L950.658 682.088 L950.099 682.088 L949.54 682.088 L948.98 682.088 L948.421 682.088 L947.862 682.088 L947.303 682.088 L946.743 682.088 L946.184 682.088 L945.625 682.088 L945.066 682.088 L944.506 682.088 L943.947 682.088 L943.388 682.088 L942.829 682.088 L942.269 682.088 L941.71 682.088 L941.151 682.088 L940.592 682.088 L940.032 682.088 L939.473 682.088 L938.914 682.088 L938.355 682.088 L937.795 682.088 L937.236 682.088 L936.677 682.088 L936.118 682.088 L935.558 682.088 L934.999 682.088 L934.44 682.088 L933.881 682.088 L933.321 682.088 L932.762 682.088 L932.203 682.088 L931.644 682.088 L931.084 682.088 L930.525 682.088 L929.966 682.088 L929.406 682.088 L928.847 682.088 L928.288 682.088 L927.729 682.088 L927.169 682.088 L926.61 682.088 L926.051 682.088 L925.492 682.088 L924.932 682.088 L924.373 682.088 L923.814 682.088 L923.255 682.088 L922.695 682.088 L922.136 682.088 L921.577 682.088 L921.018 682.088 L920.458 682.088 L919.899 682.088 L919.34 682.088 L918.781 682.088 L918.221 682.088 L917.662 682.088 L917.103 682.088 L916.544 682.088 L915.984 682.088 L915.425 682.088 L914.866 682.088 L914.307 682.088 L913.747 682.088 L913.188 682.088 L912.629 682.088 L912.07 682.088 L911.51 682.088 L910.951 682.088 L910.392 682.088 L909.833 682.088 L909.273 682.088 L908.714 682.088 L908.155 682.088 L907.596 682.088 L907.036 682.088 L906.477 682.088 L905.918 682.088 L905.359 682.088 L904.799 682.088 L904.24 682.088 L903.681 682.088 L903.122 682.088 L902.562 682.088 L902.003 682.088 L901.444 682.088 L900.885 682.088 L900.325 682.088 L899.766 682.088 L899.207 682.088 L898.648 682.088 L898.088 682.088 L897.529 682.088 L896.97 682.088 L896.411 682.088 L895.851 682.088 L895.292 682.088 L894.733 682.088 L894.174 682.088 L893.614 682.088 L893.055 682.088 L892.496 682.088 L891.937 682.088 L891.377 682.088 L890.818 682.088 L890.259 682.088 L889.7 682.088 L889.14 682.088 L888.581 682.088 L888.022 682.088 L887.463 682.088 L886.903 682.088 L886.344 682.088 L885.785 682.088 L885.226 682.088 L884.666 682.088 L884.107 682.088 L883.548 682.088 L882.989 682.088 L882.429 682.088 L881.87 682.088 L881.311 682.088 L880.752 682.088 L880.192 682.088 L879.633 682.088 L879.074 682.088 L878.515 682.088 L877.955 682.088 L877.396 682.088 L876.837 682.088 L876.278 682.088 L875.718 682.088 L875.159 682.088 L874.6 682.088 L874.041 682.088 L873.481 682.088 L872.922 682.088 L872.363 682.088 L871.804 682.088 L871.244 682.088 L870.685 682.088 L870.126 682.088 L869.567 682.088 L869.007 682.088 L868.448 682.088 L867.889 682.088 L867.33 682.088 L866.77 682.088 L866.211 682.088 L865.652 682.088 L865.093 682.088 L864.533 682.088 L863.974 682.088 L863.415 682.088 L862.856 682.088 L862.296 682.088 L861.737 682.088 L861.178 682.088 L860.619 682.088 L860.059 682.088 L859.5 682.088 L858.941 682.088 L858.382 682.088 L857.822 682.088 L857.263 682.088 L856.704 682.088 L856.145 682.088 L855.585 682.088 L855.026 682.088 L854.467 682.088 L853.908 682.088 L853.348 682.088 L852.789 682.088 L852.23 682.088 L851.671 682.088 L851.111 682.088 L850.552 682.088 L849.993 682.088 L849.434 682.088 L848.874 682.088 L848.315 682.088 L847.756 682.088 L847.197 682.088 L846.637 682.088 L846.078 682.088 L845.519 682.088 L844.96 682.088 L844.4 682.088 L843.841 682.088 L843.282 682.088 L842.723 682.088 L842.163 682.088 L841.604 682.088 L841.045 682.088 L840.486 682.088 L839.926 682.088 L839.367 682.088 L838.808 682.088 L838.249 682.088 L837.689 682.088 L837.13 682.088 L836.571 682.088 L836.012 682.088 L835.452 682.088 L834.893 682.088 L834.334 682.088 L833.775 682.088 L833.215 682.088 L832.656 682.088 L832.097 682.088 L831.538 682.088 L830.978 682.088 L830.419 682.088 L829.86 682.088 L829.301 682.088 L828.741 682.088 L828.182 682.088 L827.623 682.088 L827.064 682.088 L826.504 682.088 L825.945 682.088 L825.386 682.088 L824.827 682.088 L824.267 682.088 L823.708 682.088 L823.149 682.088 L822.59 682.088 L822.03 682.088 L821.471 682.088 L820.912 682.088 L820.353 682.088 L819.793 682.088 L819.234 682.088 L818.675 682.088 L818.116 682.088 L817.556 682.088 L816.997 682.088 L816.438 682.088 L815.879 682.088 L815.319 682.088 L814.76 682.088 L814.201 682.088 L813.642 682.088 L813.082 682.088 L812.523 682.088 L811.964 682.088 L811.405 682.088 L810.845 682.088 L810.286 682.088 L809.727 682.088 L809.168 682.088 L808.608 682.088 L808.049 682.088 L807.49 682.088 L806.931 682.088 L806.371 682.088 L805.812 682.088 L805.253 682.088 L804.693 682.088 L804.134 682.088 L803.575 682.088 L803.016 682.088 L802.456 682.088 L801.897 682.088 L801.338 682.088 L800.779 682.088 L800.219 682.088 L799.66 682.088 L799.101 682.088 L798.542 682.088 L797.982 682.088 L797.423 682.088 L796.864 682.088 L796.305 682.088 L795.745 682.088 L795.186 682.088 L794.627 682.088 L794.068 682.088 L793.508 682.088 L792.949 682.088 L792.39 682.088 L791.831 682.088 L791.271 682.088 L790.712 682.088 L790.153 682.088 L789.594 682.088 L789.034 682.088 L788.475 682.088 L787.916 682.088 L787.357 682.088 L786.797 682.088 L786.238 682.088 L785.679 682.088 L785.12 682.088 L784.56 682.088 L784.001 682.088 L783.442 682.088 L782.883 682.088 L782.323 682.088 L781.764 682.088 L781.205 682.088 L780.646 682.088 L780.086 682.088 L779.527 682.088 L778.968 682.088 L778.409 682.088 L777.849 682.088 L777.29 682.088 L776.731 682.088 L776.172 682.088 L775.612 682.088 L775.053 682.088 L774.494 682.088 L773.935 682.088 L773.375 682.088 L772.816 682.088 L772.257 682.088 L771.698 682.088 L771.138 682.088 L770.579 682.088 L770.02 682.088 L769.461 682.088 L768.901 682.088 L768.342 682.088 L767.783 682.088 L767.224 682.088 L766.664 682.088 L766.105 682.088 L765.546 682.088 L764.987 682.088 L764.427 682.088 L763.868 682.088 L763.309 682.088 L762.75 682.088 L762.19 682.088 L761.631 682.088 L761.072 682.088 L760.513 682.088 L759.953 682.088 L759.394 682.088 L758.835 682.088 L758.276 682.088 L757.716 682.088 L757.157 682.088 L756.598 682.088 L756.039 682.088 L755.479 682.088 L754.92 682.088 L754.361 682.088 L753.802 682.088 L753.242 682.088 L752.683 682.088 L752.124 682.088 L751.565 682.088 L751.005 682.088 L750.446 682.088 L749.887 682.088 L749.328 682.088 L748.768 682.088 L748.209 682.088 L747.65 682.088 L747.091 682.088 L746.531 682.088 L745.972 682.088 L745.413 682.088 L744.854 682.088 L744.294 682.088 L743.735 682.088 L743.176 682.088 L742.617 682.088 L742.057 682.088 L741.498 682.088 L740.939 682.088 L740.38 682.088 L739.82 682.088 L739.261 682.088 L738.702 682.088 L738.143 682.088 L737.583 682.088 L737.024 682.088 L736.465 682.088 L735.906 682.088 L735.346 682.088 L734.787 682.088 L734.228 682.088 L733.669 682.088 L733.109 682.088 L732.55 682.088 L731.991 682.088 L731.432 682.088 L730.872 682.088 L730.313 682.088 L729.754 682.088 L729.195 682.088 L728.635 682.088 L728.076 682.088 L727.517 682.088 L726.958 682.088 L726.398 682.088 L725.839 682.088 L725.28 682.088 L724.721 682.088 L724.161 682.088 L723.602 682.088 L723.043 682.088 L722.484 682.088 L721.924 682.088 L721.365 682.088 L720.806 682.088 L720.247 682.088  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip623)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.024 720.806,683.024 721.365,683.024 721.924,683.024 722.484,683.024 723.043,683.024 723.602,683.024 724.161,683.024 724.721,683.024 725.28,683.024 725.839,683.024 726.398,683.024 726.958,683.024 727.517,683.024 728.076,683.024 728.635,683.024 729.195,683.024 729.754,683.024 730.313,683.024 730.872,683.024 731.432,683.024 731.991,683.024 732.55,683.024 733.109,683.024 733.669,683.024 734.228,683.024 734.787,683.024 735.346,683.024 735.906,683.024 736.465,683.024 737.024,683.024 737.583,683.024 738.143,683.024 738.702,683.024 739.261,683.024 739.82,683.024 740.38,683.024 740.939,683.024 741.498,683.024 742.057,683.024 742.617,683.024 743.176,683.024 743.735,683.024 744.294,683.024 744.854,683.024 745.413,683.024 745.972,683.024 746.531,683.024 747.091,683.024 747.65,683.024 748.209,683.024 748.768,683.024 749.328,683.024 749.887,683.024 750.446,683.024 751.005,683.024 751.565,683.024 752.124,683.024 752.683,683.024 753.242,683.024 753.802,683.024 754.361,683.024 754.92,683.024 755.479,683.024 756.039,683.024 756.598,683.024 757.157,683.024 757.716,683.024 758.276,683.024 758.835,683.024 759.394,683.024 759.953,683.024 760.513,683.024 761.072,683.024 761.631,683.024 762.19,683.024 762.75,683.024 763.309,683.024 763.868,683.024 764.427,683.024 764.987,683.024 765.546,683.024 766.105,683.024 766.664,683.024 767.224,683.024 767.783,683.024 768.342,683.024 768.901,683.024 769.461,683.024 770.02,683.024 770.579,683.024 771.138,683.024 771.698,683.024 772.257,683.024 772.816,683.024 773.375,683.024 773.935,683.024 774.494,683.024 775.053,683.024 775.612,683.024 776.172,683.024 776.731,683.024 777.29,683.024 777.849,683.024 778.409,683.024 778.968,683.024 779.527,683.024 780.086,683.024 780.646,683.024 781.205,683.024 781.764,683.024 782.323,683.024 782.883,683.024 783.442,683.024 784.001,683.024 784.56,683.024 785.12,683.024 785.679,683.024 786.238,683.024 786.797,683.024 787.357,683.024 787.916,683.024 788.475,683.024 789.034,683.024 789.594,683.024 790.153,683.024 790.712,683.024 791.271,683.024 791.831,683.024 792.39,683.024 792.949,683.024 793.508,683.024 794.068,683.024 794.627,683.024 795.186,683.024 795.745,683.024 796.305,683.024 796.864,683.024 797.423,683.024 797.982,683.024 798.542,683.024 799.101,683.024 799.66,683.024 800.219,683.024 800.779,683.024 801.338,683.024 801.897,683.024 802.456,683.024 803.016,683.024 803.575,683.024 804.134,683.024 804.693,683.024 805.253,683.024 805.812,683.024 806.371,683.024 806.931,683.024 807.49,683.024 808.049,683.024 808.608,683.024 809.168,683.024 809.727,683.024 810.286,683.024 810.845,683.024 811.405,683.024 811.964,683.024 812.523,683.024 813.082,683.024 813.642,683.024 814.201,683.024 814.76,683.024 815.319,683.024 815.879,683.024 816.438,683.024 816.997,683.024 817.556,683.024 818.116,683.024 818.675,683.024 819.234,683.024 819.793,683.024 820.353,683.024 820.912,683.024 821.471,683.024 822.03,683.024 822.59,683.024 823.149,683.024 823.708,683.024 824.267,683.024 824.827,683.024 825.386,683.024 825.945,683.024 826.504,683.024 827.064,683.024 827.623,683.024 828.182,683.024 828.741,683.024 829.301,683.024 829.86,683.024 830.419,683.024 830.978,683.024 831.538,683.024 832.097,683.024 832.656,683.024 833.215,683.024 833.775,683.024 834.334,683.024 834.893,683.024 835.452,683.024 836.012,683.024 836.571,683.024 837.13,683.024 837.689,683.024 838.249,683.024 838.808,683.024 839.367,683.024 839.926,683.024 840.486,683.024 841.045,683.024 841.604,683.024 842.163,683.024 842.723,683.024 843.282,683.024 843.841,683.024 844.4,683.024 844.96,683.024 845.519,683.024 846.078,683.024 846.637,683.024 847.197,683.024 847.756,683.024 848.315,683.024 848.874,683.024 849.434,683.024 849.993,683.024 850.552,683.024 851.111,683.024 851.671,683.024 852.23,683.024 852.789,683.024 853.348,683.024 853.908,683.024 854.467,683.024 855.026,683.024 855.585,683.024 856.145,683.024 856.704,683.024 857.263,683.024 857.822,683.024 858.382,683.024 858.941,683.024 859.5,683.024 860.059,683.024 860.619,683.024 861.178,683.024 861.737,683.024 862.296,683.024 862.856,683.024 863.415,683.024 863.974,683.024 864.533,683.024 865.093,683.024 865.652,683.024 866.211,683.024 866.77,683.024 867.33,683.024 867.889,683.024 868.448,683.024 869.007,683.024 869.567,683.024 870.126,683.024 870.685,683.024 871.244,683.024 871.804,683.024 872.363,683.024 872.922,683.024 873.481,683.024 874.041,683.024 874.6,683.024 875.159,683.024 875.718,683.024 876.278,683.024 876.837,683.024 877.396,683.024 877.955,683.024 878.515,683.024 879.074,683.024 879.633,683.024 880.192,683.024 880.752,683.024 881.311,683.024 881.87,683.024 882.429,683.024 882.989,683.024 883.548,683.024 884.107,683.024 884.666,683.024 885.226,683.024 885.785,683.024 886.344,683.024 886.903,683.024 887.463,683.024 888.022,683.024 888.581,683.024 889.14,683.024 889.7,683.024 890.259,683.024 890.818,683.024 891.377,683.024 891.937,683.024 892.496,683.024 893.055,683.024 893.614,683.024 894.174,683.024 894.733,683.024 895.292,683.024 895.851,683.024 896.411,683.024 896.97,683.024 897.529,683.024 898.088,683.024 898.648,683.024 899.207,683.024 899.766,683.024 900.325,683.024 900.885,683.024 901.444,683.024 902.003,683.024 902.562,683.024 903.122,683.024 903.681,683.024 904.24,683.024 904.799,683.024 905.359,683.024 905.918,683.024 906.477,683.024 907.036,683.024 907.596,683.024 908.155,683.024 908.714,683.024 909.273,683.024 909.833,683.024 910.392,683.024 910.951,683.024 911.51,683.024 912.07,683.024 912.629,683.024 913.188,683.024 913.747,683.024 914.307,683.024 914.866,683.024 915.425,683.024 915.984,683.024 916.544,683.024 917.103,683.024 917.662,683.024 918.221,683.024 918.781,683.024 919.34,683.024 919.899,683.024 920.458,683.024 921.018,683.024 921.577,683.024 922.136,683.024 922.695,683.024 923.255,683.024 923.814,683.024 924.373,683.024 924.932,683.024 925.492,683.024 926.051,683.024 926.61,683.024 927.169,683.024 927.729,683.024 928.288,683.024 928.847,683.024 929.406,683.024 929.966,683.024 930.525,683.024 931.084,683.024 931.644,683.024 932.203,683.024 932.762,683.024 933.321,683.024 933.881,683.024 934.44,683.024 934.999,683.024 935.558,683.024 936.118,683.024 936.677,683.024 937.236,683.024 937.795,683.024 938.355,683.024 938.914,683.024 939.473,683.024 940.032,683.024 940.592,683.024 941.151,683.024 941.71,683.024 942.269,683.024 942.829,683.024 943.388,683.024 943.947,683.024 944.506,683.024 945.066,683.024 945.625,683.024 946.184,683.024 946.743,683.024 947.303,683.024 947.862,683.024 948.421,683.024 948.98,683.024 949.54,683.024 950.099,683.024 950.658,683.024 951.217,683.024 951.777,683.024 952.336,683.024 952.895,683.024 953.454,683.024 954.014,683.024 954.573,683.024 955.132,683.024 955.691,683.024 956.251,683.024 956.81,683.024 957.369,683.024 957.928,683.024 958.488,683.024 959.047,683.024 959.606,683.024 960.165,683.024 960.725,683.024 961.284,683.024 961.843,683.024 962.402,683.024 962.962,683.024 963.521,683.024 964.08,683.024 964.639,683.024 965.199,683.024 965.758,683.024 966.317,683.024 966.876,683.024 967.436,683.024 967.995,683.024 968.554,683.024 969.113,683.024 969.673,683.024 970.232,683.024 970.791,683.024 971.35,683.024 971.91,683.024 972.469,683.024 973.028,683.024 973.587,683.024 974.147,683.024 974.706,683.024 975.265,683.024 975.824,683.024 976.384,683.024 976.943,683.024 977.502,683.024 978.061,683.024 978.621,683.024 979.18,683.024 979.739,683.024 980.298,683.024 980.858,683.024 981.417,683.024 981.976,683.024 982.535,683.024 983.095,683.024 983.654,683.024 984.213,683.024 984.772,683.024 985.332,683.024 985.891,683.024 986.45,683.024 987.009,683.024 987.569,683.024 988.128,683.024 988.687,683.024 989.246,683.024 989.806,683.024 990.365,683.024 990.924,683.024 991.483,683.024 992.043,683.024 992.602,683.024 993.161,683.024 993.72,683.024 994.28,683.024 994.839,683.024 995.398,683.024 995.957,683.024 996.517,683.024 997.076,683.024 997.635,683.024 998.194,683.024 998.754,683.024 999.313,683.024 999.872,683.024 1000.43,683.024 1000.99,683.024 1001.55,683.024 1002.11,683.024 1002.67,683.024 1003.23,683.024 1003.79,683.024 1004.35,683.024 1004.91,683.024 1005.46,683.024 1006.02,683.024 1006.58,683.024 1007.14,683.024 1007.7,683.024 1008.26,683.024 1008.82,683.024 1009.38,683.024 1009.94,683.024 1010.5,683.024 1011.06,683.024 1011.62,683.024 1012.18,683.024 1012.73,683.024 1013.29,683.024 1013.85,683.024 1014.41,683.024 1014.97,683.024 1015.53,683.024 1016.09,683.024 1016.65,683.024 1017.21,683.024 1017.77,683.024 1018.33,683.024 1018.89,683.024 1019.45,683.024 1020.01,683.024 1020.56,683.024 1021.12,683.024 1021.68,683.024 1022.24,683.024 1022.8,683.024 1023.36,683.024 1023.92,683.024 1024.48,683.024 1025.04,683.024 1025.6,683.024 1026.16,683.024 1026.72,683.024 1027.28,683.024 1027.83,683.024 1028.39,683.024 1028.95,683.024 1029.51,683.024 1030.07,683.024 1030.63,683.024 1031.19,683.024 1031.75,683.024 1032.31,683.024 1032.87,683.024 1033.43,683.024 1033.99,683.024 1034.55,683.024 1035.1,683.024 1035.66,683.024 1036.22,683.024 1036.78,683.024 1037.34,683.024 1037.9,683.024 1038.46,683.024 1039.02,683.024 1039.58,683.024 1040.14,683.024 1040.7,683.024 1041.26,683.024 1041.82,683.024 1042.38,683.024 1042.93,683.024 1043.49,683.024 1044.05,683.024 1044.61,683.024 1045.17,683.024 1045.73,683.024 1046.29,683.024 1046.85,683.024 1047.41,683.024 1047.97,683.024 1048.53,683.024 1049.09,683.024 1049.65,683.024 1050.2,683.024 1050.76,683.024 1051.32,683.024 1051.88,683.024 1052.44,683.024 1053,683.024 1053.56,683.024 1054.12,683.024 1054.68,683.024 1055.24,683.024 1055.8,683.024 1056.36,683.024 1056.92,683.024 1057.48,683.024 1058.03,683.024 1058.59,683.024 1059.15,683.024 1059.71,683.024 1060.27,683.024 1060.83,683.024 1061.39,683.024 1061.95,683.024 1062.51,683.024 1063.07,683.024 1063.63,683.024 1064.19,683.024 1064.75,683.024 1065.3,683.024 1065.86,683.024 1066.42,683.024 1066.98,683.024 1067.54,683.024 1068.1,683.024 1068.66,683.024 1069.22,683.024 1069.78,683.024 1070.34,683.024 1070.9,683.024 1071.46,683.024 1072.02,683.024 1072.57,683.024 1073.13,683.024 1073.69,683.024 1074.25,683.024 1074.81,683.024 1075.37,683.024 1075.93,683.024 1076.49,683.024 1077.05,683.024 1077.61,683.024 1078.17,683.024 1078.73,683.024 1079.29,683.024 1079.85,683.024 1080.4,683.024 1080.96,683.024 1081.52,683.024 1082.08,683.024 1082.64,683.024 1083.2,683.024 1083.76,683.024 1084.32,683.024 1084.88,683.024 1085.44,683.024 1086,683.024 1086.56,683.024 1087.12,683.024 1087.67,683.024 1088.23,683.024 1088.79,683.024 1089.35,683.024 1089.91,683.024 1090.47,683.024 1091.03,683.024 1091.59,683.024 1092.15,683.024 1092.71,683.024 1093.27,683.024 1093.83,683.024 1094.39,683.024 1094.94,683.024 1095.5,683.024 1096.06,683.024 1096.62,683.024 1097.18,683.024 1097.74,683.024 1098.3,683.024 1098.86,683.024 1099.42,683.024 1099.98,683.024 1100.54,683.024 1101.1,683.024 1101.66,683.024 1102.22,683.024 1102.77,683.024 1103.33,683.024 1103.89,683.024 1104.45,683.024 1105.01,683.024 1105.57,683.024 1106.13,683.024 1106.69,683.024 1107.25,683.024 1107.81,683.024 1108.37,683.024 1108.93,683.024 1109.49,683.024 1110.04,683.024 1110.6,683.024 1111.16,683.024 1111.72,683.024 1112.28,683.024 1112.84,683.024 1113.4,683.024 1113.96,683.024 1114.52,683.024 1115.08,683.024 1115.64,683.024 1116.2,683.024 1116.76,683.024 1117.31,683.024 1117.87,683.024 1118.43,683.024 1118.99,683.024 1119.55,683.024 1120.11,683.024 1120.67,683.024 1121.23,683.024 1121.79,683.024 1122.35,683.024 1122.91,683.024 1123.47,683.024 1124.03,683.024 1124.59,683.024 1125.14,683.024 1125.7,683.024 1126.26,683.024 1126.82,683.024 1127.38,683.024 1127.94,683.024 1128.5,683.024 1129.06,683.024 1129.62,683.024 1130.18,683.024 1130.74,683.024 1131.3,683.024 1131.86,683.024 1132.41,683.024 1132.97,683.024 1133.53,683.024 1134.09,683.024 1134.65,683.024 1135.21,683.024 1135.77,683.024 1136.33,683.024 1136.89,683.024 1137.45,683.024 1138.01,683.024 1138.57,683.024 1139.13,683.024 1139.68,683.024 1140.24,683.024 1140.8,683.024 1141.36,683.024 1141.92,683.024 1142.48,683.024 1143.04,683.024 1143.6,683.024 1144.16,683.024 1144.72,683.024 1145.28,683.024 1145.84,683.024 1146.4,683.024 1146.96,683.024 1147.51,683.024 1148.07,683.024 1148.63,683.024 1149.19,683.024 1149.75,683.024 1150.31,683.024 1150.87,683.024 1151.43,683.024 1151.99,683.024 1152.55,683.024 1153.11,683.024 1153.67,683.024 1154.23,683.024 1154.78,683.024 1155.34,683.024 1155.9,683.024 1156.46,683.024 1157.02,683.024 1157.58,683.024 1158.14,683.024 1158.7,683.024 1159.26,683.024 1159.82,683.024 1160.38,683.024 1160.94,683.024 1161.5,683.024 1162.05,683.024 1162.61,683.024 1163.17,683.024 1163.73,683.024 1164.29,683.024 1164.85,683.024 1165.41,683.024 1165.97,683.024 1166.53,683.024 1167.09,683.024 1167.65,683.024 1168.21,683.024 1168.77,683.024 1169.33,683.024 1169.88,683.024 1170.44,683.024 1171,683.024 1171.56,683.024 1172.12,683.024 1172.68,683.024 1173.24,683.024 1173.8,683.024 1174.36,683.024 1174.92,683.024 1175.48,683.024 1176.04,683.024 1176.6,683.024 1177.15,683.024 1177.71,683.024 1178.27,683.024 1178.83,683.024 1179.39,683.024 1179.95,683.024 1180.51,683.024 1181.07,683.024 1181.63,683.024 1182.19,683.024 1182.75,683.024 1183.31,683.024 1183.87,683.024 1184.43,683.024 1184.98,683.024 1185.54,683.024 1186.1,683.024 1186.66,683.024 1187.22,683.024 1187.78,683.024 1188.34,683.024 1188.9,683.024 1189.46,683.024 1190.02,683.024 1190.58,683.024 1191.14,683.024 1191.7,683.024 1192.25,683.024 1192.81,683.024 1193.37,683.024 1193.93,683.024 1194.49,683.024 1195.05,683.024 1195.61,683.024 1196.17,683.024 1196.73,683.024 1197.29,683.024 1197.85,683.024 1198.41,683.024 1198.97,683.024 1199.52,683.024 1200.08,683.024 1200.64,683.024 1201.2,683.024 1201.76,683.024 1202.32,683.024 1202.88,683.024 1203.44,683.024 1204,683.024 1204.56,683.024 1205.12,683.024 1205.68,683.024 1206.24,683.024 1206.8,683.024 1207.35,683.024 1207.91,683.024 1208.47,683.024 1209.03,683.024 1209.59,683.024 1210.15,683.024 1210.71,683.024 1211.27,683.024 1211.83,683.024 1212.39,683.024 1212.95,683.024 1213.51,683.024 1214.07,683.024 1214.62,683.024 1215.18,683.024 1215.74,683.024 1216.3,683.024 1216.86,683.024 1217.42,683.024 1217.98,683.024 1218.54,683.024 1219.1,683.024 1219.66,683.024 1220.22,683.024 1220.78,683.024 1221.34,683.024 1221.89,683.024 1222.45,683.024 1223.01,683.024 1223.57,683.024 1224.13,683.024 1224.69,683.024 1225.25,683.024 1225.81,683.024 1226.37,683.024 1226.93,683.024 1227.49,683.024 1228.05,683.024 1228.61,683.024 1229.17,683.024 1229.72,683.024 1230.28,683.024 1230.84,683.024 1231.4,683.024 1231.96,683.024 1232.52,683.024 1233.08,683.024 1233.64,683.024 1234.2,683.024 1234.76,683.024 1235.32,683.024 1235.88,683.024 1236.44,683.024 1236.99,683.024 1237.55,683.024 1238.11,683.024 1238.67,683.024 1239.23,683.024 1239.79,683.024 1240.35,683.024 1240.91,683.024 1241.47,683.024 1242.03,683.024 1242.59,683.024 1243.15,683.024 1243.71,683.024 1244.26,683.024 1244.82,683.024 1245.38,683.024 1245.94,683.024 1246.5,683.024 1247.06,683.024 1247.62,683.024 1248.18,683.024 1248.74,683.024 1249.3,683.024 1249.86,683.024 1250.42,683.024 1250.98,683.024 1251.54,683.024 1252.09,683.024 1252.65,683.024 1253.21,683.024 1253.77,683.024 1254.33,683.024 1254.89,683.024 1255.45,683.024 1256.01,683.024 1256.57,683.024 1257.13,683.024 1257.69,683.024 1258.25,683.024 1258.81,683.024 1259.36,683.024 1259.92,683.024 1260.48,683.024 1261.04,683.024 1261.6,683.024 1262.16,683.024 1262.72,683.024 1263.28,683.024 1263.84,683.024 1264.4,683.024 1264.96,683.024 1265.52,683.024 1266.08,683.024 1266.63,683.024 1267.19,683.024 1267.75,683.024 1268.31,683.024 1268.87,683.024 1269.43,683.024 1269.99,683.024 1270.55,683.024 1271.11,683.024 1271.67,683.024 1272.23,683.024 1272.79,683.024 1273.35,683.024 1273.91,683.024 1274.46,683.024 1275.02,683.024 1275.58,683.024 1276.14,683.024 1276.7,683.024 1277.26,683.024 1277.82,683.024 1278.38,683.024 1278.94,683.024 1279.5,683.024 1280.06,683.024 1280.62,683.024 1281.18,683.024 1281.73,683.024 1282.29,683.024 1282.85,683.024 1283.41,683.024 1283.97,683.024 1284.53,683.024 1285.09,683.024 1285.65,683.024 1286.21,683.024 1286.77,683.024 1287.33,683.024 1287.89,683.024 1288.45,683.024 1289,683.024 1289.56,683.024 1290.12,683.024 1290.68,683.024 1291.24,683.024 1291.8,683.024 1292.36,683.024 1292.92,683.024 1293.48,683.024 1294.04,683.024 1294.6,683.024 1295.16,683.024 1295.72,683.024 1296.28,683.024 1296.83,683.024 1297.39,683.024 1297.95,683.024 1298.51,683.024 1299.07,683.024 1299.63,683.024 1300.19,683.024 1300.75,683.024 1301.31,683.024 1301.87,683.024 1302.43,683.024 1302.99,683.024 1303.55,683.024 1304.1,683.024 1304.66,683.024 1305.22,683.024 1305.78,683.024 1306.34,683.024 1306.9,683.024 1307.46,683.024 1308.02,683.024 1308.58,683.024 1309.14,683.024 1309.7,683.024 1310.26,683.024 1310.82,683.024 1311.38,683.024 1311.93,683.024 1312.49,683.024 1313.05,683.024 1313.61,683.024 1314.17,683.024 1314.73,683.024 1315.29,683.024 1315.85,683.024 1316.41,683.024 1316.97,683.024 1317.53,683.024 1318.09,683.024 1318.65,683.024 1319.2,683.024 1319.76,683.024 1320.32,683.024 1320.88,683.024 1321.44,683.024 1322,683.024 1322.56,683.024 1323.12,683.024 1323.68,683.024 1324.24,683.024 1324.8,683.024 1325.36,683.024 1325.92,683.024 1326.47,683.024 1327.03,683.024 1327.59,683.024 1328.15,683.024 1328.71,683.024 1329.27,683.024 1329.83,683.024 1330.39,683.024 1330.95,683.024 1331.51,683.024 1332.07,683.024 1332.63,683.024 1333.19,683.024 1333.75,683.024 1334.3,683.024 1334.86,683.024 1335.42,683.024 1335.98,683.024 1336.54,683.024 1337.1,683.024 1337.66,683.024 1338.22,683.024 1338.78,683.024 1339.34,683.024 1339.9,683.024 1340.46,683.024 1341.02,683.024 1341.57,683.024 1342.13,683.024 1342.69,683.024 1343.25,683.024 1343.81,683.024 1344.37,683.024 1344.93,683.024 1345.49,683.024 1346.05,683.024 1346.61,683.024 1347.17,683.024 1347.73,683.024 1348.29,683.024 1348.84,683.024 1349.4,683.024 1349.96,683.024 1350.52,683.024 1351.08,683.024 1351.64,683.024 1352.2,683.024 1352.76,683.024 1353.32,683.024 1353.88,683.024 1354.44,683.024 1355,683.024 1355.56,683.024 1356.12,683.024 1356.67,683.024 1357.23,683.024 1357.79,683.024 1358.35,683.024 1358.91,683.024 1359.47,683.024 1360.03,683.024 1360.59,683.024 1361.15,683.024 1361.71,683.024 1362.27,683.024 1362.83,683.024 1363.39,683.024 1363.94,683.024 1364.5,683.024 1365.06,683.024 1365.62,683.024 1366.18,683.024 1366.74,683.024 1367.3,683.024 1367.86,683.024 1368.42,683.024 1368.98,683.024 1369.54,683.024 1370.1,683.024 1370.66,683.024 1371.21,683.024 1371.77,683.024 1372.33,683.024 1372.89,683.024 1373.45,683.024 1374.01,683.024 1374.57,683.024 1375.13,683.024 1375.69,683.024 1376.25,683.024 1376.81,683.024 1377.37,683.024 1377.93,683.024 1378.49,683.024 1379.04,683.024 1379.6,683.024 1380.16,683.024 1380.72,683.024 1381.28,683.024 1381.84,683.024 1382.4,683.024 1382.96,683.024 1383.52,683.024 1384.08,683.024 1384.64,683.024 1385.2,683.024 1385.76,683.024 1386.31,683.024 1386.87,683.024 1387.43,683.024 1387.99,683.024 1388.55,683.024 1389.11,683.024 1389.67,683.024 1390.23,683.024 1390.79,683.024 1391.35,683.024 1391.91,683.024 1392.47,683.024 1393.03,683.024 1393.58,683.024 1394.14,683.024 1394.7,683.024 1395.26,683.024 1395.82,683.024 1396.38,683.024 1396.94,683.024 1397.5,683.024 1398.06,683.024 1398.62,683.024 1399.18,683.024 1399.74,683.024 1400.3,683.024 1400.86,683.024 1401.41,683.024 1401.97,683.024 1402.53,683.024 1403.09,683.024 1403.65,683.024 1404.21,683.024 1404.77,683.024 1405.33,683.024 1405.89,683.024 1406.45,683.024 1407.01,683.024 1407.57,683.024 1408.13,683.024 1408.68,683.024 1409.24,683.024 1409.8,683.024 1410.36,683.024 1410.92,683.024 1411.48,683.024 1412.04,683.024 1412.6,683.024 1413.16,683.024 1413.72,683.024 1414.28,683.024 1414.84,683.024 1415.4,683.024 1415.95,683.024 1416.51,683.024 1417.07,683.024 1417.63,683.024 1418.19,683.024 1418.75,683.024 1419.31,683.024 1419.87,683.024 1420.43,683.024 1420.99,683.024 1421.55,683.024 1422.11,683.024 1422.67,683.024 1423.23,683.024 1423.78,683.024 1424.34,683.024 1424.9,683.024 1425.46,683.024 1426.02,683.024 1426.58,683.024 1427.14,683.024 1427.7,683.024 1428.26,683.024 1428.82,683.024 1429.38,683.024 1429.94,683.024 1430.5,683.024 1431.05,683.024 1431.61,683.024 1432.17,683.024 1432.73,683.024 1433.29,683.024 1433.85,683.024 1434.41,683.024 1434.97,683.024 1435.53,683.024 1436.09,683.024 1436.65,683.024 1437.21,683.024 1437.77,683.024 1438.33,683.024 1438.88,683.024 1439.44,683.024 1440,683.024 1440.56,683.024 1441.12,683.024 1441.68,683.024 1442.24,683.024 1442.8,683.024 1443.36,683.024 1443.92,683.024 1444.48,683.024 1445.04,683.024 1445.6,683.024 1446.15,683.024 1446.71,683.024 1447.27,683.024 1447.83,683.024 1448.39,683.024 1448.95,683.024 1449.51,683.024 1450.07,683.024 1450.63,683.024 1451.19,683.024 1451.75,683.024 1452.31,683.024 1452.87,683.024 1453.42,683.024 1453.98,683.024 1454.54,683.024 1455.1,683.024 1455.66,683.024 1456.22,683.024 1456.78,683.024 1457.34,683.024 1457.9,683.024 1458.46,683.024 1459.02,683.024 1459.58,683.024 1460.14,683.024 1460.7,683.024 1461.25,683.024 1461.81,683.024 1462.37,683.024 1462.93,683.024 1463.49,683.024 1464.05,683.024 1464.61,683.024 1465.17,683.024 1465.73,683.024 1466.29,683.024 1466.85,683.024 1467.41,683.024 1467.97,683.024 1468.52,683.024 1469.08,683.024 1469.64,683.024 1470.2,683.024 1470.76,683.024 1471.32,683.024 1471.88,683.024 1472.44,683.024 1473,683.024 1473.56,683.024 1474.12,683.024 1474.68,683.024 1475.24,683.024 1475.79,683.024 1476.35,683.024 1476.91,683.024 1477.47,683.024 1478.03,683.024 1478.59,683.024 1479.15,683.024 1479.71,683.024 1480.27,683.024 1480.83,683.024 1481.39,683.024 1481.95,683.024 1482.51,683.024 1483.07,683.024 1483.62,683.024 1484.18,683.024 1484.74,683.024 1485.3,683.024 1485.86,683.024 1486.42,683.024 1486.98,683.024 1487.54,683.024 1488.1,683.024 1488.66,683.024 1489.22,683.024 1489.78,683.024 1490.34,683.024 1490.89,683.024 1491.45,683.024 1492.01,683.024 1492.57,683.024 1493.13,683.024 1493.69,683.024 1494.25,683.024 1494.81,683.024 1495.37,683.024 1495.93,683.024 1496.49,683.024 1497.05,683.024 1497.61,683.024 1498.16,683.024 1498.72,683.024 1499.28,683.024 1499.84,683.024 1500.4,683.024 1500.96,683.024 1501.52,683.024 1502.08,683.024 1502.64,683.024 1503.2,683.024 1503.76,683.024 1504.32,683.024 1504.88,683.024 1505.44,683.024 1505.99,683.024 1506.55,683.024 1507.11,683.024 1507.67,683.024 1508.23,683.024 1508.79,683.024 1509.35,683.024 1509.91,683.024 1510.47,683.024 1511.03,683.024 1511.59,683.024 1512.15,683.024 1512.71,683.024 1513.26,683.024 1513.82,683.024 1514.38,683.024 1514.94,683.024 1515.5,683.024 1516.06,683.024 1516.62,683.024 1517.18,683.024 1517.74,683.024 1518.3,683.024 1518.86,683.024 1519.42,683.024 1519.98,683.024 1520.53,683.024 1521.09,683.024 1521.65,683.024 1522.21,683.024 1522.77,683.024 1523.33,683.024 1523.89,683.024 1524.45,683.024 1525.01,683.024 1525.57,683.024 1526.13,683.024 1526.69,683.024 1527.25,683.024 1527.81,683.024 1528.36,683.024 1528.92,683.024 1529.48,683.024 1530.04,683.024 1530.6,683.024 1531.16,683.024 1531.72,683.024 1532.28,683.024 1532.84,683.024 1533.4,683.024 1533.96,683.024 1534.52,683.024 1535.08,683.024 1535.63,683.024 1536.19,683.024 1536.75,683.024 1537.31,683.024 1537.87,683.024 1538.43,683.024 1538.99,683.024 1539.55,683.024 1540.11,683.024 1540.67,683.024 1541.23,683.024 1541.79,683.024 1542.35,683.024 1542.9,683.024 1543.46,683.024 1544.02,683.024 1544.58,683.024 1545.14,683.024 1545.7,683.024 1546.26,683.024 1546.82,683.024 1547.38,683.024 1547.94,683.024 1548.5,683.024 1549.06,683.024 1549.62,683.024 1550.18,683.024 1550.73,683.024 1551.29,683.024 1551.85,683.024 1552.41,683.024 1552.97,683.024 1553.53,683.024 1554.09,683.024 1554.65,683.024 1555.21,683.024 1555.77,683.024 1556.33,683.024 1556.89,683.024 1557.45,683.024 1558,683.024 1558.56,683.024 1559.12,683.024 1559.68,683.024 1560.24,683.024 1560.8,683.024 1561.36,683.024 1561.92,683.024 1562.48,683.024 1563.04,683.024 1563.6,683.024 1564.16,683.024 1564.72,683.024 1565.28,683.024 1565.83,683.024 1566.39,683.024 1566.95,683.024 1567.51,683.024 1568.07,683.024 1568.63,683.024 1569.19,683.024 1569.75,683.024 1570.31,683.024 1570.87,683.024 1571.43,683.024 1571.99,683.024 1572.55,683.024 1573.1,683.024 1573.66,683.024 1574.22,683.024 1574.78,683.024 1575.34,683.024 1575.9,683.024 1576.46,683.024 1577.02,683.024 1577.58,683.024 1578.14,683.024 1578.7,683.024 1579.26,683.024 1579.82,683.024 1580.37,683.024 1580.93,683.024 1581.49,683.024 1582.05,683.024 1582.61,683.024 1583.17,683.024 1583.73,683.024 1584.29,683.024 1584.85,683.024 1585.41,683.024 1585.97,683.024 1586.53,683.024 1587.09,683.024 1587.65,683.024 1588.2,683.024 1588.76,683.024 1589.32,683.024 1589.88,683.024 1590.44,683.024 1591,683.024 1591.56,683.024 1592.12,683.024 1592.68,683.024 1593.24,683.024 1593.8,683.024 1594.36,683.024 1594.92,683.024 1595.47,683.024 1596.03,683.024 1596.59,683.024 1597.15,683.024 1597.71,683.024 1598.27,683.024 1598.83,683.024 1599.39,683.024 1599.95,683.024 1600.51,683.024 1601.07,683.024 1601.63,683.024 1602.19,683.024 1602.74,683.024 1603.3,683.024 1603.86,683.024 1604.42,683.024 1604.98,683.024 1605.54,683.024 1606.1,683.024 1606.66,683.024 1607.22,683.024 1607.78,683.024 1608.34,683.024 1608.9,683.024 1609.46,683.024 1610.02,683.024 1610.57,683.024 1611.13,683.024 1611.69,683.024 1612.25,683.024 1612.81,683.024 1613.37,683.024 1613.93,683.024 1614.49,683.024 1615.05,683.024 1615.61,683.024 1616.17,683.024 1616.73,683.024 1617.29,683.024 1617.84,683.024 1618.4,683.024 1618.96,683.024 1619.52,683.024 1620.08,683.024 1620.64,683.024 1621.2,683.024 1621.76,683.024 1622.32,683.024 1622.88,683.024 1623.44,683.024 1624,683.024 1624.56,683.024 1625.11,683.024 1625.67,683.024 1626.23,683.024 1626.79,683.024 1627.35,683.024 1627.91,683.024 1628.47,683.024 1629.03,683.024 1629.59,683.024 1630.15,683.024 1630.71,683.024 1631.27,683.024 1631.83,683.024 1632.39,683.024 1632.94,683.024 1633.5,683.024 1634.06,683.024 1634.62,683.024 1635.18,683.024 1635.74,683.024 1636.3,683.024 1636.86,683.024 1637.42,683.024 1637.98,683.024 1638.54,683.024 1639.1,683.024 1639.66,683.024 1640.21,683.024 1640.77,683.024 1641.33,683.024 1641.89,683.024 1642.45,683.024 1643.01,683.024 1643.57,683.024 1644.13,683.024 1644.69,683.024 1645.25,683.024 1645.81,683.024 1646.37,683.024 1646.93,683.024 1647.48,683.024 1648.04,683.024 1648.6,683.024 1649.16,683.024 1649.72,683.024 1650.28,683.024 1650.84,683.024 1651.4,683.024 1651.96,683.024 1652.52,683.024 1653.08,683.024 1653.64,683.024 1654.2,683.024 1654.76,683.024 1655.31,683.024 1655.87,683.024 1656.43,683.024 1656.99,683.024 1657.55,683.024 1658.11,683.024 1658.67,683.024 1659.23,683.024 1659.79,683.024 1660.35,683.024 1660.91,683.024 1661.47,683.024 1662.03,683.024 1662.58,683.024 1663.14,683.024 1663.7,683.024 1664.26,683.024 1664.82,683.024 1665.38,683.024 1665.94,683.024 1666.5,683.024 1667.06,683.024 1667.62,683.024 1668.18,683.024 1668.74,683.024 1669.3,683.024 1669.85,683.024 1670.41,683.024 1670.97,683.024 1671.53,683.024 1672.09,683.024 1672.65,683.024 1673.21,683.024 1673.77,683.024 1674.33,683.024 1674.89,683.024 1675.45,683.024 1676.01,683.024 1676.57,683.024 1677.13,683.024 1677.68,683.024 1678.24,683.024 1678.8,683.024 1679.36,683.024 1679.92,683.024 1680.48,683.024 1681.04,683.024 1681.6,683.024 1682.16,683.024 1682.72,683.024 1683.28,683.024 1683.84,683.024 1684.4,683.024 1684.95,683.024 1685.51,683.024 1686.07,683.024 1686.63,683.024 1687.19,683.024 1687.75,683.024 1688.31,683.024 1688.87,683.024 1689.43,683.024 1689.99,683.024 1690.55,683.024 1691.11,683.024 1691.67,683.024 1692.23,683.024 1692.78,683.024 1693.34,683.024 1693.9,683.024 1694.46,683.024 1695.02,683.024 1695.58,683.024 1696.14,683.024 1696.7,683.024 1697.26,683.024 1697.82,683.024 1698.38,683.024 1698.94,683.024 1699.5,683.024 1700.05,683.024 1700.61,683.024 1701.17,683.024 1701.73,683.024 1702.29,683.024 1702.85,683.024 1703.41,683.024 1703.97,683.024 1704.53,683.024 1705.09,683.024 1705.65,683.024 1706.21,683.024 1706.77,683.024 1707.32,683.024 1707.88,683.024 1708.44,683.024 1709,683.024 1709.56,683.024 1710.12,683.024 1710.68,683.024 1711.24,683.024 1711.8,683.024 1712.36,683.024 1712.92,683.024 1713.48,683.024 1714.04,683.024 1714.6,683.024 1715.15,683.024 1715.71,683.024 1716.27,683.024 1716.83,683.024 1717.39,683.024 1717.95,683.024 1718.51,683.024 1719.07,683.024 1719.63,683.024 1720.19,683.024 1720.75,683.024 1721.31,683.024 1721.87,683.024 1722.42,683.024 1722.98,683.024 1723.54,683.024 1724.1,683.024 1724.66,683.024 1725.22,683.024 1725.78,683.024 1726.34,683.024 1726.9,683.024 1727.46,683.024 1728.02,683.024 1728.58,683.024 1729.14,683.024 1729.69,683.024 1730.25,683.024 1730.81,683.024 1731.37,683.024 1731.93,683.024 1732.49,683.024 1733.05,683.024 1733.61,683.024 1734.17,683.024 1734.73,683.024 1735.29,683.024 1735.85,683.024 1736.41,683.024 1736.97,683.024 1737.52,683.024 1738.08,683.024 1738.64,683.024 1739.2,683.024 1739.76,683.024 1740.32,683.024 1740.88,683.024 1741.44,683.024 1742,683.024 1742.56,683.024 1743.12,683.024 1743.68,683.024 1744.24,683.024 1744.79,683.024 1745.35,683.024 1745.91,683.024 1746.47,683.024 1747.03,683.024 1747.59,683.024 1748.15,683.024 1748.71,683.024 1749.27,683.024 1749.83,683.024 1750.39,683.024 1750.95,683.024 1751.51,683.024 1752.06,683.024 1752.62,683.024 1753.18,683.024 1753.74,683.024 1754.3,683.024 1754.86,683.024 1755.42,683.024 1755.98,683.024 1756.54,683.024 1757.1,683.024 1757.66,683.024 1758.22,683.024 1758.78,683.024 1759.34,683.024 1759.89,683.024 1760.45,683.024 1761.01,683.024 1761.57,683.024 1762.13,683.024 1762.69,683.024 1763.25,683.024 1763.81,683.024 1764.37,683.024 1764.93,683.024 1765.49,683.024 1766.05,683.024 1766.61,683.024 1767.16,683.024 1767.72,683.024 1768.28,683.024 1768.84,683.024 1769.4,683.024 1769.96,683.024 1770.52,683.024 1771.08,683.024 1771.64,683.024 1772.2,683.024 1772.76,683.024 1773.32,683.024 1773.88,683.024 1774.43,683.024 1774.99,683.024 1775.55,683.024 1776.11,683.024 1776.67,683.024 1777.23,683.024 1777.79,683.024 1778.35,683.024 1778.91,683.024 1779.47,683.024 1780.03,683.024 1780.59,683.024 1781.15,683.024 1781.71,683.024 1782.26,683.024 1782.82,683.024 1783.38,683.024 1783.94,683.024 1784.5,683.024 1785.06,683.024 1785.62,683.024 1786.18,683.024 1786.74,683.024 1787.3,683.024 1787.86,683.024 1788.42,683.024 1788.98,683.024 1789.53,683.024 1790.09,683.024 1790.65,683.024 1791.21,683.024 1791.77,683.024 1792.33,683.024 1792.89,683.024 1793.45,683.024 1794.01,683.024 1794.57,683.024 1795.13,683.024 1795.69,683.024 1796.25,683.024 1796.8,683.024 1797.36,683.024 1797.92,683.024 1798.48,683.024 1799.04,683.024 1799.6,683.024 1800.16,683.024 1800.72,683.024 1801.28,683.024 1801.84,683.024 1802.4,683.024 1802.96,683.024 1803.52,683.024 1804.08,683.024 1804.63,683.024 1805.19,683.024 1805.75,683.024 1806.31,683.024 1806.87,683.024 1807.43,683.024 1807.99,683.024 1808.55,683.024 1809.11,683.024 1809.67,683.024 1810.23,683.024 1810.79,683.024 1811.35,683.024 1811.9,683.024 1812.46,683.024 1813.02,683.024 1813.58,683.024 1814.14,683.024 1814.7,683.024 1815.26,683.024 1815.82,683.024 1816.38,683.024 1816.94,683.024 1817.5,683.024 1818.06,683.024 1818.62,683.024 1819.18,683.024 1819.73,683.024 1820.29,683.024 1820.85,683.024 1821.41,683.024 1821.97,683.024 1822.53,683.024 1823.09,683.024 1823.65,683.024 1824.21,683.024 1824.77,683.024 1825.33,683.024 1825.89,683.024 1826.45,683.024 1827,683.024 1827.56,683.024 1828.12,683.024 1828.68,683.024 1829.24,683.024 1829.8,683.024 1830.36,683.024 1830.92,683.024 1831.48,683.024 1832.04,683.024 1832.6,683.024 1833.16,683.024 1833.72,683.024 1834.27,683.024 1834.83,683.024 1835.39,683.024 1835.95,683.024 1836.51,683.024 1837.07,683.024 1837.63,683.024 1838.19,683.024 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $target_walkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.033724821352322 ± 0.021401754445855195\nProjected Energy: -4.012263372663104 ± (0.0048798166271630805, 0.004714297034335679)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from solve as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b];\n    shift=:shift,\n    norm=:norm,\n    time_step=determine_constant_time_step(df),\n    skip=0\n)\ngrowth_witness(sim::PMCSimulation, [b]; kwargs...)\n\nCalculate the growth witness directly from the result (DataFrame or PMCSimulation) of solveing a ProjectorMonteCarloProblem. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0)\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n)\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    time_step=determine_constant_time_step(df),\n    kwargs...\n)\ngrowth_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively.  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin.\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m) \n\nwhere dτ is the time_step\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator.  Error propagation is done with MonteCarloMeasurements. Propagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a PMCSimulation or DataFrame returned by solve. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\ngrowth_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df or PMCSimulation sim. repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-Tuple{AbstractVector, AbstractVector, AbstractVector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    time_step=determine_constant_time_step(df),\n    kwargs...\n)\nmixed_estimator(sim::PMCSimulation, h; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up).  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin.  Additional keyword arguments are passed on to ratio_of_means.\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2), where dτ is the time_step, and potentially increased confidence intervals compared to the unweighted ratio.  Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\nmixed_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(df::DataFrame; skip=0, hproj=:hproj, vproj=:vproj, kwargs...)\nprojected_energy(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy(...) to set these up in ProjectorMonteCarloProblem). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n)\nrayleigh_replica_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin. Additional keyword arguments are passed on to ratio_of_means.\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\nrayleigh_replica_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...)\nshift_estimator(sim::PMCSimulation; kwargs...)\n-> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, time_step; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip and dτ is the time_step.\n\nSee also w_lin, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, time_step; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip and dτ is the time_step.\n\nSee also w_exp, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\nreplica_fidelity(sim::PMCSimulation; kwargs...)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the PMCSimulation or DataFrame returned by solve, using replicas _1 and _2. Calls ratio_of_means to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\nvariational_energy_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame and PMCSimulation versions can extract the relevant information from the result of solve. Set up the ProjectorMonteCarloProblem with the keyword argument replica_strategy = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.determine_constant_time_step-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.determine_constant_time_step","text":"determine_constant_time_step(df) -> time_step\n\nGiven a DataFrame df, determine the time step that was used to compute it. Throw an error if time step is not constant.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by ProjectorMonteCarloProblem as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.46282</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.2894e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.047e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">8.816e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.202e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.786e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.784e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0⟩\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613369\n -0.7590191922770906\n  0.1358418221962161\n  0.15789998694607021\n  0.8767114411781378\n  1.5305929970973313\n  1.5835732611867446\n  3.072870330325867\n  3.1256726539518445\n  4.862107221562167\n  6.260694850380599\n  6.402671211183109\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of ProjectorMonteCarloProblem() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1⟩\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1⟩\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1⟩\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into ProjectorMonteCarloProblem with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with ProjectorMonteCarloProblem). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0⟩\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0⟩\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1⟩\" => -0.57735   fs\"|0 1 0⟩\" => -0.57735   fs\"|1 0 0⟩\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee ProjectorMonteCarloProblem, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to ProjectorMonteCarloProblem then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep time_step constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; target_walkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when target_walkers is reached.\n\nSee ShiftStrategy, ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in ProjectorMonteCarloProblem is advised as the default may not be appropriate.\n\nSee ShiftStrategy, ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; target_walkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; target_walkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(target_walkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After target_walkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, time_step) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian, dτ the time_step and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(target_walkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After target_walkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to ProjectorMonteCarloProblem. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntarget_walkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; target_walkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 9)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; target_walkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, see   TimeStepStrategy.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * target_walkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to ProjectorMonteCarloProblem and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to ProjectorMonteCarloProblem or to FCIQMC.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in ProjectorMonteCarloProblem()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_time_step(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main ProjectorMonteCarloProblem loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in solve! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 9)\n\njulia> size(df2)\n(200, 9)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3⟩\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; target_walkers=targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.target_walkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from ProjectorMonteCarloProblem, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before ProjectorMonteCarloProblem exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.update_time_step-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_time_step","text":"update_time_step(s<:TimeStepStrategy, time_step, tnorm) -> new_time_step\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by ProjectorMonteCarloProblem when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of ProjectorMonteCarloProblem, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with ProjectorMonteCarloProblem, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0⟩\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    target_walkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. ProjectorMonteCarloProblem, ExactDiagonalizationProblem.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with ProjectorMonteCarloProblem and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with ProjectorMonteCarloProblem and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in ProjectorMonteCarloProblem.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in ProjectorMonteCarloProblem.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
