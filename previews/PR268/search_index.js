var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntarget_walkers = 100;\ntime_step = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dœÑ = time_step,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers = target_walkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ¬± $(r.œÉ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ¬± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ¬± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ¬± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ¬± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ¬± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ¬± 0.13748856752861724\n   Replica 2: -3.974753826250174 ¬± 0.12466355058904417\n   Replica 3: -4.011054302602586 ¬± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"target_walkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1‚ü©\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1‚ü©\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0‚ü©\"=>-14.1421, fs\"|0 2 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 1 0 2‚ü©\"=>-14.1421, fs\"|1 2 0 1 1 1‚ü©\"=>-14.1421, fs\"|2 0 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 2 0 1‚ü©\"=>-14.1421, fs\"|1 1 2 0 1 1‚ü©\"=>-14.1421, fs\"|1 1 0 2 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 0 2 1‚ü©\"=>-14.1421, fs\"|1 0 2 1 1 1‚ü©\"=>-14.1421, fs\"|2 1 1 1 1 0‚ü©\"=>-14.1421, fs\"|0 1 1 1 1 2‚ü©\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    target_walkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [target_walkers];\n    label=\"target_walkers\", xlabel=\"step\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.step, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip770\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip770)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip771\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip770)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip772\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip770)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1266.04 1391.71 L1266.04 1397.25 Q1263.56 1395.98 1260.88 1395.34 Q1258.21 1394.71 1255.34 1394.71 Q1250.98 1394.71 1248.79 1396.04 Q1246.62 1397.38 1246.62 1400.05 Q1246.62 1402.09 1248.18 1403.27 Q1249.74 1404.41 1254.45 1405.46 L1256.46 1405.91 Q1262.7 1407.25 1265.31 1409.7 Q1267.95 1412.12 1267.95 1416.48 Q1267.95 1421.44 1264 1424.34 Q1260.09 1427.23 1253.21 1427.23 Q1250.35 1427.23 1247.23 1426.66 Q1244.14 1426.12 1240.7 1425.01 L1240.7 1418.96 Q1243.95 1420.65 1247.1 1421.51 Q1250.25 1422.33 1253.34 1422.33 Q1257.48 1422.33 1259.7 1420.93 Q1261.93 1419.5 1261.93 1416.92 Q1261.93 1414.54 1260.31 1413.26 Q1258.72 1411.99 1253.27 1410.81 L1251.24 1410.33 Q1245.79 1409.19 1243.38 1406.83 Q1240.96 1404.45 1240.96 1400.31 Q1240.96 1395.28 1244.52 1392.54 Q1248.09 1389.8 1254.64 1389.8 Q1257.89 1389.8 1260.75 1390.28 Q1263.62 1390.76 1266.04 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1283.07 1380.54 L1283.07 1390.66 L1295.13 1390.66 L1295.13 1395.22 L1283.07 1395.22 L1283.07 1414.57 Q1283.07 1418.93 1284.24 1420.17 Q1285.45 1421.41 1289.11 1421.41 L1295.13 1421.41 L1295.13 1426.31 L1289.11 1426.31 Q1282.33 1426.31 1279.76 1423.8 Q1277.18 1421.25 1277.18 1414.57 L1277.18 1395.22 L1272.88 1395.22 L1272.88 1390.66 L1277.18 1390.66 L1277.18 1380.54 L1283.07 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1333.32 1407.02 L1333.32 1409.89 L1306.4 1409.89 Q1306.78 1415.94 1310.02 1419.12 Q1313.3 1422.27 1319.13 1422.27 Q1322.5 1422.27 1325.65 1421.44 Q1328.84 1420.61 1331.95 1418.96 L1331.95 1424.5 Q1328.8 1425.83 1325.49 1426.53 Q1322.18 1427.23 1318.78 1427.23 Q1310.25 1427.23 1305.25 1422.27 Q1300.29 1417.3 1300.29 1408.84 Q1300.29 1400.08 1305 1394.96 Q1309.74 1389.8 1317.76 1389.8 Q1324.95 1389.8 1329.12 1394.45 Q1333.32 1399.07 1333.32 1407.02 M1327.47 1405.3 Q1327.4 1400.5 1324.76 1397.63 Q1322.15 1394.77 1317.82 1394.77 Q1312.92 1394.77 1309.96 1397.54 Q1307.03 1400.31 1306.59 1405.34 L1327.47 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1348.6 1420.96 L1348.6 1439.87 L1342.71 1439.87 L1342.71 1390.66 L1348.6 1390.66 L1348.6 1396.07 Q1350.45 1392.89 1353.25 1391.36 Q1356.08 1389.8 1360 1389.8 Q1366.49 1389.8 1370.53 1394.96 Q1374.6 1400.12 1374.6 1408.52 Q1374.6 1416.92 1370.53 1422.08 Q1366.49 1427.23 1360 1427.23 Q1356.08 1427.23 1353.25 1425.71 Q1350.45 1424.15 1348.6 1420.96 M1368.53 1408.52 Q1368.53 1402.06 1365.85 1398.4 Q1363.21 1394.71 1358.56 1394.71 Q1353.92 1394.71 1351.24 1398.4 Q1348.6 1402.06 1348.6 1408.52 Q1348.6 1414.98 1351.24 1418.67 Q1353.92 1422.33 1358.56 1422.33 Q1363.21 1422.33 1365.85 1418.67 Q1368.53 1414.98 1368.53 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.31 2211.02,1003.31 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.791 2211.02,745.791 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.272 2211.02,488.272 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.752 2211.02,230.752 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.31 423.181,1003.31 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.791 423.181,745.791 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.272 423.181,488.272 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.752 423.181,230.752 \"/>\n<path clip-path=\"url(#clip770)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.97 350.899 1271.54 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.54 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.63 356.339 1246.63 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.2 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.2 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M290.043 1016.65 L306.363 1016.65 L306.363 1020.59 L284.418 1020.59 L284.418 1016.65 Q287.08 1013.9 291.664 1009.27 Q296.27 1004.62 297.451 1003.28 Q299.696 1000.75 300.576 999.016 Q301.478 997.257 301.478 995.567 Q301.478 992.812 299.534 991.076 Q297.613 989.34 294.511 989.34 Q292.312 989.34 289.858 990.104 Q287.427 990.868 284.65 992.419 L284.65 987.697 Q287.474 986.562 289.927 985.984 Q292.381 985.405 294.418 985.405 Q299.789 985.405 302.983 988.09 Q306.177 990.775 306.177 995.266 Q306.177 997.396 305.367 999.317 Q304.58 1001.22 302.474 1003.81 Q301.895 1004.48 298.793 1007.7 Q295.691 1010.89 290.043 1016.65 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M316.224 986.03 L334.58 986.03 L334.58 989.965 L320.506 989.965 L320.506 998.437 Q321.524 998.09 322.543 997.928 Q323.562 997.743 324.58 997.743 Q330.367 997.743 333.747 1000.91 Q337.126 1004.09 337.126 1009.5 Q337.126 1015.08 333.654 1018.18 Q330.182 1021.26 323.862 1021.26 Q321.687 1021.26 319.418 1020.89 Q317.173 1020.52 314.765 1019.78 L314.765 1015.08 Q316.849 1016.22 319.071 1016.77 Q321.293 1017.33 323.77 1017.33 Q327.774 1017.33 330.112 1015.22 Q332.45 1013.11 332.45 1009.5 Q332.45 1005.89 330.112 1003.78 Q327.774 1001.68 323.77 1001.68 Q321.895 1001.68 320.02 1002.09 Q318.168 1002.51 316.224 1003.39 L316.224 986.03 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M356.339 989.109 Q352.728 989.109 350.899 992.674 Q349.094 996.215 349.094 1003.34 Q349.094 1010.45 350.899 1014.02 Q352.728 1017.56 356.339 1017.56 Q359.973 1017.56 361.779 1014.02 Q363.608 1010.45 363.608 1003.34 Q363.608 996.215 361.779 992.674 Q359.973 989.109 356.339 989.109 M356.339 985.405 Q362.149 985.405 365.205 990.012 Q368.284 994.595 368.284 1003.34 Q368.284 1012.07 365.205 1016.68 Q362.149 1021.26 356.339 1021.26 Q350.529 1021.26 347.45 1016.68 Q344.395 1012.07 344.395 1003.34 Q344.395 994.595 347.45 990.012 Q350.529 985.405 356.339 985.405 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M286.062 728.511 L304.418 728.511 L304.418 732.446 L290.344 732.446 L290.344 740.918 Q291.363 740.571 292.381 740.409 Q293.4 740.224 294.418 740.224 Q300.205 740.224 303.585 743.395 Q306.964 746.566 306.964 751.983 Q306.964 757.562 303.492 760.663 Q300.02 763.742 293.701 763.742 Q291.525 763.742 289.256 763.372 Q287.011 763.001 284.603 762.261 L284.603 757.562 Q286.687 758.696 288.909 759.251 Q291.131 759.807 293.608 759.807 Q297.613 759.807 299.951 757.7 Q302.288 755.594 302.288 751.983 Q302.288 748.372 299.951 746.265 Q297.613 744.159 293.608 744.159 Q291.733 744.159 289.858 744.576 Q288.006 744.992 286.062 745.872 L286.062 728.511 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M326.177 731.589 Q322.566 731.589 320.737 735.154 Q318.932 738.696 318.932 745.826 Q318.932 752.932 320.737 756.497 Q322.566 760.038 326.177 760.038 Q329.811 760.038 331.617 756.497 Q333.446 752.932 333.446 745.826 Q333.446 738.696 331.617 735.154 Q329.811 731.589 326.177 731.589 M326.177 727.886 Q331.987 727.886 335.043 732.492 Q338.122 737.076 338.122 745.826 Q338.122 754.552 335.043 759.159 Q331.987 763.742 326.177 763.742 Q320.367 763.742 317.288 759.159 Q314.233 754.552 314.233 745.826 Q314.233 737.076 317.288 732.492 Q320.367 727.886 326.177 727.886 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M356.339 731.589 Q352.728 731.589 350.899 735.154 Q349.094 738.696 349.094 745.826 Q349.094 752.932 350.899 756.497 Q352.728 760.038 356.339 760.038 Q359.973 760.038 361.779 756.497 Q363.608 752.932 363.608 745.826 Q363.608 738.696 361.779 735.154 Q359.973 731.589 356.339 731.589 M356.339 727.886 Q362.149 727.886 365.205 732.492 Q368.284 737.076 368.284 745.826 Q368.284 754.552 365.205 759.159 Q362.149 763.742 356.339 763.742 Q350.529 763.742 347.45 759.159 Q344.395 754.552 344.395 745.826 Q344.395 737.076 347.45 732.492 Q350.529 727.886 356.339 727.886 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M284.835 470.992 L307.057 470.992 L307.057 472.982 L294.511 505.552 L289.627 505.552 L301.432 474.927 L284.835 474.927 L284.835 470.992 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M316.224 470.992 L334.58 470.992 L334.58 474.927 L320.506 474.927 L320.506 483.399 Q321.524 483.052 322.543 482.89 Q323.562 482.704 324.58 482.704 Q330.367 482.704 333.747 485.876 Q337.126 489.047 337.126 494.464 Q337.126 500.042 333.654 503.144 Q330.182 506.223 323.862 506.223 Q321.687 506.223 319.418 505.852 Q317.173 505.482 314.765 504.741 L314.765 500.042 Q316.849 501.177 319.071 501.732 Q321.293 502.288 323.77 502.288 Q327.774 502.288 330.112 500.181 Q332.45 498.075 332.45 494.464 Q332.45 490.853 330.112 488.746 Q327.774 486.64 323.77 486.64 Q321.895 486.64 320.02 487.056 Q318.168 487.473 316.224 488.353 L316.224 470.992 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M356.339 474.07 Q352.728 474.07 350.899 477.635 Q349.094 481.177 349.094 488.306 Q349.094 495.413 350.899 498.977 Q352.728 502.519 356.339 502.519 Q359.973 502.519 361.779 498.977 Q363.608 495.413 363.608 488.306 Q363.608 481.177 361.779 477.635 Q359.973 474.07 356.339 474.07 M356.339 470.367 Q362.149 470.367 365.205 474.973 Q368.284 479.556 368.284 488.306 Q368.284 497.033 365.205 501.64 Q362.149 506.223 356.339 506.223 Q350.529 506.223 347.45 501.64 Q344.395 497.033 344.395 488.306 Q344.395 479.556 347.45 474.973 Q350.529 470.367 356.339 470.367 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M256.664 244.097 L264.303 244.097 L264.303 217.731 L255.992 219.398 L255.992 215.139 L264.256 213.472 L268.932 213.472 L268.932 244.097 L276.571 244.097 L276.571 248.032 L256.664 248.032 L256.664 244.097 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M296.015 216.551 Q292.404 216.551 290.576 220.116 Q288.77 223.657 288.77 230.787 Q288.77 237.893 290.576 241.458 Q292.404 245 296.015 245 Q299.65 245 301.455 241.458 Q303.284 237.893 303.284 230.787 Q303.284 223.657 301.455 220.116 Q299.65 216.551 296.015 216.551 M296.015 212.847 Q301.826 212.847 304.881 217.454 Q307.96 222.037 307.96 230.787 Q307.96 239.514 304.881 244.12 Q301.826 248.704 296.015 248.704 Q290.205 248.704 287.127 244.12 Q284.071 239.514 284.071 230.787 Q284.071 222.037 287.127 217.454 Q290.205 212.847 296.015 212.847 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M326.177 216.551 Q322.566 216.551 320.737 220.116 Q318.932 223.657 318.932 230.787 Q318.932 237.893 320.737 241.458 Q322.566 245 326.177 245 Q329.811 245 331.617 241.458 Q333.446 237.893 333.446 230.787 Q333.446 223.657 331.617 220.116 Q329.811 216.551 326.177 216.551 M326.177 212.847 Q331.987 212.847 335.043 217.454 Q338.122 222.037 338.122 230.787 Q338.122 239.514 335.043 244.12 Q331.987 248.704 326.177 248.704 Q320.367 248.704 317.288 244.12 Q314.233 239.514 314.233 230.787 Q314.233 222.037 317.288 217.454 Q320.367 212.847 326.177 212.847 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M356.339 216.551 Q352.728 216.551 350.899 220.116 Q349.094 223.657 349.094 230.787 Q349.094 237.893 350.899 241.458 Q352.728 245 356.339 245 Q359.973 245 361.779 241.458 Q363.608 237.893 363.608 230.787 Q363.608 223.657 361.779 220.116 Q359.973 216.551 356.339 216.551 M356.339 212.847 Q362.149 212.847 365.205 217.454 Q368.284 222.037 368.284 230.787 Q368.284 239.514 365.205 244.12 Q362.149 248.704 356.339 248.704 Q350.529 248.704 347.45 244.12 Q344.395 239.514 344.395 230.787 Q344.395 222.037 347.45 217.454 Q350.529 212.847 356.339 212.847 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip772)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.752 4017.76,230.752 \"/>\n<polyline clip-path=\"url(#clip772)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1248.44 458.828,1247.06 459.396,1246.67 459.964,1246.21 460.533,1245.65 461.101,1245.02 461.669,1244.31 462.238,1242.49 462.806,1241.66 463.375,1240.74 463.943,1239.73 464.511,1238.62 465.08,1235.35 465.648,1234.04 466.216,1230.55 466.785,1228.97 467.353,1227.31 467.921,1225.5 468.49,1221.5 469.058,1218.39 469.626,1216.25 470.195,1214 470.763,1211.58 471.331,1208.92 471.9,1206.17 472.468,1201.11 473.036,1197.98 473.605,1194.69 474.173,1190.16 474.741,1186.57 475.31,1182.71 475.878,1178.68 476.446,1173.43 477.015,1166.84 477.583,1162.01 478.152,1156.08 478.72,1149.82 479.288,1143.51 479.857,1137 480.425,1131.2 480.993,1123.24 481.562,1117.06 482.13,1110.79 482.698,1103.36 483.267,1095.63 483.835,1088.47 484.403,1078.2 484.972,1070.81 485.54,1063.1 486.108,1055.21 486.677,1044.17 487.245,1035.17 487.813,1026.94 488.382,1018.48 488.95,1008.93 489.518,999.243 490.087,989.41 490.655,979.547 491.224,967.508 491.792,957.493 492.36,948.508 492.929,939.408 493.497,928.064 494.065,916.705 494.634,907.269 495.202,894.66 495.77,883.238 496.339,873.904 496.907,863.379 497.475,852.875 498.044,843.202 498.612,831.695 499.18,818.059 499.749,805.595 500.317,795.333 500.885,784.046 501.454,774.852 502.022,765.703 502.59,753.502 503.159,742.362 503.727,732.544 504.295,721.792 504.864,711.91 505.432,700.301 506.001,690.708 506.569,678.31 507.137,668.061 507.706,659.003 508.274,650.318 508.842,641.571 509.411,631.05 509.979,621.631 510.547,614.394 511.116,606.126 511.684,596.945 512.252,588.964 512.821,582.046 513.389,573.108 513.957,564.314 514.526,556.754 515.094,548.442 515.662,541.038 516.231,534.749 516.799,527.787 517.367,521.759 517.936,513.547 518.504,504.77 519.072,498.039 519.641,490.365 520.209,485.174 520.778,477.941 521.346,470.644 521.914,462.692 522.483,456.862 523.051,450.517 523.619,445.098 524.188,438.716 524.756,434.485 525.324,430.266 525.893,425.127 526.461,420.135 527.029,416.154 527.598,413.174 528.166,409.295 528.734,405.655 529.303,400.909 529.871,397.077 530.439,392.469 531.008,387.133 531.576,379.062 532.144,375.222 532.713,371.415 533.281,367.664 533.85,363.987 534.418,361.47 534.986,358.972 535.555,358.754 536.123,356.343 536.691,352.795 537.26,350.312 537.828,348.046 538.396,343.82 538.965,341.595 539.533,338.381 540.101,335.262 540.67,331.248 541.238,329.556 541.806,327.624 542.375,323.588 542.943,323.041 543.511,319.366 544.08,317.018 544.648,314.56 545.216,312.993 545.785,308.529 546.353,306.174 546.921,305.028 547.49,301.839 548.058,297.755 548.627,297.227 549.195,296.487 549.763,294.668 550.332,291.734 550.9,290.151 551.468,289.746 552.037,290.277 552.605,289.328 553.173,288.778 553.742,288.037 554.31,287.054 554.878,287.041 555.447,287.266 556.015,286.328 556.583,284.721 557.152,284.015 557.72,283.273 558.288,280.33 558.857,278.57 559.425,277.856 559.993,277.37 560.562,277.869 561.13,276.218 561.698,274.472 562.267,272.613 562.835,272.051 563.404,271.471 563.972,271.083 564.54,272.563 565.109,269.814 565.677,268.069 566.245,267.715 566.814,266.307 567.382,265.075 567.95,260.945 568.519,261.943 569.087,263.725 569.655,263.21 570.224,262.71 570.792,259.414 571.36,259.134 571.929,258.219 572.497,257.869 573.065,257.91 573.634,257.586 574.202,257.531 574.77,256.338 575.339,254.324 575.907,254.305 576.476,254.185 577.044,250.89 577.612,249.138 578.181,249.378 578.749,249.77 579.317,248.817 579.886,249.087 580.454,250.115 581.022,251.283 581.591,250.241 582.159,250.523 582.727,249.507 583.296,247.647 583.864,247.768 584.432,248.047 585.001,247.123 585.569,250.438 586.137,248.48 586.706,251.877 587.274,252.637 587.842,251.47 588.411,252.238 588.979,251.211 589.547,250.107 590.116,251.142 590.684,250.011 591.253,249.85 591.821,250.681 592.389,250.445 592.958,251.301 593.526,250.99 594.094,248.781 594.663,249.505 595.231,246.308 595.799,246.215 596.368,246.572 596.936,244.437 597.504,242.429 598.073,240.492 598.641,239.776 599.209,239.291 599.778,239.884 600.346,240.292 600.914,240.548 601.483,240.963 602.051,241.139 602.619,241.467 603.188,241.775 603.756,243.144 604.325,242.318 604.893,241.44 605.461,240.815 606.03,242.082 606.598,240.274 607.166,239.571 607.735,238.792 608.303,238 608.871,239.46 609.44,239.694 610.008,241.983 610.576,242.942 611.145,242.962 611.713,242.874 612.281,242.818 612.85,241.914 613.418,240.918 613.986,241.071 614.555,242.049 615.123,240.018 615.691,238.943 616.26,237.855 616.828,240.23 617.396,239.235 617.965,238.443 618.533,238.815 619.102,239.061 619.67,239.394 620.238,238.543 620.807,237.595 621.375,237.93 621.943,238.183 622.512,236.26 623.08,235.62 623.648,234.08 624.217,233.424 624.785,231.768 625.353,233.331 625.922,234.931 626.49,236.537 627.058,238.937 627.627,239.942 628.195,237.774 628.763,238.096 629.332,237.361 629.9,237.561 630.468,237.896 631.037,238.073 631.605,237.394 632.173,235.387 632.742,236.823 633.31,237.103 633.879,237.409 634.447,237.271 635.015,234.43 635.584,233.69 636.152,233.039 636.72,233.564 637.289,235.118 637.857,235.359 638.425,234.514 638.994,232.948 639.562,233.324 640.13,233.909 640.699,233.321 641.267,235.765 641.835,235.154 642.404,233.441 642.972,233.194 643.54,233.731 644.109,234.153 644.677,234.579 645.245,233.656 645.814,234.045 646.382,235.707 646.951,236.999 647.519,237.369 648.087,236.606 648.656,234.784 649.224,231.879 649.792,234.481 650.361,234.854 650.929,235.521 651.497,233.614 652.066,235.053 652.634,238.523 653.202,239.846 653.771,240.132 654.339,241.25 654.907,237.37 655.476,238.462 656.044,238.508 656.612,237.533 657.181,236.46 657.749,236.595 658.317,235.978 658.886,235.051 659.454,234.124 660.022,234.484 660.591,236.702 661.159,237.814 661.728,238.849 662.296,236.775 662.864,236.978 663.433,238.113 664.001,238.136 664.569,237.164 665.138,235.192 665.706,234.666 666.274,235.115 666.843,237.395 667.411,235.541 667.979,235.423 668.548,234.773 669.116,236.064 669.684,237.144 670.253,236.232 670.821,240.459 671.389,239.407 671.958,238.188 672.526,236.089 673.094,237.096 673.663,236.86 674.231,235.721 674.799,234.889 675.368,233.101 675.936,232.252 676.505,230.403 677.073,232.165 677.641,232.461 678.21,233.847 678.778,235.164 679.346,233.208 679.915,232.31 680.483,230.628 681.051,232.173 681.62,233.572 682.188,234.817 682.756,236.979 683.325,237.114 683.893,238.065 684.461,236.004 685.03,234.907 685.598,236.944 686.166,236.929 686.735,236.037 687.303,234.108 687.871,233.987 688.44,235.354 689.008,237.545 689.577,236.576 690.145,237.447 690.713,237.387 691.282,237.293 691.85,236.211 692.418,237.185 692.987,235.106 693.555,237.242 694.123,239.332 694.692,239.285 695.26,241.074 695.828,241.666 696.397,238.987 696.965,235.477 697.533,236.499 698.102,236.494 698.67,235.325 699.238,235.55 699.807,238.464 700.375,239.182 700.943,234.609 701.512,235.703 702.08,235.778 702.648,235.499 703.217,233.395 703.785,233.124 704.354,232.103 704.922,231.51 705.49,230.699 706.059,229.854 706.627,230.166 707.195,230.35 707.764,230.68 708.332,229.033 708.9,228.298 709.469,227.745 710.037,230.161 710.605,229.652 711.174,231.91 711.742,233.082 712.31,234.166 712.879,233.262 713.447,231.226 714.015,231.568 714.584,231.634 715.152,233.141 715.72,233.037 716.289,232.92 716.857,234.16 717.425,233.197 717.994,233.355 718.562,232.419 719.131,230.453 719.699,233.805 720.267,235.019 720.836,237.246 721.404,238.159 721.972,236.923 722.541,238.908 723.109,238.637 723.677,239.267 724.246,237.882 724.814,239.964 725.382,239.655 725.951,240.185 726.519,239.653 727.087,240.093 727.656,239.682 728.224,238.271 728.792,237.899 729.361,236.304 729.929,234.039 730.497,232.815 731.066,233.725 731.634,232.623 732.203,230.679 732.771,230.102 733.339,229.216 733.908,230.526 734.476,229.756 735.044,230.04 735.613,228.997 736.181,229.3 736.749,229.658 737.318,230.798 737.886,231.048 738.454,231.067 739.023,231.325 739.591,231.521 740.159,229.581 740.728,229.785 741.296,230.063 741.864,230.128 742.433,232.513 743.001,232.439 743.569,231.579 744.138,231.625 744.706,235.066 745.274,233.892 745.843,234.065 746.411,234.095 746.98,234.175 747.548,233.11 748.116,229.028 748.685,228.294 749.253,228.663 749.821,230.096 750.39,230.371 750.958,229.246 751.526,229.372 752.095,227.658 752.663,228.155 753.231,230.482 753.8,231.597 754.368,232.733 754.936,231.56 755.505,231.568 756.073,230.741 756.641,229.653 757.21,230.965 757.778,232.19 758.346,232.331 758.915,231.468 759.483,231.704 760.052,230.559 760.62,233.894 761.188,231.78 761.757,230.735 762.325,229.982 762.893,233.131 763.462,233.005 764.03,234.981 764.598,236.888 765.167,236.87 765.735,235.688 766.303,236.478 766.872,237.281 767.44,238.139 768.008,237.718 768.577,235.291 769.145,233.323 769.713,233.237 770.282,232.017 770.85,231.116 771.418,231.367 771.987,232.547 772.555,232.558 773.123,232.71 773.692,232.674 774.26,230.586 774.829,228.718 775.397,227.974 775.965,225.953 776.534,225.312 777.102,225.851 777.67,229.413 778.239,228.921 778.807,231.374 779.375,231.546 779.944,232.5 780.512,230.662 781.08,231.979 781.649,233.106 782.217,232.999 782.785,235.001 783.354,235.756 783.922,235.601 784.49,235.253 785.059,234.104 785.627,234.043 786.195,235.019 786.764,235.663 787.332,235.446 787.9,236.173 788.469,238.006 789.037,236.52 789.606,236.208 790.174,235.806 790.742,237.671 791.311,238.331 791.879,235.685 792.447,238.503 793.016,236.091 793.584,234.908 794.152,235.764 794.721,236.578 795.289,236.274 795.857,236.016 796.426,235.564 796.994,234.357 797.562,234.062 798.131,231.854 798.699,232.968 799.267,232.94 799.836,230.778 800.404,229.63 800.972,229.707 801.541,228.829 802.109,230.079 802.678,229.226 803.246,230.369 803.814,230.49 804.383,231.653 804.951,230.649 805.519,229.456 806.088,230.178 806.656,230.494 807.224,229.516 807.793,227.628 808.361,227.847 808.929,229.046 809.498,229.44 810.066,231.45 810.634,232.545 811.203,234.532 811.771,233.091 812.339,232.993 812.908,233.806 813.476,233.526 814.044,229.23 814.613,229.254 815.181,228.758 815.749,225.696 816.318,227.112 816.886,227.49 817.455,228.584 818.023,229.701 818.591,231.077 819.16,231.099 819.728,231.08 820.296,232.206 820.865,232.193 821.433,232.117 822.001,232.319 822.57,229.335 823.138,229.574 823.706,229.804 824.275,226.871 824.843,228.311 825.411,225.52 825.98,228.867 826.548,230.186 827.116,231.162 827.685,232.157 828.253,229.908 828.821,230.181 829.39,230.269 829.958,228.352 830.526,228.654 831.095,228.077 831.663,229.538 832.232,231.771 832.8,233.708 833.368,233.45 833.937,235.28 834.505,235.351 835.073,231.802 835.642,232.748 836.21,233.926 836.778,233.498 837.347,235.208 837.915,232.863 838.483,231.67 839.052,230.833 839.62,230.935 840.188,231.173 840.757,232.102 841.325,232.039 841.893,233.127 842.462,232.052 843.03,232.012 843.598,234.099 844.167,233.966 844.735,233.802 845.304,231.578 845.872,230.716 846.44,230.78 847.009,230.751 847.577,229.738 848.145,228.904 848.714,229.245 849.282,231.516 849.85,230.715 850.419,229.89 850.987,231.864 851.555,229.806 852.124,231.082 852.692,232.482 853.26,232.43 853.829,233.376 854.397,233.255 854.965,233.196 855.534,232.887 856.102,231.555 856.67,231.517 857.239,231.454 857.807,233.41 858.375,234.209 858.944,234.007 859.512,232.938 860.081,233.964 860.649,234.908 861.217,234.722 861.786,233.631 862.354,233.442 862.922,231.215 863.491,231.253 864.059,233.229 864.627,234.042 865.196,233.812 865.764,232.532 866.332,232.423 866.901,233.538 867.469,233.366 868.037,234.227 868.606,233.994 869.174,233.934 869.742,234.528 870.311,237.398 870.879,236.074 871.447,235.817 872.016,233.436 872.584,232.198 873.152,233.04 873.721,233.851 874.289,235.617 874.858,233.195 875.426,231.777 875.994,232.618 876.563,233.419 877.131,234.206 877.699,233.694 878.268,234.583 878.836,237.535 879.404,237.854 879.973,237.397 880.541,235.032 881.109,234.527 881.678,231.258 882.246,230.122 882.814,230.226 883.383,230.381 883.951,230.423 884.519,229.266 885.088,228.113 885.656,228.153 886.224,228.433 886.793,227.579 887.361,226.578 887.93,225.837 888.498,225.093 889.066,225.591 889.635,226.974 890.203,226.041 890.771,226.348 891.34,227.821 891.908,227.052 892.476,223.095 893.045,223.647 893.613,224.165 894.181,222.556 894.75,221.154 895.318,223.864 895.886,224.31 896.455,224.348 897.023,225.721 897.591,227.184 898.16,227.636 898.728,229.173 899.296,228.554 899.865,229.656 900.433,228.956 901.001,229.194 901.57,231.582 902.138,232.914 902.707,231.693 903.275,231.619 903.843,231.547 904.412,231.673 904.98,231.665 905.548,236.016 906.117,234.69 906.685,235.69 907.253,236.603 907.822,236.259 908.39,238.185 908.958,239.197 909.527,239.868 910.095,239.273 910.663,236.494 911.232,234.026 911.8,233.868 912.368,233.65 912.937,232.599 913.505,231.298 914.073,231.4 914.642,231.518 915.21,230.515 915.779,230.494 916.347,229.553 916.915,232.755 917.484,233.622 918.052,232.439 918.62,231.249 919.189,231.174 919.757,230.002 920.325,229.028 920.894,230.045 921.462,229.889 922.03,229.986 922.599,226.02 923.167,226.319 923.735,225.635 924.304,227.23 924.872,226.714 925.44,225.915 926.009,226.448 926.577,224.724 927.145,225.38 927.714,225.801 928.282,227.349 928.85,228.82 929.419,230.103 929.987,234.309 930.556,235.333 931.124,235.079 931.692,234 932.261,232.891 932.829,233.001 933.397,233.031 933.966,233.908 934.534,231.513 935.102,231.663 935.671,230.807 936.239,229.696 936.807,232.87 937.376,231.67 937.944,231.615 938.512,230.593 939.081,232.846 939.649,235.114 940.217,233.114 940.786,231.818 941.354,236.085 941.922,233.708 942.491,231.372 943.059,233.392 943.627,233.047 944.196,234.833 944.764,235.161 945.333,233.747 945.901,234.677 946.469,235.551 947.038,235.952 947.606,235.495 948.174,235.12 948.743,231.839 949.311,230.793 949.879,229.711 950.448,229.681 951.016,231.642 951.584,231.536 952.153,231.44 952.721,232.271 953.289,230.286 953.858,228.36 954.426,230.726 954.994,228.753 955.563,229.907 956.131,231.009 956.699,231.198 957.268,226.993 957.836,226.241 958.405,227.618 958.973,225.042 959.541,226.482 960.11,228.047 960.678,229.339 961.246,230.586 961.815,231.469 962.383,232.463 962.951,230.18 963.52,231.114 964.088,228.893 964.656,227.903 965.225,229.128 965.793,230.189 966.361,231.158 966.93,231.298 967.498,229.156 968.066,230.261 968.635,230.364 969.203,230.485 969.771,230.326 970.34,231.507 970.908,233.552 971.476,232.244 972.045,232.228 972.613,230.875 973.182,230.127 973.75,231.192 974.318,230.105 974.887,230.31 975.455,231.376 976.023,230.404 976.592,228.407 977.16,229.543 977.728,229.722 978.297,229.885 978.865,228.915 979.433,228.879 980.002,231.967 980.57,231.969 981.138,232.925 981.707,231.722 982.275,228.815 982.843,226.967 983.412,228.15 983.98,228.398 984.548,230.816 985.117,230.685 985.685,231.82 986.253,232.547 986.822,233.549 987.39,231.315 987.959,231.087 988.527,231.022 989.095,231.951 989.664,228.754 990.232,229.802 990.8,228.953 991.369,228.996 991.937,229.247 992.505,229.357 993.074,230.379 993.642,229.505 994.21,227.823 994.779,226.026 995.347,228.451 995.915,228.84 996.484,229.325 997.052,227.431 997.62,227.832 998.189,228.037 998.757,229.148 999.325,230.594 999.894,233.705 1000.46,234.469 1001.03,233.134 1001.6,233.104 1002.17,233.125 1002.74,233.034 1003.3,234.079 1003.87,235.006 1004.44,234.804 1005.01,234.59 1005.58,235.558 1006.15,232.089 1006.71,232.845 1007.28,231.438 1007.85,230.156 1008.42,232.21 1008.99,231.023 1009.56,232.085 1010.12,234.212 1010.69,233.989 1011.26,233.825 1011.83,234.741 1012.4,233.609 1012.97,234.36 1013.53,233.193 1014.1,232.921 1014.67,232.561 1015.24,230.56 1015.81,228.837 1016.38,229.16 1016.94,230.157 1017.51,229.114 1018.08,229.132 1018.65,228.476 1019.22,227.714 1019.79,227.894 1020.35,229.137 1020.92,230.425 1021.49,231.449 1022.06,230.277 1022.63,232.722 1023.2,233.505 1023.76,233.533 1024.33,233.302 1024.9,232.283 1025.47,234.359 1026.04,235.418 1026.61,237.051 1027.17,233.359 1027.74,232.287 1028.31,232.245 1028.88,234.113 1029.45,233.062 1030.02,232.928 1030.58,232.522 1031.15,232.472 1031.72,232.245 1032.29,233.082 1032.86,230.771 1033.43,230.786 1033.99,229.861 1034.56,230.03 1035.13,228.695 1035.7,227.856 1036.27,227.03 1036.84,225.21 1037.4,224.548 1037.97,228.053 1038.54,228.179 1039.11,229.305 1039.68,227.345 1040.25,227.599 1040.81,226.84 1041.38,230.115 1041.95,227.999 1042.52,228.06 1043.09,227.316 1043.66,226.69 1044.22,228.151 1044.79,228.392 1045.36,228.553 1045.93,228.71 1046.5,228.761 1047.07,229.973 1047.63,229.936 1048.2,231.98 1048.77,233.903 1049.34,231.694 1049.91,230.573 1050.48,230.621 1051.05,232.689 1051.61,232.714 1052.18,233.76 1052.75,234.454 1053.32,234.182 1053.89,233.844 1054.46,229.558 1055.02,229.464 1055.59,228.655 1056.16,228.803 1056.73,227.929 1057.3,227.182 1057.87,228.553 1058.43,229.733 1059,228.772 1059.57,228.903 1060.14,226.964 1060.71,228.382 1061.28,228.617 1061.84,229.82 1062.41,231.091 1062.98,230.998 1063.55,234.247 1064.12,234.929 1064.69,233.924 1065.25,232.853 1065.82,234.928 1066.39,234.614 1066.96,236.428 1067.53,236.038 1068.1,235.619 1068.66,234.161 1069.23,232.898 1069.8,230.524 1070.37,226.355 1070.94,226.529 1071.51,228.043 1072.07,228.336 1072.64,227.458 1073.21,228.665 1073.78,227.862 1074.35,226.834 1074.92,226.894 1075.48,226.977 1076.05,226.252 1076.62,226.843 1077.19,228.293 1077.76,227.392 1078.33,228.577 1078.89,228.573 1079.46,227.799 1080.03,226.912 1080.6,228.004 1081.17,228.448 1081.74,228.652 1082.3,230.023 1082.87,229.243 1083.44,231.494 1084.01,233.725 1084.58,232.574 1085.15,230.192 1085.71,231.639 1086.28,231.707 1086.85,232.738 1087.42,232.762 1087.99,232.587 1088.56,231.413 1089.12,230.356 1089.69,231.576 1090.26,232.688 1090.83,232.412 1091.4,233.435 1091.97,233.43 1092.53,231.267 1093.1,232.463 1093.67,233.436 1094.24,232.37 1094.81,231.256 1095.38,230.198 1095.94,231.398 1096.51,230.566 1097.08,231.394 1097.65,228.505 1098.22,228.767 1098.79,230.898 1099.35,232.039 1099.92,234.21 1100.49,233.808 1101.06,233.462 1101.63,233.469 1102.2,235.433 1102.76,236.172 1103.33,236.744 1103.9,235.223 1104.47,234.834 1105.04,233.348 1105.61,234.03 1106.17,233.988 1106.74,234.713 1107.31,235.519 1107.88,237.232 1108.45,236.693 1109.02,236.46 1109.58,235.971 1110.15,235.571 1110.72,235.239 1111.29,234.858 1111.86,235.606 1112.43,232.93 1112.99,230.778 1113.56,232.92 1114.13,232.849 1114.7,232.628 1115.27,232.494 1115.84,231.165 1116.4,231.881 1116.97,230.717 1117.54,231.703 1118.11,230.588 1118.68,231.483 1119.25,231.549 1119.81,232.664 1120.38,231.36 1120.95,232.275 1121.52,233.266 1122.09,232.094 1122.66,229.993 1123.23,229.921 1123.79,228.768 1124.36,227.991 1124.93,229.107 1125.5,228.975 1126.07,227.931 1126.64,227.97 1127.2,230.097 1127.77,230.181 1128.34,230.137 1128.91,231.31 1129.48,232.253 1130.05,231.11 1130.61,231.013 1131.18,229.67 1131.75,228.581 1132.32,228.77 1132.89,229.043 1133.46,228.714 1134.02,229.94 1134.59,229.098 1135.16,229.131 1135.73,228.965 1136.3,229.738 1136.87,228.643 1137.43,227.033 1138,227.35 1138.57,225.546 1139.14,227.046 1139.71,226.305 1140.28,227.793 1140.84,228.068 1141.41,227.179 1141.98,228.497 1142.55,226.441 1143.12,226.983 1143.69,227.294 1144.25,226.811 1144.82,225.225 1145.39,225.739 1145.96,227.064 1146.53,228.304 1147.1,228.478 1147.66,228.85 1148.23,229.109 1148.8,230.446 1149.37,230.691 1149.94,229.741 1150.51,232.026 1151.07,230.805 1151.64,230.877 1152.21,230.936 1152.78,232.019 1153.35,232.054 1153.92,231.001 1154.48,232.141 1155.05,231.197 1155.62,231.223 1156.19,232.132 1156.76,231.073 1157.33,232.089 1157.89,234.119 1158.46,232.906 1159.03,233.836 1159.6,233.731 1160.17,234.471 1160.74,231.308 1161.3,231.345 1161.87,229.227 1162.44,228.32 1163.01,228.481 1163.58,226.654 1164.15,226.797 1164.71,228.143 1165.28,228.446 1165.85,226.709 1166.42,227.253 1166.99,225.459 1167.56,224.737 1168.12,224.156 1168.69,224.751 1169.26,225.236 1169.83,224.605 1170.4,226.187 1170.97,226.79 1171.53,228.347 1172.1,228.462 1172.67,227.867 1173.24,228.223 1173.81,230.671 1174.38,231.791 1174.94,232.984 1175.51,232.963 1176.08,232.955 1176.65,232.709 1177.22,231.661 1177.79,231.495 1178.35,234.657 1178.92,235.624 1179.49,237.183 1180.06,236.767 1180.63,238.569 1181.2,239.226 1181.76,239.784 1182.33,238.154 1182.9,237.738 1183.47,237.313 1184.04,237.135 1184.61,237.977 1185.17,236.583 1185.74,234.118 1186.31,233.677 1186.88,230.466 1187.45,230.435 1188.02,228.308 1188.58,229.486 1189.15,229.704 1189.72,228.741 1190.29,227.919 1190.86,230.142 1191.43,230.476 1192,230.351 1192.56,231.476 1193.13,231.683 1193.7,230.656 1194.27,232.723 1194.84,233.484 1195.41,230.189 1195.97,230.443 1196.54,229.521 1197.11,227.564 1197.68,227.74 1198.25,228.975 1198.82,229.925 1199.38,229.94 1199.95,230.098 1200.52,231.148 1201.09,232.205 1201.66,232.282 1202.23,231.308 1202.79,231.348 1203.36,231.352 1203.93,231.247 1204.5,229.42 1205.07,227.363 1205.64,226.458 1206.2,225.661 1206.77,225.895 1207.34,227.277 1207.91,225.392 1208.48,224.873 1209.05,224.477 1209.61,225.008 1210.18,226.316 1210.75,225.614 1211.32,225.217 1211.89,225.448 1212.46,225.688 1213.02,226.209 1213.59,227.809 1214.16,228.993 1214.73,228.285 1215.3,229.557 1215.87,232.103 1216.43,231.046 1217,231.239 1217.57,232.291 1218.14,235.421 1218.71,235.183 1219.28,232.998 1219.84,232.004 1220.41,233.15 1220.98,235.068 1221.55,234.924 1222.12,235.591 1222.69,237.246 1223.25,235.644 1223.82,237.404 1224.39,237.936 1224.96,236.454 1225.53,234.013 1226.1,233.892 1226.66,232.667 1227.23,233.683 1227.8,234.341 1228.37,235.096 1228.94,234.752 1229.51,233.419 1230.07,233.338 1230.64,236.417 1231.21,236.094 1231.78,236.96 1232.35,237.49 1232.92,238.015 1233.48,237.548 1234.05,237.186 1234.62,236.692 1235.19,236.019 1235.76,232.616 1236.33,229.308 1236.89,229.36 1237.46,229.33 1238.03,229.53 1238.6,232.791 1239.17,232.622 1239.74,231.314 1240.3,230.36 1240.87,229.572 1241.44,230.597 1242.01,232.43 1242.58,232.169 1243.15,231.136 1243.71,229.073 1244.28,227.772 1244.85,229 1245.42,230.005 1245.99,230.025 1246.56,228.96 1247.12,226.794 1247.69,228.069 1248.26,228.359 1248.83,228.583 1249.4,226.461 1249.97,227.684 1250.53,227.737 1251.1,229.978 1251.67,230.115 1252.24,229.935 1252.81,225.781 1253.38,226.236 1253.94,226.755 1254.51,227.971 1255.08,227.128 1255.65,227.287 1256.22,227.493 1256.79,227.57 1257.35,228.85 1257.92,227.94 1258.49,229.159 1259.06,228.404 1259.63,224.687 1260.2,223.177 1260.76,224.73 1261.33,225.304 1261.9,226.854 1262.47,229.233 1263.04,228.5 1263.61,229.667 1264.18,228.817 1264.74,229.133 1265.31,229.375 1265.88,231.584 1266.45,232.625 1267.02,232.475 1267.59,234.484 1268.15,233.389 1268.72,234.216 1269.29,234.017 1269.86,231.862 1270.43,231.84 1271,231.991 1271.56,231.089 1272.13,231.43 1272.7,228.086 1273.27,228.403 1273.84,229.831 1274.41,232.814 1274.97,229.728 1275.54,232.09 1276.11,232.219 1276.68,230.233 1277.25,231.615 1277.82,231.42 1278.38,230.447 1278.95,229.462 1279.52,229.659 1280.09,230.746 1280.66,231.764 1281.23,230.678 1281.79,232.916 1282.36,232.882 1282.93,232.752 1283.5,232.808 1284.07,232.764 1284.64,232.541 1285.2,231.446 1285.77,230.577 1286.34,231.882 1286.91,232.932 1287.48,232.94 1288.05,233.994 1288.61,232.593 1289.18,232.554 1289.75,232.387 1290.32,232.394 1290.89,232.442 1291.46,231.338 1292.02,230.391 1292.59,229.599 1293.16,229.524 1293.73,230.708 1294.3,228.917 1294.87,230.903 1295.43,232.075 1296,229.952 1296.57,229.999 1297.14,230.333 1297.71,232.38 1298.28,232.167 1298.84,231.991 1299.41,231.063 1299.98,230.047 1300.55,230.098 1301.12,228.214 1301.69,229.611 1302.25,231.706 1302.82,232.604 1303.39,230.548 1303.96,231.677 1304.53,233.786 1305.1,233.666 1305.66,233.058 1306.23,230.795 1306.8,229.797 1307.37,231.037 1307.94,232.152 1308.51,232.1 1309.07,231.903 1309.64,230.62 1310.21,231.528 1310.78,232.473 1311.35,231.289 1311.92,235.205 1312.48,237.082 1313.05,235.527 1313.62,236.072 1314.19,235.668 1314.76,235.077 1315.33,233.583 1315.89,233.368 1316.46,231.828 1317.03,231.676 1317.6,230.541 1318.17,229.512 1318.74,229.456 1319.3,231.892 1319.87,231.546 1320.44,231.157 1321.01,232.093 1321.58,230.093 1322.15,231.154 1322.71,232.154 1323.28,230.094 1323.85,230.122 1324.42,230.998 1324.99,231.828 1325.56,231.542 1326.12,232.405 1326.69,230.343 1327.26,230.331 1327.83,229.032 1328.4,226.002 1328.97,225.498 1329.53,226 1330.1,226.354 1330.67,224.517 1331.24,224.867 1331.81,226.466 1332.38,228.675 1332.94,229.656 1333.51,230.633 1334.08,231.614 1334.65,231.662 1335.22,231.625 1335.79,230.521 1336.36,230.584 1336.92,229.644 1337.49,231.502 1338.06,230.237 1338.63,231.369 1339.2,230.256 1339.77,230.23 1340.33,230.249 1340.9,228.285 1341.47,228.211 1342.04,230.269 1342.61,233.319 1343.18,234.101 1343.74,232.797 1344.31,232.723 1344.88,233.619 1345.45,233.505 1346.02,232.276 1346.59,232.142 1347.15,232.036 1347.72,235.061 1348.29,231.609 1348.86,229.392 1349.43,231.595 1350,233.47 1350.56,233.29 1351.13,232.86 1351.7,232.751 1352.27,233.938 1352.84,234.596 1353.41,233.397 1353.97,234.219 1354.54,231.973 1355.11,232.986 1355.68,233.766 1356.25,233.601 1356.82,234.247 1357.38,233.933 1357.95,230.629 1358.52,230.335 1359.09,229.187 1359.66,230.118 1360.23,232.152 1360.79,233.057 1361.36,229.492 1361.93,229.396 1362.5,229.447 1363.07,230.377 1363.64,231.461 1364.2,234.508 1364.77,233.13 1365.34,235.076 1365.91,234.665 1366.48,236.364 1367.05,235.018 1367.61,233.625 1368.18,231.267 1368.75,233.057 1369.32,233.862 1369.89,232.444 1370.46,232.016 1371.02,230.722 1371.59,229.42 1372.16,229.269 1372.73,230.471 1373.3,228.342 1373.87,228.272 1374.43,229.376 1375,227.226 1375.57,227.534 1376.14,228.663 1376.71,230.928 1377.28,231.73 1377.84,234.753 1378.41,234.341 1378.98,234.881 1379.55,231.668 1380.12,231.582 1380.69,230.529 1381.25,231.359 1381.82,233.305 1382.39,234.067 1382.96,232.932 1383.53,232.643 1384.1,231.291 1384.66,230.357 1385.23,229.301 1385.8,229.352 1386.37,231.307 1386.94,232.363 1387.51,230.926 1388.07,231.878 1388.64,230.568 1389.21,231.334 1389.78,230.931 1390.35,230.706 1390.92,229.355 1391.48,231.365 1392.05,229.148 1392.62,228.121 1393.19,226.304 1393.76,227.601 1394.33,225.707 1394.89,225.124 1395.46,225.392 1396.03,225.581 1396.6,226.802 1397.17,226.014 1397.74,224.404 1398.3,225.833 1398.87,225.071 1399.44,226.574 1400.01,229.092 1400.58,228.381 1401.15,228.614 1401.71,227.77 1402.28,227.912 1402.85,229.301 1403.42,229.475 1403.99,228.503 1404.56,229.571 1405.13,229.677 1405.69,232.765 1406.26,232.478 1406.83,232.224 1407.4,232.103 1407.97,231.048 1408.54,230.076 1409.1,229.961 1409.67,231.19 1410.24,230.22 1410.81,232.28 1411.38,233.318 1411.95,232.204 1412.51,234.45 1413.08,234.082 1413.65,234.911 1414.22,233.701 1414.79,234.496 1415.36,236.306 1415.92,234.948 1416.49,234.567 1417.06,231.233 1417.63,232.42 1418.2,231.493 1418.77,233.419 1419.33,233.351 1419.9,231.993 1420.47,229.656 1421.04,228.662 1421.61,232.965 1422.18,233.579 1422.74,231.277 1423.31,232.136 1423.88,231.063 1424.45,230.817 1425.02,228.488 1425.59,228.532 1426.15,226.64 1426.72,227.126 1427.29,227.174 1427.86,227.196 1428.43,228.588 1429,229.581 1429.56,228.744 1430.13,230.915 1430.7,232.004 1431.27,233.285 1431.84,233.209 1432.41,232.93 1432.97,232.697 1433.54,231.63 1434.11,229.401 1434.68,229.642 1435.25,231.816 1435.82,233.696 1436.38,234.386 1436.95,234.201 1437.52,233.933 1438.09,232.563 1438.66,233.299 1439.23,234.173 1439.79,230.782 1440.36,229.665 1440.93,226.807 1441.5,228.031 1442.07,229.218 1442.64,230.295 1443.2,230.156 1443.77,230.138 1444.34,228.069 1444.91,229.07 1445.48,229.974 1446.05,228.888 1446.61,230.9 1447.18,231.89 1447.75,231.744 1448.32,229.553 1448.89,230.525 1449.46,232.664 1450.02,230.527 1450.59,232.647 1451.16,232.629 1451.73,231.45 1452.3,228.203 1452.87,227.027 1453.43,225.171 1454,224.606 1454.57,223.836 1455.14,224.448 1455.71,224.768 1456.28,224.152 1456.84,225.563 1457.41,225.803 1457.98,227.176 1458.55,229.439 1459.12,229.479 1459.69,230.739 1460.25,231.823 1460.82,229.465 1461.39,228.834 1461.96,228.957 1462.53,229.028 1463.1,231.4 1463.66,229.422 1464.23,227.654 1464.8,228.57 1465.37,229.8 1465.94,228.861 1466.51,228.067 1467.07,229.292 1467.64,228.395 1468.21,230.859 1468.78,231.829 1469.35,228.651 1469.92,227.785 1470.48,229.006 1471.05,228.168 1471.62,230.426 1472.19,230.514 1472.76,230.662 1473.33,230.778 1473.89,230.022 1474.46,231.054 1475.03,231.168 1475.6,232.246 1476.17,230.015 1476.74,234.187 1477.31,233.035 1477.87,232.869 1478.44,231.656 1479.01,232.727 1479.58,233.732 1480.15,232.444 1480.72,231.085 1481.28,232.179 1481.85,234.114 1482.42,235.896 1482.99,235.481 1483.56,234.007 1484.13,234.81 1484.69,234.541 1485.26,235.324 1485.83,234.067 1486.4,235.976 1486.97,235.53 1487.54,236.088 1488.1,233.674 1488.67,233.533 1489.24,235.383 1489.81,236.005 1490.38,235.807 1490.95,238.48 1491.51,236.597 1492.08,233.912 1492.65,233.336 1493.22,233.063 1493.79,232.75 1494.36,235.579 1494.92,235.176 1495.49,232.658 1496.06,231.43 1496.63,230.347 1497.2,231.233 1497.77,229.015 1498.33,226.767 1498.9,223.976 1499.47,223.273 1500.04,223.555 1500.61,224.102 1501.18,224.549 1501.74,225.24 1502.31,224.437 1502.88,225.868 1503.45,226.209 1504.02,227.641 1504.59,229.196 1505.15,231.421 1505.72,234.461 1506.29,232.245 1506.86,232.836 1507.43,232.704 1508,232.593 1508.56,232.326 1509.13,232.163 1509.7,232.101 1510.27,233.006 1510.84,230.674 1511.41,229.657 1511.97,230.841 1512.54,229.474 1513.11,231.543 1513.68,230.43 1514.25,231.454 1514.82,232.385 1515.38,232.108 1515.95,232.144 1516.52,231.073 1517.09,230.025 1517.66,230.166 1518.23,228.056 1518.79,229.076 1519.36,232.289 1519.93,231.093 1520.5,229.977 1521.07,230.016 1521.64,229.917 1522.2,231.801 1522.77,231.565 1523.34,232.402 1523.91,229.13 1524.48,230.153 1525.05,230.032 1525.61,231.189 1526.18,232.079 1526.75,232.935 1527.32,232.679 1527.89,230.347 1528.46,228.292 1529.02,229.194 1529.59,227.265 1530.16,227.572 1530.73,227.505 1531.3,228.674 1531.87,230.827 1532.43,230.713 1533,229.617 1533.57,230.839 1534.14,229.719 1534.71,231.852 1535.28,232.904 1535.84,229.402 1536.41,229.427 1536.98,227.59 1537.55,227.966 1538.12,227.3 1538.69,225.615 1539.25,225.927 1539.82,224.278 1540.39,223.766 1540.96,221.202 1541.53,219.895 1542.1,221.816 1542.66,221.734 1543.23,223.378 1543.8,225.081 1544.37,226.613 1544.94,229.099 1545.51,228.427 1546.08,226.543 1546.64,227.173 1547.21,227.344 1547.78,229.623 1548.35,229.671 1548.92,231.94 1549.49,233.033 1550.05,232.062 1550.62,232.134 1551.19,232.9 1551.76,231.778 1552.33,231.915 1552.9,233.973 1553.46,231.784 1554.03,233.691 1554.6,233.56 1555.17,229.248 1555.74,228.12 1556.31,228.418 1556.87,231.857 1557.44,235.033 1558.01,236.725 1558.58,238.337 1559.15,237.797 1559.72,233.098 1560.28,230.884 1560.85,231.827 1561.42,231.736 1561.99,232.992 1562.56,230.893 1563.13,231.91 1563.69,230.85 1564.26,233.084 1564.83,233.011 1565.4,235.049 1565.97,234.902 1566.54,234.839 1567.1,235.734 1567.67,237.251 1568.24,234.622 1568.81,233.259 1569.38,227.779 1569.95,228.964 1570.51,227.849 1571.08,227.929 1571.65,227.212 1572.22,227.373 1572.79,228.787 1573.36,230.025 1573.92,230.021 1574.49,230.253 1575.06,229.399 1575.63,230.571 1576.2,231.346 1576.77,232.475 1577.33,232.408 1577.9,229.355 1578.47,228.299 1579.04,227.306 1579.61,225.497 1580.18,225.826 1580.74,227.33 1581.31,229.57 1581.88,227.469 1582.45,227.835 1583.02,226.9 1583.59,226.295 1584.15,226.699 1584.72,226.066 1585.29,224.609 1585.86,225.155 1586.43,223.606 1587,226.401 1587.56,229.031 1588.13,228.162 1588.7,230.466 1589.27,229.803 1589.84,229.014 1590.41,228.035 1590.97,229.294 1591.54,230.409 1592.11,230.472 1592.68,233.69 1593.25,234.785 1593.82,233.542 1594.38,233.344 1594.95,234.269 1595.52,235.038 1596.09,234.777 1596.66,233.488 1597.23,233.601 1597.79,232.295 1598.36,233.32 1598.93,235.248 1599.5,233.897 1600.07,235.902 1600.64,234.396 1601.2,232.097 1601.77,230.904 1602.34,230.91 1602.91,232.025 1603.48,230.745 1604.05,230.779 1604.61,230.968 1605.18,230.82 1605.75,228.609 1606.32,227.513 1606.89,228.911 1607.46,227.797 1608.02,227.081 1608.59,225.314 1609.16,228.887 1609.73,228.945 1610.3,231.225 1610.87,232.645 1611.43,230.523 1612,230.537 1612.57,230.597 1613.14,230.403 1613.71,231.26 1614.28,230.176 1614.84,229.268 1615.41,229.685 1615.98,231.012 1616.55,230.008 1617.12,229.918 1617.69,231.848 1618.26,230.871 1618.82,233.07 1619.39,232.902 1619.96,233.691 1620.53,233.512 1621.1,232.474 1621.67,231.419 1622.23,232.342 1622.8,231.21 1623.37,231.218 1623.94,232.274 1624.51,234.008 1625.08,232.806 1625.64,232.59 1626.21,230.698 1626.78,229.813 1627.35,229.683 1627.92,232.76 1628.49,231.814 1629.05,229.801 1629.62,228.894 1630.19,229.759 1630.76,230.904 1631.33,230.844 1631.9,230.922 1632.46,232.97 1633.03,233.884 1633.6,236.932 1634.17,236.659 1634.74,235.541 1635.31,235.238 1635.87,236.124 1636.44,234.929 1637.01,233.759 1637.58,231.559 1638.15,232.398 1638.72,232.143 1639.28,233.025 1639.85,235.009 1640.42,232.747 1640.99,232.669 1641.56,232.582 1642.13,233.329 1642.69,231.009 1643.26,231.124 1643.83,231.031 1644.4,232.093 1644.97,231.981 1645.54,231.805 1646.1,228.483 1646.67,225.719 1647.24,226.966 1647.81,227.135 1648.38,227.556 1648.95,227.846 1649.51,227.837 1650.08,228.03 1650.65,230.053 1651.22,231.133 1651.79,234.281 1652.36,235.137 1652.92,236.865 1653.49,235.304 1654.06,234.847 1654.63,234.241 1655.2,233.006 1655.77,231.828 1656.33,231.662 1656.9,231.366 1657.47,231.376 1658.04,228.223 1658.61,226.263 1659.18,226.617 1659.74,226.903 1660.31,228.02 1660.88,225.936 1661.45,225.12 1662.02,227.453 1662.59,226.829 1663.15,227.026 1663.72,227.531 1664.29,228.928 1664.86,231.028 1665.43,231.22 1666,232.283 1666.56,235.257 1667.13,234.766 1667.7,232.311 1668.27,233.164 1668.84,235.243 1669.41,234.508 1669.97,235.297 1670.54,232.698 1671.11,232.67 1671.68,230.253 1672.25,228.26 1672.82,228.636 1673.38,228.681 1673.95,226.766 1674.52,227.783 1675.09,228.634 1675.66,227.861 1676.23,227.988 1676.79,228.201 1677.36,227.369 1677.93,227.713 1678.5,227.704 1679.07,227.956 1679.64,228.14 1680.2,228.416 1680.77,229.693 1681.34,229.543 1681.91,229.804 1682.48,231.854 1683.05,231.712 1683.61,233.587 1684.18,233.396 1684.75,232.131 1685.32,230.186 1685.89,231.377 1686.46,232.348 1687.02,233.267 1687.59,233.491 1688.16,233.312 1688.73,233.984 1689.3,233.758 1689.87,231.432 1690.44,229.404 1691,228.551 1691.57,228.767 1692.14,230.946 1692.71,232.113 1693.28,231.93 1693.85,232.936 1694.41,232.841 1694.98,234.631 1695.55,233.249 1696.12,229.914 1696.69,228.955 1697.26,228.944 1697.82,228.044 1698.39,228.38 1698.96,227.596 1699.53,226.578 1700.1,230.976 1700.67,230.021 1701.23,228.084 1701.8,227.387 1702.37,229.699 1702.94,228.615 1703.51,229.684 1704.08,229.569 1704.64,229.558 1705.21,228.685 1705.78,229.746 1706.35,228.91 1706.92,228.112 1707.49,229.488 1708.05,231.654 1708.62,231.334 1709.19,231.4 1709.76,230.251 1710.33,228.231 1710.9,229.199 1711.46,230.163 1712.03,230.069 1712.6,230.104 1713.17,227.939 1713.74,228.218 1714.31,228.514 1714.87,229.64 1715.44,229.636 1716.01,229.806 1716.58,229.985 1717.15,231.076 1717.72,231.084 1718.28,229.967 1718.85,228.02 1719.42,229.238 1719.99,229.221 1720.56,230.492 1721.13,230.85 1721.69,231.986 1722.26,228.817 1722.83,231.375 1723.4,232.662 1723.97,232.555 1724.54,231.559 1725.1,231.559 1725.67,232.434 1726.24,232.58 1726.81,231.408 1727.38,232.165 1727.95,233.19 1728.51,232.983 1729.08,231.843 1729.65,231.831 1730.22,231.589 1730.79,231.663 1731.36,233.567 1731.92,229.518 1732.49,228.923 1733.06,228.864 1733.63,227.136 1734.2,225.402 1734.77,225.785 1735.33,225.148 1735.9,226.35 1736.47,224.808 1737.04,225.397 1737.61,226.937 1738.18,227.482 1738.74,227.603 1739.31,229.015 1739.88,228.23 1740.45,226.53 1741.02,229.033 1741.59,231.298 1742.15,230.38 1742.72,230.631 1743.29,232.776 1743.86,231.792 1744.43,229.638 1745,229.118 1745.56,230.305 1746.13,231.43 1746.7,232.477 1747.27,233.417 1747.84,231.24 1748.41,231.184 1748.97,232.405 1749.54,231.232 1750.11,229.274 1750.68,229.575 1751.25,225.89 1751.82,226.295 1752.38,226.909 1752.95,226.459 1753.52,232.082 1754.09,234.116 1754.66,235.981 1755.23,235.894 1755.79,234.847 1756.36,235.916 1756.93,234.388 1757.5,236.598 1758.07,239.418 1758.64,237.832 1759.21,235.442 1759.77,235.202 1760.34,234.01 1760.91,234.841 1761.48,235.478 1762.05,237.14 1762.62,235.815 1763.18,236.522 1763.75,236.134 1764.32,234.714 1764.89,236.493 1765.46,236.997 1766.03,233.387 1766.59,236.195 1767.16,235.805 1767.73,231.348 1768.3,234.352 1768.87,233.971 1769.44,236.678 1770,236.342 1770.57,232.976 1771.14,232.902 1771.71,232.658 1772.28,232.262 1772.85,232.242 1773.41,234.241 1773.98,232.988 1774.55,233.506 1775.12,234.397 1775.69,233.224 1776.26,234.088 1776.82,232.942 1777.39,232.746 1777.96,231.574 1778.53,232.412 1779.1,233.206 1779.67,231.962 1780.23,232.667 1780.8,232.496 1781.37,232.406 1781.94,231.304 1782.51,231.176 1783.08,229.85 1783.64,226.808 1784.21,225.938 1784.78,229.357 1785.35,228.304 1785.92,227.412 1786.49,227.543 1787.05,227.726 1787.62,226.915 1788.19,227.924 1788.76,230.135 1789.33,231.144 1789.9,231.991 1790.46,231.836 1791.03,230.793 1791.6,230.526 1792.17,229.314 1792.74,229.206 1793.31,229.145 1793.87,230.027 1794.44,231.067 1795.01,230.975 1795.58,229.04 1796.15,231.043 1796.72,228.975 1797.28,228.166 1797.85,227.15 1798.42,228.403 1798.99,228.517 1799.56,226.47 1800.13,224.878 1800.69,223.237 1801.26,224.748 1801.83,226.067 1802.4,226.405 1802.97,225.743 1803.54,227.129 1804.1,229.318 1804.67,230.498 1805.24,230.571 1805.81,230.815 1806.38,230.892 1806.95,230.807 1807.51,231.082 1808.08,233.186 1808.65,233.074 1809.22,233.995 1809.79,233.806 1810.36,233.741 1810.92,233.427 1811.49,233.185 1812.06,234.05 1812.63,233.797 1813.2,232.286 1813.77,233.038 1814.33,233.73 1814.9,233.342 1815.47,233.229 1816.04,232.761 1816.61,232.733 1817.18,232.639 1817.74,232.414 1818.31,232.162 1818.88,231.162 1819.45,231.178 1820.02,229.965 1820.59,230.847 1821.15,230.907 1821.72,231.011 1822.29,231.983 1822.86,231.031 1823.43,231.85 1824,232.681 1824.56,232.245 1825.13,231.124 1825.7,229.899 1826.27,227.732 1826.84,229.91 1827.41,232.072 1827.97,235.052 1828.54,235.803 1829.11,235.152 1829.68,233.948 1830.25,232.751 1830.82,231.681 1831.39,230.407 1831.95,231.155 1832.52,230.034 1833.09,229.229 1833.66,225 1834.23,225.447 1834.8,225.878 1835.36,225.209 1835.93,229.592 1836.5,230.614 1837.07,232.542 1837.64,233.495 1838.21,233.16 1838.77,232.787 1839.34,232.728 1839.91,232.433 1840.48,230.119 1841.05,233.189 1841.62,231.925 1842.18,230.869 1842.75,229.698 1843.32,229.708 1843.89,227.513 1844.46,228.8 1845.03,229.956 1845.59,230.018 1846.16,229.127 1846.73,229.179 1847.3,229.415 1847.87,230.831 1848.44,233.046 1849,234.023 1849.57,233.689 1850.14,234.452 1850.71,233.925 1851.28,232.706 1851.85,232.616 1852.41,233.463 1852.98,234.508 1853.55,233.317 1854.12,232.047 1854.69,235.011 1855.26,232.47 1855.82,233.227 1856.39,232.947 1856.96,235.787 1857.53,238.406 1858.1,234.481 1858.67,234.216 1859.23,234.71 1859.8,234.248 1860.37,232.696 1860.94,232.369 1861.51,231.109 1862.08,228.934 1862.64,227.927 1863.21,227.881 1863.78,226.713 1864.35,227.182 1864.92,227.303 1865.49,227.54 1866.05,228.596 1866.62,231.849 1867.19,231.599 1867.76,231.531 1868.33,230.36 1868.9,233.15 1869.46,234.981 1870.03,232.723 1870.6,232.279 1871.17,231.146 1871.74,231.015 1872.31,230.925 1872.87,226.579 1873.44,227.72 1874.01,226.819 1874.58,226.079 1875.15,226.349 1875.72,224.499 1876.28,224.993 1876.85,225.268 1877.42,225.413 1877.99,225.586 1878.56,228.791 1879.13,228.946 1879.69,230.108 1880.26,231.091 1880.83,230.949 1881.4,229.783 1881.97,230.737 1882.54,232.634 1883.1,233.34 1883.67,233.061 1884.24,231.59 1884.81,230.327 1885.38,230.2 1885.95,230.137 1886.51,233.271 1887.08,231.695 1887.65,230.385 1888.22,230.437 1888.79,229.434 1889.36,226.415 1889.92,228.563 1890.49,228.704 1891.06,227.624 1891.63,229.009 1892.2,230.254 1892.77,228.115 1893.33,228.155 1893.9,228.074 1894.47,229.306 1895.04,228.161 1895.61,228.229 1896.18,227.462 1896.74,225.76 1897.31,226.232 1897.88,227.415 1898.45,227.711 1899.02,227.993 1899.59,228.513 1900.16,228.738 1900.72,230.949 1901.29,230.92 1901.86,227.808 1902.43,229.949 1903,231.032 1903.57,231.978 1904.13,230.961 1904.7,232.08 1905.27,230.86 1905.84,229.973 1906.41,230.989 1906.98,229.984 1907.54,229.122 1908.11,229.072 1908.68,229.335 1909.25,228.37 1909.82,229.375 1910.39,226.412 1910.95,227.781 1911.52,230.022 1912.09,231.99 1912.66,231.848 1913.23,232.783 1913.8,235.673 1914.36,235.385 1914.93,232.797 1915.5,232.57 1916.07,231.281 1916.64,232.132 1917.21,229.817 1917.77,230.149 1918.34,231.056 1918.91,231.892 1919.48,231.636 1920.05,230.476 1920.62,231.631 1921.18,231.638 1921.75,232.549 1922.32,234.625 1922.89,235.284 1923.46,234.868 1924.03,231.639 1924.59,229.416 1925.16,228.396 1925.73,228.706 1926.3,231.679 1926.87,234.039 1927.44,233.724 1928,232.687 1928.57,233.408 1929.14,233.233 1929.71,232.988 1930.28,231.618 1930.85,230.443 1931.41,228.255 1931.98,228.262 1932.55,230.182 1933.12,230.263 1933.69,231.607 1934.26,231.824 1934.82,229.428 1935.39,228.413 1935.96,230.531 1936.53,231.625 1937.1,232.676 1937.67,233.602 1938.23,232.295 1938.8,232.267 1939.37,234.094 1939.94,233.735 1940.51,234.489 1941.08,235.081 1941.64,234.68 1942.21,234.247 1942.78,234.05 1943.35,235.811 1943.92,235.297 1944.49,235.874 1945.05,233.517 1945.62,233.197 1946.19,230.917 1946.76,230.709 1947.33,230.468 1947.9,229.35 1948.46,228.226 1949.03,228.359 1949.6,228.404 1950.17,227.615 1950.74,227.5 1951.31,226.807 1951.87,227.194 1952.44,228.324 1953.01,228.418 1953.58,224.455 1954.15,225.037 1954.72,225.342 1955.28,225.884 1955.85,227.197 1956.42,226.498 1956.99,230.004 1957.56,230.155 1958.13,230.148 1958.69,229.04 1959.26,229.171 1959.83,229.518 1960.4,230.425 1960.97,230.562 1961.54,230.722 1962.1,230.851 1962.67,232.972 1963.24,232.633 1963.81,231.396 1964.38,232.577 1964.95,231.298 1965.51,232.283 1966.08,229.168 1966.65,230.411 1967.22,229.463 1967.79,229.529 1968.36,229.574 1968.92,229.679 1969.49,230.683 1970.06,231.745 1970.63,231.583 1971.2,231.309 1971.77,231.482 1972.34,227.424 1972.9,226.668 1973.47,225.75 1974.04,225.365 1974.61,224.736 1975.18,223.442 1975.75,221.917 1976.31,222.544 1976.88,224.326 1977.45,224.778 1978.02,224.972 1978.59,225.522 1979.16,228.107 1979.72,229.411 1980.29,230.693 1980.86,230.864 1981.43,231.157 1982,230.136 1982.57,231.163 1983.13,230.329 1983.7,230.574 1984.27,230.684 1984.84,232.829 1985.41,232.724 1985.98,232.721 1986.54,232.7 1987.11,235.687 1987.68,235.383 1988.25,235.146 1988.82,233.829 1989.39,233.779 1989.95,232.607 1990.52,232.454 1991.09,232.356 1991.66,234.49 1992.23,233.31 1992.8,233.225 1993.36,234.105 1993.93,230.845 1994.5,230.863 1995.07,228.877 1995.64,228.175 1996.21,229.457 1996.77,230.625 1997.34,229.515 1997.91,229.53 1998.48,229.815 1999.05,230.888 1999.62,229.961 2000.18,229.103 2000.75,230.268 2001.32,230.367 2001.89,230.417 2002.46,234.735 2003.03,236.737 2003.59,236.298 2004.16,235.033 2004.73,234.421 2005.3,234.092 2005.87,234.919 2006.44,232.705 2007,231.798 2007.57,231.578 2008.14,231.798 2008.71,230.425 2009.28,232.639 2009.85,232.253 2010.41,233.485 2010.98,233.326 2011.55,232.002 2012.12,230.745 2012.69,230.838 2013.26,230.733 2013.82,230.761 2014.39,227.758 2014.96,228.813 2015.53,229.903 2016.1,228.946 2016.67,227.131 2017.23,228.399 2017.8,229.393 2018.37,228.537 2018.94,226.696 2019.51,226.823 2020.08,226.836 2020.64,226.112 2021.21,225.211 2021.78,224.751 2022.35,225.148 2022.92,224.526 2023.49,226.053 2024.05,227.283 2024.62,228.636 2025.19,228.941 2025.76,226.937 2026.33,228.22 2026.9,225.154 2027.46,224.588 2028.03,225.334 2028.6,226.934 2029.17,228.466 2029.74,227.858 2030.31,227.155 2030.87,227.724 2031.44,228.062 2032.01,229.329 2032.58,230.593 2033.15,230.908 2033.72,229.004 2034.28,228.177 2034.85,228.391 2035.42,225.383 2035.99,224.874 2036.56,225.205 2037.13,226.715 2037.69,227.146 2038.26,226.334 2038.83,226.682 2039.4,227.996 2039.97,229.417 2040.54,229.735 2041.11,232.031 2041.67,232.217 2042.24,232.239 2042.81,230.232 2043.38,229.208 2043.95,230.705 2044.52,231.811 2045.08,229.889 2045.65,230.059 2046.22,230.355 2046.79,230.566 2047.36,231.977 2047.93,234.033 2048.49,234.019 2049.06,233.909 2049.63,233.93 2050.2,233.076 2050.77,231.882 2051.34,233.083 2051.9,231.984 2052.47,231.947 2053.04,232.018 2053.61,233.087 2054.18,233.957 2054.75,233.536 2055.31,232.455 2055.88,231.541 2056.45,231.633 2057.02,230.726 2057.59,232.873 2058.16,229.791 2058.72,229.043 2059.29,230.464 2059.86,230.575 2060.43,231.821 2061,233.928 2061.57,233.83 2062.13,234.708 2062.7,235.48 2063.27,237.365 2063.84,238.937 2064.41,239.383 2064.98,239.872 2065.54,239.274 2066.11,240.836 2066.68,241.195 2067.25,240.406 2067.82,241.893 2068.39,240.149 2068.95,238.49 2069.52,239.823 2070.09,238.047 2070.66,234.531 2071.23,233.014 2071.8,232.752 2072.36,232.397 2072.93,232.239 2073.5,231.842 2074.07,232.807 2074.64,232.419 2075.21,232.035 2075.77,231.704 2076.34,230.486 2076.91,231.559 2077.48,232.615 2078.05,231.238 2078.62,228.184 2079.18,229.406 2079.75,230.356 2080.32,229.364 2080.89,230.583 2081.46,229.404 2082.03,230.367 2082.59,229.039 2083.16,228.077 2083.73,229.124 2084.3,229.939 2084.87,228.976 2085.44,229.063 2086,230.138 2086.57,231.215 2087.14,229.054 2087.71,229.108 2088.28,227.95 2088.85,228.07 2089.41,226.342 2089.98,224.672 2090.55,224.189 2091.12,228.675 2091.69,227.809 2092.26,225.937 2092.82,226.35 2093.39,228.546 2093.96,226.839 2094.53,231.592 2095.1,231.598 2095.67,229.533 2096.23,227.689 2096.8,228.211 2097.37,228.596 2097.94,228.816 2098.51,227.826 2099.08,230.334 2099.64,229.518 2100.21,232.105 2100.78,231.006 2101.35,230.173 2101.92,230.298 2102.49,230.399 2103.05,232.76 2103.62,232.584 2104.19,231.463 2104.76,233.365 2105.33,235.284 2105.9,237.27 2106.46,235.82 2107.03,235.324 2107.6,236.134 2108.17,235.787 2108.74,233.463 2109.31,233.148 2109.87,229.927 2110.44,231.909 2111.01,234.98 2111.58,236.575 2112.15,234.368 2112.72,234.02 2113.29,233.786 2113.85,233.57 2114.42,232.287 2114.99,234.299 2115.56,232.856 2116.13,232.413 2116.7,233.199 2117.26,232.754 2117.83,233.786 2118.4,233.389 2118.97,231.959 2119.54,232.802 2120.11,231.587 2120.67,230.294 2121.24,230.066 2121.81,229.105 2122.38,229.184 2122.95,229.284 2123.52,228.364 2124.08,229.655 2124.65,230.782 2125.22,231.598 2125.79,230.251 2126.36,230.17 2126.93,230.208 2127.49,230.236 2128.06,229.325 2128.63,228.239 2129.2,228.268 2129.77,228.686 2130.34,228.86 2130.9,227.831 2131.47,226.795 2132.04,224.921 2132.61,227.441 2133.18,225.648 2133.75,226.058 2134.31,225.299 2134.88,226.813 2135.45,228.986 2136.02,230.042 2136.59,228.831 2137.16,228.995 2137.72,227.042 2138.29,228.46 2138.86,228.612 2139.43,227.812 2140,226.882 2140.57,227.038 2141.13,226.389 2141.7,226.615 2142.27,224.928 2142.84,226.333 2143.41,228.691 2143.98,227.092 2144.54,227.241 2145.11,227.524 2145.68,229.832 2146.25,231.078 2146.82,231.399 2147.39,234.533 2147.95,232.164 2148.52,233.078 2149.09,232.811 2149.66,230.784 2150.23,232 2150.8,229.875 2151.36,232.935 2151.93,231.88 2152.5,230.655 2153.07,230.797 2153.64,232.858 2154.21,232.617 2154.77,233.408 2155.34,233.321 2155.91,233.09 2156.48,235.057 2157.05,234.773 2157.62,234.613 2158.18,234.177 2158.75,233.983 2159.32,232.754 2159.89,232.457 \"/>\n<path clip-path=\"url(#clip770)\" d=\"M1625.75 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1625.75 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1625.75,1245.03 2150.8,1245.03 2150.8,1089.51 1625.75,1089.51 1625.75,1245.03 \"/>\n<polyline clip-path=\"url(#clip770)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1645.83,1141.35 1766.28,1141.35 \"/>\n<path clip-path=\"url(#clip770)\" d=\"M1793.76 1125.34 L1793.76 1132.71 L1802.53 1132.71 L1802.53 1136.02 L1793.76 1136.02 L1793.76 1150.09 Q1793.76 1153.26 1794.61 1154.16 Q1795.49 1155.07 1798.16 1155.07 L1802.53 1155.07 L1802.53 1158.63 L1798.16 1158.63 Q1793.23 1158.63 1791.35 1156.8 Q1789.48 1154.95 1789.48 1150.09 L1789.48 1136.02 L1786.35 1136.02 L1786.35 1132.71 L1789.48 1132.71 L1789.48 1125.34 L1793.76 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1819.92 1145.6 Q1814.75 1145.6 1812.76 1146.78 Q1810.77 1147.96 1810.77 1150.81 Q1810.77 1153.08 1812.25 1154.42 Q1813.76 1155.74 1816.33 1155.74 Q1819.87 1155.74 1822 1153.24 Q1824.15 1150.72 1824.15 1146.55 L1824.15 1145.6 L1819.92 1145.6 M1828.41 1143.84 L1828.41 1158.63 L1824.15 1158.63 L1824.15 1154.7 Q1822.69 1157.06 1820.52 1158.19 Q1818.34 1159.3 1815.19 1159.3 Q1811.21 1159.3 1808.85 1157.08 Q1806.51 1154.84 1806.51 1151.09 Q1806.51 1146.71 1809.43 1144.49 Q1812.37 1142.27 1818.18 1142.27 L1824.15 1142.27 L1824.15 1141.85 Q1824.15 1138.91 1822.21 1137.31 Q1820.29 1135.69 1816.79 1135.69 Q1814.57 1135.69 1812.46 1136.22 Q1810.36 1136.76 1808.41 1137.82 L1808.41 1133.89 Q1810.75 1132.98 1812.95 1132.54 Q1815.15 1132.08 1817.23 1132.08 Q1822.86 1132.08 1825.63 1135 Q1828.41 1137.91 1828.41 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1852.21 1136.69 Q1851.49 1136.27 1850.63 1136.09 Q1849.8 1135.88 1848.78 1135.88 Q1845.17 1135.88 1843.23 1138.24 Q1841.3 1140.58 1841.3 1144.97 L1841.3 1158.63 L1837.02 1158.63 L1837.02 1132.71 L1841.3 1132.71 L1841.3 1136.73 Q1842.65 1134.37 1844.8 1133.24 Q1846.95 1132.08 1850.03 1132.08 Q1850.47 1132.08 1851 1132.15 Q1851.54 1132.2 1852.18 1132.31 L1852.21 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1872.9 1145.37 Q1872.9 1140.74 1870.98 1138.19 Q1869.08 1135.65 1865.63 1135.65 Q1862.21 1135.65 1860.29 1138.19 Q1858.39 1140.74 1858.39 1145.37 Q1858.39 1149.97 1860.29 1152.52 Q1862.21 1155.07 1865.63 1155.07 Q1869.08 1155.07 1870.98 1152.52 Q1872.9 1149.97 1872.9 1145.37 M1877.16 1155.41 Q1877.16 1162.03 1874.22 1165.25 Q1871.28 1168.49 1865.22 1168.49 Q1862.97 1168.49 1860.98 1168.15 Q1858.99 1167.82 1857.11 1167.13 L1857.11 1162.98 Q1858.99 1164 1860.82 1164.49 Q1862.65 1164.97 1864.54 1164.97 Q1868.73 1164.97 1870.82 1162.78 Q1872.9 1160.6 1872.9 1156.18 L1872.9 1154.07 Q1871.58 1156.36 1869.52 1157.5 Q1867.46 1158.63 1864.59 1158.63 Q1859.82 1158.63 1856.91 1155 Q1853.99 1151.36 1853.99 1145.37 Q1853.99 1139.35 1856.91 1135.72 Q1859.82 1132.08 1864.59 1132.08 Q1867.46 1132.08 1869.52 1133.22 Q1871.58 1134.35 1872.9 1136.64 L1872.9 1132.71 L1877.16 1132.71 L1877.16 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1908.11 1144.6 L1908.11 1146.69 L1888.53 1146.69 Q1888.8 1151.09 1891.17 1153.4 Q1893.55 1155.69 1897.79 1155.69 Q1900.24 1155.69 1902.53 1155.09 Q1904.85 1154.49 1907.11 1153.28 L1907.11 1157.31 Q1904.82 1158.28 1902.42 1158.79 Q1900.01 1159.3 1897.53 1159.3 Q1891.33 1159.3 1887.69 1155.69 Q1884.08 1152.08 1884.08 1145.92 Q1884.08 1139.56 1887.51 1135.83 Q1890.96 1132.08 1896.79 1132.08 Q1902.02 1132.08 1905.05 1135.46 Q1908.11 1138.82 1908.11 1144.6 M1903.85 1143.35 Q1903.8 1139.86 1901.88 1137.78 Q1899.98 1135.69 1896.84 1135.69 Q1893.27 1135.69 1891.12 1137.71 Q1888.99 1139.72 1888.67 1143.38 L1903.85 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1919.31 1125.34 L1919.31 1132.71 L1928.09 1132.71 L1928.09 1136.02 L1919.31 1136.02 L1919.31 1150.09 Q1919.31 1153.26 1920.17 1154.16 Q1921.05 1155.07 1923.71 1155.07 L1928.09 1155.07 L1928.09 1158.63 L1923.71 1158.63 Q1918.78 1158.63 1916.91 1156.8 Q1915.03 1154.95 1915.03 1150.09 L1915.03 1136.02 L1911.91 1136.02 L1911.91 1132.71 L1915.03 1132.71 L1915.03 1125.34 L1919.31 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1953.39 1166.5 L1953.39 1169.81 L1928.76 1169.81 L1928.76 1166.5 L1953.39 1166.5 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip770)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1645.83,1193.19 1766.28,1193.19 \"/>\n<path clip-path=\"url(#clip770)\" d=\"M1808.06 1194.82 L1808.06 1210.47 L1803.8 1210.47 L1803.8 1194.96 Q1803.8 1191.28 1802.37 1189.45 Q1800.93 1187.62 1798.06 1187.62 Q1794.61 1187.62 1792.62 1189.82 Q1790.63 1192.02 1790.63 1195.82 L1790.63 1210.47 L1786.35 1210.47 L1786.35 1184.55 L1790.63 1184.55 L1790.63 1188.57 Q1792.16 1186.24 1794.22 1185.08 Q1796.3 1183.92 1799.01 1183.92 Q1803.48 1183.92 1805.77 1186.7 Q1808.06 1189.45 1808.06 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1826.61 1187.53 Q1823.18 1187.53 1821.19 1190.22 Q1819.2 1192.88 1819.2 1197.53 Q1819.2 1202.18 1821.17 1204.87 Q1823.16 1207.53 1826.61 1207.53 Q1830.01 1207.53 1832 1204.85 Q1833.99 1202.16 1833.99 1197.53 Q1833.99 1192.93 1832 1190.24 Q1830.01 1187.53 1826.61 1187.53 M1826.61 1183.92 Q1832.16 1183.92 1835.33 1187.53 Q1838.5 1191.14 1838.5 1197.53 Q1838.5 1203.9 1835.33 1207.53 Q1832.16 1211.14 1826.61 1211.14 Q1821.03 1211.14 1817.86 1207.53 Q1814.71 1203.9 1814.71 1197.53 Q1814.71 1191.14 1817.86 1187.53 Q1821.03 1183.92 1826.61 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1860.59 1188.53 Q1859.87 1188.11 1859.01 1187.93 Q1858.18 1187.72 1857.16 1187.72 Q1853.55 1187.72 1851.61 1190.08 Q1849.68 1192.42 1849.68 1196.81 L1849.68 1210.47 L1845.4 1210.47 L1845.4 1184.55 L1849.68 1184.55 L1849.68 1188.57 Q1851.03 1186.21 1853.18 1185.08 Q1855.33 1183.92 1858.41 1183.92 Q1858.85 1183.92 1859.38 1183.99 Q1859.92 1184.04 1860.56 1184.15 L1860.59 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip770)\" d=\"M1884.41 1189.52 Q1886 1186.65 1888.23 1185.29 Q1890.45 1183.92 1893.46 1183.92 Q1897.51 1183.92 1899.71 1186.77 Q1901.91 1189.59 1901.91 1194.82 L1901.91 1210.47 L1897.62 1210.47 L1897.62 1194.96 Q1897.62 1191.24 1896.3 1189.43 Q1894.98 1187.62 1892.28 1187.62 Q1888.97 1187.62 1887.04 1189.82 Q1885.12 1192.02 1885.12 1195.82 L1885.12 1210.47 L1880.84 1210.47 L1880.84 1194.96 Q1880.84 1191.21 1879.52 1189.43 Q1878.2 1187.62 1875.45 1187.62 Q1872.18 1187.62 1870.26 1189.85 Q1868.34 1192.05 1868.34 1195.82 L1868.34 1210.47 L1864.06 1210.47 L1864.06 1184.55 L1868.34 1184.55 L1868.34 1188.57 Q1869.8 1186.19 1871.84 1185.06 Q1873.87 1183.92 1876.67 1183.92 Q1879.5 1183.92 1881.47 1185.36 Q1883.46 1186.79 1884.41 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.033 ¬± 0.017\n  with uncertainty of ¬± 0.0010850630944927691\n  from 125 blocks after 4 transformations (k = 5).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01556 ¬± (0.00341905, 0.00335035) (MC)\n  95% confidence interval: [-4.02217, -4.00893]) (MC)\n  linear error propagation: -4.01585 ¬± 0.00346403\n  |Œ¥_y| = |0.00229388| (‚â§ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.01555633825644, val_l = 0.006612481759232125, val_u = 0.006621458444064032)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.step, df.shift, ylabel=\"energy\", xlabel=\"step\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.step[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.step[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip800\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip800)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip801\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip800)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip802\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1237.32 1391.71 L1237.32 1397.25 Q1234.84 1395.98 1232.17 1395.34 Q1229.49 1394.71 1226.63 1394.71 Q1222.27 1394.71 1220.07 1396.04 Q1217.91 1397.38 1217.91 1400.05 Q1217.91 1402.09 1219.47 1403.27 Q1221.03 1404.41 1225.74 1405.46 L1227.74 1405.91 Q1233.98 1407.25 1236.59 1409.7 Q1239.23 1412.12 1239.23 1416.48 Q1239.23 1421.44 1235.29 1424.34 Q1231.37 1427.23 1224.5 1427.23 Q1221.63 1427.23 1218.51 1426.66 Q1215.42 1426.12 1211.99 1425.01 L1211.99 1418.96 Q1215.23 1420.65 1218.38 1421.51 Q1221.54 1422.33 1224.62 1422.33 Q1228.76 1422.33 1230.99 1420.93 Q1233.22 1419.5 1233.22 1416.92 Q1233.22 1414.54 1231.59 1413.26 Q1230 1411.99 1224.56 1410.81 L1222.52 1410.33 Q1217.08 1409.19 1214.66 1406.83 Q1212.24 1404.45 1212.24 1400.31 Q1212.24 1395.28 1215.81 1392.54 Q1219.37 1389.8 1225.93 1389.8 Q1229.17 1389.8 1232.04 1390.28 Q1234.9 1390.76 1237.32 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1254.35 1380.54 L1254.35 1390.66 L1266.41 1390.66 L1266.41 1395.22 L1254.35 1395.22 L1254.35 1414.57 Q1254.35 1418.93 1255.53 1420.17 Q1256.74 1421.41 1260.4 1421.41 L1266.41 1421.41 L1266.41 1426.31 L1260.4 1426.31 Q1253.62 1426.31 1251.04 1423.8 Q1248.46 1421.25 1248.46 1414.57 L1248.46 1395.22 L1244.17 1395.22 L1244.17 1390.66 L1248.46 1390.66 L1248.46 1380.54 L1254.35 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1304.61 1407.02 L1304.61 1409.89 L1277.68 1409.89 Q1278.06 1415.94 1281.31 1419.12 Q1284.59 1422.27 1290.41 1422.27 Q1293.79 1422.27 1296.94 1421.44 Q1300.12 1420.61 1303.24 1418.96 L1303.24 1424.5 Q1300.09 1425.83 1296.78 1426.53 Q1293.47 1427.23 1290.06 1427.23 Q1281.53 1427.23 1276.54 1422.27 Q1271.57 1417.3 1271.57 1408.84 Q1271.57 1400.08 1276.28 1394.96 Q1281.02 1389.8 1289.04 1389.8 Q1296.24 1389.8 1300.41 1394.45 Q1304.61 1399.07 1304.61 1407.02 M1298.75 1405.3 Q1298.69 1400.5 1296.05 1397.63 Q1293.44 1394.77 1289.11 1394.77 Q1284.21 1394.77 1281.25 1397.54 Q1278.32 1400.31 1277.87 1405.34 L1298.75 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1319.89 1420.96 L1319.89 1439.87 L1314 1439.87 L1314 1390.66 L1319.89 1390.66 L1319.89 1396.07 Q1321.73 1392.89 1324.53 1391.36 Q1327.37 1389.8 1331.28 1389.8 Q1337.77 1389.8 1341.82 1394.96 Q1345.89 1400.12 1345.89 1408.52 Q1345.89 1416.92 1341.82 1422.08 Q1337.77 1427.23 1331.28 1427.23 Q1327.37 1427.23 1324.53 1425.71 Q1321.73 1424.15 1319.89 1420.96 M1339.81 1408.52 Q1339.81 1402.06 1337.14 1398.4 Q1334.5 1394.71 1329.85 1394.71 Q1325.2 1394.71 1322.53 1398.4 Q1319.89 1402.06 1319.89 1408.52 Q1319.89 1414.98 1322.53 1418.67 Q1325.2 1422.33 1329.85 1422.33 Q1334.5 1422.33 1337.14 1418.67 Q1339.81 1414.98 1339.81 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1143.7 2211.02,1143.7 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,973.665 2211.02,973.665 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,803.626 2211.02,803.626 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,633.587 2211.02,633.587 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,463.548 2211.02,463.548 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,293.51 2211.02,293.51 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1143.7 365.751,1143.7 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,973.665 365.751,973.665 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,803.626 365.751,803.626 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,633.587 365.751,633.587 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,463.548 365.751,463.548 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,293.51 365.751,293.51 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M298.909 1129.5 Q295.298 1129.5 293.469 1133.07 Q291.664 1136.61 291.664 1143.74 Q291.664 1150.85 293.469 1154.41 Q295.298 1157.95 298.909 1157.95 Q302.543 1157.95 304.349 1154.41 Q306.177 1150.85 306.177 1143.74 Q306.177 1136.61 304.349 1133.07 Q302.543 1129.5 298.909 1129.5 M298.909 1125.8 Q304.719 1125.8 307.775 1130.41 Q310.853 1134.99 310.853 1143.74 Q310.853 1152.47 307.775 1157.07 Q304.719 1161.66 298.909 1161.66 Q293.099 1161.66 290.02 1157.07 Q286.964 1152.47 286.964 1143.74 Q286.964 1134.99 290.02 1130.41 Q293.099 1125.8 298.909 1125.8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M259.557 987.01 L267.196 987.01 L267.196 960.644 L258.886 962.311 L258.886 958.052 L267.15 956.385 L271.826 956.385 L271.826 987.01 L279.465 987.01 L279.465 990.945 L259.557 990.945 L259.557 987.01 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M298.909 959.464 Q295.298 959.464 293.469 963.029 Q291.664 966.57 291.664 973.7 Q291.664 980.806 293.469 984.371 Q295.298 987.913 298.909 987.913 Q302.543 987.913 304.349 984.371 Q306.177 980.806 306.177 973.7 Q306.177 966.57 304.349 963.029 Q302.543 959.464 298.909 959.464 M298.909 955.76 Q304.719 955.76 307.775 960.367 Q310.853 964.95 310.853 973.7 Q310.853 982.427 307.775 987.033 Q304.719 991.616 298.909 991.616 Q293.099 991.616 290.02 987.033 Q286.964 982.427 286.964 973.7 Q286.964 964.95 290.02 960.367 Q293.099 955.76 298.909 955.76 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M262.775 816.971 L279.094 816.971 L279.094 820.906 L257.15 820.906 L257.15 816.971 Q259.812 814.216 264.395 809.587 Q269.002 804.934 270.182 803.591 Q272.428 801.068 273.307 799.332 Q274.21 797.573 274.21 795.883 Q274.21 793.129 272.266 791.392 Q270.344 789.656 267.242 789.656 Q265.043 789.656 262.59 790.42 Q260.159 791.184 257.381 792.735 L257.381 788.013 Q260.205 786.879 262.659 786.3 Q265.113 785.721 267.15 785.721 Q272.52 785.721 275.715 788.406 Q278.909 791.092 278.909 795.582 Q278.909 797.712 278.099 799.633 Q277.312 801.531 275.205 804.124 Q274.627 804.795 271.525 808.013 Q268.423 811.207 262.775 816.971 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M298.909 789.425 Q295.298 789.425 293.469 792.99 Q291.664 796.531 291.664 803.661 Q291.664 810.767 293.469 814.332 Q295.298 817.874 298.909 817.874 Q302.543 817.874 304.349 814.332 Q306.177 810.767 306.177 803.661 Q306.177 796.531 304.349 792.99 Q302.543 789.425 298.909 789.425 M298.909 785.721 Q304.719 785.721 307.775 790.328 Q310.853 794.911 310.853 803.661 Q310.853 812.388 307.775 816.994 Q304.719 821.577 298.909 821.577 Q293.099 821.577 290.02 816.994 Q286.964 812.388 286.964 803.661 Q286.964 794.911 290.02 790.328 Q293.099 785.721 298.909 785.721 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M272.914 632.233 Q276.27 632.951 278.145 635.219 Q280.043 637.488 280.043 640.821 Q280.043 645.937 276.525 648.738 Q273.006 651.539 266.525 651.539 Q264.349 651.539 262.034 651.099 Q259.742 650.682 257.289 649.826 L257.289 645.312 Q259.233 646.446 261.548 647.025 Q263.863 647.603 266.386 647.603 Q270.784 647.603 273.076 645.867 Q275.39 644.131 275.39 640.821 Q275.39 637.766 273.238 636.053 Q271.108 634.316 267.289 634.316 L263.261 634.316 L263.261 630.474 L267.474 630.474 Q270.923 630.474 272.752 629.108 Q274.58 627.719 274.58 625.127 Q274.58 622.465 272.682 621.053 Q270.807 619.617 267.289 619.617 Q265.367 619.617 263.168 620.034 Q260.969 620.451 258.33 621.33 L258.33 617.164 Q260.992 616.423 263.307 616.053 Q265.645 615.682 267.705 615.682 Q273.029 615.682 276.131 618.113 Q279.233 620.52 279.233 624.641 Q279.233 627.511 277.59 629.502 Q275.946 631.469 272.914 632.233 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M298.909 619.386 Q295.298 619.386 293.469 622.951 Q291.664 626.492 291.664 633.622 Q291.664 640.728 293.469 644.293 Q295.298 647.835 298.909 647.835 Q302.543 647.835 304.349 644.293 Q306.177 640.728 306.177 633.622 Q306.177 626.492 304.349 622.951 Q302.543 619.386 298.909 619.386 M298.909 615.682 Q304.719 615.682 307.775 620.289 Q310.853 624.872 310.853 633.622 Q310.853 642.349 307.775 646.955 Q304.719 651.539 298.909 651.539 Q293.099 651.539 290.02 646.955 Q286.964 642.349 286.964 633.622 Q286.964 624.872 290.02 620.289 Q293.099 615.682 298.909 615.682 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M271.594 450.342 L259.789 468.791 L271.594 468.791 L271.594 450.342 M270.367 446.268 L276.247 446.268 L276.247 468.791 L281.177 468.791 L281.177 472.68 L276.247 472.68 L276.247 480.828 L271.594 480.828 L271.594 472.68 L255.992 472.68 L255.992 468.166 L270.367 446.268 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M298.909 449.347 Q295.298 449.347 293.469 452.912 Q291.664 456.454 291.664 463.583 Q291.664 470.69 293.469 474.254 Q295.298 477.796 298.909 477.796 Q302.543 477.796 304.349 474.254 Q306.177 470.69 306.177 463.583 Q306.177 456.454 304.349 452.912 Q302.543 449.347 298.909 449.347 M298.909 445.643 Q304.719 445.643 307.775 450.25 Q310.853 454.833 310.853 463.583 Q310.853 472.31 307.775 476.916 Q304.719 481.5 298.909 481.5 Q293.099 481.5 290.02 476.916 Q286.964 472.31 286.964 463.583 Q286.964 454.833 290.02 450.25 Q293.099 445.643 298.909 445.643 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M258.793 276.23 L277.15 276.23 L277.15 280.165 L263.076 280.165 L263.076 288.637 Q264.094 288.29 265.113 288.128 Q266.131 287.942 267.15 287.942 Q272.937 287.942 276.316 291.114 Q279.696 294.285 279.696 299.702 Q279.696 305.28 276.224 308.382 Q272.752 311.461 266.432 311.461 Q264.256 311.461 261.988 311.09 Q259.742 310.72 257.335 309.979 L257.335 305.28 Q259.418 306.415 261.641 306.97 Q263.863 307.526 266.34 307.526 Q270.344 307.526 272.682 305.419 Q275.02 303.313 275.02 299.702 Q275.02 296.091 272.682 293.984 Q270.344 291.878 266.34 291.878 Q264.465 291.878 262.59 292.294 Q260.738 292.711 258.793 293.591 L258.793 276.23 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M298.909 279.308 Q295.298 279.308 293.469 282.873 Q291.664 286.415 291.664 293.544 Q291.664 300.651 293.469 304.215 Q295.298 307.757 298.909 307.757 Q302.543 307.757 304.349 304.215 Q306.177 300.651 306.177 293.544 Q306.177 286.415 304.349 282.873 Q302.543 279.308 298.909 279.308 M298.909 275.605 Q304.719 275.605 307.775 280.211 Q310.853 284.794 310.853 293.544 Q310.853 302.271 307.775 306.878 Q304.719 311.461 298.909 311.461 Q293.099 311.461 290.02 306.878 Q286.964 302.271 286.964 293.544 Q286.964 284.794 290.02 280.211 Q293.099 275.605 298.909 275.605 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip802)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1018.41 400.199,903.312 400.786,797.701 401.372,700.943 401.958,612.451 402.545,652.097 403.131,678.562 403.718,599.165 404.304,526.799 404.891,463.884 405.477,405.511 406.063,352.796 406.65,385.559 407.236,336.965 407.823,293.37 408.409,254.448 408.995,219.895 409.582,306.392 410.168,275.015 410.755,345.942 411.341,320.174 411.927,296.197 412.514,276.2 413.1,333.023 413.687,349.709 414.273,331.185 414.86,314.332 415.446,300.119 416.032,290.243 416.619,280.659 417.205,323.61 417.792,316.939 418.378,311.712 418.964,329.041 419.551,324.758 420.137,323.501 420.724,323.183 421.31,340.387 421.896,374.07 422.483,378.456 423.069,395.594 423.656,413.921 424.242,430.07 424.829,445.843 425.415,451.748 426.001,478.072 426.588,484.197 427.174,489.855 427.761,504.508 428.347,519.936 428.933,529.038 429.52,560.637 430.106,568.663 430.693,577.808 431.279,587.217 431.865,615.943 432.452,630.006 433.038,638.41 433.625,647.349 434.211,661.653 434.798,675.669 435.384,689.582 435.97,702.825 436.557,725.658 437.143,738.067 437.73,745.311 438.316,752.693 438.902,769.135 439.489,784.964 440.075,792.671 440.662,812.196 441.248,826.678 441.835,833.256 442.421,843.857 443.007,854.139 443.594,861.457 444.18,874.607 444.767,894.19 445.353,909.739 445.939,918.453 446.526,930.084 447.112,935.628 447.699,941.067 448.285,954.915 448.871,965.784 449.458,973.137 450.044,982.925 450.631,990.514 451.217,1002.43 451.804,1009.42 452.39,1023.17 452.976,1031.87 453.563,1037.87 454.149,1043.13 454.736,1048.64 455.322,1058.17 455.908,1065.38 456.495,1068.02 457.081,1072.98 457.668,1079.97 458.254,1084.6 458.84,1087.19 459.427,1093.99 460.013,1100.63 460.6,1104.96 461.186,1110.9 461.773,1115.21 462.359,1117.53 462.945,1121.26 463.532,1123.36 464.118,1129.66 464.705,1137.13 465.291,1141.02 465.877,1146.73 466.464,1148.15 467.05,1153.31 467.637,1158.72 468.223,1165.4 468.809,1168.56 469.396,1172.72 469.982,1175.44 470.569,1179.91 471.155,1180.9 471.742,1181.97 472.328,1184.67 472.914,1187.24 473.501,1188.27 474.087,1187.76 474.674,1188.79 475.26,1189.53 475.846,1192.14 476.433,1193.4 477.019,1195.99 477.606,1199.85 478.192,1208.13 478.778,1209.93 479.365,1211.77 479.951,1213.61 480.538,1215.43 481.124,1215.55 481.711,1215.71 482.297,1212.43 482.883,1212.52 483.47,1214.42 484.056,1214.77 484.643,1214.87 485.229,1217.99 485.815,1218.19 486.402,1219.93 486.988,1221.61 487.575,1224.71 488.161,1224.44 488.748,1224.57 489.334,1227.87 489.92,1226.11 490.507,1228.98 491.093,1229.99 491.68,1231.22 492.266,1231.21 492.852,1235.46 493.439,1236.75 494.025,1236.35 494.612,1238.94 495.198,1242.89 495.784,1241.82 496.371,1241.07 496.957,1241.89 497.544,1244.35 498.13,1244.96 498.717,1243.92 499.303,1241.56 499.889,1241.29 500.476,1240.48 501.062,1239.97 501.649,1239.81 502.235,1238.3 502.821,1236.45 503.408,1236.25 503.994,1237.03 504.581,1236.57 505.167,1236.18 505.753,1238.92 506.34,1240.07 506.926,1239.79 507.513,1239.2 508.099,1237.23 508.686,1238.29 509.272,1239.52 509.858,1240.95 510.445,1240.61 511.031,1240.31 511.618,1239.76 512.204,1236.6 512.79,1239.32 513.377,1240.71 513.963,1240.2 514.55,1241.17 515.136,1241.94 515.722,1246.76 516.309,1244.56 516.895,1241.25 517.482,1241.08 518.068,1240.9 518.655,1244.62 519.241,1244.24 519.827,1244.75 520.414,1244.5 521,1243.71 521.587,1243.43 522.173,1242.79 522.759,1243.72 523.346,1245.82 523.932,1245.22 524.519,1244.75 525.105,1248.66 525.691,1250.53 526.278,1249.71 526.864,1248.67 527.451,1249.47 528.037,1248.62 528.624,1246.72 529.21,1244.6 529.796,1245.49 530.383,1244.58 530.969,1245.45 531.556,1247.5 532.142,1246.88 532.728,1246.05 533.315,1246.85 533.901,1241.87 534.488,1244.03 535.074,1238.9 535.661,1237.29 536.247,1238.31 536.833,1236.7 537.42,1237.54 538.006,1238.51 538.593,1236.57 539.179,1237.58 539.765,1237.29 540.352,1235.64 540.938,1235.43 541.525,1233.73 542.111,1233.61 542.697,1236.1 543.284,1234.63 543.87,1238.51 544.457,1238.22 545.043,1237.32 545.63,1239.82 546.216,1242.19 546.802,1244.52 547.389,1245.23 547.975,1245.65 548.562,1244.62 549.148,1243.82 549.734,1243.22 550.321,1242.4 550.907,1241.89 551.494,1241.16 552.08,1240.46 552.666,1238.3 553.253,1239.1 553.839,1239.99 554.426,1240.55 555.012,1238.56 555.599,1240.72 556.185,1241.42 556.771,1242.25 557.358,1243.11 557.944,1240.94 558.531,1240.39 559.117,1237.04 559.703,1235.43 560.29,1235.08 560.876,1234.88 561.463,1234.63 562.049,1235.54 562.635,1236.6 563.222,1236.12 563.808,1234.52 564.395,1236.98 564.981,1238.19 565.568,1239.45 566.154,1236.04 566.74,1237.14 567.327,1237.99 567.913,1237.28 568.5,1236.73 569.086,1236.06 569.672,1236.99 570.259,1238.07 570.845,1237.43 571.432,1236.9 572.018,1239.31 572.605,1240.03 573.191,1241.98 573.777,1242.78 574.364,1244.94 574.95,1242.81 575.537,1240.58 576.123,1238.29 576.709,1234.89 577.296,1233.3 577.882,1236 578.469,1235.38 579.055,1236.18 579.641,1235.74 580.228,1235.1 580.814,1234.67 581.401,1235.4 581.987,1237.94 582.574,1235.87 583.16,1235.33 583.746,1234.75 584.333,1234.76 584.919,1238.44 585.506,1239.34 586.092,1240.14 586.678,1239.37 587.265,1237.19 587.851,1236.75 588.438,1237.77 589.024,1239.79 589.61,1239.22 590.197,1238.37 590.783,1239.08 591.37,1235.71 591.956,1236.4 592.543,1238.6 593.129,1238.86 593.715,1238.07 594.302,1237.42 594.888,1236.76 595.475,1237.9 596.061,1237.3 596.647,1234.96 597.234,1233.08 597.82,1232.42 598.407,1233.27 598.993,1235.59 599.579,1239.4 600.166,1235.86 600.752,1235.26 601.339,1234.25 601.925,1236.7 602.512,1234.68 603.098,1229.86 603.684,1227.86 604.271,1227.23 604.857,1225.46 605.444,1230.45 606.03,1228.79 606.616,1228.53 607.203,1229.64 607.789,1230.92 608.376,1230.58 608.962,1231.27 609.548,1232.38 610.135,1233.52 610.721,1232.94 611.308,1229.84 611.894,1228.18 612.481,1226.59 613.067,1229.19 613.653,1228.75 614.24,1227.05 614.826,1226.82 615.413,1227.94 615.999,1230.44 616.585,1231.04 617.172,1230.33 617.758,1227.12 618.345,1229.46 618.931,1229.49 619.518,1230.25 620.104,1228.4 620.69,1226.79 621.277,1227.86 621.863,1221.98 622.45,1223.15 623.036,1224.57 623.622,1227.22 624.209,1225.72 624.795,1225.87 625.382,1227.25 625.968,1228.24 626.554,1230.55 627.141,1231.63 627.727,1234.08 628.314,1231.72 628.9,1231.28 629.487,1229.37 630.073,1227.5 630.659,1230.03 631.246,1231.18 631.832,1233.4 632.419,1231.33 633.005,1229.4 633.591,1227.64 634.178,1224.61 634.764,1224.26 635.351,1222.8 635.937,1225.4 636.523,1226.75 637.11,1223.88 637.696,1223.73 638.283,1224.78 638.869,1227.25 639.456,1227.32 640.042,1225.39 640.628,1222.3 641.215,1223.43 641.801,1222.1 642.388,1222 642.974,1221.95 643.56,1223.25 644.147,1221.78 644.733,1224.43 645.32,1221.42 645.906,1218.41 646.492,1218.25 647.079,1215.59 647.665,1214.51 648.252,1217.86 648.838,1222.4 649.425,1220.89 650.011,1220.75 650.597,1222.18 651.184,1221.75 651.77,1217.68 652.357,1216.5 652.943,1222.47 653.529,1220.89 654.116,1220.66 654.702,1220.9 655.289,1223.62 655.875,1223.92 656.462,1225.23 657.048,1225.99 657.634,1227.07 658.221,1228.21 658.807,1227.81 659.394,1227.58 659.98,1227.14 660.566,1229.36 661.153,1230.4 661.739,1231.2 662.326,1228.03 662.912,1228.74 663.498,1225.72 664.085,1224.11 664.671,1222.58 665.258,1223.72 665.844,1226.39 666.431,1225.92 667.017,1225.81 667.603,1223.75 668.19,1223.83 668.776,1223.93 669.363,1222.2 669.949,1223.41 670.535,1223.13 671.122,1224.32 671.708,1226.93 672.295,1222.42 672.881,1220.7 673.467,1217.57 674.054,1216.16 674.64,1217.64 675.227,1214.78 675.813,1214.93 676.4,1213.87 676.986,1215.52 677.572,1212.51 678.159,1212.68 678.745,1211.72 679.332,1212.2 679.918,1211.36 680.504,1211.67 681.091,1213.35 681.677,1213.66 682.264,1215.63 682.85,1218.55 683.436,1220.11 684.023,1218.83 684.609,1220.24 685.196,1222.81 685.782,1223.59 686.369,1224.8 686.955,1223.08 687.541,1224.12 688.128,1223.76 688.714,1225.19 689.301,1224.82 689.887,1224.38 690.473,1222.88 691.06,1222.54 691.646,1222.5 692.233,1222.15 692.819,1221.87 693.405,1224.46 693.992,1224.22 694.578,1223.87 695.165,1223.8 695.751,1220.6 696.338,1220.65 696.924,1221.77 697.51,1221.69 698.097,1217.02 698.683,1218.49 699.27,1218.17 699.856,1218.05 700.442,1217.85 701.029,1219.2 701.615,1224.63 702.202,1225.67 702.788,1225.23 703.375,1223.36 703.961,1223.01 704.547,1224.53 705.134,1224.4 705.72,1226.74 706.307,1226.16 706.893,1223.1 707.479,1221.6 708.066,1220.05 708.652,1221.58 709.239,1221.55 709.825,1222.64 710.411,1224.1 710.998,1222.36 711.584,1220.71 712.171,1220.48 712.757,1221.6 713.344,1221.27 713.93,1222.78 714.516,1218.29 715.103,1221.06 715.689,1222.44 716.276,1223.45 716.862,1219.23 717.448,1219.34 718.035,1216.61 718.621,1213.91 719.208,1213.78 719.794,1215.21 720.38,1214.01 720.967,1212.77 721.553,1211.44 722.14,1211.81 722.726,1214.92 723.313,1217.46 723.899,1217.5 724.485,1219.08 725.072,1220.27 725.658,1219.92 726.245,1218.31 726.831,1218.25 727.417,1218 728.004,1217.99 728.59,1220.76 729.177,1223.27 729.763,1224.33 730.349,1227.11 730.936,1228.1 731.522,1227.52 732.109,1222.87 732.695,1223.56 733.282,1220.31 733.868,1220.06 734.454,1218.75 735.041,1221.18 735.627,1219.41 736.214,1217.86 736.8,1217.94 737.386,1215.18 737.973,1214.04 738.559,1214.12 739.146,1214.46 739.732,1215.9 740.318,1215.89 740.905,1214.48 741.491,1213.5 742.078,1213.66 742.664,1212.55 743.251,1209.93 743.837,1211.75 744.423,1212.02 745.01,1212.42 745.596,1209.76 746.183,1208.68 746.769,1212.06 747.355,1208.11 747.942,1211.18 748.528,1212.64 749.115,1211.37 749.701,1210.13 750.288,1210.39 750.874,1210.6 751.46,1211.07 752.047,1212.57 752.633,1212.88 753.22,1215.77 753.806,1214.24 754.392,1214.22 754.979,1217.07 755.565,1218.62 756.152,1218.54 756.738,1219.75 757.324,1218.12 757.911,1219.29 758.497,1217.79 759.084,1217.64 759.67,1216.08 760.257,1217.41 760.843,1219.01 761.429,1218.08 762.016,1217.67 762.602,1218.99 763.189,1221.56 763.775,1221.35 764.361,1219.81 764.948,1219.33 765.534,1216.66 766.121,1215.16 766.707,1212.43 767.293,1214.28 767.88,1214.35 768.466,1213.19 769.053,1213.49 769.639,1219.2 770.226,1219.21 770.812,1219.92 771.398,1224.08 771.985,1222.32 772.571,1221.9 773.158,1220.52 773.744,1219.08 774.33,1217.25 774.917,1217.21 775.503,1217.23 776.09,1215.7 776.676,1215.68 777.262,1215.75 777.849,1215.44 778.435,1219.42 779.022,1219.13 779.608,1218.85 780.195,1222.82 780.781,1220.99 781.367,1224.8 781.954,1220.44 782.54,1218.72 783.127,1217.42 783.713,1216.07 784.299,1219.06 784.886,1218.71 785.472,1218.61 786.059,1221.2 786.645,1220.86 787.232,1221.69 787.818,1219.8 788.404,1216.82 788.991,1214.18 789.577,1214.45 790.164,1211.91 790.75,1211.69 791.336,1216.36 791.923,1215.06 792.509,1213.41 793.096,1213.91 793.682,1211.52 794.268,1214.58 794.855,1216.13 795.441,1217.23 796.028,1217.09 796.614,1216.77 797.201,1215.5 797.787,1215.55 798.373,1214.05 798.96,1215.44 799.546,1215.46 800.133,1212.61 800.719,1212.7 801.305,1212.84 801.892,1215.76 802.478,1216.9 803.065,1216.81 803.651,1216.85 804.237,1218.21 804.824,1219.36 805.41,1218.95 805.997,1215.93 806.583,1216.99 807.17,1218.1 807.756,1215.47 808.342,1218.21 808.929,1216.52 809.515,1214.62 810.102,1214.65 810.688,1213.32 811.274,1213.42 811.861,1213.43 812.447,1213.78 813.034,1215.52 813.62,1215.56 814.206,1215.62 814.793,1212.96 815.379,1211.81 815.966,1211.99 816.552,1213.35 817.139,1211.91 817.725,1210.55 818.311,1210.69 818.898,1212.06 819.484,1212.24 820.071,1215.17 820.657,1215.11 821.243,1212.43 821.83,1211.26 822.416,1211.49 823.003,1213.13 823.589,1213.23 824.175,1211.69 824.762,1211.85 825.348,1210.61 825.935,1210.83 826.521,1210.83 827.108,1209.94 827.694,1205.96 828.28,1207.58 828.867,1207.78 829.453,1210.87 830.04,1212.47 830.626,1211.29 831.212,1210.14 831.799,1207.67 832.385,1210.81 832.972,1212.66 833.558,1211.5 834.145,1210.37 834.731,1209.24 835.317,1209.84 835.904,1208.56 836.49,1204.46 837.077,1203.85 837.663,1204.28 838.249,1207.3 838.836,1207.87 839.422,1212.19 840.009,1213.7 840.595,1213.58 841.181,1213.39 841.768,1213.34 842.354,1214.9 842.941,1216.49 843.527,1216.51 844.114,1216.2 844.7,1217.41 845.286,1218.84 845.873,1219.94 846.459,1221.07 847.046,1220.55 847.632,1218.83 848.218,1220.18 848.805,1219.9 849.391,1218.03 849.978,1219.14 850.564,1224.54 851.15,1224.01 851.737,1223.5 852.323,1225.82 852.91,1227.91 853.496,1224.54 854.083,1224.13 854.669,1224.25 855.255,1222.58 855.842,1220.75 856.428,1220.23 857.015,1218.25 857.601,1219.12 858.187,1217.7 858.774,1218.67 859.36,1218.4 859.947,1215.22 860.533,1213.4 861.119,1214.99 861.706,1215.07 862.292,1215.14 862.879,1214.95 863.465,1214.94 864.052,1209.04 864.638,1210.69 865.224,1209.23 865.811,1207.87 866.397,1208.18 866.984,1205.42 867.57,1203.85 868.156,1202.71 868.743,1203.28 869.329,1206.82 869.916,1210.01 870.502,1210.14 871.089,1210.35 871.675,1211.69 872.261,1213.4 872.848,1213.25 873.434,1213.07 874.021,1214.4 874.607,1214.44 875.193,1215.71 875.78,1211.43 876.366,1210.2 876.953,1211.72 877.539,1213.28 878.125,1213.37 878.712,1214.94 879.298,1216.27 879.885,1214.95 880.471,1215.18 881.058,1215.07 881.644,1220.42 882.23,1220.14 882.817,1221.17 883.403,1219.17 883.99,1219.95 884.576,1221.13 885.162,1220.55 885.749,1222.97 886.335,1222.25 886.922,1221.83 887.508,1219.88 888.094,1217.99 888.681,1216.32 889.267,1210.66 889.854,1209.18 890.44,1209.41 891.027,1210.75 891.613,1212.16 892.199,1211.96 892.786,1211.86 893.372,1210.61 893.959,1213.76 894.545,1213.54 895.131,1214.67 895.718,1216.16 896.304,1211.91 896.891,1213.48 897.477,1213.53 898.063,1214.88 898.65,1211.85 899.236,1208.73 899.823,1211.31 900.409,1213 900.996,1207.21 901.582,1210.28 902.168,1213.35 902.755,1210.61 903.341,1211.01 903.928,1208.53 904.514,1207.98 905.1,1209.78 905.687,1208.44 906.273,1207.15 906.86,1206.49 907.446,1206.97 908.032,1207.35 908.619,1211.66 909.205,1213.04 909.792,1214.5 910.378,1214.57 910.965,1211.95 911.551,1212.08 912.137,1212.18 912.724,1211.04 913.31,1213.68 913.897,1216.28 914.483,1213.16 915.069,1215.82 915.656,1214.32 916.242,1212.86 916.829,1212.6 917.415,1218.24 918.002,1219.35 918.588,1217.62 919.174,1221.16 919.761,1219.38 920.347,1217.39 920.934,1215.72 921.52,1214.08 922.106,1212.9 922.693,1211.54 923.279,1214.57 923.866,1213.32 924.452,1216.31 925.038,1217.68 925.625,1216.11 926.211,1214.73 926.798,1213.44 927.384,1213.24 927.971,1216.11 928.557,1214.66 929.143,1214.54 929.73,1214.38 930.316,1214.61 930.903,1213.03 931.489,1210.25 932.075,1211.94 932.662,1211.92 933.248,1213.7 933.835,1214.71 934.421,1213.29 935.007,1214.74 935.594,1214.49 936.18,1213.06 936.767,1214.35 937.353,1217.05 937.94,1215.58 938.526,1215.37 939.112,1215.18 939.699,1216.51 940.285,1216.61 940.872,1212.5 941.458,1212.46 942.044,1211.14 942.631,1212.71 943.217,1216.6 943.804,1219.13 944.39,1217.64 944.976,1217.37 945.563,1214.18 946.149,1214.36 946.736,1212.83 947.322,1211.82 947.909,1210.42 948.495,1213.36 949.081,1213.65 949.668,1213.73 950.254,1212.47 950.841,1216.75 951.427,1215.39 952.013,1216.56 952.6,1216.55 953.186,1216.26 953.773,1216.15 954.359,1214.81 954.945,1215.99 955.532,1218.29 956.118,1220.78 956.705,1217.65 957.291,1217.19 957.878,1216.58 958.464,1219.17 959.05,1218.72 959.637,1218.52 960.223,1217.1 960.81,1215.19 961.396,1211 961.982,1209.89 962.569,1211.59 963.155,1211.57 963.742,1211.48 964.328,1211.54 964.915,1210.07 965.501,1208.73 966.087,1208.89 966.674,1209.07 967.26,1207.66 967.847,1212.22 968.433,1211.16 969.019,1213.01 969.606,1214.71 970.192,1211.96 970.779,1213.53 971.365,1212.09 971.951,1209.18 972.538,1209.39 973.124,1209.52 973.711,1208.21 974.297,1209.63 974.884,1208.54 975.47,1210.02 976.056,1210.32 976.643,1210.75 977.229,1213.4 977.816,1215.73 978.402,1215.34 978.988,1214.04 979.575,1215.46 980.161,1215.48 980.748,1216.4 981.334,1217.49 981.92,1217.33 982.507,1215.73 983.093,1214.04 983.68,1212.67 984.266,1214.23 984.853,1210.95 985.439,1209.84 986.025,1209.73 986.612,1209.96 987.198,1211.27 987.785,1208.43 988.371,1206.9 988.957,1204.57 989.544,1209.4 990.13,1210.77 990.717,1210.79 991.303,1208.23 991.889,1209.56 992.476,1209.68 993.062,1210.17 993.649,1210.19 994.235,1210.45 994.822,1209.28 995.408,1212.34 995.994,1212.31 996.581,1213.56 997.167,1213.35 997.754,1215.17 998.34,1216.35 998.926,1217.54 999.513,1220.08 1000.1,1221.11 1000.69,1216.57 1001.27,1216.47 1001.86,1215.03 1002.44,1217.7 1003.03,1217.45 1003.62,1218.55 1004.2,1214.25 1004.79,1217.11 1005.38,1217.1 1005.96,1218.17 1006.55,1219.11 1007.14,1217.25 1007.72,1217 1008.31,1216.84 1008.9,1216.69 1009.48,1216.67 1010.07,1215.1 1010.65,1215.17 1011.24,1212.43 1011.83,1209.81 1012.41,1212.7 1013,1214.19 1013.59,1214.13 1014.17,1211.35 1014.76,1211.26 1015.35,1209.8 1015.93,1208.78 1016.52,1209.05 1017.11,1209.41 1017.69,1215.11 1018.28,1215.27 1018.86,1216.39 1019.45,1216.25 1020.04,1217.47 1020.62,1218.55 1021.21,1216.8 1021.8,1215.28 1022.38,1216.59 1022.97,1216.47 1023.56,1219.12 1024.14,1217.32 1024.73,1217.07 1025.32,1215.51 1025.9,1213.82 1026.49,1213.93 1027.07,1209.54 1027.66,1208.53 1028.25,1209.78 1028.83,1211.14 1029.42,1208.28 1030.01,1208.59 1030.59,1206.04 1031.18,1206.41 1031.77,1206.84 1032.35,1208.69 1032.94,1210.3 1033.52,1213.44 1034.11,1219.05 1034.7,1218.94 1035.28,1217.02 1035.87,1216.69 1036.46,1217.94 1037.04,1216.4 1037.63,1217.53 1038.22,1218.99 1038.8,1219.01 1039.39,1219.01 1039.98,1220.08 1040.56,1219.4 1041.15,1217.56 1041.73,1218.83 1042.32,1217.33 1042.91,1217.39 1043.49,1218.49 1044.08,1219.76 1044.67,1218.4 1045.25,1217.87 1045.84,1217.66 1046.43,1215.87 1047.01,1216.94 1047.6,1213.95 1048.19,1210.92 1048.77,1212.39 1049.36,1215.55 1049.94,1213.62 1050.53,1213.5 1051.12,1212.09 1051.7,1212 1052.29,1212.19 1052.88,1213.72 1053.46,1215.13 1054.05,1213.49 1054.64,1211.97 1055.22,1212.29 1055.81,1210.87 1056.39,1210.8 1056.98,1213.65 1057.57,1212.02 1058.15,1210.67 1058.74,1212.04 1059.33,1213.49 1059.91,1214.91 1060.5,1213.3 1061.09,1214.41 1061.67,1213.3 1062.26,1217.17 1062.85,1216.88 1063.43,1214.06 1064.02,1212.52 1064.6,1209.55 1065.19,1210.01 1065.78,1210.39 1066.36,1210.31 1066.95,1207.58 1067.54,1206.46 1068.12,1205.54 1068.71,1207.44 1069.3,1207.85 1069.88,1209.75 1070.47,1208.76 1071.06,1208.73 1071.64,1207.66 1072.23,1206.47 1072.81,1204.02 1073.4,1204.58 1073.99,1204.74 1074.57,1205.25 1075.16,1205.65 1075.75,1205.98 1076.33,1206.37 1076.92,1205.25 1077.51,1208.74 1078.09,1211.58 1078.68,1208.7 1079.26,1208.73 1079.85,1208.98 1080.44,1209.11 1081.02,1210.85 1081.61,1209.88 1082.2,1211.42 1082.78,1210.09 1083.37,1211.57 1083.96,1210.36 1084.54,1210.26 1085.13,1208.73 1085.72,1210.44 1086.3,1209.19 1086.89,1207.81 1087.47,1209.33 1088.06,1212.12 1088.65,1212.24 1089.23,1213.81 1089.82,1214.91 1090.41,1213.48 1090.99,1213.7 1091.58,1215.15 1092.17,1215.17 1092.75,1212.39 1093.34,1212.29 1093.93,1212.37 1094.51,1210.8 1095.1,1209.52 1095.68,1211.02 1096.27,1211.14 1096.86,1212.94 1097.44,1214.43 1098.03,1214.24 1098.62,1213.92 1099.2,1214.41 1099.79,1212.81 1100.38,1213.97 1100.96,1213.97 1101.55,1214.23 1102.14,1213.24 1102.72,1214.74 1103.31,1216.96 1103.89,1216.63 1104.48,1219.14 1105.07,1217.27 1105.65,1218.36 1106.24,1216.48 1106.83,1216.19 1107.41,1217.45 1108,1215.78 1108.59,1218.6 1109.17,1217.98 1109.76,1217.66 1110.34,1218.4 1110.93,1220.63 1111.52,1220.09 1112.1,1218.44 1112.69,1216.88 1113.28,1216.71 1113.86,1216.27 1114.45,1215.97 1115.04,1214.21 1115.62,1213.89 1116.21,1215.17 1116.8,1212.12 1117.38,1213.73 1117.97,1213.64 1118.55,1213.55 1119.14,1212.09 1119.73,1212.01 1120.31,1213.39 1120.9,1211.85 1121.49,1213.08 1122.07,1213.04 1122.66,1211.8 1123.25,1213.19 1123.83,1211.81 1124.42,1209.04 1125.01,1210.59 1125.59,1209.27 1126.18,1209.33 1126.76,1208.25 1127.35,1212.43 1127.94,1212.36 1128.52,1215.2 1129.11,1216.46 1129.7,1216.3 1130.28,1218.82 1130.87,1218.73 1131.46,1217.03 1132.04,1216.69 1132.63,1219.09 1133.21,1218.46 1133.8,1220.96 1134.39,1222.07 1134.97,1223 1135.56,1222.38 1136.15,1221.89 1136.73,1222.88 1137.32,1220.92 1137.91,1220.23 1138.49,1218.25 1139.08,1218.16 1139.67,1219.01 1140.25,1218.61 1140.84,1215.39 1141.42,1213.88 1142.01,1212.24 1142.6,1212.21 1143.18,1212.16 1143.77,1212.44 1144.36,1213.8 1144.94,1214 1145.53,1209.71 1146.12,1208.3 1146.7,1206.06 1147.29,1206.45 1147.88,1203.85 1148.46,1202.75 1149.05,1201.77 1149.63,1203.74 1150.22,1204.11 1150.81,1204.5 1151.39,1204.57 1151.98,1203.26 1152.57,1204.96 1153.15,1208.14 1153.74,1208.64 1154.33,1212.9 1154.91,1212.95 1155.5,1215.81 1156.09,1214.3 1156.67,1214.04 1157.26,1215.36 1157.84,1216.52 1158.43,1213.6 1159.02,1213.17 1159.6,1213.34 1160.19,1211.84 1160.78,1211.54 1161.36,1212.9 1161.95,1210.12 1162.54,1209.04 1163.12,1213.41 1163.71,1213.08 1164.29,1214.33 1164.88,1216.99 1165.47,1216.84 1166.05,1215.26 1166.64,1214.03 1167.23,1214.03 1167.81,1213.84 1168.4,1212.44 1168.99,1211.01 1169.57,1210.86 1170.16,1212.14 1170.75,1212.07 1171.33,1212.05 1171.92,1212.17 1172.5,1214.62 1173.09,1217.42 1173.68,1218.72 1174.26,1219.9 1174.85,1219.73 1175.44,1218 1176.02,1220.62 1176.61,1221.46 1177.2,1222.14 1177.78,1221.59 1178.37,1219.99 1178.96,1221.05 1179.54,1221.72 1180.13,1221.55 1180.71,1221.37 1181.3,1220.81 1181.89,1218.78 1182.47,1217.27 1183.06,1218.26 1183.65,1216.62 1184.23,1213.22 1184.82,1214.61 1185.41,1214.34 1185.99,1212.91 1186.58,1208.64 1187.16,1208.84 1187.75,1211.68 1188.34,1212.96 1188.92,1211.38 1189.51,1208.72 1190.1,1208.8 1190.68,1207.79 1191.27,1205.42 1191.86,1207.42 1192.44,1204.91 1193.03,1204.01 1193.62,1205.83 1194.2,1208.98 1194.79,1209.05 1195.37,1210.62 1195.96,1209.2 1196.55,1208.24 1197.13,1207.12 1197.72,1207.47 1198.31,1209.17 1198.89,1209.2 1199.48,1204.97 1200.07,1205.26 1200.65,1203.95 1201.24,1203.06 1201.83,1202.17 1202.41,1202.61 1203,1202.92 1203.58,1203.42 1204.17,1204.18 1204.76,1208.64 1205.34,1213.04 1205.93,1213.01 1206.52,1213.09 1207.1,1212.86 1207.69,1208.5 1208.28,1208.67 1208.86,1210.39 1209.45,1211.66 1210.03,1212.73 1210.62,1211.38 1211.21,1208.91 1211.79,1209.22 1212.38,1210.57 1212.97,1213.34 1213.55,1215.13 1214.14,1213.56 1214.73,1212.26 1215.31,1212.25 1215.9,1213.7 1216.49,1216.66 1217.07,1215.05 1217.66,1214.73 1218.24,1214.49 1218.83,1217.4 1219.42,1215.87 1220,1215.88 1220.59,1212.95 1221.18,1212.78 1221.76,1213.04 1222.35,1218.64 1222.94,1218.17 1223.52,1217.59 1224.11,1216.06 1224.7,1217.27 1225.28,1217.15 1225.87,1216.96 1226.45,1216.95 1227.04,1215.31 1227.63,1216.58 1228.21,1215.02 1228.8,1216.08 1229.39,1221.12 1229.97,1223.3 1230.56,1221.43 1231.15,1220.82 1231.73,1218.88 1232.32,1215.79 1232.91,1216.81 1233.49,1215.3 1234.08,1216.48 1234.66,1216.1 1235.25,1215.82 1235.84,1212.88 1236.42,1211.45 1237.01,1211.61 1237.6,1208.85 1238.18,1210.23 1238.77,1209.04 1239.36,1209.22 1239.94,1212.04 1240.53,1212.04 1241.11,1211.81 1241.7,1212.99 1242.29,1212.52 1242.87,1217.01 1243.46,1216.65 1244.05,1214.79 1244.63,1210.8 1245.22,1214.9 1245.81,1211.74 1246.39,1211.54 1246.98,1214.17 1247.57,1212.32 1248.15,1212.57 1248.74,1213.86 1249.32,1215.19 1249.91,1214.96 1250.5,1213.53 1251.08,1212.16 1251.67,1213.59 1252.26,1210.58 1252.84,1210.57 1253.43,1210.68 1254.02,1210.56 1254.6,1210.56 1255.19,1210.81 1255.78,1212.24 1256.36,1213.39 1256.95,1211.64 1257.53,1210.19 1258.12,1210.12 1258.71,1208.64 1259.29,1210.45 1259.88,1210.45 1260.47,1210.63 1261.05,1210.57 1261.64,1210.47 1262.23,1211.91 1262.81,1213.17 1263.4,1214.25 1263.98,1214.38 1264.57,1212.82 1265.16,1215.23 1265.74,1212.6 1266.33,1211.02 1266.92,1213.85 1267.5,1213.8 1268.09,1213.37 1268.68,1210.63 1269.26,1210.87 1269.85,1211.07 1270.44,1212.29 1271.02,1213.65 1271.61,1213.6 1272.19,1216.15 1272.78,1214.34 1273.37,1211.55 1273.95,1210.31 1274.54,1213.03 1275.13,1211.52 1275.71,1208.65 1276.3,1208.73 1276.89,1209.47 1277.47,1212.46 1278.06,1213.81 1278.65,1212.16 1279.23,1210.65 1279.82,1210.68 1280.4,1210.91 1280.99,1212.61 1281.58,1211.39 1282.16,1210.1 1282.75,1211.65 1283.34,1206.35 1283.92,1203.69 1284.51,1205.62 1285.1,1204.76 1285.68,1205.17 1286.27,1205.84 1286.86,1207.74 1287.44,1207.96 1288.03,1209.97 1288.61,1210.14 1289.2,1211.65 1289.79,1213.04 1290.37,1213.15 1290.96,1209.9 1291.55,1210.34 1292.13,1210.84 1292.72,1209.57 1293.31,1212.23 1293.89,1210.81 1294.48,1209.46 1295.06,1212.19 1295.65,1212.17 1296.24,1211.01 1296.82,1209.89 1297.41,1210.24 1298,1209.06 1298.58,1211.79 1299.17,1211.82 1299.76,1213.58 1300.34,1217.69 1300.93,1218.49 1301.52,1217.96 1302.1,1217.61 1302.69,1220.19 1303.27,1219.88 1303.86,1217.89 1304.45,1215.04 1305.03,1213.78 1305.62,1212.49 1306.21,1211.17 1306.79,1211.08 1307.38,1211.11 1307.97,1212.57 1308.55,1212.5 1309.14,1213.77 1309.73,1211.29 1310.31,1212.98 1310.9,1211.47 1311.48,1212.95 1312.07,1213 1312.66,1212.99 1313.24,1215.64 1313.83,1215.81 1314.42,1213.1 1315,1209 1315.59,1207.88 1316.18,1209.55 1316.76,1209.6 1317.35,1208.34 1317.93,1208.41 1318.52,1210 1319.11,1210.14 1319.69,1210.25 1320.28,1206.13 1320.87,1210.68 1321.45,1213.64 1322.04,1210.71 1322.63,1208.15 1323.21,1208.33 1323.8,1208.84 1324.39,1208.93 1324.97,1207.28 1325.56,1206.3 1326.14,1207.82 1326.73,1206.64 1327.32,1209.58 1327.9,1208.18 1328.49,1207.07 1329.08,1207.21 1329.66,1206.26 1330.25,1206.6 1330.84,1210.97 1331.42,1211.37 1332.01,1212.92 1332.6,1211.71 1333.18,1208.99 1333.77,1207.73 1334.35,1212.47 1334.94,1212.64 1335.53,1212.6 1336.11,1211.39 1336.7,1209.94 1337.29,1205.8 1337.87,1207.57 1338.46,1204.87 1339.05,1205.31 1339.63,1202.91 1340.22,1204.59 1340.8,1206.36 1341.39,1209.46 1341.98,1207.03 1342.56,1205.88 1343.15,1207.72 1343.74,1208.25 1344.32,1209.96 1344.91,1211.71 1345.5,1211.95 1346.08,1210.37 1346.67,1213.24 1347.26,1213.4 1347.84,1211.98 1348.43,1214.91 1349.01,1214.59 1349.6,1213.16 1350.19,1210.16 1350.77,1209.08 1351.36,1204.97 1351.95,1205.42 1352.53,1204.6 1353.12,1208.83 1353.71,1208.92 1354.29,1210.31 1354.88,1209.2 1355.47,1206.56 1356.05,1205.46 1356.64,1206.91 1357.22,1207.24 1357.81,1209.01 1358.4,1210.26 1358.98,1211.69 1359.57,1211.66 1360.16,1209.06 1360.74,1207.63 1361.33,1209.52 1361.92,1208.23 1362.5,1209.97 1363.09,1208.94 1363.68,1209.47 1364.26,1209.77 1364.85,1211.59 1365.43,1208.92 1366.02,1211.89 1366.61,1213.31 1367.19,1215.82 1367.78,1214.19 1368.37,1216.82 1368.95,1217.73 1369.54,1217.52 1370.13,1217.41 1370.71,1215.91 1371.3,1217.07 1371.88,1219.35 1372.47,1217.6 1373.06,1218.75 1373.64,1216.89 1374.23,1213.62 1374.82,1214.62 1375.4,1214.37 1375.99,1215.56 1376.58,1215.45 1377.16,1213.65 1377.75,1213.46 1378.34,1214.8 1378.92,1213.42 1379.51,1213.31 1380.09,1209.18 1380.68,1209.51 1381.27,1209.81 1381.85,1209.93 1382.44,1211.32 1383.03,1212.62 1383.61,1212.79 1384.2,1211.16 1384.79,1212.45 1385.37,1209.69 1385.96,1208.25 1386.55,1209.69 1387.13,1206.61 1387.72,1207.01 1388.3,1205.8 1388.89,1207.33 1389.48,1206.18 1390.06,1203.63 1390.65,1205.32 1391.24,1205.72 1391.82,1210.12 1392.41,1208.51 1393,1209.72 1393.58,1207.1 1394.17,1207.12 1394.75,1208.88 1395.34,1212 1395.93,1213.37 1396.51,1207.62 1397.1,1206.74 1397.69,1209.77 1398.27,1208.6 1398.86,1210 1399.45,1210.33 1400.03,1213.46 1400.62,1213.46 1401.21,1216.06 1401.79,1215.52 1402.38,1215.55 1402.96,1215.61 1403.55,1213.84 1404.14,1212.56 1404.72,1213.71 1405.31,1210.85 1405.9,1209.37 1406.48,1207.61 1407.07,1207.65 1407.66,1207.96 1408.24,1208.22 1408.83,1209.6 1409.42,1212.58 1410,1212.29 1410.59,1209.4 1411.17,1206.83 1411.76,1205.82 1412.35,1205.97 1412.93,1206.24 1413.52,1208.01 1414.11,1206.97 1414.69,1205.72 1415.28,1210.2 1415.87,1211.71 1416.45,1215.58 1417.04,1214.04 1417.63,1212.51 1418.21,1211.11 1418.8,1211.3 1419.38,1211.34 1419.97,1214.14 1420.56,1212.87 1421.14,1211.7 1421.73,1213.18 1422.32,1210.52 1422.9,1209.18 1423.49,1209.35 1424.08,1212.27 1424.66,1211 1425.25,1208.12 1425.83,1210.95 1426.42,1208.1 1427.01,1208.07 1427.59,1209.61 1428.18,1213.96 1428.77,1215.61 1429.35,1218.2 1429.94,1219.1 1430.53,1220.29 1431.11,1219.66 1431.7,1219.39 1432.29,1220.37 1432.87,1218.66 1433.46,1218.47 1434.04,1216.76 1434.63,1213.82 1435.22,1213.8 1435.8,1212.13 1436.39,1210.67 1436.98,1213.82 1437.56,1214.7 1438.15,1214.59 1438.74,1214.54 1439.32,1211.39 1439.91,1214.04 1440.5,1216.45 1441.08,1215.3 1441.67,1213.71 1442.25,1214.99 1442.84,1216.11 1443.43,1214.53 1444.01,1215.78 1444.6,1212.53 1445.19,1211.22 1445.77,1215.47 1446.36,1216.69 1446.95,1215.12 1447.53,1216.29 1448.12,1213.33 1448.7,1213.22 1449.29,1213.02 1449.88,1212.87 1450.46,1213.89 1451.05,1212.52 1451.64,1212.35 1452.22,1210.89 1452.81,1213.86 1453.4,1208.25 1453.98,1209.71 1454.57,1209.88 1455.16,1211.46 1455.74,1209.99 1456.33,1208.58 1456.91,1210.24 1457.5,1212.03 1458.09,1210.54 1458.67,1207.89 1459.26,1205.39 1459.85,1205.82 1460.43,1207.69 1461.02,1206.52 1461.61,1206.77 1462.19,1205.61 1462.78,1207.19 1463.37,1204.52 1463.95,1204.99 1464.54,1204.11 1465.12,1207.23 1465.71,1207.34 1466.3,1204.77 1466.88,1203.8 1467.47,1203.93 1468.06,1200.18 1468.64,1202.53 1469.23,1206 1469.82,1206.7 1470.4,1207 1470.99,1207.36 1471.57,1203.48 1472.16,1203.9 1472.75,1207.19 1473.33,1208.79 1473.92,1210.23 1474.51,1209.05 1475.09,1212.02 1475.68,1215.09 1476.27,1218.93 1476.85,1220.05 1477.44,1219.87 1478.03,1219.33 1478.61,1218.91 1479.2,1218.14 1479.78,1219.36 1480.37,1217.61 1480.96,1217.28 1481.54,1215.48 1482.13,1213.48 1482.72,1210.52 1483.3,1206.4 1483.89,1209.29 1484.48,1208.46 1485.06,1208.58 1485.65,1208.68 1486.24,1208.99 1486.82,1209.17 1487.41,1209.21 1487.99,1207.96 1488.58,1211.04 1489.17,1212.41 1489.75,1210.85 1490.34,1212.69 1490.93,1209.93 1491.51,1211.41 1492.1,1210.04 1492.69,1208.77 1493.27,1209.1 1493.86,1209.01 1494.45,1210.42 1495.03,1211.82 1495.62,1211.65 1496.2,1214.51 1496.79,1213.21 1497.38,1208.92 1497.96,1210.49 1498.55,1211.99 1499.14,1211.96 1499.72,1212.11 1500.31,1209.59 1500.9,1209.88 1501.48,1208.73 1502.07,1213.1 1502.65,1211.76 1503.24,1211.94 1503.83,1210.4 1504.41,1209.19 1505,1208 1505.59,1208.29 1506.17,1211.38 1506.76,1214.16 1507.35,1213.01 1507.93,1215.64 1508.52,1215.32 1509.11,1215.5 1509.69,1214.01 1510.28,1211.17 1510.86,1211.32 1511.45,1212.8 1512.04,1211.18 1512.62,1212.69 1513.21,1209.84 1513.8,1208.39 1514.38,1213.06 1514.97,1213.06 1515.56,1215.56 1516.14,1215.14 1516.73,1216.11 1517.32,1218.46 1517.9,1218.18 1518.49,1220.51 1519.07,1221.37 1519.66,1224.98 1520.25,1226.97 1520.83,1224.69 1521.42,1225.04 1522.01,1223.08 1522.59,1220.99 1523.18,1219.09 1523.77,1215.86 1524.35,1216.81 1524.94,1219.4 1525.52,1218.66 1526.11,1218.53 1526.7,1215.55 1527.28,1215.52 1527.87,1212.49 1528.46,1210.99 1529.04,1212.24 1529.63,1212.1 1530.22,1211.03 1530.8,1212.49 1531.39,1212.28 1531.98,1209.47 1532.56,1212.34 1533.15,1209.74 1533.73,1209.84 1534.32,1215.58 1534.91,1217.13 1535.49,1216.8 1536.08,1212.23 1536.67,1207.91 1537.25,1205.51 1537.84,1203.17 1538.43,1203.7 1539.01,1209.87 1539.6,1212.79 1540.19,1211.52 1540.77,1211.61 1541.36,1209.89 1541.94,1212.66 1542.53,1211.29 1543.12,1212.69 1543.7,1209.67 1544.29,1209.71 1544.88,1206.9 1545.46,1206.98 1546.05,1206.95 1546.64,1205.64 1547.22,1203.45 1547.81,1206.84 1548.4,1208.58 1548.98,1215.89 1549.57,1214.38 1550.15,1215.92 1550.74,1215.89 1551.33,1216.93 1551.91,1216.8 1552.5,1214.99 1553.09,1213.38 1553.67,1213.41 1554.26,1213.11 1554.85,1214.28 1555.43,1212.73 1556.02,1211.69 1556.6,1210.16 1557.19,1210.2 1557.78,1214.27 1558.36,1215.73 1558.95,1217.12 1559.54,1219.64 1560.12,1219.34 1560.71,1217.45 1561.3,1214.53 1561.88,1217.39 1562.47,1216.98 1563.06,1218.31 1563.64,1219.23 1564.23,1218.8 1564.81,1219.76 1565.4,1221.83 1565.99,1221.26 1566.57,1223.49 1567.16,1219.93 1567.75,1216.51 1568.33,1217.73 1568.92,1214.69 1569.51,1215.59 1570.09,1216.68 1570.68,1218.04 1571.27,1216.42 1571.85,1214.96 1572.44,1214.88 1573.02,1210.55 1573.61,1208.99 1574.2,1210.57 1574.78,1210.76 1575.37,1209.44 1575.96,1208.31 1576.54,1208.55 1577.13,1210.18 1577.72,1209.96 1578.3,1211.65 1578.89,1210.22 1579.47,1207.55 1580.06,1209.26 1580.65,1206.46 1581.23,1208.36 1581.82,1211.37 1582.41,1212.94 1582.99,1212.93 1583.58,1211.42 1584.17,1213.12 1584.75,1213.07 1585.34,1212.81 1585.93,1213.01 1586.51,1215.98 1587.1,1217.51 1587.68,1215.72 1588.27,1217.26 1588.86,1218.3 1589.44,1220.77 1590.03,1216.12 1590.62,1216.09 1591.2,1213.07 1591.79,1211.14 1592.38,1213.95 1592.96,1213.94 1593.55,1213.86 1594.14,1214.13 1594.72,1212.98 1595.31,1214.43 1595.89,1215.67 1596.48,1215.14 1597.07,1213.39 1597.65,1214.73 1598.24,1214.87 1598.83,1212.29 1599.41,1213.58 1600,1210.61 1600.59,1210.78 1601.17,1209.66 1601.76,1209.82 1602.34,1211.15 1602.93,1212.53 1603.52,1211.26 1604.1,1212.75 1604.69,1212.72 1605.28,1211.29 1605.86,1208.91 1606.45,1210.44 1607.04,1210.68 1607.62,1213.18 1608.21,1214.38 1608.8,1214.58 1609.38,1210.46 1609.97,1211.68 1610.55,1214.36 1611.14,1215.61 1611.73,1214.5 1612.31,1212.98 1612.9,1213.06 1613.49,1212.95 1614.07,1210.18 1614.66,1208.89 1615.25,1204.68 1615.83,1204.89 1616.42,1206.25 1617.01,1206.53 1617.59,1205.21 1618.18,1206.69 1618.76,1208.16 1619.35,1211.05 1619.94,1209.89 1620.52,1210.19 1621.11,1208.97 1621.7,1206.23 1622.28,1209.17 1622.87,1209.22 1623.46,1209.29 1624.04,1208.23 1624.63,1211.29 1625.22,1211.13 1625.8,1211.25 1626.39,1209.81 1626.97,1209.92 1627.56,1210.13 1628.15,1214.57 1628.73,1218.34 1629.32,1216.8 1629.91,1216.68 1630.49,1216.21 1631.08,1215.9 1631.67,1215.99 1632.25,1215.81 1632.84,1213.16 1633.42,1211.72 1634.01,1207.46 1634.6,1206.21 1635.18,1203.76 1635.77,1205.71 1636.36,1206.21 1636.94,1206.92 1637.53,1208.49 1638.12,1210.02 1638.7,1210.22 1639.29,1210.59 1639.88,1210.56 1640.46,1214.79 1641.05,1217.49 1641.63,1217.13 1642.22,1216.86 1642.81,1215.46 1643.39,1218.33 1643.98,1219.55 1644.57,1216.57 1645.15,1217.49 1645.74,1217.33 1646.33,1216.75 1646.91,1214.96 1647.5,1212.18 1648.09,1211.92 1648.67,1210.47 1649.26,1206.41 1649.84,1206.96 1650.43,1210.17 1651.02,1208.97 1651.6,1206.1 1652.19,1206.98 1652.78,1205.81 1653.36,1209.2 1653.95,1209.19 1654.54,1212.39 1655.12,1215.09 1655.71,1214.65 1656.29,1214.64 1656.88,1217.27 1657.47,1216.01 1658.05,1214.94 1658.64,1216.04 1659.23,1215.94 1659.81,1215.73 1660.4,1216.92 1660.99,1216.54 1661.57,1216.64 1662.16,1216.38 1662.75,1216.2 1663.33,1215.9 1663.92,1214.25 1664.5,1214.48 1665.09,1214.16 1665.68,1211.42 1666.26,1211.58 1666.85,1209.03 1667.44,1209.21 1668.02,1210.85 1668.61,1213.43 1669.2,1211.84 1669.78,1210.52 1670.37,1209.23 1670.96,1208.87 1671.54,1209.04 1672.13,1208.06 1672.71,1208.28 1673.3,1211.34 1673.89,1214.05 1674.47,1215.23 1675.06,1215 1675.65,1212.12 1676.23,1210.54 1676.82,1210.75 1677.41,1209.37 1677.99,1209.44 1678.58,1206.96 1679.17,1208.73 1679.75,1213.16 1680.34,1214.47 1680.92,1214.53 1681.51,1215.79 1682.1,1215.41 1682.68,1216.52 1683.27,1217.97 1683.86,1212.17 1684.44,1213.45 1685.03,1216.08 1685.62,1217.08 1686.2,1214.06 1686.79,1215.55 1687.37,1214.17 1687.96,1214.35 1688.55,1214.4 1689.13,1215.6 1689.72,1214.23 1690.31,1215.38 1690.89,1216.5 1691.48,1214.72 1692.07,1211.84 1692.65,1212.25 1693.24,1212.14 1693.83,1213.67 1694.41,1216.4 1695,1215.17 1695.58,1213.91 1696.17,1214.05 1696.76,1214.02 1697.34,1216.95 1697.93,1216.65 1698.52,1216.32 1699.1,1214.87 1699.69,1214.9 1700.28,1214.7 1700.86,1214.49 1701.45,1213.04 1702.04,1213.02 1702.62,1214.51 1703.21,1217.15 1703.79,1215.59 1704.38,1215.65 1704.97,1213.98 1705.55,1213.5 1706.14,1211.97 1706.73,1216.2 1707.31,1212.81 1707.9,1211.06 1708.49,1211.15 1709.07,1212.45 1709.66,1212.43 1710.24,1211.23 1710.83,1210.99 1711.42,1212.52 1712,1211.48 1712.59,1210.06 1713.18,1210.27 1713.76,1211.75 1714.35,1211.74 1714.94,1212.04 1715.52,1211.92 1716.11,1209.32 1716.7,1214.71 1717.28,1215.54 1717.87,1215.67 1718.45,1218.04 1719.04,1220.46 1719.63,1220.09 1720.21,1221.07 1720.8,1219.61 1721.39,1221.79 1721.97,1221.16 1722.56,1219.23 1723.15,1218.6 1723.73,1218.53 1724.32,1216.71 1724.91,1217.81 1725.49,1220.16 1726.08,1216.91 1726.66,1213.91 1727.25,1215.13 1727.84,1214.8 1728.42,1211.91 1729.01,1213.19 1729.6,1216.06 1730.18,1216.79 1730.77,1215.24 1731.36,1213.73 1731.94,1212.3 1732.53,1210.99 1733.11,1213.86 1733.7,1213.92 1734.29,1212.26 1734.87,1213.8 1735.46,1216.42 1736.05,1216.06 1736.63,1221.04 1737.22,1220.62 1737.81,1219.91 1738.39,1220.62 1738.98,1213.17 1739.57,1210.39 1740.15,1207.78 1740.74,1207.75 1741.32,1209.04 1741.91,1207.48 1742.5,1209.41 1743.08,1206.32 1743.67,1202.34 1744.26,1204.27 1744.84,1207.32 1745.43,1207.52 1746.02,1209.01 1746.6,1207.8 1747.19,1206.83 1747.78,1204.46 1748.36,1206.08 1748.95,1204.99 1749.53,1205.36 1750.12,1207.14 1750.71,1204.63 1751.29,1203.79 1751.88,1208.51 1752.47,1204.65 1753.05,1205.03 1753.64,1210.92 1754.23,1206.85 1754.81,1207.27 1755.4,1203.52 1755.99,1203.82 1756.57,1208.22 1757.16,1208.26 1757.74,1208.53 1758.33,1209.02 1758.92,1209 1759.5,1206.27 1760.09,1207.87 1760.68,1207.11 1761.26,1205.83 1761.85,1207.32 1762.44,1206.09 1763.02,1207.55 1763.61,1207.75 1764.19,1209.28 1764.78,1208.13 1765.37,1207.01 1765.95,1208.63 1766.54,1207.64 1767.13,1207.82 1767.71,1207.9 1768.3,1209.34 1768.89,1209.5 1769.47,1211.27 1770.06,1215.39 1770.65,1216.66 1771.23,1212.19 1771.82,1213.64 1772.4,1214.91 1772.99,1214.82 1773.58,1214.66 1774.16,1215.83 1774.75,1214.57 1775.34,1211.67 1775.92,1210.33 1776.51,1209.18 1777.1,1209.36 1777.68,1210.73 1778.27,1211.09 1778.86,1212.73 1779.44,1212.91 1780.03,1213.04 1780.61,1211.89 1781.2,1210.51 1781.79,1210.62 1782.37,1213.22 1782.96,1210.57 1783.55,1213.35 1784.13,1214.48 1784.72,1215.92 1785.31,1214.33 1785.89,1214.24 1786.48,1217.04 1787.06,1219.29 1787.65,1221.64 1788.24,1219.82 1788.82,1218.21 1789.41,1217.88 1790,1218.88 1790.58,1217.15 1791.17,1214.31 1791.76,1212.76 1792.34,1212.67 1792.93,1212.34 1793.52,1212.24 1794.1,1212.35 1794.69,1211.97 1795.27,1209.13 1795.86,1209.22 1796.45,1207.91 1797.03,1208.08 1797.62,1208.09 1798.21,1208.43 1798.79,1208.69 1799.38,1207.45 1799.97,1207.71 1800.55,1209.67 1801.14,1208.61 1801.73,1207.62 1802.31,1208.06 1802.9,1208.15 1803.48,1208.71 1804.07,1208.7 1804.66,1208.77 1805.24,1209.03 1805.83,1209.32 1806.42,1210.63 1807,1210.6 1807.59,1212.22 1808.18,1211.06 1808.76,1210.97 1809.35,1210.83 1809.94,1209.51 1810.52,1210.76 1811.11,1209.65 1811.69,1208.5 1812.28,1209.04 1812.87,1210.51 1813.45,1212.15 1814.04,1215.09 1814.63,1212.24 1815.21,1209.35 1815.8,1205.29 1816.39,1204.16 1816.97,1204.9 1817.56,1206.42 1818.14,1207.95 1818.73,1209.34 1819.32,1211.03 1819.9,1210.03 1820.49,1211.53 1821.08,1212.63 1821.66,1218.35 1822.25,1217.9 1822.84,1217.46 1823.42,1218.49 1824.01,1212.75 1824.6,1211.41 1825.18,1208.81 1825.77,1207.48 1826.35,1207.86 1826.94,1208.3 1827.53,1208.32 1828.11,1208.67 1828.7,1211.74 1829.29,1207.62 1829.87,1209.26 1830.46,1210.65 1831.05,1212.23 1831.63,1212.24 1832.22,1215.22 1832.81,1213.58 1833.39,1212.07 1833.98,1212.01 1834.56,1213.23 1835.15,1213.2 1835.74,1212.92 1836.32,1211.05 1836.91,1208.07 1837.5,1206.68 1838.08,1207.05 1838.67,1205.94 1839.26,1206.56 1839.84,1208.12 1840.43,1208.19 1841.01,1206.99 1841.6,1205.51 1842.19,1207.02 1842.77,1208.67 1843.36,1204.63 1843.95,1207.95 1844.53,1206.88 1845.12,1207.19 1845.71,1203.3 1846.29,1199.61 1846.88,1204.73 1847.47,1204.99 1848.05,1204.23 1848.64,1204.75 1849.22,1206.75 1849.81,1207.14 1850.4,1208.8 1850.98,1211.72 1851.57,1213.12 1852.16,1213.25 1852.74,1214.9 1853.33,1214.37 1853.92,1214.31 1854.5,1214.08 1855.09,1212.74 1855.68,1208.42 1856.26,1208.73 1856.85,1208.8 1857.43,1210.36 1858.02,1206.6 1858.61,1204.07 1859.19,1207.01 1859.78,1207.55 1860.37,1209.04 1860.95,1209.21 1861.54,1209.32 1862.13,1215.16 1862.71,1213.74 1863.3,1215.03 1863.88,1216.12 1864.47,1215.88 1865.06,1218.48 1865.64,1217.98 1866.23,1217.77 1866.82,1217.72 1867.4,1217.63 1867.99,1213.46 1868.58,1213.3 1869.16,1211.79 1869.75,1210.48 1870.34,1210.66 1870.92,1212.23 1871.51,1210.97 1872.09,1208.41 1872.68,1207.41 1873.27,1207.72 1873.85,1209.64 1874.44,1211.32 1875.03,1211.5 1875.61,1211.6 1876.2,1207.39 1876.79,1209.45 1877.37,1211.19 1877.96,1211.13 1878.55,1212.49 1879.13,1216.58 1879.72,1213.81 1880.3,1213.68 1880.89,1215.18 1881.48,1213.4 1882.06,1211.78 1882.65,1214.67 1883.24,1214.68 1883.82,1214.86 1884.41,1213.27 1885,1214.85 1885.58,1214.83 1886.17,1215.92 1886.76,1218.29 1887.34,1217.79 1887.93,1216.32 1888.51,1216.01 1889.1,1215.72 1889.69,1215.09 1890.27,1214.85 1890.86,1211.92 1891.45,1211.96 1892.03,1216.14 1892.62,1213.34 1893.21,1211.9 1893.79,1210.62 1894.38,1211.96 1894.96,1210.44 1895.55,1212.05 1896.14,1213.24 1896.72,1211.9 1897.31,1213.24 1897.9,1214.43 1898.48,1214.54 1899.07,1214.23 1899.66,1215.56 1900.24,1214.27 1900.83,1218.29 1901.42,1216.57 1902,1213.63 1902.59,1211 1903.17,1211.16 1903.76,1209.87 1904.35,1205.91 1904.93,1206.17 1905.52,1209.54 1906.11,1209.79 1906.69,1211.48 1907.28,1210.32 1907.87,1213.4 1908.45,1212.98 1909.04,1211.78 1909.63,1210.64 1910.21,1210.96 1910.8,1212.5 1911.38,1210.95 1911.97,1210.91 1912.56,1209.66 1913.14,1206.81 1913.73,1205.82 1914.32,1206.26 1914.9,1210.51 1915.49,1213.48 1916.08,1214.89 1916.66,1214.53 1917.25,1210.58 1917.83,1207.38 1918.42,1207.71 1919.01,1209.04 1919.59,1208.01 1920.18,1208.18 1920.77,1208.44 1921.35,1210.23 1921.94,1211.79 1922.53,1214.74 1923.11,1214.8 1923.7,1212.28 1924.29,1212.19 1924.87,1210.39 1925.46,1210.08 1926.04,1213.28 1926.63,1214.68 1927.22,1211.89 1927.8,1210.42 1928.39,1208.98 1928.98,1207.68 1929.56,1209.37 1930.15,1209.36 1930.74,1206.86 1931.32,1207.25 1931.91,1206.16 1932.5,1205.26 1933.08,1205.68 1933.67,1206.16 1934.25,1206.34 1934.84,1203.87 1935.43,1204.43 1936.01,1203.53 1936.6,1206.58 1937.19,1206.94 1937.77,1209.95 1938.36,1210.23 1938.95,1210.55 1939.53,1212.06 1940.12,1213.61 1940.71,1213.5 1941.29,1213.5 1941.88,1214.62 1942.46,1214.86 1943.05,1215.88 1943.64,1215.46 1944.22,1214.04 1944.81,1213.98 1945.4,1219.35 1945.98,1218.74 1946.57,1218.48 1947.16,1217.9 1947.74,1216.27 1948.33,1217.3 1948.91,1212.7 1949.5,1212.51 1950.09,1212.54 1950.67,1214.05 1951.26,1213.92 1951.85,1213.49 1952.43,1212.3 1953.02,1212.13 1953.61,1211.92 1954.19,1211.74 1954.78,1208.88 1955.37,1209.28 1955.95,1210.9 1956.54,1209.29 1957.12,1210.96 1957.71,1209.62 1958.3,1213.78 1958.88,1212.15 1959.47,1213.43 1960.06,1213.38 1960.64,1213.35 1961.23,1213.24 1961.82,1211.92 1962.4,1210.49 1962.99,1210.68 1963.58,1211.02 1964.16,1210.78 1964.75,1216.22 1965.33,1217.32 1965.92,1218.66 1966.51,1219.31 1967.09,1220.29 1967.68,1222.18 1968.27,1224.41 1968.85,1223.81 1969.44,1221.64 1970.03,1221.2 1970.61,1221.1 1971.2,1220.52 1971.78,1217.18 1972.37,1215.5 1972.96,1213.81 1973.54,1213.58 1974.13,1213.19 1974.72,1214.55 1975.3,1213.18 1975.89,1214.29 1976.48,1213.98 1977.06,1213.83 1977.65,1210.94 1978.24,1211.03 1978.82,1210.98 1979.41,1210.96 1979.99,1206.87 1980.58,1207.15 1981.17,1207.35 1981.75,1209.01 1982.34,1209 1982.93,1210.5 1983.51,1210.66 1984.1,1210.74 1984.69,1207.82 1985.27,1209.32 1985.86,1209.36 1986.45,1208.11 1987.03,1212.42 1987.62,1212.39 1988.2,1215.06 1988.79,1216.06 1989.38,1214.4 1989.96,1212.86 1990.55,1214.36 1991.14,1214.37 1991.72,1214.02 1992.31,1212.6 1992.9,1213.85 1993.48,1215.02 1994.07,1213.5 1994.65,1213.37 1995.24,1213.32 1995.83,1207.5 1996.41,1204.68 1997,1205.12 1997.59,1206.69 1998.17,1207.4 1998.76,1207.75 1999.35,1206.54 1999.93,1209.42 2000.52,1210.59 2001.11,1210.86 2001.69,1210.55 2002.28,1212.37 2002.86,1209.39 2003.45,1209.86 2004.04,1208.16 2004.62,1208.3 2005.21,1210.02 2005.8,1211.68 2006.38,1211.56 2006.97,1211.7 2007.56,1211.66 2008.14,1215.7 2008.73,1214.36 2009.32,1212.94 2009.9,1214.26 2010.49,1216.74 2011.07,1215.13 2011.66,1213.86 2012.25,1215.05 2012.83,1217.58 2013.42,1217.51 2014.01,1217.6 2014.59,1218.67 2015.18,1220 2015.77,1220.76 2016.35,1220.39 2016.94,1221.37 2017.53,1219.49 2018.11,1217.96 2018.7,1216.24 2019.28,1215.88 2019.87,1218.62 2020.46,1217 2021.04,1221.18 2021.63,1222.09 2022.22,1221.25 2022.8,1219.25 2023.39,1217.29 2023.98,1218.17 2024.56,1219.19 2025.15,1218.52 2025.73,1218.14 2026.32,1216.51 2026.91,1214.85 2027.49,1214.43 2028.08,1216.99 2028.67,1218.15 2029.25,1217.93 2029.84,1222.02 2030.43,1222.85 2031.01,1222.56 2031.6,1220.68 2032.19,1220.21 2032.77,1221.39 2033.36,1221.04 2033.94,1219.39 2034.53,1217.55 2035.12,1217.16 2035.7,1214.09 2036.29,1213.8 2036.88,1213.74 2037.46,1216.4 2038.05,1217.79 2038.64,1215.82 2039.22,1214.33 2039.81,1216.89 2040.4,1216.69 2040.98,1216.31 2041.57,1216.03 2042.15,1214.13 2042.74,1211.33 2043.33,1211.26 2043.91,1211.32 2044.5,1211.21 2045.09,1212.28 2045.67,1213.83 2046.26,1212.18 2046.85,1213.6 2047.43,1213.62 2048.02,1213.49 2048.6,1212.01 2049.19,1210.78 2049.78,1211.26 2050.36,1212.65 2050.95,1213.83 2051.54,1213.69 2052.12,1214.89 2052.71,1211.99 2053.3,1216.09 2053.88,1217.12 2054.47,1215.26 2055.06,1215.11 2055.64,1213.44 2056.23,1210.57 2056.81,1210.62 2057.4,1209.35 2057.99,1208.2 2058.57,1205.52 2059.16,1203.21 2059.75,1202.39 2060.33,1201.5 2060.92,1202.07 2061.51,1199.72 2062.09,1198.96 2062.68,1199.76 2063.27,1197.48 2063.85,1199.55 2064.44,1201.56 2065.02,1199.54 2065.61,1201.71 2066.2,1206.28 2066.78,1208.23 2067.37,1208.53 2067.96,1208.95 2068.54,1209.12 2069.13,1209.62 2069.72,1208.29 2070.3,1208.76 2070.89,1209.23 2071.48,1209.64 2072.06,1211.26 2072.65,1209.82 2073.23,1208.38 2073.82,1210.18 2074.41,1214.28 2074.99,1212.7 2075.58,1211.46 2076.17,1212.81 2076.75,1211.2 2077.34,1212.79 2077.93,1211.53 2078.51,1213.33 2079.1,1214.67 2079.68,1213.33 2080.27,1212.28 2080.86,1213.6 2081.44,1213.53 2082.03,1212.12 2082.62,1210.69 2083.2,1213.59 2083.79,1213.56 2084.38,1215.16 2084.96,1215.07 2085.55,1217.46 2086.14,1219.82 2086.72,1220.62 2087.31,1214.78 2087.89,1216 2088.48,1218.59 2089.07,1218.16 2089.65,1215.33 2090.24,1217.68 2090.83,1211.39 2091.41,1211.36 2092,1214.12 2092.59,1216.63 2093.17,1216.01 2093.76,1215.56 2094.35,1215.32 2094.93,1216.7 2095.52,1213.4 2096.1,1214.51 2096.69,1211.06 2097.28,1212.51 2097.86,1213.62 2098.45,1213.47 2099.04,1213.34 2099.62,1210.17 2100.21,1210.36 2100.8,1211.82 2101.38,1209.23 2101.97,1206.57 2102.55,1203.76 2103.14,1205.55 2103.73,1206.09 2104.31,1204.87 2104.9,1205.2 2105.49,1208.21 2106.07,1208.56 2106.66,1212.84 2107.25,1210.19 2107.83,1206.01 2108.42,1203.74 2109.01,1206.58 2109.59,1206.95 2110.18,1207.18 2110.76,1207.39 2111.35,1209.05 2111.94,1206.29 2112.52,1208.15 2113.11,1208.69 2113.7,1207.58 2114.28,1208.12 2114.87,1206.67 2115.46,1207.13 2116.04,1208.99 2116.63,1207.82 2117.22,1209.4 2117.8,1211.12 2118.39,1211.44 2118.97,1212.75 2119.56,1212.69 2120.15,1212.6 2120.73,1213.88 2121.32,1212.2 2121.91,1210.71 2122.49,1209.61 2123.08,1211.41 2123.67,1211.53 2124.25,1211.49 2124.84,1211.47 2125.42,1212.71 2126.01,1214.21 2126.6,1214.23 2127.18,1213.74 2127.77,1213.56 2128.36,1214.99 2128.94,1216.46 2129.53,1219.08 2130.12,1215.85 2130.7,1218.34 2131.29,1217.93 2131.88,1219.07 2132.46,1217.18 2133.05,1214.37 2133.63,1212.99 2134.22,1214.64 2134.81,1214.47 2135.39,1217.14 2135.98,1215.33 2136.57,1215.19 2137.15,1216.32 2137.74,1217.65 2138.33,1217.54 2138.91,1218.51 2139.5,1218.32 2140.09,1220.69 2140.67,1218.96 2141.26,1215.91 2141.84,1218.11 2142.43,1218.01 2143.02,1217.72 2143.6,1214.71 2144.19,1213.05 2144.78,1212.61 2145.36,1208.36 2145.95,1211.46 2146.54,1210.19 2147.12,1210.49 2147.71,1213.17 2148.3,1211.53 2148.88,1214.36 2149.47,1210.26 2150.05,1211.62 2150.64,1213.25 2151.23,1213.06 2151.81,1210.28 2152.4,1210.54 2152.99,1209.43 2153.57,1209.47 2154.16,1209.72 2154.75,1207 2155.33,1207.27 2155.92,1207.38 2156.5,1207.87 2157.09,1208.04 2157.68,1209.61 2158.26,1209.96 \"/>\n<path clip-path=\"url(#clip802)\" d=\"M986.025 1212.57 L986.612 1212.57 L987.198 1212.57 L987.785 1212.57 L988.371 1212.57 L988.957 1212.57 L989.544 1212.57 L990.13 1212.57 L990.717 1212.57 L991.303 1212.57 L991.889 1212.57 L992.476 1212.57 L993.062 1212.57 L993.649 1212.57 L994.235 1212.57 L994.822 1212.57 L995.408 1212.57 L995.994 1212.57 L996.581 1212.57 L997.167 1212.57 L997.754 1212.57 L998.34 1212.57 L998.926 1212.57 L999.513 1212.57 L1000.1 1212.57 L1000.69 1212.57 L1001.27 1212.57 L1001.86 1212.57 L1002.44 1212.57 L1003.03 1212.57 L1003.62 1212.57 L1004.2 1212.57 L1004.79 1212.57 L1005.38 1212.57 L1005.96 1212.57 L1006.55 1212.57 L1007.14 1212.57 L1007.72 1212.57 L1008.31 1212.57 L1008.9 1212.57 L1009.48 1212.57 L1010.07 1212.57 L1010.65 1212.57 L1011.24 1212.57 L1011.83 1212.57 L1012.41 1212.57 L1013 1212.57 L1013.59 1212.57 L1014.17 1212.57 L1014.76 1212.57 L1015.35 1212.57 L1015.93 1212.57 L1016.52 1212.57 L1017.11 1212.57 L1017.69 1212.57 L1018.28 1212.57 L1018.86 1212.57 L1019.45 1212.57 L1020.04 1212.57 L1020.62 1212.57 L1021.21 1212.57 L1021.8 1212.57 L1022.38 1212.57 L1022.97 1212.57 L1023.56 1212.57 L1024.14 1212.57 L1024.73 1212.57 L1025.32 1212.57 L1025.9 1212.57 L1026.49 1212.57 L1027.07 1212.57 L1027.66 1212.57 L1028.25 1212.57 L1028.83 1212.57 L1029.42 1212.57 L1030.01 1212.57 L1030.59 1212.57 L1031.18 1212.57 L1031.77 1212.57 L1032.35 1212.57 L1032.94 1212.57 L1033.52 1212.57 L1034.11 1212.57 L1034.7 1212.57 L1035.28 1212.57 L1035.87 1212.57 L1036.46 1212.57 L1037.04 1212.57 L1037.63 1212.57 L1038.22 1212.57 L1038.8 1212.57 L1039.39 1212.57 L1039.98 1212.57 L1040.56 1212.57 L1041.15 1212.57 L1041.73 1212.57 L1042.32 1212.57 L1042.91 1212.57 L1043.49 1212.57 L1044.08 1212.57 L1044.67 1212.57 L1045.25 1212.57 L1045.84 1212.57 L1046.43 1212.57 L1047.01 1212.57 L1047.6 1212.57 L1048.19 1212.57 L1048.77 1212.57 L1049.36 1212.57 L1049.94 1212.57 L1050.53 1212.57 L1051.12 1212.57 L1051.7 1212.57 L1052.29 1212.57 L1052.88 1212.57 L1053.46 1212.57 L1054.05 1212.57 L1054.64 1212.57 L1055.22 1212.57 L1055.81 1212.57 L1056.39 1212.57 L1056.98 1212.57 L1057.57 1212.57 L1058.15 1212.57 L1058.74 1212.57 L1059.33 1212.57 L1059.91 1212.57 L1060.5 1212.57 L1061.09 1212.57 L1061.67 1212.57 L1062.26 1212.57 L1062.85 1212.57 L1063.43 1212.57 L1064.02 1212.57 L1064.6 1212.57 L1065.19 1212.57 L1065.78 1212.57 L1066.36 1212.57 L1066.95 1212.57 L1067.54 1212.57 L1068.12 1212.57 L1068.71 1212.57 L1069.3 1212.57 L1069.88 1212.57 L1070.47 1212.57 L1071.06 1212.57 L1071.64 1212.57 L1072.23 1212.57 L1072.81 1212.57 L1073.4 1212.57 L1073.99 1212.57 L1074.57 1212.57 L1075.16 1212.57 L1075.75 1212.57 L1076.33 1212.57 L1076.92 1212.57 L1077.51 1212.57 L1078.09 1212.57 L1078.68 1212.57 L1079.26 1212.57 L1079.85 1212.57 L1080.44 1212.57 L1081.02 1212.57 L1081.61 1212.57 L1082.2 1212.57 L1082.78 1212.57 L1083.37 1212.57 L1083.96 1212.57 L1084.54 1212.57 L1085.13 1212.57 L1085.72 1212.57 L1086.3 1212.57 L1086.89 1212.57 L1087.47 1212.57 L1088.06 1212.57 L1088.65 1212.57 L1089.23 1212.57 L1089.82 1212.57 L1090.41 1212.57 L1090.99 1212.57 L1091.58 1212.57 L1092.17 1212.57 L1092.75 1212.57 L1093.34 1212.57 L1093.93 1212.57 L1094.51 1212.57 L1095.1 1212.57 L1095.68 1212.57 L1096.27 1212.57 L1096.86 1212.57 L1097.44 1212.57 L1098.03 1212.57 L1098.62 1212.57 L1099.2 1212.57 L1099.79 1212.57 L1100.38 1212.57 L1100.96 1212.57 L1101.55 1212.57 L1102.14 1212.57 L1102.72 1212.57 L1103.31 1212.57 L1103.89 1212.57 L1104.48 1212.57 L1105.07 1212.57 L1105.65 1212.57 L1106.24 1212.57 L1106.83 1212.57 L1107.41 1212.57 L1108 1212.57 L1108.59 1212.57 L1109.17 1212.57 L1109.76 1212.57 L1110.34 1212.57 L1110.93 1212.57 L1111.52 1212.57 L1112.1 1212.57 L1112.69 1212.57 L1113.28 1212.57 L1113.86 1212.57 L1114.45 1212.57 L1115.04 1212.57 L1115.62 1212.57 L1116.21 1212.57 L1116.8 1212.57 L1117.38 1212.57 L1117.97 1212.57 L1118.55 1212.57 L1119.14 1212.57 L1119.73 1212.57 L1120.31 1212.57 L1120.9 1212.57 L1121.49 1212.57 L1122.07 1212.57 L1122.66 1212.57 L1123.25 1212.57 L1123.83 1212.57 L1124.42 1212.57 L1125.01 1212.57 L1125.59 1212.57 L1126.18 1212.57 L1126.76 1212.57 L1127.35 1212.57 L1127.94 1212.57 L1128.52 1212.57 L1129.11 1212.57 L1129.7 1212.57 L1130.28 1212.57 L1130.87 1212.57 L1131.46 1212.57 L1132.04 1212.57 L1132.63 1212.57 L1133.21 1212.57 L1133.8 1212.57 L1134.39 1212.57 L1134.97 1212.57 L1135.56 1212.57 L1136.15 1212.57 L1136.73 1212.57 L1137.32 1212.57 L1137.91 1212.57 L1138.49 1212.57 L1139.08 1212.57 L1139.67 1212.57 L1140.25 1212.57 L1140.84 1212.57 L1141.42 1212.57 L1142.01 1212.57 L1142.6 1212.57 L1143.18 1212.57 L1143.77 1212.57 L1144.36 1212.57 L1144.94 1212.57 L1145.53 1212.57 L1146.12 1212.57 L1146.7 1212.57 L1147.29 1212.57 L1147.88 1212.57 L1148.46 1212.57 L1149.05 1212.57 L1149.63 1212.57 L1150.22 1212.57 L1150.81 1212.57 L1151.39 1212.57 L1151.98 1212.57 L1152.57 1212.57 L1153.15 1212.57 L1153.74 1212.57 L1154.33 1212.57 L1154.91 1212.57 L1155.5 1212.57 L1156.09 1212.57 L1156.67 1212.57 L1157.26 1212.57 L1157.84 1212.57 L1158.43 1212.57 L1159.02 1212.57 L1159.6 1212.57 L1160.19 1212.57 L1160.78 1212.57 L1161.36 1212.57 L1161.95 1212.57 L1162.54 1212.57 L1163.12 1212.57 L1163.71 1212.57 L1164.29 1212.57 L1164.88 1212.57 L1165.47 1212.57 L1166.05 1212.57 L1166.64 1212.57 L1167.23 1212.57 L1167.81 1212.57 L1168.4 1212.57 L1168.99 1212.57 L1169.57 1212.57 L1170.16 1212.57 L1170.75 1212.57 L1171.33 1212.57 L1171.92 1212.57 L1172.5 1212.57 L1173.09 1212.57 L1173.68 1212.57 L1174.26 1212.57 L1174.85 1212.57 L1175.44 1212.57 L1176.02 1212.57 L1176.61 1212.57 L1177.2 1212.57 L1177.78 1212.57 L1178.37 1212.57 L1178.96 1212.57 L1179.54 1212.57 L1180.13 1212.57 L1180.71 1212.57 L1181.3 1212.57 L1181.89 1212.57 L1182.47 1212.57 L1183.06 1212.57 L1183.65 1212.57 L1184.23 1212.57 L1184.82 1212.57 L1185.41 1212.57 L1185.99 1212.57 L1186.58 1212.57 L1187.16 1212.57 L1187.75 1212.57 L1188.34 1212.57 L1188.92 1212.57 L1189.51 1212.57 L1190.1 1212.57 L1190.68 1212.57 L1191.27 1212.57 L1191.86 1212.57 L1192.44 1212.57 L1193.03 1212.57 L1193.62 1212.57 L1194.2 1212.57 L1194.79 1212.57 L1195.37 1212.57 L1195.96 1212.57 L1196.55 1212.57 L1197.13 1212.57 L1197.72 1212.57 L1198.31 1212.57 L1198.89 1212.57 L1199.48 1212.57 L1200.07 1212.57 L1200.65 1212.57 L1201.24 1212.57 L1201.83 1212.57 L1202.41 1212.57 L1203 1212.57 L1203.58 1212.57 L1204.17 1212.57 L1204.76 1212.57 L1205.34 1212.57 L1205.93 1212.57 L1206.52 1212.57 L1207.1 1212.57 L1207.69 1212.57 L1208.28 1212.57 L1208.86 1212.57 L1209.45 1212.57 L1210.03 1212.57 L1210.62 1212.57 L1211.21 1212.57 L1211.79 1212.57 L1212.38 1212.57 L1212.97 1212.57 L1213.55 1212.57 L1214.14 1212.57 L1214.73 1212.57 L1215.31 1212.57 L1215.9 1212.57 L1216.49 1212.57 L1217.07 1212.57 L1217.66 1212.57 L1218.24 1212.57 L1218.83 1212.57 L1219.42 1212.57 L1220 1212.57 L1220.59 1212.57 L1221.18 1212.57 L1221.76 1212.57 L1222.35 1212.57 L1222.94 1212.57 L1223.52 1212.57 L1224.11 1212.57 L1224.7 1212.57 L1225.28 1212.57 L1225.87 1212.57 L1226.45 1212.57 L1227.04 1212.57 L1227.63 1212.57 L1228.21 1212.57 L1228.8 1212.57 L1229.39 1212.57 L1229.97 1212.57 L1230.56 1212.57 L1231.15 1212.57 L1231.73 1212.57 L1232.32 1212.57 L1232.91 1212.57 L1233.49 1212.57 L1234.08 1212.57 L1234.66 1212.57 L1235.25 1212.57 L1235.84 1212.57 L1236.42 1212.57 L1237.01 1212.57 L1237.6 1212.57 L1238.18 1212.57 L1238.77 1212.57 L1239.36 1212.57 L1239.94 1212.57 L1240.53 1212.57 L1241.11 1212.57 L1241.7 1212.57 L1242.29 1212.57 L1242.87 1212.57 L1243.46 1212.57 L1244.05 1212.57 L1244.63 1212.57 L1245.22 1212.57 L1245.81 1212.57 L1246.39 1212.57 L1246.98 1212.57 L1247.57 1212.57 L1248.15 1212.57 L1248.74 1212.57 L1249.32 1212.57 L1249.91 1212.57 L1250.5 1212.57 L1251.08 1212.57 L1251.67 1212.57 L1252.26 1212.57 L1252.84 1212.57 L1253.43 1212.57 L1254.02 1212.57 L1254.6 1212.57 L1255.19 1212.57 L1255.78 1212.57 L1256.36 1212.57 L1256.95 1212.57 L1257.53 1212.57 L1258.12 1212.57 L1258.71 1212.57 L1259.29 1212.57 L1259.88 1212.57 L1260.47 1212.57 L1261.05 1212.57 L1261.64 1212.57 L1262.23 1212.57 L1262.81 1212.57 L1263.4 1212.57 L1263.98 1212.57 L1264.57 1212.57 L1265.16 1212.57 L1265.74 1212.57 L1266.33 1212.57 L1266.92 1212.57 L1267.5 1212.57 L1268.09 1212.57 L1268.68 1212.57 L1269.26 1212.57 L1269.85 1212.57 L1270.44 1212.57 L1271.02 1212.57 L1271.61 1212.57 L1272.19 1212.57 L1272.78 1212.57 L1273.37 1212.57 L1273.95 1212.57 L1274.54 1212.57 L1275.13 1212.57 L1275.71 1212.57 L1276.3 1212.57 L1276.89 1212.57 L1277.47 1212.57 L1278.06 1212.57 L1278.65 1212.57 L1279.23 1212.57 L1279.82 1212.57 L1280.4 1212.57 L1280.99 1212.57 L1281.58 1212.57 L1282.16 1212.57 L1282.75 1212.57 L1283.34 1212.57 L1283.92 1212.57 L1284.51 1212.57 L1285.1 1212.57 L1285.68 1212.57 L1286.27 1212.57 L1286.86 1212.57 L1287.44 1212.57 L1288.03 1212.57 L1288.61 1212.57 L1289.2 1212.57 L1289.79 1212.57 L1290.37 1212.57 L1290.96 1212.57 L1291.55 1212.57 L1292.13 1212.57 L1292.72 1212.57 L1293.31 1212.57 L1293.89 1212.57 L1294.48 1212.57 L1295.06 1212.57 L1295.65 1212.57 L1296.24 1212.57 L1296.82 1212.57 L1297.41 1212.57 L1298 1212.57 L1298.58 1212.57 L1299.17 1212.57 L1299.76 1212.57 L1300.34 1212.57 L1300.93 1212.57 L1301.52 1212.57 L1302.1 1212.57 L1302.69 1212.57 L1303.27 1212.57 L1303.86 1212.57 L1304.45 1212.57 L1305.03 1212.57 L1305.62 1212.57 L1306.21 1212.57 L1306.79 1212.57 L1307.38 1212.57 L1307.97 1212.57 L1308.55 1212.57 L1309.14 1212.57 L1309.73 1212.57 L1310.31 1212.57 L1310.9 1212.57 L1311.48 1212.57 L1312.07 1212.57 L1312.66 1212.57 L1313.24 1212.57 L1313.83 1212.57 L1314.42 1212.57 L1315 1212.57 L1315.59 1212.57 L1316.18 1212.57 L1316.76 1212.57 L1317.35 1212.57 L1317.93 1212.57 L1318.52 1212.57 L1319.11 1212.57 L1319.69 1212.57 L1320.28 1212.57 L1320.87 1212.57 L1321.45 1212.57 L1322.04 1212.57 L1322.63 1212.57 L1323.21 1212.57 L1323.8 1212.57 L1324.39 1212.57 L1324.97 1212.57 L1325.56 1212.57 L1326.14 1212.57 L1326.73 1212.57 L1327.32 1212.57 L1327.9 1212.57 L1328.49 1212.57 L1329.08 1212.57 L1329.66 1212.57 L1330.25 1212.57 L1330.84 1212.57 L1331.42 1212.57 L1332.01 1212.57 L1332.6 1212.57 L1333.18 1212.57 L1333.77 1212.57 L1334.35 1212.57 L1334.94 1212.57 L1335.53 1212.57 L1336.11 1212.57 L1336.7 1212.57 L1337.29 1212.57 L1337.87 1212.57 L1338.46 1212.57 L1339.05 1212.57 L1339.63 1212.57 L1340.22 1212.57 L1340.8 1212.57 L1341.39 1212.57 L1341.98 1212.57 L1342.56 1212.57 L1343.15 1212.57 L1343.74 1212.57 L1344.32 1212.57 L1344.91 1212.57 L1345.5 1212.57 L1346.08 1212.57 L1346.67 1212.57 L1347.26 1212.57 L1347.84 1212.57 L1348.43 1212.57 L1349.01 1212.57 L1349.6 1212.57 L1350.19 1212.57 L1350.77 1212.57 L1351.36 1212.57 L1351.95 1212.57 L1352.53 1212.57 L1353.12 1212.57 L1353.71 1212.57 L1354.29 1212.57 L1354.88 1212.57 L1355.47 1212.57 L1356.05 1212.57 L1356.64 1212.57 L1357.22 1212.57 L1357.81 1212.57 L1358.4 1212.57 L1358.98 1212.57 L1359.57 1212.57 L1360.16 1212.57 L1360.74 1212.57 L1361.33 1212.57 L1361.92 1212.57 L1362.5 1212.57 L1363.09 1212.57 L1363.68 1212.57 L1364.26 1212.57 L1364.85 1212.57 L1365.43 1212.57 L1366.02 1212.57 L1366.61 1212.57 L1367.19 1212.57 L1367.78 1212.57 L1368.37 1212.57 L1368.95 1212.57 L1369.54 1212.57 L1370.13 1212.57 L1370.71 1212.57 L1371.3 1212.57 L1371.88 1212.57 L1372.47 1212.57 L1373.06 1212.57 L1373.64 1212.57 L1374.23 1212.57 L1374.82 1212.57 L1375.4 1212.57 L1375.99 1212.57 L1376.58 1212.57 L1377.16 1212.57 L1377.75 1212.57 L1378.34 1212.57 L1378.92 1212.57 L1379.51 1212.57 L1380.09 1212.57 L1380.68 1212.57 L1381.27 1212.57 L1381.85 1212.57 L1382.44 1212.57 L1383.03 1212.57 L1383.61 1212.57 L1384.2 1212.57 L1384.79 1212.57 L1385.37 1212.57 L1385.96 1212.57 L1386.55 1212.57 L1387.13 1212.57 L1387.72 1212.57 L1388.3 1212.57 L1388.89 1212.57 L1389.48 1212.57 L1390.06 1212.57 L1390.65 1212.57 L1391.24 1212.57 L1391.82 1212.57 L1392.41 1212.57 L1393 1212.57 L1393.58 1212.57 L1394.17 1212.57 L1394.75 1212.57 L1395.34 1212.57 L1395.93 1212.57 L1396.51 1212.57 L1397.1 1212.57 L1397.69 1212.57 L1398.27 1212.57 L1398.86 1212.57 L1399.45 1212.57 L1400.03 1212.57 L1400.62 1212.57 L1401.21 1212.57 L1401.79 1212.57 L1402.38 1212.57 L1402.96 1212.57 L1403.55 1212.57 L1404.14 1212.57 L1404.72 1212.57 L1405.31 1212.57 L1405.9 1212.57 L1406.48 1212.57 L1407.07 1212.57 L1407.66 1212.57 L1408.24 1212.57 L1408.83 1212.57 L1409.42 1212.57 L1410 1212.57 L1410.59 1212.57 L1411.17 1212.57 L1411.76 1212.57 L1412.35 1212.57 L1412.93 1212.57 L1413.52 1212.57 L1414.11 1212.57 L1414.69 1212.57 L1415.28 1212.57 L1415.87 1212.57 L1416.45 1212.57 L1417.04 1212.57 L1417.63 1212.57 L1418.21 1212.57 L1418.8 1212.57 L1419.38 1212.57 L1419.97 1212.57 L1420.56 1212.57 L1421.14 1212.57 L1421.73 1212.57 L1422.32 1212.57 L1422.9 1212.57 L1423.49 1212.57 L1424.08 1212.57 L1424.66 1212.57 L1425.25 1212.57 L1425.83 1212.57 L1426.42 1212.57 L1427.01 1212.57 L1427.59 1212.57 L1428.18 1212.57 L1428.77 1212.57 L1429.35 1212.57 L1429.94 1212.57 L1430.53 1212.57 L1431.11 1212.57 L1431.7 1212.57 L1432.29 1212.57 L1432.87 1212.57 L1433.46 1212.57 L1434.04 1212.57 L1434.63 1212.57 L1435.22 1212.57 L1435.8 1212.57 L1436.39 1212.57 L1436.98 1212.57 L1437.56 1212.57 L1438.15 1212.57 L1438.74 1212.57 L1439.32 1212.57 L1439.91 1212.57 L1440.5 1212.57 L1441.08 1212.57 L1441.67 1212.57 L1442.25 1212.57 L1442.84 1212.57 L1443.43 1212.57 L1444.01 1212.57 L1444.6 1212.57 L1445.19 1212.57 L1445.77 1212.57 L1446.36 1212.57 L1446.95 1212.57 L1447.53 1212.57 L1448.12 1212.57 L1448.7 1212.57 L1449.29 1212.57 L1449.88 1212.57 L1450.46 1212.57 L1451.05 1212.57 L1451.64 1212.57 L1452.22 1212.57 L1452.81 1212.57 L1453.4 1212.57 L1453.98 1212.57 L1454.57 1212.57 L1455.16 1212.57 L1455.74 1212.57 L1456.33 1212.57 L1456.91 1212.57 L1457.5 1212.57 L1458.09 1212.57 L1458.67 1212.57 L1459.26 1212.57 L1459.85 1212.57 L1460.43 1212.57 L1461.02 1212.57 L1461.61 1212.57 L1462.19 1212.57 L1462.78 1212.57 L1463.37 1212.57 L1463.95 1212.57 L1464.54 1212.57 L1465.12 1212.57 L1465.71 1212.57 L1466.3 1212.57 L1466.88 1212.57 L1467.47 1212.57 L1468.06 1212.57 L1468.64 1212.57 L1469.23 1212.57 L1469.82 1212.57 L1470.4 1212.57 L1470.99 1212.57 L1471.57 1212.57 L1472.16 1212.57 L1472.75 1212.57 L1473.33 1212.57 L1473.92 1212.57 L1474.51 1212.57 L1475.09 1212.57 L1475.68 1212.57 L1476.27 1212.57 L1476.85 1212.57 L1477.44 1212.57 L1478.03 1212.57 L1478.61 1212.57 L1479.2 1212.57 L1479.78 1212.57 L1480.37 1212.57 L1480.96 1212.57 L1481.54 1212.57 L1482.13 1212.57 L1482.72 1212.57 L1483.3 1212.57 L1483.89 1212.57 L1484.48 1212.57 L1485.06 1212.57 L1485.65 1212.57 L1486.24 1212.57 L1486.82 1212.57 L1487.41 1212.57 L1487.99 1212.57 L1488.58 1212.57 L1489.17 1212.57 L1489.75 1212.57 L1490.34 1212.57 L1490.93 1212.57 L1491.51 1212.57 L1492.1 1212.57 L1492.69 1212.57 L1493.27 1212.57 L1493.86 1212.57 L1494.45 1212.57 L1495.03 1212.57 L1495.62 1212.57 L1496.2 1212.57 L1496.79 1212.57 L1497.38 1212.57 L1497.96 1212.57 L1498.55 1212.57 L1499.14 1212.57 L1499.72 1212.57 L1500.31 1212.57 L1500.9 1212.57 L1501.48 1212.57 L1502.07 1212.57 L1502.65 1212.57 L1503.24 1212.57 L1503.83 1212.57 L1504.41 1212.57 L1505 1212.57 L1505.59 1212.57 L1506.17 1212.57 L1506.76 1212.57 L1507.35 1212.57 L1507.93 1212.57 L1508.52 1212.57 L1509.11 1212.57 L1509.69 1212.57 L1510.28 1212.57 L1510.86 1212.57 L1511.45 1212.57 L1512.04 1212.57 L1512.62 1212.57 L1513.21 1212.57 L1513.8 1212.57 L1514.38 1212.57 L1514.97 1212.57 L1515.56 1212.57 L1516.14 1212.57 L1516.73 1212.57 L1517.32 1212.57 L1517.9 1212.57 L1518.49 1212.57 L1519.07 1212.57 L1519.66 1212.57 L1520.25 1212.57 L1520.83 1212.57 L1521.42 1212.57 L1522.01 1212.57 L1522.59 1212.57 L1523.18 1212.57 L1523.77 1212.57 L1524.35 1212.57 L1524.94 1212.57 L1525.52 1212.57 L1526.11 1212.57 L1526.7 1212.57 L1527.28 1212.57 L1527.87 1212.57 L1528.46 1212.57 L1529.04 1212.57 L1529.63 1212.57 L1530.22 1212.57 L1530.8 1212.57 L1531.39 1212.57 L1531.98 1212.57 L1532.56 1212.57 L1533.15 1212.57 L1533.73 1212.57 L1534.32 1212.57 L1534.91 1212.57 L1535.49 1212.57 L1536.08 1212.57 L1536.67 1212.57 L1537.25 1212.57 L1537.84 1212.57 L1538.43 1212.57 L1539.01 1212.57 L1539.6 1212.57 L1540.19 1212.57 L1540.77 1212.57 L1541.36 1212.57 L1541.94 1212.57 L1542.53 1212.57 L1543.12 1212.57 L1543.7 1212.57 L1544.29 1212.57 L1544.88 1212.57 L1545.46 1212.57 L1546.05 1212.57 L1546.64 1212.57 L1547.22 1212.57 L1547.81 1212.57 L1548.4 1212.57 L1548.98 1212.57 L1549.57 1212.57 L1550.15 1212.57 L1550.74 1212.57 L1551.33 1212.57 L1551.91 1212.57 L1552.5 1212.57 L1553.09 1212.57 L1553.67 1212.57 L1554.26 1212.57 L1554.85 1212.57 L1555.43 1212.57 L1556.02 1212.57 L1556.6 1212.57 L1557.19 1212.57 L1557.78 1212.57 L1558.36 1212.57 L1558.95 1212.57 L1559.54 1212.57 L1560.12 1212.57 L1560.71 1212.57 L1561.3 1212.57 L1561.88 1212.57 L1562.47 1212.57 L1563.06 1212.57 L1563.64 1212.57 L1564.23 1212.57 L1564.81 1212.57 L1565.4 1212.57 L1565.99 1212.57 L1566.57 1212.57 L1567.16 1212.57 L1567.75 1212.57 L1568.33 1212.57 L1568.92 1212.57 L1569.51 1212.57 L1570.09 1212.57 L1570.68 1212.57 L1571.27 1212.57 L1571.85 1212.57 L1572.44 1212.57 L1573.02 1212.57 L1573.61 1212.57 L1574.2 1212.57 L1574.78 1212.57 L1575.37 1212.57 L1575.96 1212.57 L1576.54 1212.57 L1577.13 1212.57 L1577.72 1212.57 L1578.3 1212.57 L1578.89 1212.57 L1579.47 1212.57 L1580.06 1212.57 L1580.65 1212.57 L1581.23 1212.57 L1581.82 1212.57 L1582.41 1212.57 L1582.99 1212.57 L1583.58 1212.57 L1584.17 1212.57 L1584.75 1212.57 L1585.34 1212.57 L1585.93 1212.57 L1586.51 1212.57 L1587.1 1212.57 L1587.68 1212.57 L1588.27 1212.57 L1588.86 1212.57 L1589.44 1212.57 L1590.03 1212.57 L1590.62 1212.57 L1591.2 1212.57 L1591.79 1212.57 L1592.38 1212.57 L1592.96 1212.57 L1593.55 1212.57 L1594.14 1212.57 L1594.72 1212.57 L1595.31 1212.57 L1595.89 1212.57 L1596.48 1212.57 L1597.07 1212.57 L1597.65 1212.57 L1598.24 1212.57 L1598.83 1212.57 L1599.41 1212.57 L1600 1212.57 L1600.59 1212.57 L1601.17 1212.57 L1601.76 1212.57 L1602.34 1212.57 L1602.93 1212.57 L1603.52 1212.57 L1604.1 1212.57 L1604.69 1212.57 L1605.28 1212.57 L1605.86 1212.57 L1606.45 1212.57 L1607.04 1212.57 L1607.62 1212.57 L1608.21 1212.57 L1608.8 1212.57 L1609.38 1212.57 L1609.97 1212.57 L1610.55 1212.57 L1611.14 1212.57 L1611.73 1212.57 L1612.31 1212.57 L1612.9 1212.57 L1613.49 1212.57 L1614.07 1212.57 L1614.66 1212.57 L1615.25 1212.57 L1615.83 1212.57 L1616.42 1212.57 L1617.01 1212.57 L1617.59 1212.57 L1618.18 1212.57 L1618.76 1212.57 L1619.35 1212.57 L1619.94 1212.57 L1620.52 1212.57 L1621.11 1212.57 L1621.7 1212.57 L1622.28 1212.57 L1622.87 1212.57 L1623.46 1212.57 L1624.04 1212.57 L1624.63 1212.57 L1625.22 1212.57 L1625.8 1212.57 L1626.39 1212.57 L1626.97 1212.57 L1627.56 1212.57 L1628.15 1212.57 L1628.73 1212.57 L1629.32 1212.57 L1629.91 1212.57 L1630.49 1212.57 L1631.08 1212.57 L1631.67 1212.57 L1632.25 1212.57 L1632.84 1212.57 L1633.42 1212.57 L1634.01 1212.57 L1634.6 1212.57 L1635.18 1212.57 L1635.77 1212.57 L1636.36 1212.57 L1636.94 1212.57 L1637.53 1212.57 L1638.12 1212.57 L1638.7 1212.57 L1639.29 1212.57 L1639.88 1212.57 L1640.46 1212.57 L1641.05 1212.57 L1641.63 1212.57 L1642.22 1212.57 L1642.81 1212.57 L1643.39 1212.57 L1643.98 1212.57 L1644.57 1212.57 L1645.15 1212.57 L1645.74 1212.57 L1646.33 1212.57 L1646.91 1212.57 L1647.5 1212.57 L1648.09 1212.57 L1648.67 1212.57 L1649.26 1212.57 L1649.84 1212.57 L1650.43 1212.57 L1651.02 1212.57 L1651.6 1212.57 L1652.19 1212.57 L1652.78 1212.57 L1653.36 1212.57 L1653.95 1212.57 L1654.54 1212.57 L1655.12 1212.57 L1655.71 1212.57 L1656.29 1212.57 L1656.88 1212.57 L1657.47 1212.57 L1658.05 1212.57 L1658.64 1212.57 L1659.23 1212.57 L1659.81 1212.57 L1660.4 1212.57 L1660.99 1212.57 L1661.57 1212.57 L1662.16 1212.57 L1662.75 1212.57 L1663.33 1212.57 L1663.92 1212.57 L1664.5 1212.57 L1665.09 1212.57 L1665.68 1212.57 L1666.26 1212.57 L1666.85 1212.57 L1667.44 1212.57 L1668.02 1212.57 L1668.61 1212.57 L1669.2 1212.57 L1669.78 1212.57 L1670.37 1212.57 L1670.96 1212.57 L1671.54 1212.57 L1672.13 1212.57 L1672.71 1212.57 L1673.3 1212.57 L1673.89 1212.57 L1674.47 1212.57 L1675.06 1212.57 L1675.65 1212.57 L1676.23 1212.57 L1676.82 1212.57 L1677.41 1212.57 L1677.99 1212.57 L1678.58 1212.57 L1679.17 1212.57 L1679.75 1212.57 L1680.34 1212.57 L1680.92 1212.57 L1681.51 1212.57 L1682.1 1212.57 L1682.68 1212.57 L1683.27 1212.57 L1683.86 1212.57 L1684.44 1212.57 L1685.03 1212.57 L1685.62 1212.57 L1686.2 1212.57 L1686.79 1212.57 L1687.37 1212.57 L1687.96 1212.57 L1688.55 1212.57 L1689.13 1212.57 L1689.72 1212.57 L1690.31 1212.57 L1690.89 1212.57 L1691.48 1212.57 L1692.07 1212.57 L1692.65 1212.57 L1693.24 1212.57 L1693.83 1212.57 L1694.41 1212.57 L1695 1212.57 L1695.58 1212.57 L1696.17 1212.57 L1696.76 1212.57 L1697.34 1212.57 L1697.93 1212.57 L1698.52 1212.57 L1699.1 1212.57 L1699.69 1212.57 L1700.28 1212.57 L1700.86 1212.57 L1701.45 1212.57 L1702.04 1212.57 L1702.62 1212.57 L1703.21 1212.57 L1703.79 1212.57 L1704.38 1212.57 L1704.97 1212.57 L1705.55 1212.57 L1706.14 1212.57 L1706.73 1212.57 L1707.31 1212.57 L1707.9 1212.57 L1708.49 1212.57 L1709.07 1212.57 L1709.66 1212.57 L1710.24 1212.57 L1710.83 1212.57 L1711.42 1212.57 L1712 1212.57 L1712.59 1212.57 L1713.18 1212.57 L1713.76 1212.57 L1714.35 1212.57 L1714.94 1212.57 L1715.52 1212.57 L1716.11 1212.57 L1716.7 1212.57 L1717.28 1212.57 L1717.87 1212.57 L1718.45 1212.57 L1719.04 1212.57 L1719.63 1212.57 L1720.21 1212.57 L1720.8 1212.57 L1721.39 1212.57 L1721.97 1212.57 L1722.56 1212.57 L1723.15 1212.57 L1723.73 1212.57 L1724.32 1212.57 L1724.91 1212.57 L1725.49 1212.57 L1726.08 1212.57 L1726.66 1212.57 L1727.25 1212.57 L1727.84 1212.57 L1728.42 1212.57 L1729.01 1212.57 L1729.6 1212.57 L1730.18 1212.57 L1730.77 1212.57 L1731.36 1212.57 L1731.94 1212.57 L1732.53 1212.57 L1733.11 1212.57 L1733.7 1212.57 L1734.29 1212.57 L1734.87 1212.57 L1735.46 1212.57 L1736.05 1212.57 L1736.63 1212.57 L1737.22 1212.57 L1737.81 1212.57 L1738.39 1212.57 L1738.98 1212.57 L1739.57 1212.57 L1740.15 1212.57 L1740.74 1212.57 L1741.32 1212.57 L1741.91 1212.57 L1742.5 1212.57 L1743.08 1212.57 L1743.67 1212.57 L1744.26 1212.57 L1744.84 1212.57 L1745.43 1212.57 L1746.02 1212.57 L1746.6 1212.57 L1747.19 1212.57 L1747.78 1212.57 L1748.36 1212.57 L1748.95 1212.57 L1749.53 1212.57 L1750.12 1212.57 L1750.71 1212.57 L1751.29 1212.57 L1751.88 1212.57 L1752.47 1212.57 L1753.05 1212.57 L1753.64 1212.57 L1754.23 1212.57 L1754.81 1212.57 L1755.4 1212.57 L1755.99 1212.57 L1756.57 1212.57 L1757.16 1212.57 L1757.74 1212.57 L1758.33 1212.57 L1758.92 1212.57 L1759.5 1212.57 L1760.09 1212.57 L1760.68 1212.57 L1761.26 1212.57 L1761.85 1212.57 L1762.44 1212.57 L1763.02 1212.57 L1763.61 1212.57 L1764.19 1212.57 L1764.78 1212.57 L1765.37 1212.57 L1765.95 1212.57 L1766.54 1212.57 L1767.13 1212.57 L1767.71 1212.57 L1768.3 1212.57 L1768.89 1212.57 L1769.47 1212.57 L1770.06 1212.57 L1770.65 1212.57 L1771.23 1212.57 L1771.82 1212.57 L1772.4 1212.57 L1772.99 1212.57 L1773.58 1212.57 L1774.16 1212.57 L1774.75 1212.57 L1775.34 1212.57 L1775.92 1212.57 L1776.51 1212.57 L1777.1 1212.57 L1777.68 1212.57 L1778.27 1212.57 L1778.86 1212.57 L1779.44 1212.57 L1780.03 1212.57 L1780.61 1212.57 L1781.2 1212.57 L1781.79 1212.57 L1782.37 1212.57 L1782.96 1212.57 L1783.55 1212.57 L1784.13 1212.57 L1784.72 1212.57 L1785.31 1212.57 L1785.89 1212.57 L1786.48 1212.57 L1787.06 1212.57 L1787.65 1212.57 L1788.24 1212.57 L1788.82 1212.57 L1789.41 1212.57 L1790 1212.57 L1790.58 1212.57 L1791.17 1212.57 L1791.76 1212.57 L1792.34 1212.57 L1792.93 1212.57 L1793.52 1212.57 L1794.1 1212.57 L1794.69 1212.57 L1795.27 1212.57 L1795.86 1212.57 L1796.45 1212.57 L1797.03 1212.57 L1797.62 1212.57 L1798.21 1212.57 L1798.79 1212.57 L1799.38 1212.57 L1799.97 1212.57 L1800.55 1212.57 L1801.14 1212.57 L1801.73 1212.57 L1802.31 1212.57 L1802.9 1212.57 L1803.48 1212.57 L1804.07 1212.57 L1804.66 1212.57 L1805.24 1212.57 L1805.83 1212.57 L1806.42 1212.57 L1807 1212.57 L1807.59 1212.57 L1808.18 1212.57 L1808.76 1212.57 L1809.35 1212.57 L1809.94 1212.57 L1810.52 1212.57 L1811.11 1212.57 L1811.69 1212.57 L1812.28 1212.57 L1812.87 1212.57 L1813.45 1212.57 L1814.04 1212.57 L1814.63 1212.57 L1815.21 1212.57 L1815.8 1212.57 L1816.39 1212.57 L1816.97 1212.57 L1817.56 1212.57 L1818.14 1212.57 L1818.73 1212.57 L1819.32 1212.57 L1819.9 1212.57 L1820.49 1212.57 L1821.08 1212.57 L1821.66 1212.57 L1822.25 1212.57 L1822.84 1212.57 L1823.42 1212.57 L1824.01 1212.57 L1824.6 1212.57 L1825.18 1212.57 L1825.77 1212.57 L1826.35 1212.57 L1826.94 1212.57 L1827.53 1212.57 L1828.11 1212.57 L1828.7 1212.57 L1829.29 1212.57 L1829.87 1212.57 L1830.46 1212.57 L1831.05 1212.57 L1831.63 1212.57 L1832.22 1212.57 L1832.81 1212.57 L1833.39 1212.57 L1833.98 1212.57 L1834.56 1212.57 L1835.15 1212.57 L1835.74 1212.57 L1836.32 1212.57 L1836.91 1212.57 L1837.5 1212.57 L1838.08 1212.57 L1838.67 1212.57 L1839.26 1212.57 L1839.84 1212.57 L1840.43 1212.57 L1841.01 1212.57 L1841.6 1212.57 L1842.19 1212.57 L1842.77 1212.57 L1843.36 1212.57 L1843.95 1212.57 L1844.53 1212.57 L1845.12 1212.57 L1845.71 1212.57 L1846.29 1212.57 L1846.88 1212.57 L1847.47 1212.57 L1848.05 1212.57 L1848.64 1212.57 L1849.22 1212.57 L1849.81 1212.57 L1850.4 1212.57 L1850.98 1212.57 L1851.57 1212.57 L1852.16 1212.57 L1852.74 1212.57 L1853.33 1212.57 L1853.92 1212.57 L1854.5 1212.57 L1855.09 1212.57 L1855.68 1212.57 L1856.26 1212.57 L1856.85 1212.57 L1857.43 1212.57 L1858.02 1212.57 L1858.61 1212.57 L1859.19 1212.57 L1859.78 1212.57 L1860.37 1212.57 L1860.95 1212.57 L1861.54 1212.57 L1862.13 1212.57 L1862.71 1212.57 L1863.3 1212.57 L1863.88 1212.57 L1864.47 1212.57 L1865.06 1212.57 L1865.64 1212.57 L1866.23 1212.57 L1866.82 1212.57 L1867.4 1212.57 L1867.99 1212.57 L1868.58 1212.57 L1869.16 1212.57 L1869.75 1212.57 L1870.34 1212.57 L1870.92 1212.57 L1871.51 1212.57 L1872.09 1212.57 L1872.68 1212.57 L1873.27 1212.57 L1873.85 1212.57 L1874.44 1212.57 L1875.03 1212.57 L1875.61 1212.57 L1876.2 1212.57 L1876.79 1212.57 L1877.37 1212.57 L1877.96 1212.57 L1878.55 1212.57 L1879.13 1212.57 L1879.72 1212.57 L1880.3 1212.57 L1880.89 1212.57 L1881.48 1212.57 L1882.06 1212.57 L1882.65 1212.57 L1883.24 1212.57 L1883.82 1212.57 L1884.41 1212.57 L1885 1212.57 L1885.58 1212.57 L1886.17 1212.57 L1886.76 1212.57 L1887.34 1212.57 L1887.93 1212.57 L1888.51 1212.57 L1889.1 1212.57 L1889.69 1212.57 L1890.27 1212.57 L1890.86 1212.57 L1891.45 1212.57 L1892.03 1212.57 L1892.62 1212.57 L1893.21 1212.57 L1893.79 1212.57 L1894.38 1212.57 L1894.96 1212.57 L1895.55 1212.57 L1896.14 1212.57 L1896.72 1212.57 L1897.31 1212.57 L1897.9 1212.57 L1898.48 1212.57 L1899.07 1212.57 L1899.66 1212.57 L1900.24 1212.57 L1900.83 1212.57 L1901.42 1212.57 L1902 1212.57 L1902.59 1212.57 L1903.17 1212.57 L1903.76 1212.57 L1904.35 1212.57 L1904.93 1212.57 L1905.52 1212.57 L1906.11 1212.57 L1906.69 1212.57 L1907.28 1212.57 L1907.87 1212.57 L1908.45 1212.57 L1909.04 1212.57 L1909.63 1212.57 L1910.21 1212.57 L1910.8 1212.57 L1911.38 1212.57 L1911.97 1212.57 L1912.56 1212.57 L1913.14 1212.57 L1913.73 1212.57 L1914.32 1212.57 L1914.9 1212.57 L1915.49 1212.57 L1916.08 1212.57 L1916.66 1212.57 L1917.25 1212.57 L1917.83 1212.57 L1918.42 1212.57 L1919.01 1212.57 L1919.59 1212.57 L1920.18 1212.57 L1920.77 1212.57 L1921.35 1212.57 L1921.94 1212.57 L1922.53 1212.57 L1923.11 1212.57 L1923.7 1212.57 L1924.29 1212.57 L1924.87 1212.57 L1925.46 1212.57 L1926.04 1212.57 L1926.63 1212.57 L1927.22 1212.57 L1927.8 1212.57 L1928.39 1212.57 L1928.98 1212.57 L1929.56 1212.57 L1930.15 1212.57 L1930.74 1212.57 L1931.32 1212.57 L1931.91 1212.57 L1932.5 1212.57 L1933.08 1212.57 L1933.67 1212.57 L1934.25 1212.57 L1934.84 1212.57 L1935.43 1212.57 L1936.01 1212.57 L1936.6 1212.57 L1937.19 1212.57 L1937.77 1212.57 L1938.36 1212.57 L1938.95 1212.57 L1939.53 1212.57 L1940.12 1212.57 L1940.71 1212.57 L1941.29 1212.57 L1941.88 1212.57 L1942.46 1212.57 L1943.05 1212.57 L1943.64 1212.57 L1944.22 1212.57 L1944.81 1212.57 L1945.4 1212.57 L1945.98 1212.57 L1946.57 1212.57 L1947.16 1212.57 L1947.74 1212.57 L1948.33 1212.57 L1948.91 1212.57 L1949.5 1212.57 L1950.09 1212.57 L1950.67 1212.57 L1951.26 1212.57 L1951.85 1212.57 L1952.43 1212.57 L1953.02 1212.57 L1953.61 1212.57 L1954.19 1212.57 L1954.78 1212.57 L1955.37 1212.57 L1955.95 1212.57 L1956.54 1212.57 L1957.12 1212.57 L1957.71 1212.57 L1958.3 1212.57 L1958.88 1212.57 L1959.47 1212.57 L1960.06 1212.57 L1960.64 1212.57 L1961.23 1212.57 L1961.82 1212.57 L1962.4 1212.57 L1962.99 1212.57 L1963.58 1212.57 L1964.16 1212.57 L1964.75 1212.57 L1965.33 1212.57 L1965.92 1212.57 L1966.51 1212.57 L1967.09 1212.57 L1967.68 1212.57 L1968.27 1212.57 L1968.85 1212.57 L1969.44 1212.57 L1970.03 1212.57 L1970.61 1212.57 L1971.2 1212.57 L1971.78 1212.57 L1972.37 1212.57 L1972.96 1212.57 L1973.54 1212.57 L1974.13 1212.57 L1974.72 1212.57 L1975.3 1212.57 L1975.89 1212.57 L1976.48 1212.57 L1977.06 1212.57 L1977.65 1212.57 L1978.24 1212.57 L1978.82 1212.57 L1979.41 1212.57 L1979.99 1212.57 L1980.58 1212.57 L1981.17 1212.57 L1981.75 1212.57 L1982.34 1212.57 L1982.93 1212.57 L1983.51 1212.57 L1984.1 1212.57 L1984.69 1212.57 L1985.27 1212.57 L1985.86 1212.57 L1986.45 1212.57 L1987.03 1212.57 L1987.62 1212.57 L1988.2 1212.57 L1988.79 1212.57 L1989.38 1212.57 L1989.96 1212.57 L1990.55 1212.57 L1991.14 1212.57 L1991.72 1212.57 L1992.31 1212.57 L1992.9 1212.57 L1993.48 1212.57 L1994.07 1212.57 L1994.65 1212.57 L1995.24 1212.57 L1995.83 1212.57 L1996.41 1212.57 L1997 1212.57 L1997.59 1212.57 L1998.17 1212.57 L1998.76 1212.57 L1999.35 1212.57 L1999.93 1212.57 L2000.52 1212.57 L2001.11 1212.57 L2001.69 1212.57 L2002.28 1212.57 L2002.86 1212.57 L2003.45 1212.57 L2004.04 1212.57 L2004.62 1212.57 L2005.21 1212.57 L2005.8 1212.57 L2006.38 1212.57 L2006.97 1212.57 L2007.56 1212.57 L2008.14 1212.57 L2008.73 1212.57 L2009.32 1212.57 L2009.9 1212.57 L2010.49 1212.57 L2011.07 1212.57 L2011.66 1212.57 L2012.25 1212.57 L2012.83 1212.57 L2013.42 1212.57 L2014.01 1212.57 L2014.59 1212.57 L2015.18 1212.57 L2015.77 1212.57 L2016.35 1212.57 L2016.94 1212.57 L2017.53 1212.57 L2018.11 1212.57 L2018.7 1212.57 L2019.28 1212.57 L2019.87 1212.57 L2020.46 1212.57 L2021.04 1212.57 L2021.63 1212.57 L2022.22 1212.57 L2022.8 1212.57 L2023.39 1212.57 L2023.98 1212.57 L2024.56 1212.57 L2025.15 1212.57 L2025.73 1212.57 L2026.32 1212.57 L2026.91 1212.57 L2027.49 1212.57 L2028.08 1212.57 L2028.67 1212.57 L2029.25 1212.57 L2029.84 1212.57 L2030.43 1212.57 L2031.01 1212.57 L2031.6 1212.57 L2032.19 1212.57 L2032.77 1212.57 L2033.36 1212.57 L2033.94 1212.57 L2034.53 1212.57 L2035.12 1212.57 L2035.7 1212.57 L2036.29 1212.57 L2036.88 1212.57 L2037.46 1212.57 L2038.05 1212.57 L2038.64 1212.57 L2039.22 1212.57 L2039.81 1212.57 L2040.4 1212.57 L2040.98 1212.57 L2041.57 1212.57 L2042.15 1212.57 L2042.74 1212.57 L2043.33 1212.57 L2043.91 1212.57 L2044.5 1212.57 L2045.09 1212.57 L2045.67 1212.57 L2046.26 1212.57 L2046.85 1212.57 L2047.43 1212.57 L2048.02 1212.57 L2048.6 1212.57 L2049.19 1212.57 L2049.78 1212.57 L2050.36 1212.57 L2050.95 1212.57 L2051.54 1212.57 L2052.12 1212.57 L2052.71 1212.57 L2053.3 1212.57 L2053.88 1212.57 L2054.47 1212.57 L2055.06 1212.57 L2055.64 1212.57 L2056.23 1212.57 L2056.81 1212.57 L2057.4 1212.57 L2057.99 1212.57 L2058.57 1212.57 L2059.16 1212.57 L2059.75 1212.57 L2060.33 1212.57 L2060.92 1212.57 L2061.51 1212.57 L2062.09 1212.57 L2062.68 1212.57 L2063.27 1212.57 L2063.85 1212.57 L2064.44 1212.57 L2065.02 1212.57 L2065.61 1212.57 L2066.2 1212.57 L2066.78 1212.57 L2067.37 1212.57 L2067.96 1212.57 L2068.54 1212.57 L2069.13 1212.57 L2069.72 1212.57 L2070.3 1212.57 L2070.89 1212.57 L2071.48 1212.57 L2072.06 1212.57 L2072.65 1212.57 L2073.23 1212.57 L2073.82 1212.57 L2074.41 1212.57 L2074.99 1212.57 L2075.58 1212.57 L2076.17 1212.57 L2076.75 1212.57 L2077.34 1212.57 L2077.93 1212.57 L2078.51 1212.57 L2079.1 1212.57 L2079.68 1212.57 L2080.27 1212.57 L2080.86 1212.57 L2081.44 1212.57 L2082.03 1212.57 L2082.62 1212.57 L2083.2 1212.57 L2083.79 1212.57 L2084.38 1212.57 L2084.96 1212.57 L2085.55 1212.57 L2086.14 1212.57 L2086.72 1212.57 L2087.31 1212.57 L2087.89 1212.57 L2088.48 1212.57 L2089.07 1212.57 L2089.65 1212.57 L2090.24 1212.57 L2090.83 1212.57 L2091.41 1212.57 L2092 1212.57 L2092.59 1212.57 L2093.17 1212.57 L2093.76 1212.57 L2094.35 1212.57 L2094.93 1212.57 L2095.52 1212.57 L2096.1 1212.57 L2096.69 1212.57 L2097.28 1212.57 L2097.86 1212.57 L2098.45 1212.57 L2099.04 1212.57 L2099.62 1212.57 L2100.21 1212.57 L2100.8 1212.57 L2101.38 1212.57 L2101.97 1212.57 L2102.55 1212.57 L2103.14 1212.57 L2103.73 1212.57 L2104.31 1212.57 L2104.9 1212.57 L2105.49 1212.57 L2106.07 1212.57 L2106.66 1212.57 L2107.25 1212.57 L2107.83 1212.57 L2108.42 1212.57 L2109.01 1212.57 L2109.59 1212.57 L2110.18 1212.57 L2110.76 1212.57 L2111.35 1212.57 L2111.94 1212.57 L2112.52 1212.57 L2113.11 1212.57 L2113.7 1212.57 L2114.28 1212.57 L2114.87 1212.57 L2115.46 1212.57 L2116.04 1212.57 L2116.63 1212.57 L2117.22 1212.57 L2117.8 1212.57 L2118.39 1212.57 L2118.97 1212.57 L2119.56 1212.57 L2120.15 1212.57 L2120.73 1212.57 L2121.32 1212.57 L2121.91 1212.57 L2122.49 1212.57 L2123.08 1212.57 L2123.67 1212.57 L2124.25 1212.57 L2124.84 1212.57 L2125.42 1212.57 L2126.01 1212.57 L2126.6 1212.57 L2127.18 1212.57 L2127.77 1212.57 L2128.36 1212.57 L2128.94 1212.57 L2129.53 1212.57 L2130.12 1212.57 L2130.7 1212.57 L2131.29 1212.57 L2131.88 1212.57 L2132.46 1212.57 L2133.05 1212.57 L2133.63 1212.57 L2134.22 1212.57 L2134.81 1212.57 L2135.39 1212.57 L2135.98 1212.57 L2136.57 1212.57 L2137.15 1212.57 L2137.74 1212.57 L2138.33 1212.57 L2138.91 1212.57 L2139.5 1212.57 L2140.09 1212.57 L2140.67 1212.57 L2141.26 1212.57 L2141.84 1212.57 L2142.43 1212.57 L2143.02 1212.57 L2143.6 1212.57 L2144.19 1212.57 L2144.78 1212.57 L2145.36 1212.57 L2145.95 1212.57 L2146.54 1212.57 L2147.12 1212.57 L2147.71 1212.57 L2148.3 1212.57 L2148.88 1212.57 L2149.47 1212.57 L2150.05 1212.57 L2150.64 1212.57 L2151.23 1212.57 L2151.81 1212.57 L2152.4 1212.57 L2152.99 1212.57 L2153.57 1212.57 L2154.16 1212.57 L2154.75 1212.57 L2155.33 1212.57 L2155.92 1212.57 L2156.5 1212.57 L2157.09 1212.57 L2157.68 1212.57 L2158.26 1212.57 L2158.26 1211.99 L2157.68 1211.99 L2157.09 1211.99 L2156.5 1211.99 L2155.92 1211.99 L2155.33 1211.99 L2154.75 1211.99 L2154.16 1211.99 L2153.57 1211.99 L2152.99 1211.99 L2152.4 1211.99 L2151.81 1211.99 L2151.23 1211.99 L2150.64 1211.99 L2150.05 1211.99 L2149.47 1211.99 L2148.88 1211.99 L2148.3 1211.99 L2147.71 1211.99 L2147.12 1211.99 L2146.54 1211.99 L2145.95 1211.99 L2145.36 1211.99 L2144.78 1211.99 L2144.19 1211.99 L2143.6 1211.99 L2143.02 1211.99 L2142.43 1211.99 L2141.84 1211.99 L2141.26 1211.99 L2140.67 1211.99 L2140.09 1211.99 L2139.5 1211.99 L2138.91 1211.99 L2138.33 1211.99 L2137.74 1211.99 L2137.15 1211.99 L2136.57 1211.99 L2135.98 1211.99 L2135.39 1211.99 L2134.81 1211.99 L2134.22 1211.99 L2133.63 1211.99 L2133.05 1211.99 L2132.46 1211.99 L2131.88 1211.99 L2131.29 1211.99 L2130.7 1211.99 L2130.12 1211.99 L2129.53 1211.99 L2128.94 1211.99 L2128.36 1211.99 L2127.77 1211.99 L2127.18 1211.99 L2126.6 1211.99 L2126.01 1211.99 L2125.42 1211.99 L2124.84 1211.99 L2124.25 1211.99 L2123.67 1211.99 L2123.08 1211.99 L2122.49 1211.99 L2121.91 1211.99 L2121.32 1211.99 L2120.73 1211.99 L2120.15 1211.99 L2119.56 1211.99 L2118.97 1211.99 L2118.39 1211.99 L2117.8 1211.99 L2117.22 1211.99 L2116.63 1211.99 L2116.04 1211.99 L2115.46 1211.99 L2114.87 1211.99 L2114.28 1211.99 L2113.7 1211.99 L2113.11 1211.99 L2112.52 1211.99 L2111.94 1211.99 L2111.35 1211.99 L2110.76 1211.99 L2110.18 1211.99 L2109.59 1211.99 L2109.01 1211.99 L2108.42 1211.99 L2107.83 1211.99 L2107.25 1211.99 L2106.66 1211.99 L2106.07 1211.99 L2105.49 1211.99 L2104.9 1211.99 L2104.31 1211.99 L2103.73 1211.99 L2103.14 1211.99 L2102.55 1211.99 L2101.97 1211.99 L2101.38 1211.99 L2100.8 1211.99 L2100.21 1211.99 L2099.62 1211.99 L2099.04 1211.99 L2098.45 1211.99 L2097.86 1211.99 L2097.28 1211.99 L2096.69 1211.99 L2096.1 1211.99 L2095.52 1211.99 L2094.93 1211.99 L2094.35 1211.99 L2093.76 1211.99 L2093.17 1211.99 L2092.59 1211.99 L2092 1211.99 L2091.41 1211.99 L2090.83 1211.99 L2090.24 1211.99 L2089.65 1211.99 L2089.07 1211.99 L2088.48 1211.99 L2087.89 1211.99 L2087.31 1211.99 L2086.72 1211.99 L2086.14 1211.99 L2085.55 1211.99 L2084.96 1211.99 L2084.38 1211.99 L2083.79 1211.99 L2083.2 1211.99 L2082.62 1211.99 L2082.03 1211.99 L2081.44 1211.99 L2080.86 1211.99 L2080.27 1211.99 L2079.68 1211.99 L2079.1 1211.99 L2078.51 1211.99 L2077.93 1211.99 L2077.34 1211.99 L2076.75 1211.99 L2076.17 1211.99 L2075.58 1211.99 L2074.99 1211.99 L2074.41 1211.99 L2073.82 1211.99 L2073.23 1211.99 L2072.65 1211.99 L2072.06 1211.99 L2071.48 1211.99 L2070.89 1211.99 L2070.3 1211.99 L2069.72 1211.99 L2069.13 1211.99 L2068.54 1211.99 L2067.96 1211.99 L2067.37 1211.99 L2066.78 1211.99 L2066.2 1211.99 L2065.61 1211.99 L2065.02 1211.99 L2064.44 1211.99 L2063.85 1211.99 L2063.27 1211.99 L2062.68 1211.99 L2062.09 1211.99 L2061.51 1211.99 L2060.92 1211.99 L2060.33 1211.99 L2059.75 1211.99 L2059.16 1211.99 L2058.57 1211.99 L2057.99 1211.99 L2057.4 1211.99 L2056.81 1211.99 L2056.23 1211.99 L2055.64 1211.99 L2055.06 1211.99 L2054.47 1211.99 L2053.88 1211.99 L2053.3 1211.99 L2052.71 1211.99 L2052.12 1211.99 L2051.54 1211.99 L2050.95 1211.99 L2050.36 1211.99 L2049.78 1211.99 L2049.19 1211.99 L2048.6 1211.99 L2048.02 1211.99 L2047.43 1211.99 L2046.85 1211.99 L2046.26 1211.99 L2045.67 1211.99 L2045.09 1211.99 L2044.5 1211.99 L2043.91 1211.99 L2043.33 1211.99 L2042.74 1211.99 L2042.15 1211.99 L2041.57 1211.99 L2040.98 1211.99 L2040.4 1211.99 L2039.81 1211.99 L2039.22 1211.99 L2038.64 1211.99 L2038.05 1211.99 L2037.46 1211.99 L2036.88 1211.99 L2036.29 1211.99 L2035.7 1211.99 L2035.12 1211.99 L2034.53 1211.99 L2033.94 1211.99 L2033.36 1211.99 L2032.77 1211.99 L2032.19 1211.99 L2031.6 1211.99 L2031.01 1211.99 L2030.43 1211.99 L2029.84 1211.99 L2029.25 1211.99 L2028.67 1211.99 L2028.08 1211.99 L2027.49 1211.99 L2026.91 1211.99 L2026.32 1211.99 L2025.73 1211.99 L2025.15 1211.99 L2024.56 1211.99 L2023.98 1211.99 L2023.39 1211.99 L2022.8 1211.99 L2022.22 1211.99 L2021.63 1211.99 L2021.04 1211.99 L2020.46 1211.99 L2019.87 1211.99 L2019.28 1211.99 L2018.7 1211.99 L2018.11 1211.99 L2017.53 1211.99 L2016.94 1211.99 L2016.35 1211.99 L2015.77 1211.99 L2015.18 1211.99 L2014.59 1211.99 L2014.01 1211.99 L2013.42 1211.99 L2012.83 1211.99 L2012.25 1211.99 L2011.66 1211.99 L2011.07 1211.99 L2010.49 1211.99 L2009.9 1211.99 L2009.32 1211.99 L2008.73 1211.99 L2008.14 1211.99 L2007.56 1211.99 L2006.97 1211.99 L2006.38 1211.99 L2005.8 1211.99 L2005.21 1211.99 L2004.62 1211.99 L2004.04 1211.99 L2003.45 1211.99 L2002.86 1211.99 L2002.28 1211.99 L2001.69 1211.99 L2001.11 1211.99 L2000.52 1211.99 L1999.93 1211.99 L1999.35 1211.99 L1998.76 1211.99 L1998.17 1211.99 L1997.59 1211.99 L1997 1211.99 L1996.41 1211.99 L1995.83 1211.99 L1995.24 1211.99 L1994.65 1211.99 L1994.07 1211.99 L1993.48 1211.99 L1992.9 1211.99 L1992.31 1211.99 L1991.72 1211.99 L1991.14 1211.99 L1990.55 1211.99 L1989.96 1211.99 L1989.38 1211.99 L1988.79 1211.99 L1988.2 1211.99 L1987.62 1211.99 L1987.03 1211.99 L1986.45 1211.99 L1985.86 1211.99 L1985.27 1211.99 L1984.69 1211.99 L1984.1 1211.99 L1983.51 1211.99 L1982.93 1211.99 L1982.34 1211.99 L1981.75 1211.99 L1981.17 1211.99 L1980.58 1211.99 L1979.99 1211.99 L1979.41 1211.99 L1978.82 1211.99 L1978.24 1211.99 L1977.65 1211.99 L1977.06 1211.99 L1976.48 1211.99 L1975.89 1211.99 L1975.3 1211.99 L1974.72 1211.99 L1974.13 1211.99 L1973.54 1211.99 L1972.96 1211.99 L1972.37 1211.99 L1971.78 1211.99 L1971.2 1211.99 L1970.61 1211.99 L1970.03 1211.99 L1969.44 1211.99 L1968.85 1211.99 L1968.27 1211.99 L1967.68 1211.99 L1967.09 1211.99 L1966.51 1211.99 L1965.92 1211.99 L1965.33 1211.99 L1964.75 1211.99 L1964.16 1211.99 L1963.58 1211.99 L1962.99 1211.99 L1962.4 1211.99 L1961.82 1211.99 L1961.23 1211.99 L1960.64 1211.99 L1960.06 1211.99 L1959.47 1211.99 L1958.88 1211.99 L1958.3 1211.99 L1957.71 1211.99 L1957.12 1211.99 L1956.54 1211.99 L1955.95 1211.99 L1955.37 1211.99 L1954.78 1211.99 L1954.19 1211.99 L1953.61 1211.99 L1953.02 1211.99 L1952.43 1211.99 L1951.85 1211.99 L1951.26 1211.99 L1950.67 1211.99 L1950.09 1211.99 L1949.5 1211.99 L1948.91 1211.99 L1948.33 1211.99 L1947.74 1211.99 L1947.16 1211.99 L1946.57 1211.99 L1945.98 1211.99 L1945.4 1211.99 L1944.81 1211.99 L1944.22 1211.99 L1943.64 1211.99 L1943.05 1211.99 L1942.46 1211.99 L1941.88 1211.99 L1941.29 1211.99 L1940.71 1211.99 L1940.12 1211.99 L1939.53 1211.99 L1938.95 1211.99 L1938.36 1211.99 L1937.77 1211.99 L1937.19 1211.99 L1936.6 1211.99 L1936.01 1211.99 L1935.43 1211.99 L1934.84 1211.99 L1934.25 1211.99 L1933.67 1211.99 L1933.08 1211.99 L1932.5 1211.99 L1931.91 1211.99 L1931.32 1211.99 L1930.74 1211.99 L1930.15 1211.99 L1929.56 1211.99 L1928.98 1211.99 L1928.39 1211.99 L1927.8 1211.99 L1927.22 1211.99 L1926.63 1211.99 L1926.04 1211.99 L1925.46 1211.99 L1924.87 1211.99 L1924.29 1211.99 L1923.7 1211.99 L1923.11 1211.99 L1922.53 1211.99 L1921.94 1211.99 L1921.35 1211.99 L1920.77 1211.99 L1920.18 1211.99 L1919.59 1211.99 L1919.01 1211.99 L1918.42 1211.99 L1917.83 1211.99 L1917.25 1211.99 L1916.66 1211.99 L1916.08 1211.99 L1915.49 1211.99 L1914.9 1211.99 L1914.32 1211.99 L1913.73 1211.99 L1913.14 1211.99 L1912.56 1211.99 L1911.97 1211.99 L1911.38 1211.99 L1910.8 1211.99 L1910.21 1211.99 L1909.63 1211.99 L1909.04 1211.99 L1908.45 1211.99 L1907.87 1211.99 L1907.28 1211.99 L1906.69 1211.99 L1906.11 1211.99 L1905.52 1211.99 L1904.93 1211.99 L1904.35 1211.99 L1903.76 1211.99 L1903.17 1211.99 L1902.59 1211.99 L1902 1211.99 L1901.42 1211.99 L1900.83 1211.99 L1900.24 1211.99 L1899.66 1211.99 L1899.07 1211.99 L1898.48 1211.99 L1897.9 1211.99 L1897.31 1211.99 L1896.72 1211.99 L1896.14 1211.99 L1895.55 1211.99 L1894.96 1211.99 L1894.38 1211.99 L1893.79 1211.99 L1893.21 1211.99 L1892.62 1211.99 L1892.03 1211.99 L1891.45 1211.99 L1890.86 1211.99 L1890.27 1211.99 L1889.69 1211.99 L1889.1 1211.99 L1888.51 1211.99 L1887.93 1211.99 L1887.34 1211.99 L1886.76 1211.99 L1886.17 1211.99 L1885.58 1211.99 L1885 1211.99 L1884.41 1211.99 L1883.82 1211.99 L1883.24 1211.99 L1882.65 1211.99 L1882.06 1211.99 L1881.48 1211.99 L1880.89 1211.99 L1880.3 1211.99 L1879.72 1211.99 L1879.13 1211.99 L1878.55 1211.99 L1877.96 1211.99 L1877.37 1211.99 L1876.79 1211.99 L1876.2 1211.99 L1875.61 1211.99 L1875.03 1211.99 L1874.44 1211.99 L1873.85 1211.99 L1873.27 1211.99 L1872.68 1211.99 L1872.09 1211.99 L1871.51 1211.99 L1870.92 1211.99 L1870.34 1211.99 L1869.75 1211.99 L1869.16 1211.99 L1868.58 1211.99 L1867.99 1211.99 L1867.4 1211.99 L1866.82 1211.99 L1866.23 1211.99 L1865.64 1211.99 L1865.06 1211.99 L1864.47 1211.99 L1863.88 1211.99 L1863.3 1211.99 L1862.71 1211.99 L1862.13 1211.99 L1861.54 1211.99 L1860.95 1211.99 L1860.37 1211.99 L1859.78 1211.99 L1859.19 1211.99 L1858.61 1211.99 L1858.02 1211.99 L1857.43 1211.99 L1856.85 1211.99 L1856.26 1211.99 L1855.68 1211.99 L1855.09 1211.99 L1854.5 1211.99 L1853.92 1211.99 L1853.33 1211.99 L1852.74 1211.99 L1852.16 1211.99 L1851.57 1211.99 L1850.98 1211.99 L1850.4 1211.99 L1849.81 1211.99 L1849.22 1211.99 L1848.64 1211.99 L1848.05 1211.99 L1847.47 1211.99 L1846.88 1211.99 L1846.29 1211.99 L1845.71 1211.99 L1845.12 1211.99 L1844.53 1211.99 L1843.95 1211.99 L1843.36 1211.99 L1842.77 1211.99 L1842.19 1211.99 L1841.6 1211.99 L1841.01 1211.99 L1840.43 1211.99 L1839.84 1211.99 L1839.26 1211.99 L1838.67 1211.99 L1838.08 1211.99 L1837.5 1211.99 L1836.91 1211.99 L1836.32 1211.99 L1835.74 1211.99 L1835.15 1211.99 L1834.56 1211.99 L1833.98 1211.99 L1833.39 1211.99 L1832.81 1211.99 L1832.22 1211.99 L1831.63 1211.99 L1831.05 1211.99 L1830.46 1211.99 L1829.87 1211.99 L1829.29 1211.99 L1828.7 1211.99 L1828.11 1211.99 L1827.53 1211.99 L1826.94 1211.99 L1826.35 1211.99 L1825.77 1211.99 L1825.18 1211.99 L1824.6 1211.99 L1824.01 1211.99 L1823.42 1211.99 L1822.84 1211.99 L1822.25 1211.99 L1821.66 1211.99 L1821.08 1211.99 L1820.49 1211.99 L1819.9 1211.99 L1819.32 1211.99 L1818.73 1211.99 L1818.14 1211.99 L1817.56 1211.99 L1816.97 1211.99 L1816.39 1211.99 L1815.8 1211.99 L1815.21 1211.99 L1814.63 1211.99 L1814.04 1211.99 L1813.45 1211.99 L1812.87 1211.99 L1812.28 1211.99 L1811.69 1211.99 L1811.11 1211.99 L1810.52 1211.99 L1809.94 1211.99 L1809.35 1211.99 L1808.76 1211.99 L1808.18 1211.99 L1807.59 1211.99 L1807 1211.99 L1806.42 1211.99 L1805.83 1211.99 L1805.24 1211.99 L1804.66 1211.99 L1804.07 1211.99 L1803.48 1211.99 L1802.9 1211.99 L1802.31 1211.99 L1801.73 1211.99 L1801.14 1211.99 L1800.55 1211.99 L1799.97 1211.99 L1799.38 1211.99 L1798.79 1211.99 L1798.21 1211.99 L1797.62 1211.99 L1797.03 1211.99 L1796.45 1211.99 L1795.86 1211.99 L1795.27 1211.99 L1794.69 1211.99 L1794.1 1211.99 L1793.52 1211.99 L1792.93 1211.99 L1792.34 1211.99 L1791.76 1211.99 L1791.17 1211.99 L1790.58 1211.99 L1790 1211.99 L1789.41 1211.99 L1788.82 1211.99 L1788.24 1211.99 L1787.65 1211.99 L1787.06 1211.99 L1786.48 1211.99 L1785.89 1211.99 L1785.31 1211.99 L1784.72 1211.99 L1784.13 1211.99 L1783.55 1211.99 L1782.96 1211.99 L1782.37 1211.99 L1781.79 1211.99 L1781.2 1211.99 L1780.61 1211.99 L1780.03 1211.99 L1779.44 1211.99 L1778.86 1211.99 L1778.27 1211.99 L1777.68 1211.99 L1777.1 1211.99 L1776.51 1211.99 L1775.92 1211.99 L1775.34 1211.99 L1774.75 1211.99 L1774.16 1211.99 L1773.58 1211.99 L1772.99 1211.99 L1772.4 1211.99 L1771.82 1211.99 L1771.23 1211.99 L1770.65 1211.99 L1770.06 1211.99 L1769.47 1211.99 L1768.89 1211.99 L1768.3 1211.99 L1767.71 1211.99 L1767.13 1211.99 L1766.54 1211.99 L1765.95 1211.99 L1765.37 1211.99 L1764.78 1211.99 L1764.19 1211.99 L1763.61 1211.99 L1763.02 1211.99 L1762.44 1211.99 L1761.85 1211.99 L1761.26 1211.99 L1760.68 1211.99 L1760.09 1211.99 L1759.5 1211.99 L1758.92 1211.99 L1758.33 1211.99 L1757.74 1211.99 L1757.16 1211.99 L1756.57 1211.99 L1755.99 1211.99 L1755.4 1211.99 L1754.81 1211.99 L1754.23 1211.99 L1753.64 1211.99 L1753.05 1211.99 L1752.47 1211.99 L1751.88 1211.99 L1751.29 1211.99 L1750.71 1211.99 L1750.12 1211.99 L1749.53 1211.99 L1748.95 1211.99 L1748.36 1211.99 L1747.78 1211.99 L1747.19 1211.99 L1746.6 1211.99 L1746.02 1211.99 L1745.43 1211.99 L1744.84 1211.99 L1744.26 1211.99 L1743.67 1211.99 L1743.08 1211.99 L1742.5 1211.99 L1741.91 1211.99 L1741.32 1211.99 L1740.74 1211.99 L1740.15 1211.99 L1739.57 1211.99 L1738.98 1211.99 L1738.39 1211.99 L1737.81 1211.99 L1737.22 1211.99 L1736.63 1211.99 L1736.05 1211.99 L1735.46 1211.99 L1734.87 1211.99 L1734.29 1211.99 L1733.7 1211.99 L1733.11 1211.99 L1732.53 1211.99 L1731.94 1211.99 L1731.36 1211.99 L1730.77 1211.99 L1730.18 1211.99 L1729.6 1211.99 L1729.01 1211.99 L1728.42 1211.99 L1727.84 1211.99 L1727.25 1211.99 L1726.66 1211.99 L1726.08 1211.99 L1725.49 1211.99 L1724.91 1211.99 L1724.32 1211.99 L1723.73 1211.99 L1723.15 1211.99 L1722.56 1211.99 L1721.97 1211.99 L1721.39 1211.99 L1720.8 1211.99 L1720.21 1211.99 L1719.63 1211.99 L1719.04 1211.99 L1718.45 1211.99 L1717.87 1211.99 L1717.28 1211.99 L1716.7 1211.99 L1716.11 1211.99 L1715.52 1211.99 L1714.94 1211.99 L1714.35 1211.99 L1713.76 1211.99 L1713.18 1211.99 L1712.59 1211.99 L1712 1211.99 L1711.42 1211.99 L1710.83 1211.99 L1710.24 1211.99 L1709.66 1211.99 L1709.07 1211.99 L1708.49 1211.99 L1707.9 1211.99 L1707.31 1211.99 L1706.73 1211.99 L1706.14 1211.99 L1705.55 1211.99 L1704.97 1211.99 L1704.38 1211.99 L1703.79 1211.99 L1703.21 1211.99 L1702.62 1211.99 L1702.04 1211.99 L1701.45 1211.99 L1700.86 1211.99 L1700.28 1211.99 L1699.69 1211.99 L1699.1 1211.99 L1698.52 1211.99 L1697.93 1211.99 L1697.34 1211.99 L1696.76 1211.99 L1696.17 1211.99 L1695.58 1211.99 L1695 1211.99 L1694.41 1211.99 L1693.83 1211.99 L1693.24 1211.99 L1692.65 1211.99 L1692.07 1211.99 L1691.48 1211.99 L1690.89 1211.99 L1690.31 1211.99 L1689.72 1211.99 L1689.13 1211.99 L1688.55 1211.99 L1687.96 1211.99 L1687.37 1211.99 L1686.79 1211.99 L1686.2 1211.99 L1685.62 1211.99 L1685.03 1211.99 L1684.44 1211.99 L1683.86 1211.99 L1683.27 1211.99 L1682.68 1211.99 L1682.1 1211.99 L1681.51 1211.99 L1680.92 1211.99 L1680.34 1211.99 L1679.75 1211.99 L1679.17 1211.99 L1678.58 1211.99 L1677.99 1211.99 L1677.41 1211.99 L1676.82 1211.99 L1676.23 1211.99 L1675.65 1211.99 L1675.06 1211.99 L1674.47 1211.99 L1673.89 1211.99 L1673.3 1211.99 L1672.71 1211.99 L1672.13 1211.99 L1671.54 1211.99 L1670.96 1211.99 L1670.37 1211.99 L1669.78 1211.99 L1669.2 1211.99 L1668.61 1211.99 L1668.02 1211.99 L1667.44 1211.99 L1666.85 1211.99 L1666.26 1211.99 L1665.68 1211.99 L1665.09 1211.99 L1664.5 1211.99 L1663.92 1211.99 L1663.33 1211.99 L1662.75 1211.99 L1662.16 1211.99 L1661.57 1211.99 L1660.99 1211.99 L1660.4 1211.99 L1659.81 1211.99 L1659.23 1211.99 L1658.64 1211.99 L1658.05 1211.99 L1657.47 1211.99 L1656.88 1211.99 L1656.29 1211.99 L1655.71 1211.99 L1655.12 1211.99 L1654.54 1211.99 L1653.95 1211.99 L1653.36 1211.99 L1652.78 1211.99 L1652.19 1211.99 L1651.6 1211.99 L1651.02 1211.99 L1650.43 1211.99 L1649.84 1211.99 L1649.26 1211.99 L1648.67 1211.99 L1648.09 1211.99 L1647.5 1211.99 L1646.91 1211.99 L1646.33 1211.99 L1645.74 1211.99 L1645.15 1211.99 L1644.57 1211.99 L1643.98 1211.99 L1643.39 1211.99 L1642.81 1211.99 L1642.22 1211.99 L1641.63 1211.99 L1641.05 1211.99 L1640.46 1211.99 L1639.88 1211.99 L1639.29 1211.99 L1638.7 1211.99 L1638.12 1211.99 L1637.53 1211.99 L1636.94 1211.99 L1636.36 1211.99 L1635.77 1211.99 L1635.18 1211.99 L1634.6 1211.99 L1634.01 1211.99 L1633.42 1211.99 L1632.84 1211.99 L1632.25 1211.99 L1631.67 1211.99 L1631.08 1211.99 L1630.49 1211.99 L1629.91 1211.99 L1629.32 1211.99 L1628.73 1211.99 L1628.15 1211.99 L1627.56 1211.99 L1626.97 1211.99 L1626.39 1211.99 L1625.8 1211.99 L1625.22 1211.99 L1624.63 1211.99 L1624.04 1211.99 L1623.46 1211.99 L1622.87 1211.99 L1622.28 1211.99 L1621.7 1211.99 L1621.11 1211.99 L1620.52 1211.99 L1619.94 1211.99 L1619.35 1211.99 L1618.76 1211.99 L1618.18 1211.99 L1617.59 1211.99 L1617.01 1211.99 L1616.42 1211.99 L1615.83 1211.99 L1615.25 1211.99 L1614.66 1211.99 L1614.07 1211.99 L1613.49 1211.99 L1612.9 1211.99 L1612.31 1211.99 L1611.73 1211.99 L1611.14 1211.99 L1610.55 1211.99 L1609.97 1211.99 L1609.38 1211.99 L1608.8 1211.99 L1608.21 1211.99 L1607.62 1211.99 L1607.04 1211.99 L1606.45 1211.99 L1605.86 1211.99 L1605.28 1211.99 L1604.69 1211.99 L1604.1 1211.99 L1603.52 1211.99 L1602.93 1211.99 L1602.34 1211.99 L1601.76 1211.99 L1601.17 1211.99 L1600.59 1211.99 L1600 1211.99 L1599.41 1211.99 L1598.83 1211.99 L1598.24 1211.99 L1597.65 1211.99 L1597.07 1211.99 L1596.48 1211.99 L1595.89 1211.99 L1595.31 1211.99 L1594.72 1211.99 L1594.14 1211.99 L1593.55 1211.99 L1592.96 1211.99 L1592.38 1211.99 L1591.79 1211.99 L1591.2 1211.99 L1590.62 1211.99 L1590.03 1211.99 L1589.44 1211.99 L1588.86 1211.99 L1588.27 1211.99 L1587.68 1211.99 L1587.1 1211.99 L1586.51 1211.99 L1585.93 1211.99 L1585.34 1211.99 L1584.75 1211.99 L1584.17 1211.99 L1583.58 1211.99 L1582.99 1211.99 L1582.41 1211.99 L1581.82 1211.99 L1581.23 1211.99 L1580.65 1211.99 L1580.06 1211.99 L1579.47 1211.99 L1578.89 1211.99 L1578.3 1211.99 L1577.72 1211.99 L1577.13 1211.99 L1576.54 1211.99 L1575.96 1211.99 L1575.37 1211.99 L1574.78 1211.99 L1574.2 1211.99 L1573.61 1211.99 L1573.02 1211.99 L1572.44 1211.99 L1571.85 1211.99 L1571.27 1211.99 L1570.68 1211.99 L1570.09 1211.99 L1569.51 1211.99 L1568.92 1211.99 L1568.33 1211.99 L1567.75 1211.99 L1567.16 1211.99 L1566.57 1211.99 L1565.99 1211.99 L1565.4 1211.99 L1564.81 1211.99 L1564.23 1211.99 L1563.64 1211.99 L1563.06 1211.99 L1562.47 1211.99 L1561.88 1211.99 L1561.3 1211.99 L1560.71 1211.99 L1560.12 1211.99 L1559.54 1211.99 L1558.95 1211.99 L1558.36 1211.99 L1557.78 1211.99 L1557.19 1211.99 L1556.6 1211.99 L1556.02 1211.99 L1555.43 1211.99 L1554.85 1211.99 L1554.26 1211.99 L1553.67 1211.99 L1553.09 1211.99 L1552.5 1211.99 L1551.91 1211.99 L1551.33 1211.99 L1550.74 1211.99 L1550.15 1211.99 L1549.57 1211.99 L1548.98 1211.99 L1548.4 1211.99 L1547.81 1211.99 L1547.22 1211.99 L1546.64 1211.99 L1546.05 1211.99 L1545.46 1211.99 L1544.88 1211.99 L1544.29 1211.99 L1543.7 1211.99 L1543.12 1211.99 L1542.53 1211.99 L1541.94 1211.99 L1541.36 1211.99 L1540.77 1211.99 L1540.19 1211.99 L1539.6 1211.99 L1539.01 1211.99 L1538.43 1211.99 L1537.84 1211.99 L1537.25 1211.99 L1536.67 1211.99 L1536.08 1211.99 L1535.49 1211.99 L1534.91 1211.99 L1534.32 1211.99 L1533.73 1211.99 L1533.15 1211.99 L1532.56 1211.99 L1531.98 1211.99 L1531.39 1211.99 L1530.8 1211.99 L1530.22 1211.99 L1529.63 1211.99 L1529.04 1211.99 L1528.46 1211.99 L1527.87 1211.99 L1527.28 1211.99 L1526.7 1211.99 L1526.11 1211.99 L1525.52 1211.99 L1524.94 1211.99 L1524.35 1211.99 L1523.77 1211.99 L1523.18 1211.99 L1522.59 1211.99 L1522.01 1211.99 L1521.42 1211.99 L1520.83 1211.99 L1520.25 1211.99 L1519.66 1211.99 L1519.07 1211.99 L1518.49 1211.99 L1517.9 1211.99 L1517.32 1211.99 L1516.73 1211.99 L1516.14 1211.99 L1515.56 1211.99 L1514.97 1211.99 L1514.38 1211.99 L1513.8 1211.99 L1513.21 1211.99 L1512.62 1211.99 L1512.04 1211.99 L1511.45 1211.99 L1510.86 1211.99 L1510.28 1211.99 L1509.69 1211.99 L1509.11 1211.99 L1508.52 1211.99 L1507.93 1211.99 L1507.35 1211.99 L1506.76 1211.99 L1506.17 1211.99 L1505.59 1211.99 L1505 1211.99 L1504.41 1211.99 L1503.83 1211.99 L1503.24 1211.99 L1502.65 1211.99 L1502.07 1211.99 L1501.48 1211.99 L1500.9 1211.99 L1500.31 1211.99 L1499.72 1211.99 L1499.14 1211.99 L1498.55 1211.99 L1497.96 1211.99 L1497.38 1211.99 L1496.79 1211.99 L1496.2 1211.99 L1495.62 1211.99 L1495.03 1211.99 L1494.45 1211.99 L1493.86 1211.99 L1493.27 1211.99 L1492.69 1211.99 L1492.1 1211.99 L1491.51 1211.99 L1490.93 1211.99 L1490.34 1211.99 L1489.75 1211.99 L1489.17 1211.99 L1488.58 1211.99 L1487.99 1211.99 L1487.41 1211.99 L1486.82 1211.99 L1486.24 1211.99 L1485.65 1211.99 L1485.06 1211.99 L1484.48 1211.99 L1483.89 1211.99 L1483.3 1211.99 L1482.72 1211.99 L1482.13 1211.99 L1481.54 1211.99 L1480.96 1211.99 L1480.37 1211.99 L1479.78 1211.99 L1479.2 1211.99 L1478.61 1211.99 L1478.03 1211.99 L1477.44 1211.99 L1476.85 1211.99 L1476.27 1211.99 L1475.68 1211.99 L1475.09 1211.99 L1474.51 1211.99 L1473.92 1211.99 L1473.33 1211.99 L1472.75 1211.99 L1472.16 1211.99 L1471.57 1211.99 L1470.99 1211.99 L1470.4 1211.99 L1469.82 1211.99 L1469.23 1211.99 L1468.64 1211.99 L1468.06 1211.99 L1467.47 1211.99 L1466.88 1211.99 L1466.3 1211.99 L1465.71 1211.99 L1465.12 1211.99 L1464.54 1211.99 L1463.95 1211.99 L1463.37 1211.99 L1462.78 1211.99 L1462.19 1211.99 L1461.61 1211.99 L1461.02 1211.99 L1460.43 1211.99 L1459.85 1211.99 L1459.26 1211.99 L1458.67 1211.99 L1458.09 1211.99 L1457.5 1211.99 L1456.91 1211.99 L1456.33 1211.99 L1455.74 1211.99 L1455.16 1211.99 L1454.57 1211.99 L1453.98 1211.99 L1453.4 1211.99 L1452.81 1211.99 L1452.22 1211.99 L1451.64 1211.99 L1451.05 1211.99 L1450.46 1211.99 L1449.88 1211.99 L1449.29 1211.99 L1448.7 1211.99 L1448.12 1211.99 L1447.53 1211.99 L1446.95 1211.99 L1446.36 1211.99 L1445.77 1211.99 L1445.19 1211.99 L1444.6 1211.99 L1444.01 1211.99 L1443.43 1211.99 L1442.84 1211.99 L1442.25 1211.99 L1441.67 1211.99 L1441.08 1211.99 L1440.5 1211.99 L1439.91 1211.99 L1439.32 1211.99 L1438.74 1211.99 L1438.15 1211.99 L1437.56 1211.99 L1436.98 1211.99 L1436.39 1211.99 L1435.8 1211.99 L1435.22 1211.99 L1434.63 1211.99 L1434.04 1211.99 L1433.46 1211.99 L1432.87 1211.99 L1432.29 1211.99 L1431.7 1211.99 L1431.11 1211.99 L1430.53 1211.99 L1429.94 1211.99 L1429.35 1211.99 L1428.77 1211.99 L1428.18 1211.99 L1427.59 1211.99 L1427.01 1211.99 L1426.42 1211.99 L1425.83 1211.99 L1425.25 1211.99 L1424.66 1211.99 L1424.08 1211.99 L1423.49 1211.99 L1422.9 1211.99 L1422.32 1211.99 L1421.73 1211.99 L1421.14 1211.99 L1420.56 1211.99 L1419.97 1211.99 L1419.38 1211.99 L1418.8 1211.99 L1418.21 1211.99 L1417.63 1211.99 L1417.04 1211.99 L1416.45 1211.99 L1415.87 1211.99 L1415.28 1211.99 L1414.69 1211.99 L1414.11 1211.99 L1413.52 1211.99 L1412.93 1211.99 L1412.35 1211.99 L1411.76 1211.99 L1411.17 1211.99 L1410.59 1211.99 L1410 1211.99 L1409.42 1211.99 L1408.83 1211.99 L1408.24 1211.99 L1407.66 1211.99 L1407.07 1211.99 L1406.48 1211.99 L1405.9 1211.99 L1405.31 1211.99 L1404.72 1211.99 L1404.14 1211.99 L1403.55 1211.99 L1402.96 1211.99 L1402.38 1211.99 L1401.79 1211.99 L1401.21 1211.99 L1400.62 1211.99 L1400.03 1211.99 L1399.45 1211.99 L1398.86 1211.99 L1398.27 1211.99 L1397.69 1211.99 L1397.1 1211.99 L1396.51 1211.99 L1395.93 1211.99 L1395.34 1211.99 L1394.75 1211.99 L1394.17 1211.99 L1393.58 1211.99 L1393 1211.99 L1392.41 1211.99 L1391.82 1211.99 L1391.24 1211.99 L1390.65 1211.99 L1390.06 1211.99 L1389.48 1211.99 L1388.89 1211.99 L1388.3 1211.99 L1387.72 1211.99 L1387.13 1211.99 L1386.55 1211.99 L1385.96 1211.99 L1385.37 1211.99 L1384.79 1211.99 L1384.2 1211.99 L1383.61 1211.99 L1383.03 1211.99 L1382.44 1211.99 L1381.85 1211.99 L1381.27 1211.99 L1380.68 1211.99 L1380.09 1211.99 L1379.51 1211.99 L1378.92 1211.99 L1378.34 1211.99 L1377.75 1211.99 L1377.16 1211.99 L1376.58 1211.99 L1375.99 1211.99 L1375.4 1211.99 L1374.82 1211.99 L1374.23 1211.99 L1373.64 1211.99 L1373.06 1211.99 L1372.47 1211.99 L1371.88 1211.99 L1371.3 1211.99 L1370.71 1211.99 L1370.13 1211.99 L1369.54 1211.99 L1368.95 1211.99 L1368.37 1211.99 L1367.78 1211.99 L1367.19 1211.99 L1366.61 1211.99 L1366.02 1211.99 L1365.43 1211.99 L1364.85 1211.99 L1364.26 1211.99 L1363.68 1211.99 L1363.09 1211.99 L1362.5 1211.99 L1361.92 1211.99 L1361.33 1211.99 L1360.74 1211.99 L1360.16 1211.99 L1359.57 1211.99 L1358.98 1211.99 L1358.4 1211.99 L1357.81 1211.99 L1357.22 1211.99 L1356.64 1211.99 L1356.05 1211.99 L1355.47 1211.99 L1354.88 1211.99 L1354.29 1211.99 L1353.71 1211.99 L1353.12 1211.99 L1352.53 1211.99 L1351.95 1211.99 L1351.36 1211.99 L1350.77 1211.99 L1350.19 1211.99 L1349.6 1211.99 L1349.01 1211.99 L1348.43 1211.99 L1347.84 1211.99 L1347.26 1211.99 L1346.67 1211.99 L1346.08 1211.99 L1345.5 1211.99 L1344.91 1211.99 L1344.32 1211.99 L1343.74 1211.99 L1343.15 1211.99 L1342.56 1211.99 L1341.98 1211.99 L1341.39 1211.99 L1340.8 1211.99 L1340.22 1211.99 L1339.63 1211.99 L1339.05 1211.99 L1338.46 1211.99 L1337.87 1211.99 L1337.29 1211.99 L1336.7 1211.99 L1336.11 1211.99 L1335.53 1211.99 L1334.94 1211.99 L1334.35 1211.99 L1333.77 1211.99 L1333.18 1211.99 L1332.6 1211.99 L1332.01 1211.99 L1331.42 1211.99 L1330.84 1211.99 L1330.25 1211.99 L1329.66 1211.99 L1329.08 1211.99 L1328.49 1211.99 L1327.9 1211.99 L1327.32 1211.99 L1326.73 1211.99 L1326.14 1211.99 L1325.56 1211.99 L1324.97 1211.99 L1324.39 1211.99 L1323.8 1211.99 L1323.21 1211.99 L1322.63 1211.99 L1322.04 1211.99 L1321.45 1211.99 L1320.87 1211.99 L1320.28 1211.99 L1319.69 1211.99 L1319.11 1211.99 L1318.52 1211.99 L1317.93 1211.99 L1317.35 1211.99 L1316.76 1211.99 L1316.18 1211.99 L1315.59 1211.99 L1315 1211.99 L1314.42 1211.99 L1313.83 1211.99 L1313.24 1211.99 L1312.66 1211.99 L1312.07 1211.99 L1311.48 1211.99 L1310.9 1211.99 L1310.31 1211.99 L1309.73 1211.99 L1309.14 1211.99 L1308.55 1211.99 L1307.97 1211.99 L1307.38 1211.99 L1306.79 1211.99 L1306.21 1211.99 L1305.62 1211.99 L1305.03 1211.99 L1304.45 1211.99 L1303.86 1211.99 L1303.27 1211.99 L1302.69 1211.99 L1302.1 1211.99 L1301.52 1211.99 L1300.93 1211.99 L1300.34 1211.99 L1299.76 1211.99 L1299.17 1211.99 L1298.58 1211.99 L1298 1211.99 L1297.41 1211.99 L1296.82 1211.99 L1296.24 1211.99 L1295.65 1211.99 L1295.06 1211.99 L1294.48 1211.99 L1293.89 1211.99 L1293.31 1211.99 L1292.72 1211.99 L1292.13 1211.99 L1291.55 1211.99 L1290.96 1211.99 L1290.37 1211.99 L1289.79 1211.99 L1289.2 1211.99 L1288.61 1211.99 L1288.03 1211.99 L1287.44 1211.99 L1286.86 1211.99 L1286.27 1211.99 L1285.68 1211.99 L1285.1 1211.99 L1284.51 1211.99 L1283.92 1211.99 L1283.34 1211.99 L1282.75 1211.99 L1282.16 1211.99 L1281.58 1211.99 L1280.99 1211.99 L1280.4 1211.99 L1279.82 1211.99 L1279.23 1211.99 L1278.65 1211.99 L1278.06 1211.99 L1277.47 1211.99 L1276.89 1211.99 L1276.3 1211.99 L1275.71 1211.99 L1275.13 1211.99 L1274.54 1211.99 L1273.95 1211.99 L1273.37 1211.99 L1272.78 1211.99 L1272.19 1211.99 L1271.61 1211.99 L1271.02 1211.99 L1270.44 1211.99 L1269.85 1211.99 L1269.26 1211.99 L1268.68 1211.99 L1268.09 1211.99 L1267.5 1211.99 L1266.92 1211.99 L1266.33 1211.99 L1265.74 1211.99 L1265.16 1211.99 L1264.57 1211.99 L1263.98 1211.99 L1263.4 1211.99 L1262.81 1211.99 L1262.23 1211.99 L1261.64 1211.99 L1261.05 1211.99 L1260.47 1211.99 L1259.88 1211.99 L1259.29 1211.99 L1258.71 1211.99 L1258.12 1211.99 L1257.53 1211.99 L1256.95 1211.99 L1256.36 1211.99 L1255.78 1211.99 L1255.19 1211.99 L1254.6 1211.99 L1254.02 1211.99 L1253.43 1211.99 L1252.84 1211.99 L1252.26 1211.99 L1251.67 1211.99 L1251.08 1211.99 L1250.5 1211.99 L1249.91 1211.99 L1249.32 1211.99 L1248.74 1211.99 L1248.15 1211.99 L1247.57 1211.99 L1246.98 1211.99 L1246.39 1211.99 L1245.81 1211.99 L1245.22 1211.99 L1244.63 1211.99 L1244.05 1211.99 L1243.46 1211.99 L1242.87 1211.99 L1242.29 1211.99 L1241.7 1211.99 L1241.11 1211.99 L1240.53 1211.99 L1239.94 1211.99 L1239.36 1211.99 L1238.77 1211.99 L1238.18 1211.99 L1237.6 1211.99 L1237.01 1211.99 L1236.42 1211.99 L1235.84 1211.99 L1235.25 1211.99 L1234.66 1211.99 L1234.08 1211.99 L1233.49 1211.99 L1232.91 1211.99 L1232.32 1211.99 L1231.73 1211.99 L1231.15 1211.99 L1230.56 1211.99 L1229.97 1211.99 L1229.39 1211.99 L1228.8 1211.99 L1228.21 1211.99 L1227.63 1211.99 L1227.04 1211.99 L1226.45 1211.99 L1225.87 1211.99 L1225.28 1211.99 L1224.7 1211.99 L1224.11 1211.99 L1223.52 1211.99 L1222.94 1211.99 L1222.35 1211.99 L1221.76 1211.99 L1221.18 1211.99 L1220.59 1211.99 L1220 1211.99 L1219.42 1211.99 L1218.83 1211.99 L1218.24 1211.99 L1217.66 1211.99 L1217.07 1211.99 L1216.49 1211.99 L1215.9 1211.99 L1215.31 1211.99 L1214.73 1211.99 L1214.14 1211.99 L1213.55 1211.99 L1212.97 1211.99 L1212.38 1211.99 L1211.79 1211.99 L1211.21 1211.99 L1210.62 1211.99 L1210.03 1211.99 L1209.45 1211.99 L1208.86 1211.99 L1208.28 1211.99 L1207.69 1211.99 L1207.1 1211.99 L1206.52 1211.99 L1205.93 1211.99 L1205.34 1211.99 L1204.76 1211.99 L1204.17 1211.99 L1203.58 1211.99 L1203 1211.99 L1202.41 1211.99 L1201.83 1211.99 L1201.24 1211.99 L1200.65 1211.99 L1200.07 1211.99 L1199.48 1211.99 L1198.89 1211.99 L1198.31 1211.99 L1197.72 1211.99 L1197.13 1211.99 L1196.55 1211.99 L1195.96 1211.99 L1195.37 1211.99 L1194.79 1211.99 L1194.2 1211.99 L1193.62 1211.99 L1193.03 1211.99 L1192.44 1211.99 L1191.86 1211.99 L1191.27 1211.99 L1190.68 1211.99 L1190.1 1211.99 L1189.51 1211.99 L1188.92 1211.99 L1188.34 1211.99 L1187.75 1211.99 L1187.16 1211.99 L1186.58 1211.99 L1185.99 1211.99 L1185.41 1211.99 L1184.82 1211.99 L1184.23 1211.99 L1183.65 1211.99 L1183.06 1211.99 L1182.47 1211.99 L1181.89 1211.99 L1181.3 1211.99 L1180.71 1211.99 L1180.13 1211.99 L1179.54 1211.99 L1178.96 1211.99 L1178.37 1211.99 L1177.78 1211.99 L1177.2 1211.99 L1176.61 1211.99 L1176.02 1211.99 L1175.44 1211.99 L1174.85 1211.99 L1174.26 1211.99 L1173.68 1211.99 L1173.09 1211.99 L1172.5 1211.99 L1171.92 1211.99 L1171.33 1211.99 L1170.75 1211.99 L1170.16 1211.99 L1169.57 1211.99 L1168.99 1211.99 L1168.4 1211.99 L1167.81 1211.99 L1167.23 1211.99 L1166.64 1211.99 L1166.05 1211.99 L1165.47 1211.99 L1164.88 1211.99 L1164.29 1211.99 L1163.71 1211.99 L1163.12 1211.99 L1162.54 1211.99 L1161.95 1211.99 L1161.36 1211.99 L1160.78 1211.99 L1160.19 1211.99 L1159.6 1211.99 L1159.02 1211.99 L1158.43 1211.99 L1157.84 1211.99 L1157.26 1211.99 L1156.67 1211.99 L1156.09 1211.99 L1155.5 1211.99 L1154.91 1211.99 L1154.33 1211.99 L1153.74 1211.99 L1153.15 1211.99 L1152.57 1211.99 L1151.98 1211.99 L1151.39 1211.99 L1150.81 1211.99 L1150.22 1211.99 L1149.63 1211.99 L1149.05 1211.99 L1148.46 1211.99 L1147.88 1211.99 L1147.29 1211.99 L1146.7 1211.99 L1146.12 1211.99 L1145.53 1211.99 L1144.94 1211.99 L1144.36 1211.99 L1143.77 1211.99 L1143.18 1211.99 L1142.6 1211.99 L1142.01 1211.99 L1141.42 1211.99 L1140.84 1211.99 L1140.25 1211.99 L1139.67 1211.99 L1139.08 1211.99 L1138.49 1211.99 L1137.91 1211.99 L1137.32 1211.99 L1136.73 1211.99 L1136.15 1211.99 L1135.56 1211.99 L1134.97 1211.99 L1134.39 1211.99 L1133.8 1211.99 L1133.21 1211.99 L1132.63 1211.99 L1132.04 1211.99 L1131.46 1211.99 L1130.87 1211.99 L1130.28 1211.99 L1129.7 1211.99 L1129.11 1211.99 L1128.52 1211.99 L1127.94 1211.99 L1127.35 1211.99 L1126.76 1211.99 L1126.18 1211.99 L1125.59 1211.99 L1125.01 1211.99 L1124.42 1211.99 L1123.83 1211.99 L1123.25 1211.99 L1122.66 1211.99 L1122.07 1211.99 L1121.49 1211.99 L1120.9 1211.99 L1120.31 1211.99 L1119.73 1211.99 L1119.14 1211.99 L1118.55 1211.99 L1117.97 1211.99 L1117.38 1211.99 L1116.8 1211.99 L1116.21 1211.99 L1115.62 1211.99 L1115.04 1211.99 L1114.45 1211.99 L1113.86 1211.99 L1113.28 1211.99 L1112.69 1211.99 L1112.1 1211.99 L1111.52 1211.99 L1110.93 1211.99 L1110.34 1211.99 L1109.76 1211.99 L1109.17 1211.99 L1108.59 1211.99 L1108 1211.99 L1107.41 1211.99 L1106.83 1211.99 L1106.24 1211.99 L1105.65 1211.99 L1105.07 1211.99 L1104.48 1211.99 L1103.89 1211.99 L1103.31 1211.99 L1102.72 1211.99 L1102.14 1211.99 L1101.55 1211.99 L1100.96 1211.99 L1100.38 1211.99 L1099.79 1211.99 L1099.2 1211.99 L1098.62 1211.99 L1098.03 1211.99 L1097.44 1211.99 L1096.86 1211.99 L1096.27 1211.99 L1095.68 1211.99 L1095.1 1211.99 L1094.51 1211.99 L1093.93 1211.99 L1093.34 1211.99 L1092.75 1211.99 L1092.17 1211.99 L1091.58 1211.99 L1090.99 1211.99 L1090.41 1211.99 L1089.82 1211.99 L1089.23 1211.99 L1088.65 1211.99 L1088.06 1211.99 L1087.47 1211.99 L1086.89 1211.99 L1086.3 1211.99 L1085.72 1211.99 L1085.13 1211.99 L1084.54 1211.99 L1083.96 1211.99 L1083.37 1211.99 L1082.78 1211.99 L1082.2 1211.99 L1081.61 1211.99 L1081.02 1211.99 L1080.44 1211.99 L1079.85 1211.99 L1079.26 1211.99 L1078.68 1211.99 L1078.09 1211.99 L1077.51 1211.99 L1076.92 1211.99 L1076.33 1211.99 L1075.75 1211.99 L1075.16 1211.99 L1074.57 1211.99 L1073.99 1211.99 L1073.4 1211.99 L1072.81 1211.99 L1072.23 1211.99 L1071.64 1211.99 L1071.06 1211.99 L1070.47 1211.99 L1069.88 1211.99 L1069.3 1211.99 L1068.71 1211.99 L1068.12 1211.99 L1067.54 1211.99 L1066.95 1211.99 L1066.36 1211.99 L1065.78 1211.99 L1065.19 1211.99 L1064.6 1211.99 L1064.02 1211.99 L1063.43 1211.99 L1062.85 1211.99 L1062.26 1211.99 L1061.67 1211.99 L1061.09 1211.99 L1060.5 1211.99 L1059.91 1211.99 L1059.33 1211.99 L1058.74 1211.99 L1058.15 1211.99 L1057.57 1211.99 L1056.98 1211.99 L1056.39 1211.99 L1055.81 1211.99 L1055.22 1211.99 L1054.64 1211.99 L1054.05 1211.99 L1053.46 1211.99 L1052.88 1211.99 L1052.29 1211.99 L1051.7 1211.99 L1051.12 1211.99 L1050.53 1211.99 L1049.94 1211.99 L1049.36 1211.99 L1048.77 1211.99 L1048.19 1211.99 L1047.6 1211.99 L1047.01 1211.99 L1046.43 1211.99 L1045.84 1211.99 L1045.25 1211.99 L1044.67 1211.99 L1044.08 1211.99 L1043.49 1211.99 L1042.91 1211.99 L1042.32 1211.99 L1041.73 1211.99 L1041.15 1211.99 L1040.56 1211.99 L1039.98 1211.99 L1039.39 1211.99 L1038.8 1211.99 L1038.22 1211.99 L1037.63 1211.99 L1037.04 1211.99 L1036.46 1211.99 L1035.87 1211.99 L1035.28 1211.99 L1034.7 1211.99 L1034.11 1211.99 L1033.52 1211.99 L1032.94 1211.99 L1032.35 1211.99 L1031.77 1211.99 L1031.18 1211.99 L1030.59 1211.99 L1030.01 1211.99 L1029.42 1211.99 L1028.83 1211.99 L1028.25 1211.99 L1027.66 1211.99 L1027.07 1211.99 L1026.49 1211.99 L1025.9 1211.99 L1025.32 1211.99 L1024.73 1211.99 L1024.14 1211.99 L1023.56 1211.99 L1022.97 1211.99 L1022.38 1211.99 L1021.8 1211.99 L1021.21 1211.99 L1020.62 1211.99 L1020.04 1211.99 L1019.45 1211.99 L1018.86 1211.99 L1018.28 1211.99 L1017.69 1211.99 L1017.11 1211.99 L1016.52 1211.99 L1015.93 1211.99 L1015.35 1211.99 L1014.76 1211.99 L1014.17 1211.99 L1013.59 1211.99 L1013 1211.99 L1012.41 1211.99 L1011.83 1211.99 L1011.24 1211.99 L1010.65 1211.99 L1010.07 1211.99 L1009.48 1211.99 L1008.9 1211.99 L1008.31 1211.99 L1007.72 1211.99 L1007.14 1211.99 L1006.55 1211.99 L1005.96 1211.99 L1005.38 1211.99 L1004.79 1211.99 L1004.2 1211.99 L1003.62 1211.99 L1003.03 1211.99 L1002.44 1211.99 L1001.86 1211.99 L1001.27 1211.99 L1000.69 1211.99 L1000.1 1211.99 L999.513 1211.99 L998.926 1211.99 L998.34 1211.99 L997.754 1211.99 L997.167 1211.99 L996.581 1211.99 L995.994 1211.99 L995.408 1211.99 L994.822 1211.99 L994.235 1211.99 L993.649 1211.99 L993.062 1211.99 L992.476 1211.99 L991.889 1211.99 L991.303 1211.99 L990.717 1211.99 L990.13 1211.99 L989.544 1211.99 L988.957 1211.99 L988.371 1211.99 L987.785 1211.99 L987.198 1211.99 L986.612 1211.99 L986.025 1211.99  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.28 986.612,1212.28 987.198,1212.28 987.785,1212.28 988.371,1212.28 988.957,1212.28 989.544,1212.28 990.13,1212.28 990.717,1212.28 991.303,1212.28 991.889,1212.28 992.476,1212.28 993.062,1212.28 993.649,1212.28 994.235,1212.28 994.822,1212.28 995.408,1212.28 995.994,1212.28 996.581,1212.28 997.167,1212.28 997.754,1212.28 998.34,1212.28 998.926,1212.28 999.513,1212.28 1000.1,1212.28 1000.69,1212.28 1001.27,1212.28 1001.86,1212.28 1002.44,1212.28 1003.03,1212.28 1003.62,1212.28 1004.2,1212.28 1004.79,1212.28 1005.38,1212.28 1005.96,1212.28 1006.55,1212.28 1007.14,1212.28 1007.72,1212.28 1008.31,1212.28 1008.9,1212.28 1009.48,1212.28 1010.07,1212.28 1010.65,1212.28 1011.24,1212.28 1011.83,1212.28 1012.41,1212.28 1013,1212.28 1013.59,1212.28 1014.17,1212.28 1014.76,1212.28 1015.35,1212.28 1015.93,1212.28 1016.52,1212.28 1017.11,1212.28 1017.69,1212.28 1018.28,1212.28 1018.86,1212.28 1019.45,1212.28 1020.04,1212.28 1020.62,1212.28 1021.21,1212.28 1021.8,1212.28 1022.38,1212.28 1022.97,1212.28 1023.56,1212.28 1024.14,1212.28 1024.73,1212.28 1025.32,1212.28 1025.9,1212.28 1026.49,1212.28 1027.07,1212.28 1027.66,1212.28 1028.25,1212.28 1028.83,1212.28 1029.42,1212.28 1030.01,1212.28 1030.59,1212.28 1031.18,1212.28 1031.77,1212.28 1032.35,1212.28 1032.94,1212.28 1033.52,1212.28 1034.11,1212.28 1034.7,1212.28 1035.28,1212.28 1035.87,1212.28 1036.46,1212.28 1037.04,1212.28 1037.63,1212.28 1038.22,1212.28 1038.8,1212.28 1039.39,1212.28 1039.98,1212.28 1040.56,1212.28 1041.15,1212.28 1041.73,1212.28 1042.32,1212.28 1042.91,1212.28 1043.49,1212.28 1044.08,1212.28 1044.67,1212.28 1045.25,1212.28 1045.84,1212.28 1046.43,1212.28 1047.01,1212.28 1047.6,1212.28 1048.19,1212.28 1048.77,1212.28 1049.36,1212.28 1049.94,1212.28 1050.53,1212.28 1051.12,1212.28 1051.7,1212.28 1052.29,1212.28 1052.88,1212.28 1053.46,1212.28 1054.05,1212.28 1054.64,1212.28 1055.22,1212.28 1055.81,1212.28 1056.39,1212.28 1056.98,1212.28 1057.57,1212.28 1058.15,1212.28 1058.74,1212.28 1059.33,1212.28 1059.91,1212.28 1060.5,1212.28 1061.09,1212.28 1061.67,1212.28 1062.26,1212.28 1062.85,1212.28 1063.43,1212.28 1064.02,1212.28 1064.6,1212.28 1065.19,1212.28 1065.78,1212.28 1066.36,1212.28 1066.95,1212.28 1067.54,1212.28 1068.12,1212.28 1068.71,1212.28 1069.3,1212.28 1069.88,1212.28 1070.47,1212.28 1071.06,1212.28 1071.64,1212.28 1072.23,1212.28 1072.81,1212.28 1073.4,1212.28 1073.99,1212.28 1074.57,1212.28 1075.16,1212.28 1075.75,1212.28 1076.33,1212.28 1076.92,1212.28 1077.51,1212.28 1078.09,1212.28 1078.68,1212.28 1079.26,1212.28 1079.85,1212.28 1080.44,1212.28 1081.02,1212.28 1081.61,1212.28 1082.2,1212.28 1082.78,1212.28 1083.37,1212.28 1083.96,1212.28 1084.54,1212.28 1085.13,1212.28 1085.72,1212.28 1086.3,1212.28 1086.89,1212.28 1087.47,1212.28 1088.06,1212.28 1088.65,1212.28 1089.23,1212.28 1089.82,1212.28 1090.41,1212.28 1090.99,1212.28 1091.58,1212.28 1092.17,1212.28 1092.75,1212.28 1093.34,1212.28 1093.93,1212.28 1094.51,1212.28 1095.1,1212.28 1095.68,1212.28 1096.27,1212.28 1096.86,1212.28 1097.44,1212.28 1098.03,1212.28 1098.62,1212.28 1099.2,1212.28 1099.79,1212.28 1100.38,1212.28 1100.96,1212.28 1101.55,1212.28 1102.14,1212.28 1102.72,1212.28 1103.31,1212.28 1103.89,1212.28 1104.48,1212.28 1105.07,1212.28 1105.65,1212.28 1106.24,1212.28 1106.83,1212.28 1107.41,1212.28 1108,1212.28 1108.59,1212.28 1109.17,1212.28 1109.76,1212.28 1110.34,1212.28 1110.93,1212.28 1111.52,1212.28 1112.1,1212.28 1112.69,1212.28 1113.28,1212.28 1113.86,1212.28 1114.45,1212.28 1115.04,1212.28 1115.62,1212.28 1116.21,1212.28 1116.8,1212.28 1117.38,1212.28 1117.97,1212.28 1118.55,1212.28 1119.14,1212.28 1119.73,1212.28 1120.31,1212.28 1120.9,1212.28 1121.49,1212.28 1122.07,1212.28 1122.66,1212.28 1123.25,1212.28 1123.83,1212.28 1124.42,1212.28 1125.01,1212.28 1125.59,1212.28 1126.18,1212.28 1126.76,1212.28 1127.35,1212.28 1127.94,1212.28 1128.52,1212.28 1129.11,1212.28 1129.7,1212.28 1130.28,1212.28 1130.87,1212.28 1131.46,1212.28 1132.04,1212.28 1132.63,1212.28 1133.21,1212.28 1133.8,1212.28 1134.39,1212.28 1134.97,1212.28 1135.56,1212.28 1136.15,1212.28 1136.73,1212.28 1137.32,1212.28 1137.91,1212.28 1138.49,1212.28 1139.08,1212.28 1139.67,1212.28 1140.25,1212.28 1140.84,1212.28 1141.42,1212.28 1142.01,1212.28 1142.6,1212.28 1143.18,1212.28 1143.77,1212.28 1144.36,1212.28 1144.94,1212.28 1145.53,1212.28 1146.12,1212.28 1146.7,1212.28 1147.29,1212.28 1147.88,1212.28 1148.46,1212.28 1149.05,1212.28 1149.63,1212.28 1150.22,1212.28 1150.81,1212.28 1151.39,1212.28 1151.98,1212.28 1152.57,1212.28 1153.15,1212.28 1153.74,1212.28 1154.33,1212.28 1154.91,1212.28 1155.5,1212.28 1156.09,1212.28 1156.67,1212.28 1157.26,1212.28 1157.84,1212.28 1158.43,1212.28 1159.02,1212.28 1159.6,1212.28 1160.19,1212.28 1160.78,1212.28 1161.36,1212.28 1161.95,1212.28 1162.54,1212.28 1163.12,1212.28 1163.71,1212.28 1164.29,1212.28 1164.88,1212.28 1165.47,1212.28 1166.05,1212.28 1166.64,1212.28 1167.23,1212.28 1167.81,1212.28 1168.4,1212.28 1168.99,1212.28 1169.57,1212.28 1170.16,1212.28 1170.75,1212.28 1171.33,1212.28 1171.92,1212.28 1172.5,1212.28 1173.09,1212.28 1173.68,1212.28 1174.26,1212.28 1174.85,1212.28 1175.44,1212.28 1176.02,1212.28 1176.61,1212.28 1177.2,1212.28 1177.78,1212.28 1178.37,1212.28 1178.96,1212.28 1179.54,1212.28 1180.13,1212.28 1180.71,1212.28 1181.3,1212.28 1181.89,1212.28 1182.47,1212.28 1183.06,1212.28 1183.65,1212.28 1184.23,1212.28 1184.82,1212.28 1185.41,1212.28 1185.99,1212.28 1186.58,1212.28 1187.16,1212.28 1187.75,1212.28 1188.34,1212.28 1188.92,1212.28 1189.51,1212.28 1190.1,1212.28 1190.68,1212.28 1191.27,1212.28 1191.86,1212.28 1192.44,1212.28 1193.03,1212.28 1193.62,1212.28 1194.2,1212.28 1194.79,1212.28 1195.37,1212.28 1195.96,1212.28 1196.55,1212.28 1197.13,1212.28 1197.72,1212.28 1198.31,1212.28 1198.89,1212.28 1199.48,1212.28 1200.07,1212.28 1200.65,1212.28 1201.24,1212.28 1201.83,1212.28 1202.41,1212.28 1203,1212.28 1203.58,1212.28 1204.17,1212.28 1204.76,1212.28 1205.34,1212.28 1205.93,1212.28 1206.52,1212.28 1207.1,1212.28 1207.69,1212.28 1208.28,1212.28 1208.86,1212.28 1209.45,1212.28 1210.03,1212.28 1210.62,1212.28 1211.21,1212.28 1211.79,1212.28 1212.38,1212.28 1212.97,1212.28 1213.55,1212.28 1214.14,1212.28 1214.73,1212.28 1215.31,1212.28 1215.9,1212.28 1216.49,1212.28 1217.07,1212.28 1217.66,1212.28 1218.24,1212.28 1218.83,1212.28 1219.42,1212.28 1220,1212.28 1220.59,1212.28 1221.18,1212.28 1221.76,1212.28 1222.35,1212.28 1222.94,1212.28 1223.52,1212.28 1224.11,1212.28 1224.7,1212.28 1225.28,1212.28 1225.87,1212.28 1226.45,1212.28 1227.04,1212.28 1227.63,1212.28 1228.21,1212.28 1228.8,1212.28 1229.39,1212.28 1229.97,1212.28 1230.56,1212.28 1231.15,1212.28 1231.73,1212.28 1232.32,1212.28 1232.91,1212.28 1233.49,1212.28 1234.08,1212.28 1234.66,1212.28 1235.25,1212.28 1235.84,1212.28 1236.42,1212.28 1237.01,1212.28 1237.6,1212.28 1238.18,1212.28 1238.77,1212.28 1239.36,1212.28 1239.94,1212.28 1240.53,1212.28 1241.11,1212.28 1241.7,1212.28 1242.29,1212.28 1242.87,1212.28 1243.46,1212.28 1244.05,1212.28 1244.63,1212.28 1245.22,1212.28 1245.81,1212.28 1246.39,1212.28 1246.98,1212.28 1247.57,1212.28 1248.15,1212.28 1248.74,1212.28 1249.32,1212.28 1249.91,1212.28 1250.5,1212.28 1251.08,1212.28 1251.67,1212.28 1252.26,1212.28 1252.84,1212.28 1253.43,1212.28 1254.02,1212.28 1254.6,1212.28 1255.19,1212.28 1255.78,1212.28 1256.36,1212.28 1256.95,1212.28 1257.53,1212.28 1258.12,1212.28 1258.71,1212.28 1259.29,1212.28 1259.88,1212.28 1260.47,1212.28 1261.05,1212.28 1261.64,1212.28 1262.23,1212.28 1262.81,1212.28 1263.4,1212.28 1263.98,1212.28 1264.57,1212.28 1265.16,1212.28 1265.74,1212.28 1266.33,1212.28 1266.92,1212.28 1267.5,1212.28 1268.09,1212.28 1268.68,1212.28 1269.26,1212.28 1269.85,1212.28 1270.44,1212.28 1271.02,1212.28 1271.61,1212.28 1272.19,1212.28 1272.78,1212.28 1273.37,1212.28 1273.95,1212.28 1274.54,1212.28 1275.13,1212.28 1275.71,1212.28 1276.3,1212.28 1276.89,1212.28 1277.47,1212.28 1278.06,1212.28 1278.65,1212.28 1279.23,1212.28 1279.82,1212.28 1280.4,1212.28 1280.99,1212.28 1281.58,1212.28 1282.16,1212.28 1282.75,1212.28 1283.34,1212.28 1283.92,1212.28 1284.51,1212.28 1285.1,1212.28 1285.68,1212.28 1286.27,1212.28 1286.86,1212.28 1287.44,1212.28 1288.03,1212.28 1288.61,1212.28 1289.2,1212.28 1289.79,1212.28 1290.37,1212.28 1290.96,1212.28 1291.55,1212.28 1292.13,1212.28 1292.72,1212.28 1293.31,1212.28 1293.89,1212.28 1294.48,1212.28 1295.06,1212.28 1295.65,1212.28 1296.24,1212.28 1296.82,1212.28 1297.41,1212.28 1298,1212.28 1298.58,1212.28 1299.17,1212.28 1299.76,1212.28 1300.34,1212.28 1300.93,1212.28 1301.52,1212.28 1302.1,1212.28 1302.69,1212.28 1303.27,1212.28 1303.86,1212.28 1304.45,1212.28 1305.03,1212.28 1305.62,1212.28 1306.21,1212.28 1306.79,1212.28 1307.38,1212.28 1307.97,1212.28 1308.55,1212.28 1309.14,1212.28 1309.73,1212.28 1310.31,1212.28 1310.9,1212.28 1311.48,1212.28 1312.07,1212.28 1312.66,1212.28 1313.24,1212.28 1313.83,1212.28 1314.42,1212.28 1315,1212.28 1315.59,1212.28 1316.18,1212.28 1316.76,1212.28 1317.35,1212.28 1317.93,1212.28 1318.52,1212.28 1319.11,1212.28 1319.69,1212.28 1320.28,1212.28 1320.87,1212.28 1321.45,1212.28 1322.04,1212.28 1322.63,1212.28 1323.21,1212.28 1323.8,1212.28 1324.39,1212.28 1324.97,1212.28 1325.56,1212.28 1326.14,1212.28 1326.73,1212.28 1327.32,1212.28 1327.9,1212.28 1328.49,1212.28 1329.08,1212.28 1329.66,1212.28 1330.25,1212.28 1330.84,1212.28 1331.42,1212.28 1332.01,1212.28 1332.6,1212.28 1333.18,1212.28 1333.77,1212.28 1334.35,1212.28 1334.94,1212.28 1335.53,1212.28 1336.11,1212.28 1336.7,1212.28 1337.29,1212.28 1337.87,1212.28 1338.46,1212.28 1339.05,1212.28 1339.63,1212.28 1340.22,1212.28 1340.8,1212.28 1341.39,1212.28 1341.98,1212.28 1342.56,1212.28 1343.15,1212.28 1343.74,1212.28 1344.32,1212.28 1344.91,1212.28 1345.5,1212.28 1346.08,1212.28 1346.67,1212.28 1347.26,1212.28 1347.84,1212.28 1348.43,1212.28 1349.01,1212.28 1349.6,1212.28 1350.19,1212.28 1350.77,1212.28 1351.36,1212.28 1351.95,1212.28 1352.53,1212.28 1353.12,1212.28 1353.71,1212.28 1354.29,1212.28 1354.88,1212.28 1355.47,1212.28 1356.05,1212.28 1356.64,1212.28 1357.22,1212.28 1357.81,1212.28 1358.4,1212.28 1358.98,1212.28 1359.57,1212.28 1360.16,1212.28 1360.74,1212.28 1361.33,1212.28 1361.92,1212.28 1362.5,1212.28 1363.09,1212.28 1363.68,1212.28 1364.26,1212.28 1364.85,1212.28 1365.43,1212.28 1366.02,1212.28 1366.61,1212.28 1367.19,1212.28 1367.78,1212.28 1368.37,1212.28 1368.95,1212.28 1369.54,1212.28 1370.13,1212.28 1370.71,1212.28 1371.3,1212.28 1371.88,1212.28 1372.47,1212.28 1373.06,1212.28 1373.64,1212.28 1374.23,1212.28 1374.82,1212.28 1375.4,1212.28 1375.99,1212.28 1376.58,1212.28 1377.16,1212.28 1377.75,1212.28 1378.34,1212.28 1378.92,1212.28 1379.51,1212.28 1380.09,1212.28 1380.68,1212.28 1381.27,1212.28 1381.85,1212.28 1382.44,1212.28 1383.03,1212.28 1383.61,1212.28 1384.2,1212.28 1384.79,1212.28 1385.37,1212.28 1385.96,1212.28 1386.55,1212.28 1387.13,1212.28 1387.72,1212.28 1388.3,1212.28 1388.89,1212.28 1389.48,1212.28 1390.06,1212.28 1390.65,1212.28 1391.24,1212.28 1391.82,1212.28 1392.41,1212.28 1393,1212.28 1393.58,1212.28 1394.17,1212.28 1394.75,1212.28 1395.34,1212.28 1395.93,1212.28 1396.51,1212.28 1397.1,1212.28 1397.69,1212.28 1398.27,1212.28 1398.86,1212.28 1399.45,1212.28 1400.03,1212.28 1400.62,1212.28 1401.21,1212.28 1401.79,1212.28 1402.38,1212.28 1402.96,1212.28 1403.55,1212.28 1404.14,1212.28 1404.72,1212.28 1405.31,1212.28 1405.9,1212.28 1406.48,1212.28 1407.07,1212.28 1407.66,1212.28 1408.24,1212.28 1408.83,1212.28 1409.42,1212.28 1410,1212.28 1410.59,1212.28 1411.17,1212.28 1411.76,1212.28 1412.35,1212.28 1412.93,1212.28 1413.52,1212.28 1414.11,1212.28 1414.69,1212.28 1415.28,1212.28 1415.87,1212.28 1416.45,1212.28 1417.04,1212.28 1417.63,1212.28 1418.21,1212.28 1418.8,1212.28 1419.38,1212.28 1419.97,1212.28 1420.56,1212.28 1421.14,1212.28 1421.73,1212.28 1422.32,1212.28 1422.9,1212.28 1423.49,1212.28 1424.08,1212.28 1424.66,1212.28 1425.25,1212.28 1425.83,1212.28 1426.42,1212.28 1427.01,1212.28 1427.59,1212.28 1428.18,1212.28 1428.77,1212.28 1429.35,1212.28 1429.94,1212.28 1430.53,1212.28 1431.11,1212.28 1431.7,1212.28 1432.29,1212.28 1432.87,1212.28 1433.46,1212.28 1434.04,1212.28 1434.63,1212.28 1435.22,1212.28 1435.8,1212.28 1436.39,1212.28 1436.98,1212.28 1437.56,1212.28 1438.15,1212.28 1438.74,1212.28 1439.32,1212.28 1439.91,1212.28 1440.5,1212.28 1441.08,1212.28 1441.67,1212.28 1442.25,1212.28 1442.84,1212.28 1443.43,1212.28 1444.01,1212.28 1444.6,1212.28 1445.19,1212.28 1445.77,1212.28 1446.36,1212.28 1446.95,1212.28 1447.53,1212.28 1448.12,1212.28 1448.7,1212.28 1449.29,1212.28 1449.88,1212.28 1450.46,1212.28 1451.05,1212.28 1451.64,1212.28 1452.22,1212.28 1452.81,1212.28 1453.4,1212.28 1453.98,1212.28 1454.57,1212.28 1455.16,1212.28 1455.74,1212.28 1456.33,1212.28 1456.91,1212.28 1457.5,1212.28 1458.09,1212.28 1458.67,1212.28 1459.26,1212.28 1459.85,1212.28 1460.43,1212.28 1461.02,1212.28 1461.61,1212.28 1462.19,1212.28 1462.78,1212.28 1463.37,1212.28 1463.95,1212.28 1464.54,1212.28 1465.12,1212.28 1465.71,1212.28 1466.3,1212.28 1466.88,1212.28 1467.47,1212.28 1468.06,1212.28 1468.64,1212.28 1469.23,1212.28 1469.82,1212.28 1470.4,1212.28 1470.99,1212.28 1471.57,1212.28 1472.16,1212.28 1472.75,1212.28 1473.33,1212.28 1473.92,1212.28 1474.51,1212.28 1475.09,1212.28 1475.68,1212.28 1476.27,1212.28 1476.85,1212.28 1477.44,1212.28 1478.03,1212.28 1478.61,1212.28 1479.2,1212.28 1479.78,1212.28 1480.37,1212.28 1480.96,1212.28 1481.54,1212.28 1482.13,1212.28 1482.72,1212.28 1483.3,1212.28 1483.89,1212.28 1484.48,1212.28 1485.06,1212.28 1485.65,1212.28 1486.24,1212.28 1486.82,1212.28 1487.41,1212.28 1487.99,1212.28 1488.58,1212.28 1489.17,1212.28 1489.75,1212.28 1490.34,1212.28 1490.93,1212.28 1491.51,1212.28 1492.1,1212.28 1492.69,1212.28 1493.27,1212.28 1493.86,1212.28 1494.45,1212.28 1495.03,1212.28 1495.62,1212.28 1496.2,1212.28 1496.79,1212.28 1497.38,1212.28 1497.96,1212.28 1498.55,1212.28 1499.14,1212.28 1499.72,1212.28 1500.31,1212.28 1500.9,1212.28 1501.48,1212.28 1502.07,1212.28 1502.65,1212.28 1503.24,1212.28 1503.83,1212.28 1504.41,1212.28 1505,1212.28 1505.59,1212.28 1506.17,1212.28 1506.76,1212.28 1507.35,1212.28 1507.93,1212.28 1508.52,1212.28 1509.11,1212.28 1509.69,1212.28 1510.28,1212.28 1510.86,1212.28 1511.45,1212.28 1512.04,1212.28 1512.62,1212.28 1513.21,1212.28 1513.8,1212.28 1514.38,1212.28 1514.97,1212.28 1515.56,1212.28 1516.14,1212.28 1516.73,1212.28 1517.32,1212.28 1517.9,1212.28 1518.49,1212.28 1519.07,1212.28 1519.66,1212.28 1520.25,1212.28 1520.83,1212.28 1521.42,1212.28 1522.01,1212.28 1522.59,1212.28 1523.18,1212.28 1523.77,1212.28 1524.35,1212.28 1524.94,1212.28 1525.52,1212.28 1526.11,1212.28 1526.7,1212.28 1527.28,1212.28 1527.87,1212.28 1528.46,1212.28 1529.04,1212.28 1529.63,1212.28 1530.22,1212.28 1530.8,1212.28 1531.39,1212.28 1531.98,1212.28 1532.56,1212.28 1533.15,1212.28 1533.73,1212.28 1534.32,1212.28 1534.91,1212.28 1535.49,1212.28 1536.08,1212.28 1536.67,1212.28 1537.25,1212.28 1537.84,1212.28 1538.43,1212.28 1539.01,1212.28 1539.6,1212.28 1540.19,1212.28 1540.77,1212.28 1541.36,1212.28 1541.94,1212.28 1542.53,1212.28 1543.12,1212.28 1543.7,1212.28 1544.29,1212.28 1544.88,1212.28 1545.46,1212.28 1546.05,1212.28 1546.64,1212.28 1547.22,1212.28 1547.81,1212.28 1548.4,1212.28 1548.98,1212.28 1549.57,1212.28 1550.15,1212.28 1550.74,1212.28 1551.33,1212.28 1551.91,1212.28 1552.5,1212.28 1553.09,1212.28 1553.67,1212.28 1554.26,1212.28 1554.85,1212.28 1555.43,1212.28 1556.02,1212.28 1556.6,1212.28 1557.19,1212.28 1557.78,1212.28 1558.36,1212.28 1558.95,1212.28 1559.54,1212.28 1560.12,1212.28 1560.71,1212.28 1561.3,1212.28 1561.88,1212.28 1562.47,1212.28 1563.06,1212.28 1563.64,1212.28 1564.23,1212.28 1564.81,1212.28 1565.4,1212.28 1565.99,1212.28 1566.57,1212.28 1567.16,1212.28 1567.75,1212.28 1568.33,1212.28 1568.92,1212.28 1569.51,1212.28 1570.09,1212.28 1570.68,1212.28 1571.27,1212.28 1571.85,1212.28 1572.44,1212.28 1573.02,1212.28 1573.61,1212.28 1574.2,1212.28 1574.78,1212.28 1575.37,1212.28 1575.96,1212.28 1576.54,1212.28 1577.13,1212.28 1577.72,1212.28 1578.3,1212.28 1578.89,1212.28 1579.47,1212.28 1580.06,1212.28 1580.65,1212.28 1581.23,1212.28 1581.82,1212.28 1582.41,1212.28 1582.99,1212.28 1583.58,1212.28 1584.17,1212.28 1584.75,1212.28 1585.34,1212.28 1585.93,1212.28 1586.51,1212.28 1587.1,1212.28 1587.68,1212.28 1588.27,1212.28 1588.86,1212.28 1589.44,1212.28 1590.03,1212.28 1590.62,1212.28 1591.2,1212.28 1591.79,1212.28 1592.38,1212.28 1592.96,1212.28 1593.55,1212.28 1594.14,1212.28 1594.72,1212.28 1595.31,1212.28 1595.89,1212.28 1596.48,1212.28 1597.07,1212.28 1597.65,1212.28 1598.24,1212.28 1598.83,1212.28 1599.41,1212.28 1600,1212.28 1600.59,1212.28 1601.17,1212.28 1601.76,1212.28 1602.34,1212.28 1602.93,1212.28 1603.52,1212.28 1604.1,1212.28 1604.69,1212.28 1605.28,1212.28 1605.86,1212.28 1606.45,1212.28 1607.04,1212.28 1607.62,1212.28 1608.21,1212.28 1608.8,1212.28 1609.38,1212.28 1609.97,1212.28 1610.55,1212.28 1611.14,1212.28 1611.73,1212.28 1612.31,1212.28 1612.9,1212.28 1613.49,1212.28 1614.07,1212.28 1614.66,1212.28 1615.25,1212.28 1615.83,1212.28 1616.42,1212.28 1617.01,1212.28 1617.59,1212.28 1618.18,1212.28 1618.76,1212.28 1619.35,1212.28 1619.94,1212.28 1620.52,1212.28 1621.11,1212.28 1621.7,1212.28 1622.28,1212.28 1622.87,1212.28 1623.46,1212.28 1624.04,1212.28 1624.63,1212.28 1625.22,1212.28 1625.8,1212.28 1626.39,1212.28 1626.97,1212.28 1627.56,1212.28 1628.15,1212.28 1628.73,1212.28 1629.32,1212.28 1629.91,1212.28 1630.49,1212.28 1631.08,1212.28 1631.67,1212.28 1632.25,1212.28 1632.84,1212.28 1633.42,1212.28 1634.01,1212.28 1634.6,1212.28 1635.18,1212.28 1635.77,1212.28 1636.36,1212.28 1636.94,1212.28 1637.53,1212.28 1638.12,1212.28 1638.7,1212.28 1639.29,1212.28 1639.88,1212.28 1640.46,1212.28 1641.05,1212.28 1641.63,1212.28 1642.22,1212.28 1642.81,1212.28 1643.39,1212.28 1643.98,1212.28 1644.57,1212.28 1645.15,1212.28 1645.74,1212.28 1646.33,1212.28 1646.91,1212.28 1647.5,1212.28 1648.09,1212.28 1648.67,1212.28 1649.26,1212.28 1649.84,1212.28 1650.43,1212.28 1651.02,1212.28 1651.6,1212.28 1652.19,1212.28 1652.78,1212.28 1653.36,1212.28 1653.95,1212.28 1654.54,1212.28 1655.12,1212.28 1655.71,1212.28 1656.29,1212.28 1656.88,1212.28 1657.47,1212.28 1658.05,1212.28 1658.64,1212.28 1659.23,1212.28 1659.81,1212.28 1660.4,1212.28 1660.99,1212.28 1661.57,1212.28 1662.16,1212.28 1662.75,1212.28 1663.33,1212.28 1663.92,1212.28 1664.5,1212.28 1665.09,1212.28 1665.68,1212.28 1666.26,1212.28 1666.85,1212.28 1667.44,1212.28 1668.02,1212.28 1668.61,1212.28 1669.2,1212.28 1669.78,1212.28 1670.37,1212.28 1670.96,1212.28 1671.54,1212.28 1672.13,1212.28 1672.71,1212.28 1673.3,1212.28 1673.89,1212.28 1674.47,1212.28 1675.06,1212.28 1675.65,1212.28 1676.23,1212.28 1676.82,1212.28 1677.41,1212.28 1677.99,1212.28 1678.58,1212.28 1679.17,1212.28 1679.75,1212.28 1680.34,1212.28 1680.92,1212.28 1681.51,1212.28 1682.1,1212.28 1682.68,1212.28 1683.27,1212.28 1683.86,1212.28 1684.44,1212.28 1685.03,1212.28 1685.62,1212.28 1686.2,1212.28 1686.79,1212.28 1687.37,1212.28 1687.96,1212.28 1688.55,1212.28 1689.13,1212.28 1689.72,1212.28 1690.31,1212.28 1690.89,1212.28 1691.48,1212.28 1692.07,1212.28 1692.65,1212.28 1693.24,1212.28 1693.83,1212.28 1694.41,1212.28 1695,1212.28 1695.58,1212.28 1696.17,1212.28 1696.76,1212.28 1697.34,1212.28 1697.93,1212.28 1698.52,1212.28 1699.1,1212.28 1699.69,1212.28 1700.28,1212.28 1700.86,1212.28 1701.45,1212.28 1702.04,1212.28 1702.62,1212.28 1703.21,1212.28 1703.79,1212.28 1704.38,1212.28 1704.97,1212.28 1705.55,1212.28 1706.14,1212.28 1706.73,1212.28 1707.31,1212.28 1707.9,1212.28 1708.49,1212.28 1709.07,1212.28 1709.66,1212.28 1710.24,1212.28 1710.83,1212.28 1711.42,1212.28 1712,1212.28 1712.59,1212.28 1713.18,1212.28 1713.76,1212.28 1714.35,1212.28 1714.94,1212.28 1715.52,1212.28 1716.11,1212.28 1716.7,1212.28 1717.28,1212.28 1717.87,1212.28 1718.45,1212.28 1719.04,1212.28 1719.63,1212.28 1720.21,1212.28 1720.8,1212.28 1721.39,1212.28 1721.97,1212.28 1722.56,1212.28 1723.15,1212.28 1723.73,1212.28 1724.32,1212.28 1724.91,1212.28 1725.49,1212.28 1726.08,1212.28 1726.66,1212.28 1727.25,1212.28 1727.84,1212.28 1728.42,1212.28 1729.01,1212.28 1729.6,1212.28 1730.18,1212.28 1730.77,1212.28 1731.36,1212.28 1731.94,1212.28 1732.53,1212.28 1733.11,1212.28 1733.7,1212.28 1734.29,1212.28 1734.87,1212.28 1735.46,1212.28 1736.05,1212.28 1736.63,1212.28 1737.22,1212.28 1737.81,1212.28 1738.39,1212.28 1738.98,1212.28 1739.57,1212.28 1740.15,1212.28 1740.74,1212.28 1741.32,1212.28 1741.91,1212.28 1742.5,1212.28 1743.08,1212.28 1743.67,1212.28 1744.26,1212.28 1744.84,1212.28 1745.43,1212.28 1746.02,1212.28 1746.6,1212.28 1747.19,1212.28 1747.78,1212.28 1748.36,1212.28 1748.95,1212.28 1749.53,1212.28 1750.12,1212.28 1750.71,1212.28 1751.29,1212.28 1751.88,1212.28 1752.47,1212.28 1753.05,1212.28 1753.64,1212.28 1754.23,1212.28 1754.81,1212.28 1755.4,1212.28 1755.99,1212.28 1756.57,1212.28 1757.16,1212.28 1757.74,1212.28 1758.33,1212.28 1758.92,1212.28 1759.5,1212.28 1760.09,1212.28 1760.68,1212.28 1761.26,1212.28 1761.85,1212.28 1762.44,1212.28 1763.02,1212.28 1763.61,1212.28 1764.19,1212.28 1764.78,1212.28 1765.37,1212.28 1765.95,1212.28 1766.54,1212.28 1767.13,1212.28 1767.71,1212.28 1768.3,1212.28 1768.89,1212.28 1769.47,1212.28 1770.06,1212.28 1770.65,1212.28 1771.23,1212.28 1771.82,1212.28 1772.4,1212.28 1772.99,1212.28 1773.58,1212.28 1774.16,1212.28 1774.75,1212.28 1775.34,1212.28 1775.92,1212.28 1776.51,1212.28 1777.1,1212.28 1777.68,1212.28 1778.27,1212.28 1778.86,1212.28 1779.44,1212.28 1780.03,1212.28 1780.61,1212.28 1781.2,1212.28 1781.79,1212.28 1782.37,1212.28 1782.96,1212.28 1783.55,1212.28 1784.13,1212.28 1784.72,1212.28 1785.31,1212.28 1785.89,1212.28 1786.48,1212.28 1787.06,1212.28 1787.65,1212.28 1788.24,1212.28 1788.82,1212.28 1789.41,1212.28 1790,1212.28 1790.58,1212.28 1791.17,1212.28 1791.76,1212.28 1792.34,1212.28 1792.93,1212.28 1793.52,1212.28 1794.1,1212.28 1794.69,1212.28 1795.27,1212.28 1795.86,1212.28 1796.45,1212.28 1797.03,1212.28 1797.62,1212.28 1798.21,1212.28 1798.79,1212.28 1799.38,1212.28 1799.97,1212.28 1800.55,1212.28 1801.14,1212.28 1801.73,1212.28 1802.31,1212.28 1802.9,1212.28 1803.48,1212.28 1804.07,1212.28 1804.66,1212.28 1805.24,1212.28 1805.83,1212.28 1806.42,1212.28 1807,1212.28 1807.59,1212.28 1808.18,1212.28 1808.76,1212.28 1809.35,1212.28 1809.94,1212.28 1810.52,1212.28 1811.11,1212.28 1811.69,1212.28 1812.28,1212.28 1812.87,1212.28 1813.45,1212.28 1814.04,1212.28 1814.63,1212.28 1815.21,1212.28 1815.8,1212.28 1816.39,1212.28 1816.97,1212.28 1817.56,1212.28 1818.14,1212.28 1818.73,1212.28 1819.32,1212.28 1819.9,1212.28 1820.49,1212.28 1821.08,1212.28 1821.66,1212.28 1822.25,1212.28 1822.84,1212.28 1823.42,1212.28 1824.01,1212.28 1824.6,1212.28 1825.18,1212.28 1825.77,1212.28 1826.35,1212.28 1826.94,1212.28 1827.53,1212.28 1828.11,1212.28 1828.7,1212.28 1829.29,1212.28 1829.87,1212.28 1830.46,1212.28 1831.05,1212.28 1831.63,1212.28 1832.22,1212.28 1832.81,1212.28 1833.39,1212.28 1833.98,1212.28 1834.56,1212.28 1835.15,1212.28 1835.74,1212.28 1836.32,1212.28 1836.91,1212.28 1837.5,1212.28 1838.08,1212.28 1838.67,1212.28 1839.26,1212.28 1839.84,1212.28 1840.43,1212.28 1841.01,1212.28 1841.6,1212.28 1842.19,1212.28 1842.77,1212.28 1843.36,1212.28 1843.95,1212.28 1844.53,1212.28 1845.12,1212.28 1845.71,1212.28 1846.29,1212.28 1846.88,1212.28 1847.47,1212.28 1848.05,1212.28 1848.64,1212.28 1849.22,1212.28 1849.81,1212.28 1850.4,1212.28 1850.98,1212.28 1851.57,1212.28 1852.16,1212.28 1852.74,1212.28 1853.33,1212.28 1853.92,1212.28 1854.5,1212.28 1855.09,1212.28 1855.68,1212.28 1856.26,1212.28 1856.85,1212.28 1857.43,1212.28 1858.02,1212.28 1858.61,1212.28 1859.19,1212.28 1859.78,1212.28 1860.37,1212.28 1860.95,1212.28 1861.54,1212.28 1862.13,1212.28 1862.71,1212.28 1863.3,1212.28 1863.88,1212.28 1864.47,1212.28 1865.06,1212.28 1865.64,1212.28 1866.23,1212.28 1866.82,1212.28 1867.4,1212.28 1867.99,1212.28 1868.58,1212.28 1869.16,1212.28 1869.75,1212.28 1870.34,1212.28 1870.92,1212.28 1871.51,1212.28 1872.09,1212.28 1872.68,1212.28 1873.27,1212.28 1873.85,1212.28 1874.44,1212.28 1875.03,1212.28 1875.61,1212.28 1876.2,1212.28 1876.79,1212.28 1877.37,1212.28 1877.96,1212.28 1878.55,1212.28 1879.13,1212.28 1879.72,1212.28 1880.3,1212.28 1880.89,1212.28 1881.48,1212.28 1882.06,1212.28 1882.65,1212.28 1883.24,1212.28 1883.82,1212.28 1884.41,1212.28 1885,1212.28 1885.58,1212.28 1886.17,1212.28 1886.76,1212.28 1887.34,1212.28 1887.93,1212.28 1888.51,1212.28 1889.1,1212.28 1889.69,1212.28 1890.27,1212.28 1890.86,1212.28 1891.45,1212.28 1892.03,1212.28 1892.62,1212.28 1893.21,1212.28 1893.79,1212.28 1894.38,1212.28 1894.96,1212.28 1895.55,1212.28 1896.14,1212.28 1896.72,1212.28 1897.31,1212.28 1897.9,1212.28 1898.48,1212.28 1899.07,1212.28 1899.66,1212.28 1900.24,1212.28 1900.83,1212.28 1901.42,1212.28 1902,1212.28 1902.59,1212.28 1903.17,1212.28 1903.76,1212.28 1904.35,1212.28 1904.93,1212.28 1905.52,1212.28 1906.11,1212.28 1906.69,1212.28 1907.28,1212.28 1907.87,1212.28 1908.45,1212.28 1909.04,1212.28 1909.63,1212.28 1910.21,1212.28 1910.8,1212.28 1911.38,1212.28 1911.97,1212.28 1912.56,1212.28 1913.14,1212.28 1913.73,1212.28 1914.32,1212.28 1914.9,1212.28 1915.49,1212.28 1916.08,1212.28 1916.66,1212.28 1917.25,1212.28 1917.83,1212.28 1918.42,1212.28 1919.01,1212.28 1919.59,1212.28 1920.18,1212.28 1920.77,1212.28 1921.35,1212.28 1921.94,1212.28 1922.53,1212.28 1923.11,1212.28 1923.7,1212.28 1924.29,1212.28 1924.87,1212.28 1925.46,1212.28 1926.04,1212.28 1926.63,1212.28 1927.22,1212.28 1927.8,1212.28 1928.39,1212.28 1928.98,1212.28 1929.56,1212.28 1930.15,1212.28 1930.74,1212.28 1931.32,1212.28 1931.91,1212.28 1932.5,1212.28 1933.08,1212.28 1933.67,1212.28 1934.25,1212.28 1934.84,1212.28 1935.43,1212.28 1936.01,1212.28 1936.6,1212.28 1937.19,1212.28 1937.77,1212.28 1938.36,1212.28 1938.95,1212.28 1939.53,1212.28 1940.12,1212.28 1940.71,1212.28 1941.29,1212.28 1941.88,1212.28 1942.46,1212.28 1943.05,1212.28 1943.64,1212.28 1944.22,1212.28 1944.81,1212.28 1945.4,1212.28 1945.98,1212.28 1946.57,1212.28 1947.16,1212.28 1947.74,1212.28 1948.33,1212.28 1948.91,1212.28 1949.5,1212.28 1950.09,1212.28 1950.67,1212.28 1951.26,1212.28 1951.85,1212.28 1952.43,1212.28 1953.02,1212.28 1953.61,1212.28 1954.19,1212.28 1954.78,1212.28 1955.37,1212.28 1955.95,1212.28 1956.54,1212.28 1957.12,1212.28 1957.71,1212.28 1958.3,1212.28 1958.88,1212.28 1959.47,1212.28 1960.06,1212.28 1960.64,1212.28 1961.23,1212.28 1961.82,1212.28 1962.4,1212.28 1962.99,1212.28 1963.58,1212.28 1964.16,1212.28 1964.75,1212.28 1965.33,1212.28 1965.92,1212.28 1966.51,1212.28 1967.09,1212.28 1967.68,1212.28 1968.27,1212.28 1968.85,1212.28 1969.44,1212.28 1970.03,1212.28 1970.61,1212.28 1971.2,1212.28 1971.78,1212.28 1972.37,1212.28 1972.96,1212.28 1973.54,1212.28 1974.13,1212.28 1974.72,1212.28 1975.3,1212.28 1975.89,1212.28 1976.48,1212.28 1977.06,1212.28 1977.65,1212.28 1978.24,1212.28 1978.82,1212.28 1979.41,1212.28 1979.99,1212.28 1980.58,1212.28 1981.17,1212.28 1981.75,1212.28 1982.34,1212.28 1982.93,1212.28 1983.51,1212.28 1984.1,1212.28 1984.69,1212.28 1985.27,1212.28 1985.86,1212.28 1986.45,1212.28 1987.03,1212.28 1987.62,1212.28 1988.2,1212.28 1988.79,1212.28 1989.38,1212.28 1989.96,1212.28 1990.55,1212.28 1991.14,1212.28 1991.72,1212.28 1992.31,1212.28 1992.9,1212.28 1993.48,1212.28 1994.07,1212.28 1994.65,1212.28 1995.24,1212.28 1995.83,1212.28 1996.41,1212.28 1997,1212.28 1997.59,1212.28 1998.17,1212.28 1998.76,1212.28 1999.35,1212.28 1999.93,1212.28 2000.52,1212.28 2001.11,1212.28 2001.69,1212.28 2002.28,1212.28 2002.86,1212.28 2003.45,1212.28 2004.04,1212.28 2004.62,1212.28 2005.21,1212.28 2005.8,1212.28 2006.38,1212.28 2006.97,1212.28 2007.56,1212.28 2008.14,1212.28 2008.73,1212.28 2009.32,1212.28 2009.9,1212.28 2010.49,1212.28 2011.07,1212.28 2011.66,1212.28 2012.25,1212.28 2012.83,1212.28 2013.42,1212.28 2014.01,1212.28 2014.59,1212.28 2015.18,1212.28 2015.77,1212.28 2016.35,1212.28 2016.94,1212.28 2017.53,1212.28 2018.11,1212.28 2018.7,1212.28 2019.28,1212.28 2019.87,1212.28 2020.46,1212.28 2021.04,1212.28 2021.63,1212.28 2022.22,1212.28 2022.8,1212.28 2023.39,1212.28 2023.98,1212.28 2024.56,1212.28 2025.15,1212.28 2025.73,1212.28 2026.32,1212.28 2026.91,1212.28 2027.49,1212.28 2028.08,1212.28 2028.67,1212.28 2029.25,1212.28 2029.84,1212.28 2030.43,1212.28 2031.01,1212.28 2031.6,1212.28 2032.19,1212.28 2032.77,1212.28 2033.36,1212.28 2033.94,1212.28 2034.53,1212.28 2035.12,1212.28 2035.7,1212.28 2036.29,1212.28 2036.88,1212.28 2037.46,1212.28 2038.05,1212.28 2038.64,1212.28 2039.22,1212.28 2039.81,1212.28 2040.4,1212.28 2040.98,1212.28 2041.57,1212.28 2042.15,1212.28 2042.74,1212.28 2043.33,1212.28 2043.91,1212.28 2044.5,1212.28 2045.09,1212.28 2045.67,1212.28 2046.26,1212.28 2046.85,1212.28 2047.43,1212.28 2048.02,1212.28 2048.6,1212.28 2049.19,1212.28 2049.78,1212.28 2050.36,1212.28 2050.95,1212.28 2051.54,1212.28 2052.12,1212.28 2052.71,1212.28 2053.3,1212.28 2053.88,1212.28 2054.47,1212.28 2055.06,1212.28 2055.64,1212.28 2056.23,1212.28 2056.81,1212.28 2057.4,1212.28 2057.99,1212.28 2058.57,1212.28 2059.16,1212.28 2059.75,1212.28 2060.33,1212.28 2060.92,1212.28 2061.51,1212.28 2062.09,1212.28 2062.68,1212.28 2063.27,1212.28 2063.85,1212.28 2064.44,1212.28 2065.02,1212.28 2065.61,1212.28 2066.2,1212.28 2066.78,1212.28 2067.37,1212.28 2067.96,1212.28 2068.54,1212.28 2069.13,1212.28 2069.72,1212.28 2070.3,1212.28 2070.89,1212.28 2071.48,1212.28 2072.06,1212.28 2072.65,1212.28 2073.23,1212.28 2073.82,1212.28 2074.41,1212.28 2074.99,1212.28 2075.58,1212.28 2076.17,1212.28 2076.75,1212.28 2077.34,1212.28 2077.93,1212.28 2078.51,1212.28 2079.1,1212.28 2079.68,1212.28 2080.27,1212.28 2080.86,1212.28 2081.44,1212.28 2082.03,1212.28 2082.62,1212.28 2083.2,1212.28 2083.79,1212.28 2084.38,1212.28 2084.96,1212.28 2085.55,1212.28 2086.14,1212.28 2086.72,1212.28 2087.31,1212.28 2087.89,1212.28 2088.48,1212.28 2089.07,1212.28 2089.65,1212.28 2090.24,1212.28 2090.83,1212.28 2091.41,1212.28 2092,1212.28 2092.59,1212.28 2093.17,1212.28 2093.76,1212.28 2094.35,1212.28 2094.93,1212.28 2095.52,1212.28 2096.1,1212.28 2096.69,1212.28 2097.28,1212.28 2097.86,1212.28 2098.45,1212.28 2099.04,1212.28 2099.62,1212.28 2100.21,1212.28 2100.8,1212.28 2101.38,1212.28 2101.97,1212.28 2102.55,1212.28 2103.14,1212.28 2103.73,1212.28 2104.31,1212.28 2104.9,1212.28 2105.49,1212.28 2106.07,1212.28 2106.66,1212.28 2107.25,1212.28 2107.83,1212.28 2108.42,1212.28 2109.01,1212.28 2109.59,1212.28 2110.18,1212.28 2110.76,1212.28 2111.35,1212.28 2111.94,1212.28 2112.52,1212.28 2113.11,1212.28 2113.7,1212.28 2114.28,1212.28 2114.87,1212.28 2115.46,1212.28 2116.04,1212.28 2116.63,1212.28 2117.22,1212.28 2117.8,1212.28 2118.39,1212.28 2118.97,1212.28 2119.56,1212.28 2120.15,1212.28 2120.73,1212.28 2121.32,1212.28 2121.91,1212.28 2122.49,1212.28 2123.08,1212.28 2123.67,1212.28 2124.25,1212.28 2124.84,1212.28 2125.42,1212.28 2126.01,1212.28 2126.6,1212.28 2127.18,1212.28 2127.77,1212.28 2128.36,1212.28 2128.94,1212.28 2129.53,1212.28 2130.12,1212.28 2130.7,1212.28 2131.29,1212.28 2131.88,1212.28 2132.46,1212.28 2133.05,1212.28 2133.63,1212.28 2134.22,1212.28 2134.81,1212.28 2135.39,1212.28 2135.98,1212.28 2136.57,1212.28 2137.15,1212.28 2137.74,1212.28 2138.33,1212.28 2138.91,1212.28 2139.5,1212.28 2140.09,1212.28 2140.67,1212.28 2141.26,1212.28 2141.84,1212.28 2142.43,1212.28 2143.02,1212.28 2143.6,1212.28 2144.19,1212.28 2144.78,1212.28 2145.36,1212.28 2145.95,1212.28 2146.54,1212.28 2147.12,1212.28 2147.71,1212.28 2148.3,1212.28 2148.88,1212.28 2149.47,1212.28 2150.05,1212.28 2150.64,1212.28 2151.23,1212.28 2151.81,1212.28 2152.4,1212.28 2152.99,1212.28 2153.57,1212.28 2154.16,1212.28 2154.75,1212.28 2155.33,1212.28 2155.92,1212.28 2156.5,1212.28 2157.09,1212.28 2157.68,1212.28 2158.26,1212.28 \"/>\n<path clip-path=\"url(#clip802)\" d=\"M986.025 1212.1 L986.612 1212.1 L987.198 1212.1 L987.785 1212.1 L988.371 1212.1 L988.957 1212.1 L989.544 1212.1 L990.13 1212.1 L990.717 1212.1 L991.303 1212.1 L991.889 1212.1 L992.476 1212.1 L993.062 1212.1 L993.649 1212.1 L994.235 1212.1 L994.822 1212.1 L995.408 1212.1 L995.994 1212.1 L996.581 1212.1 L997.167 1212.1 L997.754 1212.1 L998.34 1212.1 L998.926 1212.1 L999.513 1212.1 L1000.1 1212.1 L1000.69 1212.1 L1001.27 1212.1 L1001.86 1212.1 L1002.44 1212.1 L1003.03 1212.1 L1003.62 1212.1 L1004.2 1212.1 L1004.79 1212.1 L1005.38 1212.1 L1005.96 1212.1 L1006.55 1212.1 L1007.14 1212.1 L1007.72 1212.1 L1008.31 1212.1 L1008.9 1212.1 L1009.48 1212.1 L1010.07 1212.1 L1010.65 1212.1 L1011.24 1212.1 L1011.83 1212.1 L1012.41 1212.1 L1013 1212.1 L1013.59 1212.1 L1014.17 1212.1 L1014.76 1212.1 L1015.35 1212.1 L1015.93 1212.1 L1016.52 1212.1 L1017.11 1212.1 L1017.69 1212.1 L1018.28 1212.1 L1018.86 1212.1 L1019.45 1212.1 L1020.04 1212.1 L1020.62 1212.1 L1021.21 1212.1 L1021.8 1212.1 L1022.38 1212.1 L1022.97 1212.1 L1023.56 1212.1 L1024.14 1212.1 L1024.73 1212.1 L1025.32 1212.1 L1025.9 1212.1 L1026.49 1212.1 L1027.07 1212.1 L1027.66 1212.1 L1028.25 1212.1 L1028.83 1212.1 L1029.42 1212.1 L1030.01 1212.1 L1030.59 1212.1 L1031.18 1212.1 L1031.77 1212.1 L1032.35 1212.1 L1032.94 1212.1 L1033.52 1212.1 L1034.11 1212.1 L1034.7 1212.1 L1035.28 1212.1 L1035.87 1212.1 L1036.46 1212.1 L1037.04 1212.1 L1037.63 1212.1 L1038.22 1212.1 L1038.8 1212.1 L1039.39 1212.1 L1039.98 1212.1 L1040.56 1212.1 L1041.15 1212.1 L1041.73 1212.1 L1042.32 1212.1 L1042.91 1212.1 L1043.49 1212.1 L1044.08 1212.1 L1044.67 1212.1 L1045.25 1212.1 L1045.84 1212.1 L1046.43 1212.1 L1047.01 1212.1 L1047.6 1212.1 L1048.19 1212.1 L1048.77 1212.1 L1049.36 1212.1 L1049.94 1212.1 L1050.53 1212.1 L1051.12 1212.1 L1051.7 1212.1 L1052.29 1212.1 L1052.88 1212.1 L1053.46 1212.1 L1054.05 1212.1 L1054.64 1212.1 L1055.22 1212.1 L1055.81 1212.1 L1056.39 1212.1 L1056.98 1212.1 L1057.57 1212.1 L1058.15 1212.1 L1058.74 1212.1 L1059.33 1212.1 L1059.91 1212.1 L1060.5 1212.1 L1061.09 1212.1 L1061.67 1212.1 L1062.26 1212.1 L1062.85 1212.1 L1063.43 1212.1 L1064.02 1212.1 L1064.6 1212.1 L1065.19 1212.1 L1065.78 1212.1 L1066.36 1212.1 L1066.95 1212.1 L1067.54 1212.1 L1068.12 1212.1 L1068.71 1212.1 L1069.3 1212.1 L1069.88 1212.1 L1070.47 1212.1 L1071.06 1212.1 L1071.64 1212.1 L1072.23 1212.1 L1072.81 1212.1 L1073.4 1212.1 L1073.99 1212.1 L1074.57 1212.1 L1075.16 1212.1 L1075.75 1212.1 L1076.33 1212.1 L1076.92 1212.1 L1077.51 1212.1 L1078.09 1212.1 L1078.68 1212.1 L1079.26 1212.1 L1079.85 1212.1 L1080.44 1212.1 L1081.02 1212.1 L1081.61 1212.1 L1082.2 1212.1 L1082.78 1212.1 L1083.37 1212.1 L1083.96 1212.1 L1084.54 1212.1 L1085.13 1212.1 L1085.72 1212.1 L1086.3 1212.1 L1086.89 1212.1 L1087.47 1212.1 L1088.06 1212.1 L1088.65 1212.1 L1089.23 1212.1 L1089.82 1212.1 L1090.41 1212.1 L1090.99 1212.1 L1091.58 1212.1 L1092.17 1212.1 L1092.75 1212.1 L1093.34 1212.1 L1093.93 1212.1 L1094.51 1212.1 L1095.1 1212.1 L1095.68 1212.1 L1096.27 1212.1 L1096.86 1212.1 L1097.44 1212.1 L1098.03 1212.1 L1098.62 1212.1 L1099.2 1212.1 L1099.79 1212.1 L1100.38 1212.1 L1100.96 1212.1 L1101.55 1212.1 L1102.14 1212.1 L1102.72 1212.1 L1103.31 1212.1 L1103.89 1212.1 L1104.48 1212.1 L1105.07 1212.1 L1105.65 1212.1 L1106.24 1212.1 L1106.83 1212.1 L1107.41 1212.1 L1108 1212.1 L1108.59 1212.1 L1109.17 1212.1 L1109.76 1212.1 L1110.34 1212.1 L1110.93 1212.1 L1111.52 1212.1 L1112.1 1212.1 L1112.69 1212.1 L1113.28 1212.1 L1113.86 1212.1 L1114.45 1212.1 L1115.04 1212.1 L1115.62 1212.1 L1116.21 1212.1 L1116.8 1212.1 L1117.38 1212.1 L1117.97 1212.1 L1118.55 1212.1 L1119.14 1212.1 L1119.73 1212.1 L1120.31 1212.1 L1120.9 1212.1 L1121.49 1212.1 L1122.07 1212.1 L1122.66 1212.1 L1123.25 1212.1 L1123.83 1212.1 L1124.42 1212.1 L1125.01 1212.1 L1125.59 1212.1 L1126.18 1212.1 L1126.76 1212.1 L1127.35 1212.1 L1127.94 1212.1 L1128.52 1212.1 L1129.11 1212.1 L1129.7 1212.1 L1130.28 1212.1 L1130.87 1212.1 L1131.46 1212.1 L1132.04 1212.1 L1132.63 1212.1 L1133.21 1212.1 L1133.8 1212.1 L1134.39 1212.1 L1134.97 1212.1 L1135.56 1212.1 L1136.15 1212.1 L1136.73 1212.1 L1137.32 1212.1 L1137.91 1212.1 L1138.49 1212.1 L1139.08 1212.1 L1139.67 1212.1 L1140.25 1212.1 L1140.84 1212.1 L1141.42 1212.1 L1142.01 1212.1 L1142.6 1212.1 L1143.18 1212.1 L1143.77 1212.1 L1144.36 1212.1 L1144.94 1212.1 L1145.53 1212.1 L1146.12 1212.1 L1146.7 1212.1 L1147.29 1212.1 L1147.88 1212.1 L1148.46 1212.1 L1149.05 1212.1 L1149.63 1212.1 L1150.22 1212.1 L1150.81 1212.1 L1151.39 1212.1 L1151.98 1212.1 L1152.57 1212.1 L1153.15 1212.1 L1153.74 1212.1 L1154.33 1212.1 L1154.91 1212.1 L1155.5 1212.1 L1156.09 1212.1 L1156.67 1212.1 L1157.26 1212.1 L1157.84 1212.1 L1158.43 1212.1 L1159.02 1212.1 L1159.6 1212.1 L1160.19 1212.1 L1160.78 1212.1 L1161.36 1212.1 L1161.95 1212.1 L1162.54 1212.1 L1163.12 1212.1 L1163.71 1212.1 L1164.29 1212.1 L1164.88 1212.1 L1165.47 1212.1 L1166.05 1212.1 L1166.64 1212.1 L1167.23 1212.1 L1167.81 1212.1 L1168.4 1212.1 L1168.99 1212.1 L1169.57 1212.1 L1170.16 1212.1 L1170.75 1212.1 L1171.33 1212.1 L1171.92 1212.1 L1172.5 1212.1 L1173.09 1212.1 L1173.68 1212.1 L1174.26 1212.1 L1174.85 1212.1 L1175.44 1212.1 L1176.02 1212.1 L1176.61 1212.1 L1177.2 1212.1 L1177.78 1212.1 L1178.37 1212.1 L1178.96 1212.1 L1179.54 1212.1 L1180.13 1212.1 L1180.71 1212.1 L1181.3 1212.1 L1181.89 1212.1 L1182.47 1212.1 L1183.06 1212.1 L1183.65 1212.1 L1184.23 1212.1 L1184.82 1212.1 L1185.41 1212.1 L1185.99 1212.1 L1186.58 1212.1 L1187.16 1212.1 L1187.75 1212.1 L1188.34 1212.1 L1188.92 1212.1 L1189.51 1212.1 L1190.1 1212.1 L1190.68 1212.1 L1191.27 1212.1 L1191.86 1212.1 L1192.44 1212.1 L1193.03 1212.1 L1193.62 1212.1 L1194.2 1212.1 L1194.79 1212.1 L1195.37 1212.1 L1195.96 1212.1 L1196.55 1212.1 L1197.13 1212.1 L1197.72 1212.1 L1198.31 1212.1 L1198.89 1212.1 L1199.48 1212.1 L1200.07 1212.1 L1200.65 1212.1 L1201.24 1212.1 L1201.83 1212.1 L1202.41 1212.1 L1203 1212.1 L1203.58 1212.1 L1204.17 1212.1 L1204.76 1212.1 L1205.34 1212.1 L1205.93 1212.1 L1206.52 1212.1 L1207.1 1212.1 L1207.69 1212.1 L1208.28 1212.1 L1208.86 1212.1 L1209.45 1212.1 L1210.03 1212.1 L1210.62 1212.1 L1211.21 1212.1 L1211.79 1212.1 L1212.38 1212.1 L1212.97 1212.1 L1213.55 1212.1 L1214.14 1212.1 L1214.73 1212.1 L1215.31 1212.1 L1215.9 1212.1 L1216.49 1212.1 L1217.07 1212.1 L1217.66 1212.1 L1218.24 1212.1 L1218.83 1212.1 L1219.42 1212.1 L1220 1212.1 L1220.59 1212.1 L1221.18 1212.1 L1221.76 1212.1 L1222.35 1212.1 L1222.94 1212.1 L1223.52 1212.1 L1224.11 1212.1 L1224.7 1212.1 L1225.28 1212.1 L1225.87 1212.1 L1226.45 1212.1 L1227.04 1212.1 L1227.63 1212.1 L1228.21 1212.1 L1228.8 1212.1 L1229.39 1212.1 L1229.97 1212.1 L1230.56 1212.1 L1231.15 1212.1 L1231.73 1212.1 L1232.32 1212.1 L1232.91 1212.1 L1233.49 1212.1 L1234.08 1212.1 L1234.66 1212.1 L1235.25 1212.1 L1235.84 1212.1 L1236.42 1212.1 L1237.01 1212.1 L1237.6 1212.1 L1238.18 1212.1 L1238.77 1212.1 L1239.36 1212.1 L1239.94 1212.1 L1240.53 1212.1 L1241.11 1212.1 L1241.7 1212.1 L1242.29 1212.1 L1242.87 1212.1 L1243.46 1212.1 L1244.05 1212.1 L1244.63 1212.1 L1245.22 1212.1 L1245.81 1212.1 L1246.39 1212.1 L1246.98 1212.1 L1247.57 1212.1 L1248.15 1212.1 L1248.74 1212.1 L1249.32 1212.1 L1249.91 1212.1 L1250.5 1212.1 L1251.08 1212.1 L1251.67 1212.1 L1252.26 1212.1 L1252.84 1212.1 L1253.43 1212.1 L1254.02 1212.1 L1254.6 1212.1 L1255.19 1212.1 L1255.78 1212.1 L1256.36 1212.1 L1256.95 1212.1 L1257.53 1212.1 L1258.12 1212.1 L1258.71 1212.1 L1259.29 1212.1 L1259.88 1212.1 L1260.47 1212.1 L1261.05 1212.1 L1261.64 1212.1 L1262.23 1212.1 L1262.81 1212.1 L1263.4 1212.1 L1263.98 1212.1 L1264.57 1212.1 L1265.16 1212.1 L1265.74 1212.1 L1266.33 1212.1 L1266.92 1212.1 L1267.5 1212.1 L1268.09 1212.1 L1268.68 1212.1 L1269.26 1212.1 L1269.85 1212.1 L1270.44 1212.1 L1271.02 1212.1 L1271.61 1212.1 L1272.19 1212.1 L1272.78 1212.1 L1273.37 1212.1 L1273.95 1212.1 L1274.54 1212.1 L1275.13 1212.1 L1275.71 1212.1 L1276.3 1212.1 L1276.89 1212.1 L1277.47 1212.1 L1278.06 1212.1 L1278.65 1212.1 L1279.23 1212.1 L1279.82 1212.1 L1280.4 1212.1 L1280.99 1212.1 L1281.58 1212.1 L1282.16 1212.1 L1282.75 1212.1 L1283.34 1212.1 L1283.92 1212.1 L1284.51 1212.1 L1285.1 1212.1 L1285.68 1212.1 L1286.27 1212.1 L1286.86 1212.1 L1287.44 1212.1 L1288.03 1212.1 L1288.61 1212.1 L1289.2 1212.1 L1289.79 1212.1 L1290.37 1212.1 L1290.96 1212.1 L1291.55 1212.1 L1292.13 1212.1 L1292.72 1212.1 L1293.31 1212.1 L1293.89 1212.1 L1294.48 1212.1 L1295.06 1212.1 L1295.65 1212.1 L1296.24 1212.1 L1296.82 1212.1 L1297.41 1212.1 L1298 1212.1 L1298.58 1212.1 L1299.17 1212.1 L1299.76 1212.1 L1300.34 1212.1 L1300.93 1212.1 L1301.52 1212.1 L1302.1 1212.1 L1302.69 1212.1 L1303.27 1212.1 L1303.86 1212.1 L1304.45 1212.1 L1305.03 1212.1 L1305.62 1212.1 L1306.21 1212.1 L1306.79 1212.1 L1307.38 1212.1 L1307.97 1212.1 L1308.55 1212.1 L1309.14 1212.1 L1309.73 1212.1 L1310.31 1212.1 L1310.9 1212.1 L1311.48 1212.1 L1312.07 1212.1 L1312.66 1212.1 L1313.24 1212.1 L1313.83 1212.1 L1314.42 1212.1 L1315 1212.1 L1315.59 1212.1 L1316.18 1212.1 L1316.76 1212.1 L1317.35 1212.1 L1317.93 1212.1 L1318.52 1212.1 L1319.11 1212.1 L1319.69 1212.1 L1320.28 1212.1 L1320.87 1212.1 L1321.45 1212.1 L1322.04 1212.1 L1322.63 1212.1 L1323.21 1212.1 L1323.8 1212.1 L1324.39 1212.1 L1324.97 1212.1 L1325.56 1212.1 L1326.14 1212.1 L1326.73 1212.1 L1327.32 1212.1 L1327.9 1212.1 L1328.49 1212.1 L1329.08 1212.1 L1329.66 1212.1 L1330.25 1212.1 L1330.84 1212.1 L1331.42 1212.1 L1332.01 1212.1 L1332.6 1212.1 L1333.18 1212.1 L1333.77 1212.1 L1334.35 1212.1 L1334.94 1212.1 L1335.53 1212.1 L1336.11 1212.1 L1336.7 1212.1 L1337.29 1212.1 L1337.87 1212.1 L1338.46 1212.1 L1339.05 1212.1 L1339.63 1212.1 L1340.22 1212.1 L1340.8 1212.1 L1341.39 1212.1 L1341.98 1212.1 L1342.56 1212.1 L1343.15 1212.1 L1343.74 1212.1 L1344.32 1212.1 L1344.91 1212.1 L1345.5 1212.1 L1346.08 1212.1 L1346.67 1212.1 L1347.26 1212.1 L1347.84 1212.1 L1348.43 1212.1 L1349.01 1212.1 L1349.6 1212.1 L1350.19 1212.1 L1350.77 1212.1 L1351.36 1212.1 L1351.95 1212.1 L1352.53 1212.1 L1353.12 1212.1 L1353.71 1212.1 L1354.29 1212.1 L1354.88 1212.1 L1355.47 1212.1 L1356.05 1212.1 L1356.64 1212.1 L1357.22 1212.1 L1357.81 1212.1 L1358.4 1212.1 L1358.98 1212.1 L1359.57 1212.1 L1360.16 1212.1 L1360.74 1212.1 L1361.33 1212.1 L1361.92 1212.1 L1362.5 1212.1 L1363.09 1212.1 L1363.68 1212.1 L1364.26 1212.1 L1364.85 1212.1 L1365.43 1212.1 L1366.02 1212.1 L1366.61 1212.1 L1367.19 1212.1 L1367.78 1212.1 L1368.37 1212.1 L1368.95 1212.1 L1369.54 1212.1 L1370.13 1212.1 L1370.71 1212.1 L1371.3 1212.1 L1371.88 1212.1 L1372.47 1212.1 L1373.06 1212.1 L1373.64 1212.1 L1374.23 1212.1 L1374.82 1212.1 L1375.4 1212.1 L1375.99 1212.1 L1376.58 1212.1 L1377.16 1212.1 L1377.75 1212.1 L1378.34 1212.1 L1378.92 1212.1 L1379.51 1212.1 L1380.09 1212.1 L1380.68 1212.1 L1381.27 1212.1 L1381.85 1212.1 L1382.44 1212.1 L1383.03 1212.1 L1383.61 1212.1 L1384.2 1212.1 L1384.79 1212.1 L1385.37 1212.1 L1385.96 1212.1 L1386.55 1212.1 L1387.13 1212.1 L1387.72 1212.1 L1388.3 1212.1 L1388.89 1212.1 L1389.48 1212.1 L1390.06 1212.1 L1390.65 1212.1 L1391.24 1212.1 L1391.82 1212.1 L1392.41 1212.1 L1393 1212.1 L1393.58 1212.1 L1394.17 1212.1 L1394.75 1212.1 L1395.34 1212.1 L1395.93 1212.1 L1396.51 1212.1 L1397.1 1212.1 L1397.69 1212.1 L1398.27 1212.1 L1398.86 1212.1 L1399.45 1212.1 L1400.03 1212.1 L1400.62 1212.1 L1401.21 1212.1 L1401.79 1212.1 L1402.38 1212.1 L1402.96 1212.1 L1403.55 1212.1 L1404.14 1212.1 L1404.72 1212.1 L1405.31 1212.1 L1405.9 1212.1 L1406.48 1212.1 L1407.07 1212.1 L1407.66 1212.1 L1408.24 1212.1 L1408.83 1212.1 L1409.42 1212.1 L1410 1212.1 L1410.59 1212.1 L1411.17 1212.1 L1411.76 1212.1 L1412.35 1212.1 L1412.93 1212.1 L1413.52 1212.1 L1414.11 1212.1 L1414.69 1212.1 L1415.28 1212.1 L1415.87 1212.1 L1416.45 1212.1 L1417.04 1212.1 L1417.63 1212.1 L1418.21 1212.1 L1418.8 1212.1 L1419.38 1212.1 L1419.97 1212.1 L1420.56 1212.1 L1421.14 1212.1 L1421.73 1212.1 L1422.32 1212.1 L1422.9 1212.1 L1423.49 1212.1 L1424.08 1212.1 L1424.66 1212.1 L1425.25 1212.1 L1425.83 1212.1 L1426.42 1212.1 L1427.01 1212.1 L1427.59 1212.1 L1428.18 1212.1 L1428.77 1212.1 L1429.35 1212.1 L1429.94 1212.1 L1430.53 1212.1 L1431.11 1212.1 L1431.7 1212.1 L1432.29 1212.1 L1432.87 1212.1 L1433.46 1212.1 L1434.04 1212.1 L1434.63 1212.1 L1435.22 1212.1 L1435.8 1212.1 L1436.39 1212.1 L1436.98 1212.1 L1437.56 1212.1 L1438.15 1212.1 L1438.74 1212.1 L1439.32 1212.1 L1439.91 1212.1 L1440.5 1212.1 L1441.08 1212.1 L1441.67 1212.1 L1442.25 1212.1 L1442.84 1212.1 L1443.43 1212.1 L1444.01 1212.1 L1444.6 1212.1 L1445.19 1212.1 L1445.77 1212.1 L1446.36 1212.1 L1446.95 1212.1 L1447.53 1212.1 L1448.12 1212.1 L1448.7 1212.1 L1449.29 1212.1 L1449.88 1212.1 L1450.46 1212.1 L1451.05 1212.1 L1451.64 1212.1 L1452.22 1212.1 L1452.81 1212.1 L1453.4 1212.1 L1453.98 1212.1 L1454.57 1212.1 L1455.16 1212.1 L1455.74 1212.1 L1456.33 1212.1 L1456.91 1212.1 L1457.5 1212.1 L1458.09 1212.1 L1458.67 1212.1 L1459.26 1212.1 L1459.85 1212.1 L1460.43 1212.1 L1461.02 1212.1 L1461.61 1212.1 L1462.19 1212.1 L1462.78 1212.1 L1463.37 1212.1 L1463.95 1212.1 L1464.54 1212.1 L1465.12 1212.1 L1465.71 1212.1 L1466.3 1212.1 L1466.88 1212.1 L1467.47 1212.1 L1468.06 1212.1 L1468.64 1212.1 L1469.23 1212.1 L1469.82 1212.1 L1470.4 1212.1 L1470.99 1212.1 L1471.57 1212.1 L1472.16 1212.1 L1472.75 1212.1 L1473.33 1212.1 L1473.92 1212.1 L1474.51 1212.1 L1475.09 1212.1 L1475.68 1212.1 L1476.27 1212.1 L1476.85 1212.1 L1477.44 1212.1 L1478.03 1212.1 L1478.61 1212.1 L1479.2 1212.1 L1479.78 1212.1 L1480.37 1212.1 L1480.96 1212.1 L1481.54 1212.1 L1482.13 1212.1 L1482.72 1212.1 L1483.3 1212.1 L1483.89 1212.1 L1484.48 1212.1 L1485.06 1212.1 L1485.65 1212.1 L1486.24 1212.1 L1486.82 1212.1 L1487.41 1212.1 L1487.99 1212.1 L1488.58 1212.1 L1489.17 1212.1 L1489.75 1212.1 L1490.34 1212.1 L1490.93 1212.1 L1491.51 1212.1 L1492.1 1212.1 L1492.69 1212.1 L1493.27 1212.1 L1493.86 1212.1 L1494.45 1212.1 L1495.03 1212.1 L1495.62 1212.1 L1496.2 1212.1 L1496.79 1212.1 L1497.38 1212.1 L1497.96 1212.1 L1498.55 1212.1 L1499.14 1212.1 L1499.72 1212.1 L1500.31 1212.1 L1500.9 1212.1 L1501.48 1212.1 L1502.07 1212.1 L1502.65 1212.1 L1503.24 1212.1 L1503.83 1212.1 L1504.41 1212.1 L1505 1212.1 L1505.59 1212.1 L1506.17 1212.1 L1506.76 1212.1 L1507.35 1212.1 L1507.93 1212.1 L1508.52 1212.1 L1509.11 1212.1 L1509.69 1212.1 L1510.28 1212.1 L1510.86 1212.1 L1511.45 1212.1 L1512.04 1212.1 L1512.62 1212.1 L1513.21 1212.1 L1513.8 1212.1 L1514.38 1212.1 L1514.97 1212.1 L1515.56 1212.1 L1516.14 1212.1 L1516.73 1212.1 L1517.32 1212.1 L1517.9 1212.1 L1518.49 1212.1 L1519.07 1212.1 L1519.66 1212.1 L1520.25 1212.1 L1520.83 1212.1 L1521.42 1212.1 L1522.01 1212.1 L1522.59 1212.1 L1523.18 1212.1 L1523.77 1212.1 L1524.35 1212.1 L1524.94 1212.1 L1525.52 1212.1 L1526.11 1212.1 L1526.7 1212.1 L1527.28 1212.1 L1527.87 1212.1 L1528.46 1212.1 L1529.04 1212.1 L1529.63 1212.1 L1530.22 1212.1 L1530.8 1212.1 L1531.39 1212.1 L1531.98 1212.1 L1532.56 1212.1 L1533.15 1212.1 L1533.73 1212.1 L1534.32 1212.1 L1534.91 1212.1 L1535.49 1212.1 L1536.08 1212.1 L1536.67 1212.1 L1537.25 1212.1 L1537.84 1212.1 L1538.43 1212.1 L1539.01 1212.1 L1539.6 1212.1 L1540.19 1212.1 L1540.77 1212.1 L1541.36 1212.1 L1541.94 1212.1 L1542.53 1212.1 L1543.12 1212.1 L1543.7 1212.1 L1544.29 1212.1 L1544.88 1212.1 L1545.46 1212.1 L1546.05 1212.1 L1546.64 1212.1 L1547.22 1212.1 L1547.81 1212.1 L1548.4 1212.1 L1548.98 1212.1 L1549.57 1212.1 L1550.15 1212.1 L1550.74 1212.1 L1551.33 1212.1 L1551.91 1212.1 L1552.5 1212.1 L1553.09 1212.1 L1553.67 1212.1 L1554.26 1212.1 L1554.85 1212.1 L1555.43 1212.1 L1556.02 1212.1 L1556.6 1212.1 L1557.19 1212.1 L1557.78 1212.1 L1558.36 1212.1 L1558.95 1212.1 L1559.54 1212.1 L1560.12 1212.1 L1560.71 1212.1 L1561.3 1212.1 L1561.88 1212.1 L1562.47 1212.1 L1563.06 1212.1 L1563.64 1212.1 L1564.23 1212.1 L1564.81 1212.1 L1565.4 1212.1 L1565.99 1212.1 L1566.57 1212.1 L1567.16 1212.1 L1567.75 1212.1 L1568.33 1212.1 L1568.92 1212.1 L1569.51 1212.1 L1570.09 1212.1 L1570.68 1212.1 L1571.27 1212.1 L1571.85 1212.1 L1572.44 1212.1 L1573.02 1212.1 L1573.61 1212.1 L1574.2 1212.1 L1574.78 1212.1 L1575.37 1212.1 L1575.96 1212.1 L1576.54 1212.1 L1577.13 1212.1 L1577.72 1212.1 L1578.3 1212.1 L1578.89 1212.1 L1579.47 1212.1 L1580.06 1212.1 L1580.65 1212.1 L1581.23 1212.1 L1581.82 1212.1 L1582.41 1212.1 L1582.99 1212.1 L1583.58 1212.1 L1584.17 1212.1 L1584.75 1212.1 L1585.34 1212.1 L1585.93 1212.1 L1586.51 1212.1 L1587.1 1212.1 L1587.68 1212.1 L1588.27 1212.1 L1588.86 1212.1 L1589.44 1212.1 L1590.03 1212.1 L1590.62 1212.1 L1591.2 1212.1 L1591.79 1212.1 L1592.38 1212.1 L1592.96 1212.1 L1593.55 1212.1 L1594.14 1212.1 L1594.72 1212.1 L1595.31 1212.1 L1595.89 1212.1 L1596.48 1212.1 L1597.07 1212.1 L1597.65 1212.1 L1598.24 1212.1 L1598.83 1212.1 L1599.41 1212.1 L1600 1212.1 L1600.59 1212.1 L1601.17 1212.1 L1601.76 1212.1 L1602.34 1212.1 L1602.93 1212.1 L1603.52 1212.1 L1604.1 1212.1 L1604.69 1212.1 L1605.28 1212.1 L1605.86 1212.1 L1606.45 1212.1 L1607.04 1212.1 L1607.62 1212.1 L1608.21 1212.1 L1608.8 1212.1 L1609.38 1212.1 L1609.97 1212.1 L1610.55 1212.1 L1611.14 1212.1 L1611.73 1212.1 L1612.31 1212.1 L1612.9 1212.1 L1613.49 1212.1 L1614.07 1212.1 L1614.66 1212.1 L1615.25 1212.1 L1615.83 1212.1 L1616.42 1212.1 L1617.01 1212.1 L1617.59 1212.1 L1618.18 1212.1 L1618.76 1212.1 L1619.35 1212.1 L1619.94 1212.1 L1620.52 1212.1 L1621.11 1212.1 L1621.7 1212.1 L1622.28 1212.1 L1622.87 1212.1 L1623.46 1212.1 L1624.04 1212.1 L1624.63 1212.1 L1625.22 1212.1 L1625.8 1212.1 L1626.39 1212.1 L1626.97 1212.1 L1627.56 1212.1 L1628.15 1212.1 L1628.73 1212.1 L1629.32 1212.1 L1629.91 1212.1 L1630.49 1212.1 L1631.08 1212.1 L1631.67 1212.1 L1632.25 1212.1 L1632.84 1212.1 L1633.42 1212.1 L1634.01 1212.1 L1634.6 1212.1 L1635.18 1212.1 L1635.77 1212.1 L1636.36 1212.1 L1636.94 1212.1 L1637.53 1212.1 L1638.12 1212.1 L1638.7 1212.1 L1639.29 1212.1 L1639.88 1212.1 L1640.46 1212.1 L1641.05 1212.1 L1641.63 1212.1 L1642.22 1212.1 L1642.81 1212.1 L1643.39 1212.1 L1643.98 1212.1 L1644.57 1212.1 L1645.15 1212.1 L1645.74 1212.1 L1646.33 1212.1 L1646.91 1212.1 L1647.5 1212.1 L1648.09 1212.1 L1648.67 1212.1 L1649.26 1212.1 L1649.84 1212.1 L1650.43 1212.1 L1651.02 1212.1 L1651.6 1212.1 L1652.19 1212.1 L1652.78 1212.1 L1653.36 1212.1 L1653.95 1212.1 L1654.54 1212.1 L1655.12 1212.1 L1655.71 1212.1 L1656.29 1212.1 L1656.88 1212.1 L1657.47 1212.1 L1658.05 1212.1 L1658.64 1212.1 L1659.23 1212.1 L1659.81 1212.1 L1660.4 1212.1 L1660.99 1212.1 L1661.57 1212.1 L1662.16 1212.1 L1662.75 1212.1 L1663.33 1212.1 L1663.92 1212.1 L1664.5 1212.1 L1665.09 1212.1 L1665.68 1212.1 L1666.26 1212.1 L1666.85 1212.1 L1667.44 1212.1 L1668.02 1212.1 L1668.61 1212.1 L1669.2 1212.1 L1669.78 1212.1 L1670.37 1212.1 L1670.96 1212.1 L1671.54 1212.1 L1672.13 1212.1 L1672.71 1212.1 L1673.3 1212.1 L1673.89 1212.1 L1674.47 1212.1 L1675.06 1212.1 L1675.65 1212.1 L1676.23 1212.1 L1676.82 1212.1 L1677.41 1212.1 L1677.99 1212.1 L1678.58 1212.1 L1679.17 1212.1 L1679.75 1212.1 L1680.34 1212.1 L1680.92 1212.1 L1681.51 1212.1 L1682.1 1212.1 L1682.68 1212.1 L1683.27 1212.1 L1683.86 1212.1 L1684.44 1212.1 L1685.03 1212.1 L1685.62 1212.1 L1686.2 1212.1 L1686.79 1212.1 L1687.37 1212.1 L1687.96 1212.1 L1688.55 1212.1 L1689.13 1212.1 L1689.72 1212.1 L1690.31 1212.1 L1690.89 1212.1 L1691.48 1212.1 L1692.07 1212.1 L1692.65 1212.1 L1693.24 1212.1 L1693.83 1212.1 L1694.41 1212.1 L1695 1212.1 L1695.58 1212.1 L1696.17 1212.1 L1696.76 1212.1 L1697.34 1212.1 L1697.93 1212.1 L1698.52 1212.1 L1699.1 1212.1 L1699.69 1212.1 L1700.28 1212.1 L1700.86 1212.1 L1701.45 1212.1 L1702.04 1212.1 L1702.62 1212.1 L1703.21 1212.1 L1703.79 1212.1 L1704.38 1212.1 L1704.97 1212.1 L1705.55 1212.1 L1706.14 1212.1 L1706.73 1212.1 L1707.31 1212.1 L1707.9 1212.1 L1708.49 1212.1 L1709.07 1212.1 L1709.66 1212.1 L1710.24 1212.1 L1710.83 1212.1 L1711.42 1212.1 L1712 1212.1 L1712.59 1212.1 L1713.18 1212.1 L1713.76 1212.1 L1714.35 1212.1 L1714.94 1212.1 L1715.52 1212.1 L1716.11 1212.1 L1716.7 1212.1 L1717.28 1212.1 L1717.87 1212.1 L1718.45 1212.1 L1719.04 1212.1 L1719.63 1212.1 L1720.21 1212.1 L1720.8 1212.1 L1721.39 1212.1 L1721.97 1212.1 L1722.56 1212.1 L1723.15 1212.1 L1723.73 1212.1 L1724.32 1212.1 L1724.91 1212.1 L1725.49 1212.1 L1726.08 1212.1 L1726.66 1212.1 L1727.25 1212.1 L1727.84 1212.1 L1728.42 1212.1 L1729.01 1212.1 L1729.6 1212.1 L1730.18 1212.1 L1730.77 1212.1 L1731.36 1212.1 L1731.94 1212.1 L1732.53 1212.1 L1733.11 1212.1 L1733.7 1212.1 L1734.29 1212.1 L1734.87 1212.1 L1735.46 1212.1 L1736.05 1212.1 L1736.63 1212.1 L1737.22 1212.1 L1737.81 1212.1 L1738.39 1212.1 L1738.98 1212.1 L1739.57 1212.1 L1740.15 1212.1 L1740.74 1212.1 L1741.32 1212.1 L1741.91 1212.1 L1742.5 1212.1 L1743.08 1212.1 L1743.67 1212.1 L1744.26 1212.1 L1744.84 1212.1 L1745.43 1212.1 L1746.02 1212.1 L1746.6 1212.1 L1747.19 1212.1 L1747.78 1212.1 L1748.36 1212.1 L1748.95 1212.1 L1749.53 1212.1 L1750.12 1212.1 L1750.71 1212.1 L1751.29 1212.1 L1751.88 1212.1 L1752.47 1212.1 L1753.05 1212.1 L1753.64 1212.1 L1754.23 1212.1 L1754.81 1212.1 L1755.4 1212.1 L1755.99 1212.1 L1756.57 1212.1 L1757.16 1212.1 L1757.74 1212.1 L1758.33 1212.1 L1758.92 1212.1 L1759.5 1212.1 L1760.09 1212.1 L1760.68 1212.1 L1761.26 1212.1 L1761.85 1212.1 L1762.44 1212.1 L1763.02 1212.1 L1763.61 1212.1 L1764.19 1212.1 L1764.78 1212.1 L1765.37 1212.1 L1765.95 1212.1 L1766.54 1212.1 L1767.13 1212.1 L1767.71 1212.1 L1768.3 1212.1 L1768.89 1212.1 L1769.47 1212.1 L1770.06 1212.1 L1770.65 1212.1 L1771.23 1212.1 L1771.82 1212.1 L1772.4 1212.1 L1772.99 1212.1 L1773.58 1212.1 L1774.16 1212.1 L1774.75 1212.1 L1775.34 1212.1 L1775.92 1212.1 L1776.51 1212.1 L1777.1 1212.1 L1777.68 1212.1 L1778.27 1212.1 L1778.86 1212.1 L1779.44 1212.1 L1780.03 1212.1 L1780.61 1212.1 L1781.2 1212.1 L1781.79 1212.1 L1782.37 1212.1 L1782.96 1212.1 L1783.55 1212.1 L1784.13 1212.1 L1784.72 1212.1 L1785.31 1212.1 L1785.89 1212.1 L1786.48 1212.1 L1787.06 1212.1 L1787.65 1212.1 L1788.24 1212.1 L1788.82 1212.1 L1789.41 1212.1 L1790 1212.1 L1790.58 1212.1 L1791.17 1212.1 L1791.76 1212.1 L1792.34 1212.1 L1792.93 1212.1 L1793.52 1212.1 L1794.1 1212.1 L1794.69 1212.1 L1795.27 1212.1 L1795.86 1212.1 L1796.45 1212.1 L1797.03 1212.1 L1797.62 1212.1 L1798.21 1212.1 L1798.79 1212.1 L1799.38 1212.1 L1799.97 1212.1 L1800.55 1212.1 L1801.14 1212.1 L1801.73 1212.1 L1802.31 1212.1 L1802.9 1212.1 L1803.48 1212.1 L1804.07 1212.1 L1804.66 1212.1 L1805.24 1212.1 L1805.83 1212.1 L1806.42 1212.1 L1807 1212.1 L1807.59 1212.1 L1808.18 1212.1 L1808.76 1212.1 L1809.35 1212.1 L1809.94 1212.1 L1810.52 1212.1 L1811.11 1212.1 L1811.69 1212.1 L1812.28 1212.1 L1812.87 1212.1 L1813.45 1212.1 L1814.04 1212.1 L1814.63 1212.1 L1815.21 1212.1 L1815.8 1212.1 L1816.39 1212.1 L1816.97 1212.1 L1817.56 1212.1 L1818.14 1212.1 L1818.73 1212.1 L1819.32 1212.1 L1819.9 1212.1 L1820.49 1212.1 L1821.08 1212.1 L1821.66 1212.1 L1822.25 1212.1 L1822.84 1212.1 L1823.42 1212.1 L1824.01 1212.1 L1824.6 1212.1 L1825.18 1212.1 L1825.77 1212.1 L1826.35 1212.1 L1826.94 1212.1 L1827.53 1212.1 L1828.11 1212.1 L1828.7 1212.1 L1829.29 1212.1 L1829.87 1212.1 L1830.46 1212.1 L1831.05 1212.1 L1831.63 1212.1 L1832.22 1212.1 L1832.81 1212.1 L1833.39 1212.1 L1833.98 1212.1 L1834.56 1212.1 L1835.15 1212.1 L1835.74 1212.1 L1836.32 1212.1 L1836.91 1212.1 L1837.5 1212.1 L1838.08 1212.1 L1838.67 1212.1 L1839.26 1212.1 L1839.84 1212.1 L1840.43 1212.1 L1841.01 1212.1 L1841.6 1212.1 L1842.19 1212.1 L1842.77 1212.1 L1843.36 1212.1 L1843.95 1212.1 L1844.53 1212.1 L1845.12 1212.1 L1845.71 1212.1 L1846.29 1212.1 L1846.88 1212.1 L1847.47 1212.1 L1848.05 1212.1 L1848.64 1212.1 L1849.22 1212.1 L1849.81 1212.1 L1850.4 1212.1 L1850.98 1212.1 L1851.57 1212.1 L1852.16 1212.1 L1852.74 1212.1 L1853.33 1212.1 L1853.92 1212.1 L1854.5 1212.1 L1855.09 1212.1 L1855.68 1212.1 L1856.26 1212.1 L1856.85 1212.1 L1857.43 1212.1 L1858.02 1212.1 L1858.61 1212.1 L1859.19 1212.1 L1859.78 1212.1 L1860.37 1212.1 L1860.95 1212.1 L1861.54 1212.1 L1862.13 1212.1 L1862.71 1212.1 L1863.3 1212.1 L1863.88 1212.1 L1864.47 1212.1 L1865.06 1212.1 L1865.64 1212.1 L1866.23 1212.1 L1866.82 1212.1 L1867.4 1212.1 L1867.99 1212.1 L1868.58 1212.1 L1869.16 1212.1 L1869.75 1212.1 L1870.34 1212.1 L1870.92 1212.1 L1871.51 1212.1 L1872.09 1212.1 L1872.68 1212.1 L1873.27 1212.1 L1873.85 1212.1 L1874.44 1212.1 L1875.03 1212.1 L1875.61 1212.1 L1876.2 1212.1 L1876.79 1212.1 L1877.37 1212.1 L1877.96 1212.1 L1878.55 1212.1 L1879.13 1212.1 L1879.72 1212.1 L1880.3 1212.1 L1880.89 1212.1 L1881.48 1212.1 L1882.06 1212.1 L1882.65 1212.1 L1883.24 1212.1 L1883.82 1212.1 L1884.41 1212.1 L1885 1212.1 L1885.58 1212.1 L1886.17 1212.1 L1886.76 1212.1 L1887.34 1212.1 L1887.93 1212.1 L1888.51 1212.1 L1889.1 1212.1 L1889.69 1212.1 L1890.27 1212.1 L1890.86 1212.1 L1891.45 1212.1 L1892.03 1212.1 L1892.62 1212.1 L1893.21 1212.1 L1893.79 1212.1 L1894.38 1212.1 L1894.96 1212.1 L1895.55 1212.1 L1896.14 1212.1 L1896.72 1212.1 L1897.31 1212.1 L1897.9 1212.1 L1898.48 1212.1 L1899.07 1212.1 L1899.66 1212.1 L1900.24 1212.1 L1900.83 1212.1 L1901.42 1212.1 L1902 1212.1 L1902.59 1212.1 L1903.17 1212.1 L1903.76 1212.1 L1904.35 1212.1 L1904.93 1212.1 L1905.52 1212.1 L1906.11 1212.1 L1906.69 1212.1 L1907.28 1212.1 L1907.87 1212.1 L1908.45 1212.1 L1909.04 1212.1 L1909.63 1212.1 L1910.21 1212.1 L1910.8 1212.1 L1911.38 1212.1 L1911.97 1212.1 L1912.56 1212.1 L1913.14 1212.1 L1913.73 1212.1 L1914.32 1212.1 L1914.9 1212.1 L1915.49 1212.1 L1916.08 1212.1 L1916.66 1212.1 L1917.25 1212.1 L1917.83 1212.1 L1918.42 1212.1 L1919.01 1212.1 L1919.59 1212.1 L1920.18 1212.1 L1920.77 1212.1 L1921.35 1212.1 L1921.94 1212.1 L1922.53 1212.1 L1923.11 1212.1 L1923.7 1212.1 L1924.29 1212.1 L1924.87 1212.1 L1925.46 1212.1 L1926.04 1212.1 L1926.63 1212.1 L1927.22 1212.1 L1927.8 1212.1 L1928.39 1212.1 L1928.98 1212.1 L1929.56 1212.1 L1930.15 1212.1 L1930.74 1212.1 L1931.32 1212.1 L1931.91 1212.1 L1932.5 1212.1 L1933.08 1212.1 L1933.67 1212.1 L1934.25 1212.1 L1934.84 1212.1 L1935.43 1212.1 L1936.01 1212.1 L1936.6 1212.1 L1937.19 1212.1 L1937.77 1212.1 L1938.36 1212.1 L1938.95 1212.1 L1939.53 1212.1 L1940.12 1212.1 L1940.71 1212.1 L1941.29 1212.1 L1941.88 1212.1 L1942.46 1212.1 L1943.05 1212.1 L1943.64 1212.1 L1944.22 1212.1 L1944.81 1212.1 L1945.4 1212.1 L1945.98 1212.1 L1946.57 1212.1 L1947.16 1212.1 L1947.74 1212.1 L1948.33 1212.1 L1948.91 1212.1 L1949.5 1212.1 L1950.09 1212.1 L1950.67 1212.1 L1951.26 1212.1 L1951.85 1212.1 L1952.43 1212.1 L1953.02 1212.1 L1953.61 1212.1 L1954.19 1212.1 L1954.78 1212.1 L1955.37 1212.1 L1955.95 1212.1 L1956.54 1212.1 L1957.12 1212.1 L1957.71 1212.1 L1958.3 1212.1 L1958.88 1212.1 L1959.47 1212.1 L1960.06 1212.1 L1960.64 1212.1 L1961.23 1212.1 L1961.82 1212.1 L1962.4 1212.1 L1962.99 1212.1 L1963.58 1212.1 L1964.16 1212.1 L1964.75 1212.1 L1965.33 1212.1 L1965.92 1212.1 L1966.51 1212.1 L1967.09 1212.1 L1967.68 1212.1 L1968.27 1212.1 L1968.85 1212.1 L1969.44 1212.1 L1970.03 1212.1 L1970.61 1212.1 L1971.2 1212.1 L1971.78 1212.1 L1972.37 1212.1 L1972.96 1212.1 L1973.54 1212.1 L1974.13 1212.1 L1974.72 1212.1 L1975.3 1212.1 L1975.89 1212.1 L1976.48 1212.1 L1977.06 1212.1 L1977.65 1212.1 L1978.24 1212.1 L1978.82 1212.1 L1979.41 1212.1 L1979.99 1212.1 L1980.58 1212.1 L1981.17 1212.1 L1981.75 1212.1 L1982.34 1212.1 L1982.93 1212.1 L1983.51 1212.1 L1984.1 1212.1 L1984.69 1212.1 L1985.27 1212.1 L1985.86 1212.1 L1986.45 1212.1 L1987.03 1212.1 L1987.62 1212.1 L1988.2 1212.1 L1988.79 1212.1 L1989.38 1212.1 L1989.96 1212.1 L1990.55 1212.1 L1991.14 1212.1 L1991.72 1212.1 L1992.31 1212.1 L1992.9 1212.1 L1993.48 1212.1 L1994.07 1212.1 L1994.65 1212.1 L1995.24 1212.1 L1995.83 1212.1 L1996.41 1212.1 L1997 1212.1 L1997.59 1212.1 L1998.17 1212.1 L1998.76 1212.1 L1999.35 1212.1 L1999.93 1212.1 L2000.52 1212.1 L2001.11 1212.1 L2001.69 1212.1 L2002.28 1212.1 L2002.86 1212.1 L2003.45 1212.1 L2004.04 1212.1 L2004.62 1212.1 L2005.21 1212.1 L2005.8 1212.1 L2006.38 1212.1 L2006.97 1212.1 L2007.56 1212.1 L2008.14 1212.1 L2008.73 1212.1 L2009.32 1212.1 L2009.9 1212.1 L2010.49 1212.1 L2011.07 1212.1 L2011.66 1212.1 L2012.25 1212.1 L2012.83 1212.1 L2013.42 1212.1 L2014.01 1212.1 L2014.59 1212.1 L2015.18 1212.1 L2015.77 1212.1 L2016.35 1212.1 L2016.94 1212.1 L2017.53 1212.1 L2018.11 1212.1 L2018.7 1212.1 L2019.28 1212.1 L2019.87 1212.1 L2020.46 1212.1 L2021.04 1212.1 L2021.63 1212.1 L2022.22 1212.1 L2022.8 1212.1 L2023.39 1212.1 L2023.98 1212.1 L2024.56 1212.1 L2025.15 1212.1 L2025.73 1212.1 L2026.32 1212.1 L2026.91 1212.1 L2027.49 1212.1 L2028.08 1212.1 L2028.67 1212.1 L2029.25 1212.1 L2029.84 1212.1 L2030.43 1212.1 L2031.01 1212.1 L2031.6 1212.1 L2032.19 1212.1 L2032.77 1212.1 L2033.36 1212.1 L2033.94 1212.1 L2034.53 1212.1 L2035.12 1212.1 L2035.7 1212.1 L2036.29 1212.1 L2036.88 1212.1 L2037.46 1212.1 L2038.05 1212.1 L2038.64 1212.1 L2039.22 1212.1 L2039.81 1212.1 L2040.4 1212.1 L2040.98 1212.1 L2041.57 1212.1 L2042.15 1212.1 L2042.74 1212.1 L2043.33 1212.1 L2043.91 1212.1 L2044.5 1212.1 L2045.09 1212.1 L2045.67 1212.1 L2046.26 1212.1 L2046.85 1212.1 L2047.43 1212.1 L2048.02 1212.1 L2048.6 1212.1 L2049.19 1212.1 L2049.78 1212.1 L2050.36 1212.1 L2050.95 1212.1 L2051.54 1212.1 L2052.12 1212.1 L2052.71 1212.1 L2053.3 1212.1 L2053.88 1212.1 L2054.47 1212.1 L2055.06 1212.1 L2055.64 1212.1 L2056.23 1212.1 L2056.81 1212.1 L2057.4 1212.1 L2057.99 1212.1 L2058.57 1212.1 L2059.16 1212.1 L2059.75 1212.1 L2060.33 1212.1 L2060.92 1212.1 L2061.51 1212.1 L2062.09 1212.1 L2062.68 1212.1 L2063.27 1212.1 L2063.85 1212.1 L2064.44 1212.1 L2065.02 1212.1 L2065.61 1212.1 L2066.2 1212.1 L2066.78 1212.1 L2067.37 1212.1 L2067.96 1212.1 L2068.54 1212.1 L2069.13 1212.1 L2069.72 1212.1 L2070.3 1212.1 L2070.89 1212.1 L2071.48 1212.1 L2072.06 1212.1 L2072.65 1212.1 L2073.23 1212.1 L2073.82 1212.1 L2074.41 1212.1 L2074.99 1212.1 L2075.58 1212.1 L2076.17 1212.1 L2076.75 1212.1 L2077.34 1212.1 L2077.93 1212.1 L2078.51 1212.1 L2079.1 1212.1 L2079.68 1212.1 L2080.27 1212.1 L2080.86 1212.1 L2081.44 1212.1 L2082.03 1212.1 L2082.62 1212.1 L2083.2 1212.1 L2083.79 1212.1 L2084.38 1212.1 L2084.96 1212.1 L2085.55 1212.1 L2086.14 1212.1 L2086.72 1212.1 L2087.31 1212.1 L2087.89 1212.1 L2088.48 1212.1 L2089.07 1212.1 L2089.65 1212.1 L2090.24 1212.1 L2090.83 1212.1 L2091.41 1212.1 L2092 1212.1 L2092.59 1212.1 L2093.17 1212.1 L2093.76 1212.1 L2094.35 1212.1 L2094.93 1212.1 L2095.52 1212.1 L2096.1 1212.1 L2096.69 1212.1 L2097.28 1212.1 L2097.86 1212.1 L2098.45 1212.1 L2099.04 1212.1 L2099.62 1212.1 L2100.21 1212.1 L2100.8 1212.1 L2101.38 1212.1 L2101.97 1212.1 L2102.55 1212.1 L2103.14 1212.1 L2103.73 1212.1 L2104.31 1212.1 L2104.9 1212.1 L2105.49 1212.1 L2106.07 1212.1 L2106.66 1212.1 L2107.25 1212.1 L2107.83 1212.1 L2108.42 1212.1 L2109.01 1212.1 L2109.59 1212.1 L2110.18 1212.1 L2110.76 1212.1 L2111.35 1212.1 L2111.94 1212.1 L2112.52 1212.1 L2113.11 1212.1 L2113.7 1212.1 L2114.28 1212.1 L2114.87 1212.1 L2115.46 1212.1 L2116.04 1212.1 L2116.63 1212.1 L2117.22 1212.1 L2117.8 1212.1 L2118.39 1212.1 L2118.97 1212.1 L2119.56 1212.1 L2120.15 1212.1 L2120.73 1212.1 L2121.32 1212.1 L2121.91 1212.1 L2122.49 1212.1 L2123.08 1212.1 L2123.67 1212.1 L2124.25 1212.1 L2124.84 1212.1 L2125.42 1212.1 L2126.01 1212.1 L2126.6 1212.1 L2127.18 1212.1 L2127.77 1212.1 L2128.36 1212.1 L2128.94 1212.1 L2129.53 1212.1 L2130.12 1212.1 L2130.7 1212.1 L2131.29 1212.1 L2131.88 1212.1 L2132.46 1212.1 L2133.05 1212.1 L2133.63 1212.1 L2134.22 1212.1 L2134.81 1212.1 L2135.39 1212.1 L2135.98 1212.1 L2136.57 1212.1 L2137.15 1212.1 L2137.74 1212.1 L2138.33 1212.1 L2138.91 1212.1 L2139.5 1212.1 L2140.09 1212.1 L2140.67 1212.1 L2141.26 1212.1 L2141.84 1212.1 L2142.43 1212.1 L2143.02 1212.1 L2143.6 1212.1 L2144.19 1212.1 L2144.78 1212.1 L2145.36 1212.1 L2145.95 1212.1 L2146.54 1212.1 L2147.12 1212.1 L2147.71 1212.1 L2148.3 1212.1 L2148.88 1212.1 L2149.47 1212.1 L2150.05 1212.1 L2150.64 1212.1 L2151.23 1212.1 L2151.81 1212.1 L2152.4 1212.1 L2152.99 1212.1 L2153.57 1212.1 L2154.16 1212.1 L2154.75 1212.1 L2155.33 1212.1 L2155.92 1212.1 L2156.5 1212.1 L2157.09 1212.1 L2157.68 1212.1 L2158.26 1212.1 L2158.26 1211.87 L2157.68 1211.87 L2157.09 1211.87 L2156.5 1211.87 L2155.92 1211.87 L2155.33 1211.87 L2154.75 1211.87 L2154.16 1211.87 L2153.57 1211.87 L2152.99 1211.87 L2152.4 1211.87 L2151.81 1211.87 L2151.23 1211.87 L2150.64 1211.87 L2150.05 1211.87 L2149.47 1211.87 L2148.88 1211.87 L2148.3 1211.87 L2147.71 1211.87 L2147.12 1211.87 L2146.54 1211.87 L2145.95 1211.87 L2145.36 1211.87 L2144.78 1211.87 L2144.19 1211.87 L2143.6 1211.87 L2143.02 1211.87 L2142.43 1211.87 L2141.84 1211.87 L2141.26 1211.87 L2140.67 1211.87 L2140.09 1211.87 L2139.5 1211.87 L2138.91 1211.87 L2138.33 1211.87 L2137.74 1211.87 L2137.15 1211.87 L2136.57 1211.87 L2135.98 1211.87 L2135.39 1211.87 L2134.81 1211.87 L2134.22 1211.87 L2133.63 1211.87 L2133.05 1211.87 L2132.46 1211.87 L2131.88 1211.87 L2131.29 1211.87 L2130.7 1211.87 L2130.12 1211.87 L2129.53 1211.87 L2128.94 1211.87 L2128.36 1211.87 L2127.77 1211.87 L2127.18 1211.87 L2126.6 1211.87 L2126.01 1211.87 L2125.42 1211.87 L2124.84 1211.87 L2124.25 1211.87 L2123.67 1211.87 L2123.08 1211.87 L2122.49 1211.87 L2121.91 1211.87 L2121.32 1211.87 L2120.73 1211.87 L2120.15 1211.87 L2119.56 1211.87 L2118.97 1211.87 L2118.39 1211.87 L2117.8 1211.87 L2117.22 1211.87 L2116.63 1211.87 L2116.04 1211.87 L2115.46 1211.87 L2114.87 1211.87 L2114.28 1211.87 L2113.7 1211.87 L2113.11 1211.87 L2112.52 1211.87 L2111.94 1211.87 L2111.35 1211.87 L2110.76 1211.87 L2110.18 1211.87 L2109.59 1211.87 L2109.01 1211.87 L2108.42 1211.87 L2107.83 1211.87 L2107.25 1211.87 L2106.66 1211.87 L2106.07 1211.87 L2105.49 1211.87 L2104.9 1211.87 L2104.31 1211.87 L2103.73 1211.87 L2103.14 1211.87 L2102.55 1211.87 L2101.97 1211.87 L2101.38 1211.87 L2100.8 1211.87 L2100.21 1211.87 L2099.62 1211.87 L2099.04 1211.87 L2098.45 1211.87 L2097.86 1211.87 L2097.28 1211.87 L2096.69 1211.87 L2096.1 1211.87 L2095.52 1211.87 L2094.93 1211.87 L2094.35 1211.87 L2093.76 1211.87 L2093.17 1211.87 L2092.59 1211.87 L2092 1211.87 L2091.41 1211.87 L2090.83 1211.87 L2090.24 1211.87 L2089.65 1211.87 L2089.07 1211.87 L2088.48 1211.87 L2087.89 1211.87 L2087.31 1211.87 L2086.72 1211.87 L2086.14 1211.87 L2085.55 1211.87 L2084.96 1211.87 L2084.38 1211.87 L2083.79 1211.87 L2083.2 1211.87 L2082.62 1211.87 L2082.03 1211.87 L2081.44 1211.87 L2080.86 1211.87 L2080.27 1211.87 L2079.68 1211.87 L2079.1 1211.87 L2078.51 1211.87 L2077.93 1211.87 L2077.34 1211.87 L2076.75 1211.87 L2076.17 1211.87 L2075.58 1211.87 L2074.99 1211.87 L2074.41 1211.87 L2073.82 1211.87 L2073.23 1211.87 L2072.65 1211.87 L2072.06 1211.87 L2071.48 1211.87 L2070.89 1211.87 L2070.3 1211.87 L2069.72 1211.87 L2069.13 1211.87 L2068.54 1211.87 L2067.96 1211.87 L2067.37 1211.87 L2066.78 1211.87 L2066.2 1211.87 L2065.61 1211.87 L2065.02 1211.87 L2064.44 1211.87 L2063.85 1211.87 L2063.27 1211.87 L2062.68 1211.87 L2062.09 1211.87 L2061.51 1211.87 L2060.92 1211.87 L2060.33 1211.87 L2059.75 1211.87 L2059.16 1211.87 L2058.57 1211.87 L2057.99 1211.87 L2057.4 1211.87 L2056.81 1211.87 L2056.23 1211.87 L2055.64 1211.87 L2055.06 1211.87 L2054.47 1211.87 L2053.88 1211.87 L2053.3 1211.87 L2052.71 1211.87 L2052.12 1211.87 L2051.54 1211.87 L2050.95 1211.87 L2050.36 1211.87 L2049.78 1211.87 L2049.19 1211.87 L2048.6 1211.87 L2048.02 1211.87 L2047.43 1211.87 L2046.85 1211.87 L2046.26 1211.87 L2045.67 1211.87 L2045.09 1211.87 L2044.5 1211.87 L2043.91 1211.87 L2043.33 1211.87 L2042.74 1211.87 L2042.15 1211.87 L2041.57 1211.87 L2040.98 1211.87 L2040.4 1211.87 L2039.81 1211.87 L2039.22 1211.87 L2038.64 1211.87 L2038.05 1211.87 L2037.46 1211.87 L2036.88 1211.87 L2036.29 1211.87 L2035.7 1211.87 L2035.12 1211.87 L2034.53 1211.87 L2033.94 1211.87 L2033.36 1211.87 L2032.77 1211.87 L2032.19 1211.87 L2031.6 1211.87 L2031.01 1211.87 L2030.43 1211.87 L2029.84 1211.87 L2029.25 1211.87 L2028.67 1211.87 L2028.08 1211.87 L2027.49 1211.87 L2026.91 1211.87 L2026.32 1211.87 L2025.73 1211.87 L2025.15 1211.87 L2024.56 1211.87 L2023.98 1211.87 L2023.39 1211.87 L2022.8 1211.87 L2022.22 1211.87 L2021.63 1211.87 L2021.04 1211.87 L2020.46 1211.87 L2019.87 1211.87 L2019.28 1211.87 L2018.7 1211.87 L2018.11 1211.87 L2017.53 1211.87 L2016.94 1211.87 L2016.35 1211.87 L2015.77 1211.87 L2015.18 1211.87 L2014.59 1211.87 L2014.01 1211.87 L2013.42 1211.87 L2012.83 1211.87 L2012.25 1211.87 L2011.66 1211.87 L2011.07 1211.87 L2010.49 1211.87 L2009.9 1211.87 L2009.32 1211.87 L2008.73 1211.87 L2008.14 1211.87 L2007.56 1211.87 L2006.97 1211.87 L2006.38 1211.87 L2005.8 1211.87 L2005.21 1211.87 L2004.62 1211.87 L2004.04 1211.87 L2003.45 1211.87 L2002.86 1211.87 L2002.28 1211.87 L2001.69 1211.87 L2001.11 1211.87 L2000.52 1211.87 L1999.93 1211.87 L1999.35 1211.87 L1998.76 1211.87 L1998.17 1211.87 L1997.59 1211.87 L1997 1211.87 L1996.41 1211.87 L1995.83 1211.87 L1995.24 1211.87 L1994.65 1211.87 L1994.07 1211.87 L1993.48 1211.87 L1992.9 1211.87 L1992.31 1211.87 L1991.72 1211.87 L1991.14 1211.87 L1990.55 1211.87 L1989.96 1211.87 L1989.38 1211.87 L1988.79 1211.87 L1988.2 1211.87 L1987.62 1211.87 L1987.03 1211.87 L1986.45 1211.87 L1985.86 1211.87 L1985.27 1211.87 L1984.69 1211.87 L1984.1 1211.87 L1983.51 1211.87 L1982.93 1211.87 L1982.34 1211.87 L1981.75 1211.87 L1981.17 1211.87 L1980.58 1211.87 L1979.99 1211.87 L1979.41 1211.87 L1978.82 1211.87 L1978.24 1211.87 L1977.65 1211.87 L1977.06 1211.87 L1976.48 1211.87 L1975.89 1211.87 L1975.3 1211.87 L1974.72 1211.87 L1974.13 1211.87 L1973.54 1211.87 L1972.96 1211.87 L1972.37 1211.87 L1971.78 1211.87 L1971.2 1211.87 L1970.61 1211.87 L1970.03 1211.87 L1969.44 1211.87 L1968.85 1211.87 L1968.27 1211.87 L1967.68 1211.87 L1967.09 1211.87 L1966.51 1211.87 L1965.92 1211.87 L1965.33 1211.87 L1964.75 1211.87 L1964.16 1211.87 L1963.58 1211.87 L1962.99 1211.87 L1962.4 1211.87 L1961.82 1211.87 L1961.23 1211.87 L1960.64 1211.87 L1960.06 1211.87 L1959.47 1211.87 L1958.88 1211.87 L1958.3 1211.87 L1957.71 1211.87 L1957.12 1211.87 L1956.54 1211.87 L1955.95 1211.87 L1955.37 1211.87 L1954.78 1211.87 L1954.19 1211.87 L1953.61 1211.87 L1953.02 1211.87 L1952.43 1211.87 L1951.85 1211.87 L1951.26 1211.87 L1950.67 1211.87 L1950.09 1211.87 L1949.5 1211.87 L1948.91 1211.87 L1948.33 1211.87 L1947.74 1211.87 L1947.16 1211.87 L1946.57 1211.87 L1945.98 1211.87 L1945.4 1211.87 L1944.81 1211.87 L1944.22 1211.87 L1943.64 1211.87 L1943.05 1211.87 L1942.46 1211.87 L1941.88 1211.87 L1941.29 1211.87 L1940.71 1211.87 L1940.12 1211.87 L1939.53 1211.87 L1938.95 1211.87 L1938.36 1211.87 L1937.77 1211.87 L1937.19 1211.87 L1936.6 1211.87 L1936.01 1211.87 L1935.43 1211.87 L1934.84 1211.87 L1934.25 1211.87 L1933.67 1211.87 L1933.08 1211.87 L1932.5 1211.87 L1931.91 1211.87 L1931.32 1211.87 L1930.74 1211.87 L1930.15 1211.87 L1929.56 1211.87 L1928.98 1211.87 L1928.39 1211.87 L1927.8 1211.87 L1927.22 1211.87 L1926.63 1211.87 L1926.04 1211.87 L1925.46 1211.87 L1924.87 1211.87 L1924.29 1211.87 L1923.7 1211.87 L1923.11 1211.87 L1922.53 1211.87 L1921.94 1211.87 L1921.35 1211.87 L1920.77 1211.87 L1920.18 1211.87 L1919.59 1211.87 L1919.01 1211.87 L1918.42 1211.87 L1917.83 1211.87 L1917.25 1211.87 L1916.66 1211.87 L1916.08 1211.87 L1915.49 1211.87 L1914.9 1211.87 L1914.32 1211.87 L1913.73 1211.87 L1913.14 1211.87 L1912.56 1211.87 L1911.97 1211.87 L1911.38 1211.87 L1910.8 1211.87 L1910.21 1211.87 L1909.63 1211.87 L1909.04 1211.87 L1908.45 1211.87 L1907.87 1211.87 L1907.28 1211.87 L1906.69 1211.87 L1906.11 1211.87 L1905.52 1211.87 L1904.93 1211.87 L1904.35 1211.87 L1903.76 1211.87 L1903.17 1211.87 L1902.59 1211.87 L1902 1211.87 L1901.42 1211.87 L1900.83 1211.87 L1900.24 1211.87 L1899.66 1211.87 L1899.07 1211.87 L1898.48 1211.87 L1897.9 1211.87 L1897.31 1211.87 L1896.72 1211.87 L1896.14 1211.87 L1895.55 1211.87 L1894.96 1211.87 L1894.38 1211.87 L1893.79 1211.87 L1893.21 1211.87 L1892.62 1211.87 L1892.03 1211.87 L1891.45 1211.87 L1890.86 1211.87 L1890.27 1211.87 L1889.69 1211.87 L1889.1 1211.87 L1888.51 1211.87 L1887.93 1211.87 L1887.34 1211.87 L1886.76 1211.87 L1886.17 1211.87 L1885.58 1211.87 L1885 1211.87 L1884.41 1211.87 L1883.82 1211.87 L1883.24 1211.87 L1882.65 1211.87 L1882.06 1211.87 L1881.48 1211.87 L1880.89 1211.87 L1880.3 1211.87 L1879.72 1211.87 L1879.13 1211.87 L1878.55 1211.87 L1877.96 1211.87 L1877.37 1211.87 L1876.79 1211.87 L1876.2 1211.87 L1875.61 1211.87 L1875.03 1211.87 L1874.44 1211.87 L1873.85 1211.87 L1873.27 1211.87 L1872.68 1211.87 L1872.09 1211.87 L1871.51 1211.87 L1870.92 1211.87 L1870.34 1211.87 L1869.75 1211.87 L1869.16 1211.87 L1868.58 1211.87 L1867.99 1211.87 L1867.4 1211.87 L1866.82 1211.87 L1866.23 1211.87 L1865.64 1211.87 L1865.06 1211.87 L1864.47 1211.87 L1863.88 1211.87 L1863.3 1211.87 L1862.71 1211.87 L1862.13 1211.87 L1861.54 1211.87 L1860.95 1211.87 L1860.37 1211.87 L1859.78 1211.87 L1859.19 1211.87 L1858.61 1211.87 L1858.02 1211.87 L1857.43 1211.87 L1856.85 1211.87 L1856.26 1211.87 L1855.68 1211.87 L1855.09 1211.87 L1854.5 1211.87 L1853.92 1211.87 L1853.33 1211.87 L1852.74 1211.87 L1852.16 1211.87 L1851.57 1211.87 L1850.98 1211.87 L1850.4 1211.87 L1849.81 1211.87 L1849.22 1211.87 L1848.64 1211.87 L1848.05 1211.87 L1847.47 1211.87 L1846.88 1211.87 L1846.29 1211.87 L1845.71 1211.87 L1845.12 1211.87 L1844.53 1211.87 L1843.95 1211.87 L1843.36 1211.87 L1842.77 1211.87 L1842.19 1211.87 L1841.6 1211.87 L1841.01 1211.87 L1840.43 1211.87 L1839.84 1211.87 L1839.26 1211.87 L1838.67 1211.87 L1838.08 1211.87 L1837.5 1211.87 L1836.91 1211.87 L1836.32 1211.87 L1835.74 1211.87 L1835.15 1211.87 L1834.56 1211.87 L1833.98 1211.87 L1833.39 1211.87 L1832.81 1211.87 L1832.22 1211.87 L1831.63 1211.87 L1831.05 1211.87 L1830.46 1211.87 L1829.87 1211.87 L1829.29 1211.87 L1828.7 1211.87 L1828.11 1211.87 L1827.53 1211.87 L1826.94 1211.87 L1826.35 1211.87 L1825.77 1211.87 L1825.18 1211.87 L1824.6 1211.87 L1824.01 1211.87 L1823.42 1211.87 L1822.84 1211.87 L1822.25 1211.87 L1821.66 1211.87 L1821.08 1211.87 L1820.49 1211.87 L1819.9 1211.87 L1819.32 1211.87 L1818.73 1211.87 L1818.14 1211.87 L1817.56 1211.87 L1816.97 1211.87 L1816.39 1211.87 L1815.8 1211.87 L1815.21 1211.87 L1814.63 1211.87 L1814.04 1211.87 L1813.45 1211.87 L1812.87 1211.87 L1812.28 1211.87 L1811.69 1211.87 L1811.11 1211.87 L1810.52 1211.87 L1809.94 1211.87 L1809.35 1211.87 L1808.76 1211.87 L1808.18 1211.87 L1807.59 1211.87 L1807 1211.87 L1806.42 1211.87 L1805.83 1211.87 L1805.24 1211.87 L1804.66 1211.87 L1804.07 1211.87 L1803.48 1211.87 L1802.9 1211.87 L1802.31 1211.87 L1801.73 1211.87 L1801.14 1211.87 L1800.55 1211.87 L1799.97 1211.87 L1799.38 1211.87 L1798.79 1211.87 L1798.21 1211.87 L1797.62 1211.87 L1797.03 1211.87 L1796.45 1211.87 L1795.86 1211.87 L1795.27 1211.87 L1794.69 1211.87 L1794.1 1211.87 L1793.52 1211.87 L1792.93 1211.87 L1792.34 1211.87 L1791.76 1211.87 L1791.17 1211.87 L1790.58 1211.87 L1790 1211.87 L1789.41 1211.87 L1788.82 1211.87 L1788.24 1211.87 L1787.65 1211.87 L1787.06 1211.87 L1786.48 1211.87 L1785.89 1211.87 L1785.31 1211.87 L1784.72 1211.87 L1784.13 1211.87 L1783.55 1211.87 L1782.96 1211.87 L1782.37 1211.87 L1781.79 1211.87 L1781.2 1211.87 L1780.61 1211.87 L1780.03 1211.87 L1779.44 1211.87 L1778.86 1211.87 L1778.27 1211.87 L1777.68 1211.87 L1777.1 1211.87 L1776.51 1211.87 L1775.92 1211.87 L1775.34 1211.87 L1774.75 1211.87 L1774.16 1211.87 L1773.58 1211.87 L1772.99 1211.87 L1772.4 1211.87 L1771.82 1211.87 L1771.23 1211.87 L1770.65 1211.87 L1770.06 1211.87 L1769.47 1211.87 L1768.89 1211.87 L1768.3 1211.87 L1767.71 1211.87 L1767.13 1211.87 L1766.54 1211.87 L1765.95 1211.87 L1765.37 1211.87 L1764.78 1211.87 L1764.19 1211.87 L1763.61 1211.87 L1763.02 1211.87 L1762.44 1211.87 L1761.85 1211.87 L1761.26 1211.87 L1760.68 1211.87 L1760.09 1211.87 L1759.5 1211.87 L1758.92 1211.87 L1758.33 1211.87 L1757.74 1211.87 L1757.16 1211.87 L1756.57 1211.87 L1755.99 1211.87 L1755.4 1211.87 L1754.81 1211.87 L1754.23 1211.87 L1753.64 1211.87 L1753.05 1211.87 L1752.47 1211.87 L1751.88 1211.87 L1751.29 1211.87 L1750.71 1211.87 L1750.12 1211.87 L1749.53 1211.87 L1748.95 1211.87 L1748.36 1211.87 L1747.78 1211.87 L1747.19 1211.87 L1746.6 1211.87 L1746.02 1211.87 L1745.43 1211.87 L1744.84 1211.87 L1744.26 1211.87 L1743.67 1211.87 L1743.08 1211.87 L1742.5 1211.87 L1741.91 1211.87 L1741.32 1211.87 L1740.74 1211.87 L1740.15 1211.87 L1739.57 1211.87 L1738.98 1211.87 L1738.39 1211.87 L1737.81 1211.87 L1737.22 1211.87 L1736.63 1211.87 L1736.05 1211.87 L1735.46 1211.87 L1734.87 1211.87 L1734.29 1211.87 L1733.7 1211.87 L1733.11 1211.87 L1732.53 1211.87 L1731.94 1211.87 L1731.36 1211.87 L1730.77 1211.87 L1730.18 1211.87 L1729.6 1211.87 L1729.01 1211.87 L1728.42 1211.87 L1727.84 1211.87 L1727.25 1211.87 L1726.66 1211.87 L1726.08 1211.87 L1725.49 1211.87 L1724.91 1211.87 L1724.32 1211.87 L1723.73 1211.87 L1723.15 1211.87 L1722.56 1211.87 L1721.97 1211.87 L1721.39 1211.87 L1720.8 1211.87 L1720.21 1211.87 L1719.63 1211.87 L1719.04 1211.87 L1718.45 1211.87 L1717.87 1211.87 L1717.28 1211.87 L1716.7 1211.87 L1716.11 1211.87 L1715.52 1211.87 L1714.94 1211.87 L1714.35 1211.87 L1713.76 1211.87 L1713.18 1211.87 L1712.59 1211.87 L1712 1211.87 L1711.42 1211.87 L1710.83 1211.87 L1710.24 1211.87 L1709.66 1211.87 L1709.07 1211.87 L1708.49 1211.87 L1707.9 1211.87 L1707.31 1211.87 L1706.73 1211.87 L1706.14 1211.87 L1705.55 1211.87 L1704.97 1211.87 L1704.38 1211.87 L1703.79 1211.87 L1703.21 1211.87 L1702.62 1211.87 L1702.04 1211.87 L1701.45 1211.87 L1700.86 1211.87 L1700.28 1211.87 L1699.69 1211.87 L1699.1 1211.87 L1698.52 1211.87 L1697.93 1211.87 L1697.34 1211.87 L1696.76 1211.87 L1696.17 1211.87 L1695.58 1211.87 L1695 1211.87 L1694.41 1211.87 L1693.83 1211.87 L1693.24 1211.87 L1692.65 1211.87 L1692.07 1211.87 L1691.48 1211.87 L1690.89 1211.87 L1690.31 1211.87 L1689.72 1211.87 L1689.13 1211.87 L1688.55 1211.87 L1687.96 1211.87 L1687.37 1211.87 L1686.79 1211.87 L1686.2 1211.87 L1685.62 1211.87 L1685.03 1211.87 L1684.44 1211.87 L1683.86 1211.87 L1683.27 1211.87 L1682.68 1211.87 L1682.1 1211.87 L1681.51 1211.87 L1680.92 1211.87 L1680.34 1211.87 L1679.75 1211.87 L1679.17 1211.87 L1678.58 1211.87 L1677.99 1211.87 L1677.41 1211.87 L1676.82 1211.87 L1676.23 1211.87 L1675.65 1211.87 L1675.06 1211.87 L1674.47 1211.87 L1673.89 1211.87 L1673.3 1211.87 L1672.71 1211.87 L1672.13 1211.87 L1671.54 1211.87 L1670.96 1211.87 L1670.37 1211.87 L1669.78 1211.87 L1669.2 1211.87 L1668.61 1211.87 L1668.02 1211.87 L1667.44 1211.87 L1666.85 1211.87 L1666.26 1211.87 L1665.68 1211.87 L1665.09 1211.87 L1664.5 1211.87 L1663.92 1211.87 L1663.33 1211.87 L1662.75 1211.87 L1662.16 1211.87 L1661.57 1211.87 L1660.99 1211.87 L1660.4 1211.87 L1659.81 1211.87 L1659.23 1211.87 L1658.64 1211.87 L1658.05 1211.87 L1657.47 1211.87 L1656.88 1211.87 L1656.29 1211.87 L1655.71 1211.87 L1655.12 1211.87 L1654.54 1211.87 L1653.95 1211.87 L1653.36 1211.87 L1652.78 1211.87 L1652.19 1211.87 L1651.6 1211.87 L1651.02 1211.87 L1650.43 1211.87 L1649.84 1211.87 L1649.26 1211.87 L1648.67 1211.87 L1648.09 1211.87 L1647.5 1211.87 L1646.91 1211.87 L1646.33 1211.87 L1645.74 1211.87 L1645.15 1211.87 L1644.57 1211.87 L1643.98 1211.87 L1643.39 1211.87 L1642.81 1211.87 L1642.22 1211.87 L1641.63 1211.87 L1641.05 1211.87 L1640.46 1211.87 L1639.88 1211.87 L1639.29 1211.87 L1638.7 1211.87 L1638.12 1211.87 L1637.53 1211.87 L1636.94 1211.87 L1636.36 1211.87 L1635.77 1211.87 L1635.18 1211.87 L1634.6 1211.87 L1634.01 1211.87 L1633.42 1211.87 L1632.84 1211.87 L1632.25 1211.87 L1631.67 1211.87 L1631.08 1211.87 L1630.49 1211.87 L1629.91 1211.87 L1629.32 1211.87 L1628.73 1211.87 L1628.15 1211.87 L1627.56 1211.87 L1626.97 1211.87 L1626.39 1211.87 L1625.8 1211.87 L1625.22 1211.87 L1624.63 1211.87 L1624.04 1211.87 L1623.46 1211.87 L1622.87 1211.87 L1622.28 1211.87 L1621.7 1211.87 L1621.11 1211.87 L1620.52 1211.87 L1619.94 1211.87 L1619.35 1211.87 L1618.76 1211.87 L1618.18 1211.87 L1617.59 1211.87 L1617.01 1211.87 L1616.42 1211.87 L1615.83 1211.87 L1615.25 1211.87 L1614.66 1211.87 L1614.07 1211.87 L1613.49 1211.87 L1612.9 1211.87 L1612.31 1211.87 L1611.73 1211.87 L1611.14 1211.87 L1610.55 1211.87 L1609.97 1211.87 L1609.38 1211.87 L1608.8 1211.87 L1608.21 1211.87 L1607.62 1211.87 L1607.04 1211.87 L1606.45 1211.87 L1605.86 1211.87 L1605.28 1211.87 L1604.69 1211.87 L1604.1 1211.87 L1603.52 1211.87 L1602.93 1211.87 L1602.34 1211.87 L1601.76 1211.87 L1601.17 1211.87 L1600.59 1211.87 L1600 1211.87 L1599.41 1211.87 L1598.83 1211.87 L1598.24 1211.87 L1597.65 1211.87 L1597.07 1211.87 L1596.48 1211.87 L1595.89 1211.87 L1595.31 1211.87 L1594.72 1211.87 L1594.14 1211.87 L1593.55 1211.87 L1592.96 1211.87 L1592.38 1211.87 L1591.79 1211.87 L1591.2 1211.87 L1590.62 1211.87 L1590.03 1211.87 L1589.44 1211.87 L1588.86 1211.87 L1588.27 1211.87 L1587.68 1211.87 L1587.1 1211.87 L1586.51 1211.87 L1585.93 1211.87 L1585.34 1211.87 L1584.75 1211.87 L1584.17 1211.87 L1583.58 1211.87 L1582.99 1211.87 L1582.41 1211.87 L1581.82 1211.87 L1581.23 1211.87 L1580.65 1211.87 L1580.06 1211.87 L1579.47 1211.87 L1578.89 1211.87 L1578.3 1211.87 L1577.72 1211.87 L1577.13 1211.87 L1576.54 1211.87 L1575.96 1211.87 L1575.37 1211.87 L1574.78 1211.87 L1574.2 1211.87 L1573.61 1211.87 L1573.02 1211.87 L1572.44 1211.87 L1571.85 1211.87 L1571.27 1211.87 L1570.68 1211.87 L1570.09 1211.87 L1569.51 1211.87 L1568.92 1211.87 L1568.33 1211.87 L1567.75 1211.87 L1567.16 1211.87 L1566.57 1211.87 L1565.99 1211.87 L1565.4 1211.87 L1564.81 1211.87 L1564.23 1211.87 L1563.64 1211.87 L1563.06 1211.87 L1562.47 1211.87 L1561.88 1211.87 L1561.3 1211.87 L1560.71 1211.87 L1560.12 1211.87 L1559.54 1211.87 L1558.95 1211.87 L1558.36 1211.87 L1557.78 1211.87 L1557.19 1211.87 L1556.6 1211.87 L1556.02 1211.87 L1555.43 1211.87 L1554.85 1211.87 L1554.26 1211.87 L1553.67 1211.87 L1553.09 1211.87 L1552.5 1211.87 L1551.91 1211.87 L1551.33 1211.87 L1550.74 1211.87 L1550.15 1211.87 L1549.57 1211.87 L1548.98 1211.87 L1548.4 1211.87 L1547.81 1211.87 L1547.22 1211.87 L1546.64 1211.87 L1546.05 1211.87 L1545.46 1211.87 L1544.88 1211.87 L1544.29 1211.87 L1543.7 1211.87 L1543.12 1211.87 L1542.53 1211.87 L1541.94 1211.87 L1541.36 1211.87 L1540.77 1211.87 L1540.19 1211.87 L1539.6 1211.87 L1539.01 1211.87 L1538.43 1211.87 L1537.84 1211.87 L1537.25 1211.87 L1536.67 1211.87 L1536.08 1211.87 L1535.49 1211.87 L1534.91 1211.87 L1534.32 1211.87 L1533.73 1211.87 L1533.15 1211.87 L1532.56 1211.87 L1531.98 1211.87 L1531.39 1211.87 L1530.8 1211.87 L1530.22 1211.87 L1529.63 1211.87 L1529.04 1211.87 L1528.46 1211.87 L1527.87 1211.87 L1527.28 1211.87 L1526.7 1211.87 L1526.11 1211.87 L1525.52 1211.87 L1524.94 1211.87 L1524.35 1211.87 L1523.77 1211.87 L1523.18 1211.87 L1522.59 1211.87 L1522.01 1211.87 L1521.42 1211.87 L1520.83 1211.87 L1520.25 1211.87 L1519.66 1211.87 L1519.07 1211.87 L1518.49 1211.87 L1517.9 1211.87 L1517.32 1211.87 L1516.73 1211.87 L1516.14 1211.87 L1515.56 1211.87 L1514.97 1211.87 L1514.38 1211.87 L1513.8 1211.87 L1513.21 1211.87 L1512.62 1211.87 L1512.04 1211.87 L1511.45 1211.87 L1510.86 1211.87 L1510.28 1211.87 L1509.69 1211.87 L1509.11 1211.87 L1508.52 1211.87 L1507.93 1211.87 L1507.35 1211.87 L1506.76 1211.87 L1506.17 1211.87 L1505.59 1211.87 L1505 1211.87 L1504.41 1211.87 L1503.83 1211.87 L1503.24 1211.87 L1502.65 1211.87 L1502.07 1211.87 L1501.48 1211.87 L1500.9 1211.87 L1500.31 1211.87 L1499.72 1211.87 L1499.14 1211.87 L1498.55 1211.87 L1497.96 1211.87 L1497.38 1211.87 L1496.79 1211.87 L1496.2 1211.87 L1495.62 1211.87 L1495.03 1211.87 L1494.45 1211.87 L1493.86 1211.87 L1493.27 1211.87 L1492.69 1211.87 L1492.1 1211.87 L1491.51 1211.87 L1490.93 1211.87 L1490.34 1211.87 L1489.75 1211.87 L1489.17 1211.87 L1488.58 1211.87 L1487.99 1211.87 L1487.41 1211.87 L1486.82 1211.87 L1486.24 1211.87 L1485.65 1211.87 L1485.06 1211.87 L1484.48 1211.87 L1483.89 1211.87 L1483.3 1211.87 L1482.72 1211.87 L1482.13 1211.87 L1481.54 1211.87 L1480.96 1211.87 L1480.37 1211.87 L1479.78 1211.87 L1479.2 1211.87 L1478.61 1211.87 L1478.03 1211.87 L1477.44 1211.87 L1476.85 1211.87 L1476.27 1211.87 L1475.68 1211.87 L1475.09 1211.87 L1474.51 1211.87 L1473.92 1211.87 L1473.33 1211.87 L1472.75 1211.87 L1472.16 1211.87 L1471.57 1211.87 L1470.99 1211.87 L1470.4 1211.87 L1469.82 1211.87 L1469.23 1211.87 L1468.64 1211.87 L1468.06 1211.87 L1467.47 1211.87 L1466.88 1211.87 L1466.3 1211.87 L1465.71 1211.87 L1465.12 1211.87 L1464.54 1211.87 L1463.95 1211.87 L1463.37 1211.87 L1462.78 1211.87 L1462.19 1211.87 L1461.61 1211.87 L1461.02 1211.87 L1460.43 1211.87 L1459.85 1211.87 L1459.26 1211.87 L1458.67 1211.87 L1458.09 1211.87 L1457.5 1211.87 L1456.91 1211.87 L1456.33 1211.87 L1455.74 1211.87 L1455.16 1211.87 L1454.57 1211.87 L1453.98 1211.87 L1453.4 1211.87 L1452.81 1211.87 L1452.22 1211.87 L1451.64 1211.87 L1451.05 1211.87 L1450.46 1211.87 L1449.88 1211.87 L1449.29 1211.87 L1448.7 1211.87 L1448.12 1211.87 L1447.53 1211.87 L1446.95 1211.87 L1446.36 1211.87 L1445.77 1211.87 L1445.19 1211.87 L1444.6 1211.87 L1444.01 1211.87 L1443.43 1211.87 L1442.84 1211.87 L1442.25 1211.87 L1441.67 1211.87 L1441.08 1211.87 L1440.5 1211.87 L1439.91 1211.87 L1439.32 1211.87 L1438.74 1211.87 L1438.15 1211.87 L1437.56 1211.87 L1436.98 1211.87 L1436.39 1211.87 L1435.8 1211.87 L1435.22 1211.87 L1434.63 1211.87 L1434.04 1211.87 L1433.46 1211.87 L1432.87 1211.87 L1432.29 1211.87 L1431.7 1211.87 L1431.11 1211.87 L1430.53 1211.87 L1429.94 1211.87 L1429.35 1211.87 L1428.77 1211.87 L1428.18 1211.87 L1427.59 1211.87 L1427.01 1211.87 L1426.42 1211.87 L1425.83 1211.87 L1425.25 1211.87 L1424.66 1211.87 L1424.08 1211.87 L1423.49 1211.87 L1422.9 1211.87 L1422.32 1211.87 L1421.73 1211.87 L1421.14 1211.87 L1420.56 1211.87 L1419.97 1211.87 L1419.38 1211.87 L1418.8 1211.87 L1418.21 1211.87 L1417.63 1211.87 L1417.04 1211.87 L1416.45 1211.87 L1415.87 1211.87 L1415.28 1211.87 L1414.69 1211.87 L1414.11 1211.87 L1413.52 1211.87 L1412.93 1211.87 L1412.35 1211.87 L1411.76 1211.87 L1411.17 1211.87 L1410.59 1211.87 L1410 1211.87 L1409.42 1211.87 L1408.83 1211.87 L1408.24 1211.87 L1407.66 1211.87 L1407.07 1211.87 L1406.48 1211.87 L1405.9 1211.87 L1405.31 1211.87 L1404.72 1211.87 L1404.14 1211.87 L1403.55 1211.87 L1402.96 1211.87 L1402.38 1211.87 L1401.79 1211.87 L1401.21 1211.87 L1400.62 1211.87 L1400.03 1211.87 L1399.45 1211.87 L1398.86 1211.87 L1398.27 1211.87 L1397.69 1211.87 L1397.1 1211.87 L1396.51 1211.87 L1395.93 1211.87 L1395.34 1211.87 L1394.75 1211.87 L1394.17 1211.87 L1393.58 1211.87 L1393 1211.87 L1392.41 1211.87 L1391.82 1211.87 L1391.24 1211.87 L1390.65 1211.87 L1390.06 1211.87 L1389.48 1211.87 L1388.89 1211.87 L1388.3 1211.87 L1387.72 1211.87 L1387.13 1211.87 L1386.55 1211.87 L1385.96 1211.87 L1385.37 1211.87 L1384.79 1211.87 L1384.2 1211.87 L1383.61 1211.87 L1383.03 1211.87 L1382.44 1211.87 L1381.85 1211.87 L1381.27 1211.87 L1380.68 1211.87 L1380.09 1211.87 L1379.51 1211.87 L1378.92 1211.87 L1378.34 1211.87 L1377.75 1211.87 L1377.16 1211.87 L1376.58 1211.87 L1375.99 1211.87 L1375.4 1211.87 L1374.82 1211.87 L1374.23 1211.87 L1373.64 1211.87 L1373.06 1211.87 L1372.47 1211.87 L1371.88 1211.87 L1371.3 1211.87 L1370.71 1211.87 L1370.13 1211.87 L1369.54 1211.87 L1368.95 1211.87 L1368.37 1211.87 L1367.78 1211.87 L1367.19 1211.87 L1366.61 1211.87 L1366.02 1211.87 L1365.43 1211.87 L1364.85 1211.87 L1364.26 1211.87 L1363.68 1211.87 L1363.09 1211.87 L1362.5 1211.87 L1361.92 1211.87 L1361.33 1211.87 L1360.74 1211.87 L1360.16 1211.87 L1359.57 1211.87 L1358.98 1211.87 L1358.4 1211.87 L1357.81 1211.87 L1357.22 1211.87 L1356.64 1211.87 L1356.05 1211.87 L1355.47 1211.87 L1354.88 1211.87 L1354.29 1211.87 L1353.71 1211.87 L1353.12 1211.87 L1352.53 1211.87 L1351.95 1211.87 L1351.36 1211.87 L1350.77 1211.87 L1350.19 1211.87 L1349.6 1211.87 L1349.01 1211.87 L1348.43 1211.87 L1347.84 1211.87 L1347.26 1211.87 L1346.67 1211.87 L1346.08 1211.87 L1345.5 1211.87 L1344.91 1211.87 L1344.32 1211.87 L1343.74 1211.87 L1343.15 1211.87 L1342.56 1211.87 L1341.98 1211.87 L1341.39 1211.87 L1340.8 1211.87 L1340.22 1211.87 L1339.63 1211.87 L1339.05 1211.87 L1338.46 1211.87 L1337.87 1211.87 L1337.29 1211.87 L1336.7 1211.87 L1336.11 1211.87 L1335.53 1211.87 L1334.94 1211.87 L1334.35 1211.87 L1333.77 1211.87 L1333.18 1211.87 L1332.6 1211.87 L1332.01 1211.87 L1331.42 1211.87 L1330.84 1211.87 L1330.25 1211.87 L1329.66 1211.87 L1329.08 1211.87 L1328.49 1211.87 L1327.9 1211.87 L1327.32 1211.87 L1326.73 1211.87 L1326.14 1211.87 L1325.56 1211.87 L1324.97 1211.87 L1324.39 1211.87 L1323.8 1211.87 L1323.21 1211.87 L1322.63 1211.87 L1322.04 1211.87 L1321.45 1211.87 L1320.87 1211.87 L1320.28 1211.87 L1319.69 1211.87 L1319.11 1211.87 L1318.52 1211.87 L1317.93 1211.87 L1317.35 1211.87 L1316.76 1211.87 L1316.18 1211.87 L1315.59 1211.87 L1315 1211.87 L1314.42 1211.87 L1313.83 1211.87 L1313.24 1211.87 L1312.66 1211.87 L1312.07 1211.87 L1311.48 1211.87 L1310.9 1211.87 L1310.31 1211.87 L1309.73 1211.87 L1309.14 1211.87 L1308.55 1211.87 L1307.97 1211.87 L1307.38 1211.87 L1306.79 1211.87 L1306.21 1211.87 L1305.62 1211.87 L1305.03 1211.87 L1304.45 1211.87 L1303.86 1211.87 L1303.27 1211.87 L1302.69 1211.87 L1302.1 1211.87 L1301.52 1211.87 L1300.93 1211.87 L1300.34 1211.87 L1299.76 1211.87 L1299.17 1211.87 L1298.58 1211.87 L1298 1211.87 L1297.41 1211.87 L1296.82 1211.87 L1296.24 1211.87 L1295.65 1211.87 L1295.06 1211.87 L1294.48 1211.87 L1293.89 1211.87 L1293.31 1211.87 L1292.72 1211.87 L1292.13 1211.87 L1291.55 1211.87 L1290.96 1211.87 L1290.37 1211.87 L1289.79 1211.87 L1289.2 1211.87 L1288.61 1211.87 L1288.03 1211.87 L1287.44 1211.87 L1286.86 1211.87 L1286.27 1211.87 L1285.68 1211.87 L1285.1 1211.87 L1284.51 1211.87 L1283.92 1211.87 L1283.34 1211.87 L1282.75 1211.87 L1282.16 1211.87 L1281.58 1211.87 L1280.99 1211.87 L1280.4 1211.87 L1279.82 1211.87 L1279.23 1211.87 L1278.65 1211.87 L1278.06 1211.87 L1277.47 1211.87 L1276.89 1211.87 L1276.3 1211.87 L1275.71 1211.87 L1275.13 1211.87 L1274.54 1211.87 L1273.95 1211.87 L1273.37 1211.87 L1272.78 1211.87 L1272.19 1211.87 L1271.61 1211.87 L1271.02 1211.87 L1270.44 1211.87 L1269.85 1211.87 L1269.26 1211.87 L1268.68 1211.87 L1268.09 1211.87 L1267.5 1211.87 L1266.92 1211.87 L1266.33 1211.87 L1265.74 1211.87 L1265.16 1211.87 L1264.57 1211.87 L1263.98 1211.87 L1263.4 1211.87 L1262.81 1211.87 L1262.23 1211.87 L1261.64 1211.87 L1261.05 1211.87 L1260.47 1211.87 L1259.88 1211.87 L1259.29 1211.87 L1258.71 1211.87 L1258.12 1211.87 L1257.53 1211.87 L1256.95 1211.87 L1256.36 1211.87 L1255.78 1211.87 L1255.19 1211.87 L1254.6 1211.87 L1254.02 1211.87 L1253.43 1211.87 L1252.84 1211.87 L1252.26 1211.87 L1251.67 1211.87 L1251.08 1211.87 L1250.5 1211.87 L1249.91 1211.87 L1249.32 1211.87 L1248.74 1211.87 L1248.15 1211.87 L1247.57 1211.87 L1246.98 1211.87 L1246.39 1211.87 L1245.81 1211.87 L1245.22 1211.87 L1244.63 1211.87 L1244.05 1211.87 L1243.46 1211.87 L1242.87 1211.87 L1242.29 1211.87 L1241.7 1211.87 L1241.11 1211.87 L1240.53 1211.87 L1239.94 1211.87 L1239.36 1211.87 L1238.77 1211.87 L1238.18 1211.87 L1237.6 1211.87 L1237.01 1211.87 L1236.42 1211.87 L1235.84 1211.87 L1235.25 1211.87 L1234.66 1211.87 L1234.08 1211.87 L1233.49 1211.87 L1232.91 1211.87 L1232.32 1211.87 L1231.73 1211.87 L1231.15 1211.87 L1230.56 1211.87 L1229.97 1211.87 L1229.39 1211.87 L1228.8 1211.87 L1228.21 1211.87 L1227.63 1211.87 L1227.04 1211.87 L1226.45 1211.87 L1225.87 1211.87 L1225.28 1211.87 L1224.7 1211.87 L1224.11 1211.87 L1223.52 1211.87 L1222.94 1211.87 L1222.35 1211.87 L1221.76 1211.87 L1221.18 1211.87 L1220.59 1211.87 L1220 1211.87 L1219.42 1211.87 L1218.83 1211.87 L1218.24 1211.87 L1217.66 1211.87 L1217.07 1211.87 L1216.49 1211.87 L1215.9 1211.87 L1215.31 1211.87 L1214.73 1211.87 L1214.14 1211.87 L1213.55 1211.87 L1212.97 1211.87 L1212.38 1211.87 L1211.79 1211.87 L1211.21 1211.87 L1210.62 1211.87 L1210.03 1211.87 L1209.45 1211.87 L1208.86 1211.87 L1208.28 1211.87 L1207.69 1211.87 L1207.1 1211.87 L1206.52 1211.87 L1205.93 1211.87 L1205.34 1211.87 L1204.76 1211.87 L1204.17 1211.87 L1203.58 1211.87 L1203 1211.87 L1202.41 1211.87 L1201.83 1211.87 L1201.24 1211.87 L1200.65 1211.87 L1200.07 1211.87 L1199.48 1211.87 L1198.89 1211.87 L1198.31 1211.87 L1197.72 1211.87 L1197.13 1211.87 L1196.55 1211.87 L1195.96 1211.87 L1195.37 1211.87 L1194.79 1211.87 L1194.2 1211.87 L1193.62 1211.87 L1193.03 1211.87 L1192.44 1211.87 L1191.86 1211.87 L1191.27 1211.87 L1190.68 1211.87 L1190.1 1211.87 L1189.51 1211.87 L1188.92 1211.87 L1188.34 1211.87 L1187.75 1211.87 L1187.16 1211.87 L1186.58 1211.87 L1185.99 1211.87 L1185.41 1211.87 L1184.82 1211.87 L1184.23 1211.87 L1183.65 1211.87 L1183.06 1211.87 L1182.47 1211.87 L1181.89 1211.87 L1181.3 1211.87 L1180.71 1211.87 L1180.13 1211.87 L1179.54 1211.87 L1178.96 1211.87 L1178.37 1211.87 L1177.78 1211.87 L1177.2 1211.87 L1176.61 1211.87 L1176.02 1211.87 L1175.44 1211.87 L1174.85 1211.87 L1174.26 1211.87 L1173.68 1211.87 L1173.09 1211.87 L1172.5 1211.87 L1171.92 1211.87 L1171.33 1211.87 L1170.75 1211.87 L1170.16 1211.87 L1169.57 1211.87 L1168.99 1211.87 L1168.4 1211.87 L1167.81 1211.87 L1167.23 1211.87 L1166.64 1211.87 L1166.05 1211.87 L1165.47 1211.87 L1164.88 1211.87 L1164.29 1211.87 L1163.71 1211.87 L1163.12 1211.87 L1162.54 1211.87 L1161.95 1211.87 L1161.36 1211.87 L1160.78 1211.87 L1160.19 1211.87 L1159.6 1211.87 L1159.02 1211.87 L1158.43 1211.87 L1157.84 1211.87 L1157.26 1211.87 L1156.67 1211.87 L1156.09 1211.87 L1155.5 1211.87 L1154.91 1211.87 L1154.33 1211.87 L1153.74 1211.87 L1153.15 1211.87 L1152.57 1211.87 L1151.98 1211.87 L1151.39 1211.87 L1150.81 1211.87 L1150.22 1211.87 L1149.63 1211.87 L1149.05 1211.87 L1148.46 1211.87 L1147.88 1211.87 L1147.29 1211.87 L1146.7 1211.87 L1146.12 1211.87 L1145.53 1211.87 L1144.94 1211.87 L1144.36 1211.87 L1143.77 1211.87 L1143.18 1211.87 L1142.6 1211.87 L1142.01 1211.87 L1141.42 1211.87 L1140.84 1211.87 L1140.25 1211.87 L1139.67 1211.87 L1139.08 1211.87 L1138.49 1211.87 L1137.91 1211.87 L1137.32 1211.87 L1136.73 1211.87 L1136.15 1211.87 L1135.56 1211.87 L1134.97 1211.87 L1134.39 1211.87 L1133.8 1211.87 L1133.21 1211.87 L1132.63 1211.87 L1132.04 1211.87 L1131.46 1211.87 L1130.87 1211.87 L1130.28 1211.87 L1129.7 1211.87 L1129.11 1211.87 L1128.52 1211.87 L1127.94 1211.87 L1127.35 1211.87 L1126.76 1211.87 L1126.18 1211.87 L1125.59 1211.87 L1125.01 1211.87 L1124.42 1211.87 L1123.83 1211.87 L1123.25 1211.87 L1122.66 1211.87 L1122.07 1211.87 L1121.49 1211.87 L1120.9 1211.87 L1120.31 1211.87 L1119.73 1211.87 L1119.14 1211.87 L1118.55 1211.87 L1117.97 1211.87 L1117.38 1211.87 L1116.8 1211.87 L1116.21 1211.87 L1115.62 1211.87 L1115.04 1211.87 L1114.45 1211.87 L1113.86 1211.87 L1113.28 1211.87 L1112.69 1211.87 L1112.1 1211.87 L1111.52 1211.87 L1110.93 1211.87 L1110.34 1211.87 L1109.76 1211.87 L1109.17 1211.87 L1108.59 1211.87 L1108 1211.87 L1107.41 1211.87 L1106.83 1211.87 L1106.24 1211.87 L1105.65 1211.87 L1105.07 1211.87 L1104.48 1211.87 L1103.89 1211.87 L1103.31 1211.87 L1102.72 1211.87 L1102.14 1211.87 L1101.55 1211.87 L1100.96 1211.87 L1100.38 1211.87 L1099.79 1211.87 L1099.2 1211.87 L1098.62 1211.87 L1098.03 1211.87 L1097.44 1211.87 L1096.86 1211.87 L1096.27 1211.87 L1095.68 1211.87 L1095.1 1211.87 L1094.51 1211.87 L1093.93 1211.87 L1093.34 1211.87 L1092.75 1211.87 L1092.17 1211.87 L1091.58 1211.87 L1090.99 1211.87 L1090.41 1211.87 L1089.82 1211.87 L1089.23 1211.87 L1088.65 1211.87 L1088.06 1211.87 L1087.47 1211.87 L1086.89 1211.87 L1086.3 1211.87 L1085.72 1211.87 L1085.13 1211.87 L1084.54 1211.87 L1083.96 1211.87 L1083.37 1211.87 L1082.78 1211.87 L1082.2 1211.87 L1081.61 1211.87 L1081.02 1211.87 L1080.44 1211.87 L1079.85 1211.87 L1079.26 1211.87 L1078.68 1211.87 L1078.09 1211.87 L1077.51 1211.87 L1076.92 1211.87 L1076.33 1211.87 L1075.75 1211.87 L1075.16 1211.87 L1074.57 1211.87 L1073.99 1211.87 L1073.4 1211.87 L1072.81 1211.87 L1072.23 1211.87 L1071.64 1211.87 L1071.06 1211.87 L1070.47 1211.87 L1069.88 1211.87 L1069.3 1211.87 L1068.71 1211.87 L1068.12 1211.87 L1067.54 1211.87 L1066.95 1211.87 L1066.36 1211.87 L1065.78 1211.87 L1065.19 1211.87 L1064.6 1211.87 L1064.02 1211.87 L1063.43 1211.87 L1062.85 1211.87 L1062.26 1211.87 L1061.67 1211.87 L1061.09 1211.87 L1060.5 1211.87 L1059.91 1211.87 L1059.33 1211.87 L1058.74 1211.87 L1058.15 1211.87 L1057.57 1211.87 L1056.98 1211.87 L1056.39 1211.87 L1055.81 1211.87 L1055.22 1211.87 L1054.64 1211.87 L1054.05 1211.87 L1053.46 1211.87 L1052.88 1211.87 L1052.29 1211.87 L1051.7 1211.87 L1051.12 1211.87 L1050.53 1211.87 L1049.94 1211.87 L1049.36 1211.87 L1048.77 1211.87 L1048.19 1211.87 L1047.6 1211.87 L1047.01 1211.87 L1046.43 1211.87 L1045.84 1211.87 L1045.25 1211.87 L1044.67 1211.87 L1044.08 1211.87 L1043.49 1211.87 L1042.91 1211.87 L1042.32 1211.87 L1041.73 1211.87 L1041.15 1211.87 L1040.56 1211.87 L1039.98 1211.87 L1039.39 1211.87 L1038.8 1211.87 L1038.22 1211.87 L1037.63 1211.87 L1037.04 1211.87 L1036.46 1211.87 L1035.87 1211.87 L1035.28 1211.87 L1034.7 1211.87 L1034.11 1211.87 L1033.52 1211.87 L1032.94 1211.87 L1032.35 1211.87 L1031.77 1211.87 L1031.18 1211.87 L1030.59 1211.87 L1030.01 1211.87 L1029.42 1211.87 L1028.83 1211.87 L1028.25 1211.87 L1027.66 1211.87 L1027.07 1211.87 L1026.49 1211.87 L1025.9 1211.87 L1025.32 1211.87 L1024.73 1211.87 L1024.14 1211.87 L1023.56 1211.87 L1022.97 1211.87 L1022.38 1211.87 L1021.8 1211.87 L1021.21 1211.87 L1020.62 1211.87 L1020.04 1211.87 L1019.45 1211.87 L1018.86 1211.87 L1018.28 1211.87 L1017.69 1211.87 L1017.11 1211.87 L1016.52 1211.87 L1015.93 1211.87 L1015.35 1211.87 L1014.76 1211.87 L1014.17 1211.87 L1013.59 1211.87 L1013 1211.87 L1012.41 1211.87 L1011.83 1211.87 L1011.24 1211.87 L1010.65 1211.87 L1010.07 1211.87 L1009.48 1211.87 L1008.9 1211.87 L1008.31 1211.87 L1007.72 1211.87 L1007.14 1211.87 L1006.55 1211.87 L1005.96 1211.87 L1005.38 1211.87 L1004.79 1211.87 L1004.2 1211.87 L1003.62 1211.87 L1003.03 1211.87 L1002.44 1211.87 L1001.86 1211.87 L1001.27 1211.87 L1000.69 1211.87 L1000.1 1211.87 L999.513 1211.87 L998.926 1211.87 L998.34 1211.87 L997.754 1211.87 L997.167 1211.87 L996.581 1211.87 L995.994 1211.87 L995.408 1211.87 L994.822 1211.87 L994.235 1211.87 L993.649 1211.87 L993.062 1211.87 L992.476 1211.87 L991.889 1211.87 L991.303 1211.87 L990.717 1211.87 L990.13 1211.87 L989.544 1211.87 L988.957 1211.87 L988.371 1211.87 L987.785 1211.87 L987.198 1211.87 L986.612 1211.87 L986.025 1211.87  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.98 986.612,1211.98 987.198,1211.98 987.785,1211.98 988.371,1211.98 988.957,1211.98 989.544,1211.98 990.13,1211.98 990.717,1211.98 991.303,1211.98 991.889,1211.98 992.476,1211.98 993.062,1211.98 993.649,1211.98 994.235,1211.98 994.822,1211.98 995.408,1211.98 995.994,1211.98 996.581,1211.98 997.167,1211.98 997.754,1211.98 998.34,1211.98 998.926,1211.98 999.513,1211.98 1000.1,1211.98 1000.69,1211.98 1001.27,1211.98 1001.86,1211.98 1002.44,1211.98 1003.03,1211.98 1003.62,1211.98 1004.2,1211.98 1004.79,1211.98 1005.38,1211.98 1005.96,1211.98 1006.55,1211.98 1007.14,1211.98 1007.72,1211.98 1008.31,1211.98 1008.9,1211.98 1009.48,1211.98 1010.07,1211.98 1010.65,1211.98 1011.24,1211.98 1011.83,1211.98 1012.41,1211.98 1013,1211.98 1013.59,1211.98 1014.17,1211.98 1014.76,1211.98 1015.35,1211.98 1015.93,1211.98 1016.52,1211.98 1017.11,1211.98 1017.69,1211.98 1018.28,1211.98 1018.86,1211.98 1019.45,1211.98 1020.04,1211.98 1020.62,1211.98 1021.21,1211.98 1021.8,1211.98 1022.38,1211.98 1022.97,1211.98 1023.56,1211.98 1024.14,1211.98 1024.73,1211.98 1025.32,1211.98 1025.9,1211.98 1026.49,1211.98 1027.07,1211.98 1027.66,1211.98 1028.25,1211.98 1028.83,1211.98 1029.42,1211.98 1030.01,1211.98 1030.59,1211.98 1031.18,1211.98 1031.77,1211.98 1032.35,1211.98 1032.94,1211.98 1033.52,1211.98 1034.11,1211.98 1034.7,1211.98 1035.28,1211.98 1035.87,1211.98 1036.46,1211.98 1037.04,1211.98 1037.63,1211.98 1038.22,1211.98 1038.8,1211.98 1039.39,1211.98 1039.98,1211.98 1040.56,1211.98 1041.15,1211.98 1041.73,1211.98 1042.32,1211.98 1042.91,1211.98 1043.49,1211.98 1044.08,1211.98 1044.67,1211.98 1045.25,1211.98 1045.84,1211.98 1046.43,1211.98 1047.01,1211.98 1047.6,1211.98 1048.19,1211.98 1048.77,1211.98 1049.36,1211.98 1049.94,1211.98 1050.53,1211.98 1051.12,1211.98 1051.7,1211.98 1052.29,1211.98 1052.88,1211.98 1053.46,1211.98 1054.05,1211.98 1054.64,1211.98 1055.22,1211.98 1055.81,1211.98 1056.39,1211.98 1056.98,1211.98 1057.57,1211.98 1058.15,1211.98 1058.74,1211.98 1059.33,1211.98 1059.91,1211.98 1060.5,1211.98 1061.09,1211.98 1061.67,1211.98 1062.26,1211.98 1062.85,1211.98 1063.43,1211.98 1064.02,1211.98 1064.6,1211.98 1065.19,1211.98 1065.78,1211.98 1066.36,1211.98 1066.95,1211.98 1067.54,1211.98 1068.12,1211.98 1068.71,1211.98 1069.3,1211.98 1069.88,1211.98 1070.47,1211.98 1071.06,1211.98 1071.64,1211.98 1072.23,1211.98 1072.81,1211.98 1073.4,1211.98 1073.99,1211.98 1074.57,1211.98 1075.16,1211.98 1075.75,1211.98 1076.33,1211.98 1076.92,1211.98 1077.51,1211.98 1078.09,1211.98 1078.68,1211.98 1079.26,1211.98 1079.85,1211.98 1080.44,1211.98 1081.02,1211.98 1081.61,1211.98 1082.2,1211.98 1082.78,1211.98 1083.37,1211.98 1083.96,1211.98 1084.54,1211.98 1085.13,1211.98 1085.72,1211.98 1086.3,1211.98 1086.89,1211.98 1087.47,1211.98 1088.06,1211.98 1088.65,1211.98 1089.23,1211.98 1089.82,1211.98 1090.41,1211.98 1090.99,1211.98 1091.58,1211.98 1092.17,1211.98 1092.75,1211.98 1093.34,1211.98 1093.93,1211.98 1094.51,1211.98 1095.1,1211.98 1095.68,1211.98 1096.27,1211.98 1096.86,1211.98 1097.44,1211.98 1098.03,1211.98 1098.62,1211.98 1099.2,1211.98 1099.79,1211.98 1100.38,1211.98 1100.96,1211.98 1101.55,1211.98 1102.14,1211.98 1102.72,1211.98 1103.31,1211.98 1103.89,1211.98 1104.48,1211.98 1105.07,1211.98 1105.65,1211.98 1106.24,1211.98 1106.83,1211.98 1107.41,1211.98 1108,1211.98 1108.59,1211.98 1109.17,1211.98 1109.76,1211.98 1110.34,1211.98 1110.93,1211.98 1111.52,1211.98 1112.1,1211.98 1112.69,1211.98 1113.28,1211.98 1113.86,1211.98 1114.45,1211.98 1115.04,1211.98 1115.62,1211.98 1116.21,1211.98 1116.8,1211.98 1117.38,1211.98 1117.97,1211.98 1118.55,1211.98 1119.14,1211.98 1119.73,1211.98 1120.31,1211.98 1120.9,1211.98 1121.49,1211.98 1122.07,1211.98 1122.66,1211.98 1123.25,1211.98 1123.83,1211.98 1124.42,1211.98 1125.01,1211.98 1125.59,1211.98 1126.18,1211.98 1126.76,1211.98 1127.35,1211.98 1127.94,1211.98 1128.52,1211.98 1129.11,1211.98 1129.7,1211.98 1130.28,1211.98 1130.87,1211.98 1131.46,1211.98 1132.04,1211.98 1132.63,1211.98 1133.21,1211.98 1133.8,1211.98 1134.39,1211.98 1134.97,1211.98 1135.56,1211.98 1136.15,1211.98 1136.73,1211.98 1137.32,1211.98 1137.91,1211.98 1138.49,1211.98 1139.08,1211.98 1139.67,1211.98 1140.25,1211.98 1140.84,1211.98 1141.42,1211.98 1142.01,1211.98 1142.6,1211.98 1143.18,1211.98 1143.77,1211.98 1144.36,1211.98 1144.94,1211.98 1145.53,1211.98 1146.12,1211.98 1146.7,1211.98 1147.29,1211.98 1147.88,1211.98 1148.46,1211.98 1149.05,1211.98 1149.63,1211.98 1150.22,1211.98 1150.81,1211.98 1151.39,1211.98 1151.98,1211.98 1152.57,1211.98 1153.15,1211.98 1153.74,1211.98 1154.33,1211.98 1154.91,1211.98 1155.5,1211.98 1156.09,1211.98 1156.67,1211.98 1157.26,1211.98 1157.84,1211.98 1158.43,1211.98 1159.02,1211.98 1159.6,1211.98 1160.19,1211.98 1160.78,1211.98 1161.36,1211.98 1161.95,1211.98 1162.54,1211.98 1163.12,1211.98 1163.71,1211.98 1164.29,1211.98 1164.88,1211.98 1165.47,1211.98 1166.05,1211.98 1166.64,1211.98 1167.23,1211.98 1167.81,1211.98 1168.4,1211.98 1168.99,1211.98 1169.57,1211.98 1170.16,1211.98 1170.75,1211.98 1171.33,1211.98 1171.92,1211.98 1172.5,1211.98 1173.09,1211.98 1173.68,1211.98 1174.26,1211.98 1174.85,1211.98 1175.44,1211.98 1176.02,1211.98 1176.61,1211.98 1177.2,1211.98 1177.78,1211.98 1178.37,1211.98 1178.96,1211.98 1179.54,1211.98 1180.13,1211.98 1180.71,1211.98 1181.3,1211.98 1181.89,1211.98 1182.47,1211.98 1183.06,1211.98 1183.65,1211.98 1184.23,1211.98 1184.82,1211.98 1185.41,1211.98 1185.99,1211.98 1186.58,1211.98 1187.16,1211.98 1187.75,1211.98 1188.34,1211.98 1188.92,1211.98 1189.51,1211.98 1190.1,1211.98 1190.68,1211.98 1191.27,1211.98 1191.86,1211.98 1192.44,1211.98 1193.03,1211.98 1193.62,1211.98 1194.2,1211.98 1194.79,1211.98 1195.37,1211.98 1195.96,1211.98 1196.55,1211.98 1197.13,1211.98 1197.72,1211.98 1198.31,1211.98 1198.89,1211.98 1199.48,1211.98 1200.07,1211.98 1200.65,1211.98 1201.24,1211.98 1201.83,1211.98 1202.41,1211.98 1203,1211.98 1203.58,1211.98 1204.17,1211.98 1204.76,1211.98 1205.34,1211.98 1205.93,1211.98 1206.52,1211.98 1207.1,1211.98 1207.69,1211.98 1208.28,1211.98 1208.86,1211.98 1209.45,1211.98 1210.03,1211.98 1210.62,1211.98 1211.21,1211.98 1211.79,1211.98 1212.38,1211.98 1212.97,1211.98 1213.55,1211.98 1214.14,1211.98 1214.73,1211.98 1215.31,1211.98 1215.9,1211.98 1216.49,1211.98 1217.07,1211.98 1217.66,1211.98 1218.24,1211.98 1218.83,1211.98 1219.42,1211.98 1220,1211.98 1220.59,1211.98 1221.18,1211.98 1221.76,1211.98 1222.35,1211.98 1222.94,1211.98 1223.52,1211.98 1224.11,1211.98 1224.7,1211.98 1225.28,1211.98 1225.87,1211.98 1226.45,1211.98 1227.04,1211.98 1227.63,1211.98 1228.21,1211.98 1228.8,1211.98 1229.39,1211.98 1229.97,1211.98 1230.56,1211.98 1231.15,1211.98 1231.73,1211.98 1232.32,1211.98 1232.91,1211.98 1233.49,1211.98 1234.08,1211.98 1234.66,1211.98 1235.25,1211.98 1235.84,1211.98 1236.42,1211.98 1237.01,1211.98 1237.6,1211.98 1238.18,1211.98 1238.77,1211.98 1239.36,1211.98 1239.94,1211.98 1240.53,1211.98 1241.11,1211.98 1241.7,1211.98 1242.29,1211.98 1242.87,1211.98 1243.46,1211.98 1244.05,1211.98 1244.63,1211.98 1245.22,1211.98 1245.81,1211.98 1246.39,1211.98 1246.98,1211.98 1247.57,1211.98 1248.15,1211.98 1248.74,1211.98 1249.32,1211.98 1249.91,1211.98 1250.5,1211.98 1251.08,1211.98 1251.67,1211.98 1252.26,1211.98 1252.84,1211.98 1253.43,1211.98 1254.02,1211.98 1254.6,1211.98 1255.19,1211.98 1255.78,1211.98 1256.36,1211.98 1256.95,1211.98 1257.53,1211.98 1258.12,1211.98 1258.71,1211.98 1259.29,1211.98 1259.88,1211.98 1260.47,1211.98 1261.05,1211.98 1261.64,1211.98 1262.23,1211.98 1262.81,1211.98 1263.4,1211.98 1263.98,1211.98 1264.57,1211.98 1265.16,1211.98 1265.74,1211.98 1266.33,1211.98 1266.92,1211.98 1267.5,1211.98 1268.09,1211.98 1268.68,1211.98 1269.26,1211.98 1269.85,1211.98 1270.44,1211.98 1271.02,1211.98 1271.61,1211.98 1272.19,1211.98 1272.78,1211.98 1273.37,1211.98 1273.95,1211.98 1274.54,1211.98 1275.13,1211.98 1275.71,1211.98 1276.3,1211.98 1276.89,1211.98 1277.47,1211.98 1278.06,1211.98 1278.65,1211.98 1279.23,1211.98 1279.82,1211.98 1280.4,1211.98 1280.99,1211.98 1281.58,1211.98 1282.16,1211.98 1282.75,1211.98 1283.34,1211.98 1283.92,1211.98 1284.51,1211.98 1285.1,1211.98 1285.68,1211.98 1286.27,1211.98 1286.86,1211.98 1287.44,1211.98 1288.03,1211.98 1288.61,1211.98 1289.2,1211.98 1289.79,1211.98 1290.37,1211.98 1290.96,1211.98 1291.55,1211.98 1292.13,1211.98 1292.72,1211.98 1293.31,1211.98 1293.89,1211.98 1294.48,1211.98 1295.06,1211.98 1295.65,1211.98 1296.24,1211.98 1296.82,1211.98 1297.41,1211.98 1298,1211.98 1298.58,1211.98 1299.17,1211.98 1299.76,1211.98 1300.34,1211.98 1300.93,1211.98 1301.52,1211.98 1302.1,1211.98 1302.69,1211.98 1303.27,1211.98 1303.86,1211.98 1304.45,1211.98 1305.03,1211.98 1305.62,1211.98 1306.21,1211.98 1306.79,1211.98 1307.38,1211.98 1307.97,1211.98 1308.55,1211.98 1309.14,1211.98 1309.73,1211.98 1310.31,1211.98 1310.9,1211.98 1311.48,1211.98 1312.07,1211.98 1312.66,1211.98 1313.24,1211.98 1313.83,1211.98 1314.42,1211.98 1315,1211.98 1315.59,1211.98 1316.18,1211.98 1316.76,1211.98 1317.35,1211.98 1317.93,1211.98 1318.52,1211.98 1319.11,1211.98 1319.69,1211.98 1320.28,1211.98 1320.87,1211.98 1321.45,1211.98 1322.04,1211.98 1322.63,1211.98 1323.21,1211.98 1323.8,1211.98 1324.39,1211.98 1324.97,1211.98 1325.56,1211.98 1326.14,1211.98 1326.73,1211.98 1327.32,1211.98 1327.9,1211.98 1328.49,1211.98 1329.08,1211.98 1329.66,1211.98 1330.25,1211.98 1330.84,1211.98 1331.42,1211.98 1332.01,1211.98 1332.6,1211.98 1333.18,1211.98 1333.77,1211.98 1334.35,1211.98 1334.94,1211.98 1335.53,1211.98 1336.11,1211.98 1336.7,1211.98 1337.29,1211.98 1337.87,1211.98 1338.46,1211.98 1339.05,1211.98 1339.63,1211.98 1340.22,1211.98 1340.8,1211.98 1341.39,1211.98 1341.98,1211.98 1342.56,1211.98 1343.15,1211.98 1343.74,1211.98 1344.32,1211.98 1344.91,1211.98 1345.5,1211.98 1346.08,1211.98 1346.67,1211.98 1347.26,1211.98 1347.84,1211.98 1348.43,1211.98 1349.01,1211.98 1349.6,1211.98 1350.19,1211.98 1350.77,1211.98 1351.36,1211.98 1351.95,1211.98 1352.53,1211.98 1353.12,1211.98 1353.71,1211.98 1354.29,1211.98 1354.88,1211.98 1355.47,1211.98 1356.05,1211.98 1356.64,1211.98 1357.22,1211.98 1357.81,1211.98 1358.4,1211.98 1358.98,1211.98 1359.57,1211.98 1360.16,1211.98 1360.74,1211.98 1361.33,1211.98 1361.92,1211.98 1362.5,1211.98 1363.09,1211.98 1363.68,1211.98 1364.26,1211.98 1364.85,1211.98 1365.43,1211.98 1366.02,1211.98 1366.61,1211.98 1367.19,1211.98 1367.78,1211.98 1368.37,1211.98 1368.95,1211.98 1369.54,1211.98 1370.13,1211.98 1370.71,1211.98 1371.3,1211.98 1371.88,1211.98 1372.47,1211.98 1373.06,1211.98 1373.64,1211.98 1374.23,1211.98 1374.82,1211.98 1375.4,1211.98 1375.99,1211.98 1376.58,1211.98 1377.16,1211.98 1377.75,1211.98 1378.34,1211.98 1378.92,1211.98 1379.51,1211.98 1380.09,1211.98 1380.68,1211.98 1381.27,1211.98 1381.85,1211.98 1382.44,1211.98 1383.03,1211.98 1383.61,1211.98 1384.2,1211.98 1384.79,1211.98 1385.37,1211.98 1385.96,1211.98 1386.55,1211.98 1387.13,1211.98 1387.72,1211.98 1388.3,1211.98 1388.89,1211.98 1389.48,1211.98 1390.06,1211.98 1390.65,1211.98 1391.24,1211.98 1391.82,1211.98 1392.41,1211.98 1393,1211.98 1393.58,1211.98 1394.17,1211.98 1394.75,1211.98 1395.34,1211.98 1395.93,1211.98 1396.51,1211.98 1397.1,1211.98 1397.69,1211.98 1398.27,1211.98 1398.86,1211.98 1399.45,1211.98 1400.03,1211.98 1400.62,1211.98 1401.21,1211.98 1401.79,1211.98 1402.38,1211.98 1402.96,1211.98 1403.55,1211.98 1404.14,1211.98 1404.72,1211.98 1405.31,1211.98 1405.9,1211.98 1406.48,1211.98 1407.07,1211.98 1407.66,1211.98 1408.24,1211.98 1408.83,1211.98 1409.42,1211.98 1410,1211.98 1410.59,1211.98 1411.17,1211.98 1411.76,1211.98 1412.35,1211.98 1412.93,1211.98 1413.52,1211.98 1414.11,1211.98 1414.69,1211.98 1415.28,1211.98 1415.87,1211.98 1416.45,1211.98 1417.04,1211.98 1417.63,1211.98 1418.21,1211.98 1418.8,1211.98 1419.38,1211.98 1419.97,1211.98 1420.56,1211.98 1421.14,1211.98 1421.73,1211.98 1422.32,1211.98 1422.9,1211.98 1423.49,1211.98 1424.08,1211.98 1424.66,1211.98 1425.25,1211.98 1425.83,1211.98 1426.42,1211.98 1427.01,1211.98 1427.59,1211.98 1428.18,1211.98 1428.77,1211.98 1429.35,1211.98 1429.94,1211.98 1430.53,1211.98 1431.11,1211.98 1431.7,1211.98 1432.29,1211.98 1432.87,1211.98 1433.46,1211.98 1434.04,1211.98 1434.63,1211.98 1435.22,1211.98 1435.8,1211.98 1436.39,1211.98 1436.98,1211.98 1437.56,1211.98 1438.15,1211.98 1438.74,1211.98 1439.32,1211.98 1439.91,1211.98 1440.5,1211.98 1441.08,1211.98 1441.67,1211.98 1442.25,1211.98 1442.84,1211.98 1443.43,1211.98 1444.01,1211.98 1444.6,1211.98 1445.19,1211.98 1445.77,1211.98 1446.36,1211.98 1446.95,1211.98 1447.53,1211.98 1448.12,1211.98 1448.7,1211.98 1449.29,1211.98 1449.88,1211.98 1450.46,1211.98 1451.05,1211.98 1451.64,1211.98 1452.22,1211.98 1452.81,1211.98 1453.4,1211.98 1453.98,1211.98 1454.57,1211.98 1455.16,1211.98 1455.74,1211.98 1456.33,1211.98 1456.91,1211.98 1457.5,1211.98 1458.09,1211.98 1458.67,1211.98 1459.26,1211.98 1459.85,1211.98 1460.43,1211.98 1461.02,1211.98 1461.61,1211.98 1462.19,1211.98 1462.78,1211.98 1463.37,1211.98 1463.95,1211.98 1464.54,1211.98 1465.12,1211.98 1465.71,1211.98 1466.3,1211.98 1466.88,1211.98 1467.47,1211.98 1468.06,1211.98 1468.64,1211.98 1469.23,1211.98 1469.82,1211.98 1470.4,1211.98 1470.99,1211.98 1471.57,1211.98 1472.16,1211.98 1472.75,1211.98 1473.33,1211.98 1473.92,1211.98 1474.51,1211.98 1475.09,1211.98 1475.68,1211.98 1476.27,1211.98 1476.85,1211.98 1477.44,1211.98 1478.03,1211.98 1478.61,1211.98 1479.2,1211.98 1479.78,1211.98 1480.37,1211.98 1480.96,1211.98 1481.54,1211.98 1482.13,1211.98 1482.72,1211.98 1483.3,1211.98 1483.89,1211.98 1484.48,1211.98 1485.06,1211.98 1485.65,1211.98 1486.24,1211.98 1486.82,1211.98 1487.41,1211.98 1487.99,1211.98 1488.58,1211.98 1489.17,1211.98 1489.75,1211.98 1490.34,1211.98 1490.93,1211.98 1491.51,1211.98 1492.1,1211.98 1492.69,1211.98 1493.27,1211.98 1493.86,1211.98 1494.45,1211.98 1495.03,1211.98 1495.62,1211.98 1496.2,1211.98 1496.79,1211.98 1497.38,1211.98 1497.96,1211.98 1498.55,1211.98 1499.14,1211.98 1499.72,1211.98 1500.31,1211.98 1500.9,1211.98 1501.48,1211.98 1502.07,1211.98 1502.65,1211.98 1503.24,1211.98 1503.83,1211.98 1504.41,1211.98 1505,1211.98 1505.59,1211.98 1506.17,1211.98 1506.76,1211.98 1507.35,1211.98 1507.93,1211.98 1508.52,1211.98 1509.11,1211.98 1509.69,1211.98 1510.28,1211.98 1510.86,1211.98 1511.45,1211.98 1512.04,1211.98 1512.62,1211.98 1513.21,1211.98 1513.8,1211.98 1514.38,1211.98 1514.97,1211.98 1515.56,1211.98 1516.14,1211.98 1516.73,1211.98 1517.32,1211.98 1517.9,1211.98 1518.49,1211.98 1519.07,1211.98 1519.66,1211.98 1520.25,1211.98 1520.83,1211.98 1521.42,1211.98 1522.01,1211.98 1522.59,1211.98 1523.18,1211.98 1523.77,1211.98 1524.35,1211.98 1524.94,1211.98 1525.52,1211.98 1526.11,1211.98 1526.7,1211.98 1527.28,1211.98 1527.87,1211.98 1528.46,1211.98 1529.04,1211.98 1529.63,1211.98 1530.22,1211.98 1530.8,1211.98 1531.39,1211.98 1531.98,1211.98 1532.56,1211.98 1533.15,1211.98 1533.73,1211.98 1534.32,1211.98 1534.91,1211.98 1535.49,1211.98 1536.08,1211.98 1536.67,1211.98 1537.25,1211.98 1537.84,1211.98 1538.43,1211.98 1539.01,1211.98 1539.6,1211.98 1540.19,1211.98 1540.77,1211.98 1541.36,1211.98 1541.94,1211.98 1542.53,1211.98 1543.12,1211.98 1543.7,1211.98 1544.29,1211.98 1544.88,1211.98 1545.46,1211.98 1546.05,1211.98 1546.64,1211.98 1547.22,1211.98 1547.81,1211.98 1548.4,1211.98 1548.98,1211.98 1549.57,1211.98 1550.15,1211.98 1550.74,1211.98 1551.33,1211.98 1551.91,1211.98 1552.5,1211.98 1553.09,1211.98 1553.67,1211.98 1554.26,1211.98 1554.85,1211.98 1555.43,1211.98 1556.02,1211.98 1556.6,1211.98 1557.19,1211.98 1557.78,1211.98 1558.36,1211.98 1558.95,1211.98 1559.54,1211.98 1560.12,1211.98 1560.71,1211.98 1561.3,1211.98 1561.88,1211.98 1562.47,1211.98 1563.06,1211.98 1563.64,1211.98 1564.23,1211.98 1564.81,1211.98 1565.4,1211.98 1565.99,1211.98 1566.57,1211.98 1567.16,1211.98 1567.75,1211.98 1568.33,1211.98 1568.92,1211.98 1569.51,1211.98 1570.09,1211.98 1570.68,1211.98 1571.27,1211.98 1571.85,1211.98 1572.44,1211.98 1573.02,1211.98 1573.61,1211.98 1574.2,1211.98 1574.78,1211.98 1575.37,1211.98 1575.96,1211.98 1576.54,1211.98 1577.13,1211.98 1577.72,1211.98 1578.3,1211.98 1578.89,1211.98 1579.47,1211.98 1580.06,1211.98 1580.65,1211.98 1581.23,1211.98 1581.82,1211.98 1582.41,1211.98 1582.99,1211.98 1583.58,1211.98 1584.17,1211.98 1584.75,1211.98 1585.34,1211.98 1585.93,1211.98 1586.51,1211.98 1587.1,1211.98 1587.68,1211.98 1588.27,1211.98 1588.86,1211.98 1589.44,1211.98 1590.03,1211.98 1590.62,1211.98 1591.2,1211.98 1591.79,1211.98 1592.38,1211.98 1592.96,1211.98 1593.55,1211.98 1594.14,1211.98 1594.72,1211.98 1595.31,1211.98 1595.89,1211.98 1596.48,1211.98 1597.07,1211.98 1597.65,1211.98 1598.24,1211.98 1598.83,1211.98 1599.41,1211.98 1600,1211.98 1600.59,1211.98 1601.17,1211.98 1601.76,1211.98 1602.34,1211.98 1602.93,1211.98 1603.52,1211.98 1604.1,1211.98 1604.69,1211.98 1605.28,1211.98 1605.86,1211.98 1606.45,1211.98 1607.04,1211.98 1607.62,1211.98 1608.21,1211.98 1608.8,1211.98 1609.38,1211.98 1609.97,1211.98 1610.55,1211.98 1611.14,1211.98 1611.73,1211.98 1612.31,1211.98 1612.9,1211.98 1613.49,1211.98 1614.07,1211.98 1614.66,1211.98 1615.25,1211.98 1615.83,1211.98 1616.42,1211.98 1617.01,1211.98 1617.59,1211.98 1618.18,1211.98 1618.76,1211.98 1619.35,1211.98 1619.94,1211.98 1620.52,1211.98 1621.11,1211.98 1621.7,1211.98 1622.28,1211.98 1622.87,1211.98 1623.46,1211.98 1624.04,1211.98 1624.63,1211.98 1625.22,1211.98 1625.8,1211.98 1626.39,1211.98 1626.97,1211.98 1627.56,1211.98 1628.15,1211.98 1628.73,1211.98 1629.32,1211.98 1629.91,1211.98 1630.49,1211.98 1631.08,1211.98 1631.67,1211.98 1632.25,1211.98 1632.84,1211.98 1633.42,1211.98 1634.01,1211.98 1634.6,1211.98 1635.18,1211.98 1635.77,1211.98 1636.36,1211.98 1636.94,1211.98 1637.53,1211.98 1638.12,1211.98 1638.7,1211.98 1639.29,1211.98 1639.88,1211.98 1640.46,1211.98 1641.05,1211.98 1641.63,1211.98 1642.22,1211.98 1642.81,1211.98 1643.39,1211.98 1643.98,1211.98 1644.57,1211.98 1645.15,1211.98 1645.74,1211.98 1646.33,1211.98 1646.91,1211.98 1647.5,1211.98 1648.09,1211.98 1648.67,1211.98 1649.26,1211.98 1649.84,1211.98 1650.43,1211.98 1651.02,1211.98 1651.6,1211.98 1652.19,1211.98 1652.78,1211.98 1653.36,1211.98 1653.95,1211.98 1654.54,1211.98 1655.12,1211.98 1655.71,1211.98 1656.29,1211.98 1656.88,1211.98 1657.47,1211.98 1658.05,1211.98 1658.64,1211.98 1659.23,1211.98 1659.81,1211.98 1660.4,1211.98 1660.99,1211.98 1661.57,1211.98 1662.16,1211.98 1662.75,1211.98 1663.33,1211.98 1663.92,1211.98 1664.5,1211.98 1665.09,1211.98 1665.68,1211.98 1666.26,1211.98 1666.85,1211.98 1667.44,1211.98 1668.02,1211.98 1668.61,1211.98 1669.2,1211.98 1669.78,1211.98 1670.37,1211.98 1670.96,1211.98 1671.54,1211.98 1672.13,1211.98 1672.71,1211.98 1673.3,1211.98 1673.89,1211.98 1674.47,1211.98 1675.06,1211.98 1675.65,1211.98 1676.23,1211.98 1676.82,1211.98 1677.41,1211.98 1677.99,1211.98 1678.58,1211.98 1679.17,1211.98 1679.75,1211.98 1680.34,1211.98 1680.92,1211.98 1681.51,1211.98 1682.1,1211.98 1682.68,1211.98 1683.27,1211.98 1683.86,1211.98 1684.44,1211.98 1685.03,1211.98 1685.62,1211.98 1686.2,1211.98 1686.79,1211.98 1687.37,1211.98 1687.96,1211.98 1688.55,1211.98 1689.13,1211.98 1689.72,1211.98 1690.31,1211.98 1690.89,1211.98 1691.48,1211.98 1692.07,1211.98 1692.65,1211.98 1693.24,1211.98 1693.83,1211.98 1694.41,1211.98 1695,1211.98 1695.58,1211.98 1696.17,1211.98 1696.76,1211.98 1697.34,1211.98 1697.93,1211.98 1698.52,1211.98 1699.1,1211.98 1699.69,1211.98 1700.28,1211.98 1700.86,1211.98 1701.45,1211.98 1702.04,1211.98 1702.62,1211.98 1703.21,1211.98 1703.79,1211.98 1704.38,1211.98 1704.97,1211.98 1705.55,1211.98 1706.14,1211.98 1706.73,1211.98 1707.31,1211.98 1707.9,1211.98 1708.49,1211.98 1709.07,1211.98 1709.66,1211.98 1710.24,1211.98 1710.83,1211.98 1711.42,1211.98 1712,1211.98 1712.59,1211.98 1713.18,1211.98 1713.76,1211.98 1714.35,1211.98 1714.94,1211.98 1715.52,1211.98 1716.11,1211.98 1716.7,1211.98 1717.28,1211.98 1717.87,1211.98 1718.45,1211.98 1719.04,1211.98 1719.63,1211.98 1720.21,1211.98 1720.8,1211.98 1721.39,1211.98 1721.97,1211.98 1722.56,1211.98 1723.15,1211.98 1723.73,1211.98 1724.32,1211.98 1724.91,1211.98 1725.49,1211.98 1726.08,1211.98 1726.66,1211.98 1727.25,1211.98 1727.84,1211.98 1728.42,1211.98 1729.01,1211.98 1729.6,1211.98 1730.18,1211.98 1730.77,1211.98 1731.36,1211.98 1731.94,1211.98 1732.53,1211.98 1733.11,1211.98 1733.7,1211.98 1734.29,1211.98 1734.87,1211.98 1735.46,1211.98 1736.05,1211.98 1736.63,1211.98 1737.22,1211.98 1737.81,1211.98 1738.39,1211.98 1738.98,1211.98 1739.57,1211.98 1740.15,1211.98 1740.74,1211.98 1741.32,1211.98 1741.91,1211.98 1742.5,1211.98 1743.08,1211.98 1743.67,1211.98 1744.26,1211.98 1744.84,1211.98 1745.43,1211.98 1746.02,1211.98 1746.6,1211.98 1747.19,1211.98 1747.78,1211.98 1748.36,1211.98 1748.95,1211.98 1749.53,1211.98 1750.12,1211.98 1750.71,1211.98 1751.29,1211.98 1751.88,1211.98 1752.47,1211.98 1753.05,1211.98 1753.64,1211.98 1754.23,1211.98 1754.81,1211.98 1755.4,1211.98 1755.99,1211.98 1756.57,1211.98 1757.16,1211.98 1757.74,1211.98 1758.33,1211.98 1758.92,1211.98 1759.5,1211.98 1760.09,1211.98 1760.68,1211.98 1761.26,1211.98 1761.85,1211.98 1762.44,1211.98 1763.02,1211.98 1763.61,1211.98 1764.19,1211.98 1764.78,1211.98 1765.37,1211.98 1765.95,1211.98 1766.54,1211.98 1767.13,1211.98 1767.71,1211.98 1768.3,1211.98 1768.89,1211.98 1769.47,1211.98 1770.06,1211.98 1770.65,1211.98 1771.23,1211.98 1771.82,1211.98 1772.4,1211.98 1772.99,1211.98 1773.58,1211.98 1774.16,1211.98 1774.75,1211.98 1775.34,1211.98 1775.92,1211.98 1776.51,1211.98 1777.1,1211.98 1777.68,1211.98 1778.27,1211.98 1778.86,1211.98 1779.44,1211.98 1780.03,1211.98 1780.61,1211.98 1781.2,1211.98 1781.79,1211.98 1782.37,1211.98 1782.96,1211.98 1783.55,1211.98 1784.13,1211.98 1784.72,1211.98 1785.31,1211.98 1785.89,1211.98 1786.48,1211.98 1787.06,1211.98 1787.65,1211.98 1788.24,1211.98 1788.82,1211.98 1789.41,1211.98 1790,1211.98 1790.58,1211.98 1791.17,1211.98 1791.76,1211.98 1792.34,1211.98 1792.93,1211.98 1793.52,1211.98 1794.1,1211.98 1794.69,1211.98 1795.27,1211.98 1795.86,1211.98 1796.45,1211.98 1797.03,1211.98 1797.62,1211.98 1798.21,1211.98 1798.79,1211.98 1799.38,1211.98 1799.97,1211.98 1800.55,1211.98 1801.14,1211.98 1801.73,1211.98 1802.31,1211.98 1802.9,1211.98 1803.48,1211.98 1804.07,1211.98 1804.66,1211.98 1805.24,1211.98 1805.83,1211.98 1806.42,1211.98 1807,1211.98 1807.59,1211.98 1808.18,1211.98 1808.76,1211.98 1809.35,1211.98 1809.94,1211.98 1810.52,1211.98 1811.11,1211.98 1811.69,1211.98 1812.28,1211.98 1812.87,1211.98 1813.45,1211.98 1814.04,1211.98 1814.63,1211.98 1815.21,1211.98 1815.8,1211.98 1816.39,1211.98 1816.97,1211.98 1817.56,1211.98 1818.14,1211.98 1818.73,1211.98 1819.32,1211.98 1819.9,1211.98 1820.49,1211.98 1821.08,1211.98 1821.66,1211.98 1822.25,1211.98 1822.84,1211.98 1823.42,1211.98 1824.01,1211.98 1824.6,1211.98 1825.18,1211.98 1825.77,1211.98 1826.35,1211.98 1826.94,1211.98 1827.53,1211.98 1828.11,1211.98 1828.7,1211.98 1829.29,1211.98 1829.87,1211.98 1830.46,1211.98 1831.05,1211.98 1831.63,1211.98 1832.22,1211.98 1832.81,1211.98 1833.39,1211.98 1833.98,1211.98 1834.56,1211.98 1835.15,1211.98 1835.74,1211.98 1836.32,1211.98 1836.91,1211.98 1837.5,1211.98 1838.08,1211.98 1838.67,1211.98 1839.26,1211.98 1839.84,1211.98 1840.43,1211.98 1841.01,1211.98 1841.6,1211.98 1842.19,1211.98 1842.77,1211.98 1843.36,1211.98 1843.95,1211.98 1844.53,1211.98 1845.12,1211.98 1845.71,1211.98 1846.29,1211.98 1846.88,1211.98 1847.47,1211.98 1848.05,1211.98 1848.64,1211.98 1849.22,1211.98 1849.81,1211.98 1850.4,1211.98 1850.98,1211.98 1851.57,1211.98 1852.16,1211.98 1852.74,1211.98 1853.33,1211.98 1853.92,1211.98 1854.5,1211.98 1855.09,1211.98 1855.68,1211.98 1856.26,1211.98 1856.85,1211.98 1857.43,1211.98 1858.02,1211.98 1858.61,1211.98 1859.19,1211.98 1859.78,1211.98 1860.37,1211.98 1860.95,1211.98 1861.54,1211.98 1862.13,1211.98 1862.71,1211.98 1863.3,1211.98 1863.88,1211.98 1864.47,1211.98 1865.06,1211.98 1865.64,1211.98 1866.23,1211.98 1866.82,1211.98 1867.4,1211.98 1867.99,1211.98 1868.58,1211.98 1869.16,1211.98 1869.75,1211.98 1870.34,1211.98 1870.92,1211.98 1871.51,1211.98 1872.09,1211.98 1872.68,1211.98 1873.27,1211.98 1873.85,1211.98 1874.44,1211.98 1875.03,1211.98 1875.61,1211.98 1876.2,1211.98 1876.79,1211.98 1877.37,1211.98 1877.96,1211.98 1878.55,1211.98 1879.13,1211.98 1879.72,1211.98 1880.3,1211.98 1880.89,1211.98 1881.48,1211.98 1882.06,1211.98 1882.65,1211.98 1883.24,1211.98 1883.82,1211.98 1884.41,1211.98 1885,1211.98 1885.58,1211.98 1886.17,1211.98 1886.76,1211.98 1887.34,1211.98 1887.93,1211.98 1888.51,1211.98 1889.1,1211.98 1889.69,1211.98 1890.27,1211.98 1890.86,1211.98 1891.45,1211.98 1892.03,1211.98 1892.62,1211.98 1893.21,1211.98 1893.79,1211.98 1894.38,1211.98 1894.96,1211.98 1895.55,1211.98 1896.14,1211.98 1896.72,1211.98 1897.31,1211.98 1897.9,1211.98 1898.48,1211.98 1899.07,1211.98 1899.66,1211.98 1900.24,1211.98 1900.83,1211.98 1901.42,1211.98 1902,1211.98 1902.59,1211.98 1903.17,1211.98 1903.76,1211.98 1904.35,1211.98 1904.93,1211.98 1905.52,1211.98 1906.11,1211.98 1906.69,1211.98 1907.28,1211.98 1907.87,1211.98 1908.45,1211.98 1909.04,1211.98 1909.63,1211.98 1910.21,1211.98 1910.8,1211.98 1911.38,1211.98 1911.97,1211.98 1912.56,1211.98 1913.14,1211.98 1913.73,1211.98 1914.32,1211.98 1914.9,1211.98 1915.49,1211.98 1916.08,1211.98 1916.66,1211.98 1917.25,1211.98 1917.83,1211.98 1918.42,1211.98 1919.01,1211.98 1919.59,1211.98 1920.18,1211.98 1920.77,1211.98 1921.35,1211.98 1921.94,1211.98 1922.53,1211.98 1923.11,1211.98 1923.7,1211.98 1924.29,1211.98 1924.87,1211.98 1925.46,1211.98 1926.04,1211.98 1926.63,1211.98 1927.22,1211.98 1927.8,1211.98 1928.39,1211.98 1928.98,1211.98 1929.56,1211.98 1930.15,1211.98 1930.74,1211.98 1931.32,1211.98 1931.91,1211.98 1932.5,1211.98 1933.08,1211.98 1933.67,1211.98 1934.25,1211.98 1934.84,1211.98 1935.43,1211.98 1936.01,1211.98 1936.6,1211.98 1937.19,1211.98 1937.77,1211.98 1938.36,1211.98 1938.95,1211.98 1939.53,1211.98 1940.12,1211.98 1940.71,1211.98 1941.29,1211.98 1941.88,1211.98 1942.46,1211.98 1943.05,1211.98 1943.64,1211.98 1944.22,1211.98 1944.81,1211.98 1945.4,1211.98 1945.98,1211.98 1946.57,1211.98 1947.16,1211.98 1947.74,1211.98 1948.33,1211.98 1948.91,1211.98 1949.5,1211.98 1950.09,1211.98 1950.67,1211.98 1951.26,1211.98 1951.85,1211.98 1952.43,1211.98 1953.02,1211.98 1953.61,1211.98 1954.19,1211.98 1954.78,1211.98 1955.37,1211.98 1955.95,1211.98 1956.54,1211.98 1957.12,1211.98 1957.71,1211.98 1958.3,1211.98 1958.88,1211.98 1959.47,1211.98 1960.06,1211.98 1960.64,1211.98 1961.23,1211.98 1961.82,1211.98 1962.4,1211.98 1962.99,1211.98 1963.58,1211.98 1964.16,1211.98 1964.75,1211.98 1965.33,1211.98 1965.92,1211.98 1966.51,1211.98 1967.09,1211.98 1967.68,1211.98 1968.27,1211.98 1968.85,1211.98 1969.44,1211.98 1970.03,1211.98 1970.61,1211.98 1971.2,1211.98 1971.78,1211.98 1972.37,1211.98 1972.96,1211.98 1973.54,1211.98 1974.13,1211.98 1974.72,1211.98 1975.3,1211.98 1975.89,1211.98 1976.48,1211.98 1977.06,1211.98 1977.65,1211.98 1978.24,1211.98 1978.82,1211.98 1979.41,1211.98 1979.99,1211.98 1980.58,1211.98 1981.17,1211.98 1981.75,1211.98 1982.34,1211.98 1982.93,1211.98 1983.51,1211.98 1984.1,1211.98 1984.69,1211.98 1985.27,1211.98 1985.86,1211.98 1986.45,1211.98 1987.03,1211.98 1987.62,1211.98 1988.2,1211.98 1988.79,1211.98 1989.38,1211.98 1989.96,1211.98 1990.55,1211.98 1991.14,1211.98 1991.72,1211.98 1992.31,1211.98 1992.9,1211.98 1993.48,1211.98 1994.07,1211.98 1994.65,1211.98 1995.24,1211.98 1995.83,1211.98 1996.41,1211.98 1997,1211.98 1997.59,1211.98 1998.17,1211.98 1998.76,1211.98 1999.35,1211.98 1999.93,1211.98 2000.52,1211.98 2001.11,1211.98 2001.69,1211.98 2002.28,1211.98 2002.86,1211.98 2003.45,1211.98 2004.04,1211.98 2004.62,1211.98 2005.21,1211.98 2005.8,1211.98 2006.38,1211.98 2006.97,1211.98 2007.56,1211.98 2008.14,1211.98 2008.73,1211.98 2009.32,1211.98 2009.9,1211.98 2010.49,1211.98 2011.07,1211.98 2011.66,1211.98 2012.25,1211.98 2012.83,1211.98 2013.42,1211.98 2014.01,1211.98 2014.59,1211.98 2015.18,1211.98 2015.77,1211.98 2016.35,1211.98 2016.94,1211.98 2017.53,1211.98 2018.11,1211.98 2018.7,1211.98 2019.28,1211.98 2019.87,1211.98 2020.46,1211.98 2021.04,1211.98 2021.63,1211.98 2022.22,1211.98 2022.8,1211.98 2023.39,1211.98 2023.98,1211.98 2024.56,1211.98 2025.15,1211.98 2025.73,1211.98 2026.32,1211.98 2026.91,1211.98 2027.49,1211.98 2028.08,1211.98 2028.67,1211.98 2029.25,1211.98 2029.84,1211.98 2030.43,1211.98 2031.01,1211.98 2031.6,1211.98 2032.19,1211.98 2032.77,1211.98 2033.36,1211.98 2033.94,1211.98 2034.53,1211.98 2035.12,1211.98 2035.7,1211.98 2036.29,1211.98 2036.88,1211.98 2037.46,1211.98 2038.05,1211.98 2038.64,1211.98 2039.22,1211.98 2039.81,1211.98 2040.4,1211.98 2040.98,1211.98 2041.57,1211.98 2042.15,1211.98 2042.74,1211.98 2043.33,1211.98 2043.91,1211.98 2044.5,1211.98 2045.09,1211.98 2045.67,1211.98 2046.26,1211.98 2046.85,1211.98 2047.43,1211.98 2048.02,1211.98 2048.6,1211.98 2049.19,1211.98 2049.78,1211.98 2050.36,1211.98 2050.95,1211.98 2051.54,1211.98 2052.12,1211.98 2052.71,1211.98 2053.3,1211.98 2053.88,1211.98 2054.47,1211.98 2055.06,1211.98 2055.64,1211.98 2056.23,1211.98 2056.81,1211.98 2057.4,1211.98 2057.99,1211.98 2058.57,1211.98 2059.16,1211.98 2059.75,1211.98 2060.33,1211.98 2060.92,1211.98 2061.51,1211.98 2062.09,1211.98 2062.68,1211.98 2063.27,1211.98 2063.85,1211.98 2064.44,1211.98 2065.02,1211.98 2065.61,1211.98 2066.2,1211.98 2066.78,1211.98 2067.37,1211.98 2067.96,1211.98 2068.54,1211.98 2069.13,1211.98 2069.72,1211.98 2070.3,1211.98 2070.89,1211.98 2071.48,1211.98 2072.06,1211.98 2072.65,1211.98 2073.23,1211.98 2073.82,1211.98 2074.41,1211.98 2074.99,1211.98 2075.58,1211.98 2076.17,1211.98 2076.75,1211.98 2077.34,1211.98 2077.93,1211.98 2078.51,1211.98 2079.1,1211.98 2079.68,1211.98 2080.27,1211.98 2080.86,1211.98 2081.44,1211.98 2082.03,1211.98 2082.62,1211.98 2083.2,1211.98 2083.79,1211.98 2084.38,1211.98 2084.96,1211.98 2085.55,1211.98 2086.14,1211.98 2086.72,1211.98 2087.31,1211.98 2087.89,1211.98 2088.48,1211.98 2089.07,1211.98 2089.65,1211.98 2090.24,1211.98 2090.83,1211.98 2091.41,1211.98 2092,1211.98 2092.59,1211.98 2093.17,1211.98 2093.76,1211.98 2094.35,1211.98 2094.93,1211.98 2095.52,1211.98 2096.1,1211.98 2096.69,1211.98 2097.28,1211.98 2097.86,1211.98 2098.45,1211.98 2099.04,1211.98 2099.62,1211.98 2100.21,1211.98 2100.8,1211.98 2101.38,1211.98 2101.97,1211.98 2102.55,1211.98 2103.14,1211.98 2103.73,1211.98 2104.31,1211.98 2104.9,1211.98 2105.49,1211.98 2106.07,1211.98 2106.66,1211.98 2107.25,1211.98 2107.83,1211.98 2108.42,1211.98 2109.01,1211.98 2109.59,1211.98 2110.18,1211.98 2110.76,1211.98 2111.35,1211.98 2111.94,1211.98 2112.52,1211.98 2113.11,1211.98 2113.7,1211.98 2114.28,1211.98 2114.87,1211.98 2115.46,1211.98 2116.04,1211.98 2116.63,1211.98 2117.22,1211.98 2117.8,1211.98 2118.39,1211.98 2118.97,1211.98 2119.56,1211.98 2120.15,1211.98 2120.73,1211.98 2121.32,1211.98 2121.91,1211.98 2122.49,1211.98 2123.08,1211.98 2123.67,1211.98 2124.25,1211.98 2124.84,1211.98 2125.42,1211.98 2126.01,1211.98 2126.6,1211.98 2127.18,1211.98 2127.77,1211.98 2128.36,1211.98 2128.94,1211.98 2129.53,1211.98 2130.12,1211.98 2130.7,1211.98 2131.29,1211.98 2131.88,1211.98 2132.46,1211.98 2133.05,1211.98 2133.63,1211.98 2134.22,1211.98 2134.81,1211.98 2135.39,1211.98 2135.98,1211.98 2136.57,1211.98 2137.15,1211.98 2137.74,1211.98 2138.33,1211.98 2138.91,1211.98 2139.5,1211.98 2140.09,1211.98 2140.67,1211.98 2141.26,1211.98 2141.84,1211.98 2142.43,1211.98 2143.02,1211.98 2143.6,1211.98 2144.19,1211.98 2144.78,1211.98 2145.36,1211.98 2145.95,1211.98 2146.54,1211.98 2147.12,1211.98 2147.71,1211.98 2148.3,1211.98 2148.88,1211.98 2149.47,1211.98 2150.05,1211.98 2150.64,1211.98 2151.23,1211.98 2151.81,1211.98 2152.4,1211.98 2152.99,1211.98 2153.57,1211.98 2154.16,1211.98 2154.75,1211.98 2155.33,1211.98 2155.92,1211.98 2156.5,1211.98 2157.09,1211.98 2157.68,1211.98 2158.26,1211.98 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.54,1193.02 1399.44,899.083 \"/>\n<polyline clip-path=\"url(#clip802)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1230.42 985.439,1193.02 2158.26,1193.02 2158.26,1230.42 985.439,1230.42 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip800)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip800)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip803\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip800)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip800)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip800)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip803)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-5856.65 164.351,-5547.5 164.91,-6474.98 165.469,-7320.32 166.029,-8055.26 166.588,-8737.14 167.147,-9352.94 167.706,-8970.22 168.266,-9537.86 168.825,-10047.1 169.384,-10501.8 169.943,-10905.4 170.503,-9895 171.062,-10261.5 171.621,-9433 172.18,-9734.01 172.74,-10014.1 173.299,-10247.7 173.858,-9583.91 174.417,-9389 174.977,-9605.39 175.536,-9802.25 176.095,-9968.28 176.655,-10083.7 177.214,-10195.6 177.773,-9693.87 178.332,-9771.8 178.892,-9832.86 179.451,-9630.43 180.01,-9680.46 180.569,-9695.15 181.129,-9698.87 181.688,-9497.89 182.247,-9104.43 182.806,-9053.18 183.366,-8852.99 183.925,-8638.91 184.484,-8450.25 185.043,-8266.01 185.603,-8197.03 186.162,-7889.52 186.721,-7817.97 187.28,-7751.88 187.84,-7580.71 188.399,-7400.49 188.958,-7294.16 189.517,-6925.04 190.077,-6831.28 190.636,-6724.46 191.195,-6614.55 191.754,-6278.98 192.314,-6114.71 192.873,-6016.53 193.432,-5912.11 193.991,-5745.02 194.551,-5581.29 195.11,-5418.76 195.669,-5264.07 196.228,-4997.35 196.788,-4852.39 197.347,-4767.77 197.906,-4681.53 198.465,-4489.47 199.025,-4304.57 199.584,-4214.54 200.143,-3986.45 200.702,-3817.27 201.262,-3740.43 201.821,-3616.6 202.38,-3496.49 202.939,-3411.01 203.499,-3257.39 204.058,-3028.63 204.617,-2847.01 205.176,-2745.21 205.736,-2609.34 206.295,-2544.58 206.854,-2481.04 207.413,-2319.28 207.973,-2192.31 208.532,-2106.41 209.091,-1992.07 209.65,-1903.43 210.21,-1764.28 210.769,-1682.62 211.328,-1521.92 211.887,-1420.37 212.447,-1350.2 213.006,-1288.76 213.565,-1224.44 214.124,-1113.09 214.684,-1028.85 215.243,-998.016 215.802,-940.099 216.361,-858.419 216.921,-804.338 217.48,-774.117 218.039,-694.629 218.598,-617.095 219.158,-566.47 219.717,-497.166 220.276,-446.774 220.835,-419.696 221.395,-376.163 221.954,-351.537 222.513,-277.953 223.072,-190.688 223.632,-145.311 224.191,-78.5316 224.75,-61.9974 225.309,-1.69745 225.869,61.4559 226.428,139.502 226.987,176.387 227.546,225.045 228.106,256.812 228.665,308.968 229.224,320.513 229.783,333.017 230.343,364.564 230.902,394.643 231.461,406.648 232.02,400.671 232.58,412.71 233.139,421.364 233.698,451.917 234.257,466.605 234.817,496.876 235.376,541.894 235.935,638.613 236.494,659.64 237.054,681.141 237.613,702.694 238.172,723.961 238.731,725.357 239.291,727.184 239.85,688.858 240.409,689.944 240.968,712.079 241.528,716.265 242.087,717.351 242.646,753.79 243.205,756.123 243.765,776.513 244.324,796.142 244.883,832.286 245.442,829.137 246.002,830.686 246.561,869.245 247.12,848.675 247.679,882.251 248.239,894.022 248.798,908.391 249.357,908.235 249.916,957.945 250.476,973.024 251.035,968.314 251.594,998.52 252.153,1044.67 252.713,1032.18 253.272,1023.42 253.831,1033 254.39,1061.79 254.95,1068.85 255.509,1056.74 256.068,1029.13 256.627,1026.05 257.187,1016.61 257.746,1010.54 258.305,1008.72 258.864,991.079 259.424,969.481 259.983,967.146 260.542,976.235 261.101,970.839 261.661,966.275 262.22,998.364 262.779,1011.77 263.338,1008.44 263.898,1001.57 264.457,978.625 265.016,990.952 265.575,1005.32 266.135,1022.06 266.694,1018.08 267.253,1014.58 267.812,1008.13 268.372,971.172 268.931,1003.02 269.49,1019.25 270.049,1013.31 270.609,1024.65 271.168,1033.56 271.727,1089.88 272.286,1064.24 272.846,1025.52 273.405,1023.54 273.964,1021.49 274.523,1064.92 275.083,1060.49 275.642,1066.4 276.201,1063.47 276.76,1054.33 277.32,1051.06 277.879,1043.57 278.438,1054.45 278.997,1078.93 279.557,1071.88 280.116,1066.47 280.675,1112.12 281.234,1133.94 281.794,1124.36 282.353,1112.28 282.912,1121.63 283.471,1111.68 284.031,1089.5 284.59,1064.72 285.149,1075.05 285.708,1064.45 286.268,1074.59 286.827,1098.53 287.386,1091.34 287.945,1081.58 288.505,1090.98 289.064,1032.79 289.623,1058.04 290.182,998.052 290.742,979.245 291.301,991.168 291.86,972.372 292.419,982.167 292.979,993.516 293.538,970.872 294.097,982.677 294.656,979.258 295.216,959.97 295.775,957.561 296.334,937.682 296.893,936.27 297.453,965.383 298.012,948.165 298.571,993.493 299.13,990.139 299.69,979.632 300.249,1008.79 300.808,1036.54 301.368,1063.7 301.927,1072.05 302.486,1076.96 303.045,1064.9 303.605,1055.6 304.164,1048.57 304.723,1038.94 305.282,1032.97 305.842,1024.55 306.401,1016.32 306.96,991.115 307.519,1000.42 308.079,1010.79 308.638,1017.41 309.197,994.141 309.756,1019.37 310.316,1027.58 310.875,1037.21 311.434,1047.28 311.993,1021.88 312.553,1015.47 313.112,976.317 313.671,957.572 314.23,953.472 314.79,951.082 315.349,948.205 315.908,958.85 316.467,971.223 317.027,965.649 317.586,946.895 318.145,975.667 318.704,989.854 319.264,1004.56 319.823,964.7 320.382,977.541 320.941,987.476 321.501,979.197 322.06,972.795 322.619,964.936 323.178,975.764 323.738,988.371 324.297,980.951 324.856,974.717 325.415,1002.87 325.975,1011.29 326.534,1034.1 327.093,1043.43 327.652,1068.71 328.212,1043.77 328.771,1017.71 329.33,991.027 329.889,951.208 330.449,932.728 331.008,964.255 331.567,956.988 332.126,966.357 332.686,961.142 333.245,953.733 333.804,948.717 334.363,957.194 334.923,986.897 335.482,962.745 336.041,956.438 336.6,949.627 337.16,949.749 337.719,992.669 338.278,1003.2 338.837,1012.57 339.397,1003.58 339.956,978.18 340.515,973.021 341.074,984.936 341.634,1008.49 342.193,1001.89 342.752,991.855 343.311,1000.15 343.871,960.776 344.43,968.877 344.989,994.556 345.548,997.622 346.108,988.404 346.667,980.815 347.226,973.044 347.785,986.438 348.345,979.388 348.904,952.118 349.463,930.143 350.022,922.361 350.582,932.383 351.141,959.376 351.7,1003.96 352.259,962.578 352.819,955.523 353.378,943.725 353.937,972.366 354.496,948.765 355.056,892.514 355.615,869.107 356.174,861.754 356.733,841.081 357.293,899.388 357.852,880.039 358.411,876.926 358.97,889.974 359.53,904.864 360.089,900.964 360.648,908.909 361.207,921.951 361.767,935.256 362.326,928.525 362.885,892.31 363.444,872.869 364.004,854.265 364.563,884.621 365.122,879.551 365.681,859.638 366.241,856.995 366.8,870.115 367.359,899.321 367.918,906.259 368.478,897.959 369.037,860.538 369.596,887.823 370.155,888.195 370.715,897.021 371.274,875.385 371.833,856.645 372.392,869.093 372.952,800.39 373.511,814.091 374.07,830.733 374.629,861.668 375.189,844.089 375.748,845.855 376.307,861.981 376.866,873.6 377.426,900.538 377.985,913.207 378.544,941.844 379.103,914.22 379.663,909.112 380.222,886.725 380.781,864.983 381.34,894.495 381.9,907.897 382.459,933.888 383.018,909.614 383.577,887.111 384.137,866.584 384.696,831.133 385.255,827.066 385.814,810.033 386.374,840.402 386.933,856.117 387.492,822.615 388.051,820.942 388.611,833.145 389.17,861.996 389.729,862.868 390.288,840.268 390.848,804.19 391.407,817.425 391.966,801.836 392.525,800.702 393.085,800.143 393.644,815.241 394.203,798.135 394.762,829.035 395.322,793.9 395.881,758.763 396.44,756.85 396.999,725.791 397.559,713.179 398.118,752.344 398.677,805.37 399.236,787.75 399.796,786.059 400.355,802.758 400.914,797.795 401.473,750.181 402.033,736.397 402.592,806.173 403.151,787.704 403.71,784.988 404.27,787.837 404.829,819.602 405.388,823.051 405.947,838.419 406.507,847.348 407.066,859.871 407.625,873.18 408.184,868.553 408.744,865.843 409.303,860.769 409.862,886.678 410.421,898.753 410.981,908.187 411.54,871.16 412.099,879.356 412.658,844.166 413.218,825.329 413.777,807.513 414.336,820.724 414.895,852.018 415.455,846.487 416.014,845.201 416.573,821.177 417.132,822.076 417.692,823.224 418.251,802.992 418.81,817.128 419.369,813.883 419.929,827.836 420.488,858.282 421.047,805.563 421.606,785.444 422.166,748.893 422.725,732.431 423.284,749.706 423.843,716.349 424.403,718.115 424.962,705.689 425.521,725.005 426.08,689.769 426.64,691.83 427.199,680.646 427.758,686.177 428.318,676.435 428.877,680.056 429.436,699.683 429.995,703.246 430.555,726.277 431.114,760.367 431.673,778.654 432.232,763.667 432.792,780.127 433.351,810.169 433.91,819.258 434.469,833.387 435.029,813.27 435.588,825.441 436.147,821.288 436.706,837.899 437.266,833.673 437.825,828.498 438.384,810.903 438.943,806.961 439.503,806.579 440.062,802.411 440.621,799.155 441.18,829.431 441.74,826.58 442.299,822.512 442.858,821.699 443.417,784.349 443.977,784.964 444.536,797.993 445.095,797.021 445.654,742.463 446.214,759.674 446.773,755.977 447.332,754.483 447.891,752.185 448.451,767.931 449.01,831.453 449.569,843.509 450.128,838.468 450.688,816.594 451.247,812.477 451.806,830.281 452.365,828.756 452.925,856.095 453.484,849.258 454.043,813.49 454.602,796.023 455.162,777.858 455.721,795.741 456.28,795.366 456.839,808.133 457.399,825.247 457.958,804.937 458.517,785.59 459.076,782.918 459.636,796.031 460.195,792.098 460.754,809.822 461.313,757.328 461.873,789.691 462.432,805.828 462.991,817.674 463.55,768.313 464.11,769.578 464.669,737.684 465.228,706.225 465.787,704.609 466.347,721.412 466.906,707.396 467.465,692.91 468.024,677.294 468.584,681.676 469.143,717.922 469.702,747.597 470.261,748.161 470.821,766.624 471.38,780.426 471.939,776.357 472.498,757.576 473.058,756.849 473.617,753.903 474.176,753.865 474.735,786.147 475.295,815.558 475.854,827.864 476.413,860.414 476.972,871.918 477.532,865.152 478.091,810.795 478.65,818.924 479.209,780.92 479.769,778.012 480.328,762.737 480.887,791.142 481.446,770.449 482.006,752.305 482.565,753.261 483.124,720.958 483.683,707.718 484.243,708.621 484.802,712.614 485.361,729.382 485.92,729.31 486.48,712.879 487.039,701.37 487.598,703.282 488.157,690.335 488.717,659.644 489.276,680.936 489.835,684.073 490.394,688.746 490.954,657.673 491.513,645.072 492.072,684.61 492.631,638.478 493.191,674.272 493.75,691.315 494.309,676.505 494.868,662.074 495.428,665.088 495.987,667.462 496.546,672.978 497.105,690.56 497.665,694.093 498.224,727.895 498.783,709.992 499.342,709.76 499.902,743.13 500.461,761.186 501.02,760.317 501.579,774.436 502.139,755.376 502.698,769.006 503.257,751.501 503.816,749.72 504.376,731.485 504.935,747.016 505.494,765.802 506.053,754.864 506.613,750.059 507.172,765.525 507.731,795.551 508.29,793.076 508.85,775.14 509.409,769.48 509.968,738.261 510.527,720.807 511.087,688.894 511.646,710.472 512.205,711.301 512.764,697.775 513.324,701.249 513.883,768.029 514.442,768.119 515.001,776.371 515.561,825.002 516.12,804.372 516.679,799.567 517.238,783.402 517.798,766.528 518.357,745.205 518.916,744.754 519.475,744.946 520.035,727.112 520.594,726.876 521.153,727.628 521.712,724.026 522.272,770.503 522.831,767.181 523.39,763.924 523.949,810.26 524.509,788.874 525.068,833.368 525.627,782.495 526.186,762.346 526.746,747.173 527.305,731.367 527.864,766.331 528.423,762.297 528.983,761.097 529.542,791.359 530.101,787.361 530.66,797.064 531.22,774.947 531.779,740.184 532.338,709.333 532.897,712.49 533.457,682.759 534.016,680.234 534.575,734.822 535.134,719.592 535.694,700.393 536.253,706.157 536.812,678.311 537.371,713.945 537.931,732.09 538.49,744.993 539.049,743.359 539.608,739.559 540.168,724.803 540.727,725.371 541.286,707.825 541.845,724.031 542.405,724.261 542.964,690.965 543.523,692.032 544.082,693.623 544.642,727.742 545.201,741.064 545.76,740.066 546.319,740.511 546.879,756.439 547.438,769.858 547.997,765.079 548.556,729.815 549.116,742.192 549.675,755.176 550.234,724.375 550.793,756.427 551.353,736.634 551.912,714.478 552.471,714.768 553.031,699.336 553.59,700.437 554.149,700.596 554.708,704.707 555.268,725.035 555.827,725.394 556.386,726.151 556.945,695.106 557.505,681.667 558.064,683.799 558.623,699.645 559.182,682.788 559.742,666.893 560.301,668.539 560.86,684.536 561.419,686.634 561.979,720.904 562.538,720.164 563.097,688.861 563.656,675.267 564.216,677.884 564.775,697.123 565.334,698.289 565.893,680.203 566.453,682.056 567.012,667.649 567.571,670.253 568.13,670.198 568.69,659.84 569.249,613.293 569.808,632.18 570.367,634.61 570.927,670.644 571.486,689.339 572.045,675.614 572.604,662.117 573.164,633.261 573.723,670.004 574.282,691.597 574.841,678.022 575.401,664.821 575.96,651.571 576.519,658.595 577.078,643.641 577.638,595.767 578.197,588.614 578.756,593.664 579.315,629.01 579.875,635.663 580.434,686.051 580.993,703.762 581.552,702.321 582.112,700.044 582.671,699.499 583.23,717.785 583.789,736.361 584.349,736.545 584.908,732.951 585.467,747.068 586.026,763.743 586.586,776.629 587.145,789.797 587.704,783.742 588.263,763.665 588.823,779.444 589.382,776.091 589.941,754.35 590.5,767.313 591.06,830.372 591.619,824.105 592.178,818.186 592.737,845.359 593.297,869.741 593.856,830.388 594.415,825.532 594.974,826.921 595.534,807.41 596.093,786.029 596.652,780.043 597.211,756.867 597.771,767.079 598.33,750.435 598.889,761.776 599.448,758.601 600.008,721.519 600.567,700.266 601.126,718.839 601.685,719.713 602.245,720.584 602.804,718.359 603.363,718.197 603.922,649.238 604.482,668.571 605.041,651.546 605.6,635.587 606.159,639.218 606.719,607.022 607.278,588.672 607.837,575.399 608.396,582.025 608.956,623.413 609.515,660.636 610.074,662.121 610.633,664.608 611.193,680.28 611.752,700.209 612.311,698.424 612.87,696.368 613.43,711.929 613.989,712.332 614.548,727.208 615.107,677.163 615.667,662.877 616.226,680.65 616.785,698.863 617.344,699.903 617.904,718.207 618.463,733.739 619.022,718.291 619.581,720.97 620.141,719.707 620.7,782.177 621.259,778.959 621.818,791.038 622.378,767.609 622.937,776.786 623.496,790.555 624.055,783.687 624.615,812.01 625.174,803.589 625.733,798.662 626.292,775.922 626.852,753.89 627.411,734.313 627.97,668.247 628.529,650.962 629.089,653.557 629.648,669.273 630.207,685.754 630.766,683.366 631.326,682.2 631.885,667.657 632.444,704.438 633.003,701.835 633.563,715.029 634.122,732.496 634.681,682.851 635.24,701.099 635.8,701.692 636.359,717.503 636.918,682.074 637.477,645.632 638.037,675.847 638.596,695.555 639.155,627.873 639.714,663.779 640.274,699.686 640.833,667.65 641.392,672.276 641.951,643.383 642.511,636.937 643.07,657.902 643.629,642.3 644.188,627.265 644.748,619.448 645.307,625.066 645.866,629.521 646.425,679.94 646.985,696.067 647.544,713.078 648.103,713.862 648.662,683.337 649.222,684.746 649.781,686.012 650.34,672.704 650.899,703.493 651.459,733.899 652.018,697.45 652.577,728.464 653.136,710.959 653.696,693.883 654.255,690.823 654.814,756.744 655.373,769.691 655.933,749.498 656.492,790.812 657.051,770.023 657.61,746.805 658.17,727.341 658.729,708.17 659.288,694.323 659.847,678.45 660.407,713.855 660.966,699.335 661.525,734.155 662.084,750.267 662.644,731.916 663.203,715.728 663.762,700.657 664.321,698.329 664.881,731.844 665.44,714.974 665.999,713.512 666.558,711.724 667.118,714.312 667.677,695.845 668.236,663.382 668.795,683.139 669.355,682.937 669.914,703.78 670.473,715.517 671.032,698.95 671.592,715.925 672.151,712.898 672.71,696.258 673.269,711.366 673.829,742.84 674.388,725.72 674.947,723.29 675.506,721.045 676.066,736.548 676.625,737.686 677.184,689.684 677.743,689.287 678.303,673.832 678.862,692.118 679.421,737.544 679.981,767.139 680.54,749.755 681.099,746.65 681.658,709.371 682.218,711.419 682.777,693.571 683.336,681.783 683.895,665.424 684.455,699.776 685.014,703.185 685.573,704.106 686.132,689.404 686.692,739.322 687.251,723.467 687.81,737.106 688.369,736.981 688.929,733.577 689.488,732.31 690.047,716.673 690.606,730.529 691.166,757.335 691.725,786.407 692.284,749.824 692.843,744.437 693.403,737.399 693.962,767.571 694.521,762.311 695.08,759.997 695.64,743.386 696.199,721.136 696.758,672.176 697.317,659.196 697.877,679.116 698.436,678.854 698.995,677.799 699.554,678.495 700.114,661.313 700.673,645.635 701.232,647.51 701.791,649.646 702.351,633.164 702.91,686.424 703.469,674.091 704.028,695.615 704.588,715.573 705.147,683.433 705.706,701.68 706.265,684.873 706.825,650.909 707.384,653.362 707.943,654.952 708.502,639.535 709.062,656.181 709.621,643.437 710.18,660.746 710.739,664.275 711.299,669.275 711.858,700.226 712.417,727.381 712.976,722.887 713.536,707.717 714.095,724.284 714.654,724.505 715.213,735.32 715.773,747.98 716.332,746.089 716.891,727.45 717.45,707.697 718.01,691.69 718.569,709.916 719.128,671.557 719.687,658.604 720.247,657.31 720.806,660.093 721.365,675.381 721.924,642.155 722.484,624.315 723.043,597.041 723.602,653.436 724.161,669.521 724.721,669.719 725.28,639.79 725.839,655.337 726.398,656.743 726.958,662.471 727.517,662.701 728.076,665.751 728.635,652.098 729.195,687.781 729.754,687.544 730.313,702.081 730.872,699.691 731.432,720.905 731.991,734.707 732.55,748.557 733.109,778.207 733.669,790.27 734.228,737.261 734.787,736.122 735.346,719.223 735.906,750.44 736.465,747.509 737.024,760.385 737.583,710.164 738.143,743.606 738.702,743.499 739.261,755.993 739.82,766.871 740.38,745.208 740.939,742.224 741.498,740.417 742.057,738.633 742.617,738.459 743.176,720.041 743.735,720.86 744.294,688.943 744.854,658.238 745.413,692.094 745.972,709.439 746.531,708.743 747.091,676.222 747.65,675.232 748.209,658.115 748.768,646.233 749.328,649.381 749.887,653.656 750.446,720.213 751.005,722.062 751.565,735.164 752.124,733.477 752.683,747.801 753.242,760.392 753.802,739.983 754.361,722.123 754.92,737.527 755.479,736.092 756.039,767.087 756.598,745.997 757.157,743.045 757.716,724.809 758.276,705.095 758.835,706.447 759.394,655.156 759.953,643.318 760.513,657.893 761.072,673.804 761.631,640.413 762.19,644.077 762.75,614.201 763.309,618.613 763.868,623.614 764.427,645.146 764.987,664.019 765.546,700.741 766.105,766.263 766.664,764.893 767.224,742.454 767.783,738.676 768.342,753.213 768.901,735.284 769.461,748.52 770.02,765.544 770.579,765.8 771.138,765.695 771.698,778.216 772.257,770.336 772.816,748.801 773.375,763.689 773.935,746.133 774.494,746.864 775.053,759.689 775.612,774.5 776.172,758.57 776.731,752.439 777.29,749.945 777.849,729.054 778.409,741.541 778.968,706.597 779.527,671.198 780.086,688.428 780.646,725.366 781.205,702.772 781.764,701.424 782.323,684.89 782.883,683.895 783.442,686.034 784.001,703.966 784.56,720.397 785.12,701.321 785.679,683.534 786.238,687.286 786.797,670.643 787.357,669.894 787.916,703.16 788.475,684.157 789.034,668.285 789.594,684.274 790.153,701.312 790.712,717.807 791.271,699.093 791.831,711.997 792.39,699.012 792.949,744.249 793.508,740.825 794.068,707.933 794.627,689.917 795.186,655.279 795.745,660.566 796.305,665.079 796.864,664.125 797.423,632.267 797.982,619.149 798.542,608.408 799.101,630.619 799.66,635.378 800.219,657.57 800.779,646.017 801.338,645.668 801.897,633.211 802.456,619.259 803.016,590.675 803.575,597.204 804.134,599.061 804.693,605.016 805.253,609.73 805.812,613.498 806.371,618.124 806.931,605.04 807.49,645.785 808.049,679.005 808.608,645.258 809.168,645.714 809.727,648.542 810.286,650.079 810.845,670.471 811.405,659.069 811.964,677.047 812.523,661.533 813.082,678.793 813.642,664.755 814.201,663.489 814.76,645.684 815.319,665.64 815.879,651.043 816.438,634.934 816.997,652.643 817.556,685.299 818.116,686.664 818.675,705.033 819.234,717.844 819.793,701.18 820.353,703.756 820.912,720.697 821.471,720.944 822.03,688.388 822.59,687.269 823.149,688.144 823.708,669.873 824.267,654.847 824.827,672.385 825.386,673.799 825.945,694.857 826.504,712.298 827.064,709.999 827.623,706.322 828.182,712.013 828.741,693.38 829.301,706.862 829.86,706.844 830.419,709.962 830.978,698.368 831.538,715.885 832.097,741.795 832.656,737.962 833.215,767.285 833.775,745.387 834.334,758.145 834.893,736.182 835.452,732.766 836.012,747.553 836.571,727.965 837.13,760.912 837.689,753.746 838.249,750.027 838.808,758.672 839.367,784.714 839.926,778.37 840.486,759.152 841.045,740.831 841.604,738.858 842.163,733.727 842.723,730.242 843.282,709.726 843.841,705.969 844.4,720.926 844.96,685.282 845.519,704.109 846.078,702.964 846.637,702.001 847.197,684.892 847.756,683.946 848.315,700.119 848.874,682.095 849.434,696.525 849.993,695.979 850.552,681.525 851.111,697.774 851.671,681.67 852.23,649.249 852.789,667.344 853.348,652.002 853.908,652.713 854.467,640.113 855.026,688.842 855.585,688.089 856.145,721.205 856.704,735.923 857.263,734.142 857.822,763.511 858.382,762.526 858.941,742.639 859.5,738.675 860.059,766.634 860.619,759.347 861.178,788.545 861.737,801.463 862.296,812.402 862.856,805.127 863.415,799.381 863.974,810.953 864.533,788.077 865.093,780.045 865.652,756.828 866.211,755.775 866.77,765.811 867.33,761.114 867.889,723.423 868.448,705.823 869.007,686.693 869.567,686.339 870.126,685.777 870.685,688.988 871.244,704.893 871.804,707.227 872.363,657.13 872.922,640.647 873.481,614.465 874.041,619.066 874.6,588.654 875.159,575.811 875.718,564.326 876.278,587.386 876.837,591.685 877.396,596.263 877.955,597.042 878.515,581.74 879.074,601.576 879.633,638.731 880.192,644.643 880.752,694.334 881.311,694.907 881.87,728.428 882.429,710.684 882.989,707.654 883.548,723.098 884.107,736.622 884.666,702.581 885.226,697.507 885.785,699.558 886.344,681.982 886.903,678.5 887.463,694.378 888.022,661.849 888.581,649.247 889.14,700.303 889.7,696.479 890.259,711.07 890.818,742.181 891.377,740.396 891.937,721.938 892.496,707.562 893.055,707.58 893.614,705.338 894.174,689.021 894.733,672.252 895.292,670.598 895.851,685.468 896.411,684.671 896.97,684.419 897.529,685.878 898.088,714.462 898.648,747.171 899.207,762.405 899.766,776.205 900.325,774.116 900.885,753.947 901.444,784.552 902.003,794.322 902.562,802.334 903.122,795.945 903.681,777.234 904.24,789.597 904.799,797.402 905.359,795.478 905.918,793.351 906.477,786.756 907.036,763.075 907.596,745.388 908.155,757.044 908.714,737.826 909.273,698.134 909.833,714.369 910.392,711.236 910.951,694.517 911.51,644.637 912.07,646.95 912.629,680.075 913.188,695.057 913.747,676.598 914.307,645.576 914.866,646.52 915.425,634.685 915.984,607.014 916.544,630.35 917.103,600.987 917.662,590.492 918.221,611.746 918.781,648.548 919.34,649.457 919.899,667.802 920.458,651.193 921.018,639.906 921.577,626.87 922.136,630.954 922.695,650.764 923.255,651.212 923.814,601.77 924.373,605.141 924.932,589.785 925.492,579.464 926.051,569.065 926.61,574.215 927.169,577.845 927.729,583.668 928.288,592.484 928.847,644.575 929.406,696.069 929.966,695.699 930.525,696.601 931.084,693.898 931.644,642.938 932.203,644.966 932.762,665 933.321,679.839 933.881,692.352 934.44,676.603 934.999,647.786 935.558,651.369 936.118,667.203 936.677,699.527 937.236,720.468 937.795,702.114 938.355,686.85 938.914,686.771 939.473,703.737 940.032,738.279 940.592,719.492 941.151,715.772 941.71,712.989 942.269,746.952 942.829,729.085 943.388,729.21 943.947,694.933 944.506,693.017 945.066,696.052 945.625,761.478 946.184,755.883 946.743,749.135 947.303,731.309 947.862,745.378 948.421,744 948.98,741.839 949.54,741.643 950.099,722.523 950.658,737.391 951.217,719.126 951.777,731.479 952.336,790.444 952.895,815.92 953.454,793.971 954.014,786.844 954.573,764.237 955.132,728.101 955.691,740.079 956.251,722.441 956.81,736.14 957.369,731.768 957.928,728.47 958.488,694.146 959.047,677.478 959.606,679.264 960.165,647.037 960.725,663.163 961.284,649.306 961.843,651.377 962.402,684.342 962.962,684.353 963.521,681.634 964.08,695.464 964.639,689.984 965.199,742.345 965.758,738.189 966.317,716.475 966.876,669.804 967.436,717.747 967.995,680.885 968.554,678.437 969.113,709.262 969.673,687.66 970.232,690.468 970.791,705.574 971.35,721.16 971.91,718.464 972.469,701.708 973.028,685.684 973.587,702.469 974.147,667.241 974.706,667.108 975.265,668.486 975.824,667 976.384,667.051 976.943,669.945 977.502,686.638 978.061,700.105 978.621,679.625 979.18,662.724 979.739,661.926 980.298,644.613 980.858,665.711 981.417,665.754 981.976,667.835 982.535,667.214 983.095,665.961 983.654,682.832 984.213,697.544 984.772,710.116 985.332,711.651 985.891,693.409 986.45,721.57 987.009,690.925 987.569,672.41 988.128,705.43 988.687,704.934 989.246,699.914 989.806,667.811 990.365,670.67 990.924,673.001 991.483,687.237 992.043,703.114 992.602,702.544 993.161,732.33 993.72,711.173 994.28,678.569 994.839,664.116 995.398,695.933 995.957,678.222 996.517,644.687 997.076,645.64 997.635,654.328 998.194,689.263 998.754,704.955 999.313,685.748 999.872,668.088 1000.43,668.478 1000.99,671.167 1001.55,691.011 1002.11,676.756 1002.67,661.642 1003.23,679.761 1003.79,617.82 1004.35,586.755 1004.91,609.39 1005.46,599.308 1006.02,604.037 1006.58,611.861 1007.14,634.12 1007.7,636.633 1008.26,660.105 1008.82,662.159 1009.38,679.745 1009.94,695.989 1010.5,697.258 1011.06,659.317 1011.62,664.421 1012.18,670.3 1012.73,655.438 1013.29,686.496 1013.85,670.012 1014.41,654.14 1014.97,686.14 1015.53,685.902 1016.09,672.309 1016.65,659.162 1017.21,663.337 1017.77,649.505 1018.33,681.457 1018.89,681.768 1019.45,702.318 1020.01,750.378 1020.56,759.724 1021.12,753.481 1021.68,749.406 1022.24,779.51 1022.8,775.962 1023.36,752.727 1023.92,719.395 1024.48,704.629 1025.04,689.593 1025.6,674.196 1026.16,673.167 1026.72,673.47 1027.28,690.578 1027.83,689.661 1028.39,704.504 1028.95,675.614 1029.51,695.28 1030.07,677.634 1030.63,694.957 1031.19,695.51 1031.75,695.376 1032.31,726.385 1032.87,728.317 1033.43,696.769 1033.99,648.864 1034.55,635.734 1035.1,655.268 1035.66,655.811 1036.22,641.073 1036.78,641.974 1037.34,660.517 1037.9,662.144 1038.46,663.394 1039.02,615.263 1039.58,668.394 1040.14,703.004 1040.7,668.765 1041.26,638.943 1041.82,640.957 1042.38,646.951 1042.93,648.014 1043.49,628.671 1044.05,617.299 1044.61,635.033 1045.17,621.247 1045.73,655.596 1046.29,639.251 1046.85,626.258 1047.41,627.929 1047.97,616.853 1048.53,620.737 1049.09,671.817 1049.65,676.485 1050.2,694.654 1050.76,680.501 1051.32,648.689 1051.88,633.978 1052.44,689.391 1053,691.293 1053.56,690.912 1054.12,676.692 1054.68,659.745 1055.24,611.476 1055.8,632.073 1056.36,600.609 1056.92,605.768 1057.48,577.693 1058.03,597.249 1058.59,617.928 1059.15,654.198 1059.71,625.842 1060.27,612.424 1060.83,633.824 1061.39,640.052 1061.95,660.033 1062.51,680.509 1063.07,683.303 1063.63,664.859 1064.19,698.406 1064.75,700.244 1065.3,683.669 1065.86,717.845 1066.42,714.102 1066.98,697.373 1067.54,662.4 1068.1,649.721 1068.66,601.744 1069.22,607.017 1069.78,597.38 1070.34,646.78 1070.9,647.857 1071.46,664.171 1072.02,651.171 1072.57,620.325 1073.13,607.513 1073.69,624.393 1074.25,628.269 1074.81,648.991 1075.37,663.519 1075.93,680.25 1076.49,679.885 1077.05,649.569 1077.61,632.767 1078.17,654.897 1078.73,639.856 1079.29,660.127 1079.85,648.128 1080.4,654.3 1080.96,657.778 1081.52,679.038 1082.08,647.858 1082.64,682.528 1083.2,699.153 1083.76,728.463 1084.32,709.487 1084.88,740.153 1085.44,750.835 1086,748.359 1086.56,747.057 1087.12,729.527 1087.67,743.081 1088.23,769.741 1088.79,749.325 1089.35,762.767 1089.91,740.982 1090.47,702.767 1091.03,714.436 1091.59,711.507 1092.15,725.41 1092.71,724.11 1093.27,703.168 1093.83,700.88 1094.39,716.547 1094.94,700.465 1095.5,699.156 1096.06,650.875 1096.62,654.784 1097.18,658.255 1097.74,659.7 1098.3,675.9 1098.86,691.102 1099.42,693.118 1099.98,674.032 1100.54,689.157 1101.1,656.893 1101.66,640.051 1102.22,656.827 1102.77,620.951 1103.33,625.617 1103.89,611.493 1104.45,629.319 1105.01,615.859 1105.57,586.087 1106.13,605.835 1106.69,610.561 1107.25,661.947 1107.81,643.099 1108.37,657.185 1108.93,626.611 1109.49,626.86 1110.04,647.46 1110.6,683.856 1111.16,699.816 1111.72,632.733 1112.28,622.371 1112.84,657.773 1113.4,644.094 1113.96,660.558 1114.52,664.337 1115.08,700.928 1115.64,700.924 1116.2,731.297 1116.76,724.935 1117.31,725.308 1117.87,726.059 1118.43,705.313 1118.99,690.386 1119.55,703.89 1120.11,670.383 1120.67,653.179 1121.23,632.613 1121.79,633.018 1122.35,636.665 1122.91,639.67 1123.47,655.876 1124.03,690.671 1124.59,687.297 1125.14,653.441 1125.7,623.46 1126.26,611.659 1126.82,613.462 1127.38,616.625 1127.94,637.249 1128.5,625.085 1129.06,610.511 1129.62,662.893 1130.18,680.464 1130.74,725.659 1131.3,707.673 1131.86,689.868 1132.41,673.416 1132.97,675.741 1133.53,676.203 1134.09,708.906 1134.65,694.003 1135.21,680.323 1135.77,697.631 1136.33,666.57 1136.89,650.942 1137.45,652.879 1138.01,687.051 1138.57,672.13 1139.13,638.518 1139.68,671.588 1140.24,638.276 1140.8,637.967 1141.36,655.968 1141.92,706.787 1142.48,726.029 1143.04,756.247 1143.6,766.804 1144.16,780.735 1144.72,773.297 1145.28,770.233 1145.84,781.695 1146.4,761.656 1146.96,759.499 1147.51,739.504 1148.07,705.089 1148.63,704.864 1149.19,685.437 1149.75,668.373 1150.31,705.141 1150.87,715.455 1151.43,714.118 1151.99,713.555 1152.55,676.782 1153.11,707.685 1153.67,735.863 1154.23,722.442 1154.78,703.795 1155.34,718.833 1155.9,731.886 1156.46,713.472 1157.02,728.022 1157.58,690.013 1158.14,674.708 1158.7,724.351 1159.26,738.601 1159.82,720.336 1160.38,734.035 1160.94,699.355 1161.5,698.073 1162.05,695.814 1162.61,694.018 1163.17,705.899 1163.73,689.887 1164.29,688.006 1164.85,670.905 1165.41,705.564 1165.97,640.045 1166.53,657.163 1167.09,659.081 1167.65,677.536 1168.21,660.384 1168.77,643.919 1169.33,663.321 1169.88,684.194 1170.44,666.864 1171,635.906 1171.56,606.706 1172.12,611.676 1172.68,633.511 1173.24,619.811 1173.8,622.81 1174.36,609.271 1174.92,627.712 1175.48,596.521 1176.04,601.965 1176.6,591.66 1177.15,628.146 1177.71,629.466 1178.27,599.388 1178.83,588.127 1179.39,589.629 1179.95,545.751 1180.51,573.188 1181.07,613.814 1181.63,621.925 1182.19,625.432 1182.75,629.652 1183.31,584.376 1183.87,589.254 1184.43,627.621 1184.98,646.373 1185.54,663.213 1186.1,649.405 1186.66,684.134 1187.22,719.942 1187.78,764.848 1188.34,777.928 1188.9,775.82 1189.46,769.486 1190.02,764.534 1190.58,755.627 1191.14,769.888 1191.7,749.433 1192.25,745.599 1192.81,724.552 1193.37,701.095 1193.93,666.575 1194.49,618.431 1195.05,652.255 1195.61,642.479 1196.17,643.914 1196.73,645.065 1197.29,648.698 1197.85,650.772 1198.41,651.322 1198.97,636.645 1199.52,672.683 1200.08,688.687 1200.64,670.407 1201.2,691.873 1201.76,659.733 1202.32,677.003 1202.88,660.982 1203.44,646.097 1204,649.959 1204.56,648.974 1205.12,665.409 1205.68,681.798 1206.24,679.803 1206.8,713.133 1207.35,697.944 1207.91,647.916 1208.47,666.275 1209.03,683.726 1209.59,683.355 1210.15,685.143 1210.71,655.746 1211.27,659.142 1211.83,645.706 1212.39,696.675 1212.95,681.1 1213.51,683.186 1214.07,665.212 1214.62,651.056 1215.18,637.148 1215.74,640.512 1216.3,676.649 1216.86,709.055 1217.42,695.646 1217.98,726.41 1218.54,722.662 1219.1,724.703 1219.66,707.351 1220.22,674.146 1220.78,675.919 1221.34,693.173 1221.89,674.292 1222.45,691.885 1223.01,658.645 1223.57,641.72 1224.13,696.191 1224.69,696.201 1225.25,725.458 1225.81,720.532 1226.37,731.833 1226.93,759.304 1227.49,756.003 1228.05,783.298 1228.61,793.285 1229.17,835.464 1229.72,858.751 1230.28,832.152 1230.84,836.18 1231.4,813.28 1231.96,788.924 1232.52,766.674 1233.08,728.935 1233.64,740.002 1234.2,770.272 1234.76,761.685 1235.32,760.111 1235.88,725.373 1236.44,724.978 1236.99,689.599 1237.55,672.015 1238.11,686.611 1238.67,685.076 1239.23,672.569 1239.79,689.592 1240.35,687.113 1240.91,654.306 1241.47,687.819 1242.03,657.442 1242.59,658.592 1243.15,725.631 1243.71,743.799 1244.26,739.937 1244.82,686.568 1245.38,636.125 1245.94,608.051 1246.5,580.66 1247.06,586.873 1247.62,658.972 1248.18,693.129 1248.74,678.237 1249.3,679.338 1249.86,659.244 1250.42,691.609 1250.98,675.566 1251.54,691.89 1252.09,656.662 1252.65,657.107 1253.21,624.231 1253.77,625.22 1254.33,624.93 1254.89,609.524 1255.45,583.98 1256.01,623.554 1256.57,643.872 1257.13,729.298 1257.69,711.618 1258.25,729.669 1258.81,729.311 1259.36,741.423 1259.92,739.992 1260.48,718.836 1261.04,699.998 1261.6,700.279 1262.16,696.858 1262.72,710.444 1263.28,692.423 1263.84,680.278 1264.4,662.319 1264.96,662.841 1265.52,710.374 1266.08,727.389 1266.63,743.723 1267.19,773.132 1267.75,769.599 1268.31,747.553 1268.87,713.434 1269.43,746.78 1269.99,742.049 1270.55,757.61 1271.11,768.291 1271.67,763.33 1272.23,774.496 1272.79,798.733 1273.35,792.092 1273.91,818.038 1274.46,776.5 1275.02,736.581 1275.58,750.743 1276.14,715.343 1276.7,725.854 1277.26,738.551 1277.82,754.457 1278.38,735.524 1278.94,718.446 1279.5,717.562 1280.06,666.942 1280.62,648.745 1281.18,667.133 1281.73,669.389 1282.29,653.986 1282.85,640.752 1283.41,643.557 1283.97,662.661 1284.53,660.032 1285.09,679.752 1285.65,663.101 1286.21,631.881 1286.77,651.823 1287.33,619.174 1287.89,641.382 1288.45,676.516 1289,694.887 1289.56,694.746 1290.12,677.142 1290.68,696.903 1291.24,696.373 1291.8,693.383 1292.36,695.65 1292.92,730.382 1293.48,748.24 1294.04,727.299 1294.6,745.357 1295.16,757.494 1295.72,786.306 1296.28,731.964 1296.83,731.626 1297.39,696.328 1297.95,673.804 1298.51,706.647 1299.07,706.5 1299.63,705.619 1300.19,708.718 1300.75,695.336 1301.31,712.241 1301.87,726.682 1302.43,720.584 1302.99,700.054 1303.55,715.757 1304.1,717.409 1304.66,687.286 1305.22,702.33 1305.78,667.655 1306.34,669.587 1306.9,656.485 1307.46,658.391 1308.02,673.912 1308.58,690 1309.14,675.259 1309.7,692.602 1310.26,692.332 1310.82,675.546 1311.38,647.728 1311.93,665.688 1312.49,668.465 1313.05,697.685 1313.61,711.626 1314.17,713.953 1314.73,665.846 1315.29,680.132 1315.85,711.48 1316.41,726.034 1316.97,713.018 1317.53,695.302 1318.09,696.208 1318.65,694.95 1319.2,662.629 1319.76,647.525 1320.32,598.391 1320.88,600.79 1321.44,616.646 1322,619.96 1322.56,604.56 1323.12,621.796 1323.68,638.98 1324.24,672.732 1324.8,659.254 1325.36,662.764 1325.92,648.432 1326.47,616.414 1327.03,650.81 1327.59,651.42 1328.15,652.203 1328.71,639.859 1329.27,675.607 1329.83,673.726 1330.39,675.066 1330.95,658.257 1331.51,659.616 1332.07,662.009 1332.63,713.928 1333.19,757.956 1333.75,739.964 1334.3,738.489 1334.86,733 1335.42,729.438 1335.98,730.469 1336.54,728.34 1337.1,697.397 1337.66,680.619 1338.22,630.877 1338.78,616.265 1339.34,587.578 1339.9,610.385 1340.46,616.192 1341.02,624.493 1341.57,642.908 1342.13,660.777 1342.69,663.058 1343.25,667.444 1343.81,667.093 1344.37,716.46 1344.93,747.989 1345.49,743.817 1346.05,740.602 1346.61,724.273 1347.17,757.781 1347.73,772.045 1348.29,737.231 1348.84,748.022 1349.4,746.148 1349.96,739.373 1350.52,718.437 1351.08,685.98 1351.64,682.881 1352.2,665.981 1352.76,618.576 1353.32,624.94 1353.88,662.446 1354.44,648.506 1355,614.941 1355.56,625.171 1356.12,611.542 1356.67,651.156 1357.23,650.994 1357.79,688.464 1358.35,719.929 1358.91,714.794 1359.47,714.742 1360.03,745.424 1360.59,730.698 1361.15,718.266 1361.71,731.049 1362.27,729.948 1362.83,727.453 1363.39,741.303 1363.94,736.941 1364.5,738.027 1365.06,734.999 1365.62,732.983 1366.18,729.456 1366.74,710.114 1367.3,712.791 1367.86,709.07 1368.42,677.097 1368.98,678.991 1369.54,649.146 1370.1,651.282 1370.66,670.401 1371.21,700.599 1371.77,682.029 1372.33,666.541 1372.89,651.564 1373.45,647.249 1374.01,649.233 1374.57,637.84 1375.13,640.394 1375.69,676.146 1376.25,707.829 1376.81,721.639 1377.37,718.934 1377.93,685.285 1378.49,666.848 1379.04,669.312 1379.6,653.096 1380.16,653.911 1380.72,625.028 1381.28,645.645 1381.84,697.392 1382.4,712.708 1382.96,713.445 1383.52,728.135 1384.08,723.696 1384.64,736.718 1385.2,753.658 1385.76,685.866 1386.31,700.833 1386.87,731.48 1387.43,743.241 1387.99,707.973 1388.55,725.329 1389.11,709.191 1389.67,711.327 1390.23,711.871 1390.79,725.947 1391.35,709.925 1391.91,723.367 1392.47,736.455 1393.03,715.669 1393.58,681.979 1394.14,686.734 1394.7,685.519 1395.26,703.409 1395.82,735.291 1396.38,720.865 1396.94,706.19 1397.5,707.858 1398.06,707.517 1398.62,741.723 1399.18,738.207 1399.74,734.354 1400.3,717.356 1400.86,717.76 1401.41,715.424 1401.97,712.902 1402.53,695.981 1403.09,695.75 1403.65,713.223 1404.21,744.048 1404.77,725.768 1405.33,726.502 1405.89,706.991 1406.45,701.442 1407.01,683.518 1407.57,732.985 1408.13,693.355 1408.68,672.887 1409.24,673.984 1409.8,689.114 1410.36,688.877 1410.92,674.842 1411.48,672.016 1412.04,689.918 1412.6,677.789 1413.16,661.193 1413.72,663.713 1414.28,680.987 1414.84,680.845 1415.4,684.324 1415.95,682.889 1416.51,652.602 1417.07,715.494 1417.63,725.212 1418.19,726.709 1418.75,754.407 1419.31,782.69 1419.87,778.343 1420.43,789.843 1420.99,772.745 1421.55,798.242 1422.11,790.856 1422.67,768.379 1423.23,761.002 1423.78,760.117 1424.34,738.917 1424.9,751.773 1425.46,779.22 1426.02,741.254 1426.58,706.163 1427.14,720.438 1427.7,716.595 1428.26,682.861 1428.82,697.731 1429.38,731.308 1429.94,739.816 1430.5,721.665 1431.05,704.097 1431.61,687.398 1432.17,672.043 1432.73,705.536 1433.29,706.265 1433.85,686.887 1434.41,704.864 1434.97,735.503 1435.53,731.24 1436.09,789.413 1436.65,784.561 1437.21,776.309 1437.77,784.553 1438.33,697.524 1438.88,665.037 1439.44,634.528 1440,634.275 1440.56,649.24 1441.12,631.073 1441.68,653.624 1442.24,617.571 1442.8,571.067 1443.36,593.527 1443.92,629.168 1444.48,631.508 1445.04,648.956 1445.6,634.831 1446.15,623.492 1446.71,595.742 1447.27,614.734 1447.83,601.984 1448.39,606.344 1448.95,627.123 1449.51,597.765 1450.07,588.015 1450.63,643.132 1451.19,597.96 1451.75,602.443 1452.31,671.199 1452.87,623.654 1453.42,628.566 1453.98,584.778 1454.54,588.261 1455.1,639.707 1455.66,640.185 1456.22,643.357 1456.78,649.02 1457.34,648.86 1457.9,616.876 1458.46,635.562 1459.02,626.703 1459.58,611.797 1460.14,629.182 1460.7,614.787 1461.25,631.832 1461.81,634.237 1462.37,652.09 1462.93,638.636 1463.49,625.606 1464.05,644.454 1464.61,632.968 1465.17,635.076 1465.73,635.957 1466.29,652.803 1466.85,654.652 1467.41,675.388 1467.97,723.412 1468.52,738.255 1469.08,686.102 1469.64,703.068 1470.2,717.822 1470.76,716.795 1471.32,714.915 1471.88,728.569 1472.44,713.92 1473,680.063 1473.56,664.38 1474.12,650.927 1474.68,652.979 1475.24,669.058 1475.79,673.246 1476.35,692.376 1476.91,694.512 1477.47,695.96 1478.03,682.591 1478.59,666.451 1479.15,667.794 1479.71,698.163 1480.27,667.19 1480.83,699.61 1481.39,712.865 1481.95,729.602 1482.51,711.045 1483.07,709.985 1483.62,742.782 1484.18,769.033 1484.74,796.485 1485.3,775.179 1485.86,756.375 1486.42,752.527 1486.98,764.228 1487.54,744.062 1488.1,710.813 1488.66,692.71 1489.22,691.638 1489.78,687.854 1490.34,686.62 1490.89,687.922 1491.45,683.564 1492.01,650.32 1492.57,651.34 1493.13,636.085 1493.69,638.062 1494.25,638.146 1494.81,642.183 1495.37,645.175 1495.93,630.765 1496.49,633.738 1497.05,656.635 1497.61,644.303 1498.16,632.681 1498.72,637.883 1499.28,638.86 1499.84,645.482 1500.4,645.293 1500.96,646.171 1501.52,649.13 1502.08,652.595 1502.64,667.908 1503.2,667.525 1503.76,686.483 1504.32,672.853 1504.88,671.88 1505.44,670.189 1505.99,654.812 1506.55,669.424 1507.11,656.438 1507.67,643.008 1508.23,649.28 1508.79,666.471 1509.35,685.633 1509.91,719.919 1510.47,686.655 1511.03,652.88 1511.59,605.449 1512.15,592.25 1512.71,600.977 1513.26,618.635 1513.82,636.533 1514.38,652.78 1514.94,672.539 1515.5,660.881 1516.06,678.396 1516.62,691.257 1517.18,758.045 1517.74,752.81 1518.3,747.694 1518.86,759.671 1519.42,692.64 1519.98,676.92 1520.53,646.605 1521.09,631.023 1521.65,635.458 1522.21,640.601 1522.77,640.901 1523.33,644.943 1523.89,680.845 1524.45,632.692 1525.01,651.87 1525.57,668.137 1526.13,686.512 1526.69,686.687 1527.25,721.48 1527.81,702.27 1528.36,684.713 1528.92,683.983 1529.48,698.206 1530.04,697.888 1530.6,694.662 1531.16,672.821 1531.72,637.899 1532.28,621.775 1532.84,626.035 1533.4,613.089 1533.96,620.265 1534.52,638.511 1535.08,639.328 1535.63,625.39 1536.19,608.064 1536.75,625.691 1537.31,644.928 1537.87,597.766 1538.43,636.546 1538.99,624.079 1539.55,627.724 1540.11,582.2 1540.67,539.175 1541.23,598.92 1541.79,601.95 1542.35,593.066 1542.9,599.153 1543.46,622.546 1544.02,627.113 1544.58,646.455 1545.14,680.545 1545.7,696.908 1546.26,698.505 1546.82,717.708 1547.38,711.595 1547.94,710.795 1548.5,708.149 1549.06,692.553 1549.62,642.07 1550.18,645.664 1550.73,646.475 1551.29,664.657 1551.85,620.837 1552.41,591.2 1552.97,625.531 1553.53,631.918 1554.09,649.286 1554.65,651.235 1555.21,652.572 1555.77,720.77 1556.33,704.162 1556.89,719.222 1557.45,732.024 1558,729.233 1558.56,759.547 1559.12,753.744 1559.68,751.215 1560.24,750.639 1560.8,749.574 1561.36,700.908 1561.92,699.074 1562.48,681.37 1563.04,666.107 1563.6,668.226 1564.16,686.514 1564.72,671.806 1565.28,641.933 1565.83,630.218 1566.39,633.814 1566.95,656.282 1567.51,675.913 1568.07,678.034 1568.63,679.197 1569.19,630.021 1569.75,654.095 1570.31,674.421 1570.87,673.711 1571.43,689.581 1571.99,737.362 1572.55,705.005 1573.1,703.459 1573.66,721.044 1574.22,700.26 1574.78,681.243 1575.34,715.001 1575.9,715.184 1576.46,717.259 1577.02,698.738 1577.58,717.152 1578.14,716.89 1578.7,729.703 1579.26,757.39 1579.82,751.541 1580.37,734.38 1580.93,730.763 1581.49,727.273 1582.05,719.971 1582.61,717.118 1583.17,682.987 1583.73,683.376 1584.29,732.234 1584.85,699.508 1585.41,682.719 1585.97,667.74 1586.53,683.374 1587.09,665.684 1587.65,684.492 1588.2,698.404 1588.76,682.66 1589.32,698.398 1589.88,712.194 1590.44,713.479 1591,709.858 1591.56,725.455 1592.12,710.396 1592.68,757.315 1593.24,737.199 1593.8,702.908 1594.36,672.153 1594.92,674.022 1595.47,658.947 1596.03,612.691 1596.59,615.717 1597.15,655.141 1597.71,658.085 1598.27,677.826 1598.83,664.27 1599.39,700.266 1599.95,695.342 1600.51,681.255 1601.07,668 1601.63,671.682 1602.19,689.669 1602.74,671.575 1603.3,671.189 1603.86,656.57 1604.42,623.251 1604.98,611.639 1605.54,616.81 1606.1,666.479 1606.66,701.181 1607.22,717.602 1607.78,713.465 1608.34,667.335 1608.9,629.844 1609.46,633.794 1610.02,649.243 1610.57,637.268 1611.13,639.21 1611.69,642.316 1612.25,663.2 1612.81,681.438 1613.37,715.906 1613.93,716.567 1614.49,687.177 1615.05,686.076 1615.61,665.065 1616.17,661.388 1616.73,698.762 1617.29,715.114 1617.84,682.547 1618.4,665.392 1618.96,648.558 1619.52,633.366 1620.08,653.093 1620.64,653.054 1621.2,623.779 1621.76,628.403 1622.32,615.59 1622.88,605.08 1623.44,610.081 1624,615.7 1624.56,617.726 1625.11,588.88 1625.67,595.442 1626.23,584.919 1626.79,620.567 1627.35,624.753 1627.91,659.927 1628.47,663.143 1629.03,666.958 1629.59,684.624 1630.15,702.703 1630.71,701.393 1631.27,701.427 1631.83,714.527 1632.39,717.298 1632.94,729.165 1633.5,724.308 1634.06,707.684 1634.62,706.961 1635.18,769.767 1635.74,762.605 1636.3,759.591 1636.86,752.762 1637.42,733.69 1637.98,745.75 1638.54,692.024 1639.1,689.87 1639.66,690.169 1640.21,707.779 1640.77,706.235 1641.33,701.27 1641.89,687.394 1642.45,685.348 1643.01,682.875 1643.57,680.862 1644.13,647.423 1644.69,652.073 1645.25,670.989 1645.81,652.189 1646.37,671.761 1646.93,656.081 1647.48,704.632 1648.04,685.58 1648.6,700.59 1649.16,699.939 1649.72,699.615 1650.28,698.333 1650.84,682.873 1651.4,666.173 1651.96,668.423 1652.52,672.47 1653.08,669.58 1653.64,733.12 1654.2,746.008 1654.76,761.651 1655.31,769.204 1655.87,780.717 1656.43,802.8 1656.99,828.853 1657.55,821.78 1658.11,796.453 1658.67,791.371 1659.23,790.166 1659.79,783.339 1660.35,744.422 1660.91,724.772 1661.47,705.019 1662.03,702.344 1662.58,697.708 1663.14,713.633 1663.7,697.674 1664.26,710.669 1664.82,706.946 1665.38,705.271 1665.94,671.5 1666.5,672.512 1667.06,671.956 1667.62,671.677 1668.18,623.921 1668.74,627.205 1669.3,629.522 1669.85,648.962 1670.41,648.789 1670.97,666.347 1671.53,668.182 1672.09,669.201 1672.65,635.04 1673.21,652.508 1673.77,653.06 1674.33,638.413 1674.89,688.758 1675.45,688.449 1676.01,719.638 1676.57,731.238 1677.13,711.889 1677.68,693.926 1678.24,711.416 1678.8,711.57 1679.36,707.468 1679.92,690.88 1680.48,705.42 1681.04,719.139 1681.6,701.338 1682.16,699.925 1682.72,699.258 1683.28,631.296 1683.84,598.413 1684.4,603.506 1684.95,621.79 1685.51,630.138 1686.07,634.2 1686.63,620.114 1687.19,653.761 1687.75,667.444 1688.31,670.592 1688.87,666.88 1689.43,688.165 1689.99,653.406 1690.55,658.907 1691.11,639.014 1691.67,640.683 1692.23,660.756 1692.78,680.153 1693.34,678.689 1693.9,680.329 1694.46,679.881 1695.02,727.076 1695.58,711.427 1696.14,694.894 1696.7,710.207 1697.26,739.244 1697.82,720.47 1698.38,705.576 1698.94,719.445 1699.5,748.999 1700.05,748.265 1700.61,749.262 1701.17,761.818 1701.73,777.361 1702.29,786.253 1702.85,781.898 1703.41,793.354 1703.97,771.36 1704.53,753.532 1705.09,733.365 1705.65,729.229 1706.21,761.232 1706.77,742.289 1707.32,791.12 1707.88,801.701 1708.44,791.918 1709,768.52 1709.56,745.668 1710.12,755.91 1710.68,767.837 1711.24,760.012 1711.8,755.645 1712.36,736.581 1712.92,717.137 1713.48,712.239 1714.04,742.117 1714.6,755.648 1715.15,753.089 1715.71,800.96 1716.27,810.583 1716.83,807.217 1717.39,785.26 1717.95,779.75 1718.51,793.588 1719.07,789.503 1719.63,770.147 1720.19,748.673 1720.75,744.094 1721.31,708.281 1721.87,704.941 1722.42,704.144 1722.98,735.281 1723.54,751.546 1724.1,728.476 1724.66,711.079 1725.22,741.005 1725.78,738.603 1726.34,734.161 1726.9,730.958 1727.46,708.798 1728.02,676.009 1728.58,675.202 1729.14,675.929 1729.69,674.636 1730.25,687.114 1730.81,705.216 1731.37,685.936 1731.93,702.54 1732.49,702.748 1733.05,701.257 1733.61,684.027 1734.17,669.575 1734.73,675.232 1735.29,691.412 1735.85,705.279 1736.41,703.593 1736.97,717.598 1737.52,683.784 1738.08,731.664 1738.64,743.708 1739.2,721.905 1739.76,720.237 1740.32,700.678 1740.88,667.124 1741.44,667.687 1742,652.881 1742.56,639.467 1743.12,608.174 1743.68,581.209 1744.24,571.596 1744.79,561.167 1745.35,567.834 1745.91,540.383 1746.47,531.553 1747.03,540.854 1747.59,514.224 1748.15,538.485 1748.71,561.892 1749.27,538.357 1749.83,563.714 1750.39,617.082 1750.95,639.857 1751.51,643.287 1752.06,648.266 1752.62,650.246 1753.18,656.041 1753.74,640.494 1754.3,645.977 1754.86,651.51 1755.42,656.33 1755.98,675.208 1756.54,658.396 1757.1,641.523 1757.66,662.626 1758.22,710.491 1758.78,692.084 1759.34,677.568 1759.89,693.281 1760.45,674.554 1761.01,693.141 1761.57,678.419 1762.13,699.407 1762.69,715.042 1763.25,699.419 1763.81,687.116 1764.37,702.508 1764.93,701.689 1765.49,685.304 1766.05,668.551 1766.61,702.385 1767.16,702.073 1767.72,720.759 1768.28,719.731 1768.84,747.658 1769.4,775.156 1769.96,784.587 1770.52,716.314 1771.08,730.544 1771.64,760.801 1772.2,755.806 1772.76,722.725 1773.32,750.186 1773.88,676.71 1774.43,676.36 1774.99,708.589 1775.55,737.908 1776.11,730.659 1776.67,725.4 1777.23,722.621 1777.79,738.752 1778.35,700.255 1778.91,713.205 1779.47,672.88 1780.03,689.776 1780.59,702.792 1781.15,701.019 1781.71,699.564 1782.26,662.486 1782.82,664.651 1783.38,681.739 1783.94,651.543 1784.5,620.44 1785.06,587.623 1785.62,608.547 1786.18,614.818 1786.74,600.601 1787.3,604.423 1787.86,639.567 1788.42,643.705 1788.98,693.687 1789.53,662.754 1790.09,613.947 1790.65,587.408 1791.21,620.496 1791.77,624.873 1792.33,627.562 1792.89,630.031 1793.45,649.395 1794.01,617.185 1794.57,638.859 1795.13,645.188 1795.69,632.281 1796.25,638.535 1796.8,621.648 1797.36,626.969 1797.92,648.704 1798.48,635.041 1799.04,653.549 1799.6,673.642 1800.16,677.377 1800.72,692.683 1801.28,691.956 1801.84,690.874 1802.4,705.772 1802.96,686.225 1803.52,668.836 1804.08,655.984 1804.63,676.926 1805.19,678.35 1805.75,677.938 1806.31,677.655 1806.87,692.142 1807.43,709.629 1807.99,709.963 1808.55,704.154 1809.11,702.064 1809.67,718.807 1810.23,735.951 1810.79,766.516 1811.35,728.826 1811.9,757.951 1812.46,753.097 1813.02,766.422 1813.58,744.39 1814.14,711.504 1814.7,695.456 1815.26,714.712 1815.82,712.725 1816.38,743.92 1816.94,722.812 1817.5,721.127 1818.06,734.341 1818.62,749.83 1819.18,748.587 1819.73,759.895 1820.29,757.697 1820.85,785.393 1821.41,765.183 1821.97,729.56 1822.53,755.285 1823.09,754.068 1823.65,750.711 1824.21,715.475 1824.77,696.156 1825.33,691 1825.89,641.382 1826.45,677.589 1827,662.736 1827.56,666.223 1828.12,697.518 1828.68,678.361 1829.24,711.429 1829.8,663.509 1830.36,679.462 1830.92,698.411 1831.48,696.196 1832.04,663.72 1832.6,666.864 1833.16,653.819 1833.72,654.366 1834.27,657.223 1834.83,625.455 1835.39,628.599 1835.95,629.894 1836.51,635.582 1837.07,637.58 1837.63,655.968 1838.19,660.044 \"/>\n<path clip-path=\"url(#clip803)\" d=\"M720.247 690.53 L720.806 690.53 L721.365 690.53 L721.924 690.53 L722.484 690.53 L723.043 690.53 L723.602 690.53 L724.161 690.53 L724.721 690.53 L725.28 690.53 L725.839 690.53 L726.398 690.53 L726.958 690.53 L727.517 690.53 L728.076 690.53 L728.635 690.53 L729.195 690.53 L729.754 690.53 L730.313 690.53 L730.872 690.53 L731.432 690.53 L731.991 690.53 L732.55 690.53 L733.109 690.53 L733.669 690.53 L734.228 690.53 L734.787 690.53 L735.346 690.53 L735.906 690.53 L736.465 690.53 L737.024 690.53 L737.583 690.53 L738.143 690.53 L738.702 690.53 L739.261 690.53 L739.82 690.53 L740.38 690.53 L740.939 690.53 L741.498 690.53 L742.057 690.53 L742.617 690.53 L743.176 690.53 L743.735 690.53 L744.294 690.53 L744.854 690.53 L745.413 690.53 L745.972 690.53 L746.531 690.53 L747.091 690.53 L747.65 690.53 L748.209 690.53 L748.768 690.53 L749.328 690.53 L749.887 690.53 L750.446 690.53 L751.005 690.53 L751.565 690.53 L752.124 690.53 L752.683 690.53 L753.242 690.53 L753.802 690.53 L754.361 690.53 L754.92 690.53 L755.479 690.53 L756.039 690.53 L756.598 690.53 L757.157 690.53 L757.716 690.53 L758.276 690.53 L758.835 690.53 L759.394 690.53 L759.953 690.53 L760.513 690.53 L761.072 690.53 L761.631 690.53 L762.19 690.53 L762.75 690.53 L763.309 690.53 L763.868 690.53 L764.427 690.53 L764.987 690.53 L765.546 690.53 L766.105 690.53 L766.664 690.53 L767.224 690.53 L767.783 690.53 L768.342 690.53 L768.901 690.53 L769.461 690.53 L770.02 690.53 L770.579 690.53 L771.138 690.53 L771.698 690.53 L772.257 690.53 L772.816 690.53 L773.375 690.53 L773.935 690.53 L774.494 690.53 L775.053 690.53 L775.612 690.53 L776.172 690.53 L776.731 690.53 L777.29 690.53 L777.849 690.53 L778.409 690.53 L778.968 690.53 L779.527 690.53 L780.086 690.53 L780.646 690.53 L781.205 690.53 L781.764 690.53 L782.323 690.53 L782.883 690.53 L783.442 690.53 L784.001 690.53 L784.56 690.53 L785.12 690.53 L785.679 690.53 L786.238 690.53 L786.797 690.53 L787.357 690.53 L787.916 690.53 L788.475 690.53 L789.034 690.53 L789.594 690.53 L790.153 690.53 L790.712 690.53 L791.271 690.53 L791.831 690.53 L792.39 690.53 L792.949 690.53 L793.508 690.53 L794.068 690.53 L794.627 690.53 L795.186 690.53 L795.745 690.53 L796.305 690.53 L796.864 690.53 L797.423 690.53 L797.982 690.53 L798.542 690.53 L799.101 690.53 L799.66 690.53 L800.219 690.53 L800.779 690.53 L801.338 690.53 L801.897 690.53 L802.456 690.53 L803.016 690.53 L803.575 690.53 L804.134 690.53 L804.693 690.53 L805.253 690.53 L805.812 690.53 L806.371 690.53 L806.931 690.53 L807.49 690.53 L808.049 690.53 L808.608 690.53 L809.168 690.53 L809.727 690.53 L810.286 690.53 L810.845 690.53 L811.405 690.53 L811.964 690.53 L812.523 690.53 L813.082 690.53 L813.642 690.53 L814.201 690.53 L814.76 690.53 L815.319 690.53 L815.879 690.53 L816.438 690.53 L816.997 690.53 L817.556 690.53 L818.116 690.53 L818.675 690.53 L819.234 690.53 L819.793 690.53 L820.353 690.53 L820.912 690.53 L821.471 690.53 L822.03 690.53 L822.59 690.53 L823.149 690.53 L823.708 690.53 L824.267 690.53 L824.827 690.53 L825.386 690.53 L825.945 690.53 L826.504 690.53 L827.064 690.53 L827.623 690.53 L828.182 690.53 L828.741 690.53 L829.301 690.53 L829.86 690.53 L830.419 690.53 L830.978 690.53 L831.538 690.53 L832.097 690.53 L832.656 690.53 L833.215 690.53 L833.775 690.53 L834.334 690.53 L834.893 690.53 L835.452 690.53 L836.012 690.53 L836.571 690.53 L837.13 690.53 L837.689 690.53 L838.249 690.53 L838.808 690.53 L839.367 690.53 L839.926 690.53 L840.486 690.53 L841.045 690.53 L841.604 690.53 L842.163 690.53 L842.723 690.53 L843.282 690.53 L843.841 690.53 L844.4 690.53 L844.96 690.53 L845.519 690.53 L846.078 690.53 L846.637 690.53 L847.197 690.53 L847.756 690.53 L848.315 690.53 L848.874 690.53 L849.434 690.53 L849.993 690.53 L850.552 690.53 L851.111 690.53 L851.671 690.53 L852.23 690.53 L852.789 690.53 L853.348 690.53 L853.908 690.53 L854.467 690.53 L855.026 690.53 L855.585 690.53 L856.145 690.53 L856.704 690.53 L857.263 690.53 L857.822 690.53 L858.382 690.53 L858.941 690.53 L859.5 690.53 L860.059 690.53 L860.619 690.53 L861.178 690.53 L861.737 690.53 L862.296 690.53 L862.856 690.53 L863.415 690.53 L863.974 690.53 L864.533 690.53 L865.093 690.53 L865.652 690.53 L866.211 690.53 L866.77 690.53 L867.33 690.53 L867.889 690.53 L868.448 690.53 L869.007 690.53 L869.567 690.53 L870.126 690.53 L870.685 690.53 L871.244 690.53 L871.804 690.53 L872.363 690.53 L872.922 690.53 L873.481 690.53 L874.041 690.53 L874.6 690.53 L875.159 690.53 L875.718 690.53 L876.278 690.53 L876.837 690.53 L877.396 690.53 L877.955 690.53 L878.515 690.53 L879.074 690.53 L879.633 690.53 L880.192 690.53 L880.752 690.53 L881.311 690.53 L881.87 690.53 L882.429 690.53 L882.989 690.53 L883.548 690.53 L884.107 690.53 L884.666 690.53 L885.226 690.53 L885.785 690.53 L886.344 690.53 L886.903 690.53 L887.463 690.53 L888.022 690.53 L888.581 690.53 L889.14 690.53 L889.7 690.53 L890.259 690.53 L890.818 690.53 L891.377 690.53 L891.937 690.53 L892.496 690.53 L893.055 690.53 L893.614 690.53 L894.174 690.53 L894.733 690.53 L895.292 690.53 L895.851 690.53 L896.411 690.53 L896.97 690.53 L897.529 690.53 L898.088 690.53 L898.648 690.53 L899.207 690.53 L899.766 690.53 L900.325 690.53 L900.885 690.53 L901.444 690.53 L902.003 690.53 L902.562 690.53 L903.122 690.53 L903.681 690.53 L904.24 690.53 L904.799 690.53 L905.359 690.53 L905.918 690.53 L906.477 690.53 L907.036 690.53 L907.596 690.53 L908.155 690.53 L908.714 690.53 L909.273 690.53 L909.833 690.53 L910.392 690.53 L910.951 690.53 L911.51 690.53 L912.07 690.53 L912.629 690.53 L913.188 690.53 L913.747 690.53 L914.307 690.53 L914.866 690.53 L915.425 690.53 L915.984 690.53 L916.544 690.53 L917.103 690.53 L917.662 690.53 L918.221 690.53 L918.781 690.53 L919.34 690.53 L919.899 690.53 L920.458 690.53 L921.018 690.53 L921.577 690.53 L922.136 690.53 L922.695 690.53 L923.255 690.53 L923.814 690.53 L924.373 690.53 L924.932 690.53 L925.492 690.53 L926.051 690.53 L926.61 690.53 L927.169 690.53 L927.729 690.53 L928.288 690.53 L928.847 690.53 L929.406 690.53 L929.966 690.53 L930.525 690.53 L931.084 690.53 L931.644 690.53 L932.203 690.53 L932.762 690.53 L933.321 690.53 L933.881 690.53 L934.44 690.53 L934.999 690.53 L935.558 690.53 L936.118 690.53 L936.677 690.53 L937.236 690.53 L937.795 690.53 L938.355 690.53 L938.914 690.53 L939.473 690.53 L940.032 690.53 L940.592 690.53 L941.151 690.53 L941.71 690.53 L942.269 690.53 L942.829 690.53 L943.388 690.53 L943.947 690.53 L944.506 690.53 L945.066 690.53 L945.625 690.53 L946.184 690.53 L946.743 690.53 L947.303 690.53 L947.862 690.53 L948.421 690.53 L948.98 690.53 L949.54 690.53 L950.099 690.53 L950.658 690.53 L951.217 690.53 L951.777 690.53 L952.336 690.53 L952.895 690.53 L953.454 690.53 L954.014 690.53 L954.573 690.53 L955.132 690.53 L955.691 690.53 L956.251 690.53 L956.81 690.53 L957.369 690.53 L957.928 690.53 L958.488 690.53 L959.047 690.53 L959.606 690.53 L960.165 690.53 L960.725 690.53 L961.284 690.53 L961.843 690.53 L962.402 690.53 L962.962 690.53 L963.521 690.53 L964.08 690.53 L964.639 690.53 L965.199 690.53 L965.758 690.53 L966.317 690.53 L966.876 690.53 L967.436 690.53 L967.995 690.53 L968.554 690.53 L969.113 690.53 L969.673 690.53 L970.232 690.53 L970.791 690.53 L971.35 690.53 L971.91 690.53 L972.469 690.53 L973.028 690.53 L973.587 690.53 L974.147 690.53 L974.706 690.53 L975.265 690.53 L975.824 690.53 L976.384 690.53 L976.943 690.53 L977.502 690.53 L978.061 690.53 L978.621 690.53 L979.18 690.53 L979.739 690.53 L980.298 690.53 L980.858 690.53 L981.417 690.53 L981.976 690.53 L982.535 690.53 L983.095 690.53 L983.654 690.53 L984.213 690.53 L984.772 690.53 L985.332 690.53 L985.891 690.53 L986.45 690.53 L987.009 690.53 L987.569 690.53 L988.128 690.53 L988.687 690.53 L989.246 690.53 L989.806 690.53 L990.365 690.53 L990.924 690.53 L991.483 690.53 L992.043 690.53 L992.602 690.53 L993.161 690.53 L993.72 690.53 L994.28 690.53 L994.839 690.53 L995.398 690.53 L995.957 690.53 L996.517 690.53 L997.076 690.53 L997.635 690.53 L998.194 690.53 L998.754 690.53 L999.313 690.53 L999.872 690.53 L1000.43 690.53 L1000.99 690.53 L1001.55 690.53 L1002.11 690.53 L1002.67 690.53 L1003.23 690.53 L1003.79 690.53 L1004.35 690.53 L1004.91 690.53 L1005.46 690.53 L1006.02 690.53 L1006.58 690.53 L1007.14 690.53 L1007.7 690.53 L1008.26 690.53 L1008.82 690.53 L1009.38 690.53 L1009.94 690.53 L1010.5 690.53 L1011.06 690.53 L1011.62 690.53 L1012.18 690.53 L1012.73 690.53 L1013.29 690.53 L1013.85 690.53 L1014.41 690.53 L1014.97 690.53 L1015.53 690.53 L1016.09 690.53 L1016.65 690.53 L1017.21 690.53 L1017.77 690.53 L1018.33 690.53 L1018.89 690.53 L1019.45 690.53 L1020.01 690.53 L1020.56 690.53 L1021.12 690.53 L1021.68 690.53 L1022.24 690.53 L1022.8 690.53 L1023.36 690.53 L1023.92 690.53 L1024.48 690.53 L1025.04 690.53 L1025.6 690.53 L1026.16 690.53 L1026.72 690.53 L1027.28 690.53 L1027.83 690.53 L1028.39 690.53 L1028.95 690.53 L1029.51 690.53 L1030.07 690.53 L1030.63 690.53 L1031.19 690.53 L1031.75 690.53 L1032.31 690.53 L1032.87 690.53 L1033.43 690.53 L1033.99 690.53 L1034.55 690.53 L1035.1 690.53 L1035.66 690.53 L1036.22 690.53 L1036.78 690.53 L1037.34 690.53 L1037.9 690.53 L1038.46 690.53 L1039.02 690.53 L1039.58 690.53 L1040.14 690.53 L1040.7 690.53 L1041.26 690.53 L1041.82 690.53 L1042.38 690.53 L1042.93 690.53 L1043.49 690.53 L1044.05 690.53 L1044.61 690.53 L1045.17 690.53 L1045.73 690.53 L1046.29 690.53 L1046.85 690.53 L1047.41 690.53 L1047.97 690.53 L1048.53 690.53 L1049.09 690.53 L1049.65 690.53 L1050.2 690.53 L1050.76 690.53 L1051.32 690.53 L1051.88 690.53 L1052.44 690.53 L1053 690.53 L1053.56 690.53 L1054.12 690.53 L1054.68 690.53 L1055.24 690.53 L1055.8 690.53 L1056.36 690.53 L1056.92 690.53 L1057.48 690.53 L1058.03 690.53 L1058.59 690.53 L1059.15 690.53 L1059.71 690.53 L1060.27 690.53 L1060.83 690.53 L1061.39 690.53 L1061.95 690.53 L1062.51 690.53 L1063.07 690.53 L1063.63 690.53 L1064.19 690.53 L1064.75 690.53 L1065.3 690.53 L1065.86 690.53 L1066.42 690.53 L1066.98 690.53 L1067.54 690.53 L1068.1 690.53 L1068.66 690.53 L1069.22 690.53 L1069.78 690.53 L1070.34 690.53 L1070.9 690.53 L1071.46 690.53 L1072.02 690.53 L1072.57 690.53 L1073.13 690.53 L1073.69 690.53 L1074.25 690.53 L1074.81 690.53 L1075.37 690.53 L1075.93 690.53 L1076.49 690.53 L1077.05 690.53 L1077.61 690.53 L1078.17 690.53 L1078.73 690.53 L1079.29 690.53 L1079.85 690.53 L1080.4 690.53 L1080.96 690.53 L1081.52 690.53 L1082.08 690.53 L1082.64 690.53 L1083.2 690.53 L1083.76 690.53 L1084.32 690.53 L1084.88 690.53 L1085.44 690.53 L1086 690.53 L1086.56 690.53 L1087.12 690.53 L1087.67 690.53 L1088.23 690.53 L1088.79 690.53 L1089.35 690.53 L1089.91 690.53 L1090.47 690.53 L1091.03 690.53 L1091.59 690.53 L1092.15 690.53 L1092.71 690.53 L1093.27 690.53 L1093.83 690.53 L1094.39 690.53 L1094.94 690.53 L1095.5 690.53 L1096.06 690.53 L1096.62 690.53 L1097.18 690.53 L1097.74 690.53 L1098.3 690.53 L1098.86 690.53 L1099.42 690.53 L1099.98 690.53 L1100.54 690.53 L1101.1 690.53 L1101.66 690.53 L1102.22 690.53 L1102.77 690.53 L1103.33 690.53 L1103.89 690.53 L1104.45 690.53 L1105.01 690.53 L1105.57 690.53 L1106.13 690.53 L1106.69 690.53 L1107.25 690.53 L1107.81 690.53 L1108.37 690.53 L1108.93 690.53 L1109.49 690.53 L1110.04 690.53 L1110.6 690.53 L1111.16 690.53 L1111.72 690.53 L1112.28 690.53 L1112.84 690.53 L1113.4 690.53 L1113.96 690.53 L1114.52 690.53 L1115.08 690.53 L1115.64 690.53 L1116.2 690.53 L1116.76 690.53 L1117.31 690.53 L1117.87 690.53 L1118.43 690.53 L1118.99 690.53 L1119.55 690.53 L1120.11 690.53 L1120.67 690.53 L1121.23 690.53 L1121.79 690.53 L1122.35 690.53 L1122.91 690.53 L1123.47 690.53 L1124.03 690.53 L1124.59 690.53 L1125.14 690.53 L1125.7 690.53 L1126.26 690.53 L1126.82 690.53 L1127.38 690.53 L1127.94 690.53 L1128.5 690.53 L1129.06 690.53 L1129.62 690.53 L1130.18 690.53 L1130.74 690.53 L1131.3 690.53 L1131.86 690.53 L1132.41 690.53 L1132.97 690.53 L1133.53 690.53 L1134.09 690.53 L1134.65 690.53 L1135.21 690.53 L1135.77 690.53 L1136.33 690.53 L1136.89 690.53 L1137.45 690.53 L1138.01 690.53 L1138.57 690.53 L1139.13 690.53 L1139.68 690.53 L1140.24 690.53 L1140.8 690.53 L1141.36 690.53 L1141.92 690.53 L1142.48 690.53 L1143.04 690.53 L1143.6 690.53 L1144.16 690.53 L1144.72 690.53 L1145.28 690.53 L1145.84 690.53 L1146.4 690.53 L1146.96 690.53 L1147.51 690.53 L1148.07 690.53 L1148.63 690.53 L1149.19 690.53 L1149.75 690.53 L1150.31 690.53 L1150.87 690.53 L1151.43 690.53 L1151.99 690.53 L1152.55 690.53 L1153.11 690.53 L1153.67 690.53 L1154.23 690.53 L1154.78 690.53 L1155.34 690.53 L1155.9 690.53 L1156.46 690.53 L1157.02 690.53 L1157.58 690.53 L1158.14 690.53 L1158.7 690.53 L1159.26 690.53 L1159.82 690.53 L1160.38 690.53 L1160.94 690.53 L1161.5 690.53 L1162.05 690.53 L1162.61 690.53 L1163.17 690.53 L1163.73 690.53 L1164.29 690.53 L1164.85 690.53 L1165.41 690.53 L1165.97 690.53 L1166.53 690.53 L1167.09 690.53 L1167.65 690.53 L1168.21 690.53 L1168.77 690.53 L1169.33 690.53 L1169.88 690.53 L1170.44 690.53 L1171 690.53 L1171.56 690.53 L1172.12 690.53 L1172.68 690.53 L1173.24 690.53 L1173.8 690.53 L1174.36 690.53 L1174.92 690.53 L1175.48 690.53 L1176.04 690.53 L1176.6 690.53 L1177.15 690.53 L1177.71 690.53 L1178.27 690.53 L1178.83 690.53 L1179.39 690.53 L1179.95 690.53 L1180.51 690.53 L1181.07 690.53 L1181.63 690.53 L1182.19 690.53 L1182.75 690.53 L1183.31 690.53 L1183.87 690.53 L1184.43 690.53 L1184.98 690.53 L1185.54 690.53 L1186.1 690.53 L1186.66 690.53 L1187.22 690.53 L1187.78 690.53 L1188.34 690.53 L1188.9 690.53 L1189.46 690.53 L1190.02 690.53 L1190.58 690.53 L1191.14 690.53 L1191.7 690.53 L1192.25 690.53 L1192.81 690.53 L1193.37 690.53 L1193.93 690.53 L1194.49 690.53 L1195.05 690.53 L1195.61 690.53 L1196.17 690.53 L1196.73 690.53 L1197.29 690.53 L1197.85 690.53 L1198.41 690.53 L1198.97 690.53 L1199.52 690.53 L1200.08 690.53 L1200.64 690.53 L1201.2 690.53 L1201.76 690.53 L1202.32 690.53 L1202.88 690.53 L1203.44 690.53 L1204 690.53 L1204.56 690.53 L1205.12 690.53 L1205.68 690.53 L1206.24 690.53 L1206.8 690.53 L1207.35 690.53 L1207.91 690.53 L1208.47 690.53 L1209.03 690.53 L1209.59 690.53 L1210.15 690.53 L1210.71 690.53 L1211.27 690.53 L1211.83 690.53 L1212.39 690.53 L1212.95 690.53 L1213.51 690.53 L1214.07 690.53 L1214.62 690.53 L1215.18 690.53 L1215.74 690.53 L1216.3 690.53 L1216.86 690.53 L1217.42 690.53 L1217.98 690.53 L1218.54 690.53 L1219.1 690.53 L1219.66 690.53 L1220.22 690.53 L1220.78 690.53 L1221.34 690.53 L1221.89 690.53 L1222.45 690.53 L1223.01 690.53 L1223.57 690.53 L1224.13 690.53 L1224.69 690.53 L1225.25 690.53 L1225.81 690.53 L1226.37 690.53 L1226.93 690.53 L1227.49 690.53 L1228.05 690.53 L1228.61 690.53 L1229.17 690.53 L1229.72 690.53 L1230.28 690.53 L1230.84 690.53 L1231.4 690.53 L1231.96 690.53 L1232.52 690.53 L1233.08 690.53 L1233.64 690.53 L1234.2 690.53 L1234.76 690.53 L1235.32 690.53 L1235.88 690.53 L1236.44 690.53 L1236.99 690.53 L1237.55 690.53 L1238.11 690.53 L1238.67 690.53 L1239.23 690.53 L1239.79 690.53 L1240.35 690.53 L1240.91 690.53 L1241.47 690.53 L1242.03 690.53 L1242.59 690.53 L1243.15 690.53 L1243.71 690.53 L1244.26 690.53 L1244.82 690.53 L1245.38 690.53 L1245.94 690.53 L1246.5 690.53 L1247.06 690.53 L1247.62 690.53 L1248.18 690.53 L1248.74 690.53 L1249.3 690.53 L1249.86 690.53 L1250.42 690.53 L1250.98 690.53 L1251.54 690.53 L1252.09 690.53 L1252.65 690.53 L1253.21 690.53 L1253.77 690.53 L1254.33 690.53 L1254.89 690.53 L1255.45 690.53 L1256.01 690.53 L1256.57 690.53 L1257.13 690.53 L1257.69 690.53 L1258.25 690.53 L1258.81 690.53 L1259.36 690.53 L1259.92 690.53 L1260.48 690.53 L1261.04 690.53 L1261.6 690.53 L1262.16 690.53 L1262.72 690.53 L1263.28 690.53 L1263.84 690.53 L1264.4 690.53 L1264.96 690.53 L1265.52 690.53 L1266.08 690.53 L1266.63 690.53 L1267.19 690.53 L1267.75 690.53 L1268.31 690.53 L1268.87 690.53 L1269.43 690.53 L1269.99 690.53 L1270.55 690.53 L1271.11 690.53 L1271.67 690.53 L1272.23 690.53 L1272.79 690.53 L1273.35 690.53 L1273.91 690.53 L1274.46 690.53 L1275.02 690.53 L1275.58 690.53 L1276.14 690.53 L1276.7 690.53 L1277.26 690.53 L1277.82 690.53 L1278.38 690.53 L1278.94 690.53 L1279.5 690.53 L1280.06 690.53 L1280.62 690.53 L1281.18 690.53 L1281.73 690.53 L1282.29 690.53 L1282.85 690.53 L1283.41 690.53 L1283.97 690.53 L1284.53 690.53 L1285.09 690.53 L1285.65 690.53 L1286.21 690.53 L1286.77 690.53 L1287.33 690.53 L1287.89 690.53 L1288.45 690.53 L1289 690.53 L1289.56 690.53 L1290.12 690.53 L1290.68 690.53 L1291.24 690.53 L1291.8 690.53 L1292.36 690.53 L1292.92 690.53 L1293.48 690.53 L1294.04 690.53 L1294.6 690.53 L1295.16 690.53 L1295.72 690.53 L1296.28 690.53 L1296.83 690.53 L1297.39 690.53 L1297.95 690.53 L1298.51 690.53 L1299.07 690.53 L1299.63 690.53 L1300.19 690.53 L1300.75 690.53 L1301.31 690.53 L1301.87 690.53 L1302.43 690.53 L1302.99 690.53 L1303.55 690.53 L1304.1 690.53 L1304.66 690.53 L1305.22 690.53 L1305.78 690.53 L1306.34 690.53 L1306.9 690.53 L1307.46 690.53 L1308.02 690.53 L1308.58 690.53 L1309.14 690.53 L1309.7 690.53 L1310.26 690.53 L1310.82 690.53 L1311.38 690.53 L1311.93 690.53 L1312.49 690.53 L1313.05 690.53 L1313.61 690.53 L1314.17 690.53 L1314.73 690.53 L1315.29 690.53 L1315.85 690.53 L1316.41 690.53 L1316.97 690.53 L1317.53 690.53 L1318.09 690.53 L1318.65 690.53 L1319.2 690.53 L1319.76 690.53 L1320.32 690.53 L1320.88 690.53 L1321.44 690.53 L1322 690.53 L1322.56 690.53 L1323.12 690.53 L1323.68 690.53 L1324.24 690.53 L1324.8 690.53 L1325.36 690.53 L1325.92 690.53 L1326.47 690.53 L1327.03 690.53 L1327.59 690.53 L1328.15 690.53 L1328.71 690.53 L1329.27 690.53 L1329.83 690.53 L1330.39 690.53 L1330.95 690.53 L1331.51 690.53 L1332.07 690.53 L1332.63 690.53 L1333.19 690.53 L1333.75 690.53 L1334.3 690.53 L1334.86 690.53 L1335.42 690.53 L1335.98 690.53 L1336.54 690.53 L1337.1 690.53 L1337.66 690.53 L1338.22 690.53 L1338.78 690.53 L1339.34 690.53 L1339.9 690.53 L1340.46 690.53 L1341.02 690.53 L1341.57 690.53 L1342.13 690.53 L1342.69 690.53 L1343.25 690.53 L1343.81 690.53 L1344.37 690.53 L1344.93 690.53 L1345.49 690.53 L1346.05 690.53 L1346.61 690.53 L1347.17 690.53 L1347.73 690.53 L1348.29 690.53 L1348.84 690.53 L1349.4 690.53 L1349.96 690.53 L1350.52 690.53 L1351.08 690.53 L1351.64 690.53 L1352.2 690.53 L1352.76 690.53 L1353.32 690.53 L1353.88 690.53 L1354.44 690.53 L1355 690.53 L1355.56 690.53 L1356.12 690.53 L1356.67 690.53 L1357.23 690.53 L1357.79 690.53 L1358.35 690.53 L1358.91 690.53 L1359.47 690.53 L1360.03 690.53 L1360.59 690.53 L1361.15 690.53 L1361.71 690.53 L1362.27 690.53 L1362.83 690.53 L1363.39 690.53 L1363.94 690.53 L1364.5 690.53 L1365.06 690.53 L1365.62 690.53 L1366.18 690.53 L1366.74 690.53 L1367.3 690.53 L1367.86 690.53 L1368.42 690.53 L1368.98 690.53 L1369.54 690.53 L1370.1 690.53 L1370.66 690.53 L1371.21 690.53 L1371.77 690.53 L1372.33 690.53 L1372.89 690.53 L1373.45 690.53 L1374.01 690.53 L1374.57 690.53 L1375.13 690.53 L1375.69 690.53 L1376.25 690.53 L1376.81 690.53 L1377.37 690.53 L1377.93 690.53 L1378.49 690.53 L1379.04 690.53 L1379.6 690.53 L1380.16 690.53 L1380.72 690.53 L1381.28 690.53 L1381.84 690.53 L1382.4 690.53 L1382.96 690.53 L1383.52 690.53 L1384.08 690.53 L1384.64 690.53 L1385.2 690.53 L1385.76 690.53 L1386.31 690.53 L1386.87 690.53 L1387.43 690.53 L1387.99 690.53 L1388.55 690.53 L1389.11 690.53 L1389.67 690.53 L1390.23 690.53 L1390.79 690.53 L1391.35 690.53 L1391.91 690.53 L1392.47 690.53 L1393.03 690.53 L1393.58 690.53 L1394.14 690.53 L1394.7 690.53 L1395.26 690.53 L1395.82 690.53 L1396.38 690.53 L1396.94 690.53 L1397.5 690.53 L1398.06 690.53 L1398.62 690.53 L1399.18 690.53 L1399.74 690.53 L1400.3 690.53 L1400.86 690.53 L1401.41 690.53 L1401.97 690.53 L1402.53 690.53 L1403.09 690.53 L1403.65 690.53 L1404.21 690.53 L1404.77 690.53 L1405.33 690.53 L1405.89 690.53 L1406.45 690.53 L1407.01 690.53 L1407.57 690.53 L1408.13 690.53 L1408.68 690.53 L1409.24 690.53 L1409.8 690.53 L1410.36 690.53 L1410.92 690.53 L1411.48 690.53 L1412.04 690.53 L1412.6 690.53 L1413.16 690.53 L1413.72 690.53 L1414.28 690.53 L1414.84 690.53 L1415.4 690.53 L1415.95 690.53 L1416.51 690.53 L1417.07 690.53 L1417.63 690.53 L1418.19 690.53 L1418.75 690.53 L1419.31 690.53 L1419.87 690.53 L1420.43 690.53 L1420.99 690.53 L1421.55 690.53 L1422.11 690.53 L1422.67 690.53 L1423.23 690.53 L1423.78 690.53 L1424.34 690.53 L1424.9 690.53 L1425.46 690.53 L1426.02 690.53 L1426.58 690.53 L1427.14 690.53 L1427.7 690.53 L1428.26 690.53 L1428.82 690.53 L1429.38 690.53 L1429.94 690.53 L1430.5 690.53 L1431.05 690.53 L1431.61 690.53 L1432.17 690.53 L1432.73 690.53 L1433.29 690.53 L1433.85 690.53 L1434.41 690.53 L1434.97 690.53 L1435.53 690.53 L1436.09 690.53 L1436.65 690.53 L1437.21 690.53 L1437.77 690.53 L1438.33 690.53 L1438.88 690.53 L1439.44 690.53 L1440 690.53 L1440.56 690.53 L1441.12 690.53 L1441.68 690.53 L1442.24 690.53 L1442.8 690.53 L1443.36 690.53 L1443.92 690.53 L1444.48 690.53 L1445.04 690.53 L1445.6 690.53 L1446.15 690.53 L1446.71 690.53 L1447.27 690.53 L1447.83 690.53 L1448.39 690.53 L1448.95 690.53 L1449.51 690.53 L1450.07 690.53 L1450.63 690.53 L1451.19 690.53 L1451.75 690.53 L1452.31 690.53 L1452.87 690.53 L1453.42 690.53 L1453.98 690.53 L1454.54 690.53 L1455.1 690.53 L1455.66 690.53 L1456.22 690.53 L1456.78 690.53 L1457.34 690.53 L1457.9 690.53 L1458.46 690.53 L1459.02 690.53 L1459.58 690.53 L1460.14 690.53 L1460.7 690.53 L1461.25 690.53 L1461.81 690.53 L1462.37 690.53 L1462.93 690.53 L1463.49 690.53 L1464.05 690.53 L1464.61 690.53 L1465.17 690.53 L1465.73 690.53 L1466.29 690.53 L1466.85 690.53 L1467.41 690.53 L1467.97 690.53 L1468.52 690.53 L1469.08 690.53 L1469.64 690.53 L1470.2 690.53 L1470.76 690.53 L1471.32 690.53 L1471.88 690.53 L1472.44 690.53 L1473 690.53 L1473.56 690.53 L1474.12 690.53 L1474.68 690.53 L1475.24 690.53 L1475.79 690.53 L1476.35 690.53 L1476.91 690.53 L1477.47 690.53 L1478.03 690.53 L1478.59 690.53 L1479.15 690.53 L1479.71 690.53 L1480.27 690.53 L1480.83 690.53 L1481.39 690.53 L1481.95 690.53 L1482.51 690.53 L1483.07 690.53 L1483.62 690.53 L1484.18 690.53 L1484.74 690.53 L1485.3 690.53 L1485.86 690.53 L1486.42 690.53 L1486.98 690.53 L1487.54 690.53 L1488.1 690.53 L1488.66 690.53 L1489.22 690.53 L1489.78 690.53 L1490.34 690.53 L1490.89 690.53 L1491.45 690.53 L1492.01 690.53 L1492.57 690.53 L1493.13 690.53 L1493.69 690.53 L1494.25 690.53 L1494.81 690.53 L1495.37 690.53 L1495.93 690.53 L1496.49 690.53 L1497.05 690.53 L1497.61 690.53 L1498.16 690.53 L1498.72 690.53 L1499.28 690.53 L1499.84 690.53 L1500.4 690.53 L1500.96 690.53 L1501.52 690.53 L1502.08 690.53 L1502.64 690.53 L1503.2 690.53 L1503.76 690.53 L1504.32 690.53 L1504.88 690.53 L1505.44 690.53 L1505.99 690.53 L1506.55 690.53 L1507.11 690.53 L1507.67 690.53 L1508.23 690.53 L1508.79 690.53 L1509.35 690.53 L1509.91 690.53 L1510.47 690.53 L1511.03 690.53 L1511.59 690.53 L1512.15 690.53 L1512.71 690.53 L1513.26 690.53 L1513.82 690.53 L1514.38 690.53 L1514.94 690.53 L1515.5 690.53 L1516.06 690.53 L1516.62 690.53 L1517.18 690.53 L1517.74 690.53 L1518.3 690.53 L1518.86 690.53 L1519.42 690.53 L1519.98 690.53 L1520.53 690.53 L1521.09 690.53 L1521.65 690.53 L1522.21 690.53 L1522.77 690.53 L1523.33 690.53 L1523.89 690.53 L1524.45 690.53 L1525.01 690.53 L1525.57 690.53 L1526.13 690.53 L1526.69 690.53 L1527.25 690.53 L1527.81 690.53 L1528.36 690.53 L1528.92 690.53 L1529.48 690.53 L1530.04 690.53 L1530.6 690.53 L1531.16 690.53 L1531.72 690.53 L1532.28 690.53 L1532.84 690.53 L1533.4 690.53 L1533.96 690.53 L1534.52 690.53 L1535.08 690.53 L1535.63 690.53 L1536.19 690.53 L1536.75 690.53 L1537.31 690.53 L1537.87 690.53 L1538.43 690.53 L1538.99 690.53 L1539.55 690.53 L1540.11 690.53 L1540.67 690.53 L1541.23 690.53 L1541.79 690.53 L1542.35 690.53 L1542.9 690.53 L1543.46 690.53 L1544.02 690.53 L1544.58 690.53 L1545.14 690.53 L1545.7 690.53 L1546.26 690.53 L1546.82 690.53 L1547.38 690.53 L1547.94 690.53 L1548.5 690.53 L1549.06 690.53 L1549.62 690.53 L1550.18 690.53 L1550.73 690.53 L1551.29 690.53 L1551.85 690.53 L1552.41 690.53 L1552.97 690.53 L1553.53 690.53 L1554.09 690.53 L1554.65 690.53 L1555.21 690.53 L1555.77 690.53 L1556.33 690.53 L1556.89 690.53 L1557.45 690.53 L1558 690.53 L1558.56 690.53 L1559.12 690.53 L1559.68 690.53 L1560.24 690.53 L1560.8 690.53 L1561.36 690.53 L1561.92 690.53 L1562.48 690.53 L1563.04 690.53 L1563.6 690.53 L1564.16 690.53 L1564.72 690.53 L1565.28 690.53 L1565.83 690.53 L1566.39 690.53 L1566.95 690.53 L1567.51 690.53 L1568.07 690.53 L1568.63 690.53 L1569.19 690.53 L1569.75 690.53 L1570.31 690.53 L1570.87 690.53 L1571.43 690.53 L1571.99 690.53 L1572.55 690.53 L1573.1 690.53 L1573.66 690.53 L1574.22 690.53 L1574.78 690.53 L1575.34 690.53 L1575.9 690.53 L1576.46 690.53 L1577.02 690.53 L1577.58 690.53 L1578.14 690.53 L1578.7 690.53 L1579.26 690.53 L1579.82 690.53 L1580.37 690.53 L1580.93 690.53 L1581.49 690.53 L1582.05 690.53 L1582.61 690.53 L1583.17 690.53 L1583.73 690.53 L1584.29 690.53 L1584.85 690.53 L1585.41 690.53 L1585.97 690.53 L1586.53 690.53 L1587.09 690.53 L1587.65 690.53 L1588.2 690.53 L1588.76 690.53 L1589.32 690.53 L1589.88 690.53 L1590.44 690.53 L1591 690.53 L1591.56 690.53 L1592.12 690.53 L1592.68 690.53 L1593.24 690.53 L1593.8 690.53 L1594.36 690.53 L1594.92 690.53 L1595.47 690.53 L1596.03 690.53 L1596.59 690.53 L1597.15 690.53 L1597.71 690.53 L1598.27 690.53 L1598.83 690.53 L1599.39 690.53 L1599.95 690.53 L1600.51 690.53 L1601.07 690.53 L1601.63 690.53 L1602.19 690.53 L1602.74 690.53 L1603.3 690.53 L1603.86 690.53 L1604.42 690.53 L1604.98 690.53 L1605.54 690.53 L1606.1 690.53 L1606.66 690.53 L1607.22 690.53 L1607.78 690.53 L1608.34 690.53 L1608.9 690.53 L1609.46 690.53 L1610.02 690.53 L1610.57 690.53 L1611.13 690.53 L1611.69 690.53 L1612.25 690.53 L1612.81 690.53 L1613.37 690.53 L1613.93 690.53 L1614.49 690.53 L1615.05 690.53 L1615.61 690.53 L1616.17 690.53 L1616.73 690.53 L1617.29 690.53 L1617.84 690.53 L1618.4 690.53 L1618.96 690.53 L1619.52 690.53 L1620.08 690.53 L1620.64 690.53 L1621.2 690.53 L1621.76 690.53 L1622.32 690.53 L1622.88 690.53 L1623.44 690.53 L1624 690.53 L1624.56 690.53 L1625.11 690.53 L1625.67 690.53 L1626.23 690.53 L1626.79 690.53 L1627.35 690.53 L1627.91 690.53 L1628.47 690.53 L1629.03 690.53 L1629.59 690.53 L1630.15 690.53 L1630.71 690.53 L1631.27 690.53 L1631.83 690.53 L1632.39 690.53 L1632.94 690.53 L1633.5 690.53 L1634.06 690.53 L1634.62 690.53 L1635.18 690.53 L1635.74 690.53 L1636.3 690.53 L1636.86 690.53 L1637.42 690.53 L1637.98 690.53 L1638.54 690.53 L1639.1 690.53 L1639.66 690.53 L1640.21 690.53 L1640.77 690.53 L1641.33 690.53 L1641.89 690.53 L1642.45 690.53 L1643.01 690.53 L1643.57 690.53 L1644.13 690.53 L1644.69 690.53 L1645.25 690.53 L1645.81 690.53 L1646.37 690.53 L1646.93 690.53 L1647.48 690.53 L1648.04 690.53 L1648.6 690.53 L1649.16 690.53 L1649.72 690.53 L1650.28 690.53 L1650.84 690.53 L1651.4 690.53 L1651.96 690.53 L1652.52 690.53 L1653.08 690.53 L1653.64 690.53 L1654.2 690.53 L1654.76 690.53 L1655.31 690.53 L1655.87 690.53 L1656.43 690.53 L1656.99 690.53 L1657.55 690.53 L1658.11 690.53 L1658.67 690.53 L1659.23 690.53 L1659.79 690.53 L1660.35 690.53 L1660.91 690.53 L1661.47 690.53 L1662.03 690.53 L1662.58 690.53 L1663.14 690.53 L1663.7 690.53 L1664.26 690.53 L1664.82 690.53 L1665.38 690.53 L1665.94 690.53 L1666.5 690.53 L1667.06 690.53 L1667.62 690.53 L1668.18 690.53 L1668.74 690.53 L1669.3 690.53 L1669.85 690.53 L1670.41 690.53 L1670.97 690.53 L1671.53 690.53 L1672.09 690.53 L1672.65 690.53 L1673.21 690.53 L1673.77 690.53 L1674.33 690.53 L1674.89 690.53 L1675.45 690.53 L1676.01 690.53 L1676.57 690.53 L1677.13 690.53 L1677.68 690.53 L1678.24 690.53 L1678.8 690.53 L1679.36 690.53 L1679.92 690.53 L1680.48 690.53 L1681.04 690.53 L1681.6 690.53 L1682.16 690.53 L1682.72 690.53 L1683.28 690.53 L1683.84 690.53 L1684.4 690.53 L1684.95 690.53 L1685.51 690.53 L1686.07 690.53 L1686.63 690.53 L1687.19 690.53 L1687.75 690.53 L1688.31 690.53 L1688.87 690.53 L1689.43 690.53 L1689.99 690.53 L1690.55 690.53 L1691.11 690.53 L1691.67 690.53 L1692.23 690.53 L1692.78 690.53 L1693.34 690.53 L1693.9 690.53 L1694.46 690.53 L1695.02 690.53 L1695.58 690.53 L1696.14 690.53 L1696.7 690.53 L1697.26 690.53 L1697.82 690.53 L1698.38 690.53 L1698.94 690.53 L1699.5 690.53 L1700.05 690.53 L1700.61 690.53 L1701.17 690.53 L1701.73 690.53 L1702.29 690.53 L1702.85 690.53 L1703.41 690.53 L1703.97 690.53 L1704.53 690.53 L1705.09 690.53 L1705.65 690.53 L1706.21 690.53 L1706.77 690.53 L1707.32 690.53 L1707.88 690.53 L1708.44 690.53 L1709 690.53 L1709.56 690.53 L1710.12 690.53 L1710.68 690.53 L1711.24 690.53 L1711.8 690.53 L1712.36 690.53 L1712.92 690.53 L1713.48 690.53 L1714.04 690.53 L1714.6 690.53 L1715.15 690.53 L1715.71 690.53 L1716.27 690.53 L1716.83 690.53 L1717.39 690.53 L1717.95 690.53 L1718.51 690.53 L1719.07 690.53 L1719.63 690.53 L1720.19 690.53 L1720.75 690.53 L1721.31 690.53 L1721.87 690.53 L1722.42 690.53 L1722.98 690.53 L1723.54 690.53 L1724.1 690.53 L1724.66 690.53 L1725.22 690.53 L1725.78 690.53 L1726.34 690.53 L1726.9 690.53 L1727.46 690.53 L1728.02 690.53 L1728.58 690.53 L1729.14 690.53 L1729.69 690.53 L1730.25 690.53 L1730.81 690.53 L1731.37 690.53 L1731.93 690.53 L1732.49 690.53 L1733.05 690.53 L1733.61 690.53 L1734.17 690.53 L1734.73 690.53 L1735.29 690.53 L1735.85 690.53 L1736.41 690.53 L1736.97 690.53 L1737.52 690.53 L1738.08 690.53 L1738.64 690.53 L1739.2 690.53 L1739.76 690.53 L1740.32 690.53 L1740.88 690.53 L1741.44 690.53 L1742 690.53 L1742.56 690.53 L1743.12 690.53 L1743.68 690.53 L1744.24 690.53 L1744.79 690.53 L1745.35 690.53 L1745.91 690.53 L1746.47 690.53 L1747.03 690.53 L1747.59 690.53 L1748.15 690.53 L1748.71 690.53 L1749.27 690.53 L1749.83 690.53 L1750.39 690.53 L1750.95 690.53 L1751.51 690.53 L1752.06 690.53 L1752.62 690.53 L1753.18 690.53 L1753.74 690.53 L1754.3 690.53 L1754.86 690.53 L1755.42 690.53 L1755.98 690.53 L1756.54 690.53 L1757.1 690.53 L1757.66 690.53 L1758.22 690.53 L1758.78 690.53 L1759.34 690.53 L1759.89 690.53 L1760.45 690.53 L1761.01 690.53 L1761.57 690.53 L1762.13 690.53 L1762.69 690.53 L1763.25 690.53 L1763.81 690.53 L1764.37 690.53 L1764.93 690.53 L1765.49 690.53 L1766.05 690.53 L1766.61 690.53 L1767.16 690.53 L1767.72 690.53 L1768.28 690.53 L1768.84 690.53 L1769.4 690.53 L1769.96 690.53 L1770.52 690.53 L1771.08 690.53 L1771.64 690.53 L1772.2 690.53 L1772.76 690.53 L1773.32 690.53 L1773.88 690.53 L1774.43 690.53 L1774.99 690.53 L1775.55 690.53 L1776.11 690.53 L1776.67 690.53 L1777.23 690.53 L1777.79 690.53 L1778.35 690.53 L1778.91 690.53 L1779.47 690.53 L1780.03 690.53 L1780.59 690.53 L1781.15 690.53 L1781.71 690.53 L1782.26 690.53 L1782.82 690.53 L1783.38 690.53 L1783.94 690.53 L1784.5 690.53 L1785.06 690.53 L1785.62 690.53 L1786.18 690.53 L1786.74 690.53 L1787.3 690.53 L1787.86 690.53 L1788.42 690.53 L1788.98 690.53 L1789.53 690.53 L1790.09 690.53 L1790.65 690.53 L1791.21 690.53 L1791.77 690.53 L1792.33 690.53 L1792.89 690.53 L1793.45 690.53 L1794.01 690.53 L1794.57 690.53 L1795.13 690.53 L1795.69 690.53 L1796.25 690.53 L1796.8 690.53 L1797.36 690.53 L1797.92 690.53 L1798.48 690.53 L1799.04 690.53 L1799.6 690.53 L1800.16 690.53 L1800.72 690.53 L1801.28 690.53 L1801.84 690.53 L1802.4 690.53 L1802.96 690.53 L1803.52 690.53 L1804.08 690.53 L1804.63 690.53 L1805.19 690.53 L1805.75 690.53 L1806.31 690.53 L1806.87 690.53 L1807.43 690.53 L1807.99 690.53 L1808.55 690.53 L1809.11 690.53 L1809.67 690.53 L1810.23 690.53 L1810.79 690.53 L1811.35 690.53 L1811.9 690.53 L1812.46 690.53 L1813.02 690.53 L1813.58 690.53 L1814.14 690.53 L1814.7 690.53 L1815.26 690.53 L1815.82 690.53 L1816.38 690.53 L1816.94 690.53 L1817.5 690.53 L1818.06 690.53 L1818.62 690.53 L1819.18 690.53 L1819.73 690.53 L1820.29 690.53 L1820.85 690.53 L1821.41 690.53 L1821.97 690.53 L1822.53 690.53 L1823.09 690.53 L1823.65 690.53 L1824.21 690.53 L1824.77 690.53 L1825.33 690.53 L1825.89 690.53 L1826.45 690.53 L1827 690.53 L1827.56 690.53 L1828.12 690.53 L1828.68 690.53 L1829.24 690.53 L1829.8 690.53 L1830.36 690.53 L1830.92 690.53 L1831.48 690.53 L1832.04 690.53 L1832.6 690.53 L1833.16 690.53 L1833.72 690.53 L1834.27 690.53 L1834.83 690.53 L1835.39 690.53 L1835.95 690.53 L1836.51 690.53 L1837.07 690.53 L1837.63 690.53 L1838.19 690.53 L1838.19 683.742 L1837.63 683.742 L1837.07 683.742 L1836.51 683.742 L1835.95 683.742 L1835.39 683.742 L1834.83 683.742 L1834.27 683.742 L1833.72 683.742 L1833.16 683.742 L1832.6 683.742 L1832.04 683.742 L1831.48 683.742 L1830.92 683.742 L1830.36 683.742 L1829.8 683.742 L1829.24 683.742 L1828.68 683.742 L1828.12 683.742 L1827.56 683.742 L1827 683.742 L1826.45 683.742 L1825.89 683.742 L1825.33 683.742 L1824.77 683.742 L1824.21 683.742 L1823.65 683.742 L1823.09 683.742 L1822.53 683.742 L1821.97 683.742 L1821.41 683.742 L1820.85 683.742 L1820.29 683.742 L1819.73 683.742 L1819.18 683.742 L1818.62 683.742 L1818.06 683.742 L1817.5 683.742 L1816.94 683.742 L1816.38 683.742 L1815.82 683.742 L1815.26 683.742 L1814.7 683.742 L1814.14 683.742 L1813.58 683.742 L1813.02 683.742 L1812.46 683.742 L1811.9 683.742 L1811.35 683.742 L1810.79 683.742 L1810.23 683.742 L1809.67 683.742 L1809.11 683.742 L1808.55 683.742 L1807.99 683.742 L1807.43 683.742 L1806.87 683.742 L1806.31 683.742 L1805.75 683.742 L1805.19 683.742 L1804.63 683.742 L1804.08 683.742 L1803.52 683.742 L1802.96 683.742 L1802.4 683.742 L1801.84 683.742 L1801.28 683.742 L1800.72 683.742 L1800.16 683.742 L1799.6 683.742 L1799.04 683.742 L1798.48 683.742 L1797.92 683.742 L1797.36 683.742 L1796.8 683.742 L1796.25 683.742 L1795.69 683.742 L1795.13 683.742 L1794.57 683.742 L1794.01 683.742 L1793.45 683.742 L1792.89 683.742 L1792.33 683.742 L1791.77 683.742 L1791.21 683.742 L1790.65 683.742 L1790.09 683.742 L1789.53 683.742 L1788.98 683.742 L1788.42 683.742 L1787.86 683.742 L1787.3 683.742 L1786.74 683.742 L1786.18 683.742 L1785.62 683.742 L1785.06 683.742 L1784.5 683.742 L1783.94 683.742 L1783.38 683.742 L1782.82 683.742 L1782.26 683.742 L1781.71 683.742 L1781.15 683.742 L1780.59 683.742 L1780.03 683.742 L1779.47 683.742 L1778.91 683.742 L1778.35 683.742 L1777.79 683.742 L1777.23 683.742 L1776.67 683.742 L1776.11 683.742 L1775.55 683.742 L1774.99 683.742 L1774.43 683.742 L1773.88 683.742 L1773.32 683.742 L1772.76 683.742 L1772.2 683.742 L1771.64 683.742 L1771.08 683.742 L1770.52 683.742 L1769.96 683.742 L1769.4 683.742 L1768.84 683.742 L1768.28 683.742 L1767.72 683.742 L1767.16 683.742 L1766.61 683.742 L1766.05 683.742 L1765.49 683.742 L1764.93 683.742 L1764.37 683.742 L1763.81 683.742 L1763.25 683.742 L1762.69 683.742 L1762.13 683.742 L1761.57 683.742 L1761.01 683.742 L1760.45 683.742 L1759.89 683.742 L1759.34 683.742 L1758.78 683.742 L1758.22 683.742 L1757.66 683.742 L1757.1 683.742 L1756.54 683.742 L1755.98 683.742 L1755.42 683.742 L1754.86 683.742 L1754.3 683.742 L1753.74 683.742 L1753.18 683.742 L1752.62 683.742 L1752.06 683.742 L1751.51 683.742 L1750.95 683.742 L1750.39 683.742 L1749.83 683.742 L1749.27 683.742 L1748.71 683.742 L1748.15 683.742 L1747.59 683.742 L1747.03 683.742 L1746.47 683.742 L1745.91 683.742 L1745.35 683.742 L1744.79 683.742 L1744.24 683.742 L1743.68 683.742 L1743.12 683.742 L1742.56 683.742 L1742 683.742 L1741.44 683.742 L1740.88 683.742 L1740.32 683.742 L1739.76 683.742 L1739.2 683.742 L1738.64 683.742 L1738.08 683.742 L1737.52 683.742 L1736.97 683.742 L1736.41 683.742 L1735.85 683.742 L1735.29 683.742 L1734.73 683.742 L1734.17 683.742 L1733.61 683.742 L1733.05 683.742 L1732.49 683.742 L1731.93 683.742 L1731.37 683.742 L1730.81 683.742 L1730.25 683.742 L1729.69 683.742 L1729.14 683.742 L1728.58 683.742 L1728.02 683.742 L1727.46 683.742 L1726.9 683.742 L1726.34 683.742 L1725.78 683.742 L1725.22 683.742 L1724.66 683.742 L1724.1 683.742 L1723.54 683.742 L1722.98 683.742 L1722.42 683.742 L1721.87 683.742 L1721.31 683.742 L1720.75 683.742 L1720.19 683.742 L1719.63 683.742 L1719.07 683.742 L1718.51 683.742 L1717.95 683.742 L1717.39 683.742 L1716.83 683.742 L1716.27 683.742 L1715.71 683.742 L1715.15 683.742 L1714.6 683.742 L1714.04 683.742 L1713.48 683.742 L1712.92 683.742 L1712.36 683.742 L1711.8 683.742 L1711.24 683.742 L1710.68 683.742 L1710.12 683.742 L1709.56 683.742 L1709 683.742 L1708.44 683.742 L1707.88 683.742 L1707.32 683.742 L1706.77 683.742 L1706.21 683.742 L1705.65 683.742 L1705.09 683.742 L1704.53 683.742 L1703.97 683.742 L1703.41 683.742 L1702.85 683.742 L1702.29 683.742 L1701.73 683.742 L1701.17 683.742 L1700.61 683.742 L1700.05 683.742 L1699.5 683.742 L1698.94 683.742 L1698.38 683.742 L1697.82 683.742 L1697.26 683.742 L1696.7 683.742 L1696.14 683.742 L1695.58 683.742 L1695.02 683.742 L1694.46 683.742 L1693.9 683.742 L1693.34 683.742 L1692.78 683.742 L1692.23 683.742 L1691.67 683.742 L1691.11 683.742 L1690.55 683.742 L1689.99 683.742 L1689.43 683.742 L1688.87 683.742 L1688.31 683.742 L1687.75 683.742 L1687.19 683.742 L1686.63 683.742 L1686.07 683.742 L1685.51 683.742 L1684.95 683.742 L1684.4 683.742 L1683.84 683.742 L1683.28 683.742 L1682.72 683.742 L1682.16 683.742 L1681.6 683.742 L1681.04 683.742 L1680.48 683.742 L1679.92 683.742 L1679.36 683.742 L1678.8 683.742 L1678.24 683.742 L1677.68 683.742 L1677.13 683.742 L1676.57 683.742 L1676.01 683.742 L1675.45 683.742 L1674.89 683.742 L1674.33 683.742 L1673.77 683.742 L1673.21 683.742 L1672.65 683.742 L1672.09 683.742 L1671.53 683.742 L1670.97 683.742 L1670.41 683.742 L1669.85 683.742 L1669.3 683.742 L1668.74 683.742 L1668.18 683.742 L1667.62 683.742 L1667.06 683.742 L1666.5 683.742 L1665.94 683.742 L1665.38 683.742 L1664.82 683.742 L1664.26 683.742 L1663.7 683.742 L1663.14 683.742 L1662.58 683.742 L1662.03 683.742 L1661.47 683.742 L1660.91 683.742 L1660.35 683.742 L1659.79 683.742 L1659.23 683.742 L1658.67 683.742 L1658.11 683.742 L1657.55 683.742 L1656.99 683.742 L1656.43 683.742 L1655.87 683.742 L1655.31 683.742 L1654.76 683.742 L1654.2 683.742 L1653.64 683.742 L1653.08 683.742 L1652.52 683.742 L1651.96 683.742 L1651.4 683.742 L1650.84 683.742 L1650.28 683.742 L1649.72 683.742 L1649.16 683.742 L1648.6 683.742 L1648.04 683.742 L1647.48 683.742 L1646.93 683.742 L1646.37 683.742 L1645.81 683.742 L1645.25 683.742 L1644.69 683.742 L1644.13 683.742 L1643.57 683.742 L1643.01 683.742 L1642.45 683.742 L1641.89 683.742 L1641.33 683.742 L1640.77 683.742 L1640.21 683.742 L1639.66 683.742 L1639.1 683.742 L1638.54 683.742 L1637.98 683.742 L1637.42 683.742 L1636.86 683.742 L1636.3 683.742 L1635.74 683.742 L1635.18 683.742 L1634.62 683.742 L1634.06 683.742 L1633.5 683.742 L1632.94 683.742 L1632.39 683.742 L1631.83 683.742 L1631.27 683.742 L1630.71 683.742 L1630.15 683.742 L1629.59 683.742 L1629.03 683.742 L1628.47 683.742 L1627.91 683.742 L1627.35 683.742 L1626.79 683.742 L1626.23 683.742 L1625.67 683.742 L1625.11 683.742 L1624.56 683.742 L1624 683.742 L1623.44 683.742 L1622.88 683.742 L1622.32 683.742 L1621.76 683.742 L1621.2 683.742 L1620.64 683.742 L1620.08 683.742 L1619.52 683.742 L1618.96 683.742 L1618.4 683.742 L1617.84 683.742 L1617.29 683.742 L1616.73 683.742 L1616.17 683.742 L1615.61 683.742 L1615.05 683.742 L1614.49 683.742 L1613.93 683.742 L1613.37 683.742 L1612.81 683.742 L1612.25 683.742 L1611.69 683.742 L1611.13 683.742 L1610.57 683.742 L1610.02 683.742 L1609.46 683.742 L1608.9 683.742 L1608.34 683.742 L1607.78 683.742 L1607.22 683.742 L1606.66 683.742 L1606.1 683.742 L1605.54 683.742 L1604.98 683.742 L1604.42 683.742 L1603.86 683.742 L1603.3 683.742 L1602.74 683.742 L1602.19 683.742 L1601.63 683.742 L1601.07 683.742 L1600.51 683.742 L1599.95 683.742 L1599.39 683.742 L1598.83 683.742 L1598.27 683.742 L1597.71 683.742 L1597.15 683.742 L1596.59 683.742 L1596.03 683.742 L1595.47 683.742 L1594.92 683.742 L1594.36 683.742 L1593.8 683.742 L1593.24 683.742 L1592.68 683.742 L1592.12 683.742 L1591.56 683.742 L1591 683.742 L1590.44 683.742 L1589.88 683.742 L1589.32 683.742 L1588.76 683.742 L1588.2 683.742 L1587.65 683.742 L1587.09 683.742 L1586.53 683.742 L1585.97 683.742 L1585.41 683.742 L1584.85 683.742 L1584.29 683.742 L1583.73 683.742 L1583.17 683.742 L1582.61 683.742 L1582.05 683.742 L1581.49 683.742 L1580.93 683.742 L1580.37 683.742 L1579.82 683.742 L1579.26 683.742 L1578.7 683.742 L1578.14 683.742 L1577.58 683.742 L1577.02 683.742 L1576.46 683.742 L1575.9 683.742 L1575.34 683.742 L1574.78 683.742 L1574.22 683.742 L1573.66 683.742 L1573.1 683.742 L1572.55 683.742 L1571.99 683.742 L1571.43 683.742 L1570.87 683.742 L1570.31 683.742 L1569.75 683.742 L1569.19 683.742 L1568.63 683.742 L1568.07 683.742 L1567.51 683.742 L1566.95 683.742 L1566.39 683.742 L1565.83 683.742 L1565.28 683.742 L1564.72 683.742 L1564.16 683.742 L1563.6 683.742 L1563.04 683.742 L1562.48 683.742 L1561.92 683.742 L1561.36 683.742 L1560.8 683.742 L1560.24 683.742 L1559.68 683.742 L1559.12 683.742 L1558.56 683.742 L1558 683.742 L1557.45 683.742 L1556.89 683.742 L1556.33 683.742 L1555.77 683.742 L1555.21 683.742 L1554.65 683.742 L1554.09 683.742 L1553.53 683.742 L1552.97 683.742 L1552.41 683.742 L1551.85 683.742 L1551.29 683.742 L1550.73 683.742 L1550.18 683.742 L1549.62 683.742 L1549.06 683.742 L1548.5 683.742 L1547.94 683.742 L1547.38 683.742 L1546.82 683.742 L1546.26 683.742 L1545.7 683.742 L1545.14 683.742 L1544.58 683.742 L1544.02 683.742 L1543.46 683.742 L1542.9 683.742 L1542.35 683.742 L1541.79 683.742 L1541.23 683.742 L1540.67 683.742 L1540.11 683.742 L1539.55 683.742 L1538.99 683.742 L1538.43 683.742 L1537.87 683.742 L1537.31 683.742 L1536.75 683.742 L1536.19 683.742 L1535.63 683.742 L1535.08 683.742 L1534.52 683.742 L1533.96 683.742 L1533.4 683.742 L1532.84 683.742 L1532.28 683.742 L1531.72 683.742 L1531.16 683.742 L1530.6 683.742 L1530.04 683.742 L1529.48 683.742 L1528.92 683.742 L1528.36 683.742 L1527.81 683.742 L1527.25 683.742 L1526.69 683.742 L1526.13 683.742 L1525.57 683.742 L1525.01 683.742 L1524.45 683.742 L1523.89 683.742 L1523.33 683.742 L1522.77 683.742 L1522.21 683.742 L1521.65 683.742 L1521.09 683.742 L1520.53 683.742 L1519.98 683.742 L1519.42 683.742 L1518.86 683.742 L1518.3 683.742 L1517.74 683.742 L1517.18 683.742 L1516.62 683.742 L1516.06 683.742 L1515.5 683.742 L1514.94 683.742 L1514.38 683.742 L1513.82 683.742 L1513.26 683.742 L1512.71 683.742 L1512.15 683.742 L1511.59 683.742 L1511.03 683.742 L1510.47 683.742 L1509.91 683.742 L1509.35 683.742 L1508.79 683.742 L1508.23 683.742 L1507.67 683.742 L1507.11 683.742 L1506.55 683.742 L1505.99 683.742 L1505.44 683.742 L1504.88 683.742 L1504.32 683.742 L1503.76 683.742 L1503.2 683.742 L1502.64 683.742 L1502.08 683.742 L1501.52 683.742 L1500.96 683.742 L1500.4 683.742 L1499.84 683.742 L1499.28 683.742 L1498.72 683.742 L1498.16 683.742 L1497.61 683.742 L1497.05 683.742 L1496.49 683.742 L1495.93 683.742 L1495.37 683.742 L1494.81 683.742 L1494.25 683.742 L1493.69 683.742 L1493.13 683.742 L1492.57 683.742 L1492.01 683.742 L1491.45 683.742 L1490.89 683.742 L1490.34 683.742 L1489.78 683.742 L1489.22 683.742 L1488.66 683.742 L1488.1 683.742 L1487.54 683.742 L1486.98 683.742 L1486.42 683.742 L1485.86 683.742 L1485.3 683.742 L1484.74 683.742 L1484.18 683.742 L1483.62 683.742 L1483.07 683.742 L1482.51 683.742 L1481.95 683.742 L1481.39 683.742 L1480.83 683.742 L1480.27 683.742 L1479.71 683.742 L1479.15 683.742 L1478.59 683.742 L1478.03 683.742 L1477.47 683.742 L1476.91 683.742 L1476.35 683.742 L1475.79 683.742 L1475.24 683.742 L1474.68 683.742 L1474.12 683.742 L1473.56 683.742 L1473 683.742 L1472.44 683.742 L1471.88 683.742 L1471.32 683.742 L1470.76 683.742 L1470.2 683.742 L1469.64 683.742 L1469.08 683.742 L1468.52 683.742 L1467.97 683.742 L1467.41 683.742 L1466.85 683.742 L1466.29 683.742 L1465.73 683.742 L1465.17 683.742 L1464.61 683.742 L1464.05 683.742 L1463.49 683.742 L1462.93 683.742 L1462.37 683.742 L1461.81 683.742 L1461.25 683.742 L1460.7 683.742 L1460.14 683.742 L1459.58 683.742 L1459.02 683.742 L1458.46 683.742 L1457.9 683.742 L1457.34 683.742 L1456.78 683.742 L1456.22 683.742 L1455.66 683.742 L1455.1 683.742 L1454.54 683.742 L1453.98 683.742 L1453.42 683.742 L1452.87 683.742 L1452.31 683.742 L1451.75 683.742 L1451.19 683.742 L1450.63 683.742 L1450.07 683.742 L1449.51 683.742 L1448.95 683.742 L1448.39 683.742 L1447.83 683.742 L1447.27 683.742 L1446.71 683.742 L1446.15 683.742 L1445.6 683.742 L1445.04 683.742 L1444.48 683.742 L1443.92 683.742 L1443.36 683.742 L1442.8 683.742 L1442.24 683.742 L1441.68 683.742 L1441.12 683.742 L1440.56 683.742 L1440 683.742 L1439.44 683.742 L1438.88 683.742 L1438.33 683.742 L1437.77 683.742 L1437.21 683.742 L1436.65 683.742 L1436.09 683.742 L1435.53 683.742 L1434.97 683.742 L1434.41 683.742 L1433.85 683.742 L1433.29 683.742 L1432.73 683.742 L1432.17 683.742 L1431.61 683.742 L1431.05 683.742 L1430.5 683.742 L1429.94 683.742 L1429.38 683.742 L1428.82 683.742 L1428.26 683.742 L1427.7 683.742 L1427.14 683.742 L1426.58 683.742 L1426.02 683.742 L1425.46 683.742 L1424.9 683.742 L1424.34 683.742 L1423.78 683.742 L1423.23 683.742 L1422.67 683.742 L1422.11 683.742 L1421.55 683.742 L1420.99 683.742 L1420.43 683.742 L1419.87 683.742 L1419.31 683.742 L1418.75 683.742 L1418.19 683.742 L1417.63 683.742 L1417.07 683.742 L1416.51 683.742 L1415.95 683.742 L1415.4 683.742 L1414.84 683.742 L1414.28 683.742 L1413.72 683.742 L1413.16 683.742 L1412.6 683.742 L1412.04 683.742 L1411.48 683.742 L1410.92 683.742 L1410.36 683.742 L1409.8 683.742 L1409.24 683.742 L1408.68 683.742 L1408.13 683.742 L1407.57 683.742 L1407.01 683.742 L1406.45 683.742 L1405.89 683.742 L1405.33 683.742 L1404.77 683.742 L1404.21 683.742 L1403.65 683.742 L1403.09 683.742 L1402.53 683.742 L1401.97 683.742 L1401.41 683.742 L1400.86 683.742 L1400.3 683.742 L1399.74 683.742 L1399.18 683.742 L1398.62 683.742 L1398.06 683.742 L1397.5 683.742 L1396.94 683.742 L1396.38 683.742 L1395.82 683.742 L1395.26 683.742 L1394.7 683.742 L1394.14 683.742 L1393.58 683.742 L1393.03 683.742 L1392.47 683.742 L1391.91 683.742 L1391.35 683.742 L1390.79 683.742 L1390.23 683.742 L1389.67 683.742 L1389.11 683.742 L1388.55 683.742 L1387.99 683.742 L1387.43 683.742 L1386.87 683.742 L1386.31 683.742 L1385.76 683.742 L1385.2 683.742 L1384.64 683.742 L1384.08 683.742 L1383.52 683.742 L1382.96 683.742 L1382.4 683.742 L1381.84 683.742 L1381.28 683.742 L1380.72 683.742 L1380.16 683.742 L1379.6 683.742 L1379.04 683.742 L1378.49 683.742 L1377.93 683.742 L1377.37 683.742 L1376.81 683.742 L1376.25 683.742 L1375.69 683.742 L1375.13 683.742 L1374.57 683.742 L1374.01 683.742 L1373.45 683.742 L1372.89 683.742 L1372.33 683.742 L1371.77 683.742 L1371.21 683.742 L1370.66 683.742 L1370.1 683.742 L1369.54 683.742 L1368.98 683.742 L1368.42 683.742 L1367.86 683.742 L1367.3 683.742 L1366.74 683.742 L1366.18 683.742 L1365.62 683.742 L1365.06 683.742 L1364.5 683.742 L1363.94 683.742 L1363.39 683.742 L1362.83 683.742 L1362.27 683.742 L1361.71 683.742 L1361.15 683.742 L1360.59 683.742 L1360.03 683.742 L1359.47 683.742 L1358.91 683.742 L1358.35 683.742 L1357.79 683.742 L1357.23 683.742 L1356.67 683.742 L1356.12 683.742 L1355.56 683.742 L1355 683.742 L1354.44 683.742 L1353.88 683.742 L1353.32 683.742 L1352.76 683.742 L1352.2 683.742 L1351.64 683.742 L1351.08 683.742 L1350.52 683.742 L1349.96 683.742 L1349.4 683.742 L1348.84 683.742 L1348.29 683.742 L1347.73 683.742 L1347.17 683.742 L1346.61 683.742 L1346.05 683.742 L1345.49 683.742 L1344.93 683.742 L1344.37 683.742 L1343.81 683.742 L1343.25 683.742 L1342.69 683.742 L1342.13 683.742 L1341.57 683.742 L1341.02 683.742 L1340.46 683.742 L1339.9 683.742 L1339.34 683.742 L1338.78 683.742 L1338.22 683.742 L1337.66 683.742 L1337.1 683.742 L1336.54 683.742 L1335.98 683.742 L1335.42 683.742 L1334.86 683.742 L1334.3 683.742 L1333.75 683.742 L1333.19 683.742 L1332.63 683.742 L1332.07 683.742 L1331.51 683.742 L1330.95 683.742 L1330.39 683.742 L1329.83 683.742 L1329.27 683.742 L1328.71 683.742 L1328.15 683.742 L1327.59 683.742 L1327.03 683.742 L1326.47 683.742 L1325.92 683.742 L1325.36 683.742 L1324.8 683.742 L1324.24 683.742 L1323.68 683.742 L1323.12 683.742 L1322.56 683.742 L1322 683.742 L1321.44 683.742 L1320.88 683.742 L1320.32 683.742 L1319.76 683.742 L1319.2 683.742 L1318.65 683.742 L1318.09 683.742 L1317.53 683.742 L1316.97 683.742 L1316.41 683.742 L1315.85 683.742 L1315.29 683.742 L1314.73 683.742 L1314.17 683.742 L1313.61 683.742 L1313.05 683.742 L1312.49 683.742 L1311.93 683.742 L1311.38 683.742 L1310.82 683.742 L1310.26 683.742 L1309.7 683.742 L1309.14 683.742 L1308.58 683.742 L1308.02 683.742 L1307.46 683.742 L1306.9 683.742 L1306.34 683.742 L1305.78 683.742 L1305.22 683.742 L1304.66 683.742 L1304.1 683.742 L1303.55 683.742 L1302.99 683.742 L1302.43 683.742 L1301.87 683.742 L1301.31 683.742 L1300.75 683.742 L1300.19 683.742 L1299.63 683.742 L1299.07 683.742 L1298.51 683.742 L1297.95 683.742 L1297.39 683.742 L1296.83 683.742 L1296.28 683.742 L1295.72 683.742 L1295.16 683.742 L1294.6 683.742 L1294.04 683.742 L1293.48 683.742 L1292.92 683.742 L1292.36 683.742 L1291.8 683.742 L1291.24 683.742 L1290.68 683.742 L1290.12 683.742 L1289.56 683.742 L1289 683.742 L1288.45 683.742 L1287.89 683.742 L1287.33 683.742 L1286.77 683.742 L1286.21 683.742 L1285.65 683.742 L1285.09 683.742 L1284.53 683.742 L1283.97 683.742 L1283.41 683.742 L1282.85 683.742 L1282.29 683.742 L1281.73 683.742 L1281.18 683.742 L1280.62 683.742 L1280.06 683.742 L1279.5 683.742 L1278.94 683.742 L1278.38 683.742 L1277.82 683.742 L1277.26 683.742 L1276.7 683.742 L1276.14 683.742 L1275.58 683.742 L1275.02 683.742 L1274.46 683.742 L1273.91 683.742 L1273.35 683.742 L1272.79 683.742 L1272.23 683.742 L1271.67 683.742 L1271.11 683.742 L1270.55 683.742 L1269.99 683.742 L1269.43 683.742 L1268.87 683.742 L1268.31 683.742 L1267.75 683.742 L1267.19 683.742 L1266.63 683.742 L1266.08 683.742 L1265.52 683.742 L1264.96 683.742 L1264.4 683.742 L1263.84 683.742 L1263.28 683.742 L1262.72 683.742 L1262.16 683.742 L1261.6 683.742 L1261.04 683.742 L1260.48 683.742 L1259.92 683.742 L1259.36 683.742 L1258.81 683.742 L1258.25 683.742 L1257.69 683.742 L1257.13 683.742 L1256.57 683.742 L1256.01 683.742 L1255.45 683.742 L1254.89 683.742 L1254.33 683.742 L1253.77 683.742 L1253.21 683.742 L1252.65 683.742 L1252.09 683.742 L1251.54 683.742 L1250.98 683.742 L1250.42 683.742 L1249.86 683.742 L1249.3 683.742 L1248.74 683.742 L1248.18 683.742 L1247.62 683.742 L1247.06 683.742 L1246.5 683.742 L1245.94 683.742 L1245.38 683.742 L1244.82 683.742 L1244.26 683.742 L1243.71 683.742 L1243.15 683.742 L1242.59 683.742 L1242.03 683.742 L1241.47 683.742 L1240.91 683.742 L1240.35 683.742 L1239.79 683.742 L1239.23 683.742 L1238.67 683.742 L1238.11 683.742 L1237.55 683.742 L1236.99 683.742 L1236.44 683.742 L1235.88 683.742 L1235.32 683.742 L1234.76 683.742 L1234.2 683.742 L1233.64 683.742 L1233.08 683.742 L1232.52 683.742 L1231.96 683.742 L1231.4 683.742 L1230.84 683.742 L1230.28 683.742 L1229.72 683.742 L1229.17 683.742 L1228.61 683.742 L1228.05 683.742 L1227.49 683.742 L1226.93 683.742 L1226.37 683.742 L1225.81 683.742 L1225.25 683.742 L1224.69 683.742 L1224.13 683.742 L1223.57 683.742 L1223.01 683.742 L1222.45 683.742 L1221.89 683.742 L1221.34 683.742 L1220.78 683.742 L1220.22 683.742 L1219.66 683.742 L1219.1 683.742 L1218.54 683.742 L1217.98 683.742 L1217.42 683.742 L1216.86 683.742 L1216.3 683.742 L1215.74 683.742 L1215.18 683.742 L1214.62 683.742 L1214.07 683.742 L1213.51 683.742 L1212.95 683.742 L1212.39 683.742 L1211.83 683.742 L1211.27 683.742 L1210.71 683.742 L1210.15 683.742 L1209.59 683.742 L1209.03 683.742 L1208.47 683.742 L1207.91 683.742 L1207.35 683.742 L1206.8 683.742 L1206.24 683.742 L1205.68 683.742 L1205.12 683.742 L1204.56 683.742 L1204 683.742 L1203.44 683.742 L1202.88 683.742 L1202.32 683.742 L1201.76 683.742 L1201.2 683.742 L1200.64 683.742 L1200.08 683.742 L1199.52 683.742 L1198.97 683.742 L1198.41 683.742 L1197.85 683.742 L1197.29 683.742 L1196.73 683.742 L1196.17 683.742 L1195.61 683.742 L1195.05 683.742 L1194.49 683.742 L1193.93 683.742 L1193.37 683.742 L1192.81 683.742 L1192.25 683.742 L1191.7 683.742 L1191.14 683.742 L1190.58 683.742 L1190.02 683.742 L1189.46 683.742 L1188.9 683.742 L1188.34 683.742 L1187.78 683.742 L1187.22 683.742 L1186.66 683.742 L1186.1 683.742 L1185.54 683.742 L1184.98 683.742 L1184.43 683.742 L1183.87 683.742 L1183.31 683.742 L1182.75 683.742 L1182.19 683.742 L1181.63 683.742 L1181.07 683.742 L1180.51 683.742 L1179.95 683.742 L1179.39 683.742 L1178.83 683.742 L1178.27 683.742 L1177.71 683.742 L1177.15 683.742 L1176.6 683.742 L1176.04 683.742 L1175.48 683.742 L1174.92 683.742 L1174.36 683.742 L1173.8 683.742 L1173.24 683.742 L1172.68 683.742 L1172.12 683.742 L1171.56 683.742 L1171 683.742 L1170.44 683.742 L1169.88 683.742 L1169.33 683.742 L1168.77 683.742 L1168.21 683.742 L1167.65 683.742 L1167.09 683.742 L1166.53 683.742 L1165.97 683.742 L1165.41 683.742 L1164.85 683.742 L1164.29 683.742 L1163.73 683.742 L1163.17 683.742 L1162.61 683.742 L1162.05 683.742 L1161.5 683.742 L1160.94 683.742 L1160.38 683.742 L1159.82 683.742 L1159.26 683.742 L1158.7 683.742 L1158.14 683.742 L1157.58 683.742 L1157.02 683.742 L1156.46 683.742 L1155.9 683.742 L1155.34 683.742 L1154.78 683.742 L1154.23 683.742 L1153.67 683.742 L1153.11 683.742 L1152.55 683.742 L1151.99 683.742 L1151.43 683.742 L1150.87 683.742 L1150.31 683.742 L1149.75 683.742 L1149.19 683.742 L1148.63 683.742 L1148.07 683.742 L1147.51 683.742 L1146.96 683.742 L1146.4 683.742 L1145.84 683.742 L1145.28 683.742 L1144.72 683.742 L1144.16 683.742 L1143.6 683.742 L1143.04 683.742 L1142.48 683.742 L1141.92 683.742 L1141.36 683.742 L1140.8 683.742 L1140.24 683.742 L1139.68 683.742 L1139.13 683.742 L1138.57 683.742 L1138.01 683.742 L1137.45 683.742 L1136.89 683.742 L1136.33 683.742 L1135.77 683.742 L1135.21 683.742 L1134.65 683.742 L1134.09 683.742 L1133.53 683.742 L1132.97 683.742 L1132.41 683.742 L1131.86 683.742 L1131.3 683.742 L1130.74 683.742 L1130.18 683.742 L1129.62 683.742 L1129.06 683.742 L1128.5 683.742 L1127.94 683.742 L1127.38 683.742 L1126.82 683.742 L1126.26 683.742 L1125.7 683.742 L1125.14 683.742 L1124.59 683.742 L1124.03 683.742 L1123.47 683.742 L1122.91 683.742 L1122.35 683.742 L1121.79 683.742 L1121.23 683.742 L1120.67 683.742 L1120.11 683.742 L1119.55 683.742 L1118.99 683.742 L1118.43 683.742 L1117.87 683.742 L1117.31 683.742 L1116.76 683.742 L1116.2 683.742 L1115.64 683.742 L1115.08 683.742 L1114.52 683.742 L1113.96 683.742 L1113.4 683.742 L1112.84 683.742 L1112.28 683.742 L1111.72 683.742 L1111.16 683.742 L1110.6 683.742 L1110.04 683.742 L1109.49 683.742 L1108.93 683.742 L1108.37 683.742 L1107.81 683.742 L1107.25 683.742 L1106.69 683.742 L1106.13 683.742 L1105.57 683.742 L1105.01 683.742 L1104.45 683.742 L1103.89 683.742 L1103.33 683.742 L1102.77 683.742 L1102.22 683.742 L1101.66 683.742 L1101.1 683.742 L1100.54 683.742 L1099.98 683.742 L1099.42 683.742 L1098.86 683.742 L1098.3 683.742 L1097.74 683.742 L1097.18 683.742 L1096.62 683.742 L1096.06 683.742 L1095.5 683.742 L1094.94 683.742 L1094.39 683.742 L1093.83 683.742 L1093.27 683.742 L1092.71 683.742 L1092.15 683.742 L1091.59 683.742 L1091.03 683.742 L1090.47 683.742 L1089.91 683.742 L1089.35 683.742 L1088.79 683.742 L1088.23 683.742 L1087.67 683.742 L1087.12 683.742 L1086.56 683.742 L1086 683.742 L1085.44 683.742 L1084.88 683.742 L1084.32 683.742 L1083.76 683.742 L1083.2 683.742 L1082.64 683.742 L1082.08 683.742 L1081.52 683.742 L1080.96 683.742 L1080.4 683.742 L1079.85 683.742 L1079.29 683.742 L1078.73 683.742 L1078.17 683.742 L1077.61 683.742 L1077.05 683.742 L1076.49 683.742 L1075.93 683.742 L1075.37 683.742 L1074.81 683.742 L1074.25 683.742 L1073.69 683.742 L1073.13 683.742 L1072.57 683.742 L1072.02 683.742 L1071.46 683.742 L1070.9 683.742 L1070.34 683.742 L1069.78 683.742 L1069.22 683.742 L1068.66 683.742 L1068.1 683.742 L1067.54 683.742 L1066.98 683.742 L1066.42 683.742 L1065.86 683.742 L1065.3 683.742 L1064.75 683.742 L1064.19 683.742 L1063.63 683.742 L1063.07 683.742 L1062.51 683.742 L1061.95 683.742 L1061.39 683.742 L1060.83 683.742 L1060.27 683.742 L1059.71 683.742 L1059.15 683.742 L1058.59 683.742 L1058.03 683.742 L1057.48 683.742 L1056.92 683.742 L1056.36 683.742 L1055.8 683.742 L1055.24 683.742 L1054.68 683.742 L1054.12 683.742 L1053.56 683.742 L1053 683.742 L1052.44 683.742 L1051.88 683.742 L1051.32 683.742 L1050.76 683.742 L1050.2 683.742 L1049.65 683.742 L1049.09 683.742 L1048.53 683.742 L1047.97 683.742 L1047.41 683.742 L1046.85 683.742 L1046.29 683.742 L1045.73 683.742 L1045.17 683.742 L1044.61 683.742 L1044.05 683.742 L1043.49 683.742 L1042.93 683.742 L1042.38 683.742 L1041.82 683.742 L1041.26 683.742 L1040.7 683.742 L1040.14 683.742 L1039.58 683.742 L1039.02 683.742 L1038.46 683.742 L1037.9 683.742 L1037.34 683.742 L1036.78 683.742 L1036.22 683.742 L1035.66 683.742 L1035.1 683.742 L1034.55 683.742 L1033.99 683.742 L1033.43 683.742 L1032.87 683.742 L1032.31 683.742 L1031.75 683.742 L1031.19 683.742 L1030.63 683.742 L1030.07 683.742 L1029.51 683.742 L1028.95 683.742 L1028.39 683.742 L1027.83 683.742 L1027.28 683.742 L1026.72 683.742 L1026.16 683.742 L1025.6 683.742 L1025.04 683.742 L1024.48 683.742 L1023.92 683.742 L1023.36 683.742 L1022.8 683.742 L1022.24 683.742 L1021.68 683.742 L1021.12 683.742 L1020.56 683.742 L1020.01 683.742 L1019.45 683.742 L1018.89 683.742 L1018.33 683.742 L1017.77 683.742 L1017.21 683.742 L1016.65 683.742 L1016.09 683.742 L1015.53 683.742 L1014.97 683.742 L1014.41 683.742 L1013.85 683.742 L1013.29 683.742 L1012.73 683.742 L1012.18 683.742 L1011.62 683.742 L1011.06 683.742 L1010.5 683.742 L1009.94 683.742 L1009.38 683.742 L1008.82 683.742 L1008.26 683.742 L1007.7 683.742 L1007.14 683.742 L1006.58 683.742 L1006.02 683.742 L1005.46 683.742 L1004.91 683.742 L1004.35 683.742 L1003.79 683.742 L1003.23 683.742 L1002.67 683.742 L1002.11 683.742 L1001.55 683.742 L1000.99 683.742 L1000.43 683.742 L999.872 683.742 L999.313 683.742 L998.754 683.742 L998.194 683.742 L997.635 683.742 L997.076 683.742 L996.517 683.742 L995.957 683.742 L995.398 683.742 L994.839 683.742 L994.28 683.742 L993.72 683.742 L993.161 683.742 L992.602 683.742 L992.043 683.742 L991.483 683.742 L990.924 683.742 L990.365 683.742 L989.806 683.742 L989.246 683.742 L988.687 683.742 L988.128 683.742 L987.569 683.742 L987.009 683.742 L986.45 683.742 L985.891 683.742 L985.332 683.742 L984.772 683.742 L984.213 683.742 L983.654 683.742 L983.095 683.742 L982.535 683.742 L981.976 683.742 L981.417 683.742 L980.858 683.742 L980.298 683.742 L979.739 683.742 L979.18 683.742 L978.621 683.742 L978.061 683.742 L977.502 683.742 L976.943 683.742 L976.384 683.742 L975.824 683.742 L975.265 683.742 L974.706 683.742 L974.147 683.742 L973.587 683.742 L973.028 683.742 L972.469 683.742 L971.91 683.742 L971.35 683.742 L970.791 683.742 L970.232 683.742 L969.673 683.742 L969.113 683.742 L968.554 683.742 L967.995 683.742 L967.436 683.742 L966.876 683.742 L966.317 683.742 L965.758 683.742 L965.199 683.742 L964.639 683.742 L964.08 683.742 L963.521 683.742 L962.962 683.742 L962.402 683.742 L961.843 683.742 L961.284 683.742 L960.725 683.742 L960.165 683.742 L959.606 683.742 L959.047 683.742 L958.488 683.742 L957.928 683.742 L957.369 683.742 L956.81 683.742 L956.251 683.742 L955.691 683.742 L955.132 683.742 L954.573 683.742 L954.014 683.742 L953.454 683.742 L952.895 683.742 L952.336 683.742 L951.777 683.742 L951.217 683.742 L950.658 683.742 L950.099 683.742 L949.54 683.742 L948.98 683.742 L948.421 683.742 L947.862 683.742 L947.303 683.742 L946.743 683.742 L946.184 683.742 L945.625 683.742 L945.066 683.742 L944.506 683.742 L943.947 683.742 L943.388 683.742 L942.829 683.742 L942.269 683.742 L941.71 683.742 L941.151 683.742 L940.592 683.742 L940.032 683.742 L939.473 683.742 L938.914 683.742 L938.355 683.742 L937.795 683.742 L937.236 683.742 L936.677 683.742 L936.118 683.742 L935.558 683.742 L934.999 683.742 L934.44 683.742 L933.881 683.742 L933.321 683.742 L932.762 683.742 L932.203 683.742 L931.644 683.742 L931.084 683.742 L930.525 683.742 L929.966 683.742 L929.406 683.742 L928.847 683.742 L928.288 683.742 L927.729 683.742 L927.169 683.742 L926.61 683.742 L926.051 683.742 L925.492 683.742 L924.932 683.742 L924.373 683.742 L923.814 683.742 L923.255 683.742 L922.695 683.742 L922.136 683.742 L921.577 683.742 L921.018 683.742 L920.458 683.742 L919.899 683.742 L919.34 683.742 L918.781 683.742 L918.221 683.742 L917.662 683.742 L917.103 683.742 L916.544 683.742 L915.984 683.742 L915.425 683.742 L914.866 683.742 L914.307 683.742 L913.747 683.742 L913.188 683.742 L912.629 683.742 L912.07 683.742 L911.51 683.742 L910.951 683.742 L910.392 683.742 L909.833 683.742 L909.273 683.742 L908.714 683.742 L908.155 683.742 L907.596 683.742 L907.036 683.742 L906.477 683.742 L905.918 683.742 L905.359 683.742 L904.799 683.742 L904.24 683.742 L903.681 683.742 L903.122 683.742 L902.562 683.742 L902.003 683.742 L901.444 683.742 L900.885 683.742 L900.325 683.742 L899.766 683.742 L899.207 683.742 L898.648 683.742 L898.088 683.742 L897.529 683.742 L896.97 683.742 L896.411 683.742 L895.851 683.742 L895.292 683.742 L894.733 683.742 L894.174 683.742 L893.614 683.742 L893.055 683.742 L892.496 683.742 L891.937 683.742 L891.377 683.742 L890.818 683.742 L890.259 683.742 L889.7 683.742 L889.14 683.742 L888.581 683.742 L888.022 683.742 L887.463 683.742 L886.903 683.742 L886.344 683.742 L885.785 683.742 L885.226 683.742 L884.666 683.742 L884.107 683.742 L883.548 683.742 L882.989 683.742 L882.429 683.742 L881.87 683.742 L881.311 683.742 L880.752 683.742 L880.192 683.742 L879.633 683.742 L879.074 683.742 L878.515 683.742 L877.955 683.742 L877.396 683.742 L876.837 683.742 L876.278 683.742 L875.718 683.742 L875.159 683.742 L874.6 683.742 L874.041 683.742 L873.481 683.742 L872.922 683.742 L872.363 683.742 L871.804 683.742 L871.244 683.742 L870.685 683.742 L870.126 683.742 L869.567 683.742 L869.007 683.742 L868.448 683.742 L867.889 683.742 L867.33 683.742 L866.77 683.742 L866.211 683.742 L865.652 683.742 L865.093 683.742 L864.533 683.742 L863.974 683.742 L863.415 683.742 L862.856 683.742 L862.296 683.742 L861.737 683.742 L861.178 683.742 L860.619 683.742 L860.059 683.742 L859.5 683.742 L858.941 683.742 L858.382 683.742 L857.822 683.742 L857.263 683.742 L856.704 683.742 L856.145 683.742 L855.585 683.742 L855.026 683.742 L854.467 683.742 L853.908 683.742 L853.348 683.742 L852.789 683.742 L852.23 683.742 L851.671 683.742 L851.111 683.742 L850.552 683.742 L849.993 683.742 L849.434 683.742 L848.874 683.742 L848.315 683.742 L847.756 683.742 L847.197 683.742 L846.637 683.742 L846.078 683.742 L845.519 683.742 L844.96 683.742 L844.4 683.742 L843.841 683.742 L843.282 683.742 L842.723 683.742 L842.163 683.742 L841.604 683.742 L841.045 683.742 L840.486 683.742 L839.926 683.742 L839.367 683.742 L838.808 683.742 L838.249 683.742 L837.689 683.742 L837.13 683.742 L836.571 683.742 L836.012 683.742 L835.452 683.742 L834.893 683.742 L834.334 683.742 L833.775 683.742 L833.215 683.742 L832.656 683.742 L832.097 683.742 L831.538 683.742 L830.978 683.742 L830.419 683.742 L829.86 683.742 L829.301 683.742 L828.741 683.742 L828.182 683.742 L827.623 683.742 L827.064 683.742 L826.504 683.742 L825.945 683.742 L825.386 683.742 L824.827 683.742 L824.267 683.742 L823.708 683.742 L823.149 683.742 L822.59 683.742 L822.03 683.742 L821.471 683.742 L820.912 683.742 L820.353 683.742 L819.793 683.742 L819.234 683.742 L818.675 683.742 L818.116 683.742 L817.556 683.742 L816.997 683.742 L816.438 683.742 L815.879 683.742 L815.319 683.742 L814.76 683.742 L814.201 683.742 L813.642 683.742 L813.082 683.742 L812.523 683.742 L811.964 683.742 L811.405 683.742 L810.845 683.742 L810.286 683.742 L809.727 683.742 L809.168 683.742 L808.608 683.742 L808.049 683.742 L807.49 683.742 L806.931 683.742 L806.371 683.742 L805.812 683.742 L805.253 683.742 L804.693 683.742 L804.134 683.742 L803.575 683.742 L803.016 683.742 L802.456 683.742 L801.897 683.742 L801.338 683.742 L800.779 683.742 L800.219 683.742 L799.66 683.742 L799.101 683.742 L798.542 683.742 L797.982 683.742 L797.423 683.742 L796.864 683.742 L796.305 683.742 L795.745 683.742 L795.186 683.742 L794.627 683.742 L794.068 683.742 L793.508 683.742 L792.949 683.742 L792.39 683.742 L791.831 683.742 L791.271 683.742 L790.712 683.742 L790.153 683.742 L789.594 683.742 L789.034 683.742 L788.475 683.742 L787.916 683.742 L787.357 683.742 L786.797 683.742 L786.238 683.742 L785.679 683.742 L785.12 683.742 L784.56 683.742 L784.001 683.742 L783.442 683.742 L782.883 683.742 L782.323 683.742 L781.764 683.742 L781.205 683.742 L780.646 683.742 L780.086 683.742 L779.527 683.742 L778.968 683.742 L778.409 683.742 L777.849 683.742 L777.29 683.742 L776.731 683.742 L776.172 683.742 L775.612 683.742 L775.053 683.742 L774.494 683.742 L773.935 683.742 L773.375 683.742 L772.816 683.742 L772.257 683.742 L771.698 683.742 L771.138 683.742 L770.579 683.742 L770.02 683.742 L769.461 683.742 L768.901 683.742 L768.342 683.742 L767.783 683.742 L767.224 683.742 L766.664 683.742 L766.105 683.742 L765.546 683.742 L764.987 683.742 L764.427 683.742 L763.868 683.742 L763.309 683.742 L762.75 683.742 L762.19 683.742 L761.631 683.742 L761.072 683.742 L760.513 683.742 L759.953 683.742 L759.394 683.742 L758.835 683.742 L758.276 683.742 L757.716 683.742 L757.157 683.742 L756.598 683.742 L756.039 683.742 L755.479 683.742 L754.92 683.742 L754.361 683.742 L753.802 683.742 L753.242 683.742 L752.683 683.742 L752.124 683.742 L751.565 683.742 L751.005 683.742 L750.446 683.742 L749.887 683.742 L749.328 683.742 L748.768 683.742 L748.209 683.742 L747.65 683.742 L747.091 683.742 L746.531 683.742 L745.972 683.742 L745.413 683.742 L744.854 683.742 L744.294 683.742 L743.735 683.742 L743.176 683.742 L742.617 683.742 L742.057 683.742 L741.498 683.742 L740.939 683.742 L740.38 683.742 L739.82 683.742 L739.261 683.742 L738.702 683.742 L738.143 683.742 L737.583 683.742 L737.024 683.742 L736.465 683.742 L735.906 683.742 L735.346 683.742 L734.787 683.742 L734.228 683.742 L733.669 683.742 L733.109 683.742 L732.55 683.742 L731.991 683.742 L731.432 683.742 L730.872 683.742 L730.313 683.742 L729.754 683.742 L729.195 683.742 L728.635 683.742 L728.076 683.742 L727.517 683.742 L726.958 683.742 L726.398 683.742 L725.839 683.742 L725.28 683.742 L724.721 683.742 L724.161 683.742 L723.602 683.742 L723.043 683.742 L722.484 683.742 L721.924 683.742 L721.365 683.742 L720.806 683.742 L720.247 683.742  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.136 720.806,687.136 721.365,687.136 721.924,687.136 722.484,687.136 723.043,687.136 723.602,687.136 724.161,687.136 724.721,687.136 725.28,687.136 725.839,687.136 726.398,687.136 726.958,687.136 727.517,687.136 728.076,687.136 728.635,687.136 729.195,687.136 729.754,687.136 730.313,687.136 730.872,687.136 731.432,687.136 731.991,687.136 732.55,687.136 733.109,687.136 733.669,687.136 734.228,687.136 734.787,687.136 735.346,687.136 735.906,687.136 736.465,687.136 737.024,687.136 737.583,687.136 738.143,687.136 738.702,687.136 739.261,687.136 739.82,687.136 740.38,687.136 740.939,687.136 741.498,687.136 742.057,687.136 742.617,687.136 743.176,687.136 743.735,687.136 744.294,687.136 744.854,687.136 745.413,687.136 745.972,687.136 746.531,687.136 747.091,687.136 747.65,687.136 748.209,687.136 748.768,687.136 749.328,687.136 749.887,687.136 750.446,687.136 751.005,687.136 751.565,687.136 752.124,687.136 752.683,687.136 753.242,687.136 753.802,687.136 754.361,687.136 754.92,687.136 755.479,687.136 756.039,687.136 756.598,687.136 757.157,687.136 757.716,687.136 758.276,687.136 758.835,687.136 759.394,687.136 759.953,687.136 760.513,687.136 761.072,687.136 761.631,687.136 762.19,687.136 762.75,687.136 763.309,687.136 763.868,687.136 764.427,687.136 764.987,687.136 765.546,687.136 766.105,687.136 766.664,687.136 767.224,687.136 767.783,687.136 768.342,687.136 768.901,687.136 769.461,687.136 770.02,687.136 770.579,687.136 771.138,687.136 771.698,687.136 772.257,687.136 772.816,687.136 773.375,687.136 773.935,687.136 774.494,687.136 775.053,687.136 775.612,687.136 776.172,687.136 776.731,687.136 777.29,687.136 777.849,687.136 778.409,687.136 778.968,687.136 779.527,687.136 780.086,687.136 780.646,687.136 781.205,687.136 781.764,687.136 782.323,687.136 782.883,687.136 783.442,687.136 784.001,687.136 784.56,687.136 785.12,687.136 785.679,687.136 786.238,687.136 786.797,687.136 787.357,687.136 787.916,687.136 788.475,687.136 789.034,687.136 789.594,687.136 790.153,687.136 790.712,687.136 791.271,687.136 791.831,687.136 792.39,687.136 792.949,687.136 793.508,687.136 794.068,687.136 794.627,687.136 795.186,687.136 795.745,687.136 796.305,687.136 796.864,687.136 797.423,687.136 797.982,687.136 798.542,687.136 799.101,687.136 799.66,687.136 800.219,687.136 800.779,687.136 801.338,687.136 801.897,687.136 802.456,687.136 803.016,687.136 803.575,687.136 804.134,687.136 804.693,687.136 805.253,687.136 805.812,687.136 806.371,687.136 806.931,687.136 807.49,687.136 808.049,687.136 808.608,687.136 809.168,687.136 809.727,687.136 810.286,687.136 810.845,687.136 811.405,687.136 811.964,687.136 812.523,687.136 813.082,687.136 813.642,687.136 814.201,687.136 814.76,687.136 815.319,687.136 815.879,687.136 816.438,687.136 816.997,687.136 817.556,687.136 818.116,687.136 818.675,687.136 819.234,687.136 819.793,687.136 820.353,687.136 820.912,687.136 821.471,687.136 822.03,687.136 822.59,687.136 823.149,687.136 823.708,687.136 824.267,687.136 824.827,687.136 825.386,687.136 825.945,687.136 826.504,687.136 827.064,687.136 827.623,687.136 828.182,687.136 828.741,687.136 829.301,687.136 829.86,687.136 830.419,687.136 830.978,687.136 831.538,687.136 832.097,687.136 832.656,687.136 833.215,687.136 833.775,687.136 834.334,687.136 834.893,687.136 835.452,687.136 836.012,687.136 836.571,687.136 837.13,687.136 837.689,687.136 838.249,687.136 838.808,687.136 839.367,687.136 839.926,687.136 840.486,687.136 841.045,687.136 841.604,687.136 842.163,687.136 842.723,687.136 843.282,687.136 843.841,687.136 844.4,687.136 844.96,687.136 845.519,687.136 846.078,687.136 846.637,687.136 847.197,687.136 847.756,687.136 848.315,687.136 848.874,687.136 849.434,687.136 849.993,687.136 850.552,687.136 851.111,687.136 851.671,687.136 852.23,687.136 852.789,687.136 853.348,687.136 853.908,687.136 854.467,687.136 855.026,687.136 855.585,687.136 856.145,687.136 856.704,687.136 857.263,687.136 857.822,687.136 858.382,687.136 858.941,687.136 859.5,687.136 860.059,687.136 860.619,687.136 861.178,687.136 861.737,687.136 862.296,687.136 862.856,687.136 863.415,687.136 863.974,687.136 864.533,687.136 865.093,687.136 865.652,687.136 866.211,687.136 866.77,687.136 867.33,687.136 867.889,687.136 868.448,687.136 869.007,687.136 869.567,687.136 870.126,687.136 870.685,687.136 871.244,687.136 871.804,687.136 872.363,687.136 872.922,687.136 873.481,687.136 874.041,687.136 874.6,687.136 875.159,687.136 875.718,687.136 876.278,687.136 876.837,687.136 877.396,687.136 877.955,687.136 878.515,687.136 879.074,687.136 879.633,687.136 880.192,687.136 880.752,687.136 881.311,687.136 881.87,687.136 882.429,687.136 882.989,687.136 883.548,687.136 884.107,687.136 884.666,687.136 885.226,687.136 885.785,687.136 886.344,687.136 886.903,687.136 887.463,687.136 888.022,687.136 888.581,687.136 889.14,687.136 889.7,687.136 890.259,687.136 890.818,687.136 891.377,687.136 891.937,687.136 892.496,687.136 893.055,687.136 893.614,687.136 894.174,687.136 894.733,687.136 895.292,687.136 895.851,687.136 896.411,687.136 896.97,687.136 897.529,687.136 898.088,687.136 898.648,687.136 899.207,687.136 899.766,687.136 900.325,687.136 900.885,687.136 901.444,687.136 902.003,687.136 902.562,687.136 903.122,687.136 903.681,687.136 904.24,687.136 904.799,687.136 905.359,687.136 905.918,687.136 906.477,687.136 907.036,687.136 907.596,687.136 908.155,687.136 908.714,687.136 909.273,687.136 909.833,687.136 910.392,687.136 910.951,687.136 911.51,687.136 912.07,687.136 912.629,687.136 913.188,687.136 913.747,687.136 914.307,687.136 914.866,687.136 915.425,687.136 915.984,687.136 916.544,687.136 917.103,687.136 917.662,687.136 918.221,687.136 918.781,687.136 919.34,687.136 919.899,687.136 920.458,687.136 921.018,687.136 921.577,687.136 922.136,687.136 922.695,687.136 923.255,687.136 923.814,687.136 924.373,687.136 924.932,687.136 925.492,687.136 926.051,687.136 926.61,687.136 927.169,687.136 927.729,687.136 928.288,687.136 928.847,687.136 929.406,687.136 929.966,687.136 930.525,687.136 931.084,687.136 931.644,687.136 932.203,687.136 932.762,687.136 933.321,687.136 933.881,687.136 934.44,687.136 934.999,687.136 935.558,687.136 936.118,687.136 936.677,687.136 937.236,687.136 937.795,687.136 938.355,687.136 938.914,687.136 939.473,687.136 940.032,687.136 940.592,687.136 941.151,687.136 941.71,687.136 942.269,687.136 942.829,687.136 943.388,687.136 943.947,687.136 944.506,687.136 945.066,687.136 945.625,687.136 946.184,687.136 946.743,687.136 947.303,687.136 947.862,687.136 948.421,687.136 948.98,687.136 949.54,687.136 950.099,687.136 950.658,687.136 951.217,687.136 951.777,687.136 952.336,687.136 952.895,687.136 953.454,687.136 954.014,687.136 954.573,687.136 955.132,687.136 955.691,687.136 956.251,687.136 956.81,687.136 957.369,687.136 957.928,687.136 958.488,687.136 959.047,687.136 959.606,687.136 960.165,687.136 960.725,687.136 961.284,687.136 961.843,687.136 962.402,687.136 962.962,687.136 963.521,687.136 964.08,687.136 964.639,687.136 965.199,687.136 965.758,687.136 966.317,687.136 966.876,687.136 967.436,687.136 967.995,687.136 968.554,687.136 969.113,687.136 969.673,687.136 970.232,687.136 970.791,687.136 971.35,687.136 971.91,687.136 972.469,687.136 973.028,687.136 973.587,687.136 974.147,687.136 974.706,687.136 975.265,687.136 975.824,687.136 976.384,687.136 976.943,687.136 977.502,687.136 978.061,687.136 978.621,687.136 979.18,687.136 979.739,687.136 980.298,687.136 980.858,687.136 981.417,687.136 981.976,687.136 982.535,687.136 983.095,687.136 983.654,687.136 984.213,687.136 984.772,687.136 985.332,687.136 985.891,687.136 986.45,687.136 987.009,687.136 987.569,687.136 988.128,687.136 988.687,687.136 989.246,687.136 989.806,687.136 990.365,687.136 990.924,687.136 991.483,687.136 992.043,687.136 992.602,687.136 993.161,687.136 993.72,687.136 994.28,687.136 994.839,687.136 995.398,687.136 995.957,687.136 996.517,687.136 997.076,687.136 997.635,687.136 998.194,687.136 998.754,687.136 999.313,687.136 999.872,687.136 1000.43,687.136 1000.99,687.136 1001.55,687.136 1002.11,687.136 1002.67,687.136 1003.23,687.136 1003.79,687.136 1004.35,687.136 1004.91,687.136 1005.46,687.136 1006.02,687.136 1006.58,687.136 1007.14,687.136 1007.7,687.136 1008.26,687.136 1008.82,687.136 1009.38,687.136 1009.94,687.136 1010.5,687.136 1011.06,687.136 1011.62,687.136 1012.18,687.136 1012.73,687.136 1013.29,687.136 1013.85,687.136 1014.41,687.136 1014.97,687.136 1015.53,687.136 1016.09,687.136 1016.65,687.136 1017.21,687.136 1017.77,687.136 1018.33,687.136 1018.89,687.136 1019.45,687.136 1020.01,687.136 1020.56,687.136 1021.12,687.136 1021.68,687.136 1022.24,687.136 1022.8,687.136 1023.36,687.136 1023.92,687.136 1024.48,687.136 1025.04,687.136 1025.6,687.136 1026.16,687.136 1026.72,687.136 1027.28,687.136 1027.83,687.136 1028.39,687.136 1028.95,687.136 1029.51,687.136 1030.07,687.136 1030.63,687.136 1031.19,687.136 1031.75,687.136 1032.31,687.136 1032.87,687.136 1033.43,687.136 1033.99,687.136 1034.55,687.136 1035.1,687.136 1035.66,687.136 1036.22,687.136 1036.78,687.136 1037.34,687.136 1037.9,687.136 1038.46,687.136 1039.02,687.136 1039.58,687.136 1040.14,687.136 1040.7,687.136 1041.26,687.136 1041.82,687.136 1042.38,687.136 1042.93,687.136 1043.49,687.136 1044.05,687.136 1044.61,687.136 1045.17,687.136 1045.73,687.136 1046.29,687.136 1046.85,687.136 1047.41,687.136 1047.97,687.136 1048.53,687.136 1049.09,687.136 1049.65,687.136 1050.2,687.136 1050.76,687.136 1051.32,687.136 1051.88,687.136 1052.44,687.136 1053,687.136 1053.56,687.136 1054.12,687.136 1054.68,687.136 1055.24,687.136 1055.8,687.136 1056.36,687.136 1056.92,687.136 1057.48,687.136 1058.03,687.136 1058.59,687.136 1059.15,687.136 1059.71,687.136 1060.27,687.136 1060.83,687.136 1061.39,687.136 1061.95,687.136 1062.51,687.136 1063.07,687.136 1063.63,687.136 1064.19,687.136 1064.75,687.136 1065.3,687.136 1065.86,687.136 1066.42,687.136 1066.98,687.136 1067.54,687.136 1068.1,687.136 1068.66,687.136 1069.22,687.136 1069.78,687.136 1070.34,687.136 1070.9,687.136 1071.46,687.136 1072.02,687.136 1072.57,687.136 1073.13,687.136 1073.69,687.136 1074.25,687.136 1074.81,687.136 1075.37,687.136 1075.93,687.136 1076.49,687.136 1077.05,687.136 1077.61,687.136 1078.17,687.136 1078.73,687.136 1079.29,687.136 1079.85,687.136 1080.4,687.136 1080.96,687.136 1081.52,687.136 1082.08,687.136 1082.64,687.136 1083.2,687.136 1083.76,687.136 1084.32,687.136 1084.88,687.136 1085.44,687.136 1086,687.136 1086.56,687.136 1087.12,687.136 1087.67,687.136 1088.23,687.136 1088.79,687.136 1089.35,687.136 1089.91,687.136 1090.47,687.136 1091.03,687.136 1091.59,687.136 1092.15,687.136 1092.71,687.136 1093.27,687.136 1093.83,687.136 1094.39,687.136 1094.94,687.136 1095.5,687.136 1096.06,687.136 1096.62,687.136 1097.18,687.136 1097.74,687.136 1098.3,687.136 1098.86,687.136 1099.42,687.136 1099.98,687.136 1100.54,687.136 1101.1,687.136 1101.66,687.136 1102.22,687.136 1102.77,687.136 1103.33,687.136 1103.89,687.136 1104.45,687.136 1105.01,687.136 1105.57,687.136 1106.13,687.136 1106.69,687.136 1107.25,687.136 1107.81,687.136 1108.37,687.136 1108.93,687.136 1109.49,687.136 1110.04,687.136 1110.6,687.136 1111.16,687.136 1111.72,687.136 1112.28,687.136 1112.84,687.136 1113.4,687.136 1113.96,687.136 1114.52,687.136 1115.08,687.136 1115.64,687.136 1116.2,687.136 1116.76,687.136 1117.31,687.136 1117.87,687.136 1118.43,687.136 1118.99,687.136 1119.55,687.136 1120.11,687.136 1120.67,687.136 1121.23,687.136 1121.79,687.136 1122.35,687.136 1122.91,687.136 1123.47,687.136 1124.03,687.136 1124.59,687.136 1125.14,687.136 1125.7,687.136 1126.26,687.136 1126.82,687.136 1127.38,687.136 1127.94,687.136 1128.5,687.136 1129.06,687.136 1129.62,687.136 1130.18,687.136 1130.74,687.136 1131.3,687.136 1131.86,687.136 1132.41,687.136 1132.97,687.136 1133.53,687.136 1134.09,687.136 1134.65,687.136 1135.21,687.136 1135.77,687.136 1136.33,687.136 1136.89,687.136 1137.45,687.136 1138.01,687.136 1138.57,687.136 1139.13,687.136 1139.68,687.136 1140.24,687.136 1140.8,687.136 1141.36,687.136 1141.92,687.136 1142.48,687.136 1143.04,687.136 1143.6,687.136 1144.16,687.136 1144.72,687.136 1145.28,687.136 1145.84,687.136 1146.4,687.136 1146.96,687.136 1147.51,687.136 1148.07,687.136 1148.63,687.136 1149.19,687.136 1149.75,687.136 1150.31,687.136 1150.87,687.136 1151.43,687.136 1151.99,687.136 1152.55,687.136 1153.11,687.136 1153.67,687.136 1154.23,687.136 1154.78,687.136 1155.34,687.136 1155.9,687.136 1156.46,687.136 1157.02,687.136 1157.58,687.136 1158.14,687.136 1158.7,687.136 1159.26,687.136 1159.82,687.136 1160.38,687.136 1160.94,687.136 1161.5,687.136 1162.05,687.136 1162.61,687.136 1163.17,687.136 1163.73,687.136 1164.29,687.136 1164.85,687.136 1165.41,687.136 1165.97,687.136 1166.53,687.136 1167.09,687.136 1167.65,687.136 1168.21,687.136 1168.77,687.136 1169.33,687.136 1169.88,687.136 1170.44,687.136 1171,687.136 1171.56,687.136 1172.12,687.136 1172.68,687.136 1173.24,687.136 1173.8,687.136 1174.36,687.136 1174.92,687.136 1175.48,687.136 1176.04,687.136 1176.6,687.136 1177.15,687.136 1177.71,687.136 1178.27,687.136 1178.83,687.136 1179.39,687.136 1179.95,687.136 1180.51,687.136 1181.07,687.136 1181.63,687.136 1182.19,687.136 1182.75,687.136 1183.31,687.136 1183.87,687.136 1184.43,687.136 1184.98,687.136 1185.54,687.136 1186.1,687.136 1186.66,687.136 1187.22,687.136 1187.78,687.136 1188.34,687.136 1188.9,687.136 1189.46,687.136 1190.02,687.136 1190.58,687.136 1191.14,687.136 1191.7,687.136 1192.25,687.136 1192.81,687.136 1193.37,687.136 1193.93,687.136 1194.49,687.136 1195.05,687.136 1195.61,687.136 1196.17,687.136 1196.73,687.136 1197.29,687.136 1197.85,687.136 1198.41,687.136 1198.97,687.136 1199.52,687.136 1200.08,687.136 1200.64,687.136 1201.2,687.136 1201.76,687.136 1202.32,687.136 1202.88,687.136 1203.44,687.136 1204,687.136 1204.56,687.136 1205.12,687.136 1205.68,687.136 1206.24,687.136 1206.8,687.136 1207.35,687.136 1207.91,687.136 1208.47,687.136 1209.03,687.136 1209.59,687.136 1210.15,687.136 1210.71,687.136 1211.27,687.136 1211.83,687.136 1212.39,687.136 1212.95,687.136 1213.51,687.136 1214.07,687.136 1214.62,687.136 1215.18,687.136 1215.74,687.136 1216.3,687.136 1216.86,687.136 1217.42,687.136 1217.98,687.136 1218.54,687.136 1219.1,687.136 1219.66,687.136 1220.22,687.136 1220.78,687.136 1221.34,687.136 1221.89,687.136 1222.45,687.136 1223.01,687.136 1223.57,687.136 1224.13,687.136 1224.69,687.136 1225.25,687.136 1225.81,687.136 1226.37,687.136 1226.93,687.136 1227.49,687.136 1228.05,687.136 1228.61,687.136 1229.17,687.136 1229.72,687.136 1230.28,687.136 1230.84,687.136 1231.4,687.136 1231.96,687.136 1232.52,687.136 1233.08,687.136 1233.64,687.136 1234.2,687.136 1234.76,687.136 1235.32,687.136 1235.88,687.136 1236.44,687.136 1236.99,687.136 1237.55,687.136 1238.11,687.136 1238.67,687.136 1239.23,687.136 1239.79,687.136 1240.35,687.136 1240.91,687.136 1241.47,687.136 1242.03,687.136 1242.59,687.136 1243.15,687.136 1243.71,687.136 1244.26,687.136 1244.82,687.136 1245.38,687.136 1245.94,687.136 1246.5,687.136 1247.06,687.136 1247.62,687.136 1248.18,687.136 1248.74,687.136 1249.3,687.136 1249.86,687.136 1250.42,687.136 1250.98,687.136 1251.54,687.136 1252.09,687.136 1252.65,687.136 1253.21,687.136 1253.77,687.136 1254.33,687.136 1254.89,687.136 1255.45,687.136 1256.01,687.136 1256.57,687.136 1257.13,687.136 1257.69,687.136 1258.25,687.136 1258.81,687.136 1259.36,687.136 1259.92,687.136 1260.48,687.136 1261.04,687.136 1261.6,687.136 1262.16,687.136 1262.72,687.136 1263.28,687.136 1263.84,687.136 1264.4,687.136 1264.96,687.136 1265.52,687.136 1266.08,687.136 1266.63,687.136 1267.19,687.136 1267.75,687.136 1268.31,687.136 1268.87,687.136 1269.43,687.136 1269.99,687.136 1270.55,687.136 1271.11,687.136 1271.67,687.136 1272.23,687.136 1272.79,687.136 1273.35,687.136 1273.91,687.136 1274.46,687.136 1275.02,687.136 1275.58,687.136 1276.14,687.136 1276.7,687.136 1277.26,687.136 1277.82,687.136 1278.38,687.136 1278.94,687.136 1279.5,687.136 1280.06,687.136 1280.62,687.136 1281.18,687.136 1281.73,687.136 1282.29,687.136 1282.85,687.136 1283.41,687.136 1283.97,687.136 1284.53,687.136 1285.09,687.136 1285.65,687.136 1286.21,687.136 1286.77,687.136 1287.33,687.136 1287.89,687.136 1288.45,687.136 1289,687.136 1289.56,687.136 1290.12,687.136 1290.68,687.136 1291.24,687.136 1291.8,687.136 1292.36,687.136 1292.92,687.136 1293.48,687.136 1294.04,687.136 1294.6,687.136 1295.16,687.136 1295.72,687.136 1296.28,687.136 1296.83,687.136 1297.39,687.136 1297.95,687.136 1298.51,687.136 1299.07,687.136 1299.63,687.136 1300.19,687.136 1300.75,687.136 1301.31,687.136 1301.87,687.136 1302.43,687.136 1302.99,687.136 1303.55,687.136 1304.1,687.136 1304.66,687.136 1305.22,687.136 1305.78,687.136 1306.34,687.136 1306.9,687.136 1307.46,687.136 1308.02,687.136 1308.58,687.136 1309.14,687.136 1309.7,687.136 1310.26,687.136 1310.82,687.136 1311.38,687.136 1311.93,687.136 1312.49,687.136 1313.05,687.136 1313.61,687.136 1314.17,687.136 1314.73,687.136 1315.29,687.136 1315.85,687.136 1316.41,687.136 1316.97,687.136 1317.53,687.136 1318.09,687.136 1318.65,687.136 1319.2,687.136 1319.76,687.136 1320.32,687.136 1320.88,687.136 1321.44,687.136 1322,687.136 1322.56,687.136 1323.12,687.136 1323.68,687.136 1324.24,687.136 1324.8,687.136 1325.36,687.136 1325.92,687.136 1326.47,687.136 1327.03,687.136 1327.59,687.136 1328.15,687.136 1328.71,687.136 1329.27,687.136 1329.83,687.136 1330.39,687.136 1330.95,687.136 1331.51,687.136 1332.07,687.136 1332.63,687.136 1333.19,687.136 1333.75,687.136 1334.3,687.136 1334.86,687.136 1335.42,687.136 1335.98,687.136 1336.54,687.136 1337.1,687.136 1337.66,687.136 1338.22,687.136 1338.78,687.136 1339.34,687.136 1339.9,687.136 1340.46,687.136 1341.02,687.136 1341.57,687.136 1342.13,687.136 1342.69,687.136 1343.25,687.136 1343.81,687.136 1344.37,687.136 1344.93,687.136 1345.49,687.136 1346.05,687.136 1346.61,687.136 1347.17,687.136 1347.73,687.136 1348.29,687.136 1348.84,687.136 1349.4,687.136 1349.96,687.136 1350.52,687.136 1351.08,687.136 1351.64,687.136 1352.2,687.136 1352.76,687.136 1353.32,687.136 1353.88,687.136 1354.44,687.136 1355,687.136 1355.56,687.136 1356.12,687.136 1356.67,687.136 1357.23,687.136 1357.79,687.136 1358.35,687.136 1358.91,687.136 1359.47,687.136 1360.03,687.136 1360.59,687.136 1361.15,687.136 1361.71,687.136 1362.27,687.136 1362.83,687.136 1363.39,687.136 1363.94,687.136 1364.5,687.136 1365.06,687.136 1365.62,687.136 1366.18,687.136 1366.74,687.136 1367.3,687.136 1367.86,687.136 1368.42,687.136 1368.98,687.136 1369.54,687.136 1370.1,687.136 1370.66,687.136 1371.21,687.136 1371.77,687.136 1372.33,687.136 1372.89,687.136 1373.45,687.136 1374.01,687.136 1374.57,687.136 1375.13,687.136 1375.69,687.136 1376.25,687.136 1376.81,687.136 1377.37,687.136 1377.93,687.136 1378.49,687.136 1379.04,687.136 1379.6,687.136 1380.16,687.136 1380.72,687.136 1381.28,687.136 1381.84,687.136 1382.4,687.136 1382.96,687.136 1383.52,687.136 1384.08,687.136 1384.64,687.136 1385.2,687.136 1385.76,687.136 1386.31,687.136 1386.87,687.136 1387.43,687.136 1387.99,687.136 1388.55,687.136 1389.11,687.136 1389.67,687.136 1390.23,687.136 1390.79,687.136 1391.35,687.136 1391.91,687.136 1392.47,687.136 1393.03,687.136 1393.58,687.136 1394.14,687.136 1394.7,687.136 1395.26,687.136 1395.82,687.136 1396.38,687.136 1396.94,687.136 1397.5,687.136 1398.06,687.136 1398.62,687.136 1399.18,687.136 1399.74,687.136 1400.3,687.136 1400.86,687.136 1401.41,687.136 1401.97,687.136 1402.53,687.136 1403.09,687.136 1403.65,687.136 1404.21,687.136 1404.77,687.136 1405.33,687.136 1405.89,687.136 1406.45,687.136 1407.01,687.136 1407.57,687.136 1408.13,687.136 1408.68,687.136 1409.24,687.136 1409.8,687.136 1410.36,687.136 1410.92,687.136 1411.48,687.136 1412.04,687.136 1412.6,687.136 1413.16,687.136 1413.72,687.136 1414.28,687.136 1414.84,687.136 1415.4,687.136 1415.95,687.136 1416.51,687.136 1417.07,687.136 1417.63,687.136 1418.19,687.136 1418.75,687.136 1419.31,687.136 1419.87,687.136 1420.43,687.136 1420.99,687.136 1421.55,687.136 1422.11,687.136 1422.67,687.136 1423.23,687.136 1423.78,687.136 1424.34,687.136 1424.9,687.136 1425.46,687.136 1426.02,687.136 1426.58,687.136 1427.14,687.136 1427.7,687.136 1428.26,687.136 1428.82,687.136 1429.38,687.136 1429.94,687.136 1430.5,687.136 1431.05,687.136 1431.61,687.136 1432.17,687.136 1432.73,687.136 1433.29,687.136 1433.85,687.136 1434.41,687.136 1434.97,687.136 1435.53,687.136 1436.09,687.136 1436.65,687.136 1437.21,687.136 1437.77,687.136 1438.33,687.136 1438.88,687.136 1439.44,687.136 1440,687.136 1440.56,687.136 1441.12,687.136 1441.68,687.136 1442.24,687.136 1442.8,687.136 1443.36,687.136 1443.92,687.136 1444.48,687.136 1445.04,687.136 1445.6,687.136 1446.15,687.136 1446.71,687.136 1447.27,687.136 1447.83,687.136 1448.39,687.136 1448.95,687.136 1449.51,687.136 1450.07,687.136 1450.63,687.136 1451.19,687.136 1451.75,687.136 1452.31,687.136 1452.87,687.136 1453.42,687.136 1453.98,687.136 1454.54,687.136 1455.1,687.136 1455.66,687.136 1456.22,687.136 1456.78,687.136 1457.34,687.136 1457.9,687.136 1458.46,687.136 1459.02,687.136 1459.58,687.136 1460.14,687.136 1460.7,687.136 1461.25,687.136 1461.81,687.136 1462.37,687.136 1462.93,687.136 1463.49,687.136 1464.05,687.136 1464.61,687.136 1465.17,687.136 1465.73,687.136 1466.29,687.136 1466.85,687.136 1467.41,687.136 1467.97,687.136 1468.52,687.136 1469.08,687.136 1469.64,687.136 1470.2,687.136 1470.76,687.136 1471.32,687.136 1471.88,687.136 1472.44,687.136 1473,687.136 1473.56,687.136 1474.12,687.136 1474.68,687.136 1475.24,687.136 1475.79,687.136 1476.35,687.136 1476.91,687.136 1477.47,687.136 1478.03,687.136 1478.59,687.136 1479.15,687.136 1479.71,687.136 1480.27,687.136 1480.83,687.136 1481.39,687.136 1481.95,687.136 1482.51,687.136 1483.07,687.136 1483.62,687.136 1484.18,687.136 1484.74,687.136 1485.3,687.136 1485.86,687.136 1486.42,687.136 1486.98,687.136 1487.54,687.136 1488.1,687.136 1488.66,687.136 1489.22,687.136 1489.78,687.136 1490.34,687.136 1490.89,687.136 1491.45,687.136 1492.01,687.136 1492.57,687.136 1493.13,687.136 1493.69,687.136 1494.25,687.136 1494.81,687.136 1495.37,687.136 1495.93,687.136 1496.49,687.136 1497.05,687.136 1497.61,687.136 1498.16,687.136 1498.72,687.136 1499.28,687.136 1499.84,687.136 1500.4,687.136 1500.96,687.136 1501.52,687.136 1502.08,687.136 1502.64,687.136 1503.2,687.136 1503.76,687.136 1504.32,687.136 1504.88,687.136 1505.44,687.136 1505.99,687.136 1506.55,687.136 1507.11,687.136 1507.67,687.136 1508.23,687.136 1508.79,687.136 1509.35,687.136 1509.91,687.136 1510.47,687.136 1511.03,687.136 1511.59,687.136 1512.15,687.136 1512.71,687.136 1513.26,687.136 1513.82,687.136 1514.38,687.136 1514.94,687.136 1515.5,687.136 1516.06,687.136 1516.62,687.136 1517.18,687.136 1517.74,687.136 1518.3,687.136 1518.86,687.136 1519.42,687.136 1519.98,687.136 1520.53,687.136 1521.09,687.136 1521.65,687.136 1522.21,687.136 1522.77,687.136 1523.33,687.136 1523.89,687.136 1524.45,687.136 1525.01,687.136 1525.57,687.136 1526.13,687.136 1526.69,687.136 1527.25,687.136 1527.81,687.136 1528.36,687.136 1528.92,687.136 1529.48,687.136 1530.04,687.136 1530.6,687.136 1531.16,687.136 1531.72,687.136 1532.28,687.136 1532.84,687.136 1533.4,687.136 1533.96,687.136 1534.52,687.136 1535.08,687.136 1535.63,687.136 1536.19,687.136 1536.75,687.136 1537.31,687.136 1537.87,687.136 1538.43,687.136 1538.99,687.136 1539.55,687.136 1540.11,687.136 1540.67,687.136 1541.23,687.136 1541.79,687.136 1542.35,687.136 1542.9,687.136 1543.46,687.136 1544.02,687.136 1544.58,687.136 1545.14,687.136 1545.7,687.136 1546.26,687.136 1546.82,687.136 1547.38,687.136 1547.94,687.136 1548.5,687.136 1549.06,687.136 1549.62,687.136 1550.18,687.136 1550.73,687.136 1551.29,687.136 1551.85,687.136 1552.41,687.136 1552.97,687.136 1553.53,687.136 1554.09,687.136 1554.65,687.136 1555.21,687.136 1555.77,687.136 1556.33,687.136 1556.89,687.136 1557.45,687.136 1558,687.136 1558.56,687.136 1559.12,687.136 1559.68,687.136 1560.24,687.136 1560.8,687.136 1561.36,687.136 1561.92,687.136 1562.48,687.136 1563.04,687.136 1563.6,687.136 1564.16,687.136 1564.72,687.136 1565.28,687.136 1565.83,687.136 1566.39,687.136 1566.95,687.136 1567.51,687.136 1568.07,687.136 1568.63,687.136 1569.19,687.136 1569.75,687.136 1570.31,687.136 1570.87,687.136 1571.43,687.136 1571.99,687.136 1572.55,687.136 1573.1,687.136 1573.66,687.136 1574.22,687.136 1574.78,687.136 1575.34,687.136 1575.9,687.136 1576.46,687.136 1577.02,687.136 1577.58,687.136 1578.14,687.136 1578.7,687.136 1579.26,687.136 1579.82,687.136 1580.37,687.136 1580.93,687.136 1581.49,687.136 1582.05,687.136 1582.61,687.136 1583.17,687.136 1583.73,687.136 1584.29,687.136 1584.85,687.136 1585.41,687.136 1585.97,687.136 1586.53,687.136 1587.09,687.136 1587.65,687.136 1588.2,687.136 1588.76,687.136 1589.32,687.136 1589.88,687.136 1590.44,687.136 1591,687.136 1591.56,687.136 1592.12,687.136 1592.68,687.136 1593.24,687.136 1593.8,687.136 1594.36,687.136 1594.92,687.136 1595.47,687.136 1596.03,687.136 1596.59,687.136 1597.15,687.136 1597.71,687.136 1598.27,687.136 1598.83,687.136 1599.39,687.136 1599.95,687.136 1600.51,687.136 1601.07,687.136 1601.63,687.136 1602.19,687.136 1602.74,687.136 1603.3,687.136 1603.86,687.136 1604.42,687.136 1604.98,687.136 1605.54,687.136 1606.1,687.136 1606.66,687.136 1607.22,687.136 1607.78,687.136 1608.34,687.136 1608.9,687.136 1609.46,687.136 1610.02,687.136 1610.57,687.136 1611.13,687.136 1611.69,687.136 1612.25,687.136 1612.81,687.136 1613.37,687.136 1613.93,687.136 1614.49,687.136 1615.05,687.136 1615.61,687.136 1616.17,687.136 1616.73,687.136 1617.29,687.136 1617.84,687.136 1618.4,687.136 1618.96,687.136 1619.52,687.136 1620.08,687.136 1620.64,687.136 1621.2,687.136 1621.76,687.136 1622.32,687.136 1622.88,687.136 1623.44,687.136 1624,687.136 1624.56,687.136 1625.11,687.136 1625.67,687.136 1626.23,687.136 1626.79,687.136 1627.35,687.136 1627.91,687.136 1628.47,687.136 1629.03,687.136 1629.59,687.136 1630.15,687.136 1630.71,687.136 1631.27,687.136 1631.83,687.136 1632.39,687.136 1632.94,687.136 1633.5,687.136 1634.06,687.136 1634.62,687.136 1635.18,687.136 1635.74,687.136 1636.3,687.136 1636.86,687.136 1637.42,687.136 1637.98,687.136 1638.54,687.136 1639.1,687.136 1639.66,687.136 1640.21,687.136 1640.77,687.136 1641.33,687.136 1641.89,687.136 1642.45,687.136 1643.01,687.136 1643.57,687.136 1644.13,687.136 1644.69,687.136 1645.25,687.136 1645.81,687.136 1646.37,687.136 1646.93,687.136 1647.48,687.136 1648.04,687.136 1648.6,687.136 1649.16,687.136 1649.72,687.136 1650.28,687.136 1650.84,687.136 1651.4,687.136 1651.96,687.136 1652.52,687.136 1653.08,687.136 1653.64,687.136 1654.2,687.136 1654.76,687.136 1655.31,687.136 1655.87,687.136 1656.43,687.136 1656.99,687.136 1657.55,687.136 1658.11,687.136 1658.67,687.136 1659.23,687.136 1659.79,687.136 1660.35,687.136 1660.91,687.136 1661.47,687.136 1662.03,687.136 1662.58,687.136 1663.14,687.136 1663.7,687.136 1664.26,687.136 1664.82,687.136 1665.38,687.136 1665.94,687.136 1666.5,687.136 1667.06,687.136 1667.62,687.136 1668.18,687.136 1668.74,687.136 1669.3,687.136 1669.85,687.136 1670.41,687.136 1670.97,687.136 1671.53,687.136 1672.09,687.136 1672.65,687.136 1673.21,687.136 1673.77,687.136 1674.33,687.136 1674.89,687.136 1675.45,687.136 1676.01,687.136 1676.57,687.136 1677.13,687.136 1677.68,687.136 1678.24,687.136 1678.8,687.136 1679.36,687.136 1679.92,687.136 1680.48,687.136 1681.04,687.136 1681.6,687.136 1682.16,687.136 1682.72,687.136 1683.28,687.136 1683.84,687.136 1684.4,687.136 1684.95,687.136 1685.51,687.136 1686.07,687.136 1686.63,687.136 1687.19,687.136 1687.75,687.136 1688.31,687.136 1688.87,687.136 1689.43,687.136 1689.99,687.136 1690.55,687.136 1691.11,687.136 1691.67,687.136 1692.23,687.136 1692.78,687.136 1693.34,687.136 1693.9,687.136 1694.46,687.136 1695.02,687.136 1695.58,687.136 1696.14,687.136 1696.7,687.136 1697.26,687.136 1697.82,687.136 1698.38,687.136 1698.94,687.136 1699.5,687.136 1700.05,687.136 1700.61,687.136 1701.17,687.136 1701.73,687.136 1702.29,687.136 1702.85,687.136 1703.41,687.136 1703.97,687.136 1704.53,687.136 1705.09,687.136 1705.65,687.136 1706.21,687.136 1706.77,687.136 1707.32,687.136 1707.88,687.136 1708.44,687.136 1709,687.136 1709.56,687.136 1710.12,687.136 1710.68,687.136 1711.24,687.136 1711.8,687.136 1712.36,687.136 1712.92,687.136 1713.48,687.136 1714.04,687.136 1714.6,687.136 1715.15,687.136 1715.71,687.136 1716.27,687.136 1716.83,687.136 1717.39,687.136 1717.95,687.136 1718.51,687.136 1719.07,687.136 1719.63,687.136 1720.19,687.136 1720.75,687.136 1721.31,687.136 1721.87,687.136 1722.42,687.136 1722.98,687.136 1723.54,687.136 1724.1,687.136 1724.66,687.136 1725.22,687.136 1725.78,687.136 1726.34,687.136 1726.9,687.136 1727.46,687.136 1728.02,687.136 1728.58,687.136 1729.14,687.136 1729.69,687.136 1730.25,687.136 1730.81,687.136 1731.37,687.136 1731.93,687.136 1732.49,687.136 1733.05,687.136 1733.61,687.136 1734.17,687.136 1734.73,687.136 1735.29,687.136 1735.85,687.136 1736.41,687.136 1736.97,687.136 1737.52,687.136 1738.08,687.136 1738.64,687.136 1739.2,687.136 1739.76,687.136 1740.32,687.136 1740.88,687.136 1741.44,687.136 1742,687.136 1742.56,687.136 1743.12,687.136 1743.68,687.136 1744.24,687.136 1744.79,687.136 1745.35,687.136 1745.91,687.136 1746.47,687.136 1747.03,687.136 1747.59,687.136 1748.15,687.136 1748.71,687.136 1749.27,687.136 1749.83,687.136 1750.39,687.136 1750.95,687.136 1751.51,687.136 1752.06,687.136 1752.62,687.136 1753.18,687.136 1753.74,687.136 1754.3,687.136 1754.86,687.136 1755.42,687.136 1755.98,687.136 1756.54,687.136 1757.1,687.136 1757.66,687.136 1758.22,687.136 1758.78,687.136 1759.34,687.136 1759.89,687.136 1760.45,687.136 1761.01,687.136 1761.57,687.136 1762.13,687.136 1762.69,687.136 1763.25,687.136 1763.81,687.136 1764.37,687.136 1764.93,687.136 1765.49,687.136 1766.05,687.136 1766.61,687.136 1767.16,687.136 1767.72,687.136 1768.28,687.136 1768.84,687.136 1769.4,687.136 1769.96,687.136 1770.52,687.136 1771.08,687.136 1771.64,687.136 1772.2,687.136 1772.76,687.136 1773.32,687.136 1773.88,687.136 1774.43,687.136 1774.99,687.136 1775.55,687.136 1776.11,687.136 1776.67,687.136 1777.23,687.136 1777.79,687.136 1778.35,687.136 1778.91,687.136 1779.47,687.136 1780.03,687.136 1780.59,687.136 1781.15,687.136 1781.71,687.136 1782.26,687.136 1782.82,687.136 1783.38,687.136 1783.94,687.136 1784.5,687.136 1785.06,687.136 1785.62,687.136 1786.18,687.136 1786.74,687.136 1787.3,687.136 1787.86,687.136 1788.42,687.136 1788.98,687.136 1789.53,687.136 1790.09,687.136 1790.65,687.136 1791.21,687.136 1791.77,687.136 1792.33,687.136 1792.89,687.136 1793.45,687.136 1794.01,687.136 1794.57,687.136 1795.13,687.136 1795.69,687.136 1796.25,687.136 1796.8,687.136 1797.36,687.136 1797.92,687.136 1798.48,687.136 1799.04,687.136 1799.6,687.136 1800.16,687.136 1800.72,687.136 1801.28,687.136 1801.84,687.136 1802.4,687.136 1802.96,687.136 1803.52,687.136 1804.08,687.136 1804.63,687.136 1805.19,687.136 1805.75,687.136 1806.31,687.136 1806.87,687.136 1807.43,687.136 1807.99,687.136 1808.55,687.136 1809.11,687.136 1809.67,687.136 1810.23,687.136 1810.79,687.136 1811.35,687.136 1811.9,687.136 1812.46,687.136 1813.02,687.136 1813.58,687.136 1814.14,687.136 1814.7,687.136 1815.26,687.136 1815.82,687.136 1816.38,687.136 1816.94,687.136 1817.5,687.136 1818.06,687.136 1818.62,687.136 1819.18,687.136 1819.73,687.136 1820.29,687.136 1820.85,687.136 1821.41,687.136 1821.97,687.136 1822.53,687.136 1823.09,687.136 1823.65,687.136 1824.21,687.136 1824.77,687.136 1825.33,687.136 1825.89,687.136 1826.45,687.136 1827,687.136 1827.56,687.136 1828.12,687.136 1828.68,687.136 1829.24,687.136 1829.8,687.136 1830.36,687.136 1830.92,687.136 1831.48,687.136 1832.04,687.136 1832.6,687.136 1833.16,687.136 1833.72,687.136 1834.27,687.136 1834.83,687.136 1835.39,687.136 1835.95,687.136 1836.51,687.136 1837.07,687.136 1837.63,687.136 1838.19,687.136 \"/>\n<path clip-path=\"url(#clip803)\" d=\"M720.247 684.992 L720.806 684.992 L721.365 684.992 L721.924 684.992 L722.484 684.992 L723.043 684.992 L723.602 684.992 L724.161 684.992 L724.721 684.992 L725.28 684.992 L725.839 684.992 L726.398 684.992 L726.958 684.992 L727.517 684.992 L728.076 684.992 L728.635 684.992 L729.195 684.992 L729.754 684.992 L730.313 684.992 L730.872 684.992 L731.432 684.992 L731.991 684.992 L732.55 684.992 L733.109 684.992 L733.669 684.992 L734.228 684.992 L734.787 684.992 L735.346 684.992 L735.906 684.992 L736.465 684.992 L737.024 684.992 L737.583 684.992 L738.143 684.992 L738.702 684.992 L739.261 684.992 L739.82 684.992 L740.38 684.992 L740.939 684.992 L741.498 684.992 L742.057 684.992 L742.617 684.992 L743.176 684.992 L743.735 684.992 L744.294 684.992 L744.854 684.992 L745.413 684.992 L745.972 684.992 L746.531 684.992 L747.091 684.992 L747.65 684.992 L748.209 684.992 L748.768 684.992 L749.328 684.992 L749.887 684.992 L750.446 684.992 L751.005 684.992 L751.565 684.992 L752.124 684.992 L752.683 684.992 L753.242 684.992 L753.802 684.992 L754.361 684.992 L754.92 684.992 L755.479 684.992 L756.039 684.992 L756.598 684.992 L757.157 684.992 L757.716 684.992 L758.276 684.992 L758.835 684.992 L759.394 684.992 L759.953 684.992 L760.513 684.992 L761.072 684.992 L761.631 684.992 L762.19 684.992 L762.75 684.992 L763.309 684.992 L763.868 684.992 L764.427 684.992 L764.987 684.992 L765.546 684.992 L766.105 684.992 L766.664 684.992 L767.224 684.992 L767.783 684.992 L768.342 684.992 L768.901 684.992 L769.461 684.992 L770.02 684.992 L770.579 684.992 L771.138 684.992 L771.698 684.992 L772.257 684.992 L772.816 684.992 L773.375 684.992 L773.935 684.992 L774.494 684.992 L775.053 684.992 L775.612 684.992 L776.172 684.992 L776.731 684.992 L777.29 684.992 L777.849 684.992 L778.409 684.992 L778.968 684.992 L779.527 684.992 L780.086 684.992 L780.646 684.992 L781.205 684.992 L781.764 684.992 L782.323 684.992 L782.883 684.992 L783.442 684.992 L784.001 684.992 L784.56 684.992 L785.12 684.992 L785.679 684.992 L786.238 684.992 L786.797 684.992 L787.357 684.992 L787.916 684.992 L788.475 684.992 L789.034 684.992 L789.594 684.992 L790.153 684.992 L790.712 684.992 L791.271 684.992 L791.831 684.992 L792.39 684.992 L792.949 684.992 L793.508 684.992 L794.068 684.992 L794.627 684.992 L795.186 684.992 L795.745 684.992 L796.305 684.992 L796.864 684.992 L797.423 684.992 L797.982 684.992 L798.542 684.992 L799.101 684.992 L799.66 684.992 L800.219 684.992 L800.779 684.992 L801.338 684.992 L801.897 684.992 L802.456 684.992 L803.016 684.992 L803.575 684.992 L804.134 684.992 L804.693 684.992 L805.253 684.992 L805.812 684.992 L806.371 684.992 L806.931 684.992 L807.49 684.992 L808.049 684.992 L808.608 684.992 L809.168 684.992 L809.727 684.992 L810.286 684.992 L810.845 684.992 L811.405 684.992 L811.964 684.992 L812.523 684.992 L813.082 684.992 L813.642 684.992 L814.201 684.992 L814.76 684.992 L815.319 684.992 L815.879 684.992 L816.438 684.992 L816.997 684.992 L817.556 684.992 L818.116 684.992 L818.675 684.992 L819.234 684.992 L819.793 684.992 L820.353 684.992 L820.912 684.992 L821.471 684.992 L822.03 684.992 L822.59 684.992 L823.149 684.992 L823.708 684.992 L824.267 684.992 L824.827 684.992 L825.386 684.992 L825.945 684.992 L826.504 684.992 L827.064 684.992 L827.623 684.992 L828.182 684.992 L828.741 684.992 L829.301 684.992 L829.86 684.992 L830.419 684.992 L830.978 684.992 L831.538 684.992 L832.097 684.992 L832.656 684.992 L833.215 684.992 L833.775 684.992 L834.334 684.992 L834.893 684.992 L835.452 684.992 L836.012 684.992 L836.571 684.992 L837.13 684.992 L837.689 684.992 L838.249 684.992 L838.808 684.992 L839.367 684.992 L839.926 684.992 L840.486 684.992 L841.045 684.992 L841.604 684.992 L842.163 684.992 L842.723 684.992 L843.282 684.992 L843.841 684.992 L844.4 684.992 L844.96 684.992 L845.519 684.992 L846.078 684.992 L846.637 684.992 L847.197 684.992 L847.756 684.992 L848.315 684.992 L848.874 684.992 L849.434 684.992 L849.993 684.992 L850.552 684.992 L851.111 684.992 L851.671 684.992 L852.23 684.992 L852.789 684.992 L853.348 684.992 L853.908 684.992 L854.467 684.992 L855.026 684.992 L855.585 684.992 L856.145 684.992 L856.704 684.992 L857.263 684.992 L857.822 684.992 L858.382 684.992 L858.941 684.992 L859.5 684.992 L860.059 684.992 L860.619 684.992 L861.178 684.992 L861.737 684.992 L862.296 684.992 L862.856 684.992 L863.415 684.992 L863.974 684.992 L864.533 684.992 L865.093 684.992 L865.652 684.992 L866.211 684.992 L866.77 684.992 L867.33 684.992 L867.889 684.992 L868.448 684.992 L869.007 684.992 L869.567 684.992 L870.126 684.992 L870.685 684.992 L871.244 684.992 L871.804 684.992 L872.363 684.992 L872.922 684.992 L873.481 684.992 L874.041 684.992 L874.6 684.992 L875.159 684.992 L875.718 684.992 L876.278 684.992 L876.837 684.992 L877.396 684.992 L877.955 684.992 L878.515 684.992 L879.074 684.992 L879.633 684.992 L880.192 684.992 L880.752 684.992 L881.311 684.992 L881.87 684.992 L882.429 684.992 L882.989 684.992 L883.548 684.992 L884.107 684.992 L884.666 684.992 L885.226 684.992 L885.785 684.992 L886.344 684.992 L886.903 684.992 L887.463 684.992 L888.022 684.992 L888.581 684.992 L889.14 684.992 L889.7 684.992 L890.259 684.992 L890.818 684.992 L891.377 684.992 L891.937 684.992 L892.496 684.992 L893.055 684.992 L893.614 684.992 L894.174 684.992 L894.733 684.992 L895.292 684.992 L895.851 684.992 L896.411 684.992 L896.97 684.992 L897.529 684.992 L898.088 684.992 L898.648 684.992 L899.207 684.992 L899.766 684.992 L900.325 684.992 L900.885 684.992 L901.444 684.992 L902.003 684.992 L902.562 684.992 L903.122 684.992 L903.681 684.992 L904.24 684.992 L904.799 684.992 L905.359 684.992 L905.918 684.992 L906.477 684.992 L907.036 684.992 L907.596 684.992 L908.155 684.992 L908.714 684.992 L909.273 684.992 L909.833 684.992 L910.392 684.992 L910.951 684.992 L911.51 684.992 L912.07 684.992 L912.629 684.992 L913.188 684.992 L913.747 684.992 L914.307 684.992 L914.866 684.992 L915.425 684.992 L915.984 684.992 L916.544 684.992 L917.103 684.992 L917.662 684.992 L918.221 684.992 L918.781 684.992 L919.34 684.992 L919.899 684.992 L920.458 684.992 L921.018 684.992 L921.577 684.992 L922.136 684.992 L922.695 684.992 L923.255 684.992 L923.814 684.992 L924.373 684.992 L924.932 684.992 L925.492 684.992 L926.051 684.992 L926.61 684.992 L927.169 684.992 L927.729 684.992 L928.288 684.992 L928.847 684.992 L929.406 684.992 L929.966 684.992 L930.525 684.992 L931.084 684.992 L931.644 684.992 L932.203 684.992 L932.762 684.992 L933.321 684.992 L933.881 684.992 L934.44 684.992 L934.999 684.992 L935.558 684.992 L936.118 684.992 L936.677 684.992 L937.236 684.992 L937.795 684.992 L938.355 684.992 L938.914 684.992 L939.473 684.992 L940.032 684.992 L940.592 684.992 L941.151 684.992 L941.71 684.992 L942.269 684.992 L942.829 684.992 L943.388 684.992 L943.947 684.992 L944.506 684.992 L945.066 684.992 L945.625 684.992 L946.184 684.992 L946.743 684.992 L947.303 684.992 L947.862 684.992 L948.421 684.992 L948.98 684.992 L949.54 684.992 L950.099 684.992 L950.658 684.992 L951.217 684.992 L951.777 684.992 L952.336 684.992 L952.895 684.992 L953.454 684.992 L954.014 684.992 L954.573 684.992 L955.132 684.992 L955.691 684.992 L956.251 684.992 L956.81 684.992 L957.369 684.992 L957.928 684.992 L958.488 684.992 L959.047 684.992 L959.606 684.992 L960.165 684.992 L960.725 684.992 L961.284 684.992 L961.843 684.992 L962.402 684.992 L962.962 684.992 L963.521 684.992 L964.08 684.992 L964.639 684.992 L965.199 684.992 L965.758 684.992 L966.317 684.992 L966.876 684.992 L967.436 684.992 L967.995 684.992 L968.554 684.992 L969.113 684.992 L969.673 684.992 L970.232 684.992 L970.791 684.992 L971.35 684.992 L971.91 684.992 L972.469 684.992 L973.028 684.992 L973.587 684.992 L974.147 684.992 L974.706 684.992 L975.265 684.992 L975.824 684.992 L976.384 684.992 L976.943 684.992 L977.502 684.992 L978.061 684.992 L978.621 684.992 L979.18 684.992 L979.739 684.992 L980.298 684.992 L980.858 684.992 L981.417 684.992 L981.976 684.992 L982.535 684.992 L983.095 684.992 L983.654 684.992 L984.213 684.992 L984.772 684.992 L985.332 684.992 L985.891 684.992 L986.45 684.992 L987.009 684.992 L987.569 684.992 L988.128 684.992 L988.687 684.992 L989.246 684.992 L989.806 684.992 L990.365 684.992 L990.924 684.992 L991.483 684.992 L992.043 684.992 L992.602 684.992 L993.161 684.992 L993.72 684.992 L994.28 684.992 L994.839 684.992 L995.398 684.992 L995.957 684.992 L996.517 684.992 L997.076 684.992 L997.635 684.992 L998.194 684.992 L998.754 684.992 L999.313 684.992 L999.872 684.992 L1000.43 684.992 L1000.99 684.992 L1001.55 684.992 L1002.11 684.992 L1002.67 684.992 L1003.23 684.992 L1003.79 684.992 L1004.35 684.992 L1004.91 684.992 L1005.46 684.992 L1006.02 684.992 L1006.58 684.992 L1007.14 684.992 L1007.7 684.992 L1008.26 684.992 L1008.82 684.992 L1009.38 684.992 L1009.94 684.992 L1010.5 684.992 L1011.06 684.992 L1011.62 684.992 L1012.18 684.992 L1012.73 684.992 L1013.29 684.992 L1013.85 684.992 L1014.41 684.992 L1014.97 684.992 L1015.53 684.992 L1016.09 684.992 L1016.65 684.992 L1017.21 684.992 L1017.77 684.992 L1018.33 684.992 L1018.89 684.992 L1019.45 684.992 L1020.01 684.992 L1020.56 684.992 L1021.12 684.992 L1021.68 684.992 L1022.24 684.992 L1022.8 684.992 L1023.36 684.992 L1023.92 684.992 L1024.48 684.992 L1025.04 684.992 L1025.6 684.992 L1026.16 684.992 L1026.72 684.992 L1027.28 684.992 L1027.83 684.992 L1028.39 684.992 L1028.95 684.992 L1029.51 684.992 L1030.07 684.992 L1030.63 684.992 L1031.19 684.992 L1031.75 684.992 L1032.31 684.992 L1032.87 684.992 L1033.43 684.992 L1033.99 684.992 L1034.55 684.992 L1035.1 684.992 L1035.66 684.992 L1036.22 684.992 L1036.78 684.992 L1037.34 684.992 L1037.9 684.992 L1038.46 684.992 L1039.02 684.992 L1039.58 684.992 L1040.14 684.992 L1040.7 684.992 L1041.26 684.992 L1041.82 684.992 L1042.38 684.992 L1042.93 684.992 L1043.49 684.992 L1044.05 684.992 L1044.61 684.992 L1045.17 684.992 L1045.73 684.992 L1046.29 684.992 L1046.85 684.992 L1047.41 684.992 L1047.97 684.992 L1048.53 684.992 L1049.09 684.992 L1049.65 684.992 L1050.2 684.992 L1050.76 684.992 L1051.32 684.992 L1051.88 684.992 L1052.44 684.992 L1053 684.992 L1053.56 684.992 L1054.12 684.992 L1054.68 684.992 L1055.24 684.992 L1055.8 684.992 L1056.36 684.992 L1056.92 684.992 L1057.48 684.992 L1058.03 684.992 L1058.59 684.992 L1059.15 684.992 L1059.71 684.992 L1060.27 684.992 L1060.83 684.992 L1061.39 684.992 L1061.95 684.992 L1062.51 684.992 L1063.07 684.992 L1063.63 684.992 L1064.19 684.992 L1064.75 684.992 L1065.3 684.992 L1065.86 684.992 L1066.42 684.992 L1066.98 684.992 L1067.54 684.992 L1068.1 684.992 L1068.66 684.992 L1069.22 684.992 L1069.78 684.992 L1070.34 684.992 L1070.9 684.992 L1071.46 684.992 L1072.02 684.992 L1072.57 684.992 L1073.13 684.992 L1073.69 684.992 L1074.25 684.992 L1074.81 684.992 L1075.37 684.992 L1075.93 684.992 L1076.49 684.992 L1077.05 684.992 L1077.61 684.992 L1078.17 684.992 L1078.73 684.992 L1079.29 684.992 L1079.85 684.992 L1080.4 684.992 L1080.96 684.992 L1081.52 684.992 L1082.08 684.992 L1082.64 684.992 L1083.2 684.992 L1083.76 684.992 L1084.32 684.992 L1084.88 684.992 L1085.44 684.992 L1086 684.992 L1086.56 684.992 L1087.12 684.992 L1087.67 684.992 L1088.23 684.992 L1088.79 684.992 L1089.35 684.992 L1089.91 684.992 L1090.47 684.992 L1091.03 684.992 L1091.59 684.992 L1092.15 684.992 L1092.71 684.992 L1093.27 684.992 L1093.83 684.992 L1094.39 684.992 L1094.94 684.992 L1095.5 684.992 L1096.06 684.992 L1096.62 684.992 L1097.18 684.992 L1097.74 684.992 L1098.3 684.992 L1098.86 684.992 L1099.42 684.992 L1099.98 684.992 L1100.54 684.992 L1101.1 684.992 L1101.66 684.992 L1102.22 684.992 L1102.77 684.992 L1103.33 684.992 L1103.89 684.992 L1104.45 684.992 L1105.01 684.992 L1105.57 684.992 L1106.13 684.992 L1106.69 684.992 L1107.25 684.992 L1107.81 684.992 L1108.37 684.992 L1108.93 684.992 L1109.49 684.992 L1110.04 684.992 L1110.6 684.992 L1111.16 684.992 L1111.72 684.992 L1112.28 684.992 L1112.84 684.992 L1113.4 684.992 L1113.96 684.992 L1114.52 684.992 L1115.08 684.992 L1115.64 684.992 L1116.2 684.992 L1116.76 684.992 L1117.31 684.992 L1117.87 684.992 L1118.43 684.992 L1118.99 684.992 L1119.55 684.992 L1120.11 684.992 L1120.67 684.992 L1121.23 684.992 L1121.79 684.992 L1122.35 684.992 L1122.91 684.992 L1123.47 684.992 L1124.03 684.992 L1124.59 684.992 L1125.14 684.992 L1125.7 684.992 L1126.26 684.992 L1126.82 684.992 L1127.38 684.992 L1127.94 684.992 L1128.5 684.992 L1129.06 684.992 L1129.62 684.992 L1130.18 684.992 L1130.74 684.992 L1131.3 684.992 L1131.86 684.992 L1132.41 684.992 L1132.97 684.992 L1133.53 684.992 L1134.09 684.992 L1134.65 684.992 L1135.21 684.992 L1135.77 684.992 L1136.33 684.992 L1136.89 684.992 L1137.45 684.992 L1138.01 684.992 L1138.57 684.992 L1139.13 684.992 L1139.68 684.992 L1140.24 684.992 L1140.8 684.992 L1141.36 684.992 L1141.92 684.992 L1142.48 684.992 L1143.04 684.992 L1143.6 684.992 L1144.16 684.992 L1144.72 684.992 L1145.28 684.992 L1145.84 684.992 L1146.4 684.992 L1146.96 684.992 L1147.51 684.992 L1148.07 684.992 L1148.63 684.992 L1149.19 684.992 L1149.75 684.992 L1150.31 684.992 L1150.87 684.992 L1151.43 684.992 L1151.99 684.992 L1152.55 684.992 L1153.11 684.992 L1153.67 684.992 L1154.23 684.992 L1154.78 684.992 L1155.34 684.992 L1155.9 684.992 L1156.46 684.992 L1157.02 684.992 L1157.58 684.992 L1158.14 684.992 L1158.7 684.992 L1159.26 684.992 L1159.82 684.992 L1160.38 684.992 L1160.94 684.992 L1161.5 684.992 L1162.05 684.992 L1162.61 684.992 L1163.17 684.992 L1163.73 684.992 L1164.29 684.992 L1164.85 684.992 L1165.41 684.992 L1165.97 684.992 L1166.53 684.992 L1167.09 684.992 L1167.65 684.992 L1168.21 684.992 L1168.77 684.992 L1169.33 684.992 L1169.88 684.992 L1170.44 684.992 L1171 684.992 L1171.56 684.992 L1172.12 684.992 L1172.68 684.992 L1173.24 684.992 L1173.8 684.992 L1174.36 684.992 L1174.92 684.992 L1175.48 684.992 L1176.04 684.992 L1176.6 684.992 L1177.15 684.992 L1177.71 684.992 L1178.27 684.992 L1178.83 684.992 L1179.39 684.992 L1179.95 684.992 L1180.51 684.992 L1181.07 684.992 L1181.63 684.992 L1182.19 684.992 L1182.75 684.992 L1183.31 684.992 L1183.87 684.992 L1184.43 684.992 L1184.98 684.992 L1185.54 684.992 L1186.1 684.992 L1186.66 684.992 L1187.22 684.992 L1187.78 684.992 L1188.34 684.992 L1188.9 684.992 L1189.46 684.992 L1190.02 684.992 L1190.58 684.992 L1191.14 684.992 L1191.7 684.992 L1192.25 684.992 L1192.81 684.992 L1193.37 684.992 L1193.93 684.992 L1194.49 684.992 L1195.05 684.992 L1195.61 684.992 L1196.17 684.992 L1196.73 684.992 L1197.29 684.992 L1197.85 684.992 L1198.41 684.992 L1198.97 684.992 L1199.52 684.992 L1200.08 684.992 L1200.64 684.992 L1201.2 684.992 L1201.76 684.992 L1202.32 684.992 L1202.88 684.992 L1203.44 684.992 L1204 684.992 L1204.56 684.992 L1205.12 684.992 L1205.68 684.992 L1206.24 684.992 L1206.8 684.992 L1207.35 684.992 L1207.91 684.992 L1208.47 684.992 L1209.03 684.992 L1209.59 684.992 L1210.15 684.992 L1210.71 684.992 L1211.27 684.992 L1211.83 684.992 L1212.39 684.992 L1212.95 684.992 L1213.51 684.992 L1214.07 684.992 L1214.62 684.992 L1215.18 684.992 L1215.74 684.992 L1216.3 684.992 L1216.86 684.992 L1217.42 684.992 L1217.98 684.992 L1218.54 684.992 L1219.1 684.992 L1219.66 684.992 L1220.22 684.992 L1220.78 684.992 L1221.34 684.992 L1221.89 684.992 L1222.45 684.992 L1223.01 684.992 L1223.57 684.992 L1224.13 684.992 L1224.69 684.992 L1225.25 684.992 L1225.81 684.992 L1226.37 684.992 L1226.93 684.992 L1227.49 684.992 L1228.05 684.992 L1228.61 684.992 L1229.17 684.992 L1229.72 684.992 L1230.28 684.992 L1230.84 684.992 L1231.4 684.992 L1231.96 684.992 L1232.52 684.992 L1233.08 684.992 L1233.64 684.992 L1234.2 684.992 L1234.76 684.992 L1235.32 684.992 L1235.88 684.992 L1236.44 684.992 L1236.99 684.992 L1237.55 684.992 L1238.11 684.992 L1238.67 684.992 L1239.23 684.992 L1239.79 684.992 L1240.35 684.992 L1240.91 684.992 L1241.47 684.992 L1242.03 684.992 L1242.59 684.992 L1243.15 684.992 L1243.71 684.992 L1244.26 684.992 L1244.82 684.992 L1245.38 684.992 L1245.94 684.992 L1246.5 684.992 L1247.06 684.992 L1247.62 684.992 L1248.18 684.992 L1248.74 684.992 L1249.3 684.992 L1249.86 684.992 L1250.42 684.992 L1250.98 684.992 L1251.54 684.992 L1252.09 684.992 L1252.65 684.992 L1253.21 684.992 L1253.77 684.992 L1254.33 684.992 L1254.89 684.992 L1255.45 684.992 L1256.01 684.992 L1256.57 684.992 L1257.13 684.992 L1257.69 684.992 L1258.25 684.992 L1258.81 684.992 L1259.36 684.992 L1259.92 684.992 L1260.48 684.992 L1261.04 684.992 L1261.6 684.992 L1262.16 684.992 L1262.72 684.992 L1263.28 684.992 L1263.84 684.992 L1264.4 684.992 L1264.96 684.992 L1265.52 684.992 L1266.08 684.992 L1266.63 684.992 L1267.19 684.992 L1267.75 684.992 L1268.31 684.992 L1268.87 684.992 L1269.43 684.992 L1269.99 684.992 L1270.55 684.992 L1271.11 684.992 L1271.67 684.992 L1272.23 684.992 L1272.79 684.992 L1273.35 684.992 L1273.91 684.992 L1274.46 684.992 L1275.02 684.992 L1275.58 684.992 L1276.14 684.992 L1276.7 684.992 L1277.26 684.992 L1277.82 684.992 L1278.38 684.992 L1278.94 684.992 L1279.5 684.992 L1280.06 684.992 L1280.62 684.992 L1281.18 684.992 L1281.73 684.992 L1282.29 684.992 L1282.85 684.992 L1283.41 684.992 L1283.97 684.992 L1284.53 684.992 L1285.09 684.992 L1285.65 684.992 L1286.21 684.992 L1286.77 684.992 L1287.33 684.992 L1287.89 684.992 L1288.45 684.992 L1289 684.992 L1289.56 684.992 L1290.12 684.992 L1290.68 684.992 L1291.24 684.992 L1291.8 684.992 L1292.36 684.992 L1292.92 684.992 L1293.48 684.992 L1294.04 684.992 L1294.6 684.992 L1295.16 684.992 L1295.72 684.992 L1296.28 684.992 L1296.83 684.992 L1297.39 684.992 L1297.95 684.992 L1298.51 684.992 L1299.07 684.992 L1299.63 684.992 L1300.19 684.992 L1300.75 684.992 L1301.31 684.992 L1301.87 684.992 L1302.43 684.992 L1302.99 684.992 L1303.55 684.992 L1304.1 684.992 L1304.66 684.992 L1305.22 684.992 L1305.78 684.992 L1306.34 684.992 L1306.9 684.992 L1307.46 684.992 L1308.02 684.992 L1308.58 684.992 L1309.14 684.992 L1309.7 684.992 L1310.26 684.992 L1310.82 684.992 L1311.38 684.992 L1311.93 684.992 L1312.49 684.992 L1313.05 684.992 L1313.61 684.992 L1314.17 684.992 L1314.73 684.992 L1315.29 684.992 L1315.85 684.992 L1316.41 684.992 L1316.97 684.992 L1317.53 684.992 L1318.09 684.992 L1318.65 684.992 L1319.2 684.992 L1319.76 684.992 L1320.32 684.992 L1320.88 684.992 L1321.44 684.992 L1322 684.992 L1322.56 684.992 L1323.12 684.992 L1323.68 684.992 L1324.24 684.992 L1324.8 684.992 L1325.36 684.992 L1325.92 684.992 L1326.47 684.992 L1327.03 684.992 L1327.59 684.992 L1328.15 684.992 L1328.71 684.992 L1329.27 684.992 L1329.83 684.992 L1330.39 684.992 L1330.95 684.992 L1331.51 684.992 L1332.07 684.992 L1332.63 684.992 L1333.19 684.992 L1333.75 684.992 L1334.3 684.992 L1334.86 684.992 L1335.42 684.992 L1335.98 684.992 L1336.54 684.992 L1337.1 684.992 L1337.66 684.992 L1338.22 684.992 L1338.78 684.992 L1339.34 684.992 L1339.9 684.992 L1340.46 684.992 L1341.02 684.992 L1341.57 684.992 L1342.13 684.992 L1342.69 684.992 L1343.25 684.992 L1343.81 684.992 L1344.37 684.992 L1344.93 684.992 L1345.49 684.992 L1346.05 684.992 L1346.61 684.992 L1347.17 684.992 L1347.73 684.992 L1348.29 684.992 L1348.84 684.992 L1349.4 684.992 L1349.96 684.992 L1350.52 684.992 L1351.08 684.992 L1351.64 684.992 L1352.2 684.992 L1352.76 684.992 L1353.32 684.992 L1353.88 684.992 L1354.44 684.992 L1355 684.992 L1355.56 684.992 L1356.12 684.992 L1356.67 684.992 L1357.23 684.992 L1357.79 684.992 L1358.35 684.992 L1358.91 684.992 L1359.47 684.992 L1360.03 684.992 L1360.59 684.992 L1361.15 684.992 L1361.71 684.992 L1362.27 684.992 L1362.83 684.992 L1363.39 684.992 L1363.94 684.992 L1364.5 684.992 L1365.06 684.992 L1365.62 684.992 L1366.18 684.992 L1366.74 684.992 L1367.3 684.992 L1367.86 684.992 L1368.42 684.992 L1368.98 684.992 L1369.54 684.992 L1370.1 684.992 L1370.66 684.992 L1371.21 684.992 L1371.77 684.992 L1372.33 684.992 L1372.89 684.992 L1373.45 684.992 L1374.01 684.992 L1374.57 684.992 L1375.13 684.992 L1375.69 684.992 L1376.25 684.992 L1376.81 684.992 L1377.37 684.992 L1377.93 684.992 L1378.49 684.992 L1379.04 684.992 L1379.6 684.992 L1380.16 684.992 L1380.72 684.992 L1381.28 684.992 L1381.84 684.992 L1382.4 684.992 L1382.96 684.992 L1383.52 684.992 L1384.08 684.992 L1384.64 684.992 L1385.2 684.992 L1385.76 684.992 L1386.31 684.992 L1386.87 684.992 L1387.43 684.992 L1387.99 684.992 L1388.55 684.992 L1389.11 684.992 L1389.67 684.992 L1390.23 684.992 L1390.79 684.992 L1391.35 684.992 L1391.91 684.992 L1392.47 684.992 L1393.03 684.992 L1393.58 684.992 L1394.14 684.992 L1394.7 684.992 L1395.26 684.992 L1395.82 684.992 L1396.38 684.992 L1396.94 684.992 L1397.5 684.992 L1398.06 684.992 L1398.62 684.992 L1399.18 684.992 L1399.74 684.992 L1400.3 684.992 L1400.86 684.992 L1401.41 684.992 L1401.97 684.992 L1402.53 684.992 L1403.09 684.992 L1403.65 684.992 L1404.21 684.992 L1404.77 684.992 L1405.33 684.992 L1405.89 684.992 L1406.45 684.992 L1407.01 684.992 L1407.57 684.992 L1408.13 684.992 L1408.68 684.992 L1409.24 684.992 L1409.8 684.992 L1410.36 684.992 L1410.92 684.992 L1411.48 684.992 L1412.04 684.992 L1412.6 684.992 L1413.16 684.992 L1413.72 684.992 L1414.28 684.992 L1414.84 684.992 L1415.4 684.992 L1415.95 684.992 L1416.51 684.992 L1417.07 684.992 L1417.63 684.992 L1418.19 684.992 L1418.75 684.992 L1419.31 684.992 L1419.87 684.992 L1420.43 684.992 L1420.99 684.992 L1421.55 684.992 L1422.11 684.992 L1422.67 684.992 L1423.23 684.992 L1423.78 684.992 L1424.34 684.992 L1424.9 684.992 L1425.46 684.992 L1426.02 684.992 L1426.58 684.992 L1427.14 684.992 L1427.7 684.992 L1428.26 684.992 L1428.82 684.992 L1429.38 684.992 L1429.94 684.992 L1430.5 684.992 L1431.05 684.992 L1431.61 684.992 L1432.17 684.992 L1432.73 684.992 L1433.29 684.992 L1433.85 684.992 L1434.41 684.992 L1434.97 684.992 L1435.53 684.992 L1436.09 684.992 L1436.65 684.992 L1437.21 684.992 L1437.77 684.992 L1438.33 684.992 L1438.88 684.992 L1439.44 684.992 L1440 684.992 L1440.56 684.992 L1441.12 684.992 L1441.68 684.992 L1442.24 684.992 L1442.8 684.992 L1443.36 684.992 L1443.92 684.992 L1444.48 684.992 L1445.04 684.992 L1445.6 684.992 L1446.15 684.992 L1446.71 684.992 L1447.27 684.992 L1447.83 684.992 L1448.39 684.992 L1448.95 684.992 L1449.51 684.992 L1450.07 684.992 L1450.63 684.992 L1451.19 684.992 L1451.75 684.992 L1452.31 684.992 L1452.87 684.992 L1453.42 684.992 L1453.98 684.992 L1454.54 684.992 L1455.1 684.992 L1455.66 684.992 L1456.22 684.992 L1456.78 684.992 L1457.34 684.992 L1457.9 684.992 L1458.46 684.992 L1459.02 684.992 L1459.58 684.992 L1460.14 684.992 L1460.7 684.992 L1461.25 684.992 L1461.81 684.992 L1462.37 684.992 L1462.93 684.992 L1463.49 684.992 L1464.05 684.992 L1464.61 684.992 L1465.17 684.992 L1465.73 684.992 L1466.29 684.992 L1466.85 684.992 L1467.41 684.992 L1467.97 684.992 L1468.52 684.992 L1469.08 684.992 L1469.64 684.992 L1470.2 684.992 L1470.76 684.992 L1471.32 684.992 L1471.88 684.992 L1472.44 684.992 L1473 684.992 L1473.56 684.992 L1474.12 684.992 L1474.68 684.992 L1475.24 684.992 L1475.79 684.992 L1476.35 684.992 L1476.91 684.992 L1477.47 684.992 L1478.03 684.992 L1478.59 684.992 L1479.15 684.992 L1479.71 684.992 L1480.27 684.992 L1480.83 684.992 L1481.39 684.992 L1481.95 684.992 L1482.51 684.992 L1483.07 684.992 L1483.62 684.992 L1484.18 684.992 L1484.74 684.992 L1485.3 684.992 L1485.86 684.992 L1486.42 684.992 L1486.98 684.992 L1487.54 684.992 L1488.1 684.992 L1488.66 684.992 L1489.22 684.992 L1489.78 684.992 L1490.34 684.992 L1490.89 684.992 L1491.45 684.992 L1492.01 684.992 L1492.57 684.992 L1493.13 684.992 L1493.69 684.992 L1494.25 684.992 L1494.81 684.992 L1495.37 684.992 L1495.93 684.992 L1496.49 684.992 L1497.05 684.992 L1497.61 684.992 L1498.16 684.992 L1498.72 684.992 L1499.28 684.992 L1499.84 684.992 L1500.4 684.992 L1500.96 684.992 L1501.52 684.992 L1502.08 684.992 L1502.64 684.992 L1503.2 684.992 L1503.76 684.992 L1504.32 684.992 L1504.88 684.992 L1505.44 684.992 L1505.99 684.992 L1506.55 684.992 L1507.11 684.992 L1507.67 684.992 L1508.23 684.992 L1508.79 684.992 L1509.35 684.992 L1509.91 684.992 L1510.47 684.992 L1511.03 684.992 L1511.59 684.992 L1512.15 684.992 L1512.71 684.992 L1513.26 684.992 L1513.82 684.992 L1514.38 684.992 L1514.94 684.992 L1515.5 684.992 L1516.06 684.992 L1516.62 684.992 L1517.18 684.992 L1517.74 684.992 L1518.3 684.992 L1518.86 684.992 L1519.42 684.992 L1519.98 684.992 L1520.53 684.992 L1521.09 684.992 L1521.65 684.992 L1522.21 684.992 L1522.77 684.992 L1523.33 684.992 L1523.89 684.992 L1524.45 684.992 L1525.01 684.992 L1525.57 684.992 L1526.13 684.992 L1526.69 684.992 L1527.25 684.992 L1527.81 684.992 L1528.36 684.992 L1528.92 684.992 L1529.48 684.992 L1530.04 684.992 L1530.6 684.992 L1531.16 684.992 L1531.72 684.992 L1532.28 684.992 L1532.84 684.992 L1533.4 684.992 L1533.96 684.992 L1534.52 684.992 L1535.08 684.992 L1535.63 684.992 L1536.19 684.992 L1536.75 684.992 L1537.31 684.992 L1537.87 684.992 L1538.43 684.992 L1538.99 684.992 L1539.55 684.992 L1540.11 684.992 L1540.67 684.992 L1541.23 684.992 L1541.79 684.992 L1542.35 684.992 L1542.9 684.992 L1543.46 684.992 L1544.02 684.992 L1544.58 684.992 L1545.14 684.992 L1545.7 684.992 L1546.26 684.992 L1546.82 684.992 L1547.38 684.992 L1547.94 684.992 L1548.5 684.992 L1549.06 684.992 L1549.62 684.992 L1550.18 684.992 L1550.73 684.992 L1551.29 684.992 L1551.85 684.992 L1552.41 684.992 L1552.97 684.992 L1553.53 684.992 L1554.09 684.992 L1554.65 684.992 L1555.21 684.992 L1555.77 684.992 L1556.33 684.992 L1556.89 684.992 L1557.45 684.992 L1558 684.992 L1558.56 684.992 L1559.12 684.992 L1559.68 684.992 L1560.24 684.992 L1560.8 684.992 L1561.36 684.992 L1561.92 684.992 L1562.48 684.992 L1563.04 684.992 L1563.6 684.992 L1564.16 684.992 L1564.72 684.992 L1565.28 684.992 L1565.83 684.992 L1566.39 684.992 L1566.95 684.992 L1567.51 684.992 L1568.07 684.992 L1568.63 684.992 L1569.19 684.992 L1569.75 684.992 L1570.31 684.992 L1570.87 684.992 L1571.43 684.992 L1571.99 684.992 L1572.55 684.992 L1573.1 684.992 L1573.66 684.992 L1574.22 684.992 L1574.78 684.992 L1575.34 684.992 L1575.9 684.992 L1576.46 684.992 L1577.02 684.992 L1577.58 684.992 L1578.14 684.992 L1578.7 684.992 L1579.26 684.992 L1579.82 684.992 L1580.37 684.992 L1580.93 684.992 L1581.49 684.992 L1582.05 684.992 L1582.61 684.992 L1583.17 684.992 L1583.73 684.992 L1584.29 684.992 L1584.85 684.992 L1585.41 684.992 L1585.97 684.992 L1586.53 684.992 L1587.09 684.992 L1587.65 684.992 L1588.2 684.992 L1588.76 684.992 L1589.32 684.992 L1589.88 684.992 L1590.44 684.992 L1591 684.992 L1591.56 684.992 L1592.12 684.992 L1592.68 684.992 L1593.24 684.992 L1593.8 684.992 L1594.36 684.992 L1594.92 684.992 L1595.47 684.992 L1596.03 684.992 L1596.59 684.992 L1597.15 684.992 L1597.71 684.992 L1598.27 684.992 L1598.83 684.992 L1599.39 684.992 L1599.95 684.992 L1600.51 684.992 L1601.07 684.992 L1601.63 684.992 L1602.19 684.992 L1602.74 684.992 L1603.3 684.992 L1603.86 684.992 L1604.42 684.992 L1604.98 684.992 L1605.54 684.992 L1606.1 684.992 L1606.66 684.992 L1607.22 684.992 L1607.78 684.992 L1608.34 684.992 L1608.9 684.992 L1609.46 684.992 L1610.02 684.992 L1610.57 684.992 L1611.13 684.992 L1611.69 684.992 L1612.25 684.992 L1612.81 684.992 L1613.37 684.992 L1613.93 684.992 L1614.49 684.992 L1615.05 684.992 L1615.61 684.992 L1616.17 684.992 L1616.73 684.992 L1617.29 684.992 L1617.84 684.992 L1618.4 684.992 L1618.96 684.992 L1619.52 684.992 L1620.08 684.992 L1620.64 684.992 L1621.2 684.992 L1621.76 684.992 L1622.32 684.992 L1622.88 684.992 L1623.44 684.992 L1624 684.992 L1624.56 684.992 L1625.11 684.992 L1625.67 684.992 L1626.23 684.992 L1626.79 684.992 L1627.35 684.992 L1627.91 684.992 L1628.47 684.992 L1629.03 684.992 L1629.59 684.992 L1630.15 684.992 L1630.71 684.992 L1631.27 684.992 L1631.83 684.992 L1632.39 684.992 L1632.94 684.992 L1633.5 684.992 L1634.06 684.992 L1634.62 684.992 L1635.18 684.992 L1635.74 684.992 L1636.3 684.992 L1636.86 684.992 L1637.42 684.992 L1637.98 684.992 L1638.54 684.992 L1639.1 684.992 L1639.66 684.992 L1640.21 684.992 L1640.77 684.992 L1641.33 684.992 L1641.89 684.992 L1642.45 684.992 L1643.01 684.992 L1643.57 684.992 L1644.13 684.992 L1644.69 684.992 L1645.25 684.992 L1645.81 684.992 L1646.37 684.992 L1646.93 684.992 L1647.48 684.992 L1648.04 684.992 L1648.6 684.992 L1649.16 684.992 L1649.72 684.992 L1650.28 684.992 L1650.84 684.992 L1651.4 684.992 L1651.96 684.992 L1652.52 684.992 L1653.08 684.992 L1653.64 684.992 L1654.2 684.992 L1654.76 684.992 L1655.31 684.992 L1655.87 684.992 L1656.43 684.992 L1656.99 684.992 L1657.55 684.992 L1658.11 684.992 L1658.67 684.992 L1659.23 684.992 L1659.79 684.992 L1660.35 684.992 L1660.91 684.992 L1661.47 684.992 L1662.03 684.992 L1662.58 684.992 L1663.14 684.992 L1663.7 684.992 L1664.26 684.992 L1664.82 684.992 L1665.38 684.992 L1665.94 684.992 L1666.5 684.992 L1667.06 684.992 L1667.62 684.992 L1668.18 684.992 L1668.74 684.992 L1669.3 684.992 L1669.85 684.992 L1670.41 684.992 L1670.97 684.992 L1671.53 684.992 L1672.09 684.992 L1672.65 684.992 L1673.21 684.992 L1673.77 684.992 L1674.33 684.992 L1674.89 684.992 L1675.45 684.992 L1676.01 684.992 L1676.57 684.992 L1677.13 684.992 L1677.68 684.992 L1678.24 684.992 L1678.8 684.992 L1679.36 684.992 L1679.92 684.992 L1680.48 684.992 L1681.04 684.992 L1681.6 684.992 L1682.16 684.992 L1682.72 684.992 L1683.28 684.992 L1683.84 684.992 L1684.4 684.992 L1684.95 684.992 L1685.51 684.992 L1686.07 684.992 L1686.63 684.992 L1687.19 684.992 L1687.75 684.992 L1688.31 684.992 L1688.87 684.992 L1689.43 684.992 L1689.99 684.992 L1690.55 684.992 L1691.11 684.992 L1691.67 684.992 L1692.23 684.992 L1692.78 684.992 L1693.34 684.992 L1693.9 684.992 L1694.46 684.992 L1695.02 684.992 L1695.58 684.992 L1696.14 684.992 L1696.7 684.992 L1697.26 684.992 L1697.82 684.992 L1698.38 684.992 L1698.94 684.992 L1699.5 684.992 L1700.05 684.992 L1700.61 684.992 L1701.17 684.992 L1701.73 684.992 L1702.29 684.992 L1702.85 684.992 L1703.41 684.992 L1703.97 684.992 L1704.53 684.992 L1705.09 684.992 L1705.65 684.992 L1706.21 684.992 L1706.77 684.992 L1707.32 684.992 L1707.88 684.992 L1708.44 684.992 L1709 684.992 L1709.56 684.992 L1710.12 684.992 L1710.68 684.992 L1711.24 684.992 L1711.8 684.992 L1712.36 684.992 L1712.92 684.992 L1713.48 684.992 L1714.04 684.992 L1714.6 684.992 L1715.15 684.992 L1715.71 684.992 L1716.27 684.992 L1716.83 684.992 L1717.39 684.992 L1717.95 684.992 L1718.51 684.992 L1719.07 684.992 L1719.63 684.992 L1720.19 684.992 L1720.75 684.992 L1721.31 684.992 L1721.87 684.992 L1722.42 684.992 L1722.98 684.992 L1723.54 684.992 L1724.1 684.992 L1724.66 684.992 L1725.22 684.992 L1725.78 684.992 L1726.34 684.992 L1726.9 684.992 L1727.46 684.992 L1728.02 684.992 L1728.58 684.992 L1729.14 684.992 L1729.69 684.992 L1730.25 684.992 L1730.81 684.992 L1731.37 684.992 L1731.93 684.992 L1732.49 684.992 L1733.05 684.992 L1733.61 684.992 L1734.17 684.992 L1734.73 684.992 L1735.29 684.992 L1735.85 684.992 L1736.41 684.992 L1736.97 684.992 L1737.52 684.992 L1738.08 684.992 L1738.64 684.992 L1739.2 684.992 L1739.76 684.992 L1740.32 684.992 L1740.88 684.992 L1741.44 684.992 L1742 684.992 L1742.56 684.992 L1743.12 684.992 L1743.68 684.992 L1744.24 684.992 L1744.79 684.992 L1745.35 684.992 L1745.91 684.992 L1746.47 684.992 L1747.03 684.992 L1747.59 684.992 L1748.15 684.992 L1748.71 684.992 L1749.27 684.992 L1749.83 684.992 L1750.39 684.992 L1750.95 684.992 L1751.51 684.992 L1752.06 684.992 L1752.62 684.992 L1753.18 684.992 L1753.74 684.992 L1754.3 684.992 L1754.86 684.992 L1755.42 684.992 L1755.98 684.992 L1756.54 684.992 L1757.1 684.992 L1757.66 684.992 L1758.22 684.992 L1758.78 684.992 L1759.34 684.992 L1759.89 684.992 L1760.45 684.992 L1761.01 684.992 L1761.57 684.992 L1762.13 684.992 L1762.69 684.992 L1763.25 684.992 L1763.81 684.992 L1764.37 684.992 L1764.93 684.992 L1765.49 684.992 L1766.05 684.992 L1766.61 684.992 L1767.16 684.992 L1767.72 684.992 L1768.28 684.992 L1768.84 684.992 L1769.4 684.992 L1769.96 684.992 L1770.52 684.992 L1771.08 684.992 L1771.64 684.992 L1772.2 684.992 L1772.76 684.992 L1773.32 684.992 L1773.88 684.992 L1774.43 684.992 L1774.99 684.992 L1775.55 684.992 L1776.11 684.992 L1776.67 684.992 L1777.23 684.992 L1777.79 684.992 L1778.35 684.992 L1778.91 684.992 L1779.47 684.992 L1780.03 684.992 L1780.59 684.992 L1781.15 684.992 L1781.71 684.992 L1782.26 684.992 L1782.82 684.992 L1783.38 684.992 L1783.94 684.992 L1784.5 684.992 L1785.06 684.992 L1785.62 684.992 L1786.18 684.992 L1786.74 684.992 L1787.3 684.992 L1787.86 684.992 L1788.42 684.992 L1788.98 684.992 L1789.53 684.992 L1790.09 684.992 L1790.65 684.992 L1791.21 684.992 L1791.77 684.992 L1792.33 684.992 L1792.89 684.992 L1793.45 684.992 L1794.01 684.992 L1794.57 684.992 L1795.13 684.992 L1795.69 684.992 L1796.25 684.992 L1796.8 684.992 L1797.36 684.992 L1797.92 684.992 L1798.48 684.992 L1799.04 684.992 L1799.6 684.992 L1800.16 684.992 L1800.72 684.992 L1801.28 684.992 L1801.84 684.992 L1802.4 684.992 L1802.96 684.992 L1803.52 684.992 L1804.08 684.992 L1804.63 684.992 L1805.19 684.992 L1805.75 684.992 L1806.31 684.992 L1806.87 684.992 L1807.43 684.992 L1807.99 684.992 L1808.55 684.992 L1809.11 684.992 L1809.67 684.992 L1810.23 684.992 L1810.79 684.992 L1811.35 684.992 L1811.9 684.992 L1812.46 684.992 L1813.02 684.992 L1813.58 684.992 L1814.14 684.992 L1814.7 684.992 L1815.26 684.992 L1815.82 684.992 L1816.38 684.992 L1816.94 684.992 L1817.5 684.992 L1818.06 684.992 L1818.62 684.992 L1819.18 684.992 L1819.73 684.992 L1820.29 684.992 L1820.85 684.992 L1821.41 684.992 L1821.97 684.992 L1822.53 684.992 L1823.09 684.992 L1823.65 684.992 L1824.21 684.992 L1824.77 684.992 L1825.33 684.992 L1825.89 684.992 L1826.45 684.992 L1827 684.992 L1827.56 684.992 L1828.12 684.992 L1828.68 684.992 L1829.24 684.992 L1829.8 684.992 L1830.36 684.992 L1830.92 684.992 L1831.48 684.992 L1832.04 684.992 L1832.6 684.992 L1833.16 684.992 L1833.72 684.992 L1834.27 684.992 L1834.83 684.992 L1835.39 684.992 L1835.95 684.992 L1836.51 684.992 L1837.07 684.992 L1837.63 684.992 L1838.19 684.992 L1838.19 682.363 L1837.63 682.363 L1837.07 682.363 L1836.51 682.363 L1835.95 682.363 L1835.39 682.363 L1834.83 682.363 L1834.27 682.363 L1833.72 682.363 L1833.16 682.363 L1832.6 682.363 L1832.04 682.363 L1831.48 682.363 L1830.92 682.363 L1830.36 682.363 L1829.8 682.363 L1829.24 682.363 L1828.68 682.363 L1828.12 682.363 L1827.56 682.363 L1827 682.363 L1826.45 682.363 L1825.89 682.363 L1825.33 682.363 L1824.77 682.363 L1824.21 682.363 L1823.65 682.363 L1823.09 682.363 L1822.53 682.363 L1821.97 682.363 L1821.41 682.363 L1820.85 682.363 L1820.29 682.363 L1819.73 682.363 L1819.18 682.363 L1818.62 682.363 L1818.06 682.363 L1817.5 682.363 L1816.94 682.363 L1816.38 682.363 L1815.82 682.363 L1815.26 682.363 L1814.7 682.363 L1814.14 682.363 L1813.58 682.363 L1813.02 682.363 L1812.46 682.363 L1811.9 682.363 L1811.35 682.363 L1810.79 682.363 L1810.23 682.363 L1809.67 682.363 L1809.11 682.363 L1808.55 682.363 L1807.99 682.363 L1807.43 682.363 L1806.87 682.363 L1806.31 682.363 L1805.75 682.363 L1805.19 682.363 L1804.63 682.363 L1804.08 682.363 L1803.52 682.363 L1802.96 682.363 L1802.4 682.363 L1801.84 682.363 L1801.28 682.363 L1800.72 682.363 L1800.16 682.363 L1799.6 682.363 L1799.04 682.363 L1798.48 682.363 L1797.92 682.363 L1797.36 682.363 L1796.8 682.363 L1796.25 682.363 L1795.69 682.363 L1795.13 682.363 L1794.57 682.363 L1794.01 682.363 L1793.45 682.363 L1792.89 682.363 L1792.33 682.363 L1791.77 682.363 L1791.21 682.363 L1790.65 682.363 L1790.09 682.363 L1789.53 682.363 L1788.98 682.363 L1788.42 682.363 L1787.86 682.363 L1787.3 682.363 L1786.74 682.363 L1786.18 682.363 L1785.62 682.363 L1785.06 682.363 L1784.5 682.363 L1783.94 682.363 L1783.38 682.363 L1782.82 682.363 L1782.26 682.363 L1781.71 682.363 L1781.15 682.363 L1780.59 682.363 L1780.03 682.363 L1779.47 682.363 L1778.91 682.363 L1778.35 682.363 L1777.79 682.363 L1777.23 682.363 L1776.67 682.363 L1776.11 682.363 L1775.55 682.363 L1774.99 682.363 L1774.43 682.363 L1773.88 682.363 L1773.32 682.363 L1772.76 682.363 L1772.2 682.363 L1771.64 682.363 L1771.08 682.363 L1770.52 682.363 L1769.96 682.363 L1769.4 682.363 L1768.84 682.363 L1768.28 682.363 L1767.72 682.363 L1767.16 682.363 L1766.61 682.363 L1766.05 682.363 L1765.49 682.363 L1764.93 682.363 L1764.37 682.363 L1763.81 682.363 L1763.25 682.363 L1762.69 682.363 L1762.13 682.363 L1761.57 682.363 L1761.01 682.363 L1760.45 682.363 L1759.89 682.363 L1759.34 682.363 L1758.78 682.363 L1758.22 682.363 L1757.66 682.363 L1757.1 682.363 L1756.54 682.363 L1755.98 682.363 L1755.42 682.363 L1754.86 682.363 L1754.3 682.363 L1753.74 682.363 L1753.18 682.363 L1752.62 682.363 L1752.06 682.363 L1751.51 682.363 L1750.95 682.363 L1750.39 682.363 L1749.83 682.363 L1749.27 682.363 L1748.71 682.363 L1748.15 682.363 L1747.59 682.363 L1747.03 682.363 L1746.47 682.363 L1745.91 682.363 L1745.35 682.363 L1744.79 682.363 L1744.24 682.363 L1743.68 682.363 L1743.12 682.363 L1742.56 682.363 L1742 682.363 L1741.44 682.363 L1740.88 682.363 L1740.32 682.363 L1739.76 682.363 L1739.2 682.363 L1738.64 682.363 L1738.08 682.363 L1737.52 682.363 L1736.97 682.363 L1736.41 682.363 L1735.85 682.363 L1735.29 682.363 L1734.73 682.363 L1734.17 682.363 L1733.61 682.363 L1733.05 682.363 L1732.49 682.363 L1731.93 682.363 L1731.37 682.363 L1730.81 682.363 L1730.25 682.363 L1729.69 682.363 L1729.14 682.363 L1728.58 682.363 L1728.02 682.363 L1727.46 682.363 L1726.9 682.363 L1726.34 682.363 L1725.78 682.363 L1725.22 682.363 L1724.66 682.363 L1724.1 682.363 L1723.54 682.363 L1722.98 682.363 L1722.42 682.363 L1721.87 682.363 L1721.31 682.363 L1720.75 682.363 L1720.19 682.363 L1719.63 682.363 L1719.07 682.363 L1718.51 682.363 L1717.95 682.363 L1717.39 682.363 L1716.83 682.363 L1716.27 682.363 L1715.71 682.363 L1715.15 682.363 L1714.6 682.363 L1714.04 682.363 L1713.48 682.363 L1712.92 682.363 L1712.36 682.363 L1711.8 682.363 L1711.24 682.363 L1710.68 682.363 L1710.12 682.363 L1709.56 682.363 L1709 682.363 L1708.44 682.363 L1707.88 682.363 L1707.32 682.363 L1706.77 682.363 L1706.21 682.363 L1705.65 682.363 L1705.09 682.363 L1704.53 682.363 L1703.97 682.363 L1703.41 682.363 L1702.85 682.363 L1702.29 682.363 L1701.73 682.363 L1701.17 682.363 L1700.61 682.363 L1700.05 682.363 L1699.5 682.363 L1698.94 682.363 L1698.38 682.363 L1697.82 682.363 L1697.26 682.363 L1696.7 682.363 L1696.14 682.363 L1695.58 682.363 L1695.02 682.363 L1694.46 682.363 L1693.9 682.363 L1693.34 682.363 L1692.78 682.363 L1692.23 682.363 L1691.67 682.363 L1691.11 682.363 L1690.55 682.363 L1689.99 682.363 L1689.43 682.363 L1688.87 682.363 L1688.31 682.363 L1687.75 682.363 L1687.19 682.363 L1686.63 682.363 L1686.07 682.363 L1685.51 682.363 L1684.95 682.363 L1684.4 682.363 L1683.84 682.363 L1683.28 682.363 L1682.72 682.363 L1682.16 682.363 L1681.6 682.363 L1681.04 682.363 L1680.48 682.363 L1679.92 682.363 L1679.36 682.363 L1678.8 682.363 L1678.24 682.363 L1677.68 682.363 L1677.13 682.363 L1676.57 682.363 L1676.01 682.363 L1675.45 682.363 L1674.89 682.363 L1674.33 682.363 L1673.77 682.363 L1673.21 682.363 L1672.65 682.363 L1672.09 682.363 L1671.53 682.363 L1670.97 682.363 L1670.41 682.363 L1669.85 682.363 L1669.3 682.363 L1668.74 682.363 L1668.18 682.363 L1667.62 682.363 L1667.06 682.363 L1666.5 682.363 L1665.94 682.363 L1665.38 682.363 L1664.82 682.363 L1664.26 682.363 L1663.7 682.363 L1663.14 682.363 L1662.58 682.363 L1662.03 682.363 L1661.47 682.363 L1660.91 682.363 L1660.35 682.363 L1659.79 682.363 L1659.23 682.363 L1658.67 682.363 L1658.11 682.363 L1657.55 682.363 L1656.99 682.363 L1656.43 682.363 L1655.87 682.363 L1655.31 682.363 L1654.76 682.363 L1654.2 682.363 L1653.64 682.363 L1653.08 682.363 L1652.52 682.363 L1651.96 682.363 L1651.4 682.363 L1650.84 682.363 L1650.28 682.363 L1649.72 682.363 L1649.16 682.363 L1648.6 682.363 L1648.04 682.363 L1647.48 682.363 L1646.93 682.363 L1646.37 682.363 L1645.81 682.363 L1645.25 682.363 L1644.69 682.363 L1644.13 682.363 L1643.57 682.363 L1643.01 682.363 L1642.45 682.363 L1641.89 682.363 L1641.33 682.363 L1640.77 682.363 L1640.21 682.363 L1639.66 682.363 L1639.1 682.363 L1638.54 682.363 L1637.98 682.363 L1637.42 682.363 L1636.86 682.363 L1636.3 682.363 L1635.74 682.363 L1635.18 682.363 L1634.62 682.363 L1634.06 682.363 L1633.5 682.363 L1632.94 682.363 L1632.39 682.363 L1631.83 682.363 L1631.27 682.363 L1630.71 682.363 L1630.15 682.363 L1629.59 682.363 L1629.03 682.363 L1628.47 682.363 L1627.91 682.363 L1627.35 682.363 L1626.79 682.363 L1626.23 682.363 L1625.67 682.363 L1625.11 682.363 L1624.56 682.363 L1624 682.363 L1623.44 682.363 L1622.88 682.363 L1622.32 682.363 L1621.76 682.363 L1621.2 682.363 L1620.64 682.363 L1620.08 682.363 L1619.52 682.363 L1618.96 682.363 L1618.4 682.363 L1617.84 682.363 L1617.29 682.363 L1616.73 682.363 L1616.17 682.363 L1615.61 682.363 L1615.05 682.363 L1614.49 682.363 L1613.93 682.363 L1613.37 682.363 L1612.81 682.363 L1612.25 682.363 L1611.69 682.363 L1611.13 682.363 L1610.57 682.363 L1610.02 682.363 L1609.46 682.363 L1608.9 682.363 L1608.34 682.363 L1607.78 682.363 L1607.22 682.363 L1606.66 682.363 L1606.1 682.363 L1605.54 682.363 L1604.98 682.363 L1604.42 682.363 L1603.86 682.363 L1603.3 682.363 L1602.74 682.363 L1602.19 682.363 L1601.63 682.363 L1601.07 682.363 L1600.51 682.363 L1599.95 682.363 L1599.39 682.363 L1598.83 682.363 L1598.27 682.363 L1597.71 682.363 L1597.15 682.363 L1596.59 682.363 L1596.03 682.363 L1595.47 682.363 L1594.92 682.363 L1594.36 682.363 L1593.8 682.363 L1593.24 682.363 L1592.68 682.363 L1592.12 682.363 L1591.56 682.363 L1591 682.363 L1590.44 682.363 L1589.88 682.363 L1589.32 682.363 L1588.76 682.363 L1588.2 682.363 L1587.65 682.363 L1587.09 682.363 L1586.53 682.363 L1585.97 682.363 L1585.41 682.363 L1584.85 682.363 L1584.29 682.363 L1583.73 682.363 L1583.17 682.363 L1582.61 682.363 L1582.05 682.363 L1581.49 682.363 L1580.93 682.363 L1580.37 682.363 L1579.82 682.363 L1579.26 682.363 L1578.7 682.363 L1578.14 682.363 L1577.58 682.363 L1577.02 682.363 L1576.46 682.363 L1575.9 682.363 L1575.34 682.363 L1574.78 682.363 L1574.22 682.363 L1573.66 682.363 L1573.1 682.363 L1572.55 682.363 L1571.99 682.363 L1571.43 682.363 L1570.87 682.363 L1570.31 682.363 L1569.75 682.363 L1569.19 682.363 L1568.63 682.363 L1568.07 682.363 L1567.51 682.363 L1566.95 682.363 L1566.39 682.363 L1565.83 682.363 L1565.28 682.363 L1564.72 682.363 L1564.16 682.363 L1563.6 682.363 L1563.04 682.363 L1562.48 682.363 L1561.92 682.363 L1561.36 682.363 L1560.8 682.363 L1560.24 682.363 L1559.68 682.363 L1559.12 682.363 L1558.56 682.363 L1558 682.363 L1557.45 682.363 L1556.89 682.363 L1556.33 682.363 L1555.77 682.363 L1555.21 682.363 L1554.65 682.363 L1554.09 682.363 L1553.53 682.363 L1552.97 682.363 L1552.41 682.363 L1551.85 682.363 L1551.29 682.363 L1550.73 682.363 L1550.18 682.363 L1549.62 682.363 L1549.06 682.363 L1548.5 682.363 L1547.94 682.363 L1547.38 682.363 L1546.82 682.363 L1546.26 682.363 L1545.7 682.363 L1545.14 682.363 L1544.58 682.363 L1544.02 682.363 L1543.46 682.363 L1542.9 682.363 L1542.35 682.363 L1541.79 682.363 L1541.23 682.363 L1540.67 682.363 L1540.11 682.363 L1539.55 682.363 L1538.99 682.363 L1538.43 682.363 L1537.87 682.363 L1537.31 682.363 L1536.75 682.363 L1536.19 682.363 L1535.63 682.363 L1535.08 682.363 L1534.52 682.363 L1533.96 682.363 L1533.4 682.363 L1532.84 682.363 L1532.28 682.363 L1531.72 682.363 L1531.16 682.363 L1530.6 682.363 L1530.04 682.363 L1529.48 682.363 L1528.92 682.363 L1528.36 682.363 L1527.81 682.363 L1527.25 682.363 L1526.69 682.363 L1526.13 682.363 L1525.57 682.363 L1525.01 682.363 L1524.45 682.363 L1523.89 682.363 L1523.33 682.363 L1522.77 682.363 L1522.21 682.363 L1521.65 682.363 L1521.09 682.363 L1520.53 682.363 L1519.98 682.363 L1519.42 682.363 L1518.86 682.363 L1518.3 682.363 L1517.74 682.363 L1517.18 682.363 L1516.62 682.363 L1516.06 682.363 L1515.5 682.363 L1514.94 682.363 L1514.38 682.363 L1513.82 682.363 L1513.26 682.363 L1512.71 682.363 L1512.15 682.363 L1511.59 682.363 L1511.03 682.363 L1510.47 682.363 L1509.91 682.363 L1509.35 682.363 L1508.79 682.363 L1508.23 682.363 L1507.67 682.363 L1507.11 682.363 L1506.55 682.363 L1505.99 682.363 L1505.44 682.363 L1504.88 682.363 L1504.32 682.363 L1503.76 682.363 L1503.2 682.363 L1502.64 682.363 L1502.08 682.363 L1501.52 682.363 L1500.96 682.363 L1500.4 682.363 L1499.84 682.363 L1499.28 682.363 L1498.72 682.363 L1498.16 682.363 L1497.61 682.363 L1497.05 682.363 L1496.49 682.363 L1495.93 682.363 L1495.37 682.363 L1494.81 682.363 L1494.25 682.363 L1493.69 682.363 L1493.13 682.363 L1492.57 682.363 L1492.01 682.363 L1491.45 682.363 L1490.89 682.363 L1490.34 682.363 L1489.78 682.363 L1489.22 682.363 L1488.66 682.363 L1488.1 682.363 L1487.54 682.363 L1486.98 682.363 L1486.42 682.363 L1485.86 682.363 L1485.3 682.363 L1484.74 682.363 L1484.18 682.363 L1483.62 682.363 L1483.07 682.363 L1482.51 682.363 L1481.95 682.363 L1481.39 682.363 L1480.83 682.363 L1480.27 682.363 L1479.71 682.363 L1479.15 682.363 L1478.59 682.363 L1478.03 682.363 L1477.47 682.363 L1476.91 682.363 L1476.35 682.363 L1475.79 682.363 L1475.24 682.363 L1474.68 682.363 L1474.12 682.363 L1473.56 682.363 L1473 682.363 L1472.44 682.363 L1471.88 682.363 L1471.32 682.363 L1470.76 682.363 L1470.2 682.363 L1469.64 682.363 L1469.08 682.363 L1468.52 682.363 L1467.97 682.363 L1467.41 682.363 L1466.85 682.363 L1466.29 682.363 L1465.73 682.363 L1465.17 682.363 L1464.61 682.363 L1464.05 682.363 L1463.49 682.363 L1462.93 682.363 L1462.37 682.363 L1461.81 682.363 L1461.25 682.363 L1460.7 682.363 L1460.14 682.363 L1459.58 682.363 L1459.02 682.363 L1458.46 682.363 L1457.9 682.363 L1457.34 682.363 L1456.78 682.363 L1456.22 682.363 L1455.66 682.363 L1455.1 682.363 L1454.54 682.363 L1453.98 682.363 L1453.42 682.363 L1452.87 682.363 L1452.31 682.363 L1451.75 682.363 L1451.19 682.363 L1450.63 682.363 L1450.07 682.363 L1449.51 682.363 L1448.95 682.363 L1448.39 682.363 L1447.83 682.363 L1447.27 682.363 L1446.71 682.363 L1446.15 682.363 L1445.6 682.363 L1445.04 682.363 L1444.48 682.363 L1443.92 682.363 L1443.36 682.363 L1442.8 682.363 L1442.24 682.363 L1441.68 682.363 L1441.12 682.363 L1440.56 682.363 L1440 682.363 L1439.44 682.363 L1438.88 682.363 L1438.33 682.363 L1437.77 682.363 L1437.21 682.363 L1436.65 682.363 L1436.09 682.363 L1435.53 682.363 L1434.97 682.363 L1434.41 682.363 L1433.85 682.363 L1433.29 682.363 L1432.73 682.363 L1432.17 682.363 L1431.61 682.363 L1431.05 682.363 L1430.5 682.363 L1429.94 682.363 L1429.38 682.363 L1428.82 682.363 L1428.26 682.363 L1427.7 682.363 L1427.14 682.363 L1426.58 682.363 L1426.02 682.363 L1425.46 682.363 L1424.9 682.363 L1424.34 682.363 L1423.78 682.363 L1423.23 682.363 L1422.67 682.363 L1422.11 682.363 L1421.55 682.363 L1420.99 682.363 L1420.43 682.363 L1419.87 682.363 L1419.31 682.363 L1418.75 682.363 L1418.19 682.363 L1417.63 682.363 L1417.07 682.363 L1416.51 682.363 L1415.95 682.363 L1415.4 682.363 L1414.84 682.363 L1414.28 682.363 L1413.72 682.363 L1413.16 682.363 L1412.6 682.363 L1412.04 682.363 L1411.48 682.363 L1410.92 682.363 L1410.36 682.363 L1409.8 682.363 L1409.24 682.363 L1408.68 682.363 L1408.13 682.363 L1407.57 682.363 L1407.01 682.363 L1406.45 682.363 L1405.89 682.363 L1405.33 682.363 L1404.77 682.363 L1404.21 682.363 L1403.65 682.363 L1403.09 682.363 L1402.53 682.363 L1401.97 682.363 L1401.41 682.363 L1400.86 682.363 L1400.3 682.363 L1399.74 682.363 L1399.18 682.363 L1398.62 682.363 L1398.06 682.363 L1397.5 682.363 L1396.94 682.363 L1396.38 682.363 L1395.82 682.363 L1395.26 682.363 L1394.7 682.363 L1394.14 682.363 L1393.58 682.363 L1393.03 682.363 L1392.47 682.363 L1391.91 682.363 L1391.35 682.363 L1390.79 682.363 L1390.23 682.363 L1389.67 682.363 L1389.11 682.363 L1388.55 682.363 L1387.99 682.363 L1387.43 682.363 L1386.87 682.363 L1386.31 682.363 L1385.76 682.363 L1385.2 682.363 L1384.64 682.363 L1384.08 682.363 L1383.52 682.363 L1382.96 682.363 L1382.4 682.363 L1381.84 682.363 L1381.28 682.363 L1380.72 682.363 L1380.16 682.363 L1379.6 682.363 L1379.04 682.363 L1378.49 682.363 L1377.93 682.363 L1377.37 682.363 L1376.81 682.363 L1376.25 682.363 L1375.69 682.363 L1375.13 682.363 L1374.57 682.363 L1374.01 682.363 L1373.45 682.363 L1372.89 682.363 L1372.33 682.363 L1371.77 682.363 L1371.21 682.363 L1370.66 682.363 L1370.1 682.363 L1369.54 682.363 L1368.98 682.363 L1368.42 682.363 L1367.86 682.363 L1367.3 682.363 L1366.74 682.363 L1366.18 682.363 L1365.62 682.363 L1365.06 682.363 L1364.5 682.363 L1363.94 682.363 L1363.39 682.363 L1362.83 682.363 L1362.27 682.363 L1361.71 682.363 L1361.15 682.363 L1360.59 682.363 L1360.03 682.363 L1359.47 682.363 L1358.91 682.363 L1358.35 682.363 L1357.79 682.363 L1357.23 682.363 L1356.67 682.363 L1356.12 682.363 L1355.56 682.363 L1355 682.363 L1354.44 682.363 L1353.88 682.363 L1353.32 682.363 L1352.76 682.363 L1352.2 682.363 L1351.64 682.363 L1351.08 682.363 L1350.52 682.363 L1349.96 682.363 L1349.4 682.363 L1348.84 682.363 L1348.29 682.363 L1347.73 682.363 L1347.17 682.363 L1346.61 682.363 L1346.05 682.363 L1345.49 682.363 L1344.93 682.363 L1344.37 682.363 L1343.81 682.363 L1343.25 682.363 L1342.69 682.363 L1342.13 682.363 L1341.57 682.363 L1341.02 682.363 L1340.46 682.363 L1339.9 682.363 L1339.34 682.363 L1338.78 682.363 L1338.22 682.363 L1337.66 682.363 L1337.1 682.363 L1336.54 682.363 L1335.98 682.363 L1335.42 682.363 L1334.86 682.363 L1334.3 682.363 L1333.75 682.363 L1333.19 682.363 L1332.63 682.363 L1332.07 682.363 L1331.51 682.363 L1330.95 682.363 L1330.39 682.363 L1329.83 682.363 L1329.27 682.363 L1328.71 682.363 L1328.15 682.363 L1327.59 682.363 L1327.03 682.363 L1326.47 682.363 L1325.92 682.363 L1325.36 682.363 L1324.8 682.363 L1324.24 682.363 L1323.68 682.363 L1323.12 682.363 L1322.56 682.363 L1322 682.363 L1321.44 682.363 L1320.88 682.363 L1320.32 682.363 L1319.76 682.363 L1319.2 682.363 L1318.65 682.363 L1318.09 682.363 L1317.53 682.363 L1316.97 682.363 L1316.41 682.363 L1315.85 682.363 L1315.29 682.363 L1314.73 682.363 L1314.17 682.363 L1313.61 682.363 L1313.05 682.363 L1312.49 682.363 L1311.93 682.363 L1311.38 682.363 L1310.82 682.363 L1310.26 682.363 L1309.7 682.363 L1309.14 682.363 L1308.58 682.363 L1308.02 682.363 L1307.46 682.363 L1306.9 682.363 L1306.34 682.363 L1305.78 682.363 L1305.22 682.363 L1304.66 682.363 L1304.1 682.363 L1303.55 682.363 L1302.99 682.363 L1302.43 682.363 L1301.87 682.363 L1301.31 682.363 L1300.75 682.363 L1300.19 682.363 L1299.63 682.363 L1299.07 682.363 L1298.51 682.363 L1297.95 682.363 L1297.39 682.363 L1296.83 682.363 L1296.28 682.363 L1295.72 682.363 L1295.16 682.363 L1294.6 682.363 L1294.04 682.363 L1293.48 682.363 L1292.92 682.363 L1292.36 682.363 L1291.8 682.363 L1291.24 682.363 L1290.68 682.363 L1290.12 682.363 L1289.56 682.363 L1289 682.363 L1288.45 682.363 L1287.89 682.363 L1287.33 682.363 L1286.77 682.363 L1286.21 682.363 L1285.65 682.363 L1285.09 682.363 L1284.53 682.363 L1283.97 682.363 L1283.41 682.363 L1282.85 682.363 L1282.29 682.363 L1281.73 682.363 L1281.18 682.363 L1280.62 682.363 L1280.06 682.363 L1279.5 682.363 L1278.94 682.363 L1278.38 682.363 L1277.82 682.363 L1277.26 682.363 L1276.7 682.363 L1276.14 682.363 L1275.58 682.363 L1275.02 682.363 L1274.46 682.363 L1273.91 682.363 L1273.35 682.363 L1272.79 682.363 L1272.23 682.363 L1271.67 682.363 L1271.11 682.363 L1270.55 682.363 L1269.99 682.363 L1269.43 682.363 L1268.87 682.363 L1268.31 682.363 L1267.75 682.363 L1267.19 682.363 L1266.63 682.363 L1266.08 682.363 L1265.52 682.363 L1264.96 682.363 L1264.4 682.363 L1263.84 682.363 L1263.28 682.363 L1262.72 682.363 L1262.16 682.363 L1261.6 682.363 L1261.04 682.363 L1260.48 682.363 L1259.92 682.363 L1259.36 682.363 L1258.81 682.363 L1258.25 682.363 L1257.69 682.363 L1257.13 682.363 L1256.57 682.363 L1256.01 682.363 L1255.45 682.363 L1254.89 682.363 L1254.33 682.363 L1253.77 682.363 L1253.21 682.363 L1252.65 682.363 L1252.09 682.363 L1251.54 682.363 L1250.98 682.363 L1250.42 682.363 L1249.86 682.363 L1249.3 682.363 L1248.74 682.363 L1248.18 682.363 L1247.62 682.363 L1247.06 682.363 L1246.5 682.363 L1245.94 682.363 L1245.38 682.363 L1244.82 682.363 L1244.26 682.363 L1243.71 682.363 L1243.15 682.363 L1242.59 682.363 L1242.03 682.363 L1241.47 682.363 L1240.91 682.363 L1240.35 682.363 L1239.79 682.363 L1239.23 682.363 L1238.67 682.363 L1238.11 682.363 L1237.55 682.363 L1236.99 682.363 L1236.44 682.363 L1235.88 682.363 L1235.32 682.363 L1234.76 682.363 L1234.2 682.363 L1233.64 682.363 L1233.08 682.363 L1232.52 682.363 L1231.96 682.363 L1231.4 682.363 L1230.84 682.363 L1230.28 682.363 L1229.72 682.363 L1229.17 682.363 L1228.61 682.363 L1228.05 682.363 L1227.49 682.363 L1226.93 682.363 L1226.37 682.363 L1225.81 682.363 L1225.25 682.363 L1224.69 682.363 L1224.13 682.363 L1223.57 682.363 L1223.01 682.363 L1222.45 682.363 L1221.89 682.363 L1221.34 682.363 L1220.78 682.363 L1220.22 682.363 L1219.66 682.363 L1219.1 682.363 L1218.54 682.363 L1217.98 682.363 L1217.42 682.363 L1216.86 682.363 L1216.3 682.363 L1215.74 682.363 L1215.18 682.363 L1214.62 682.363 L1214.07 682.363 L1213.51 682.363 L1212.95 682.363 L1212.39 682.363 L1211.83 682.363 L1211.27 682.363 L1210.71 682.363 L1210.15 682.363 L1209.59 682.363 L1209.03 682.363 L1208.47 682.363 L1207.91 682.363 L1207.35 682.363 L1206.8 682.363 L1206.24 682.363 L1205.68 682.363 L1205.12 682.363 L1204.56 682.363 L1204 682.363 L1203.44 682.363 L1202.88 682.363 L1202.32 682.363 L1201.76 682.363 L1201.2 682.363 L1200.64 682.363 L1200.08 682.363 L1199.52 682.363 L1198.97 682.363 L1198.41 682.363 L1197.85 682.363 L1197.29 682.363 L1196.73 682.363 L1196.17 682.363 L1195.61 682.363 L1195.05 682.363 L1194.49 682.363 L1193.93 682.363 L1193.37 682.363 L1192.81 682.363 L1192.25 682.363 L1191.7 682.363 L1191.14 682.363 L1190.58 682.363 L1190.02 682.363 L1189.46 682.363 L1188.9 682.363 L1188.34 682.363 L1187.78 682.363 L1187.22 682.363 L1186.66 682.363 L1186.1 682.363 L1185.54 682.363 L1184.98 682.363 L1184.43 682.363 L1183.87 682.363 L1183.31 682.363 L1182.75 682.363 L1182.19 682.363 L1181.63 682.363 L1181.07 682.363 L1180.51 682.363 L1179.95 682.363 L1179.39 682.363 L1178.83 682.363 L1178.27 682.363 L1177.71 682.363 L1177.15 682.363 L1176.6 682.363 L1176.04 682.363 L1175.48 682.363 L1174.92 682.363 L1174.36 682.363 L1173.8 682.363 L1173.24 682.363 L1172.68 682.363 L1172.12 682.363 L1171.56 682.363 L1171 682.363 L1170.44 682.363 L1169.88 682.363 L1169.33 682.363 L1168.77 682.363 L1168.21 682.363 L1167.65 682.363 L1167.09 682.363 L1166.53 682.363 L1165.97 682.363 L1165.41 682.363 L1164.85 682.363 L1164.29 682.363 L1163.73 682.363 L1163.17 682.363 L1162.61 682.363 L1162.05 682.363 L1161.5 682.363 L1160.94 682.363 L1160.38 682.363 L1159.82 682.363 L1159.26 682.363 L1158.7 682.363 L1158.14 682.363 L1157.58 682.363 L1157.02 682.363 L1156.46 682.363 L1155.9 682.363 L1155.34 682.363 L1154.78 682.363 L1154.23 682.363 L1153.67 682.363 L1153.11 682.363 L1152.55 682.363 L1151.99 682.363 L1151.43 682.363 L1150.87 682.363 L1150.31 682.363 L1149.75 682.363 L1149.19 682.363 L1148.63 682.363 L1148.07 682.363 L1147.51 682.363 L1146.96 682.363 L1146.4 682.363 L1145.84 682.363 L1145.28 682.363 L1144.72 682.363 L1144.16 682.363 L1143.6 682.363 L1143.04 682.363 L1142.48 682.363 L1141.92 682.363 L1141.36 682.363 L1140.8 682.363 L1140.24 682.363 L1139.68 682.363 L1139.13 682.363 L1138.57 682.363 L1138.01 682.363 L1137.45 682.363 L1136.89 682.363 L1136.33 682.363 L1135.77 682.363 L1135.21 682.363 L1134.65 682.363 L1134.09 682.363 L1133.53 682.363 L1132.97 682.363 L1132.41 682.363 L1131.86 682.363 L1131.3 682.363 L1130.74 682.363 L1130.18 682.363 L1129.62 682.363 L1129.06 682.363 L1128.5 682.363 L1127.94 682.363 L1127.38 682.363 L1126.82 682.363 L1126.26 682.363 L1125.7 682.363 L1125.14 682.363 L1124.59 682.363 L1124.03 682.363 L1123.47 682.363 L1122.91 682.363 L1122.35 682.363 L1121.79 682.363 L1121.23 682.363 L1120.67 682.363 L1120.11 682.363 L1119.55 682.363 L1118.99 682.363 L1118.43 682.363 L1117.87 682.363 L1117.31 682.363 L1116.76 682.363 L1116.2 682.363 L1115.64 682.363 L1115.08 682.363 L1114.52 682.363 L1113.96 682.363 L1113.4 682.363 L1112.84 682.363 L1112.28 682.363 L1111.72 682.363 L1111.16 682.363 L1110.6 682.363 L1110.04 682.363 L1109.49 682.363 L1108.93 682.363 L1108.37 682.363 L1107.81 682.363 L1107.25 682.363 L1106.69 682.363 L1106.13 682.363 L1105.57 682.363 L1105.01 682.363 L1104.45 682.363 L1103.89 682.363 L1103.33 682.363 L1102.77 682.363 L1102.22 682.363 L1101.66 682.363 L1101.1 682.363 L1100.54 682.363 L1099.98 682.363 L1099.42 682.363 L1098.86 682.363 L1098.3 682.363 L1097.74 682.363 L1097.18 682.363 L1096.62 682.363 L1096.06 682.363 L1095.5 682.363 L1094.94 682.363 L1094.39 682.363 L1093.83 682.363 L1093.27 682.363 L1092.71 682.363 L1092.15 682.363 L1091.59 682.363 L1091.03 682.363 L1090.47 682.363 L1089.91 682.363 L1089.35 682.363 L1088.79 682.363 L1088.23 682.363 L1087.67 682.363 L1087.12 682.363 L1086.56 682.363 L1086 682.363 L1085.44 682.363 L1084.88 682.363 L1084.32 682.363 L1083.76 682.363 L1083.2 682.363 L1082.64 682.363 L1082.08 682.363 L1081.52 682.363 L1080.96 682.363 L1080.4 682.363 L1079.85 682.363 L1079.29 682.363 L1078.73 682.363 L1078.17 682.363 L1077.61 682.363 L1077.05 682.363 L1076.49 682.363 L1075.93 682.363 L1075.37 682.363 L1074.81 682.363 L1074.25 682.363 L1073.69 682.363 L1073.13 682.363 L1072.57 682.363 L1072.02 682.363 L1071.46 682.363 L1070.9 682.363 L1070.34 682.363 L1069.78 682.363 L1069.22 682.363 L1068.66 682.363 L1068.1 682.363 L1067.54 682.363 L1066.98 682.363 L1066.42 682.363 L1065.86 682.363 L1065.3 682.363 L1064.75 682.363 L1064.19 682.363 L1063.63 682.363 L1063.07 682.363 L1062.51 682.363 L1061.95 682.363 L1061.39 682.363 L1060.83 682.363 L1060.27 682.363 L1059.71 682.363 L1059.15 682.363 L1058.59 682.363 L1058.03 682.363 L1057.48 682.363 L1056.92 682.363 L1056.36 682.363 L1055.8 682.363 L1055.24 682.363 L1054.68 682.363 L1054.12 682.363 L1053.56 682.363 L1053 682.363 L1052.44 682.363 L1051.88 682.363 L1051.32 682.363 L1050.76 682.363 L1050.2 682.363 L1049.65 682.363 L1049.09 682.363 L1048.53 682.363 L1047.97 682.363 L1047.41 682.363 L1046.85 682.363 L1046.29 682.363 L1045.73 682.363 L1045.17 682.363 L1044.61 682.363 L1044.05 682.363 L1043.49 682.363 L1042.93 682.363 L1042.38 682.363 L1041.82 682.363 L1041.26 682.363 L1040.7 682.363 L1040.14 682.363 L1039.58 682.363 L1039.02 682.363 L1038.46 682.363 L1037.9 682.363 L1037.34 682.363 L1036.78 682.363 L1036.22 682.363 L1035.66 682.363 L1035.1 682.363 L1034.55 682.363 L1033.99 682.363 L1033.43 682.363 L1032.87 682.363 L1032.31 682.363 L1031.75 682.363 L1031.19 682.363 L1030.63 682.363 L1030.07 682.363 L1029.51 682.363 L1028.95 682.363 L1028.39 682.363 L1027.83 682.363 L1027.28 682.363 L1026.72 682.363 L1026.16 682.363 L1025.6 682.363 L1025.04 682.363 L1024.48 682.363 L1023.92 682.363 L1023.36 682.363 L1022.8 682.363 L1022.24 682.363 L1021.68 682.363 L1021.12 682.363 L1020.56 682.363 L1020.01 682.363 L1019.45 682.363 L1018.89 682.363 L1018.33 682.363 L1017.77 682.363 L1017.21 682.363 L1016.65 682.363 L1016.09 682.363 L1015.53 682.363 L1014.97 682.363 L1014.41 682.363 L1013.85 682.363 L1013.29 682.363 L1012.73 682.363 L1012.18 682.363 L1011.62 682.363 L1011.06 682.363 L1010.5 682.363 L1009.94 682.363 L1009.38 682.363 L1008.82 682.363 L1008.26 682.363 L1007.7 682.363 L1007.14 682.363 L1006.58 682.363 L1006.02 682.363 L1005.46 682.363 L1004.91 682.363 L1004.35 682.363 L1003.79 682.363 L1003.23 682.363 L1002.67 682.363 L1002.11 682.363 L1001.55 682.363 L1000.99 682.363 L1000.43 682.363 L999.872 682.363 L999.313 682.363 L998.754 682.363 L998.194 682.363 L997.635 682.363 L997.076 682.363 L996.517 682.363 L995.957 682.363 L995.398 682.363 L994.839 682.363 L994.28 682.363 L993.72 682.363 L993.161 682.363 L992.602 682.363 L992.043 682.363 L991.483 682.363 L990.924 682.363 L990.365 682.363 L989.806 682.363 L989.246 682.363 L988.687 682.363 L988.128 682.363 L987.569 682.363 L987.009 682.363 L986.45 682.363 L985.891 682.363 L985.332 682.363 L984.772 682.363 L984.213 682.363 L983.654 682.363 L983.095 682.363 L982.535 682.363 L981.976 682.363 L981.417 682.363 L980.858 682.363 L980.298 682.363 L979.739 682.363 L979.18 682.363 L978.621 682.363 L978.061 682.363 L977.502 682.363 L976.943 682.363 L976.384 682.363 L975.824 682.363 L975.265 682.363 L974.706 682.363 L974.147 682.363 L973.587 682.363 L973.028 682.363 L972.469 682.363 L971.91 682.363 L971.35 682.363 L970.791 682.363 L970.232 682.363 L969.673 682.363 L969.113 682.363 L968.554 682.363 L967.995 682.363 L967.436 682.363 L966.876 682.363 L966.317 682.363 L965.758 682.363 L965.199 682.363 L964.639 682.363 L964.08 682.363 L963.521 682.363 L962.962 682.363 L962.402 682.363 L961.843 682.363 L961.284 682.363 L960.725 682.363 L960.165 682.363 L959.606 682.363 L959.047 682.363 L958.488 682.363 L957.928 682.363 L957.369 682.363 L956.81 682.363 L956.251 682.363 L955.691 682.363 L955.132 682.363 L954.573 682.363 L954.014 682.363 L953.454 682.363 L952.895 682.363 L952.336 682.363 L951.777 682.363 L951.217 682.363 L950.658 682.363 L950.099 682.363 L949.54 682.363 L948.98 682.363 L948.421 682.363 L947.862 682.363 L947.303 682.363 L946.743 682.363 L946.184 682.363 L945.625 682.363 L945.066 682.363 L944.506 682.363 L943.947 682.363 L943.388 682.363 L942.829 682.363 L942.269 682.363 L941.71 682.363 L941.151 682.363 L940.592 682.363 L940.032 682.363 L939.473 682.363 L938.914 682.363 L938.355 682.363 L937.795 682.363 L937.236 682.363 L936.677 682.363 L936.118 682.363 L935.558 682.363 L934.999 682.363 L934.44 682.363 L933.881 682.363 L933.321 682.363 L932.762 682.363 L932.203 682.363 L931.644 682.363 L931.084 682.363 L930.525 682.363 L929.966 682.363 L929.406 682.363 L928.847 682.363 L928.288 682.363 L927.729 682.363 L927.169 682.363 L926.61 682.363 L926.051 682.363 L925.492 682.363 L924.932 682.363 L924.373 682.363 L923.814 682.363 L923.255 682.363 L922.695 682.363 L922.136 682.363 L921.577 682.363 L921.018 682.363 L920.458 682.363 L919.899 682.363 L919.34 682.363 L918.781 682.363 L918.221 682.363 L917.662 682.363 L917.103 682.363 L916.544 682.363 L915.984 682.363 L915.425 682.363 L914.866 682.363 L914.307 682.363 L913.747 682.363 L913.188 682.363 L912.629 682.363 L912.07 682.363 L911.51 682.363 L910.951 682.363 L910.392 682.363 L909.833 682.363 L909.273 682.363 L908.714 682.363 L908.155 682.363 L907.596 682.363 L907.036 682.363 L906.477 682.363 L905.918 682.363 L905.359 682.363 L904.799 682.363 L904.24 682.363 L903.681 682.363 L903.122 682.363 L902.562 682.363 L902.003 682.363 L901.444 682.363 L900.885 682.363 L900.325 682.363 L899.766 682.363 L899.207 682.363 L898.648 682.363 L898.088 682.363 L897.529 682.363 L896.97 682.363 L896.411 682.363 L895.851 682.363 L895.292 682.363 L894.733 682.363 L894.174 682.363 L893.614 682.363 L893.055 682.363 L892.496 682.363 L891.937 682.363 L891.377 682.363 L890.818 682.363 L890.259 682.363 L889.7 682.363 L889.14 682.363 L888.581 682.363 L888.022 682.363 L887.463 682.363 L886.903 682.363 L886.344 682.363 L885.785 682.363 L885.226 682.363 L884.666 682.363 L884.107 682.363 L883.548 682.363 L882.989 682.363 L882.429 682.363 L881.87 682.363 L881.311 682.363 L880.752 682.363 L880.192 682.363 L879.633 682.363 L879.074 682.363 L878.515 682.363 L877.955 682.363 L877.396 682.363 L876.837 682.363 L876.278 682.363 L875.718 682.363 L875.159 682.363 L874.6 682.363 L874.041 682.363 L873.481 682.363 L872.922 682.363 L872.363 682.363 L871.804 682.363 L871.244 682.363 L870.685 682.363 L870.126 682.363 L869.567 682.363 L869.007 682.363 L868.448 682.363 L867.889 682.363 L867.33 682.363 L866.77 682.363 L866.211 682.363 L865.652 682.363 L865.093 682.363 L864.533 682.363 L863.974 682.363 L863.415 682.363 L862.856 682.363 L862.296 682.363 L861.737 682.363 L861.178 682.363 L860.619 682.363 L860.059 682.363 L859.5 682.363 L858.941 682.363 L858.382 682.363 L857.822 682.363 L857.263 682.363 L856.704 682.363 L856.145 682.363 L855.585 682.363 L855.026 682.363 L854.467 682.363 L853.908 682.363 L853.348 682.363 L852.789 682.363 L852.23 682.363 L851.671 682.363 L851.111 682.363 L850.552 682.363 L849.993 682.363 L849.434 682.363 L848.874 682.363 L848.315 682.363 L847.756 682.363 L847.197 682.363 L846.637 682.363 L846.078 682.363 L845.519 682.363 L844.96 682.363 L844.4 682.363 L843.841 682.363 L843.282 682.363 L842.723 682.363 L842.163 682.363 L841.604 682.363 L841.045 682.363 L840.486 682.363 L839.926 682.363 L839.367 682.363 L838.808 682.363 L838.249 682.363 L837.689 682.363 L837.13 682.363 L836.571 682.363 L836.012 682.363 L835.452 682.363 L834.893 682.363 L834.334 682.363 L833.775 682.363 L833.215 682.363 L832.656 682.363 L832.097 682.363 L831.538 682.363 L830.978 682.363 L830.419 682.363 L829.86 682.363 L829.301 682.363 L828.741 682.363 L828.182 682.363 L827.623 682.363 L827.064 682.363 L826.504 682.363 L825.945 682.363 L825.386 682.363 L824.827 682.363 L824.267 682.363 L823.708 682.363 L823.149 682.363 L822.59 682.363 L822.03 682.363 L821.471 682.363 L820.912 682.363 L820.353 682.363 L819.793 682.363 L819.234 682.363 L818.675 682.363 L818.116 682.363 L817.556 682.363 L816.997 682.363 L816.438 682.363 L815.879 682.363 L815.319 682.363 L814.76 682.363 L814.201 682.363 L813.642 682.363 L813.082 682.363 L812.523 682.363 L811.964 682.363 L811.405 682.363 L810.845 682.363 L810.286 682.363 L809.727 682.363 L809.168 682.363 L808.608 682.363 L808.049 682.363 L807.49 682.363 L806.931 682.363 L806.371 682.363 L805.812 682.363 L805.253 682.363 L804.693 682.363 L804.134 682.363 L803.575 682.363 L803.016 682.363 L802.456 682.363 L801.897 682.363 L801.338 682.363 L800.779 682.363 L800.219 682.363 L799.66 682.363 L799.101 682.363 L798.542 682.363 L797.982 682.363 L797.423 682.363 L796.864 682.363 L796.305 682.363 L795.745 682.363 L795.186 682.363 L794.627 682.363 L794.068 682.363 L793.508 682.363 L792.949 682.363 L792.39 682.363 L791.831 682.363 L791.271 682.363 L790.712 682.363 L790.153 682.363 L789.594 682.363 L789.034 682.363 L788.475 682.363 L787.916 682.363 L787.357 682.363 L786.797 682.363 L786.238 682.363 L785.679 682.363 L785.12 682.363 L784.56 682.363 L784.001 682.363 L783.442 682.363 L782.883 682.363 L782.323 682.363 L781.764 682.363 L781.205 682.363 L780.646 682.363 L780.086 682.363 L779.527 682.363 L778.968 682.363 L778.409 682.363 L777.849 682.363 L777.29 682.363 L776.731 682.363 L776.172 682.363 L775.612 682.363 L775.053 682.363 L774.494 682.363 L773.935 682.363 L773.375 682.363 L772.816 682.363 L772.257 682.363 L771.698 682.363 L771.138 682.363 L770.579 682.363 L770.02 682.363 L769.461 682.363 L768.901 682.363 L768.342 682.363 L767.783 682.363 L767.224 682.363 L766.664 682.363 L766.105 682.363 L765.546 682.363 L764.987 682.363 L764.427 682.363 L763.868 682.363 L763.309 682.363 L762.75 682.363 L762.19 682.363 L761.631 682.363 L761.072 682.363 L760.513 682.363 L759.953 682.363 L759.394 682.363 L758.835 682.363 L758.276 682.363 L757.716 682.363 L757.157 682.363 L756.598 682.363 L756.039 682.363 L755.479 682.363 L754.92 682.363 L754.361 682.363 L753.802 682.363 L753.242 682.363 L752.683 682.363 L752.124 682.363 L751.565 682.363 L751.005 682.363 L750.446 682.363 L749.887 682.363 L749.328 682.363 L748.768 682.363 L748.209 682.363 L747.65 682.363 L747.091 682.363 L746.531 682.363 L745.972 682.363 L745.413 682.363 L744.854 682.363 L744.294 682.363 L743.735 682.363 L743.176 682.363 L742.617 682.363 L742.057 682.363 L741.498 682.363 L740.939 682.363 L740.38 682.363 L739.82 682.363 L739.261 682.363 L738.702 682.363 L738.143 682.363 L737.583 682.363 L737.024 682.363 L736.465 682.363 L735.906 682.363 L735.346 682.363 L734.787 682.363 L734.228 682.363 L733.669 682.363 L733.109 682.363 L732.55 682.363 L731.991 682.363 L731.432 682.363 L730.872 682.363 L730.313 682.363 L729.754 682.363 L729.195 682.363 L728.635 682.363 L728.076 682.363 L727.517 682.363 L726.958 682.363 L726.398 682.363 L725.839 682.363 L725.28 682.363 L724.721 682.363 L724.161 682.363 L723.602 682.363 L723.043 682.363 L722.484 682.363 L721.924 682.363 L721.365 682.363 L720.806 682.363 L720.247 682.363  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip803)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.678 720.806,683.678 721.365,683.678 721.924,683.678 722.484,683.678 723.043,683.678 723.602,683.678 724.161,683.678 724.721,683.678 725.28,683.678 725.839,683.678 726.398,683.678 726.958,683.678 727.517,683.678 728.076,683.678 728.635,683.678 729.195,683.678 729.754,683.678 730.313,683.678 730.872,683.678 731.432,683.678 731.991,683.678 732.55,683.678 733.109,683.678 733.669,683.678 734.228,683.678 734.787,683.678 735.346,683.678 735.906,683.678 736.465,683.678 737.024,683.678 737.583,683.678 738.143,683.678 738.702,683.678 739.261,683.678 739.82,683.678 740.38,683.678 740.939,683.678 741.498,683.678 742.057,683.678 742.617,683.678 743.176,683.678 743.735,683.678 744.294,683.678 744.854,683.678 745.413,683.678 745.972,683.678 746.531,683.678 747.091,683.678 747.65,683.678 748.209,683.678 748.768,683.678 749.328,683.678 749.887,683.678 750.446,683.678 751.005,683.678 751.565,683.678 752.124,683.678 752.683,683.678 753.242,683.678 753.802,683.678 754.361,683.678 754.92,683.678 755.479,683.678 756.039,683.678 756.598,683.678 757.157,683.678 757.716,683.678 758.276,683.678 758.835,683.678 759.394,683.678 759.953,683.678 760.513,683.678 761.072,683.678 761.631,683.678 762.19,683.678 762.75,683.678 763.309,683.678 763.868,683.678 764.427,683.678 764.987,683.678 765.546,683.678 766.105,683.678 766.664,683.678 767.224,683.678 767.783,683.678 768.342,683.678 768.901,683.678 769.461,683.678 770.02,683.678 770.579,683.678 771.138,683.678 771.698,683.678 772.257,683.678 772.816,683.678 773.375,683.678 773.935,683.678 774.494,683.678 775.053,683.678 775.612,683.678 776.172,683.678 776.731,683.678 777.29,683.678 777.849,683.678 778.409,683.678 778.968,683.678 779.527,683.678 780.086,683.678 780.646,683.678 781.205,683.678 781.764,683.678 782.323,683.678 782.883,683.678 783.442,683.678 784.001,683.678 784.56,683.678 785.12,683.678 785.679,683.678 786.238,683.678 786.797,683.678 787.357,683.678 787.916,683.678 788.475,683.678 789.034,683.678 789.594,683.678 790.153,683.678 790.712,683.678 791.271,683.678 791.831,683.678 792.39,683.678 792.949,683.678 793.508,683.678 794.068,683.678 794.627,683.678 795.186,683.678 795.745,683.678 796.305,683.678 796.864,683.678 797.423,683.678 797.982,683.678 798.542,683.678 799.101,683.678 799.66,683.678 800.219,683.678 800.779,683.678 801.338,683.678 801.897,683.678 802.456,683.678 803.016,683.678 803.575,683.678 804.134,683.678 804.693,683.678 805.253,683.678 805.812,683.678 806.371,683.678 806.931,683.678 807.49,683.678 808.049,683.678 808.608,683.678 809.168,683.678 809.727,683.678 810.286,683.678 810.845,683.678 811.405,683.678 811.964,683.678 812.523,683.678 813.082,683.678 813.642,683.678 814.201,683.678 814.76,683.678 815.319,683.678 815.879,683.678 816.438,683.678 816.997,683.678 817.556,683.678 818.116,683.678 818.675,683.678 819.234,683.678 819.793,683.678 820.353,683.678 820.912,683.678 821.471,683.678 822.03,683.678 822.59,683.678 823.149,683.678 823.708,683.678 824.267,683.678 824.827,683.678 825.386,683.678 825.945,683.678 826.504,683.678 827.064,683.678 827.623,683.678 828.182,683.678 828.741,683.678 829.301,683.678 829.86,683.678 830.419,683.678 830.978,683.678 831.538,683.678 832.097,683.678 832.656,683.678 833.215,683.678 833.775,683.678 834.334,683.678 834.893,683.678 835.452,683.678 836.012,683.678 836.571,683.678 837.13,683.678 837.689,683.678 838.249,683.678 838.808,683.678 839.367,683.678 839.926,683.678 840.486,683.678 841.045,683.678 841.604,683.678 842.163,683.678 842.723,683.678 843.282,683.678 843.841,683.678 844.4,683.678 844.96,683.678 845.519,683.678 846.078,683.678 846.637,683.678 847.197,683.678 847.756,683.678 848.315,683.678 848.874,683.678 849.434,683.678 849.993,683.678 850.552,683.678 851.111,683.678 851.671,683.678 852.23,683.678 852.789,683.678 853.348,683.678 853.908,683.678 854.467,683.678 855.026,683.678 855.585,683.678 856.145,683.678 856.704,683.678 857.263,683.678 857.822,683.678 858.382,683.678 858.941,683.678 859.5,683.678 860.059,683.678 860.619,683.678 861.178,683.678 861.737,683.678 862.296,683.678 862.856,683.678 863.415,683.678 863.974,683.678 864.533,683.678 865.093,683.678 865.652,683.678 866.211,683.678 866.77,683.678 867.33,683.678 867.889,683.678 868.448,683.678 869.007,683.678 869.567,683.678 870.126,683.678 870.685,683.678 871.244,683.678 871.804,683.678 872.363,683.678 872.922,683.678 873.481,683.678 874.041,683.678 874.6,683.678 875.159,683.678 875.718,683.678 876.278,683.678 876.837,683.678 877.396,683.678 877.955,683.678 878.515,683.678 879.074,683.678 879.633,683.678 880.192,683.678 880.752,683.678 881.311,683.678 881.87,683.678 882.429,683.678 882.989,683.678 883.548,683.678 884.107,683.678 884.666,683.678 885.226,683.678 885.785,683.678 886.344,683.678 886.903,683.678 887.463,683.678 888.022,683.678 888.581,683.678 889.14,683.678 889.7,683.678 890.259,683.678 890.818,683.678 891.377,683.678 891.937,683.678 892.496,683.678 893.055,683.678 893.614,683.678 894.174,683.678 894.733,683.678 895.292,683.678 895.851,683.678 896.411,683.678 896.97,683.678 897.529,683.678 898.088,683.678 898.648,683.678 899.207,683.678 899.766,683.678 900.325,683.678 900.885,683.678 901.444,683.678 902.003,683.678 902.562,683.678 903.122,683.678 903.681,683.678 904.24,683.678 904.799,683.678 905.359,683.678 905.918,683.678 906.477,683.678 907.036,683.678 907.596,683.678 908.155,683.678 908.714,683.678 909.273,683.678 909.833,683.678 910.392,683.678 910.951,683.678 911.51,683.678 912.07,683.678 912.629,683.678 913.188,683.678 913.747,683.678 914.307,683.678 914.866,683.678 915.425,683.678 915.984,683.678 916.544,683.678 917.103,683.678 917.662,683.678 918.221,683.678 918.781,683.678 919.34,683.678 919.899,683.678 920.458,683.678 921.018,683.678 921.577,683.678 922.136,683.678 922.695,683.678 923.255,683.678 923.814,683.678 924.373,683.678 924.932,683.678 925.492,683.678 926.051,683.678 926.61,683.678 927.169,683.678 927.729,683.678 928.288,683.678 928.847,683.678 929.406,683.678 929.966,683.678 930.525,683.678 931.084,683.678 931.644,683.678 932.203,683.678 932.762,683.678 933.321,683.678 933.881,683.678 934.44,683.678 934.999,683.678 935.558,683.678 936.118,683.678 936.677,683.678 937.236,683.678 937.795,683.678 938.355,683.678 938.914,683.678 939.473,683.678 940.032,683.678 940.592,683.678 941.151,683.678 941.71,683.678 942.269,683.678 942.829,683.678 943.388,683.678 943.947,683.678 944.506,683.678 945.066,683.678 945.625,683.678 946.184,683.678 946.743,683.678 947.303,683.678 947.862,683.678 948.421,683.678 948.98,683.678 949.54,683.678 950.099,683.678 950.658,683.678 951.217,683.678 951.777,683.678 952.336,683.678 952.895,683.678 953.454,683.678 954.014,683.678 954.573,683.678 955.132,683.678 955.691,683.678 956.251,683.678 956.81,683.678 957.369,683.678 957.928,683.678 958.488,683.678 959.047,683.678 959.606,683.678 960.165,683.678 960.725,683.678 961.284,683.678 961.843,683.678 962.402,683.678 962.962,683.678 963.521,683.678 964.08,683.678 964.639,683.678 965.199,683.678 965.758,683.678 966.317,683.678 966.876,683.678 967.436,683.678 967.995,683.678 968.554,683.678 969.113,683.678 969.673,683.678 970.232,683.678 970.791,683.678 971.35,683.678 971.91,683.678 972.469,683.678 973.028,683.678 973.587,683.678 974.147,683.678 974.706,683.678 975.265,683.678 975.824,683.678 976.384,683.678 976.943,683.678 977.502,683.678 978.061,683.678 978.621,683.678 979.18,683.678 979.739,683.678 980.298,683.678 980.858,683.678 981.417,683.678 981.976,683.678 982.535,683.678 983.095,683.678 983.654,683.678 984.213,683.678 984.772,683.678 985.332,683.678 985.891,683.678 986.45,683.678 987.009,683.678 987.569,683.678 988.128,683.678 988.687,683.678 989.246,683.678 989.806,683.678 990.365,683.678 990.924,683.678 991.483,683.678 992.043,683.678 992.602,683.678 993.161,683.678 993.72,683.678 994.28,683.678 994.839,683.678 995.398,683.678 995.957,683.678 996.517,683.678 997.076,683.678 997.635,683.678 998.194,683.678 998.754,683.678 999.313,683.678 999.872,683.678 1000.43,683.678 1000.99,683.678 1001.55,683.678 1002.11,683.678 1002.67,683.678 1003.23,683.678 1003.79,683.678 1004.35,683.678 1004.91,683.678 1005.46,683.678 1006.02,683.678 1006.58,683.678 1007.14,683.678 1007.7,683.678 1008.26,683.678 1008.82,683.678 1009.38,683.678 1009.94,683.678 1010.5,683.678 1011.06,683.678 1011.62,683.678 1012.18,683.678 1012.73,683.678 1013.29,683.678 1013.85,683.678 1014.41,683.678 1014.97,683.678 1015.53,683.678 1016.09,683.678 1016.65,683.678 1017.21,683.678 1017.77,683.678 1018.33,683.678 1018.89,683.678 1019.45,683.678 1020.01,683.678 1020.56,683.678 1021.12,683.678 1021.68,683.678 1022.24,683.678 1022.8,683.678 1023.36,683.678 1023.92,683.678 1024.48,683.678 1025.04,683.678 1025.6,683.678 1026.16,683.678 1026.72,683.678 1027.28,683.678 1027.83,683.678 1028.39,683.678 1028.95,683.678 1029.51,683.678 1030.07,683.678 1030.63,683.678 1031.19,683.678 1031.75,683.678 1032.31,683.678 1032.87,683.678 1033.43,683.678 1033.99,683.678 1034.55,683.678 1035.1,683.678 1035.66,683.678 1036.22,683.678 1036.78,683.678 1037.34,683.678 1037.9,683.678 1038.46,683.678 1039.02,683.678 1039.58,683.678 1040.14,683.678 1040.7,683.678 1041.26,683.678 1041.82,683.678 1042.38,683.678 1042.93,683.678 1043.49,683.678 1044.05,683.678 1044.61,683.678 1045.17,683.678 1045.73,683.678 1046.29,683.678 1046.85,683.678 1047.41,683.678 1047.97,683.678 1048.53,683.678 1049.09,683.678 1049.65,683.678 1050.2,683.678 1050.76,683.678 1051.32,683.678 1051.88,683.678 1052.44,683.678 1053,683.678 1053.56,683.678 1054.12,683.678 1054.68,683.678 1055.24,683.678 1055.8,683.678 1056.36,683.678 1056.92,683.678 1057.48,683.678 1058.03,683.678 1058.59,683.678 1059.15,683.678 1059.71,683.678 1060.27,683.678 1060.83,683.678 1061.39,683.678 1061.95,683.678 1062.51,683.678 1063.07,683.678 1063.63,683.678 1064.19,683.678 1064.75,683.678 1065.3,683.678 1065.86,683.678 1066.42,683.678 1066.98,683.678 1067.54,683.678 1068.1,683.678 1068.66,683.678 1069.22,683.678 1069.78,683.678 1070.34,683.678 1070.9,683.678 1071.46,683.678 1072.02,683.678 1072.57,683.678 1073.13,683.678 1073.69,683.678 1074.25,683.678 1074.81,683.678 1075.37,683.678 1075.93,683.678 1076.49,683.678 1077.05,683.678 1077.61,683.678 1078.17,683.678 1078.73,683.678 1079.29,683.678 1079.85,683.678 1080.4,683.678 1080.96,683.678 1081.52,683.678 1082.08,683.678 1082.64,683.678 1083.2,683.678 1083.76,683.678 1084.32,683.678 1084.88,683.678 1085.44,683.678 1086,683.678 1086.56,683.678 1087.12,683.678 1087.67,683.678 1088.23,683.678 1088.79,683.678 1089.35,683.678 1089.91,683.678 1090.47,683.678 1091.03,683.678 1091.59,683.678 1092.15,683.678 1092.71,683.678 1093.27,683.678 1093.83,683.678 1094.39,683.678 1094.94,683.678 1095.5,683.678 1096.06,683.678 1096.62,683.678 1097.18,683.678 1097.74,683.678 1098.3,683.678 1098.86,683.678 1099.42,683.678 1099.98,683.678 1100.54,683.678 1101.1,683.678 1101.66,683.678 1102.22,683.678 1102.77,683.678 1103.33,683.678 1103.89,683.678 1104.45,683.678 1105.01,683.678 1105.57,683.678 1106.13,683.678 1106.69,683.678 1107.25,683.678 1107.81,683.678 1108.37,683.678 1108.93,683.678 1109.49,683.678 1110.04,683.678 1110.6,683.678 1111.16,683.678 1111.72,683.678 1112.28,683.678 1112.84,683.678 1113.4,683.678 1113.96,683.678 1114.52,683.678 1115.08,683.678 1115.64,683.678 1116.2,683.678 1116.76,683.678 1117.31,683.678 1117.87,683.678 1118.43,683.678 1118.99,683.678 1119.55,683.678 1120.11,683.678 1120.67,683.678 1121.23,683.678 1121.79,683.678 1122.35,683.678 1122.91,683.678 1123.47,683.678 1124.03,683.678 1124.59,683.678 1125.14,683.678 1125.7,683.678 1126.26,683.678 1126.82,683.678 1127.38,683.678 1127.94,683.678 1128.5,683.678 1129.06,683.678 1129.62,683.678 1130.18,683.678 1130.74,683.678 1131.3,683.678 1131.86,683.678 1132.41,683.678 1132.97,683.678 1133.53,683.678 1134.09,683.678 1134.65,683.678 1135.21,683.678 1135.77,683.678 1136.33,683.678 1136.89,683.678 1137.45,683.678 1138.01,683.678 1138.57,683.678 1139.13,683.678 1139.68,683.678 1140.24,683.678 1140.8,683.678 1141.36,683.678 1141.92,683.678 1142.48,683.678 1143.04,683.678 1143.6,683.678 1144.16,683.678 1144.72,683.678 1145.28,683.678 1145.84,683.678 1146.4,683.678 1146.96,683.678 1147.51,683.678 1148.07,683.678 1148.63,683.678 1149.19,683.678 1149.75,683.678 1150.31,683.678 1150.87,683.678 1151.43,683.678 1151.99,683.678 1152.55,683.678 1153.11,683.678 1153.67,683.678 1154.23,683.678 1154.78,683.678 1155.34,683.678 1155.9,683.678 1156.46,683.678 1157.02,683.678 1157.58,683.678 1158.14,683.678 1158.7,683.678 1159.26,683.678 1159.82,683.678 1160.38,683.678 1160.94,683.678 1161.5,683.678 1162.05,683.678 1162.61,683.678 1163.17,683.678 1163.73,683.678 1164.29,683.678 1164.85,683.678 1165.41,683.678 1165.97,683.678 1166.53,683.678 1167.09,683.678 1167.65,683.678 1168.21,683.678 1168.77,683.678 1169.33,683.678 1169.88,683.678 1170.44,683.678 1171,683.678 1171.56,683.678 1172.12,683.678 1172.68,683.678 1173.24,683.678 1173.8,683.678 1174.36,683.678 1174.92,683.678 1175.48,683.678 1176.04,683.678 1176.6,683.678 1177.15,683.678 1177.71,683.678 1178.27,683.678 1178.83,683.678 1179.39,683.678 1179.95,683.678 1180.51,683.678 1181.07,683.678 1181.63,683.678 1182.19,683.678 1182.75,683.678 1183.31,683.678 1183.87,683.678 1184.43,683.678 1184.98,683.678 1185.54,683.678 1186.1,683.678 1186.66,683.678 1187.22,683.678 1187.78,683.678 1188.34,683.678 1188.9,683.678 1189.46,683.678 1190.02,683.678 1190.58,683.678 1191.14,683.678 1191.7,683.678 1192.25,683.678 1192.81,683.678 1193.37,683.678 1193.93,683.678 1194.49,683.678 1195.05,683.678 1195.61,683.678 1196.17,683.678 1196.73,683.678 1197.29,683.678 1197.85,683.678 1198.41,683.678 1198.97,683.678 1199.52,683.678 1200.08,683.678 1200.64,683.678 1201.2,683.678 1201.76,683.678 1202.32,683.678 1202.88,683.678 1203.44,683.678 1204,683.678 1204.56,683.678 1205.12,683.678 1205.68,683.678 1206.24,683.678 1206.8,683.678 1207.35,683.678 1207.91,683.678 1208.47,683.678 1209.03,683.678 1209.59,683.678 1210.15,683.678 1210.71,683.678 1211.27,683.678 1211.83,683.678 1212.39,683.678 1212.95,683.678 1213.51,683.678 1214.07,683.678 1214.62,683.678 1215.18,683.678 1215.74,683.678 1216.3,683.678 1216.86,683.678 1217.42,683.678 1217.98,683.678 1218.54,683.678 1219.1,683.678 1219.66,683.678 1220.22,683.678 1220.78,683.678 1221.34,683.678 1221.89,683.678 1222.45,683.678 1223.01,683.678 1223.57,683.678 1224.13,683.678 1224.69,683.678 1225.25,683.678 1225.81,683.678 1226.37,683.678 1226.93,683.678 1227.49,683.678 1228.05,683.678 1228.61,683.678 1229.17,683.678 1229.72,683.678 1230.28,683.678 1230.84,683.678 1231.4,683.678 1231.96,683.678 1232.52,683.678 1233.08,683.678 1233.64,683.678 1234.2,683.678 1234.76,683.678 1235.32,683.678 1235.88,683.678 1236.44,683.678 1236.99,683.678 1237.55,683.678 1238.11,683.678 1238.67,683.678 1239.23,683.678 1239.79,683.678 1240.35,683.678 1240.91,683.678 1241.47,683.678 1242.03,683.678 1242.59,683.678 1243.15,683.678 1243.71,683.678 1244.26,683.678 1244.82,683.678 1245.38,683.678 1245.94,683.678 1246.5,683.678 1247.06,683.678 1247.62,683.678 1248.18,683.678 1248.74,683.678 1249.3,683.678 1249.86,683.678 1250.42,683.678 1250.98,683.678 1251.54,683.678 1252.09,683.678 1252.65,683.678 1253.21,683.678 1253.77,683.678 1254.33,683.678 1254.89,683.678 1255.45,683.678 1256.01,683.678 1256.57,683.678 1257.13,683.678 1257.69,683.678 1258.25,683.678 1258.81,683.678 1259.36,683.678 1259.92,683.678 1260.48,683.678 1261.04,683.678 1261.6,683.678 1262.16,683.678 1262.72,683.678 1263.28,683.678 1263.84,683.678 1264.4,683.678 1264.96,683.678 1265.52,683.678 1266.08,683.678 1266.63,683.678 1267.19,683.678 1267.75,683.678 1268.31,683.678 1268.87,683.678 1269.43,683.678 1269.99,683.678 1270.55,683.678 1271.11,683.678 1271.67,683.678 1272.23,683.678 1272.79,683.678 1273.35,683.678 1273.91,683.678 1274.46,683.678 1275.02,683.678 1275.58,683.678 1276.14,683.678 1276.7,683.678 1277.26,683.678 1277.82,683.678 1278.38,683.678 1278.94,683.678 1279.5,683.678 1280.06,683.678 1280.62,683.678 1281.18,683.678 1281.73,683.678 1282.29,683.678 1282.85,683.678 1283.41,683.678 1283.97,683.678 1284.53,683.678 1285.09,683.678 1285.65,683.678 1286.21,683.678 1286.77,683.678 1287.33,683.678 1287.89,683.678 1288.45,683.678 1289,683.678 1289.56,683.678 1290.12,683.678 1290.68,683.678 1291.24,683.678 1291.8,683.678 1292.36,683.678 1292.92,683.678 1293.48,683.678 1294.04,683.678 1294.6,683.678 1295.16,683.678 1295.72,683.678 1296.28,683.678 1296.83,683.678 1297.39,683.678 1297.95,683.678 1298.51,683.678 1299.07,683.678 1299.63,683.678 1300.19,683.678 1300.75,683.678 1301.31,683.678 1301.87,683.678 1302.43,683.678 1302.99,683.678 1303.55,683.678 1304.1,683.678 1304.66,683.678 1305.22,683.678 1305.78,683.678 1306.34,683.678 1306.9,683.678 1307.46,683.678 1308.02,683.678 1308.58,683.678 1309.14,683.678 1309.7,683.678 1310.26,683.678 1310.82,683.678 1311.38,683.678 1311.93,683.678 1312.49,683.678 1313.05,683.678 1313.61,683.678 1314.17,683.678 1314.73,683.678 1315.29,683.678 1315.85,683.678 1316.41,683.678 1316.97,683.678 1317.53,683.678 1318.09,683.678 1318.65,683.678 1319.2,683.678 1319.76,683.678 1320.32,683.678 1320.88,683.678 1321.44,683.678 1322,683.678 1322.56,683.678 1323.12,683.678 1323.68,683.678 1324.24,683.678 1324.8,683.678 1325.36,683.678 1325.92,683.678 1326.47,683.678 1327.03,683.678 1327.59,683.678 1328.15,683.678 1328.71,683.678 1329.27,683.678 1329.83,683.678 1330.39,683.678 1330.95,683.678 1331.51,683.678 1332.07,683.678 1332.63,683.678 1333.19,683.678 1333.75,683.678 1334.3,683.678 1334.86,683.678 1335.42,683.678 1335.98,683.678 1336.54,683.678 1337.1,683.678 1337.66,683.678 1338.22,683.678 1338.78,683.678 1339.34,683.678 1339.9,683.678 1340.46,683.678 1341.02,683.678 1341.57,683.678 1342.13,683.678 1342.69,683.678 1343.25,683.678 1343.81,683.678 1344.37,683.678 1344.93,683.678 1345.49,683.678 1346.05,683.678 1346.61,683.678 1347.17,683.678 1347.73,683.678 1348.29,683.678 1348.84,683.678 1349.4,683.678 1349.96,683.678 1350.52,683.678 1351.08,683.678 1351.64,683.678 1352.2,683.678 1352.76,683.678 1353.32,683.678 1353.88,683.678 1354.44,683.678 1355,683.678 1355.56,683.678 1356.12,683.678 1356.67,683.678 1357.23,683.678 1357.79,683.678 1358.35,683.678 1358.91,683.678 1359.47,683.678 1360.03,683.678 1360.59,683.678 1361.15,683.678 1361.71,683.678 1362.27,683.678 1362.83,683.678 1363.39,683.678 1363.94,683.678 1364.5,683.678 1365.06,683.678 1365.62,683.678 1366.18,683.678 1366.74,683.678 1367.3,683.678 1367.86,683.678 1368.42,683.678 1368.98,683.678 1369.54,683.678 1370.1,683.678 1370.66,683.678 1371.21,683.678 1371.77,683.678 1372.33,683.678 1372.89,683.678 1373.45,683.678 1374.01,683.678 1374.57,683.678 1375.13,683.678 1375.69,683.678 1376.25,683.678 1376.81,683.678 1377.37,683.678 1377.93,683.678 1378.49,683.678 1379.04,683.678 1379.6,683.678 1380.16,683.678 1380.72,683.678 1381.28,683.678 1381.84,683.678 1382.4,683.678 1382.96,683.678 1383.52,683.678 1384.08,683.678 1384.64,683.678 1385.2,683.678 1385.76,683.678 1386.31,683.678 1386.87,683.678 1387.43,683.678 1387.99,683.678 1388.55,683.678 1389.11,683.678 1389.67,683.678 1390.23,683.678 1390.79,683.678 1391.35,683.678 1391.91,683.678 1392.47,683.678 1393.03,683.678 1393.58,683.678 1394.14,683.678 1394.7,683.678 1395.26,683.678 1395.82,683.678 1396.38,683.678 1396.94,683.678 1397.5,683.678 1398.06,683.678 1398.62,683.678 1399.18,683.678 1399.74,683.678 1400.3,683.678 1400.86,683.678 1401.41,683.678 1401.97,683.678 1402.53,683.678 1403.09,683.678 1403.65,683.678 1404.21,683.678 1404.77,683.678 1405.33,683.678 1405.89,683.678 1406.45,683.678 1407.01,683.678 1407.57,683.678 1408.13,683.678 1408.68,683.678 1409.24,683.678 1409.8,683.678 1410.36,683.678 1410.92,683.678 1411.48,683.678 1412.04,683.678 1412.6,683.678 1413.16,683.678 1413.72,683.678 1414.28,683.678 1414.84,683.678 1415.4,683.678 1415.95,683.678 1416.51,683.678 1417.07,683.678 1417.63,683.678 1418.19,683.678 1418.75,683.678 1419.31,683.678 1419.87,683.678 1420.43,683.678 1420.99,683.678 1421.55,683.678 1422.11,683.678 1422.67,683.678 1423.23,683.678 1423.78,683.678 1424.34,683.678 1424.9,683.678 1425.46,683.678 1426.02,683.678 1426.58,683.678 1427.14,683.678 1427.7,683.678 1428.26,683.678 1428.82,683.678 1429.38,683.678 1429.94,683.678 1430.5,683.678 1431.05,683.678 1431.61,683.678 1432.17,683.678 1432.73,683.678 1433.29,683.678 1433.85,683.678 1434.41,683.678 1434.97,683.678 1435.53,683.678 1436.09,683.678 1436.65,683.678 1437.21,683.678 1437.77,683.678 1438.33,683.678 1438.88,683.678 1439.44,683.678 1440,683.678 1440.56,683.678 1441.12,683.678 1441.68,683.678 1442.24,683.678 1442.8,683.678 1443.36,683.678 1443.92,683.678 1444.48,683.678 1445.04,683.678 1445.6,683.678 1446.15,683.678 1446.71,683.678 1447.27,683.678 1447.83,683.678 1448.39,683.678 1448.95,683.678 1449.51,683.678 1450.07,683.678 1450.63,683.678 1451.19,683.678 1451.75,683.678 1452.31,683.678 1452.87,683.678 1453.42,683.678 1453.98,683.678 1454.54,683.678 1455.1,683.678 1455.66,683.678 1456.22,683.678 1456.78,683.678 1457.34,683.678 1457.9,683.678 1458.46,683.678 1459.02,683.678 1459.58,683.678 1460.14,683.678 1460.7,683.678 1461.25,683.678 1461.81,683.678 1462.37,683.678 1462.93,683.678 1463.49,683.678 1464.05,683.678 1464.61,683.678 1465.17,683.678 1465.73,683.678 1466.29,683.678 1466.85,683.678 1467.41,683.678 1467.97,683.678 1468.52,683.678 1469.08,683.678 1469.64,683.678 1470.2,683.678 1470.76,683.678 1471.32,683.678 1471.88,683.678 1472.44,683.678 1473,683.678 1473.56,683.678 1474.12,683.678 1474.68,683.678 1475.24,683.678 1475.79,683.678 1476.35,683.678 1476.91,683.678 1477.47,683.678 1478.03,683.678 1478.59,683.678 1479.15,683.678 1479.71,683.678 1480.27,683.678 1480.83,683.678 1481.39,683.678 1481.95,683.678 1482.51,683.678 1483.07,683.678 1483.62,683.678 1484.18,683.678 1484.74,683.678 1485.3,683.678 1485.86,683.678 1486.42,683.678 1486.98,683.678 1487.54,683.678 1488.1,683.678 1488.66,683.678 1489.22,683.678 1489.78,683.678 1490.34,683.678 1490.89,683.678 1491.45,683.678 1492.01,683.678 1492.57,683.678 1493.13,683.678 1493.69,683.678 1494.25,683.678 1494.81,683.678 1495.37,683.678 1495.93,683.678 1496.49,683.678 1497.05,683.678 1497.61,683.678 1498.16,683.678 1498.72,683.678 1499.28,683.678 1499.84,683.678 1500.4,683.678 1500.96,683.678 1501.52,683.678 1502.08,683.678 1502.64,683.678 1503.2,683.678 1503.76,683.678 1504.32,683.678 1504.88,683.678 1505.44,683.678 1505.99,683.678 1506.55,683.678 1507.11,683.678 1507.67,683.678 1508.23,683.678 1508.79,683.678 1509.35,683.678 1509.91,683.678 1510.47,683.678 1511.03,683.678 1511.59,683.678 1512.15,683.678 1512.71,683.678 1513.26,683.678 1513.82,683.678 1514.38,683.678 1514.94,683.678 1515.5,683.678 1516.06,683.678 1516.62,683.678 1517.18,683.678 1517.74,683.678 1518.3,683.678 1518.86,683.678 1519.42,683.678 1519.98,683.678 1520.53,683.678 1521.09,683.678 1521.65,683.678 1522.21,683.678 1522.77,683.678 1523.33,683.678 1523.89,683.678 1524.45,683.678 1525.01,683.678 1525.57,683.678 1526.13,683.678 1526.69,683.678 1527.25,683.678 1527.81,683.678 1528.36,683.678 1528.92,683.678 1529.48,683.678 1530.04,683.678 1530.6,683.678 1531.16,683.678 1531.72,683.678 1532.28,683.678 1532.84,683.678 1533.4,683.678 1533.96,683.678 1534.52,683.678 1535.08,683.678 1535.63,683.678 1536.19,683.678 1536.75,683.678 1537.31,683.678 1537.87,683.678 1538.43,683.678 1538.99,683.678 1539.55,683.678 1540.11,683.678 1540.67,683.678 1541.23,683.678 1541.79,683.678 1542.35,683.678 1542.9,683.678 1543.46,683.678 1544.02,683.678 1544.58,683.678 1545.14,683.678 1545.7,683.678 1546.26,683.678 1546.82,683.678 1547.38,683.678 1547.94,683.678 1548.5,683.678 1549.06,683.678 1549.62,683.678 1550.18,683.678 1550.73,683.678 1551.29,683.678 1551.85,683.678 1552.41,683.678 1552.97,683.678 1553.53,683.678 1554.09,683.678 1554.65,683.678 1555.21,683.678 1555.77,683.678 1556.33,683.678 1556.89,683.678 1557.45,683.678 1558,683.678 1558.56,683.678 1559.12,683.678 1559.68,683.678 1560.24,683.678 1560.8,683.678 1561.36,683.678 1561.92,683.678 1562.48,683.678 1563.04,683.678 1563.6,683.678 1564.16,683.678 1564.72,683.678 1565.28,683.678 1565.83,683.678 1566.39,683.678 1566.95,683.678 1567.51,683.678 1568.07,683.678 1568.63,683.678 1569.19,683.678 1569.75,683.678 1570.31,683.678 1570.87,683.678 1571.43,683.678 1571.99,683.678 1572.55,683.678 1573.1,683.678 1573.66,683.678 1574.22,683.678 1574.78,683.678 1575.34,683.678 1575.9,683.678 1576.46,683.678 1577.02,683.678 1577.58,683.678 1578.14,683.678 1578.7,683.678 1579.26,683.678 1579.82,683.678 1580.37,683.678 1580.93,683.678 1581.49,683.678 1582.05,683.678 1582.61,683.678 1583.17,683.678 1583.73,683.678 1584.29,683.678 1584.85,683.678 1585.41,683.678 1585.97,683.678 1586.53,683.678 1587.09,683.678 1587.65,683.678 1588.2,683.678 1588.76,683.678 1589.32,683.678 1589.88,683.678 1590.44,683.678 1591,683.678 1591.56,683.678 1592.12,683.678 1592.68,683.678 1593.24,683.678 1593.8,683.678 1594.36,683.678 1594.92,683.678 1595.47,683.678 1596.03,683.678 1596.59,683.678 1597.15,683.678 1597.71,683.678 1598.27,683.678 1598.83,683.678 1599.39,683.678 1599.95,683.678 1600.51,683.678 1601.07,683.678 1601.63,683.678 1602.19,683.678 1602.74,683.678 1603.3,683.678 1603.86,683.678 1604.42,683.678 1604.98,683.678 1605.54,683.678 1606.1,683.678 1606.66,683.678 1607.22,683.678 1607.78,683.678 1608.34,683.678 1608.9,683.678 1609.46,683.678 1610.02,683.678 1610.57,683.678 1611.13,683.678 1611.69,683.678 1612.25,683.678 1612.81,683.678 1613.37,683.678 1613.93,683.678 1614.49,683.678 1615.05,683.678 1615.61,683.678 1616.17,683.678 1616.73,683.678 1617.29,683.678 1617.84,683.678 1618.4,683.678 1618.96,683.678 1619.52,683.678 1620.08,683.678 1620.64,683.678 1621.2,683.678 1621.76,683.678 1622.32,683.678 1622.88,683.678 1623.44,683.678 1624,683.678 1624.56,683.678 1625.11,683.678 1625.67,683.678 1626.23,683.678 1626.79,683.678 1627.35,683.678 1627.91,683.678 1628.47,683.678 1629.03,683.678 1629.59,683.678 1630.15,683.678 1630.71,683.678 1631.27,683.678 1631.83,683.678 1632.39,683.678 1632.94,683.678 1633.5,683.678 1634.06,683.678 1634.62,683.678 1635.18,683.678 1635.74,683.678 1636.3,683.678 1636.86,683.678 1637.42,683.678 1637.98,683.678 1638.54,683.678 1639.1,683.678 1639.66,683.678 1640.21,683.678 1640.77,683.678 1641.33,683.678 1641.89,683.678 1642.45,683.678 1643.01,683.678 1643.57,683.678 1644.13,683.678 1644.69,683.678 1645.25,683.678 1645.81,683.678 1646.37,683.678 1646.93,683.678 1647.48,683.678 1648.04,683.678 1648.6,683.678 1649.16,683.678 1649.72,683.678 1650.28,683.678 1650.84,683.678 1651.4,683.678 1651.96,683.678 1652.52,683.678 1653.08,683.678 1653.64,683.678 1654.2,683.678 1654.76,683.678 1655.31,683.678 1655.87,683.678 1656.43,683.678 1656.99,683.678 1657.55,683.678 1658.11,683.678 1658.67,683.678 1659.23,683.678 1659.79,683.678 1660.35,683.678 1660.91,683.678 1661.47,683.678 1662.03,683.678 1662.58,683.678 1663.14,683.678 1663.7,683.678 1664.26,683.678 1664.82,683.678 1665.38,683.678 1665.94,683.678 1666.5,683.678 1667.06,683.678 1667.62,683.678 1668.18,683.678 1668.74,683.678 1669.3,683.678 1669.85,683.678 1670.41,683.678 1670.97,683.678 1671.53,683.678 1672.09,683.678 1672.65,683.678 1673.21,683.678 1673.77,683.678 1674.33,683.678 1674.89,683.678 1675.45,683.678 1676.01,683.678 1676.57,683.678 1677.13,683.678 1677.68,683.678 1678.24,683.678 1678.8,683.678 1679.36,683.678 1679.92,683.678 1680.48,683.678 1681.04,683.678 1681.6,683.678 1682.16,683.678 1682.72,683.678 1683.28,683.678 1683.84,683.678 1684.4,683.678 1684.95,683.678 1685.51,683.678 1686.07,683.678 1686.63,683.678 1687.19,683.678 1687.75,683.678 1688.31,683.678 1688.87,683.678 1689.43,683.678 1689.99,683.678 1690.55,683.678 1691.11,683.678 1691.67,683.678 1692.23,683.678 1692.78,683.678 1693.34,683.678 1693.9,683.678 1694.46,683.678 1695.02,683.678 1695.58,683.678 1696.14,683.678 1696.7,683.678 1697.26,683.678 1697.82,683.678 1698.38,683.678 1698.94,683.678 1699.5,683.678 1700.05,683.678 1700.61,683.678 1701.17,683.678 1701.73,683.678 1702.29,683.678 1702.85,683.678 1703.41,683.678 1703.97,683.678 1704.53,683.678 1705.09,683.678 1705.65,683.678 1706.21,683.678 1706.77,683.678 1707.32,683.678 1707.88,683.678 1708.44,683.678 1709,683.678 1709.56,683.678 1710.12,683.678 1710.68,683.678 1711.24,683.678 1711.8,683.678 1712.36,683.678 1712.92,683.678 1713.48,683.678 1714.04,683.678 1714.6,683.678 1715.15,683.678 1715.71,683.678 1716.27,683.678 1716.83,683.678 1717.39,683.678 1717.95,683.678 1718.51,683.678 1719.07,683.678 1719.63,683.678 1720.19,683.678 1720.75,683.678 1721.31,683.678 1721.87,683.678 1722.42,683.678 1722.98,683.678 1723.54,683.678 1724.1,683.678 1724.66,683.678 1725.22,683.678 1725.78,683.678 1726.34,683.678 1726.9,683.678 1727.46,683.678 1728.02,683.678 1728.58,683.678 1729.14,683.678 1729.69,683.678 1730.25,683.678 1730.81,683.678 1731.37,683.678 1731.93,683.678 1732.49,683.678 1733.05,683.678 1733.61,683.678 1734.17,683.678 1734.73,683.678 1735.29,683.678 1735.85,683.678 1736.41,683.678 1736.97,683.678 1737.52,683.678 1738.08,683.678 1738.64,683.678 1739.2,683.678 1739.76,683.678 1740.32,683.678 1740.88,683.678 1741.44,683.678 1742,683.678 1742.56,683.678 1743.12,683.678 1743.68,683.678 1744.24,683.678 1744.79,683.678 1745.35,683.678 1745.91,683.678 1746.47,683.678 1747.03,683.678 1747.59,683.678 1748.15,683.678 1748.71,683.678 1749.27,683.678 1749.83,683.678 1750.39,683.678 1750.95,683.678 1751.51,683.678 1752.06,683.678 1752.62,683.678 1753.18,683.678 1753.74,683.678 1754.3,683.678 1754.86,683.678 1755.42,683.678 1755.98,683.678 1756.54,683.678 1757.1,683.678 1757.66,683.678 1758.22,683.678 1758.78,683.678 1759.34,683.678 1759.89,683.678 1760.45,683.678 1761.01,683.678 1761.57,683.678 1762.13,683.678 1762.69,683.678 1763.25,683.678 1763.81,683.678 1764.37,683.678 1764.93,683.678 1765.49,683.678 1766.05,683.678 1766.61,683.678 1767.16,683.678 1767.72,683.678 1768.28,683.678 1768.84,683.678 1769.4,683.678 1769.96,683.678 1770.52,683.678 1771.08,683.678 1771.64,683.678 1772.2,683.678 1772.76,683.678 1773.32,683.678 1773.88,683.678 1774.43,683.678 1774.99,683.678 1775.55,683.678 1776.11,683.678 1776.67,683.678 1777.23,683.678 1777.79,683.678 1778.35,683.678 1778.91,683.678 1779.47,683.678 1780.03,683.678 1780.59,683.678 1781.15,683.678 1781.71,683.678 1782.26,683.678 1782.82,683.678 1783.38,683.678 1783.94,683.678 1784.5,683.678 1785.06,683.678 1785.62,683.678 1786.18,683.678 1786.74,683.678 1787.3,683.678 1787.86,683.678 1788.42,683.678 1788.98,683.678 1789.53,683.678 1790.09,683.678 1790.65,683.678 1791.21,683.678 1791.77,683.678 1792.33,683.678 1792.89,683.678 1793.45,683.678 1794.01,683.678 1794.57,683.678 1795.13,683.678 1795.69,683.678 1796.25,683.678 1796.8,683.678 1797.36,683.678 1797.92,683.678 1798.48,683.678 1799.04,683.678 1799.6,683.678 1800.16,683.678 1800.72,683.678 1801.28,683.678 1801.84,683.678 1802.4,683.678 1802.96,683.678 1803.52,683.678 1804.08,683.678 1804.63,683.678 1805.19,683.678 1805.75,683.678 1806.31,683.678 1806.87,683.678 1807.43,683.678 1807.99,683.678 1808.55,683.678 1809.11,683.678 1809.67,683.678 1810.23,683.678 1810.79,683.678 1811.35,683.678 1811.9,683.678 1812.46,683.678 1813.02,683.678 1813.58,683.678 1814.14,683.678 1814.7,683.678 1815.26,683.678 1815.82,683.678 1816.38,683.678 1816.94,683.678 1817.5,683.678 1818.06,683.678 1818.62,683.678 1819.18,683.678 1819.73,683.678 1820.29,683.678 1820.85,683.678 1821.41,683.678 1821.97,683.678 1822.53,683.678 1823.09,683.678 1823.65,683.678 1824.21,683.678 1824.77,683.678 1825.33,683.678 1825.89,683.678 1826.45,683.678 1827,683.678 1827.56,683.678 1828.12,683.678 1828.68,683.678 1829.24,683.678 1829.8,683.678 1830.36,683.678 1830.92,683.678 1831.48,683.678 1832.04,683.678 1832.6,683.678 1833.16,683.678 1833.72,683.678 1834.27,683.678 1834.83,683.678 1835.39,683.678 1835.95,683.678 1836.51,683.678 1837.07,683.678 1837.63,683.678 1838.19,683.678 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $target_walkers walkers:\n    Shift: $(se.mean) ¬± $(se.err)\n    Projected Energy: $(v.val) ¬± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.032964452989106 ¬± 0.017087590699671373\nProjected Energy: -4.01555633825644 ¬± (0.006612481759232125, 0.006621458444064032)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from solve as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; Œ± = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-Œ±.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ¬± 0.0029\n  with uncertainty of ¬± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13√ó6 DataFrame\n Row ‚îÇ blocks  mean      std_err      std_err_err  p_cov       mj\n     ‚îÇ Int64   Float64   Float64      Float64      Float64     Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 ‚îÇ   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 ‚îÇ   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 ‚îÇ   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 ‚îÇ    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 ‚îÇ    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 ‚îÇ    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 ‚îÇ     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 ‚îÇ     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 ‚îÇ     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 ‚îÇ      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 ‚îÇ      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 ‚îÇ      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ästd err vs blocking steps‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n    0.00423501 ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ m test\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ std err\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°†‚¢∫‚†í‚†í‚¢∫‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚°Ü‚£Ä‚†§‚°ó‚†â‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ß‚†§‚†î‚°ó‚†ä‚†â‚°è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚¢£‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚°á‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†∏‚°Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†Å‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚°á‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£¶‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†î‚†í‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n   -0.00012335 ‚îÇ‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†ß‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚îÇ\n               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n               ‚†Ä0.64‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äk‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä13.36‚†Ä\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; Œ± = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; Œ±=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.œÉ_f using x_by_y_linear. The standard error estimate r.œÉ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.Œ¥_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ¬± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*œÉ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3√ó3 DataFrame\n Row ‚îÇ res      res_l    res_u\n     ‚îÇ Float64  Float64  Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282\n   2 ‚îÇ    13.0  1.7282   1.7282\n   3 ‚îÇ    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b];\n    shift=:shift,\n    norm=:norm,\n    time_step=determine_constant_time_step(df),\n    skip=0\n)\ngrowth_witness(sim::PMCSimulation, [b]; kwargs...)\n\nCalculate the growth witness directly from the result (DataFrame or PMCSimulation) of solveing a ProjectorMonteCarloProblem. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0)\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ‚â• 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n)\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    time_step=determine_constant_time_step(df),\n    kwargs...\n)\ngrowth_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively.  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin.\n\nE_gr = E_r - frac1dœÑln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m) \n\nwhere dœÑ is the time_step\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the (biased) shift estimator.  Error propagation is done with MonteCarloMeasurements. Propagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a PMCSimulation or DataFrame returned by solve. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\ngrowth_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df or PMCSimulation sim. repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-Tuple{AbstractVector, AbstractVector, AbstractVector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    time_step=determine_constant_time_step(df),\n    kwargs...\n)\nmixed_estimator(sim::PMCSimulation, h; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up).  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin.  Additional keyword arguments are passed on to ratio_of_means.\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2), where dœÑ is the time_step, and potentially increased confidence intervals compared to the unweighted ratio.  Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\nmixed_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(df::DataFrame; skip=0, hproj=:hproj, vproj=:vproj, kwargs...)\nprojected_energy(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy(...) to set these up in ProjectorMonteCarloProblem). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, time_step;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n)\nrayleigh_replica_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. weights is a function that calulates the weights. See w_exp and w_lin. Additional keyword arguments are passed on to ratio_of_means.\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\nrayleigh_replica_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...)\nshift_estimator(sim::PMCSimulation; kwargs...)\n-> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, time_step; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip and dœÑ is the time_step.\n\nSee also w_lin, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, time_step; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip and dœÑ is the time_step.\n\nSee also w_exp, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\nreplica_fidelity(sim::PMCSimulation; kwargs...)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the PMCSimulation or DataFrame returned by solve, using replicas _1 and _2. Calls ratio_of_means to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |œà‚ü© and |œï‚ü© is defined as\n\nF(œàœï) = fracœàœï^2œàœàœïœï \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v‚ãÖv == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\nvariational_energy_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame and PMCSimulation versions can extract the relevant information from the result of solve. Set up the ProjectorMonteCarloProblem with the keyword argument replica_strategy = AllOverlaps(R) and R ‚â• 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:¬±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ¬± 0.029\n  with uncertainty of ¬± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; Œ± = 0.01) -> k\nmtest(table::NamedTuple; Œ± = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-Œ± after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, œÉ_f, Œ¥_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nœÉ_f::T: std from linear propagation\nŒ¥_y::T: coefficient of variation for denominator (‚â§ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, Œº, œÉ)\nparticles(samples, Œº::AbstractVector, Œ£::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, œÉ_f, Œ¥_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nœÉ_f standard deviation of f from linear error propagation (normal approximation)\nŒ¥_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(Œº_x,Œº_y,œÉ_x,œÉ_y,œÅ) -> f, œÉ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013).\n\nœÉ_f = sqrtfracœÉ_xŒº_y^2 + fracŒº_x œÉ_yŒº_y^2^2 - frac2 œÅ Œº_xŒº_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3√ó7 DataFrame\n Row ‚îÇ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     ‚îÇ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 ‚îÇ    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 ‚îÇ    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1√ó9 DataFrame\n Row ‚îÇ val       val_l      val_u      val_f     val_œÉ_f    val_Œ¥_y    val_k  val_blocks  val_success\n     ‚îÇ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.determine_constant_time_step-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.determine_constant_time_step","text":"determine_constant_time_step(df) -> time_step\n\nGiven a DataFrame df, determine the time step that was used to compute it. Throw an error if time step is not constant.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7√ó6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS‚Ä¶</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple‚Ä¶</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.477326</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4267e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.197e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.087e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.713e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.806e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.236e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ‚â† basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10√ó10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10√ó10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nŒîE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ŒîE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0‚ü©\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0‚ü©\"\n fs\"|0 1 2 1 0‚ü©\"\n fs\"|1 0 2 0 1‚ü©\"\n fs\"|1 0 1 2 0‚ü©\"\n fs\"|0 0 1 1 2‚ü©\"\n fs\"|0 2 1 0 1‚ü©\"\n fs\"|2 1 1 0 0‚ü©\"\n fs\"|0 2 0 2 0‚ü©\"\n fs\"|1 1 0 1 1‚ü©\"\n fs\"|2 0 0 0 2‚ü©\"\n fs\"|0 0 0 3 1‚ü©\"\n fs\"|3 0 0 1 0‚ü©\"\n fs\"|0 1 0 0 3‚ü©\"\n fs\"|1 3 0 0 0‚ü©\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ‚âà all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0‚ü©\" => -0.0214153\n  fs\"|2 0 0 0 2‚ü©\" => -0.00237613\n  fs\"|0 0 4 0 0‚ü©\" => -0.980348\n  fs\"|0 0 0 3 1‚ü©\" => 0.00363555\n  fs\"|2 1 1 0 0‚ü©\" => -0.0119687\n  fs\"|1 0 2 0 1‚ü©\" => 0.0768085\n  fs\"|1 3 0 0 0‚ü©\" => 0.00363555\n  fs\"|0 1 2 1 0‚ü©\" => 0.177701\n  fs\"|0 0 1 1 2‚ü©\" => -0.0119687\n  fs\"|3 0 0 1 0‚ü©\" => 0.00195478\n  fs\"|0 2 0 2 0‚ü©\" => -0.0138439\n  fs\"|1 1 0 1 1‚ü©\" => -0.00234782\n  fs\"|0 1 0 0 3‚ü©\" => 0.00195478\n  fs\"|0 2 1 0 1‚ü©\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i œµ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential œµ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleœÉ t_œÉ a^_iœÉ a_jœÉ +\n  frac12sum_iœÉ u_œÉœÉ n_iœÉ (n_iœÉ - 1) +\n  sum_iœÉœÑu_œÉœÑ n_iœÉ n_iœÑ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iœÉd v_œÉd x_di^2 n_iœÉ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C √ó D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, Œ∑, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, Œ∑, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i œµ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi œµ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nŒ∑s = (): a tuple of aspect ratios for the remaining dimensions (Œ∑_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/Œ∑_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kœÉk^2 n_kœÉ \n    quad + sum_pqkœÉœÉ T_pqk a^_p-kœÉ a^_q+kœÉ a_qœÉ a_pœÉ \n    quad + sum_pqskkœÉœÉ Q_kka^_p-kœÉ a^_q+kœÉ a^_s+k-kœÉ\n                                       a_sœÉ a_qœÉ a_pœÉ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + œâN - v Œ£‚Çñ(a‚Çñ^ + a‚Çñ)\n\nwhere p is the total momentum, p_f = Œ£_k k a‚Çñ^ a‚Çñ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2œÄl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons œâ.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0‚ü©{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M√∑2, M√∑2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M√∑2, M√∑2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address Œ± is replaced by frac12(Œ±  Œ±) for even and odd parity, respectively, where Œ±ÃÑ == reverse(Œ±).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1‚ü©\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ‚âà eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ‚âà eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ‚â§ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0‚ü©{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ‚â§ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, œÉ=1, œÑ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_œÉœÑ(d) = frac1M _i n_œÉi (n_œÑi+d - Œ¥_0dŒ¥_œÉœÑ)\n\nFor multicomponent addresses, œÉ and œÑ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s b^_p  b_q a_r Œ¥_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s a^_p  a_q a_r Œ¥_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ‚â§ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ‚â§ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iœÉ = hat a^_iœÉ hat a_iœÉ\n\nwhere i is the mode and œÉ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0‚ü©\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0‚ü©\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x‚ãÖ(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1‚ü©\", -3.0)\n (fs\"|2 2 2‚ü©\", -2.449489742783178)\n (fs\"|3 1 2‚ü©\", -2.0)\n (fs\"|4 1 1‚ü©\", -2.8284271247461903)\n (fs\"|4 2 0‚ü©\", -2.0)\n (fs\"|3 3 0‚ü©\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ‚Ä¶.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb‚ãÖ(1:7) == onr(b)‚ãÖ(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w‚ãÖop(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ‚ãÖ A ‚ãÖ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1‚ü©\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ‚âà values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3√ó3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2√ó2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1‚ü©\" => -0.57735   fs\"|0 1 0‚ü©\" => -0.57735   fs\"|1 0 0‚ü©\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nŒ±mathrmnaddrrangle\n\nReturns the new address naddr and the factor Œ±. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0‚ü©\" => 1\n\njulia> fs\"|0 1 2 0‚ü©\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3‚ü©‚äó|0 1 0‚ü©\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üë‚ü©\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0‚ü©{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0‚ü©{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ‚â§ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Œ£_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) √∑ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ‚â§ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|‚ãÖ‚Üë‚Üë‚Üë‚ãÖ‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üì‚ü©\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3‚ü©{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n‚Üí (nadd, Œ±)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3‚ü©{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, Œ± = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep time_step constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; target_walkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when target_walkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ after projecting onto projector.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracPŒ®^(n+1)PŒ®^(n)right)-fracŒædœÑlnleft(fracPŒ®^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; target_walkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4, Œ± = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracŒædœÑlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-Œ±)*walkernumber() + Œ±*UniformProjector()‚ãÖœà computed with walkernumber() and UniformProjector(). When Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; target_walkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)-fracŒædœÑlnleft(fracŒ®_1^n+1Œ®_1^texttargetright)\n\nWhen Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(target_walkers, Œ∂ = 0.08, Œæ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After target_walkers is reached, update the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, Œ∂ = 0.08,   Œæ = Œ∂^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, time_step) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\nùêì = 1 + dœÑ(S - ùêá)\n\nwhere ùêá is the hamiltonian, dœÑ the time_step and S is the shift.\n\nùêì represents the first order expansion of the exponential evolution operator of the imaginary-time Schr√∂dinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(target_walkers, Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After target_walkers is reached, update the shift according to the log formula with damping parameter Œ∂.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntarget_walkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; target_walkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nŒ∂ = 0.08: Damping parameter for the shift update.\nŒæ = Œ∂^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; target_walkers, Œ∂, Œæ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * target_walkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dœÑ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(‚ãÖ,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_time_step(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndœÑ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3‚ü©\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nœÑ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; target_walkers=targetwalkers, Œ∂ = 0.08, Œæ = Œ∂^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.target_walkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ‚âà num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0, fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5\n  fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.update_time_step-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_time_step","text":"update_time_step(s<:TimeStepStrategy, time_step, tnorm) -> new_time_step\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    target_walkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schr√∂dinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Bl√∂te PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schr√∂dinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija ƒåufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. ProjectorMonteCarloProblem, ExactDiagonalizationProblem.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. ƒåufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelm√ºller, D. Huber, M. ƒåufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/œÄ^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => -1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -2.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 3.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 3.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()‚ãÖv == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
