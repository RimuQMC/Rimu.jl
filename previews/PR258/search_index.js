var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndœÑ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dœÑ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ¬± $(r.œÉ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ¬± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ¬± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ¬± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ¬± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ¬± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ¬± 0.13748856752861724\n   Replica 2: -3.974753826250174 ¬± 0.12466355058904417\n   Replica 3: -4.011054302602586 ¬± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1‚ü©\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1‚ü©\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0‚ü©\"=>-14.1421, fs\"|0 2 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 1 0 2‚ü©\"=>-14.1421, fs\"|1 2 0 1 1 1‚ü©\"=>-14.1421, fs\"|2 0 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 2 0 1‚ü©\"=>-14.1421, fs\"|1 1 2 0 1 1‚ü©\"=>-14.1421, fs\"|1 1 0 2 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 0 2 1‚ü©\"=>-14.1421, fs\"|1 0 2 1 1 1‚ü©\"=>-14.1421, fs\"|2 1 1 1 1 0‚ü©\"=>-14.1421, fs\"|0 1 1 1 1 2‚ü©\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip520\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip520)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip521\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip520)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip522\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip520)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.85 2211.02,1260.85 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1002.89 2211.02,1002.89 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,744.939 2211.02,744.939 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,486.985 2211.02,486.985 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,229.031 2211.02,229.031 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.85 423.181,1260.85 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1002.89 423.181,1002.89 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,744.939 423.181,744.939 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,486.985 423.181,486.985 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,229.031 423.181,229.031 \"/>\n<path clip-path=\"url(#clip520)\" d=\"M356.339 1246.65 Q352.728 1246.65 350.899 1250.21 Q349.094 1253.75 349.094 1260.88 Q349.094 1267.99 350.899 1271.55 Q352.728 1275.09 356.339 1275.09 Q359.973 1275.09 361.779 1271.55 Q363.608 1267.99 363.608 1260.88 Q363.608 1253.75 361.779 1250.21 Q359.973 1246.65 356.339 1246.65 M356.339 1242.94 Q362.149 1242.94 365.205 1247.55 Q368.284 1252.13 368.284 1260.88 Q368.284 1269.61 365.205 1274.21 Q362.149 1278.8 356.339 1278.8 Q350.529 1278.8 347.45 1274.21 Q344.395 1269.61 344.395 1260.88 Q344.395 1252.13 347.45 1247.55 Q350.529 1242.94 356.339 1242.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M290.043 1016.24 L306.363 1016.24 L306.363 1020.17 L284.418 1020.17 L284.418 1016.24 Q287.08 1013.48 291.664 1008.85 Q296.27 1004.2 297.451 1002.86 Q299.696 1000.34 300.576 998.599 Q301.478 996.84 301.478 995.15 Q301.478 992.395 299.534 990.659 Q297.613 988.923 294.511 988.923 Q292.312 988.923 289.858 989.687 Q287.427 990.451 284.65 992.002 L284.65 987.28 Q287.474 986.145 289.927 985.567 Q292.381 984.988 294.418 984.988 Q299.789 984.988 302.983 987.673 Q306.177 990.358 306.177 994.849 Q306.177 996.979 305.367 998.9 Q304.58 1000.8 302.474 1003.39 Q301.895 1004.06 298.793 1007.28 Q295.691 1010.47 290.043 1016.24 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M316.224 985.613 L334.58 985.613 L334.58 989.548 L320.506 989.548 L320.506 998.02 Q321.524 997.673 322.543 997.511 Q323.562 997.326 324.58 997.326 Q330.367 997.326 333.747 1000.5 Q337.126 1003.67 337.126 1009.08 Q337.126 1014.66 333.654 1017.77 Q330.182 1020.84 323.862 1020.84 Q321.687 1020.84 319.418 1020.47 Q317.173 1020.1 314.765 1019.36 L314.765 1014.66 Q316.849 1015.8 319.071 1016.35 Q321.293 1016.91 323.77 1016.91 Q327.774 1016.91 330.112 1014.8 Q332.45 1012.7 332.45 1009.08 Q332.45 1005.47 330.112 1003.37 Q327.774 1001.26 323.77 1001.26 Q321.895 1001.26 320.02 1001.68 Q318.168 1002.09 316.224 1002.97 L316.224 985.613 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M356.339 988.692 Q352.728 988.692 350.899 992.256 Q349.094 995.798 349.094 1002.93 Q349.094 1010.03 350.899 1013.6 Q352.728 1017.14 356.339 1017.14 Q359.973 1017.14 361.779 1013.6 Q363.608 1010.03 363.608 1002.93 Q363.608 995.798 361.779 992.256 Q359.973 988.692 356.339 988.692 M356.339 984.988 Q362.149 984.988 365.205 989.594 Q368.284 994.178 368.284 1002.93 Q368.284 1011.65 365.205 1016.26 Q362.149 1020.84 356.339 1020.84 Q350.529 1020.84 347.45 1016.26 Q344.395 1011.65 344.395 1002.93 Q344.395 994.178 347.45 989.594 Q350.529 984.988 356.339 984.988 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M286.062 727.659 L304.418 727.659 L304.418 731.594 L290.344 731.594 L290.344 740.066 Q291.363 739.719 292.381 739.557 Q293.4 739.372 294.418 739.372 Q300.205 739.372 303.585 742.543 Q306.964 745.714 306.964 751.131 Q306.964 756.71 303.492 759.812 Q300.02 762.89 293.701 762.89 Q291.525 762.89 289.256 762.52 Q287.011 762.15 284.603 761.409 L284.603 756.71 Q286.687 757.844 288.909 758.4 Q291.131 758.955 293.608 758.955 Q297.613 758.955 299.951 756.849 Q302.288 754.742 302.288 751.131 Q302.288 747.52 299.951 745.414 Q297.613 743.307 293.608 743.307 Q291.733 743.307 289.858 743.724 Q288.006 744.14 286.062 745.02 L286.062 727.659 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M326.177 730.738 Q322.566 730.738 320.737 734.302 Q318.932 737.844 318.932 744.974 Q318.932 752.08 320.737 755.645 Q322.566 759.187 326.177 759.187 Q329.811 759.187 331.617 755.645 Q333.446 752.08 333.446 744.974 Q333.446 737.844 331.617 734.302 Q329.811 730.738 326.177 730.738 M326.177 727.034 Q331.987 727.034 335.043 731.64 Q338.122 736.224 338.122 744.974 Q338.122 753.701 335.043 758.307 Q331.987 762.89 326.177 762.89 Q320.367 762.89 317.288 758.307 Q314.233 753.701 314.233 744.974 Q314.233 736.224 317.288 731.64 Q320.367 727.034 326.177 727.034 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M356.339 730.738 Q352.728 730.738 350.899 734.302 Q349.094 737.844 349.094 744.974 Q349.094 752.08 350.899 755.645 Q352.728 759.187 356.339 759.187 Q359.973 759.187 361.779 755.645 Q363.608 752.08 363.608 744.974 Q363.608 737.844 361.779 734.302 Q359.973 730.738 356.339 730.738 M356.339 727.034 Q362.149 727.034 365.205 731.64 Q368.284 736.224 368.284 744.974 Q368.284 753.701 365.205 758.307 Q362.149 762.89 356.339 762.89 Q350.529 762.89 347.45 758.307 Q344.395 753.701 344.395 744.974 Q344.395 736.224 347.45 731.64 Q350.529 727.034 356.339 727.034 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M284.835 469.705 L307.057 469.705 L307.057 471.696 L294.511 504.265 L289.627 504.265 L301.432 473.64 L284.835 473.64 L284.835 469.705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M316.224 469.705 L334.58 469.705 L334.58 473.64 L320.506 473.64 L320.506 482.112 Q321.524 481.765 322.543 481.603 Q323.562 481.418 324.58 481.418 Q330.367 481.418 333.747 484.589 Q337.126 487.761 337.126 493.177 Q337.126 498.756 333.654 501.858 Q330.182 504.936 323.862 504.936 Q321.687 504.936 319.418 504.566 Q317.173 504.196 314.765 503.455 L314.765 498.756 Q316.849 499.89 319.071 500.446 Q321.293 501.001 323.77 501.001 Q327.774 501.001 330.112 498.895 Q332.45 496.788 332.45 493.177 Q332.45 489.566 330.112 487.46 Q327.774 485.353 323.77 485.353 Q321.895 485.353 320.02 485.77 Q318.168 486.187 316.224 487.066 L316.224 469.705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M356.339 472.784 Q352.728 472.784 350.899 476.349 Q349.094 479.89 349.094 487.02 Q349.094 494.126 350.899 497.691 Q352.728 501.233 356.339 501.233 Q359.973 501.233 361.779 497.691 Q363.608 494.126 363.608 487.02 Q363.608 479.89 361.779 476.349 Q359.973 472.784 356.339 472.784 M356.339 469.08 Q362.149 469.08 365.205 473.687 Q368.284 478.27 368.284 487.02 Q368.284 495.747 365.205 500.353 Q362.149 504.936 356.339 504.936 Q350.529 504.936 347.45 500.353 Q344.395 495.747 344.395 487.02 Q344.395 478.27 347.45 473.687 Q350.529 469.08 356.339 469.08 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M256.664 242.376 L264.303 242.376 L264.303 216.011 L255.992 217.677 L255.992 213.418 L264.256 211.751 L268.932 211.751 L268.932 242.376 L276.571 242.376 L276.571 246.311 L256.664 246.311 L256.664 242.376 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M296.015 214.83 Q292.404 214.83 290.576 218.395 Q288.77 221.936 288.77 229.066 Q288.77 236.172 290.576 239.737 Q292.404 243.279 296.015 243.279 Q299.65 243.279 301.455 239.737 Q303.284 236.172 303.284 229.066 Q303.284 221.936 301.455 218.395 Q299.65 214.83 296.015 214.83 M296.015 211.126 Q301.826 211.126 304.881 215.733 Q307.96 220.316 307.96 229.066 Q307.96 237.793 304.881 242.399 Q301.826 246.983 296.015 246.983 Q290.205 246.983 287.127 242.399 Q284.071 237.793 284.071 229.066 Q284.071 220.316 287.127 215.733 Q290.205 211.126 296.015 211.126 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M326.177 214.83 Q322.566 214.83 320.737 218.395 Q318.932 221.936 318.932 229.066 Q318.932 236.172 320.737 239.737 Q322.566 243.279 326.177 243.279 Q329.811 243.279 331.617 239.737 Q333.446 236.172 333.446 229.066 Q333.446 221.936 331.617 218.395 Q329.811 214.83 326.177 214.83 M326.177 211.126 Q331.987 211.126 335.043 215.733 Q338.122 220.316 338.122 229.066 Q338.122 237.793 335.043 242.399 Q331.987 246.983 326.177 246.983 Q320.367 246.983 317.288 242.399 Q314.233 237.793 314.233 229.066 Q314.233 220.316 317.288 215.733 Q320.367 211.126 326.177 211.126 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M356.339 214.83 Q352.728 214.83 350.899 218.395 Q349.094 221.936 349.094 229.066 Q349.094 236.172 350.899 239.737 Q352.728 243.279 356.339 243.279 Q359.973 243.279 361.779 239.737 Q363.608 236.172 363.608 229.066 Q363.608 221.936 361.779 218.395 Q359.973 214.83 356.339 214.83 M356.339 211.126 Q362.149 211.126 365.205 215.733 Q368.284 220.316 368.284 229.066 Q368.284 237.793 365.205 242.399 Q362.149 246.983 356.339 246.983 Q350.529 246.983 347.45 242.399 Q344.395 237.793 344.395 229.066 Q344.395 220.316 347.45 215.733 Q350.529 211.126 356.339 211.126 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip522)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,229.031 4017.76,229.031 \"/>\n<polyline clip-path=\"url(#clip522)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.58 459.964,1248.04 460.533,1247.43 461.101,1246.74 461.669,1245.98 462.238,1245.14 462.806,1244.22 463.375,1243.21 463.943,1242.1 464.511,1239.87 465.08,1238.56 465.648,1237.14 466.216,1235.6 466.785,1233.94 467.353,1230.09 467.921,1227.11 468.49,1224.98 469.058,1222.71 469.626,1218.24 470.195,1215.64 470.763,1212.85 471.331,1209.87 471.9,1206.74 472.468,1203.41 473.036,1199.87 473.605,1196.17 474.173,1192.24 474.741,1188.08 475.31,1182.72 475.878,1178.07 476.446,1173.22 477.015,1168.15 477.583,1161.81 478.152,1156.29 478.72,1150.56 479.288,1144.6 479.857,1138.4 480.425,1130.98 480.993,1122.16 481.562,1114.11 482.13,1104.78 482.698,1096.29 483.267,1088.48 483.835,1079.4 484.403,1070.02 484.972,1061.56 485.54,1051.82 486.108,1043 486.677,1033.91 487.245,1024.72 487.813,1014.35 488.382,1002.82 488.95,990.256 489.518,980.794 490.087,971.187 490.655,960.501 491.224,948.673 491.792,938.97 492.36,928.194 492.929,916.251 493.497,904.371 494.065,894.535 494.634,883.625 495.202,870.625 495.77,860.675 496.339,849.782 496.907,837.89 497.475,827.038 498.044,814.19 498.612,804.579 499.18,794.877 499.749,783.105 500.317,771.469 500.885,762.104 501.454,748.625 502.022,738.364 502.59,726.144 503.159,716.198 503.727,706.309 504.295,696.415 504.864,686.746 505.432,678.123 506.001,668.454 506.569,658.001 507.137,649.637 507.706,638.501 508.274,629.641 508.842,621.819 509.411,614.022 509.979,604.34 510.547,593.821 511.116,586.686 511.684,577.544 512.252,567.426 512.821,558.742 513.389,549.157 513.957,540.902 514.526,533.692 515.094,525.567 515.662,519.679 516.231,512.709 516.799,504.015 517.367,498.377 517.936,490.787 518.504,483.431 519.072,475.291 519.641,469.502 520.209,465.718 520.778,460.976 521.346,457.467 521.914,450.88 522.483,446.325 523.051,440.838 523.619,437.859 524.188,432.538 524.756,428.673 525.324,420.561 525.893,418.915 526.461,412.99 527.029,407.447 527.598,403.968 528.166,399.594 528.734,393.257 529.303,389.313 529.871,385.286 530.439,380.458 531.008,377.764 531.576,374.121 532.144,371.363 532.713,367.763 533.281,364.309 533.85,361.278 534.418,355.951 534.986,352.845 535.555,346.844 536.123,345.166 536.691,344.319 537.26,340.52 537.828,334.841 538.396,334.44 538.965,334.964 539.533,334.423 540.101,333.804 540.67,332.127 541.238,328.299 541.806,327.751 542.375,325.056 542.943,320.346 543.511,314.897 544.08,311.764 544.648,311.749 545.216,308.662 545.785,305.585 546.353,303.531 546.921,303.086 547.49,303.41 548.058,302.489 548.627,300.65 549.195,300.888 549.763,299.948 550.332,296.962 550.9,294.977 551.468,294.295 552.037,293.5 552.605,292.554 553.173,289.799 553.742,287.335 554.31,286.771 554.878,285.225 555.447,284.955 556.015,283.387 556.583,283.056 557.152,281.686 557.72,276.101 558.288,273.826 558.857,273.976 559.425,271.803 559.993,272.819 560.562,273.833 561.13,273.719 561.698,272.554 562.267,272.528 562.835,272.299 563.404,272.08 563.972,270.638 564.54,272.355 565.109,274.926 565.677,273.327 566.245,270.725 566.814,270.446 567.382,269.138 567.95,269.029 568.519,268.608 569.087,266.236 569.655,267.071 570.224,266.425 570.792,264.862 571.36,264.688 571.929,263.47 572.497,262.263 573.065,262.157 573.634,260.024 574.202,256.912 574.77,254.913 575.339,252.249 575.907,252.7 576.476,253.963 577.044,256.134 577.612,255.175 578.181,256.208 578.749,256.33 579.317,254.219 579.886,256.489 580.454,256.24 581.022,255.385 581.591,256.279 582.159,254.828 582.727,251.424 583.296,251.597 583.864,250.629 584.432,251.739 585.001,251.957 585.569,253.19 586.137,255.322 586.706,255.159 587.274,253.866 587.842,250.344 588.411,247.417 588.979,246.823 589.547,241.916 590.116,241.46 590.684,241.138 591.253,239.606 591.821,240.26 592.389,238.748 592.958,238.59 593.526,236.301 594.094,237.24 594.663,237.171 595.231,237.988 595.799,239.56 596.368,240.17 596.936,238.552 597.504,238.105 598.073,239.752 598.641,241.51 599.209,241.104 599.778,241.557 600.346,245.097 600.914,241.297 601.483,241.842 602.051,240.18 602.619,240.636 603.188,241.104 603.756,239.674 604.325,241.612 604.893,243.192 605.461,245.724 606.03,247.866 606.598,246.825 607.166,246.881 607.735,245.568 608.303,245.584 608.871,244.482 609.44,245.62 610.008,245.614 610.576,245.791 611.145,244.645 611.713,243.661 612.281,242.834 612.85,244.024 613.418,244.112 613.986,244.051 614.555,242.982 615.123,246.226 615.691,245.099 616.26,244.012 616.828,242.915 617.396,243.105 617.965,242.215 618.533,239.96 619.102,240.125 619.67,236.958 620.238,237.525 620.807,236.884 621.375,236.369 621.943,235.895 622.512,235.194 623.08,232.361 623.648,232.961 624.217,234.526 624.785,234.101 625.353,235.595 625.922,236.172 626.49,237.596 627.058,234.881 627.627,235.427 628.195,232.852 628.763,232.83 629.332,232.478 629.9,234.093 630.468,235.566 631.037,238.058 631.605,239.217 632.173,239.677 632.742,237.581 633.31,237.84 633.879,238.216 634.447,239.415 635.015,238.604 635.584,239.472 636.152,238.691 636.72,238.922 637.289,239.998 637.857,240.988 638.425,240.082 638.994,239.022 639.562,238.191 640.13,237.22 640.699,237.624 641.267,236.712 641.835,237.967 642.404,239.142 642.972,238.058 643.54,239.195 644.109,239.139 644.677,238.172 645.245,239.393 645.814,236.507 646.382,232.535 646.951,231.001 647.519,231.608 648.087,232.147 648.656,232.598 649.224,235.33 649.792,236.52 650.361,237.601 650.929,236.563 651.497,237.756 652.066,238.91 652.634,238.965 653.202,237.954 653.771,237.885 654.339,238.106 654.907,238.387 655.476,238.329 656.044,237.368 656.612,236.47 657.181,238.703 657.749,237.393 658.317,237.385 658.886,236.468 659.454,235.459 660.022,235.409 660.591,237.804 661.159,237.901 661.728,236.916 662.296,236.947 662.864,235.866 663.433,237.027 664.001,237.93 664.569,236.755 665.138,237.598 665.706,236.553 666.274,234.713 666.843,234.93 667.411,235.975 667.979,235.02 668.548,235.181 669.116,235.26 669.684,234.376 670.253,233.492 670.821,234.754 671.389,235.806 671.958,233.57 672.526,235.757 673.094,237.833 673.663,235.516 674.231,236.534 674.799,235.433 675.368,233.321 675.936,233.515 676.505,234.562 677.073,235.642 677.641,236.575 678.21,235.327 678.778,234.276 679.346,234.407 679.915,231.334 680.483,233.802 681.051,232.958 681.62,233.93 682.188,234.011 682.756,235.2 683.325,236.213 683.893,236.106 684.461,237.007 685.03,236.736 685.598,237.289 686.166,235.068 686.735,233.129 687.303,234.16 687.871,235.234 688.44,234.213 689.008,235.249 689.577,235.159 690.145,236.09 690.713,236.844 691.282,236.408 691.85,236.137 692.418,236.912 692.987,235.61 693.555,233.431 694.123,233.559 694.692,233.553 695.26,230.458 695.828,230.638 696.397,232.75 696.965,230.818 697.533,233.185 698.102,229.069 698.67,230.642 699.238,232.889 699.807,229.592 700.375,233.172 700.943,231.024 701.512,232.528 702.08,231.523 702.648,230.629 703.217,232.777 703.785,231.54 704.354,233.643 704.922,235.735 705.49,236.687 706.059,235.254 706.627,231.856 707.195,230.819 707.764,231.039 708.332,229.219 708.9,230.587 709.469,225.726 710.037,227.441 710.605,227.805 711.174,230.139 711.742,230.543 712.31,230.665 712.879,233.937 713.447,232.68 714.015,233.518 714.584,232.492 715.152,232.328 715.72,233.225 716.289,233.023 716.857,232.954 717.425,232.852 717.994,232.033 718.562,231.798 719.131,233.033 719.699,231.859 720.267,230.959 720.836,228.992 721.404,230.16 721.972,230.481 722.541,230.483 723.109,229.438 723.677,229.55 724.246,229.564 724.814,229.823 725.382,232.029 725.951,234.113 726.519,236.258 727.087,234.862 727.656,235.762 728.224,238.671 728.792,235.836 729.361,236.765 729.929,234.356 730.497,233.011 731.066,233.678 731.634,235.598 732.203,236.314 732.771,234.987 733.339,235.589 733.908,235.308 734.476,232.958 735.044,230.75 735.613,229.526 736.181,228.749 736.749,228.831 737.318,228.849 737.886,226.688 738.454,226.023 739.023,229.352 739.591,230.553 740.159,230.645 740.728,230.323 741.296,231.456 741.864,232.444 742.433,229.223 743.001,229.24 743.569,229.353 744.138,229.417 744.706,228.775 745.274,230.041 745.843,228.879 746.411,231.119 746.98,232.215 747.548,232.024 748.116,233.014 748.685,231.903 749.253,228.825 749.821,230.009 750.39,231.069 750.958,230.244 751.526,230.408 752.095,227.418 752.663,227.817 753.231,227.021 753.8,227.431 754.368,226.839 754.936,226.053 755.505,227.344 756.073,226.505 756.641,227.952 757.21,229.161 757.778,227.498 758.346,228.672 758.915,228.994 759.483,228.007 760.052,228.458 760.62,226.603 761.188,228.203 761.757,227.717 762.325,228.246 762.893,227.232 763.462,223.482 764.03,222.212 764.598,223.149 765.167,225.881 765.735,229.655 766.303,227.732 766.872,226 767.44,229.475 768.008,229.876 768.577,229.083 769.145,229.54 769.713,230.931 770.282,229.18 770.85,232.553 771.418,233.713 771.987,231.558 772.555,231.821 773.123,232.923 773.692,232.204 774.26,233.398 774.829,232.33 775.397,234.571 775.965,234.331 776.534,234.114 777.102,231.861 777.67,232.901 778.239,231.712 778.807,230.778 779.375,231.999 779.944,231.949 780.512,232.081 781.08,231.248 781.649,231.258 782.217,233.336 782.785,233.372 783.354,231.272 783.922,230.148 784.49,228.208 785.059,227.627 785.627,228.897 786.195,231.203 786.764,231.259 787.332,234.171 787.9,233.944 788.469,236.889 789.037,238.498 789.606,239.171 790.174,238.831 790.742,240.393 791.311,239.76 791.879,237.87 792.447,236.312 793.016,236.832 793.584,237.358 794.152,235.019 794.721,234.84 795.289,233.53 795.857,233.251 796.426,233.148 796.994,233.023 797.562,232.893 798.131,233.694 798.699,233.315 799.267,233.154 799.836,234.068 800.404,234.761 800.972,233.632 801.541,234.252 802.109,231.974 802.678,231.726 803.246,234.545 803.814,234.092 804.383,230.806 804.951,228.685 805.519,229.744 806.088,228.494 806.656,227.342 807.224,227.466 807.793,226.445 808.361,226.526 808.929,225.671 809.498,227.07 810.066,227.062 810.634,229.099 811.203,228.089 811.771,224.112 812.339,224.614 812.908,224.064 813.476,222.276 814.044,221.468 814.613,221.895 815.181,220.344 815.749,221.164 816.318,221.714 816.886,223.437 817.455,223.885 818.023,221.279 818.591,221.017 819.16,220.72 819.728,222.107 820.296,221.623 820.865,221.263 821.433,222.773 822.001,224.39 822.57,226.081 823.138,226.658 823.706,224.93 824.275,225.537 824.843,224.1 825.411,227.811 825.98,229.171 826.548,232.647 827.116,231.528 827.685,231.541 828.253,231.723 828.821,229.623 829.39,227.677 829.958,225.941 830.526,226.308 831.095,228.789 831.663,230.21 832.232,230.351 832.8,232.603 833.368,233.648 833.937,233.611 834.505,236.494 835.073,241.057 835.642,241.247 836.21,237.44 836.778,236.861 837.347,235.619 837.915,236.195 838.483,237.719 839.052,238.215 839.62,237.668 840.188,237.037 840.757,236.798 841.325,235.238 841.893,234.563 842.462,233.233 843.03,232.832 843.598,234.642 844.167,233.11 844.735,231.788 845.304,232.69 845.872,232.283 846.44,234.061 847.009,235.779 847.577,237.503 848.145,237.793 848.714,236.192 849.282,236.793 849.85,235.376 850.419,235.811 850.987,235.393 851.555,236.987 852.124,236.304 852.692,234.789 853.26,234.297 853.829,231.192 854.397,230.076 854.965,226.788 855.534,226.022 856.102,226.129 856.67,227.217 857.239,227.385 857.807,227.184 858.375,226.344 858.944,226.44 859.512,225.547 860.081,225.697 860.649,221.721 861.217,224.282 861.786,224.543 862.354,227.014 862.922,229.116 863.491,230.14 864.059,230.002 864.627,230.981 865.196,229.758 865.764,229.833 866.332,230.97 866.901,228.74 867.469,228.725 868.037,230.685 868.606,230.532 869.174,229.467 869.742,227.36 870.311,228.48 870.879,226.556 871.447,228.026 872.016,230.014 872.584,231.159 873.152,229.082 873.721,228.955 874.289,228.128 874.858,228.16 875.426,228.389 875.994,228.454 876.563,228.828 877.131,228.025 877.699,228.23 878.268,227.278 878.836,226.205 879.404,225.308 879.973,226.591 880.541,225.854 881.109,226.177 881.678,229.399 882.246,228.497 882.814,227.812 883.383,227.168 883.951,227.329 884.519,228.471 885.088,227.377 885.656,225.496 886.224,225.576 886.793,225.916 887.361,225.126 887.93,224.578 888.498,226.05 889.066,227.432 889.635,226.864 890.203,224.881 890.771,228.488 891.34,227.716 891.908,229.049 892.476,227.173 893.045,227.228 893.613,225.537 894.181,225.985 894.75,226.393 895.318,228.722 895.886,228.956 896.455,228.196 897.023,228.434 897.591,227.497 898.16,229.886 898.728,232.019 899.296,229.73 899.865,227.908 900.433,228.003 901.001,228.258 901.57,228.461 902.138,228.621 902.707,230.682 903.275,229.667 903.843,230.749 904.412,231.774 904.98,231.843 905.548,233.054 906.117,233.976 906.685,232.476 907.253,230.267 907.822,230.335 908.39,231.487 908.958,230.401 909.527,229.29 910.095,229.311 910.663,230.091 911.232,231.1 911.8,232.074 912.368,231.992 912.937,229.711 913.505,227.748 914.073,228.86 914.642,227.723 915.21,228.533 915.779,228.438 916.347,229.541 916.915,230.635 917.484,230.532 918.052,230.496 918.62,229.364 919.189,229.413 919.757,229.531 920.325,231.798 920.894,230.884 921.462,231.904 922.03,231.883 922.599,231.889 923.167,232.868 923.735,231.477 924.304,230.208 924.872,229.15 925.44,228.032 926.009,226.303 926.577,225.539 927.145,227.084 927.714,225.299 928.282,224.512 928.85,224.943 929.419,226.383 929.987,223.376 930.556,224.987 931.124,225.516 931.692,225.686 932.261,227.068 932.829,227.401 933.397,227.514 933.966,225.906 934.534,229.25 935.102,231.521 935.671,232.592 936.239,231.478 936.807,232.602 937.376,234.598 937.944,233.177 938.512,234.021 939.081,234.645 939.649,233.329 940.217,233.169 940.786,232.982 941.354,232.912 941.922,231.679 942.491,229.622 943.059,229.584 943.627,230.686 944.196,230.73 944.764,232.653 945.333,234.424 945.901,233.142 946.469,232.717 947.038,231.41 947.606,233.336 948.174,233.006 948.743,229.794 949.311,229.779 949.879,230.877 950.448,232.126 951.016,233.047 951.584,231.892 952.153,231.689 952.721,234.621 953.289,237.46 953.858,239.089 954.426,238.291 954.994,239.748 955.563,237.898 956.131,238.077 956.699,239.616 957.268,238.743 957.836,237.845 958.405,238.205 958.973,237.621 959.541,233.984 960.11,234.54 960.678,232.851 961.246,231.505 961.815,231.023 962.383,229.775 962.951,230.641 963.52,231.447 964.088,231.157 964.656,228.914 965.225,228.86 965.793,229.747 966.361,228.608 966.93,230.69 967.498,230.317 968.066,227.951 968.635,228.777 969.203,228.589 969.771,224.528 970.34,225.706 970.908,225.964 971.476,224.914 972.045,226.993 972.613,224.892 973.182,222.97 973.75,222.19 974.318,220.761 974.887,224.37 975.455,224.538 976.023,228.83 976.592,230.859 977.16,229.392 977.728,229.07 978.297,231.174 978.865,230.649 979.433,231.732 980.002,230.407 980.57,231.031 981.138,231.823 981.707,230.505 982.275,232.392 982.843,233.126 983.412,232.701 983.98,233.338 984.548,232.018 985.117,229.624 985.685,230.421 986.253,231.369 986.822,232.397 987.39,232.293 987.959,230.875 988.527,230.665 989.095,230.377 989.664,229.156 990.232,228.116 990.8,227.827 991.369,227.959 991.937,224.738 992.505,224.065 993.074,224.498 993.642,222.734 994.21,222.99 994.779,222.232 995.347,223.574 995.915,222.859 996.484,222.299 997.052,224.585 997.62,225.89 998.189,227.069 998.757,227.035 999.325,227.012 999.894,229.068 1000.46,228.919 1001.03,228.089 1001.6,228.205 1002.17,225.275 1002.74,226.544 1003.3,223.688 1003.87,223.035 1004.44,224.358 1005.01,223.633 1005.58,227.421 1006.15,226.765 1006.71,226.926 1007.28,226.011 1007.85,226.181 1008.42,226.494 1008.99,226.688 1009.56,227.921 1010.12,225.924 1010.69,227.379 1011.26,229.586 1011.83,225.662 1012.4,227.908 1012.97,229.056 1013.53,229.058 1014.1,227.083 1014.67,229.28 1015.24,229.267 1015.81,227.022 1016.38,227.138 1016.94,228.465 1017.51,228.718 1018.08,227.696 1018.65,227.808 1019.22,230.004 1019.79,229.07 1020.35,230.066 1020.92,230.024 1021.49,228.993 1022.06,230.15 1022.63,231.404 1023.2,232.389 1023.76,232.064 1024.33,231.752 1024.9,231.571 1025.47,232.34 1026.04,232.194 1026.61,231.018 1027.17,228.827 1027.74,226.894 1028.31,227.081 1028.88,227.267 1029.45,227.484 1030.02,226.601 1030.58,226.817 1031.15,227.271 1031.72,225.335 1032.29,226.698 1032.86,229.112 1033.43,229.209 1033.99,229.149 1034.56,229.253 1035.13,229.098 1035.7,229.241 1036.27,229.281 1036.84,229.335 1037.4,231.348 1037.97,232.356 1038.54,230.051 1039.11,227.96 1039.68,227.046 1040.25,228.06 1040.81,229.411 1041.38,230.351 1041.95,230.221 1042.52,233.075 1043.09,232.873 1043.66,231.458 1044.22,230.152 1044.79,232.941 1045.36,231.697 1045.93,232.688 1046.5,231.528 1047.07,230.414 1047.63,231.332 1048.2,231.142 1048.77,229.78 1049.34,229.869 1049.91,230.839 1050.48,229.605 1051.05,230.594 1051.61,230.393 1052.18,231.349 1052.75,230.006 1053.32,229.975 1053.89,229.859 1054.46,229.872 1055.02,230.013 1055.59,230.868 1056.16,231.656 1056.73,230.113 1057.3,228.859 1057.87,228.959 1058.43,230.074 1059,230.974 1059.57,230.782 1060.14,228.607 1060.71,229.663 1061.28,230.587 1061.84,229.695 1062.41,228.701 1062.98,228.804 1063.55,228.958 1064.12,228.852 1064.69,226.772 1065.25,228.001 1065.82,228.045 1066.39,228.019 1066.96,229.116 1067.53,227.93 1068.1,225.91 1068.66,227.856 1069.23,226.955 1069.8,226.056 1070.37,226.363 1070.94,226.456 1071.51,223.584 1072.07,223.023 1072.64,224.291 1073.21,225.691 1073.78,225.875 1074.35,224.247 1074.92,222.706 1075.48,222.301 1076.05,221.021 1076.62,220.471 1077.19,224.227 1077.76,222.819 1078.33,224.23 1078.89,223.532 1079.46,224.1 1080.03,224.688 1080.6,225.308 1081.17,226.7 1081.74,227.057 1082.3,230.552 1082.87,229.594 1083.44,229.761 1084.01,228.959 1084.58,229.116 1085.15,229.008 1085.71,229.841 1086.28,227.813 1086.85,227.849 1087.42,226.19 1087.99,226.672 1088.56,222.835 1089.12,225.413 1089.69,226.881 1090.26,228.147 1090.83,229.54 1091.4,228.638 1091.97,228.851 1092.53,228.013 1093.1,230.339 1093.67,230.446 1094.24,232.506 1094.81,232.323 1095.38,232.024 1095.94,231.544 1096.51,231.564 1097.08,235.432 1097.65,234.762 1098.22,234.407 1098.79,232.745 1099.35,232.496 1099.92,232.421 1100.49,233.162 1101.06,233.987 1101.63,233.443 1102.2,231.118 1102.76,231.861 1103.33,232.793 1103.9,230.502 1104.47,232.424 1105.04,233.27 1105.61,231.913 1106.17,231.65 1106.74,233.609 1107.31,236.198 1107.88,234.659 1108.45,234.363 1109.02,234.048 1109.58,231.683 1110.15,232.572 1110.72,229.148 1111.29,226.977 1111.86,226.25 1112.43,227.511 1112.99,228.536 1113.56,227.364 1114.13,226.42 1114.7,226.671 1115.27,224.823 1115.84,226.285 1116.4,225.625 1116.97,226.94 1117.54,227.169 1118.11,226.294 1118.68,228.592 1119.25,230.541 1119.81,231.645 1120.38,232.797 1120.95,233.658 1121.52,235.305 1122.09,233.853 1122.66,233.564 1123.23,233.337 1123.79,233.853 1124.36,232.446 1124.93,230.945 1125.5,232.92 1126.07,232.75 1126.64,232.403 1127.2,231.217 1127.77,230.103 1128.34,227.946 1128.91,225.901 1129.48,229.069 1130.05,229.002 1130.61,228.82 1131.18,228.814 1131.75,228.739 1132.32,226.708 1132.89,225.125 1133.46,224.413 1134.02,224.732 1134.59,221.828 1135.16,221.665 1135.73,222.171 1136.3,222.578 1136.87,219.895 1137.43,220.629 1138,222.369 1138.57,223.04 1139.14,223.531 1139.71,225.047 1140.28,224.445 1140.84,225.957 1141.41,224.099 1141.98,226.461 1142.55,227.649 1143.12,227.68 1143.69,228.99 1144.25,229.983 1144.82,232.234 1145.39,232.146 1145.96,231.945 1146.53,233.885 1147.1,235.514 1147.66,236.016 1148.23,234.518 1148.8,234.031 1149.37,233.957 1149.94,231.937 1150.51,234.747 1151.07,235.423 1151.64,234.865 1152.21,232.622 1152.78,233.439 1153.35,232.159 1153.92,230.776 1154.48,231.372 1155.05,232.019 1155.62,230.662 1156.19,229.222 1156.76,231.013 1157.33,230.915 1157.89,230.729 1158.46,230.498 1159.03,229.238 1159.6,228.202 1160.17,227.409 1160.74,229.426 1161.3,231.335 1161.87,228.015 1162.44,229.307 1163.01,229.249 1163.58,230.343 1164.15,230.206 1164.71,224.993 1165.28,228.48 1165.85,227.381 1166.42,226.625 1166.99,225.595 1167.56,227.857 1168.12,227.847 1168.69,230.108 1169.26,230.962 1169.83,231.896 1170.4,231.93 1170.97,231.787 1171.53,232.741 1172.1,231.402 1172.67,231.259 1173.24,231.119 1173.81,233.144 1174.38,233.761 1174.94,230.143 1175.51,229.092 1176.08,229.015 1176.65,228.042 1177.22,228.072 1177.79,228.18 1178.35,230.156 1178.92,229.966 1179.49,230.028 1180.06,231.946 1180.63,233.781 1181.2,233.459 1181.76,232.986 1182.33,232.716 1182.9,234.377 1183.47,230.846 1184.04,230.866 1184.61,225.843 1185.17,228.095 1185.74,229.293 1186.31,229.298 1186.88,228.315 1187.45,229.393 1188.02,228.515 1188.58,228.714 1189.15,227.583 1189.72,228.804 1190.29,226.86 1190.86,227.286 1191.43,228.328 1192,229.508 1192.56,228.398 1193.13,228.445 1193.7,229.467 1194.27,228.426 1194.84,227.673 1195.41,229.653 1195.97,230.619 1196.54,232.415 1197.11,231.848 1197.68,231.618 1198.25,228.264 1198.82,228.388 1199.38,229.558 1199.95,228.48 1200.52,226.299 1201.09,225.806 1201.66,226.138 1202.23,226.435 1202.79,226.596 1203.36,227.749 1203.93,227.638 1204.5,227.693 1205.07,226.658 1205.64,226.659 1206.2,226.596 1206.77,228.722 1207.34,229.737 1207.91,230.612 1208.48,229.467 1209.05,229.455 1209.61,224.196 1210.18,223.387 1210.75,222.871 1211.32,226.515 1211.89,226.889 1212.46,227.121 1213.02,226.214 1213.59,225.161 1214.16,225.425 1214.73,225.737 1215.3,227.872 1215.87,226.07 1216.43,226.394 1217,227.626 1217.57,226.615 1218.14,226.531 1218.71,227.805 1219.28,227.806 1219.84,228.809 1220.41,229.861 1220.98,231.952 1221.55,231.91 1222.12,232.779 1222.69,231.501 1223.25,231.138 1223.82,232.232 1224.39,229.996 1224.96,230.796 1225.53,230.005 1226.1,229.968 1226.66,229.914 1227.23,230.125 1227.8,227.947 1228.37,226.923 1228.94,226.127 1229.51,226.378 1230.07,227.488 1230.64,228.704 1231.21,229.73 1231.78,228.433 1232.35,228.452 1232.92,225.27 1233.48,226.469 1234.05,225.812 1234.62,225.174 1235.19,226.52 1235.76,227.651 1236.33,228.742 1236.89,228.763 1237.46,230.021 1238.03,228.826 1238.6,228.72 1239.17,230.6 1239.74,229.496 1240.3,230.484 1240.87,230.411 1241.44,230.236 1242.01,230.033 1242.58,230.151 1243.15,230.114 1243.71,229.028 1244.28,229.131 1244.85,227.975 1245.42,227.998 1245.99,228.067 1246.56,228.122 1247.12,228.079 1247.69,227.061 1248.26,227.355 1248.83,228.514 1249.4,229.638 1249.97,229.61 1250.53,228.531 1251.1,231.466 1251.67,234.303 1252.24,233.876 1252.81,234.542 1253.38,231.111 1253.94,230.03 1254.51,228.685 1255.08,230.823 1255.65,233.707 1256.22,233.073 1256.79,233.054 1257.35,233.738 1257.92,233.359 1258.49,231.883 1259.06,232.724 1259.63,233.429 1260.2,232.92 1260.76,234.821 1261.33,234.304 1261.9,232.576 1262.47,234.335 1263.04,237.012 1263.61,235.188 1264.18,234.743 1264.74,232.113 1265.31,232.861 1265.88,230.402 1266.45,229.965 1267.02,229.703 1267.59,229.476 1268.15,230.239 1268.72,230.131 1269.29,229.928 1269.86,229.71 1270.43,226.579 1271,227.719 1271.56,224.496 1272.13,224.633 1272.7,225.084 1273.27,226.29 1273.84,226.163 1274.41,227.365 1274.97,228.287 1275.54,230.231 1276.11,231.3 1276.68,229.704 1277.25,230.46 1277.82,231.39 1278.38,229.136 1278.95,228.354 1279.52,227.334 1280.09,227.563 1280.66,228.68 1281.23,228.748 1281.79,228.672 1282.36,228.906 1282.93,228.745 1283.5,229.691 1284.07,228.452 1284.64,228.485 1285.2,226.311 1285.77,226.426 1286.34,226.488 1286.91,224.552 1287.48,224.884 1288.05,226.162 1288.61,224.4 1289.18,224.769 1289.75,225.077 1290.32,225.383 1290.89,225.755 1291.46,223.957 1292.02,224.282 1292.59,224.46 1293.16,225.899 1293.73,224.955 1294.3,226.51 1294.87,225.531 1295.43,225.971 1296,228.663 1296.57,226.812 1297.14,226.979 1297.71,224.168 1298.28,225.476 1298.84,224.773 1299.41,229.235 1299.98,227.307 1300.55,228.359 1301.12,228.556 1301.69,228.881 1302.25,227.905 1302.82,227.037 1303.39,227.351 1303.96,228.698 1304.53,228.772 1305.1,227.717 1305.66,230.017 1306.23,230.161 1306.8,231.131 1307.37,233.098 1307.94,232.788 1308.51,234.713 1309.07,234.242 1309.64,232.897 1310.21,231.762 1310.78,230.689 1311.35,231.833 1311.92,230.541 1312.48,230.583 1313.05,230.583 1313.62,229.379 1314.19,231.504 1314.76,230.276 1315.33,232.16 1315.89,231.852 1316.46,231.601 1317.03,231.578 1317.6,233.557 1318.17,233.2 1318.74,232.901 1319.3,230.723 1319.87,229.545 1320.44,231.597 1321.01,229.445 1321.58,230.463 1322.15,230.284 1322.71,229.951 1323.28,230.818 1323.85,230.378 1324.42,231.141 1324.99,230.929 1325.56,228.688 1326.12,228.601 1326.69,229.63 1327.26,227.503 1327.83,227.541 1328.4,229.66 1328.97,229.755 1329.53,230.853 1330.1,228.598 1330.67,229.748 1331.24,226.474 1331.81,227.555 1332.38,228.426 1332.94,230.337 1333.51,230.25 1334.08,229.133 1334.65,226.201 1335.22,228.302 1335.79,230.387 1336.36,231.401 1336.92,230.241 1337.49,230.046 1338.06,230.012 1338.63,228.543 1339.2,228.455 1339.77,227.356 1340.33,229.519 1340.9,229.714 1341.47,229.608 1342.04,226.261 1342.61,225.371 1343.18,224.618 1343.74,225.891 1344.31,223.906 1344.88,224.249 1345.45,226.841 1346.02,229.139 1346.59,229.033 1347.15,232.218 1347.72,232.14 1348.29,230.808 1348.86,230.694 1349.43,229.333 1350,229.309 1350.56,228.481 1351.13,228.279 1351.7,228.067 1352.27,228.941 1352.84,229.054 1353.41,228.014 1353.97,227.971 1354.54,227.919 1355.11,225.882 1355.68,226.078 1356.25,225.237 1356.82,226.342 1357.38,228.51 1357.95,231.548 1358.52,233.468 1359.09,229.031 1359.66,227.138 1360.23,227.293 1360.79,227.451 1361.36,227.628 1361.93,226.6 1362.5,226.632 1363.07,227.745 1363.64,226.828 1364.2,226.143 1364.77,226.687 1365.34,226.723 1365.91,228.028 1366.48,228.445 1367.05,227.242 1367.61,227.317 1368.18,230.374 1368.75,231.301 1369.32,228.949 1369.89,230.17 1370.46,228.201 1371.02,228.441 1371.59,229.532 1372.16,228.683 1372.73,226.593 1373.3,226.803 1373.87,228.95 1374.43,226.82 1375,227.139 1375.57,227.428 1376.14,228.59 1376.71,226.533 1377.28,226.738 1377.84,226.81 1378.41,228.021 1378.98,228.065 1379.55,228.273 1380.12,228.472 1380.69,228.483 1381.25,229.6 1381.82,229.467 1382.39,227.387 1382.96,227.219 1383.53,229.31 1384.1,228.565 1384.66,228.568 1385.23,225.468 1385.8,226.852 1386.37,228.019 1386.94,226.273 1387.51,226.456 1388.07,228.672 1388.64,228.848 1389.21,228.88 1389.78,228.034 1390.35,231.387 1390.92,230.194 1391.48,227.923 1392.05,226.913 1392.62,227.048 1393.19,227.271 1393.76,226.411 1394.33,227.907 1394.89,226.974 1395.46,226.233 1396.03,226.622 1396.6,227.714 1397.17,229.064 1397.74,229.269 1398.3,229.199 1398.87,230.411 1399.44,230.41 1400.01,230.592 1400.58,231.576 1401.15,231.283 1401.71,232.187 1402.28,231.874 1402.85,231.663 1403.42,230.625 1403.99,233.663 1404.56,233.52 1405.13,232.289 1405.69,231.983 1406.26,233.939 1406.83,235.859 1407.4,236.389 1407.97,238.073 1408.54,238.551 1409.1,239.065 1409.67,237.436 1410.24,237.907 1410.81,234.118 1411.38,232.528 1411.95,232.19 1412.51,232.899 1413.08,233.47 1413.65,232.99 1414.22,231.541 1414.79,232.324 1415.36,230.943 1415.92,227.659 1416.49,227.004 1417.06,224.016 1417.63,223.207 1418.2,222.59 1418.77,224.059 1419.33,226.431 1419.9,225.678 1420.47,226.979 1421.04,227.095 1421.61,227.125 1422.18,223.122 1422.74,222.53 1423.31,221.92 1423.88,221.355 1424.45,222.027 1425.02,222.489 1425.59,220.909 1426.15,221.604 1426.72,222.153 1427.29,224.903 1427.86,226.289 1428.43,225.746 1429,226.144 1429.56,226.428 1430.13,226.604 1430.7,228.054 1431.27,229.236 1431.84,229.052 1432.41,230.061 1432.97,228.93 1433.54,228.84 1434.11,226.741 1434.68,228.016 1435.25,227.237 1435.82,227.296 1436.38,231.481 1436.95,231.405 1437.52,232.448 1438.09,231.233 1438.66,229.959 1439.23,229.037 1439.79,229.952 1440.36,228.95 1440.93,226.811 1441.5,228.89 1442.07,225.687 1442.64,226.102 1443.2,226.095 1443.77,226.232 1444.34,226.516 1444.91,224.62 1445.48,223.954 1446.05,225.514 1446.61,225.926 1447.18,226.377 1447.75,227.76 1448.32,228.524 1448.89,227.43 1449.46,228.597 1450.02,231.724 1450.59,231.61 1451.16,233.79 1451.73,233.525 1452.3,235.684 1452.87,237.471 1453.43,235.707 1454,235.466 1454.57,235.283 1455.14,234.767 1455.71,234.432 1456.28,231.061 1456.84,231.964 1457.41,233.906 1457.98,231.569 1458.55,232.344 1459.12,232.152 1459.69,231.86 1460.25,231.677 1460.82,231.605 1461.39,228.562 1461.96,230.543 1462.53,227.265 1463.1,227.173 1463.66,227.624 1464.23,228.933 1464.8,227.864 1465.37,226.863 1465.94,227.259 1466.51,227.471 1467.07,228.853 1467.64,227.974 1468.21,229.07 1468.78,228.961 1469.35,230.015 1469.92,229.925 1470.48,228.683 1471.05,228.623 1471.62,229.455 1472.19,228.496 1472.76,227.569 1473.33,225.73 1473.89,226.203 1474.46,227.496 1475.03,228.609 1475.6,227.553 1476.17,228.766 1476.74,227.79 1477.31,226.787 1477.87,227.869 1478.44,230.002 1479.01,230.957 1479.58,229.69 1480.15,229.607 1480.72,230.728 1481.28,232.568 1481.85,232.404 1482.42,231.395 1482.99,231.148 1483.56,229.833 1484.13,230.587 1484.69,230.409 1485.26,232.338 1485.83,230.121 1486.4,232.268 1486.97,230.974 1487.54,229.777 1488.1,229.651 1488.67,228.834 1489.24,228.963 1489.81,228.2 1490.38,231.473 1490.95,231.113 1491.51,232.251 1492.08,229.898 1492.65,231.892 1493.22,231.706 1493.79,232.431 1494.36,232.031 1494.92,232.854 1495.49,233.585 1496.06,233.31 1496.63,232.823 1497.2,231.619 1497.77,230.39 1498.33,232.259 1498.9,231.906 1499.47,233.735 1500.04,233.363 1500.61,231.898 1501.18,232.686 1501.74,231.181 1502.31,231.795 1502.88,232.482 1503.45,231.038 1504.02,230.819 1504.59,233.766 1505.15,231.395 1505.72,229.099 1506.29,228.976 1506.86,230.987 1507.43,228.486 1508,228.303 1508.56,227.155 1509.13,226.989 1509.7,227.2 1510.27,228.408 1510.84,227.514 1511.41,227.715 1511.97,228.91 1512.54,228.529 1513.11,229.517 1513.68,229.4 1514.25,228.577 1514.82,227.386 1515.38,228.687 1515.95,225.577 1516.52,227.851 1517.09,227.917 1517.66,225.9 1518.23,227.042 1518.79,225.211 1519.36,224.152 1519.93,225.148 1520.5,224.332 1521.07,224.672 1521.64,226.048 1522.2,227.277 1522.77,225.239 1523.34,228.397 1523.91,227.466 1524.48,227.594 1525.05,226.526 1525.61,224.779 1526.18,228.119 1526.75,229.268 1527.32,227.29 1527.89,230.561 1528.46,230.42 1529.02,229.162 1529.59,228.248 1530.16,230.179 1530.73,231.201 1531.3,231.11 1531.87,231.859 1532.43,230.545 1533,230.489 1533.57,231.441 1534.14,231.136 1534.71,230.927 1535.28,230.724 1535.84,230.543 1536.41,232.191 1536.98,231.79 1537.55,233.58 1538.12,234.271 1538.69,234.798 1539.25,234.301 1539.82,234.045 1540.39,233.746 1540.96,234.372 1541.53,232.903 1542.1,232.327 1542.66,233.077 1543.23,232.575 1543.8,233.235 1544.37,232.804 1544.94,230.16 1545.51,232.05 1546.08,232.677 1546.64,233.201 1547.21,232.732 1547.78,232.279 1548.35,229.783 1548.92,229.471 1549.49,230.431 1550.05,227.946 1550.62,227.007 1551.19,229.213 1551.76,228.092 1552.33,227.895 1552.9,225.713 1553.46,227.871 1554.03,227.971 1554.6,230.084 1555.17,228.692 1555.74,229.667 1556.31,229.636 1556.87,226.571 1557.44,226.612 1558.01,227.739 1558.58,228.701 1559.15,229.53 1559.72,228.336 1560.28,230.281 1560.85,229.057 1561.42,228.556 1561.99,227.33 1562.56,227.221 1563.13,227.381 1563.69,226.446 1564.26,224.441 1564.83,225.61 1565.4,225.848 1565.97,226.187 1566.54,225.343 1567.1,224.396 1567.67,224.706 1568.24,224.865 1568.81,225.119 1569.38,224.38 1569.95,224.742 1570.51,223.058 1571.08,222.347 1571.65,223.662 1572.22,223.943 1572.79,224.341 1573.36,225.782 1573.92,226.064 1574.49,224.066 1575.06,226.471 1575.63,227.689 1576.2,227.606 1576.77,227.718 1577.33,227.674 1577.9,223.653 1578.47,224.979 1579.04,224.163 1579.61,223.507 1580.18,222.938 1580.74,221.694 1581.31,222.163 1581.88,222.594 1582.45,225.089 1583.02,225.348 1583.59,225.73 1584.15,223.907 1584.72,224.294 1585.29,227.613 1585.86,228.564 1586.43,227.704 1587,225.729 1587.56,225.128 1588.13,223.537 1588.7,224.131 1589.27,225.754 1589.84,226.214 1590.41,226.443 1590.97,227.91 1591.54,227.955 1592.11,227.104 1592.68,229.243 1593.25,230.424 1593.82,231.49 1594.38,231.555 1594.95,230.423 1595.52,230.324 1596.09,229.295 1596.66,231.65 1597.23,230.553 1597.79,229.379 1598.36,228.466 1598.93,226.587 1599.5,227.719 1600.07,228.034 1600.64,228.18 1601.2,229.555 1601.77,229.896 1602.34,227.625 1602.91,229.019 1603.48,228.043 1604.05,227.11 1604.61,228.535 1605.18,227.659 1605.75,225.882 1606.32,226.135 1606.89,226.656 1607.46,226.931 1608.02,224.055 1608.59,226.505 1609.16,226.953 1609.73,226.18 1610.3,227.289 1610.87,230.453 1611.43,229.36 1612,227.336 1612.57,227.469 1613.14,226.65 1613.71,227.18 1614.28,225.522 1614.84,224.883 1615.41,224.137 1615.98,224.754 1616.55,224.141 1617.12,222.623 1617.69,222.161 1618.26,224.63 1618.82,225.984 1619.39,225.493 1619.96,226.914 1620.53,229.318 1621.1,229.342 1621.67,229.541 1622.23,230.786 1622.8,231.004 1623.37,231.007 1623.94,230.924 1624.51,231.89 1625.08,230.61 1625.64,230.533 1626.21,230.63 1626.78,231.73 1627.35,231.711 1627.92,231.511 1628.49,229.474 1629.05,229.725 1629.62,228.713 1630.19,227.803 1630.76,227.034 1631.33,226.347 1631.9,228.747 1632.46,227.043 1633.03,225.491 1633.6,228.952 1634.17,229.168 1634.74,227.335 1635.31,226.528 1635.87,229.079 1636.44,230.48 1637.01,232.677 1637.58,232.799 1638.15,232.866 1638.72,232.848 1639.28,231.741 1639.85,231.685 1640.42,230.459 1640.99,230.409 1641.56,229.56 1642.13,232.788 1642.69,233.813 1643.26,232.649 1643.83,232.716 1644.4,232.373 1644.97,232.362 1645.54,230.278 1646.1,230.276 1646.67,229.343 1647.24,227.317 1647.81,228.68 1648.38,229.827 1648.95,229.89 1649.51,233.062 1650.08,232.716 1650.65,234.424 1651.22,233.235 1651.79,234.178 1652.36,231.809 1652.92,232.804 1653.49,234.577 1654.06,233.107 1654.63,237.226 1655.2,234.959 1655.77,234.61 1656.33,233.216 1656.9,234.19 1657.47,233.751 1658.04,233.365 1658.61,233.141 1659.18,235.082 1659.74,233.615 1660.31,232.476 1660.88,231.368 1661.45,231.051 1662.02,232.945 1662.59,232.499 1663.15,233.995 1663.72,234.632 1664.29,234.187 1664.86,233.782 1665.43,233.554 1666,234.09 1666.56,232.668 1667.13,231.253 1667.7,230.96 1668.27,231.751 1668.84,231.333 1669.41,231.225 1669.97,231.021 1670.54,229.703 1671.11,229.624 1671.68,230.457 1672.25,227.951 1672.82,228.074 1673.38,228.136 1673.95,227.263 1674.52,226.194 1675.09,225.467 1675.66,226.796 1676.23,229.905 1676.79,231.84 1677.36,232.646 1677.93,231.297 1678.5,230.922 1679.07,230.852 1679.64,231.719 1680.2,231.288 1680.77,232.043 1681.34,230.83 1681.91,231.827 1682.48,230.469 1683.05,229.288 1683.61,228.202 1684.18,228.329 1684.75,229.294 1685.32,230.052 1685.89,229.849 1686.46,231.863 1687.02,231.641 1687.59,233.336 1688.16,230.888 1688.73,231.34 1689.3,229.975 1689.87,226.806 1690.44,226.162 1691,225.007 1691.57,223.151 1692.14,221.337 1692.71,222.666 1693.28,221.868 1693.85,224.107 1694.41,224.496 1694.98,227.715 1695.55,227.717 1696.12,226.833 1696.69,227.013 1697.26,226.185 1697.82,224.446 1698.39,225.82 1698.96,226.109 1699.53,227.396 1700.1,227.516 1700.67,227.525 1701.23,227.603 1701.8,227.421 1702.37,226.457 1702.94,225.401 1703.51,224.609 1704.08,225.969 1704.64,225.061 1705.21,225.125 1705.78,225.464 1706.35,225.558 1706.92,226.701 1707.49,226.075 1708.05,230.505 1708.62,228.341 1709.19,231.42 1709.76,234.355 1710.33,233.912 1710.9,234.489 1711.46,232.998 1712.03,233.648 1712.6,235.309 1713.17,234.808 1713.74,234.394 1714.31,231.036 1714.87,229.884 1715.44,232.918 1716.01,233.807 1716.58,234.325 1717.15,233.884 1717.72,233.523 1718.28,233.102 1718.85,231.461 1719.42,231.329 1719.99,232.156 1720.56,228.737 1721.13,228.811 1721.69,228.884 1722.26,230.63 1722.83,229.392 1723.4,228.236 1723.97,227.25 1724.54,229.629 1725.1,229.478 1725.67,230.329 1726.24,228.156 1726.81,228.204 1727.38,229.398 1727.95,229.305 1728.51,225.951 1729.08,226.123 1729.65,227.302 1730.22,227.269 1730.79,228.37 1731.36,228.368 1731.92,230.598 1732.49,231.475 1733.06,232.291 1733.63,232.917 1734.2,232.518 1734.77,233.098 1735.33,231.761 1735.9,230.455 1736.47,231.269 1737.04,231.056 1737.61,231.853 1738.18,230.42 1738.74,229.313 1739.31,231.331 1739.88,230.09 1740.45,225.699 1741.02,225.866 1741.59,223.768 1742.15,225.292 1742.72,225.266 1743.29,226.507 1743.86,224.48 1744.43,224.703 1745,226.024 1745.56,225.173 1746.13,226.357 1746.7,226.421 1747.27,225.36 1747.84,224.664 1748.41,225.84 1748.97,226.079 1749.54,226.194 1750.11,226.114 1750.68,227.212 1751.25,225.239 1751.82,226.67 1752.38,226.584 1752.95,227.833 1753.52,227.842 1754.09,227.795 1754.66,228.946 1755.23,229.889 1755.79,227.607 1756.36,228.697 1756.93,229.7 1757.5,229.72 1758.07,228.546 1758.64,228.64 1759.21,229.914 1759.77,229.859 1760.34,229.758 1760.91,229.884 1761.48,227.604 1762.05,228.746 1762.62,227.856 1763.18,226.804 1763.75,227.201 1764.32,226.239 1764.89,229.463 1765.46,229.584 1766.03,229.529 1766.59,230.312 1767.16,230.035 1767.73,228 1768.3,227.045 1768.87,227.145 1769.44,226.204 1770,225.344 1770.57,225.923 1771.14,226.08 1771.71,227.4 1772.28,229.458 1772.85,230.674 1773.41,228.529 1773.98,229.679 1774.55,229.654 1775.12,229.698 1775.69,229.824 1776.26,229.887 1776.82,231.898 1777.39,231.651 1777.96,232.671 1778.53,229.179 1779.1,231.07 1779.67,230.872 1780.23,231.726 1780.8,229.359 1781.37,230.18 1781.94,229.102 1782.51,227.383 1783.08,227.617 1783.64,227.941 1784.21,229.206 1784.78,231.282 1785.35,227.966 1785.92,225.862 1786.49,227.151 1787.05,226.64 1787.62,227.818 1788.19,227.097 1788.76,228.167 1789.33,224.989 1789.9,224.405 1790.46,222.645 1791.03,221.867 1791.6,224.468 1792.17,226.655 1792.74,227.757 1793.31,228.928 1793.87,229.007 1794.44,231.141 1795.01,229.189 1795.58,229.307 1796.15,228.14 1796.72,229.201 1797.28,232.269 1797.85,233.241 1798.42,234.152 1798.99,232.726 1799.56,232.328 1800.13,232.128 1800.69,229.681 1801.26,228.885 1801.83,228.71 1802.4,229.041 1802.97,229.081 1803.54,230.253 1804.1,229.182 1804.67,231.217 1805.24,230.052 1805.81,230.925 1806.38,228.938 1806.95,229.871 1807.51,227.735 1808.08,228.813 1808.65,228.768 1809.22,232.002 1809.79,229.791 1810.36,231.03 1810.92,229.745 1811.49,229.785 1812.06,229.72 1812.63,229.479 1813.2,229.229 1813.77,228.188 1814.33,230.211 1814.9,229.943 1815.47,227.904 1816.04,227.887 1816.61,229.856 1817.18,227.629 1817.74,227.787 1818.31,226.894 1818.88,224.793 1819.45,225.901 1820.02,224.829 1820.59,228.258 1821.15,227.154 1821.72,226.4 1822.29,226.881 1822.86,227.119 1823.43,228.141 1824,229.194 1824.56,230.252 1825.13,230.304 1825.7,227.973 1826.27,229.181 1826.84,231.271 1827.41,232.176 1827.97,230.846 1828.54,231.683 1829.11,231.842 1829.68,230.481 1830.25,230.573 1830.82,228.184 1831.39,228.329 1831.95,229.216 1832.52,228.436 1833.09,227.445 1833.66,228.637 1834.23,227.584 1834.8,228.64 1835.36,229.718 1835.93,228.777 1836.5,228.783 1837.07,231.13 1837.64,231.829 1838.21,230.571 1838.77,228.506 1839.34,228.732 1839.91,228.936 1840.48,229.816 1841.05,230.774 1841.62,230.581 1842.18,230.595 1842.75,232.477 1843.32,232.263 1843.89,231.936 1844.46,230.819 1845.03,228.755 1845.59,229.87 1846.16,229.931 1846.73,227.802 1847.3,229.759 1847.87,227.634 1848.44,227.769 1849,227.874 1849.57,230.13 1850.14,230.956 1850.71,230.747 1851.28,231.698 1851.85,234.433 1852.41,233.025 1852.98,233.712 1853.55,232.306 1854.12,232.2 1854.69,230.895 1855.26,230.717 1855.82,231.519 1856.39,230.197 1856.96,230.022 1857.53,228.998 1858.1,228.02 1858.67,227.024 1859.23,226.196 1859.8,226.397 1860.37,226.446 1860.94,224.497 1861.51,224.765 1862.08,225.269 1862.64,225.577 1863.21,227.839 1863.78,225.804 1864.35,228.038 1864.92,227.098 1865.49,225.005 1866.05,225.33 1866.62,226.551 1867.19,227.842 1867.76,226.953 1868.33,227.994 1868.9,229.14 1869.46,229.048 1870.03,227.041 1870.6,226.162 1871.17,224.45 1871.74,223.755 1872.31,224.314 1872.87,222.894 1873.44,221.325 1874.01,222.875 1874.58,223.354 1875.15,224.984 1875.72,227.332 1876.28,227.51 1876.85,231.835 1877.42,232.845 1877.99,232.773 1878.56,232.843 1879.13,232.529 1879.69,230.447 1880.26,231.517 1880.83,232.479 1881.4,233.185 1881.97,235.057 1882.54,236.711 1883.1,236.224 1883.67,235.566 1884.24,235.185 1884.81,235.661 1885.38,235.281 1885.95,234.853 1886.51,231.696 1887.08,229.506 1887.65,228.513 1888.22,229.278 1888.79,227.255 1889.36,224.311 1889.92,225.776 1890.49,226.983 1891.06,227.156 1891.63,228.269 1892.2,228.25 1892.77,228.375 1893.33,227.322 1893.9,227.457 1894.47,227.529 1895.04,228.551 1895.61,228.643 1896.18,226.508 1896.74,228.915 1897.31,228.051 1897.88,228.127 1898.45,227.051 1899.02,224.094 1899.59,225.588 1900.16,226.64 1900.72,226.978 1901.29,228.165 1901.86,228.104 1902.43,227.236 1903,226.463 1903.57,227.846 1904.13,227.891 1904.7,228.026 1905.27,227.141 1905.84,226.508 1906.41,229.944 1906.98,229.921 1907.54,229.861 1908.11,231.014 1908.68,231.908 1909.25,230.699 1909.82,228.685 1910.39,230.761 1910.95,227.673 1911.52,228.602 1912.09,229.674 1912.66,227.772 1913.23,227.855 1913.8,228.93 1914.36,225.804 1914.93,227.899 1915.5,230.375 1916.07,230.09 1916.64,230.091 1917.21,227.013 1917.77,227.268 1918.34,228.511 1918.91,228.612 1919.48,230.582 1920.05,228.408 1920.62,227.721 1921.18,228.739 1921.75,229.96 1922.32,229.073 1922.89,229.301 1923.46,231.392 1924.03,233.259 1924.59,233.926 1925.16,234.544 1925.73,234.175 1926.3,232.79 1926.87,231.405 1927.44,229.079 1928,231.187 1928.57,231.089 1929.14,230.106 1929.71,230.065 1930.28,228.07 1930.85,228.129 1931.41,230.275 1931.98,231.08 1932.55,231.949 1933.12,230.755 1933.69,230.844 1934.26,229.728 1934.82,230.815 1935.39,228.816 1935.96,227.674 1936.53,230.625 1937.1,229.216 1937.67,229.986 1938.23,227.522 1938.8,228.778 1939.37,230.968 1939.94,226.716 1940.51,226.647 1941.08,227.899 1941.64,229.158 1942.21,231.315 1942.78,231.135 1943.35,231.865 1943.92,230.522 1944.49,231.4 1945.05,232.185 1945.62,233.881 1946.19,234.453 1946.76,233.972 1947.33,234.517 1947.9,233.973 1948.46,232.627 1949.03,232.316 1949.6,233.081 1950.17,231.55 1950.74,231.447 1951.31,231.223 1951.87,230.167 1952.44,227.83 1953.01,226.661 1953.58,226.751 1954.15,225.56 1954.72,225.695 1955.28,227.882 1955.85,228.819 1956.42,227.704 1956.99,226.893 1957.56,227.078 1958.13,226.166 1958.69,226.394 1959.26,230.717 1959.83,229.497 1960.4,232.628 1960.97,232.237 1961.54,232.746 1962.1,230.41 1962.67,231.207 1963.24,230.992 1963.81,230.507 1964.38,231.328 1964.95,230.073 1965.51,226.984 1966.08,229.105 1966.65,228.932 1967.22,229.938 1967.79,230.932 1968.36,229.723 1968.92,229.685 1969.49,229.396 1970.06,229.23 1970.63,228.918 1971.2,228.818 1971.77,228.469 1972.34,228.395 1972.9,229.294 1973.47,229.277 1974.04,230.128 1974.61,230.042 1975.18,229.752 1975.75,228.688 1976.31,229.706 1976.88,228.331 1977.45,229.361 1978.02,227.301 1978.59,225.336 1979.16,223.371 1979.72,221.751 1980.29,221.213 1980.86,224.533 1981.43,225.77 1982,226.131 1982.57,226.321 1983.13,226.66 1983.7,225.703 1984.27,224.706 1984.84,223.829 1985.41,226.118 1985.98,226.347 1986.54,228.575 1987.11,228.396 1987.68,228.108 1988.25,226.206 1988.82,226.324 1989.39,225.645 1989.95,224.854 1990.52,225.081 1991.09,225.27 1991.66,225.599 1992.23,223.823 1992.8,226.001 1993.36,225.218 1993.93,227.674 1994.5,227.566 1995.07,227.607 1995.64,229.7 1996.21,228.663 1996.77,226.544 1997.34,229.075 1997.91,229.103 1998.48,229.257 1999.05,231.195 1999.62,231.184 2000.18,230.13 2000.75,229.852 2001.32,231.574 2001.89,231.372 2002.46,231.239 2003.03,230.082 2003.59,226.279 2004.16,226.572 2004.73,229.779 2005.3,230.72 2005.87,232.556 2006.44,234.251 2007,234.888 2007.57,235.399 2008.14,234.926 2008.71,232.446 2009.28,230.957 2009.85,229.86 2010.41,229.511 2010.98,230.682 2011.55,229.552 2012.12,230.569 2012.69,231.448 2013.26,231.249 2013.82,230.009 2014.39,228.701 2014.96,227.633 2015.53,229.666 2016.1,228.608 2016.67,225.652 2017.23,223.682 2017.8,223.028 2018.37,223.554 2018.94,226.232 2019.51,225.568 2020.08,225.911 2020.64,225.398 2021.21,226.667 2021.78,225.799 2022.35,227.053 2022.92,226.202 2023.49,226.516 2024.05,226.537 2024.62,227.912 2025.19,227.971 2025.76,230.207 2026.33,231.189 2026.9,228.982 2027.46,229.018 2028.03,228.023 2028.6,226.07 2029.17,226.233 2029.74,224.301 2030.31,224.471 2030.87,222.618 2031.44,224.118 2032.01,222.38 2032.58,221.908 2033.15,222.476 2033.72,221.929 2034.28,223.601 2034.85,224.121 2035.42,224.513 2035.99,225.953 2036.56,227.54 2037.13,227.797 2037.69,227.863 2038.26,227.067 2038.83,227.3 2039.4,227.688 2039.97,229.792 2040.54,228.736 2041.11,227.021 2041.67,230.459 2042.24,230.481 2042.81,228.25 2043.38,228.268 2043.95,229.384 2044.52,229.472 2045.08,229.434 2045.65,232.517 2046.22,232.356 2046.79,230.29 2047.36,228.373 2047.93,227.722 2048.49,226.773 2049.06,228.033 2049.63,228.058 2050.2,230.242 2050.77,230.189 2051.34,227.337 2051.9,227.854 2052.47,226.991 2053.04,227.472 2053.61,230.785 2054.18,232.937 2054.75,231.609 2055.31,231.636 2055.88,231.559 2056.45,233.536 2057.02,231.297 2057.59,230.345 2058.16,231.371 2058.72,230.304 2059.29,229.125 2059.86,228.163 2060.43,228.42 2061,228.658 2061.57,228.698 2062.13,230.925 2062.7,230.683 2063.27,230.635 2063.84,231.685 2064.41,233.607 2064.98,232.358 2065.54,233.172 2066.11,231.901 2066.68,234.119 2067.25,235.895 2067.82,235.545 2068.39,238.2 2068.95,237.653 2069.52,236.12 2070.09,235.376 2070.66,235.927 2071.23,237.358 2071.8,233.794 2072.36,232.594 2072.93,232.387 2073.5,232.158 2074.07,234.012 2074.64,234.424 2075.21,235.3 2075.77,236.026 2076.34,236.358 2076.91,234.699 2077.48,233.183 2078.05,232.605 2078.62,233.161 2079.18,232.722 2079.75,234.269 2080.32,232.702 2080.89,231.322 2081.46,231.808 2082.03,233.319 2082.59,231.878 2083.16,231.675 2083.73,230.257 2084.3,227.189 2084.87,229.131 2085.44,229.25 2086,225.939 2086.57,228.227 2087.14,228.108 2087.71,225.939 2088.28,226.271 2088.85,226.438 2089.41,225.483 2089.98,222.533 2090.55,223.058 2091.12,224.75 2091.69,227.07 2092.26,228.281 2092.82,227.091 2093.39,227.194 2093.96,226.12 2094.53,227.454 2095.1,227.629 2095.67,228.981 2096.23,228.809 2096.8,229.733 2097.37,229.496 2097.94,230.798 2098.51,231.89 2099.08,228.45 2099.64,227.522 2100.21,227.643 2100.78,226.507 2101.35,226.718 2101.92,228.971 2102.49,228.962 2103.05,230.814 2103.62,228.517 2104.19,231.483 2104.76,230.146 2105.33,230.02 2105.9,229.764 2106.46,229.913 2107.03,227.619 2107.6,227.927 2108.17,228.829 2108.74,229.874 2109.31,231.787 2109.87,231.43 2110.44,230.229 2111.01,228.955 2111.58,229.154 2112.15,226.897 2112.72,226.961 2113.29,227.906 2113.85,226.787 2114.42,224.636 2114.99,224.917 2115.56,223.189 2116.13,222.433 2116.7,222.79 2117.26,222.173 2117.83,222.615 2118.4,221.982 2118.97,221.351 2119.54,224.11 2120.11,224.447 2120.67,224.944 2121.24,225.222 2121.81,226.65 2122.38,225.965 2122.95,225.1 2123.52,225.45 2124.08,224.708 2124.65,225.058 2125.22,226.399 2125.79,226.505 2126.36,225.618 2126.93,225.114 2127.49,225.582 2128.06,225.714 2128.63,230.172 2129.2,230.126 2129.77,229.899 2130.34,229.875 2130.9,232.946 2131.47,235.77 2132.04,236.476 2132.61,236.189 2133.18,235.737 2133.75,236.275 2134.31,234.853 2134.88,233.418 2135.45,232.166 2136.02,231.822 2136.59,232.612 2137.16,231.056 2137.72,230.605 2138.29,232.679 2138.86,233.393 2139.43,232.026 2140,231.646 2140.57,230.472 2141.13,230.194 2141.7,228.989 2142.27,231.256 2142.84,232.021 2143.41,233.953 2143.98,234.585 2144.54,233.056 2145.11,233.814 2145.68,233.404 2146.25,229.032 2146.82,224.997 2147.39,224.125 2147.95,224.358 2148.52,224.537 2149.09,224.88 2149.66,227.248 2150.23,227.408 2150.8,226.226 2151.36,226.686 2151.93,227.923 2152.5,226.93 2153.07,225.782 2153.64,225.02 2154.21,228.399 2154.77,228.458 2155.34,228.559 2155.91,228.579 2156.48,228.41 2157.05,228.429 2157.62,229.609 2158.18,228.513 2158.75,227.379 2159.32,224.203 2159.89,224.451 \"/>\n<path clip-path=\"url(#clip520)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip520)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip520)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip520)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip520)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip520)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.031 ¬± 0.02\n  with uncertainty of ¬± 0.0017895623168397525\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.0138 ¬± (0.00259992, 0.00247828) (MC)\n  95% confidence interval: [-4.01872, -4.00882]) (MC)\n  linear error propagation: -4.01386 ¬± 0.00252763\n  |Œ¥_y| = |0.00162363| (‚â§ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.0138040716307675, val_l = 0.0049112996517655105, val_u = 0.004981425592845312)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip550\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip550)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip551\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip550)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip552\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1152.25 2211.02,1152.25 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1009.76 2211.02,1009.76 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,867.26 2211.02,867.26 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,724.765 2211.02,724.765 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,582.269 2211.02,582.269 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,439.774 2211.02,439.774 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,297.278 2211.02,297.278 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1152.25 365.751,1152.25 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1009.76 365.751,1009.76 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,867.26 365.751,867.26 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,724.765 365.751,724.765 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,582.269 365.751,582.269 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,439.774 365.751,439.774 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,297.278 365.751,297.278 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M298.909 1138.05 Q295.298 1138.05 293.469 1141.61 Q291.664 1145.16 291.664 1152.29 Q291.664 1159.39 293.469 1162.96 Q295.298 1166.5 298.909 1166.5 Q302.543 1166.5 304.349 1162.96 Q306.177 1159.39 306.177 1152.29 Q306.177 1145.16 304.349 1141.61 Q302.543 1138.05 298.909 1138.05 M298.909 1134.35 Q304.719 1134.35 307.775 1138.95 Q310.853 1143.54 310.853 1152.29 Q310.853 1161.01 307.775 1165.62 Q304.719 1170.2 298.909 1170.2 Q293.099 1170.2 290.02 1165.62 Q286.964 1161.01 286.964 1152.29 Q286.964 1143.54 290.02 1138.95 Q293.099 1134.35 298.909 1134.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M259.557 1023.1 L267.196 1023.1 L267.196 996.735 L258.886 998.401 L258.886 994.142 L267.15 992.475 L271.826 992.475 L271.826 1023.1 L279.465 1023.1 L279.465 1027.04 L259.557 1027.04 L259.557 1023.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M298.909 995.554 Q295.298 995.554 293.469 999.119 Q291.664 1002.66 291.664 1009.79 Q291.664 1016.9 293.469 1020.46 Q295.298 1024 298.909 1024 Q302.543 1024 304.349 1020.46 Q306.177 1016.9 306.177 1009.79 Q306.177 1002.66 304.349 999.119 Q302.543 995.554 298.909 995.554 M298.909 991.85 Q304.719 991.85 307.775 996.457 Q310.853 1001.04 310.853 1009.79 Q310.853 1018.52 307.775 1023.12 Q304.719 1027.71 298.909 1027.71 Q293.099 1027.71 290.02 1023.12 Q286.964 1018.52 286.964 1009.79 Q286.964 1001.04 290.02 996.457 Q293.099 991.85 298.909 991.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M262.775 880.605 L279.094 880.605 L279.094 884.54 L257.15 884.54 L257.15 880.605 Q259.812 877.85 264.395 873.221 Q269.002 868.568 270.182 867.225 Q272.428 864.702 273.307 862.966 Q274.21 861.207 274.21 859.517 Q274.21 856.762 272.266 855.026 Q270.344 853.29 267.242 853.29 Q265.043 853.29 262.59 854.054 Q260.159 854.818 257.381 856.369 L257.381 851.647 Q260.205 850.512 262.659 849.934 Q265.113 849.355 267.15 849.355 Q272.52 849.355 275.715 852.04 Q278.909 854.725 278.909 859.216 Q278.909 861.346 278.099 863.267 Q277.312 865.165 275.205 867.758 Q274.627 868.429 271.525 871.647 Q268.423 874.841 262.775 880.605 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M298.909 853.059 Q295.298 853.059 293.469 856.623 Q291.664 860.165 291.664 867.295 Q291.664 874.401 293.469 877.966 Q295.298 881.508 298.909 881.508 Q302.543 881.508 304.349 877.966 Q306.177 874.401 306.177 867.295 Q306.177 860.165 304.349 856.623 Q302.543 853.059 298.909 853.059 M298.909 849.355 Q304.719 849.355 307.775 853.961 Q310.853 858.545 310.853 867.295 Q310.853 876.022 307.775 880.628 Q304.719 885.211 298.909 885.211 Q293.099 885.211 290.02 880.628 Q286.964 876.022 286.964 867.295 Q286.964 858.545 290.02 853.961 Q293.099 849.355 298.909 849.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M272.914 723.41 Q276.27 724.128 278.145 726.396 Q280.043 728.665 280.043 731.998 Q280.043 737.114 276.525 739.915 Q273.006 742.716 266.525 742.716 Q264.349 742.716 262.034 742.276 Q259.742 741.859 257.289 741.003 L257.289 736.489 Q259.233 737.623 261.548 738.202 Q263.863 738.781 266.386 738.781 Q270.784 738.781 273.076 737.045 Q275.39 735.308 275.39 731.998 Q275.39 728.943 273.238 727.23 Q271.108 725.494 267.289 725.494 L263.261 725.494 L263.261 721.651 L267.474 721.651 Q270.923 721.651 272.752 720.285 Q274.58 718.896 274.58 716.304 Q274.58 713.642 272.682 712.23 Q270.807 710.795 267.289 710.795 Q265.367 710.795 263.168 711.211 Q260.969 711.628 258.33 712.508 L258.33 708.341 Q260.992 707.6 263.307 707.23 Q265.645 706.86 267.705 706.86 Q273.029 706.86 276.131 709.29 Q279.233 711.697 279.233 715.818 Q279.233 718.688 277.59 720.679 Q275.946 722.646 272.914 723.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M298.909 710.563 Q295.298 710.563 293.469 714.128 Q291.664 717.67 291.664 724.799 Q291.664 731.906 293.469 735.47 Q295.298 739.012 298.909 739.012 Q302.543 739.012 304.349 735.47 Q306.177 731.906 306.177 724.799 Q306.177 717.67 304.349 714.128 Q302.543 710.563 298.909 710.563 M298.909 706.86 Q304.719 706.86 307.775 711.466 Q310.853 716.049 310.853 724.799 Q310.853 733.526 307.775 738.132 Q304.719 742.716 298.909 742.716 Q293.099 742.716 290.02 738.132 Q286.964 733.526 286.964 724.799 Q286.964 716.049 290.02 711.466 Q293.099 706.86 298.909 706.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M271.594 569.063 L259.789 587.512 L271.594 587.512 L271.594 569.063 M270.367 564.989 L276.247 564.989 L276.247 587.512 L281.177 587.512 L281.177 591.401 L276.247 591.401 L276.247 599.549 L271.594 599.549 L271.594 591.401 L255.992 591.401 L255.992 586.887 L270.367 564.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M298.909 568.068 Q295.298 568.068 293.469 571.633 Q291.664 575.174 291.664 582.304 Q291.664 589.41 293.469 592.975 Q295.298 596.517 298.909 596.517 Q302.543 596.517 304.349 592.975 Q306.177 589.41 306.177 582.304 Q306.177 575.174 304.349 571.633 Q302.543 568.068 298.909 568.068 M298.909 564.364 Q304.719 564.364 307.775 568.971 Q310.853 573.554 310.853 582.304 Q310.853 591.031 307.775 595.637 Q304.719 600.22 298.909 600.22 Q293.099 600.22 290.02 595.637 Q286.964 591.031 286.964 582.304 Q286.964 573.554 290.02 568.971 Q293.099 564.364 298.909 564.364 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M258.793 422.494 L277.15 422.494 L277.15 426.429 L263.076 426.429 L263.076 434.901 Q264.094 434.554 265.113 434.392 Q266.131 434.206 267.15 434.206 Q272.937 434.206 276.316 437.378 Q279.696 440.549 279.696 445.966 Q279.696 451.544 276.224 454.646 Q272.752 457.725 266.432 457.725 Q264.256 457.725 261.988 457.354 Q259.742 456.984 257.335 456.243 L257.335 451.544 Q259.418 452.679 261.641 453.234 Q263.863 453.79 266.34 453.79 Q270.344 453.79 272.682 451.683 Q275.02 449.577 275.02 445.966 Q275.02 442.355 272.682 440.248 Q270.344 438.142 266.34 438.142 Q264.465 438.142 262.59 438.558 Q260.738 438.975 258.793 439.855 L258.793 422.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M298.909 425.572 Q295.298 425.572 293.469 429.137 Q291.664 432.679 291.664 439.808 Q291.664 446.915 293.469 450.48 Q295.298 454.021 298.909 454.021 Q302.543 454.021 304.349 450.48 Q306.177 446.915 306.177 439.808 Q306.177 432.679 304.349 429.137 Q302.543 425.572 298.909 425.572 M298.909 421.869 Q304.719 421.869 307.775 426.475 Q310.853 431.058 310.853 439.808 Q310.853 448.535 307.775 453.142 Q304.719 457.725 298.909 457.725 Q293.099 457.725 290.02 453.142 Q286.964 448.535 286.964 439.808 Q286.964 431.058 290.02 426.475 Q293.099 421.869 298.909 421.869 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M269.326 295.415 Q266.178 295.415 264.326 297.567 Q262.497 299.72 262.497 303.47 Q262.497 307.197 264.326 309.373 Q266.178 311.526 269.326 311.526 Q272.474 311.526 274.303 309.373 Q276.154 307.197 276.154 303.47 Q276.154 299.72 274.303 297.567 Q272.474 295.415 269.326 295.415 M278.608 280.762 L278.608 285.021 Q276.849 284.188 275.043 283.748 Q273.261 283.308 271.502 283.308 Q266.872 283.308 264.418 286.433 Q261.988 289.558 261.641 295.878 Q263.006 293.864 265.066 292.799 Q267.127 291.711 269.603 291.711 Q274.812 291.711 277.821 294.882 Q280.853 298.03 280.853 303.47 Q280.853 308.794 277.705 312.012 Q274.557 315.229 269.326 315.229 Q263.33 315.229 260.159 310.646 Q256.988 306.04 256.988 297.313 Q256.988 289.118 260.877 284.257 Q264.766 279.373 271.316 279.373 Q273.076 279.373 274.858 279.72 Q276.664 280.068 278.608 280.762 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M298.909 283.077 Q295.298 283.077 293.469 286.642 Q291.664 290.183 291.664 297.313 Q291.664 304.419 293.469 307.984 Q295.298 311.526 298.909 311.526 Q302.543 311.526 304.349 307.984 Q306.177 304.419 306.177 297.313 Q306.177 290.183 304.349 286.642 Q302.543 283.077 298.909 283.077 M298.909 279.373 Q304.719 279.373 307.775 283.98 Q310.853 288.563 310.853 297.313 Q310.853 306.04 307.775 310.646 Q304.719 315.229 298.909 315.229 Q293.099 315.229 290.02 310.646 Q286.964 306.04 286.964 297.313 Q286.964 288.563 290.02 283.98 Q293.099 279.373 298.909 279.373 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip552)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1047.26 400.199,950.798 400.786,862.294 401.372,781.21 401.958,707.052 402.545,639.362 403.131,577.718 403.718,521.725 404.304,471.017 404.891,425.252 405.477,384.111 406.063,347.293 406.65,314.52 407.236,285.528 407.823,260.071 408.409,237.917 408.995,277.489 409.582,259.098 410.168,243.492 410.755,230.483 411.341,219.895 411.927,292.318 412.514,319.806 413.1,312.931 413.687,307.661 414.273,361.398 414.86,357.731 415.446,356.014 416.032,356.145 416.619,356.778 417.205,359.048 417.792,362.591 418.378,366.62 418.964,372.191 419.551,378.845 420.137,400.937 420.724,409.334 421.31,418.089 421.896,427.156 422.483,449.18 423.069,458.819 423.656,468.694 424.242,478.891 424.829,489.502 425.415,509.355 426.001,538.516 426.588,558.39 427.174,585.542 427.761,604.068 428.347,616.13 428.933,635.041 429.52,654 430.106,665.997 430.693,683.966 431.279,695.643 431.865,707.721 432.452,719.349 433.038,735.702 433.625,756.217 434.211,779.892 434.798,789.339 435.384,798.828 435.97,811.986 436.557,828.763 437.143,837.097 437.73,848.826 438.316,864.033 438.902,878.438 439.489,885.855 440.075,896.373 440.662,912.827 441.248,919.933 441.835,929.567 442.421,941.746 443.007,950.871 443.594,965.053 444.18,970.718 444.767,976.579 445.353,987.466 445.939,997.892 446.526,1002.93 447.112,1017.36 447.699,1024.45 448.285,1035.82 448.871,1042.26 449.458,1048.62 450.044,1055.03 450.631,1061.02 451.217,1064.99 451.804,1071.1 452.39,1078.79 452.976,1082.55 453.563,1091.61 454.149,1096.52 454.736,1099.64 455.322,1102.81 455.908,1109.44 456.495,1117.62 457.081,1120.04 457.668,1126 458.254,1133.7 458.84,1139.1 459.427,1146.09 460.013,1151.04 460.6,1154.42 461.186,1159.36 461.773,1160.91 462.359,1164.25 462.945,1170.35 463.532,1171.92 464.118,1176.54 464.705,1180.92 465.291,1186.58 465.877,1188.9 466.464,1188.39 467.05,1189.37 467.637,1188.65 468.223,1192.44 468.809,1193.44 469.396,1195.86 469.982,1194.84 470.569,1197.17 471.155,1197.58 471.742,1203.96 472.328,1201.55 472.914,1205.07 473.501,1208.17 474.087,1208.57 474.674,1210.25 475.26,1214.66 475.846,1215.98 476.433,1217.49 477.019,1220.14 477.606,1220.08 478.192,1221.31 478.778,1221.47 479.365,1222.78 479.951,1223.98 480.538,1224.7 481.124,1228.44 481.711,1229.43 482.297,1234.17 482.883,1233.54 483.47,1231.89 484.056,1234 484.643,1238.55 485.229,1236.59 485.815,1233.47 486.402,1231.68 486.988,1230 487.575,1229.66 488.161,1232.04 488.748,1230.42 489.334,1231.48 489.92,1235.09 490.507,1239.7 491.093,1241.56 491.68,1239.67 492.266,1241.54 492.852,1243.46 493.439,1244.2 494.025,1243.04 494.612,1240.94 495.198,1240.36 495.784,1240.9 496.371,1238.97 496.957,1238.47 497.544,1240.45 498.13,1241.29 498.717,1240.6 499.303,1240.07 499.889,1239.74 500.476,1241.59 501.062,1243.15 501.649,1242.5 502.235,1243.03 502.821,1242.08 503.408,1242.67 503.994,1241.83 504.581,1242.24 505.167,1247.66 505.753,1249.27 506.34,1248.09 506.926,1249.63 507.513,1247.47 508.099,1245.28 508.686,1244.41 509.272,1244.77 509.858,1243.82 510.445,1243.1 511.031,1242.38 511.618,1243.11 512.204,1240.15 512.79,1236.14 513.377,1236.99 513.963,1239.05 514.55,1238.44 515.136,1239.04 515.722,1238.26 516.309,1237.85 516.895,1239.74 517.482,1237.93 518.068,1237.82 518.655,1238.81 519.241,1238.21 519.827,1238.83 520.414,1239.46 521,1238.83 521.587,1240.57 522.173,1243.49 522.759,1245.17 523.346,1247.67 523.932,1246.63 524.519,1244.65 525.105,1241.58 525.691,1242.08 526.278,1240.3 526.864,1239.55 527.451,1241.38 528.037,1238.19 528.624,1237.87 529.21,1238.24 529.796,1236.62 530.383,1237.69 530.969,1241.04 531.556,1240.34 532.142,1240.95 532.728,1239.19 533.315,1238.43 533.901,1236.5 534.488,1233.49 535.074,1233.09 535.661,1234 536.247,1237.51 536.833,1240.39 537.42,1240.67 538.006,1245.88 538.593,1246.12 539.179,1246.21 539.765,1247.68 540.352,1246.7 540.938,1248.18 541.525,1248.14 542.111,1250.53 542.697,1249.3 543.284,1249.2 543.87,1248.09 544.457,1246.1 545.043,1245.17 545.63,1246.77 546.216,1247.06 546.802,1244.99 547.389,1242.75 547.975,1242.93 548.562,1242.15 549.148,1237.82 549.734,1241.81 550.321,1240.91 550.907,1242.52 551.494,1241.76 552.08,1240.97 552.666,1242.33 553.253,1239.88 553.839,1237.8 554.426,1234.59 555.012,1231.76 555.599,1232.53 556.185,1232.07 556.771,1233.18 557.358,1232.79 557.944,1233.68 558.531,1232.04 559.117,1231.67 559.703,1231.1 560.29,1232.04 560.876,1232.82 561.463,1233.44 562.049,1231.77 562.635,1231.34 563.222,1231.07 563.808,1231.96 564.395,1227.94 564.981,1228.84 565.568,1229.73 566.154,1230.65 566.74,1230.12 567.327,1230.83 567.913,1233.11 568.5,1232.67 569.086,1236.03 569.672,1235.21 570.259,1235.75 570.845,1236.16 571.432,1236.54 572.018,1237.18 572.605,1240.25 573.191,1239.5 573.777,1237.64 574.364,1238 574.95,1236.19 575.537,1235.39 576.123,1233.62 576.709,1236.51 577.296,1235.76 577.882,1238.53 578.469,1238.47 579.055,1238.79 579.641,1236.88 580.228,1235.1 580.814,1232.13 581.401,1230.61 581.987,1229.86 582.574,1232.01 583.16,1231.52 583.746,1230.9 584.333,1229.33 584.919,1230.03 585.506,1228.82 586.092,1229.48 586.678,1229 587.265,1227.56 587.851,1226.19 588.438,1226.95 589.024,1227.92 589.61,1228.64 590.197,1229.54 590.783,1228.9 591.37,1229.74 591.956,1228.15 592.543,1226.61 593.129,1227.62 593.715,1226.13 594.302,1225.97 594.888,1226.84 595.475,1225.25 596.061,1228.3 596.647,1232.64 597.234,1234.29 597.82,1233.56 598.407,1232.9 598.993,1232.32 599.579,1229.14 600.166,1227.65 600.752,1226.26 601.339,1227.25 601.925,1225.73 602.512,1224.22 603.098,1223.94 603.684,1224.87 604.271,1224.75 604.857,1224.3 605.444,1223.78 606.03,1223.64 606.616,1224.52 607.203,1225.36 607.789,1222.66 608.376,1223.93 608.962,1223.76 609.548,1224.61 610.135,1225.59 610.721,1225.51 611.308,1222.64 611.894,1222.34 612.481,1223.26 613.067,1223.05 613.653,1224.1 614.24,1222.63 614.826,1221.43 615.413,1222.57 615.999,1221.44 616.585,1222.44 617.172,1224.36 617.758,1223.98 618.345,1222.67 618.931,1223.6 619.518,1223.28 620.104,1223.06 620.69,1223.92 621.277,1224.8 621.863,1223.28 622.45,1221.96 623.036,1224.34 623.622,1221.76 624.209,1219.25 624.795,1221.69 625.382,1220.39 625.968,1221.47 626.554,1223.72 627.141,1223.41 627.727,1222.12 628.314,1220.78 628.9,1219.57 629.487,1220.82 630.073,1221.87 630.659,1221.61 631.246,1224.96 631.832,1222.12 632.419,1222.97 633.005,1221.79 633.591,1221.59 634.178,1220.13 634.764,1218.84 635.351,1218.8 635.937,1217.62 636.523,1217.76 637.11,1216.96 637.696,1219.29 638.283,1221.36 638.869,1220.1 639.456,1218.77 640.042,1219.79 640.628,1218.5 641.215,1218.46 641.801,1217.27 642.388,1216.26 642.974,1216.58 643.56,1216.72 644.147,1215.69 644.733,1216.99 645.32,1219.31 645.906,1219.07 646.492,1218.98 647.079,1222.37 647.665,1222.14 648.252,1219.72 648.838,1221.82 649.425,1219.1 650.011,1223.66 650.597,1221.88 651.184,1219.31 651.77,1222.95 652.357,1218.89 652.943,1221.23 653.529,1219.49 654.116,1220.54 654.702,1221.5 655.289,1219.04 655.875,1220.35 656.462,1217.92 657.048,1215.44 657.634,1214.22 658.221,1215.67 658.807,1219.38 659.394,1220.49 659.98,1220.2 660.566,1222.21 661.153,1220.66 661.739,1226.1 662.326,1224.25 662.912,1223.87 663.498,1221.27 664.085,1220.79 664.671,1220.62 665.258,1216.88 665.844,1218.2 666.431,1217.17 667.017,1218.23 667.603,1218.34 668.19,1217.25 668.776,1217.38 669.363,1217.37 669.949,1217.4 670.535,1218.24 671.122,1218.44 671.708,1216.99 672.295,1218.23 672.881,1219.18 673.467,1221.36 674.054,1220.04 674.64,1219.65 675.227,1219.62 675.813,1220.76 676.4,1220.63 676.986,1220.6 677.572,1220.3 678.159,1217.79 678.745,1215.37 679.332,1212.82 679.918,1214.24 680.504,1213.09 681.091,1209.64 681.677,1212.65 682.264,1211.44 682.85,1214 683.436,1215.41 684.023,1214.57 684.609,1212.29 685.196,1211.33 685.782,1212.67 686.369,1211.86 686.955,1212.03 687.541,1214.55 688.128,1216.96 688.714,1218.3 689.301,1219.17 689.887,1219.08 690.473,1219.07 691.06,1221.5 691.646,1222.3 692.233,1218.62 692.819,1217.26 693.405,1217.12 693.992,1217.45 694.578,1216.14 695.165,1214.97 695.751,1218.53 696.338,1218.51 696.924,1218.38 697.51,1218.3 698.097,1219.01 698.683,1217.59 699.27,1218.88 699.856,1216.36 700.442,1215.07 701.029,1215.22 701.615,1214.03 702.202,1215.2 702.788,1218.61 703.375,1217.28 703.961,1216.06 704.547,1216.95 705.134,1216.74 705.72,1220.07 706.307,1219.66 706.893,1220.58 707.479,1220.17 708.066,1220.87 708.652,1221.8 709.239,1220.41 709.825,1221.4 710.411,1219.82 710.998,1218.48 711.584,1220.35 712.171,1219.07 712.757,1218.71 713.344,1219.82 713.93,1219.34 714.516,1221.44 715.103,1219.69 715.689,1220.26 716.276,1219.69 716.862,1220.85 717.448,1225.1 718.035,1226.65 718.621,1225.75 719.208,1222.81 719.794,1218.63 720.38,1220.78 720.967,1222.76 721.553,1218.92 722.14,1218.45 722.726,1219.33 723.313,1218.81 723.899,1217.23 724.485,1219.17 725.072,1215.36 725.658,1213.97 726.245,1216.3 726.831,1215.95 727.417,1214.64 728.004,1215.37 728.59,1213.94 729.177,1215.06 729.763,1212.45 730.349,1212.6 730.936,1212.72 731.522,1215.16 732.109,1213.92 732.695,1215.18 733.282,1216.18 733.868,1214.76 734.454,1214.75 735.041,1214.54 735.627,1215.41 736.214,1215.35 736.8,1212.95 737.386,1212.81 737.973,1215.09 738.559,1216.31 739.146,1218.47 739.732,1219.14 740.318,1217.75 740.905,1215.15 741.491,1215.04 742.078,1211.69 742.664,1211.84 743.251,1208.39 743.837,1206.39 744.423,1205.41 745.01,1205.57 745.596,1203.58 746.183,1204.04 746.769,1205.96 747.355,1207.53 747.942,1206.78 748.528,1206.01 749.115,1208.48 749.701,1208.55 750.288,1209.9 750.874,1210.12 751.46,1210.14 752.047,1210.19 752.633,1210.25 753.22,1209.26 753.806,1209.58 754.392,1209.67 754.979,1208.55 755.565,1207.65 756.152,1208.8 756.738,1208 757.324,1210.46 757.911,1210.67 758.497,1207.42 759.084,1207.82 759.67,1211.42 760.257,1213.77 760.843,1212.58 761.429,1213.98 762.016,1215.29 762.602,1215.18 763.189,1216.37 763.775,1216.33 764.361,1217.35 764.948,1215.85 765.534,1215.9 766.121,1213.65 766.707,1214.79 767.293,1219.28 767.88,1218.82 768.466,1219.54 769.053,1221.65 769.639,1222.7 770.226,1222.39 770.812,1224.29 771.398,1223.56 771.985,1223.12 772.571,1221.35 773.158,1220.97 773.744,1224 774.33,1224.47 774.917,1224.97 775.503,1223.61 776.09,1224.3 776.676,1224.87 777.262,1223.35 777.849,1221.67 778.435,1219.88 779.022,1219.29 779.608,1221.29 780.195,1220.69 780.781,1222.39 781.367,1218.32 781.954,1216.82 782.54,1212.89 783.127,1214.08 783.713,1214.01 784.299,1213.75 784.886,1216.06 785.472,1218.23 786.059,1220.22 786.645,1219.87 787.232,1217.14 787.818,1215.54 788.404,1215.36 788.991,1212.79 789.577,1211.52 790.164,1211.46 790.75,1208.1 791.336,1202.74 791.923,1202.25 792.509,1206.32 793.096,1206.79 793.682,1208.02 794.268,1207.22 794.855,1205.33 795.441,1204.58 796.028,1205 796.614,1205.52 797.201,1205.61 797.787,1207.21 798.373,1207.84 798.96,1209.22 799.546,1209.58 800.133,1207.45 800.719,1209.06 801.305,1210.47 801.892,1209.38 802.478,1209.76 803.065,1207.68 803.651,1205.62 804.237,1203.51 804.824,1203 805.41,1204.62 805.997,1203.78 806.583,1205.22 807.17,1204.58 807.756,1204.91 808.342,1202.96 808.929,1203.55 809.515,1205.11 810.102,1205.54 810.688,1208.94 811.274,1210.15 811.861,1213.83 812.447,1214.74 813.034,1214.68 813.62,1213.53 814.206,1213.38 814.793,1213.64 815.379,1214.62 815.966,1214.58 816.552,1215.64 817.139,1215.54 817.725,1220.08 818.311,1217.37 818.898,1217.18 819.484,1214.5 820.071,1212.18 820.657,1211.02 821.243,1211.16 821.83,1210.03 822.416,1211.37 823.003,1211.26 823.589,1209.97 824.175,1212.44 824.762,1212.46 825.348,1210.26 825.935,1210.39 826.521,1211.56 827.108,1213.92 827.694,1212.7 828.28,1214.88 828.867,1213.28 829.453,1211.06 830.04,1209.75 830.626,1212.04 831.212,1212.18 831.799,1213.12 832.385,1213.1 832.972,1212.86 833.558,1212.8 834.145,1212.4 834.731,1213.3 835.317,1213.1 835.904,1214.19 836.49,1215.43 837.077,1216.5 837.663,1215.14 838.249,1216.02 838.836,1215.73 839.422,1212.17 840.009,1213.18 840.595,1213.96 841.181,1214.71 841.768,1214.57 842.354,1213.32 842.941,1214.56 843.527,1216.72 844.114,1216.7 844.7,1216.4 845.286,1217.35 845.873,1218.06 846.459,1216.5 847.046,1215.01 847.632,1215.69 848.218,1217.96 848.805,1214 849.391,1214.88 849.978,1213.41 850.564,1215.52 851.15,1215.5 851.737,1217.44 852.323,1217.01 852.91,1216.62 853.496,1214.06 854.083,1213.8 854.669,1214.66 855.255,1214.41 855.842,1215.48 856.428,1212.82 857.015,1210.39 857.601,1212.91 858.187,1214.95 858.774,1214.87 859.36,1214.6 859.947,1214.39 860.533,1214.22 861.119,1211.91 861.706,1213.02 862.292,1211.78 862.879,1210.59 863.465,1210.45 864.052,1209.02 864.638,1207.88 865.224,1209.47 865.811,1211.89 866.397,1211.79 866.984,1210.46 867.57,1211.63 868.156,1212.85 868.743,1212.82 869.329,1211.94 869.916,1210.77 870.502,1209.63 871.089,1209.65 871.675,1212.16 872.261,1214.36 872.848,1213.14 873.434,1214.42 874.021,1213.54 874.607,1213.66 875.193,1212.42 875.78,1211.18 876.366,1211.26 876.953,1211.27 877.539,1212.51 878.125,1212.45 878.712,1212.31 879.298,1209.74 879.885,1210.71 880.471,1209.52 881.058,1209.48 881.644,1209.41 882.23,1208.24 882.817,1209.72 883.403,1211.1 883.99,1212.27 884.576,1213.53 885.162,1215.49 885.749,1216.41 886.335,1214.75 886.922,1216.8 887.508,1217.77 888.094,1217.38 888.681,1215.86 889.267,1219.29 889.854,1217.61 890.44,1217.1 891.027,1216.99 891.613,1215.51 892.199,1215.18 892.786,1215.09 893.372,1216.93 893.959,1213.23 894.545,1210.67 895.131,1209.4 895.718,1210.58 896.304,1209.26 896.891,1206.92 897.477,1208.4 898.063,1207.36 898.65,1206.54 899.236,1207.91 899.823,1207.99 900.409,1208.11 900.996,1208.1 901.582,1209.41 902.168,1211.67 902.755,1211.7 903.341,1210.45 903.928,1210.36 904.514,1208.15 905.1,1206.07 905.687,1207.4 906.273,1207.79 906.86,1209.18 907.446,1206.95 908.032,1207.23 908.619,1210.77 909.205,1210.77 909.792,1209.52 910.378,1208.07 910.965,1206.96 911.551,1208.17 912.137,1208.34 912.724,1204.96 913.31,1201.62 913.897,1199.58 914.483,1200.26 915.069,1198.4 915.656,1200.27 916.242,1199.87 916.829,1197.91 917.415,1198.67 918.002,1199.48 918.588,1198.87 919.174,1199.33 919.761,1203.27 920.347,1202.53 920.934,1204.32 921.52,1205.76 922.106,1206.24 922.693,1207.61 923.279,1206.62 923.866,1205.67 924.452,1205.94 925.038,1208.43 925.625,1208.49 926.211,1207.5 926.798,1208.76 927.384,1206.42 927.971,1206.81 928.557,1209.45 929.143,1208.54 929.73,1208.76 930.316,1213.33 930.903,1212.11 931.489,1211.89 932.075,1213.14 932.662,1210.89 933.248,1213.3 933.835,1215.55 934.421,1216.55 935.007,1218.3 935.594,1214.44 936.18,1214.36 936.767,1209.63 937.353,1207.35 937.94,1208.96 938.526,1209.32 939.112,1206.94 939.699,1207.49 940.285,1206.23 940.872,1207.67 941.458,1206.93 942.044,1205.99 942.631,1207.42 943.217,1205.26 943.804,1204.35 944.39,1204.74 944.976,1203.94 945.563,1205.34 946.149,1207.97 946.736,1207.06 947.322,1205.96 947.909,1204.75 948.495,1204.79 949.081,1206.32 949.668,1206.51 950.254,1206.8 950.841,1208.15 951.427,1209.32 952.013,1209.66 952.6,1209.54 953.186,1213.19 953.773,1214.04 954.359,1213.66 954.945,1215.74 955.532,1215.59 956.118,1216.57 956.705,1215.22 957.291,1216.14 957.878,1216.9 958.464,1214.49 959.05,1213.12 959.637,1211.87 960.223,1211.95 960.81,1212.02 961.396,1209.75 961.982,1209.91 962.569,1210.85 963.155,1210.74 963.742,1214.06 964.328,1212.71 964.915,1215.97 965.501,1216.82 966.087,1215.47 966.674,1216.39 967.26,1212.25 967.847,1213.03 968.433,1212.89 969.019,1213.97 969.606,1213.85 970.192,1213.56 970.779,1213.39 971.365,1212.06 971.951,1214.33 972.538,1212.76 973.124,1210.31 973.711,1214.72 974.297,1212.27 974.884,1211 975.47,1210.99 976.056,1213.22 976.643,1210.79 977.229,1210.8 977.816,1213.32 978.402,1213.23 978.988,1211.78 979.575,1211.51 980.161,1212.66 980.748,1212.57 981.334,1210.12 981.92,1211.15 982.507,1210.03 983.093,1210.05 983.68,1211.19 984.266,1209.89 984.853,1208.45 985.439,1207.28 986.025,1207.58 986.612,1207.86 987.198,1208.01 987.785,1207.08 988.371,1207.17 988.957,1208.43 989.544,1210.86 990.13,1213.04 990.717,1212.88 991.303,1212.71 991.889,1212.51 992.476,1213.53 993.062,1213.34 993.649,1212.88 994.235,1215.1 994.822,1213.65 995.408,1210.98 995.994,1210.87 996.581,1210.93 997.167,1210.81 997.754,1210.98 998.34,1210.82 998.926,1210.77 999.513,1210.7 1000.1,1208.43 1000.69,1207.24 1001.27,1209.77 1001.86,1212.1 1002.44,1213.15 1003.03,1212.05 1003.62,1210.55 1004.2,1209.49 1004.79,1209.6 1005.38,1206.35 1005.96,1206.49 1006.55,1208.01 1007.14,1209.43 1007.72,1206.25 1008.31,1207.57 1008.9,1206.39 1009.48,1207.62 1010.07,1208.82 1010.65,1207.76 1011.24,1207.92 1011.83,1209.41 1012.41,1209.29 1013,1208.18 1013.59,1209.53 1014.17,1208.4 1014.76,1208.6 1015.35,1207.49 1015.93,1208.95 1016.52,1208.97 1017.11,1209.08 1017.69,1209.04 1018.28,1208.87 1018.86,1207.88 1019.45,1206.95 1020.04,1208.63 1020.62,1210.02 1021.21,1209.91 1021.8,1208.66 1022.38,1207.62 1022.97,1207.79 1023.56,1210.21 1024.14,1209.03 1024.73,1207.97 1025.32,1208.94 1025.9,1210.05 1026.49,1209.94 1027.07,1209.77 1027.66,1209.89 1028.25,1212.24 1028.83,1210.9 1029.42,1210.88 1030.01,1210.93 1030.59,1209.71 1031.18,1211.05 1031.77,1213.34 1032.35,1211.22 1032.94,1212.26 1033.52,1213.32 1034.11,1213.04 1034.7,1213 1035.28,1216.28 1035.87,1217.02 1036.46,1215.74 1037.04,1214.27 1037.63,1214.14 1038.22,1216.03 1038.8,1217.87 1039.39,1218.46 1039.98,1220.04 1040.56,1220.83 1041.15,1216.81 1041.73,1218.5 1042.32,1217.05 1042.91,1217.94 1043.49,1217.43 1044.08,1216.87 1044.67,1216.27 1045.25,1214.79 1045.84,1214.44 1046.43,1210.55 1047.01,1211.6 1047.6,1211.39 1048.19,1212.28 1048.77,1212.11 1049.36,1212.23 1049.94,1211.29 1050.53,1213.56 1051.12,1213.54 1051.7,1215.43 1052.29,1214.96 1052.88,1219.31 1053.46,1216.56 1054.05,1214.99 1054.64,1213.61 1055.22,1212.06 1055.81,1213.07 1056.39,1212.83 1056.98,1213.78 1057.57,1211.18 1058.15,1211.03 1058.74,1208.68 1059.33,1208.81 1059.91,1209.07 1060.5,1209.55 1061.09,1209.47 1061.67,1205.04 1062.26,1205.65 1062.85,1205.93 1063.43,1207.69 1064.02,1207.89 1064.6,1207.9 1065.19,1206.99 1065.78,1205.96 1066.36,1206.47 1066.95,1209 1067.54,1208.11 1068.12,1206.99 1068.71,1209.5 1069.3,1207.3 1069.88,1206.26 1070.47,1207.7 1071.06,1207.94 1071.64,1205.67 1072.23,1202.63 1072.81,1204.22 1073.4,1204.43 1073.99,1204.66 1074.57,1207.23 1075.16,1206.16 1075.75,1209.95 1076.33,1212.39 1076.92,1213.26 1077.51,1211.9 1078.09,1210.78 1078.68,1212.11 1079.26,1213.21 1079.85,1212.98 1080.44,1215.11 1081.02,1213.56 1081.61,1214.36 1082.2,1212.96 1082.78,1212.75 1083.37,1213.77 1083.96,1211.25 1084.54,1209.06 1085.13,1207.78 1085.72,1206.42 1086.3,1205.36 1086.89,1203.4 1087.47,1204.9 1088.06,1205.12 1088.65,1205.28 1089.23,1204.6 1089.82,1206.09 1090.41,1207.7 1090.99,1205.43 1091.58,1205.54 1092.17,1205.85 1092.75,1207.11 1093.34,1208.32 1093.93,1210.73 1094.51,1213.05 1095.1,1209.56 1095.68,1209.63 1096.27,1209.84 1096.86,1209.85 1097.44,1209.94 1098.03,1212.23 1098.62,1214.06 1099.2,1214.95 1099.79,1214.69 1100.38,1218.04 1100.96,1218.38 1101.55,1217.98 1102.14,1217.67 1102.72,1220.81 1103.31,1220.19 1103.89,1218.43 1104.48,1217.83 1105.07,1217.41 1105.65,1215.83 1106.24,1216.59 1106.83,1215 1107.41,1217.15 1108,1214.61 1108.59,1213.33 1109.17,1213.32 1109.76,1211.88 1110.34,1210.76 1110.93,1208.2 1111.52,1208.23 1112.1,1208.38 1112.69,1206.12 1113.28,1204.17 1113.86,1203.46 1114.45,1205 1115.04,1205.43 1115.62,1205.4 1116.21,1207.58 1116.8,1204.34 1117.38,1203.44 1117.97,1203.93 1118.55,1206.34 1119.14,1205.34 1119.73,1206.69 1120.31,1208.18 1120.9,1207.47 1121.49,1206.69 1122.07,1208.16 1122.66,1209.74 1123.25,1207.72 1123.83,1207.79 1124.42,1207.95 1125.01,1208.18 1125.59,1209.57 1126.18,1210.73 1126.76,1211.64 1127.35,1209.4 1127.94,1207.24 1128.52,1210.93 1129.11,1209.5 1129.7,1209.56 1130.28,1208.32 1130.87,1208.45 1131.46,1214.29 1132.04,1210.46 1132.63,1211.7 1133.21,1212.59 1133.8,1213.8 1134.39,1211.33 1134.97,1211.37 1135.56,1208.85 1136.15,1207.86 1136.73,1206.77 1137.32,1206.66 1137.91,1206.76 1138.49,1205.62 1139.08,1207.05 1139.67,1207.16 1140.25,1207.27 1140.84,1204.94 1141.42,1204.15 1142.01,1208.13 1142.6,1209.29 1143.18,1209.38 1143.77,1210.47 1144.36,1210.46 1144.94,1210.36 1145.53,1208.15 1146.12,1208.34 1146.7,1208.25 1147.29,1206.06 1147.88,1203.92 1148.46,1204.18 1149.05,1204.62 1149.63,1204.84 1150.22,1202.88 1150.81,1206.75 1151.39,1206.69 1151.98,1212.3 1152.57,1209.84 1153.15,1208.51 1153.74,1208.5 1154.33,1209.6 1154.91,1208.4 1155.5,1209.39 1156.09,1209.17 1156.67,1210.45 1157.26,1209.11 1157.84,1211.3 1158.43,1210.87 1159.02,1209.74 1159.6,1208.42 1160.19,1209.66 1160.78,1209.62 1161.36,1208.49 1161.95,1209.65 1162.54,1210.51 1163.12,1208.31 1163.71,1207.21 1164.29,1205.14 1164.88,1205.71 1165.47,1205.91 1166.05,1209.63 1166.64,1209.51 1167.23,1208.2 1167.81,1209.41 1168.4,1211.87 1168.99,1212.49 1169.57,1212.19 1170.16,1211.92 1170.75,1211.79 1171.33,1210.55 1171.92,1210.7 1172.5,1210.67 1173.09,1211.87 1173.68,1211.92 1174.26,1212.04 1174.85,1209.7 1175.44,1208.56 1176.02,1207.56 1176.61,1208.82 1177.2,1208.82 1177.78,1214.73 1178.37,1215.74 1178.96,1216.44 1179.54,1212.49 1180.13,1212.12 1180.71,1211.91 1181.3,1212.97 1181.89,1214.22 1182.47,1214.01 1183.06,1213.74 1183.65,1211.41 1184.23,1213.46 1184.82,1213.16 1185.41,1211.83 1185.99,1213 1186.58,1213.15 1187.16,1211.77 1187.75,1211.8 1188.34,1210.7 1188.92,1209.51 1189.51,1207.13 1190.1,1207.12 1190.68,1206.07 1191.27,1207.43 1191.86,1207.79 1192.44,1206.51 1193.03,1208.96 1193.62,1208.04 1194.2,1208.89 1194.79,1208.91 1195.37,1208.95 1195.96,1208.69 1196.55,1211.12 1197.13,1212.3 1197.72,1213.24 1198.31,1213.02 1198.89,1211.83 1199.48,1210.5 1200.07,1209.35 1200.65,1210.79 1201.24,1210.79 1201.83,1214.38 1202.41,1213.11 1203,1213.91 1203.58,1214.7 1204.17,1213.27 1204.76,1212.05 1205.34,1210.85 1205.93,1210.84 1206.52,1209.42 1207.1,1210.75 1207.69,1210.87 1208.28,1208.76 1208.86,1209.97 1209.45,1208.85 1210.03,1208.9 1210.62,1209.06 1211.21,1209.27 1211.79,1209.11 1212.38,1209.13 1212.97,1210.33 1213.55,1210.21 1214.14,1211.51 1214.73,1211.51 1215.31,1211.46 1215.9,1211.41 1216.49,1211.48 1217.07,1212.65 1217.66,1212.36 1218.24,1211.09 1218.83,1209.84 1219.42,1209.86 1220,1211.06 1220.59,1207.76 1221.18,1204.5 1221.76,1204.87 1222.35,1204 1222.94,1207.76 1223.52,1208.94 1224.11,1210.43 1224.7,1208.03 1225.28,1204.73 1225.87,1205.34 1226.45,1205.27 1227.04,1204.41 1227.63,1204.73 1228.21,1206.31 1228.8,1205.29 1229.39,1204.41 1229.97,1204.89 1230.56,1202.66 1231.15,1203.11 1231.73,1204.95 1232.32,1202.88 1232.91,1199.73 1233.49,1201.62 1234.08,1201.99 1234.66,1204.84 1235.25,1203.92 1235.84,1206.62 1236.42,1207.08 1237.01,1207.35 1237.6,1207.6 1238.18,1206.73 1238.77,1206.82 1239.36,1207.03 1239.94,1207.25 1240.53,1210.76 1241.11,1209.53 1241.7,1213.18 1242.29,1213.13 1242.87,1212.72 1243.46,1211.45 1244.05,1211.66 1244.63,1210.37 1245.22,1209.37 1245.81,1207.19 1246.39,1205.96 1246.98,1207.71 1247.57,1206.84 1248.15,1205.76 1248.74,1208.25 1249.32,1209.13 1249.91,1210.29 1250.5,1210.07 1251.08,1208.85 1251.67,1208.78 1252.26,1208.87 1252.84,1208.62 1253.43,1208.8 1254.02,1207.74 1254.6,1209.12 1255.19,1209.1 1255.78,1211.56 1256.36,1211.49 1256.95,1211.47 1257.53,1213.71 1258.12,1213.43 1258.71,1212.09 1259.29,1214.13 1259.88,1213.82 1260.47,1213.57 1261.05,1213.31 1261.64,1212.97 1262.23,1215.06 1262.81,1214.81 1263.4,1214.71 1263.98,1213.2 1264.57,1214.33 1265.16,1212.67 1265.74,1213.83 1266.33,1213.41 1266.92,1210.45 1267.5,1212.54 1268.09,1212.4 1268.68,1215.6 1269.26,1214.24 1269.85,1215.11 1270.44,1210.19 1271.02,1212.35 1271.61,1211.21 1272.19,1211 1272.78,1210.64 1273.37,1211.75 1273.95,1212.75 1274.54,1212.44 1275.13,1210.96 1275.71,1210.88 1276.3,1212.08 1276.89,1209.52 1277.47,1209.33 1278.06,1208.21 1278.65,1205.94 1279.23,1206.2 1279.82,1203.94 1280.4,1204.35 1280.99,1205.75 1281.58,1206.95 1282.16,1208.1 1282.75,1206.78 1283.34,1208.17 1283.92,1208.09 1284.51,1208.06 1285.1,1209.38 1285.68,1206.98 1286.27,1208.31 1286.86,1206.15 1287.44,1206.43 1288.03,1206.65 1288.61,1206.62 1289.2,1204.33 1289.79,1204.63 1290.37,1204.88 1290.96,1207.25 1291.55,1208.54 1292.13,1206.22 1292.72,1208.59 1293.31,1207.43 1293.89,1207.6 1294.48,1207.95 1295.06,1206.95 1295.65,1207.41 1296.24,1206.52 1296.82,1206.71 1297.41,1209.19 1298,1209.3 1298.58,1208.15 1299.17,1210.53 1299.76,1210.52 1300.34,1208.17 1300.93,1208.05 1301.52,1206.79 1302.1,1209.3 1302.69,1208.01 1303.27,1211.68 1303.86,1210.52 1304.45,1209.57 1305.03,1207.43 1305.62,1207.5 1306.21,1208.73 1306.79,1212.03 1307.38,1209.73 1307.97,1207.4 1308.55,1206.22 1309.14,1207.48 1309.73,1207.67 1310.31,1207.69 1310.9,1209.32 1311.48,1209.43 1312.07,1210.68 1312.66,1208.28 1313.24,1208.05 1313.83,1208.16 1314.42,1211.91 1315,1212.97 1315.59,1213.9 1316.18,1212.57 1316.76,1214.86 1317.35,1214.59 1317.93,1211.79 1318.52,1209.25 1319.11,1209.36 1319.69,1205.77 1320.28,1205.79 1320.87,1207.22 1321.45,1207.31 1322.04,1208.81 1322.63,1208.83 1323.21,1209.76 1323.8,1210 1324.39,1210.25 1324.97,1209.29 1325.56,1209.16 1326.14,1210.33 1326.73,1210.41 1327.32,1210.49 1327.9,1212.8 1328.49,1212.65 1329.08,1213.66 1329.66,1212.5 1330.25,1210.12 1330.84,1206.71 1331.42,1204.48 1332.01,1209.39 1332.6,1211.53 1333.18,1211.39 1333.77,1211.25 1334.35,1211.09 1334.94,1212.28 1335.53,1212.3 1336.11,1211.1 1336.7,1212.16 1337.29,1212.98 1337.87,1212.43 1338.46,1212.44 1339.05,1211.02 1339.63,1210.57 1340.22,1211.94 1340.8,1211.9 1341.39,1208.49 1341.98,1207.41 1342.56,1210.02 1343.15,1208.64 1343.74,1210.83 1344.32,1210.58 1344.91,1209.37 1345.5,1210.31 1346.08,1212.67 1346.67,1212.49 1347.26,1210.12 1347.84,1212.52 1348.43,1212.21 1349.01,1211.93 1349.6,1210.66 1350.19,1212.98 1350.77,1212.8 1351.36,1212.77 1351.95,1211.46 1352.53,1211.43 1353.12,1211.22 1353.71,1211.01 1354.29,1211.01 1354.88,1209.77 1355.47,1209.9 1356.05,1212.24 1356.64,1212.46 1357.22,1210.15 1357.81,1210.98 1358.4,1210.99 1358.98,1214.48 1359.57,1213.01 1360.16,1211.74 1360.74,1213.73 1361.33,1213.59 1361.92,1211.15 1362.5,1210.96 1363.09,1210.93 1363.68,1211.88 1364.26,1208.12 1364.85,1209.42 1365.43,1211.95 1366.02,1213.11 1366.61,1213.01 1367.19,1212.8 1367.78,1213.81 1368.37,1212.18 1368.95,1213.26 1369.54,1214.13 1370.13,1213.76 1370.71,1212.58 1371.3,1211.09 1371.88,1210.86 1372.47,1210.93 1373.06,1209.56 1373.64,1209.53 1374.23,1209.3 1374.82,1208.15 1375.4,1208.43 1375.99,1207.36 1376.58,1207.64 1377.16,1207.82 1377.75,1208.93 1378.34,1205.46 1378.92,1205.52 1379.51,1206.81 1380.09,1207.09 1380.68,1204.81 1381.27,1202.52 1381.85,1201.77 1382.44,1199.69 1383.03,1198.95 1383.61,1198.15 1384.2,1199.78 1384.79,1199.06 1385.37,1203.16 1385.96,1204.85 1386.55,1205.16 1387.13,1204.28 1387.72,1203.55 1388.3,1204 1388.89,1205.55 1389.48,1204.61 1390.06,1206.09 1390.65,1209.75 1391.24,1210.52 1391.82,1213.92 1392.41,1214.94 1393,1215.76 1393.58,1214.25 1394.17,1211.7 1394.75,1212.6 1395.34,1211.22 1395.93,1211.13 1396.51,1211.14 1397.1,1215.68 1397.69,1216.47 1398.27,1217.3 1398.86,1218.08 1399.45,1217.5 1400.03,1217.14 1400.62,1219.05 1401.21,1218.45 1401.79,1218 1402.38,1215.07 1402.96,1213.6 1403.55,1214.27 1404.14,1213.9 1404.72,1213.64 1405.31,1213.5 1405.9,1211.93 1406.48,1210.62 1407.07,1210.82 1407.66,1209.68 1408.24,1210.93 1408.83,1211.04 1409.42,1213.4 1410,1212.02 1410.59,1212.92 1411.17,1212.89 1411.76,1208.21 1412.35,1208.24 1412.93,1207.01 1413.52,1208.31 1414.11,1209.7 1414.69,1210.72 1415.28,1209.69 1415.87,1210.8 1416.45,1213.21 1417.04,1210.91 1417.63,1214.52 1418.21,1214.13 1418.8,1214.2 1419.38,1214.11 1419.97,1213.85 1420.56,1216.04 1421.14,1216.88 1421.73,1215.25 1422.32,1214.86 1422.9,1214.42 1423.49,1212.92 1424.08,1212.09 1424.66,1213.34 1425.25,1212.06 1425.83,1208.54 1426.42,1208.61 1427.01,1206.08 1427.59,1206.28 1428.18,1203.73 1428.77,1201.56 1429.35,1203.37 1429.94,1203.5 1430.53,1203.56 1431.11,1204.01 1431.7,1204.26 1432.29,1207.96 1432.87,1206.89 1433.46,1204.63 1434.04,1207.16 1434.63,1206.23 1435.22,1206.38 1435.8,1206.64 1436.39,1206.78 1436.98,1206.8 1437.56,1210.18 1438.15,1207.96 1438.74,1211.62 1439.32,1211.76 1439.91,1211.29 1440.5,1209.85 1441.08,1211.06 1441.67,1212.21 1442.25,1211.81 1442.84,1211.61 1443.43,1210.09 1444.01,1211.08 1444.6,1209.87 1445.19,1209.99 1445.77,1208.81 1446.36,1208.89 1446.95,1210.27 1447.53,1210.34 1448.12,1209.41 1448.7,1210.48 1449.29,1211.54 1449.88,1213.64 1450.46,1213.18 1451.05,1211.79 1451.64,1210.57 1452.22,1211.77 1452.81,1210.44 1453.4,1211.54 1453.98,1212.7 1454.57,1211.53 1455.16,1209.15 1455.74,1208.05 1456.33,1209.44 1456.91,1209.52 1457.5,1208.24 1458.09,1206.12 1458.67,1206.23 1459.26,1207.3 1459.85,1207.52 1460.43,1208.96 1461.02,1208.09 1461.61,1208.26 1462.19,1206.05 1462.78,1208.48 1463.37,1206.03 1463.95,1207.42 1464.54,1208.73 1465.12,1208.85 1465.71,1209.76 1466.3,1209.62 1466.88,1210.48 1467.47,1206.81 1468.06,1207.16 1468.64,1205.83 1469.23,1208.42 1469.82,1206.15 1470.4,1206.29 1470.99,1205.41 1471.57,1205.79 1472.16,1204.79 1472.75,1203.88 1473.33,1204.09 1473.92,1204.55 1474.51,1205.83 1475.09,1207.16 1475.68,1205.02 1476.27,1205.34 1476.85,1203.21 1477.44,1203.53 1478.03,1205.09 1478.61,1204.13 1479.2,1205.75 1479.78,1205.01 1480.37,1204.17 1480.96,1205.73 1481.54,1205.93 1482.13,1202.56 1482.72,1205.14 1483.3,1207.68 1483.89,1207.81 1484.48,1205.55 1485.06,1208.32 1485.65,1208.54 1486.24,1209.85 1486.82,1210.08 1487.41,1209.89 1487.99,1208.57 1488.58,1209.59 1489.17,1209.39 1489.75,1208.08 1490.34,1208.51 1490.93,1207.41 1491.51,1207.53 1492.1,1208.45 1492.69,1209.8 1493.27,1208.37 1493.86,1211.87 1494.45,1209.39 1495.03,1209.35 1495.62,1211.64 1496.2,1210.43 1496.79,1212.53 1497.38,1213.8 1497.96,1212.79 1498.55,1213.79 1499.14,1213.51 1499.72,1212.06 1500.31,1210.75 1500.9,1213.08 1501.48,1209.61 1502.07,1210.67 1502.65,1210.56 1503.24,1211.79 1503.83,1213.81 1504.41,1210.15 1505,1208.88 1505.59,1211.1 1506.17,1207.45 1506.76,1207.58 1507.35,1208.96 1507.93,1209.99 1508.52,1207.83 1509.11,1206.65 1509.69,1206.71 1510.28,1205.82 1510.86,1207.24 1511.45,1207.27 1512.04,1206.16 1512.62,1206.45 1513.21,1206.64 1513.8,1206.83 1514.38,1207 1514.97,1205.1 1515.56,1205.48 1516.14,1203.4 1516.73,1202.52 1517.32,1201.8 1517.9,1202.24 1518.49,1202.41 1519.07,1202.64 1519.66,1201.83 1520.25,1203.37 1520.83,1203.93 1521.42,1203.01 1522.01,1203.49 1522.59,1202.67 1523.18,1203.06 1523.77,1205.96 1524.35,1203.81 1524.94,1203.03 1525.52,1202.36 1526.11,1202.79 1526.7,1203.22 1527.28,1205.97 1527.87,1206.31 1528.46,1205.21 1529.04,1207.98 1529.63,1209.06 1530.22,1206.63 1530.8,1207.88 1531.39,1208.13 1531.98,1210.61 1532.56,1208.25 1533.15,1208.16 1533.73,1205.81 1534.32,1207.35 1534.91,1206.26 1535.49,1206.28 1536.08,1209.72 1536.67,1209.73 1537.25,1208.51 1537.84,1207.46 1538.43,1206.53 1539.01,1207.87 1539.6,1205.69 1540.19,1207.04 1540.77,1207.61 1541.36,1209 1541.94,1209.16 1542.53,1209.02 1543.12,1210.11 1543.7,1212.41 1544.29,1211.2 1544.88,1211.01 1545.46,1210.7 1546.05,1211.71 1546.64,1212.85 1547.22,1212.61 1547.81,1212.53 1548.4,1212.33 1548.98,1213.25 1549.57,1212.95 1550.15,1214.93 1550.74,1215.86 1551.33,1214.53 1551.91,1214.33 1552.5,1214 1553.09,1212.49 1553.67,1212.24 1554.26,1214.55 1554.85,1211.96 1555.43,1210.64 1556.02,1210.77 1556.6,1210.67 1557.19,1210.75 1557.78,1215.3 1558.36,1213.93 1558.95,1214.93 1559.54,1215.78 1560.12,1216.54 1560.71,1218.06 1561.3,1217.7 1561.88,1217.37 1562.47,1214.71 1563.06,1214.51 1563.64,1214.16 1564.23,1216.28 1564.81,1215.96 1565.4,1212.33 1565.99,1211.29 1566.57,1212.27 1567.16,1214.52 1567.75,1215.27 1568.33,1217.14 1568.92,1216.6 1569.51,1214.88 1570.09,1214.44 1570.68,1214.24 1571.27,1212.65 1571.85,1212.62 1572.44,1213.61 1573.02,1211.24 1573.61,1209.9 1574.2,1208.67 1574.78,1208.54 1575.37,1209.76 1575.96,1209.84 1576.54,1210.98 1577.13,1208.31 1577.72,1209.49 1578.3,1210.78 1578.89,1211.8 1579.47,1213.93 1580.06,1212.71 1580.65,1212.39 1581.23,1212.24 1581.82,1210.71 1582.41,1210.32 1582.99,1212.86 1583.58,1211.32 1584.17,1212.42 1584.75,1213.49 1585.34,1211.93 1585.93,1212.93 1586.51,1214.95 1587.1,1214.74 1587.68,1214.22 1588.27,1213.96 1588.86,1217.24 1589.44,1214.6 1590.03,1214.15 1590.62,1215.06 1591.2,1213.88 1591.79,1210.35 1592.38,1211.55 1592.96,1213.83 1593.55,1213.71 1594.14,1214.67 1594.72,1214.12 1595.31,1216.03 1595.89,1216.83 1596.48,1217.75 1597.07,1217.17 1597.65,1217.95 1598.24,1219.76 1598.83,1220.42 1599.41,1217.8 1600,1216.38 1600.59,1217 1601.17,1215.48 1601.76,1212.82 1602.34,1212.79 1602.93,1212.55 1603.52,1211.14 1604.1,1210.85 1604.69,1210.81 1605.28,1210.86 1605.86,1209.72 1606.45,1211.11 1607.04,1211.16 1607.62,1211.02 1608.21,1209.74 1608.8,1209.7 1609.38,1209.87 1609.97,1212.11 1610.55,1211.82 1611.14,1212.94 1611.73,1213.97 1612.31,1214.87 1612.9,1215.68 1613.49,1213.04 1614.07,1214.97 1614.66,1216.75 1615.25,1212.94 1615.83,1212.7 1616.42,1214.76 1617.01,1215.7 1617.59,1212.89 1618.18,1211.31 1618.76,1208.79 1619.35,1208.57 1619.94,1208.41 1620.52,1208.35 1621.11,1209.52 1621.7,1209.52 1622.28,1210.85 1622.87,1210.87 1623.46,1211.8 1624.04,1208.14 1624.63,1206.9 1625.22,1208.11 1625.8,1207.95 1626.39,1208.26 1626.97,1208.2 1627.56,1210.48 1628.15,1210.45 1628.73,1211.48 1629.32,1213.75 1629.91,1212.26 1630.49,1210.97 1631.08,1210.88 1631.67,1207.28 1632.25,1207.58 1632.84,1205.57 1633.42,1206.79 1634.01,1205.63 1634.6,1208.2 1635.18,1207.01 1635.77,1204.92 1636.36,1206.46 1636.94,1201.7 1637.53,1204.09 1638.12,1204.36 1638.7,1205.81 1639.29,1204.62 1639.88,1205 1640.46,1205.33 1641.05,1205.49 1641.63,1203.2 1642.22,1204.73 1642.81,1205.92 1643.39,1207.09 1643.98,1207.4 1644.57,1205.21 1645.15,1205.63 1645.74,1203.86 1646.33,1203.03 1646.91,1203.41 1647.5,1203.75 1648.09,1203.91 1648.67,1203.2 1649.26,1204.7 1649.84,1206.22 1650.43,1206.5 1651.02,1205.56 1651.6,1205.97 1652.19,1206.05 1652.78,1206.23 1653.36,1207.67 1653.95,1207.74 1654.54,1206.79 1655.12,1209.58 1655.71,1209.47 1656.29,1209.42 1656.88,1210.42 1657.47,1211.66 1658.05,1212.54 1658.64,1211.13 1659.23,1207.68 1659.81,1205.47 1660.4,1204.5 1660.99,1205.94 1661.57,1206.32 1662.16,1206.36 1662.75,1205.34 1663.33,1205.76 1663.92,1204.86 1664.5,1206.16 1665.09,1205 1665.68,1206.47 1666.26,1207.77 1666.85,1208.99 1667.44,1208.86 1668.02,1207.79 1668.61,1206.93 1669.2,1207.14 1669.78,1204.85 1670.37,1205.03 1670.96,1203.06 1671.54,1205.73 1672.13,1205.18 1672.71,1206.67 1673.3,1210.22 1673.89,1210.99 1674.47,1212.35 1675.06,1214.52 1675.65,1216.68 1676.23,1215.36 1676.82,1216.4 1677.41,1214.05 1677.99,1213.72 1678.58,1210.2 1679.17,1210.23 1679.75,1211.25 1680.34,1211.1 1680.92,1212.07 1681.51,1214.09 1682.1,1212.65 1682.68,1212.39 1683.27,1211.01 1683.86,1210.91 1684.44,1210.93 1685.03,1210.88 1685.62,1211.12 1686.2,1212.24 1686.79,1213.48 1687.37,1214.45 1687.96,1213.02 1688.55,1214.11 1689.13,1214.12 1689.72,1213.83 1690.31,1213.8 1690.89,1212.59 1691.48,1213.35 1692.07,1208.42 1692.65,1210.83 1693.24,1207.37 1693.83,1204 1694.41,1204.39 1695,1203.62 1695.58,1205.19 1696.17,1204.37 1696.76,1202.38 1697.34,1202.81 1697.93,1203.15 1698.52,1206.83 1699.1,1208.09 1699.69,1204.64 1700.28,1203.55 1700.86,1202.86 1701.45,1203.24 1702.04,1203.54 1702.62,1203.92 1703.21,1205.68 1703.79,1205.78 1704.38,1204.79 1704.97,1208.58 1705.55,1208.51 1706.14,1208.43 1706.73,1206.46 1707.31,1207.82 1707.9,1209.12 1708.49,1210.24 1709.07,1207.6 1709.66,1207.76 1710.24,1206.79 1710.83,1209.21 1711.42,1209.18 1712,1207.85 1712.59,1207.95 1713.18,1211.72 1713.76,1211.59 1714.35,1210.33 1714.94,1210.4 1715.52,1209.2 1716.11,1209.22 1716.7,1206.72 1717.28,1205.7 1717.87,1204.72 1718.45,1203.94 1719.04,1204.31 1719.63,1203.57 1720.21,1204.99 1720.8,1206.41 1721.39,1205.46 1721.97,1205.65 1722.56,1204.7 1723.15,1206.26 1723.73,1207.48 1724.32,1205.19 1724.91,1206.54 1725.49,1211.46 1726.08,1211.35 1726.66,1213.77 1727.25,1212.18 1727.84,1212.29 1728.42,1210.98 1729.01,1213.31 1729.6,1213.16 1730.18,1211.78 1730.77,1212.8 1731.36,1211.55 1731.94,1211.54 1732.53,1212.79 1733.11,1213.65 1733.7,1212.43 1734.29,1212.23 1734.87,1212.17 1735.46,1212.32 1736.05,1211.15 1736.63,1213.41 1737.22,1211.88 1737.81,1212.03 1738.39,1210.68 1738.98,1210.69 1739.57,1210.77 1740.15,1209.51 1740.74,1208.44 1741.32,1211 1741.91,1209.8 1742.5,1208.68 1743.08,1208.64 1743.67,1209.95 1744.26,1209.85 1744.84,1208.43 1745.43,1208.47 1746.02,1208.56 1746.6,1208.4 1747.19,1210.96 1747.78,1209.7 1748.36,1210.71 1748.95,1211.92 1749.53,1211.52 1750.12,1212.64 1750.71,1209.08 1751.29,1208.93 1751.88,1208.98 1752.47,1208.09 1753.05,1208.37 1753.64,1210.64 1754.23,1211.74 1754.81,1211.67 1755.4,1212.77 1755.99,1213.8 1756.57,1213.23 1757.16,1213.12 1757.74,1211.7 1758.33,1209.42 1758.92,1208.04 1759.5,1210.42 1760.09,1209.14 1760.68,1209.15 1761.26,1209.09 1761.85,1208.93 1762.44,1208.84 1763.02,1206.55 1763.61,1206.77 1764.19,1205.56 1764.78,1209.42 1765.37,1207.28 1765.95,1207.46 1766.54,1206.45 1767.13,1209.07 1767.71,1208.13 1768.3,1209.32 1768.89,1211.26 1769.47,1211.03 1770.06,1210.7 1770.65,1209.3 1771.23,1206.95 1771.82,1210.64 1772.4,1213.03 1772.99,1211.65 1773.58,1212.27 1774.16,1210.99 1774.75,1211.83 1775.34,1210.67 1775.92,1214.26 1776.51,1215.01 1777.1,1217.08 1777.68,1218.09 1778.27,1215.34 1778.86,1212.98 1779.44,1211.79 1780.03,1210.5 1780.61,1210.42 1781.2,1208.01 1781.79,1210.17 1782.37,1210.03 1782.96,1211.34 1783.55,1210.16 1784.13,1206.7 1784.72,1205.53 1785.31,1204.4 1785.89,1205.9 1786.48,1206.27 1787.06,1206.42 1787.65,1209.12 1788.24,1210 1788.82,1210.2 1789.41,1209.83 1790,1209.79 1790.58,1208.47 1791.17,1209.65 1791.76,1207.35 1792.34,1208.61 1792.93,1207.61 1793.52,1209.8 1794.1,1208.75 1794.69,1211.14 1795.27,1209.96 1795.86,1210.01 1796.45,1206.37 1797.03,1208.8 1797.62,1207.39 1798.21,1208.79 1798.79,1208.73 1799.38,1208.79 1799.97,1209.04 1800.55,1209.32 1801.14,1210.48 1801.73,1208.22 1802.31,1208.5 1802.9,1210.78 1803.48,1210.82 1804.07,1208.63 1804.66,1211.12 1805.24,1210.97 1805.83,1212 1806.42,1214.41 1807,1213.26 1807.59,1214.53 1808.18,1210.77 1808.76,1212.03 1809.35,1212.92 1809.94,1212.44 1810.52,1212.22 1811.11,1211.11 1811.69,1209.94 1812.28,1208.74 1812.87,1208.66 1813.45,1211.26 1814.04,1209.92 1814.63,1207.56 1815.21,1206.49 1815.8,1207.92 1816.39,1206.94 1816.97,1206.7 1817.56,1208.17 1818.14,1208.04 1818.73,1210.69 1819.32,1210.55 1819.9,1209.57 1820.49,1210.44 1821.08,1211.57 1821.66,1210.26 1822.25,1211.46 1822.84,1210.3 1823.42,1209.09 1824.01,1210.14 1824.6,1210.14 1825.18,1207.5 1825.77,1206.66 1826.35,1208.02 1826.94,1210.31 1827.53,1210.07 1828.11,1209.85 1828.7,1208.86 1829.29,1207.76 1829.87,1207.94 1830.46,1207.89 1831.05,1205.73 1831.63,1205.89 1832.22,1206.19 1832.81,1207.39 1833.39,1209.68 1833.98,1208.43 1834.56,1208.34 1835.15,1210.72 1835.74,1208.54 1836.32,1210.92 1836.91,1210.8 1837.5,1210.71 1838.08,1208.19 1838.67,1207.23 1839.26,1207.43 1839.84,1206.31 1840.43,1203.16 1841.01,1204.64 1841.6,1203.77 1842.19,1205.26 1842.77,1205.3 1843.36,1206.71 1843.95,1206.87 1844.53,1205.92 1845.12,1207.36 1845.71,1207.53 1846.29,1208.67 1846.88,1209.77 1847.47,1210.91 1848.05,1211.89 1848.64,1211.72 1849.22,1211.73 1849.81,1213.97 1850.4,1213.77 1850.98,1213.3 1851.57,1213.04 1852.16,1210.57 1852.74,1212.88 1853.33,1210.44 1853.92,1211.52 1854.5,1213.92 1855.09,1213.64 1855.68,1212.35 1856.26,1210.95 1856.85,1211.98 1857.43,1210.85 1858.02,1209.59 1858.61,1209.69 1859.19,1211.95 1859.78,1212.98 1860.37,1214.97 1860.95,1215.85 1861.54,1215.33 1862.13,1217.03 1862.71,1218.92 1863.3,1217.36 1863.88,1216.96 1864.47,1215.25 1865.06,1212.7 1865.64,1212.54 1866.23,1207.7 1866.82,1206.49 1867.4,1206.49 1867.99,1206.33 1868.58,1206.6 1869.16,1208.87 1869.75,1207.64 1870.34,1206.49 1870.92,1205.62 1871.51,1203.41 1872.09,1201.4 1872.68,1201.78 1873.27,1202.36 1873.85,1202.65 1874.44,1201.98 1875.03,1202.26 1875.61,1202.61 1876.2,1206.05 1876.79,1208.46 1877.37,1209.57 1877.96,1208.72 1878.55,1210.99 1879.13,1214.34 1879.72,1212.8 1880.3,1211.51 1880.89,1211.36 1881.48,1210.15 1882.06,1210.19 1882.65,1210.07 1883.24,1211.27 1883.82,1211.15 1884.41,1211.11 1885,1209.99 1885.58,1209.9 1886.17,1212.31 1886.76,1209.65 1887.34,1210.63 1887.93,1210.57 1888.51,1211.8 1889.1,1215.16 1889.69,1213.59 1890.27,1212.49 1890.86,1212.16 1891.45,1210.87 1892.03,1210.96 1892.62,1211.96 1893.21,1212.86 1893.79,1211.37 1894.38,1211.34 1894.96,1211.21 1895.55,1212.23 1896.14,1212.99 1896.72,1209.17 1897.31,1209.18 1897.9,1209.23 1898.48,1207.91 1899.07,1206.85 1899.66,1208.16 1900.24,1210.39 1900.83,1208.06 1901.42,1211.5 1902,1210.48 1902.59,1209.28 1903.17,1211.41 1903.76,1211.35 1904.35,1210.16 1904.93,1213.68 1905.52,1211.4 1906.11,1208.63 1906.69,1208.92 1907.28,1208.9 1907.87,1212.34 1908.45,1212.1 1909.04,1210.74 1909.63,1210.64 1910.21,1208.43 1910.8,1210.84 1911.38,1211.63 1911.97,1210.51 1912.56,1209.14 1913.14,1210.12 1913.73,1209.86 1914.32,1207.5 1914.9,1205.33 1915.49,1204.49 1916.08,1203.68 1916.66,1203.97 1917.25,1205.43 1917.83,1206.91 1918.42,1209.48 1919.01,1207.1 1919.59,1207.17 1920.18,1208.23 1920.77,1208.25 1921.35,1210.48 1921.94,1210.43 1922.53,1208.03 1923.11,1207.1 1923.7,1206.07 1924.29,1207.35 1924.87,1207.22 1925.46,1208.43 1926.04,1207.19 1926.63,1209.41 1927.22,1210.7 1927.8,1207.4 1928.39,1208.96 1928.98,1208.08 1929.56,1210.84 1930.15,1209.46 1930.74,1206.99 1931.32,1211.74 1931.91,1211.87 1932.5,1210.51 1933.08,1209.12 1933.67,1206.69 1934.25,1206.84 1934.84,1205.97 1935.43,1207.42 1936.01,1206.4 1936.6,1205.46 1937.19,1203.47 1937.77,1202.71 1938.36,1203.14 1938.95,1202.41 1939.53,1202.91 1940.12,1204.32 1940.71,1204.59 1941.29,1203.65 1941.88,1205.3 1942.46,1205.36 1943.05,1205.56 1943.64,1206.7 1944.22,1209.31 1944.81,1210.65 1945.4,1210.6 1945.98,1211.99 1946.57,1211.91 1947.16,1209.53 1947.74,1208.5 1948.33,1209.76 1948.91,1210.7 1949.5,1210.54 1950.09,1211.61 1950.67,1211.41 1951.26,1206.6 1951.85,1207.94 1952.43,1204.4 1953.02,1204.76 1953.61,1204.11 1954.19,1206.67 1954.78,1205.74 1955.37,1205.93 1955.95,1206.44 1956.54,1205.48 1957.12,1206.84 1957.71,1210.3 1958.3,1207.96 1958.88,1208.15 1959.47,1207.02 1960.06,1205.88 1960.64,1207.2 1961.23,1207.23 1961.82,1207.54 1962.4,1207.72 1962.99,1208.06 1963.58,1208.18 1964.16,1208.58 1964.75,1208.67 1965.33,1207.67 1965.92,1207.69 1966.51,1206.72 1967.09,1206.8 1967.68,1207.1 1968.27,1208.28 1968.85,1207.14 1969.44,1208.68 1970.03,1207.53 1970.61,1209.85 1971.2,1212.09 1971.78,1214.38 1972.37,1216.32 1972.96,1217.08 1973.54,1213.53 1974.13,1212.24 1974.72,1211.91 1975.3,1211.76 1975.89,1211.44 1976.48,1212.57 1977.06,1213.76 1977.65,1214.84 1978.24,1212.38 1978.82,1212.19 1979.41,1209.74 1979.99,1209.96 1980.58,1210.29 1981.17,1212.45 1981.75,1212.38 1982.34,1213.21 1982.93,1214.17 1983.51,1214.01 1984.1,1213.88 1984.69,1213.59 1985.27,1215.66 1985.86,1213.33 1986.45,1214.28 1987.03,1211.6 1987.62,1211.75 1988.2,1211.74 1988.79,1209.41 1989.38,1210.57 1989.96,1212.96 1990.55,1210.17 1991.14,1210.13 1991.72,1209.96 1992.31,1207.77 1992.9,1207.73 1993.48,1208.87 1994.07,1209.16 1994.65,1207.2 1995.24,1207.37 1995.83,1207.47 1996.41,1208.73 1997,1212.99 1997.59,1212.72 1998.17,1209.16 1998.76,1208.08 1999.35,1205.97 1999.93,1203.98 2000.52,1203.14 2001.11,1202.43 2001.69,1202.83 2002.28,1205.5 2002.86,1207.11 2003.45,1208.3 2004.04,1208.68 2004.62,1207.35 2005.21,1208.59 2005.8,1207.43 2006.38,1206.4 2006.97,1206.57 2007.56,1207.92 2008.14,1209.38 2008.73,1210.59 2009.32,1208.33 2009.9,1209.5 2010.49,1212.84 2011.07,1215.12 2011.66,1215.98 2012.25,1215.52 2012.83,1212.63 2013.42,1213.44 2014.01,1213.13 2014.59,1213.78 2015.18,1212.43 2015.77,1213.46 2016.35,1212.12 2016.94,1213.12 2017.53,1212.83 2018.11,1212.86 2018.7,1211.37 2019.28,1211.33 2019.87,1208.83 2020.46,1207.7 2021.04,1210.14 2021.63,1210.1 2022.22,1211.22 2022.8,1213.44 2023.39,1213.32 2023.98,1215.55 2024.56,1215.47 2025.15,1217.64 2025.73,1216.1 2026.32,1218.16 2026.91,1218.84 2027.49,1218.36 2028.08,1219.11 2028.67,1217.4 2029.25,1216.93 2029.84,1216.6 2030.43,1215.08 2031.01,1213.37 2031.6,1213.11 2032.19,1213.06 2032.77,1213.99 2033.36,1213.77 2033.94,1213.37 2034.53,1211.03 2035.12,1212.2 2035.7,1214.14 2036.29,1210.31 2036.88,1210.25 2037.46,1212.74 2038.05,1212.73 2038.64,1211.49 2039.22,1211.39 2039.81,1211.42 2040.4,1207.93 2040.98,1208.03 2041.57,1210.29 2042.15,1212.43 2042.74,1213.17 2043.33,1214.27 2043.91,1212.9 2044.5,1212.9 2045.09,1210.46 2045.67,1210.49 2046.26,1213.68 2046.85,1213.13 2047.43,1214.13 2048.02,1213.63 2048.6,1209.93 2049.19,1207.46 2049.78,1208.88 2050.36,1208.79 2050.95,1208.82 2051.54,1206.53 2052.12,1208.96 2052.71,1209.99 2053.3,1208.8 2053.88,1209.95 2054.47,1211.25 2055.06,1212.33 2055.64,1212.06 2056.23,1211.81 2056.81,1211.77 2057.4,1209.27 2057.99,1209.5 2058.57,1209.52 2059.16,1208.3 2059.75,1206.06 2060.33,1207.38 2060.92,1206.38 2061.51,1207.73 2062.09,1205.15 2062.68,1203.03 2063.27,1203.27 2063.85,1200.11 2064.44,1200.53 2065.02,1202.08 2065.61,1202.77 2066.2,1202 2066.78,1200.22 2067.37,1204.08 2067.96,1205.33 2068.54,1205.49 2069.13,1205.67 2069.72,1203.51 2070.3,1202.93 2070.89,1201.82 2071.48,1200.86 2072.06,1200.32 2072.65,1202.04 2073.23,1203.63 2073.82,1204.2 2074.41,1203.49 2074.99,1203.89 2075.58,1202.06 2076.17,1203.72 2076.75,1205.2 2077.34,1204.6 2077.93,1202.83 2078.51,1204.36 2079.1,1204.53 2079.68,1206.07 2080.27,1209.5 2080.86,1207.35 2081.44,1207.22 2082.03,1210.94 2082.62,1208.43 2083.2,1208.59 2083.79,1211.05 2084.38,1210.74 2084.96,1210.61 2085.55,1211.74 2086.14,1215.13 2086.72,1214.69 2087.31,1212.92 2087.89,1210.41 2088.48,1209.09 2089.07,1210.44 2089.65,1210.37 2090.24,1211.62 2090.83,1210.18 2091.41,1210.02 2092,1208.53 2092.59,1208.72 2093.17,1207.69 2093.76,1207.94 2094.35,1206.46 2094.93,1205.19 2095.52,1209.01 2096.1,1210.06 2096.69,1209.96 2097.28,1211.27 2097.86,1211.09 2098.45,1208.6 2099.04,1208.61 2099.62,1206.53 2100.21,1209.08 2100.8,1205.74 2101.38,1207.2 2101.97,1207.32 2102.55,1207.58 2103.14,1207.4 2103.73,1209.96 2104.31,1209.65 2104.9,1208.66 2105.49,1207.48 2106.07,1205.3 2106.66,1205.65 2107.25,1206.95 2107.83,1208.36 2108.42,1208.14 2109.01,1210.68 2109.59,1210.65 2110.18,1209.63 2110.76,1210.92 2111.35,1213.38 2111.94,1213.16 2112.52,1215.19 2113.11,1216.17 2113.7,1215.91 2114.28,1216.74 2114.87,1216.4 2115.46,1217.25 2116.04,1218.11 2116.63,1215.19 2117.22,1214.92 2117.8,1214.46 2118.39,1214.24 2118.97,1212.72 2119.56,1213.54 2120.15,1214.58 2120.73,1214.27 2121.32,1215.19 2121.91,1214.89 2122.49,1213.47 2123.08,1213.41 2123.67,1214.46 2124.25,1215.1 2124.84,1214.66 2125.42,1214.59 2126.01,1209.65 2126.6,1209.67 2127.18,1209.91 2127.77,1209.91 2128.36,1206.43 2128.94,1203.14 2129.53,1202.19 2130.12,1202.35 2130.7,1202.7 2131.29,1201.95 2131.88,1203.4 2132.46,1204.89 2133.05,1206.21 2133.63,1206.53 2134.22,1205.58 2134.81,1207.26 2135.39,1207.72 2135.98,1205.34 2136.57,1204.45 2137.15,1205.9 2137.74,1206.27 2138.33,1207.53 2138.91,1207.82 2139.5,1209.15 2140.09,1206.59 2140.67,1205.68 2141.26,1203.43 2141.84,1202.6 2142.43,1204.21 2143.02,1203.26 2143.6,1203.62 2144.19,1208.46 2144.78,1213 2145.36,1214.07 2145.95,1213.91 2146.54,1213.82 2147.12,1213.53 2147.71,1210.96 2148.3,1210.82 2148.88,1212.19 2149.47,1211.73 2150.05,1210.39 2150.64,1211.53 2151.23,1212.87 2151.81,1213.8 2152.4,1210.09 2152.99,1210.03 2153.57,1209.93 2154.16,1209.92 2154.75,1210.12 2155.33,1210.11 2155.92,1208.8 2156.5,1210.02 2157.09,1211.31 2157.68,1214.91 2158.26,1214.74 \"/>\n<path clip-path=\"url(#clip552)\" d=\"M986.025 1209.97 L986.612 1209.97 L987.198 1209.97 L987.785 1209.97 L988.371 1209.97 L988.957 1209.97 L989.544 1209.97 L990.13 1209.97 L990.717 1209.97 L991.303 1209.97 L991.889 1209.97 L992.476 1209.97 L993.062 1209.97 L993.649 1209.97 L994.235 1209.97 L994.822 1209.97 L995.408 1209.97 L995.994 1209.97 L996.581 1209.97 L997.167 1209.97 L997.754 1209.97 L998.34 1209.97 L998.926 1209.97 L999.513 1209.97 L1000.1 1209.97 L1000.69 1209.97 L1001.27 1209.97 L1001.86 1209.97 L1002.44 1209.97 L1003.03 1209.97 L1003.62 1209.97 L1004.2 1209.97 L1004.79 1209.97 L1005.38 1209.97 L1005.96 1209.97 L1006.55 1209.97 L1007.14 1209.97 L1007.72 1209.97 L1008.31 1209.97 L1008.9 1209.97 L1009.48 1209.97 L1010.07 1209.97 L1010.65 1209.97 L1011.24 1209.97 L1011.83 1209.97 L1012.41 1209.97 L1013 1209.97 L1013.59 1209.97 L1014.17 1209.97 L1014.76 1209.97 L1015.35 1209.97 L1015.93 1209.97 L1016.52 1209.97 L1017.11 1209.97 L1017.69 1209.97 L1018.28 1209.97 L1018.86 1209.97 L1019.45 1209.97 L1020.04 1209.97 L1020.62 1209.97 L1021.21 1209.97 L1021.8 1209.97 L1022.38 1209.97 L1022.97 1209.97 L1023.56 1209.97 L1024.14 1209.97 L1024.73 1209.97 L1025.32 1209.97 L1025.9 1209.97 L1026.49 1209.97 L1027.07 1209.97 L1027.66 1209.97 L1028.25 1209.97 L1028.83 1209.97 L1029.42 1209.97 L1030.01 1209.97 L1030.59 1209.97 L1031.18 1209.97 L1031.77 1209.97 L1032.35 1209.97 L1032.94 1209.97 L1033.52 1209.97 L1034.11 1209.97 L1034.7 1209.97 L1035.28 1209.97 L1035.87 1209.97 L1036.46 1209.97 L1037.04 1209.97 L1037.63 1209.97 L1038.22 1209.97 L1038.8 1209.97 L1039.39 1209.97 L1039.98 1209.97 L1040.56 1209.97 L1041.15 1209.97 L1041.73 1209.97 L1042.32 1209.97 L1042.91 1209.97 L1043.49 1209.97 L1044.08 1209.97 L1044.67 1209.97 L1045.25 1209.97 L1045.84 1209.97 L1046.43 1209.97 L1047.01 1209.97 L1047.6 1209.97 L1048.19 1209.97 L1048.77 1209.97 L1049.36 1209.97 L1049.94 1209.97 L1050.53 1209.97 L1051.12 1209.97 L1051.7 1209.97 L1052.29 1209.97 L1052.88 1209.97 L1053.46 1209.97 L1054.05 1209.97 L1054.64 1209.97 L1055.22 1209.97 L1055.81 1209.97 L1056.39 1209.97 L1056.98 1209.97 L1057.57 1209.97 L1058.15 1209.97 L1058.74 1209.97 L1059.33 1209.97 L1059.91 1209.97 L1060.5 1209.97 L1061.09 1209.97 L1061.67 1209.97 L1062.26 1209.97 L1062.85 1209.97 L1063.43 1209.97 L1064.02 1209.97 L1064.6 1209.97 L1065.19 1209.97 L1065.78 1209.97 L1066.36 1209.97 L1066.95 1209.97 L1067.54 1209.97 L1068.12 1209.97 L1068.71 1209.97 L1069.3 1209.97 L1069.88 1209.97 L1070.47 1209.97 L1071.06 1209.97 L1071.64 1209.97 L1072.23 1209.97 L1072.81 1209.97 L1073.4 1209.97 L1073.99 1209.97 L1074.57 1209.97 L1075.16 1209.97 L1075.75 1209.97 L1076.33 1209.97 L1076.92 1209.97 L1077.51 1209.97 L1078.09 1209.97 L1078.68 1209.97 L1079.26 1209.97 L1079.85 1209.97 L1080.44 1209.97 L1081.02 1209.97 L1081.61 1209.97 L1082.2 1209.97 L1082.78 1209.97 L1083.37 1209.97 L1083.96 1209.97 L1084.54 1209.97 L1085.13 1209.97 L1085.72 1209.97 L1086.3 1209.97 L1086.89 1209.97 L1087.47 1209.97 L1088.06 1209.97 L1088.65 1209.97 L1089.23 1209.97 L1089.82 1209.97 L1090.41 1209.97 L1090.99 1209.97 L1091.58 1209.97 L1092.17 1209.97 L1092.75 1209.97 L1093.34 1209.97 L1093.93 1209.97 L1094.51 1209.97 L1095.1 1209.97 L1095.68 1209.97 L1096.27 1209.97 L1096.86 1209.97 L1097.44 1209.97 L1098.03 1209.97 L1098.62 1209.97 L1099.2 1209.97 L1099.79 1209.97 L1100.38 1209.97 L1100.96 1209.97 L1101.55 1209.97 L1102.14 1209.97 L1102.72 1209.97 L1103.31 1209.97 L1103.89 1209.97 L1104.48 1209.97 L1105.07 1209.97 L1105.65 1209.97 L1106.24 1209.97 L1106.83 1209.97 L1107.41 1209.97 L1108 1209.97 L1108.59 1209.97 L1109.17 1209.97 L1109.76 1209.97 L1110.34 1209.97 L1110.93 1209.97 L1111.52 1209.97 L1112.1 1209.97 L1112.69 1209.97 L1113.28 1209.97 L1113.86 1209.97 L1114.45 1209.97 L1115.04 1209.97 L1115.62 1209.97 L1116.21 1209.97 L1116.8 1209.97 L1117.38 1209.97 L1117.97 1209.97 L1118.55 1209.97 L1119.14 1209.97 L1119.73 1209.97 L1120.31 1209.97 L1120.9 1209.97 L1121.49 1209.97 L1122.07 1209.97 L1122.66 1209.97 L1123.25 1209.97 L1123.83 1209.97 L1124.42 1209.97 L1125.01 1209.97 L1125.59 1209.97 L1126.18 1209.97 L1126.76 1209.97 L1127.35 1209.97 L1127.94 1209.97 L1128.52 1209.97 L1129.11 1209.97 L1129.7 1209.97 L1130.28 1209.97 L1130.87 1209.97 L1131.46 1209.97 L1132.04 1209.97 L1132.63 1209.97 L1133.21 1209.97 L1133.8 1209.97 L1134.39 1209.97 L1134.97 1209.97 L1135.56 1209.97 L1136.15 1209.97 L1136.73 1209.97 L1137.32 1209.97 L1137.91 1209.97 L1138.49 1209.97 L1139.08 1209.97 L1139.67 1209.97 L1140.25 1209.97 L1140.84 1209.97 L1141.42 1209.97 L1142.01 1209.97 L1142.6 1209.97 L1143.18 1209.97 L1143.77 1209.97 L1144.36 1209.97 L1144.94 1209.97 L1145.53 1209.97 L1146.12 1209.97 L1146.7 1209.97 L1147.29 1209.97 L1147.88 1209.97 L1148.46 1209.97 L1149.05 1209.97 L1149.63 1209.97 L1150.22 1209.97 L1150.81 1209.97 L1151.39 1209.97 L1151.98 1209.97 L1152.57 1209.97 L1153.15 1209.97 L1153.74 1209.97 L1154.33 1209.97 L1154.91 1209.97 L1155.5 1209.97 L1156.09 1209.97 L1156.67 1209.97 L1157.26 1209.97 L1157.84 1209.97 L1158.43 1209.97 L1159.02 1209.97 L1159.6 1209.97 L1160.19 1209.97 L1160.78 1209.97 L1161.36 1209.97 L1161.95 1209.97 L1162.54 1209.97 L1163.12 1209.97 L1163.71 1209.97 L1164.29 1209.97 L1164.88 1209.97 L1165.47 1209.97 L1166.05 1209.97 L1166.64 1209.97 L1167.23 1209.97 L1167.81 1209.97 L1168.4 1209.97 L1168.99 1209.97 L1169.57 1209.97 L1170.16 1209.97 L1170.75 1209.97 L1171.33 1209.97 L1171.92 1209.97 L1172.5 1209.97 L1173.09 1209.97 L1173.68 1209.97 L1174.26 1209.97 L1174.85 1209.97 L1175.44 1209.97 L1176.02 1209.97 L1176.61 1209.97 L1177.2 1209.97 L1177.78 1209.97 L1178.37 1209.97 L1178.96 1209.97 L1179.54 1209.97 L1180.13 1209.97 L1180.71 1209.97 L1181.3 1209.97 L1181.89 1209.97 L1182.47 1209.97 L1183.06 1209.97 L1183.65 1209.97 L1184.23 1209.97 L1184.82 1209.97 L1185.41 1209.97 L1185.99 1209.97 L1186.58 1209.97 L1187.16 1209.97 L1187.75 1209.97 L1188.34 1209.97 L1188.92 1209.97 L1189.51 1209.97 L1190.1 1209.97 L1190.68 1209.97 L1191.27 1209.97 L1191.86 1209.97 L1192.44 1209.97 L1193.03 1209.97 L1193.62 1209.97 L1194.2 1209.97 L1194.79 1209.97 L1195.37 1209.97 L1195.96 1209.97 L1196.55 1209.97 L1197.13 1209.97 L1197.72 1209.97 L1198.31 1209.97 L1198.89 1209.97 L1199.48 1209.97 L1200.07 1209.97 L1200.65 1209.97 L1201.24 1209.97 L1201.83 1209.97 L1202.41 1209.97 L1203 1209.97 L1203.58 1209.97 L1204.17 1209.97 L1204.76 1209.97 L1205.34 1209.97 L1205.93 1209.97 L1206.52 1209.97 L1207.1 1209.97 L1207.69 1209.97 L1208.28 1209.97 L1208.86 1209.97 L1209.45 1209.97 L1210.03 1209.97 L1210.62 1209.97 L1211.21 1209.97 L1211.79 1209.97 L1212.38 1209.97 L1212.97 1209.97 L1213.55 1209.97 L1214.14 1209.97 L1214.73 1209.97 L1215.31 1209.97 L1215.9 1209.97 L1216.49 1209.97 L1217.07 1209.97 L1217.66 1209.97 L1218.24 1209.97 L1218.83 1209.97 L1219.42 1209.97 L1220 1209.97 L1220.59 1209.97 L1221.18 1209.97 L1221.76 1209.97 L1222.35 1209.97 L1222.94 1209.97 L1223.52 1209.97 L1224.11 1209.97 L1224.7 1209.97 L1225.28 1209.97 L1225.87 1209.97 L1226.45 1209.97 L1227.04 1209.97 L1227.63 1209.97 L1228.21 1209.97 L1228.8 1209.97 L1229.39 1209.97 L1229.97 1209.97 L1230.56 1209.97 L1231.15 1209.97 L1231.73 1209.97 L1232.32 1209.97 L1232.91 1209.97 L1233.49 1209.97 L1234.08 1209.97 L1234.66 1209.97 L1235.25 1209.97 L1235.84 1209.97 L1236.42 1209.97 L1237.01 1209.97 L1237.6 1209.97 L1238.18 1209.97 L1238.77 1209.97 L1239.36 1209.97 L1239.94 1209.97 L1240.53 1209.97 L1241.11 1209.97 L1241.7 1209.97 L1242.29 1209.97 L1242.87 1209.97 L1243.46 1209.97 L1244.05 1209.97 L1244.63 1209.97 L1245.22 1209.97 L1245.81 1209.97 L1246.39 1209.97 L1246.98 1209.97 L1247.57 1209.97 L1248.15 1209.97 L1248.74 1209.97 L1249.32 1209.97 L1249.91 1209.97 L1250.5 1209.97 L1251.08 1209.97 L1251.67 1209.97 L1252.26 1209.97 L1252.84 1209.97 L1253.43 1209.97 L1254.02 1209.97 L1254.6 1209.97 L1255.19 1209.97 L1255.78 1209.97 L1256.36 1209.97 L1256.95 1209.97 L1257.53 1209.97 L1258.12 1209.97 L1258.71 1209.97 L1259.29 1209.97 L1259.88 1209.97 L1260.47 1209.97 L1261.05 1209.97 L1261.64 1209.97 L1262.23 1209.97 L1262.81 1209.97 L1263.4 1209.97 L1263.98 1209.97 L1264.57 1209.97 L1265.16 1209.97 L1265.74 1209.97 L1266.33 1209.97 L1266.92 1209.97 L1267.5 1209.97 L1268.09 1209.97 L1268.68 1209.97 L1269.26 1209.97 L1269.85 1209.97 L1270.44 1209.97 L1271.02 1209.97 L1271.61 1209.97 L1272.19 1209.97 L1272.78 1209.97 L1273.37 1209.97 L1273.95 1209.97 L1274.54 1209.97 L1275.13 1209.97 L1275.71 1209.97 L1276.3 1209.97 L1276.89 1209.97 L1277.47 1209.97 L1278.06 1209.97 L1278.65 1209.97 L1279.23 1209.97 L1279.82 1209.97 L1280.4 1209.97 L1280.99 1209.97 L1281.58 1209.97 L1282.16 1209.97 L1282.75 1209.97 L1283.34 1209.97 L1283.92 1209.97 L1284.51 1209.97 L1285.1 1209.97 L1285.68 1209.97 L1286.27 1209.97 L1286.86 1209.97 L1287.44 1209.97 L1288.03 1209.97 L1288.61 1209.97 L1289.2 1209.97 L1289.79 1209.97 L1290.37 1209.97 L1290.96 1209.97 L1291.55 1209.97 L1292.13 1209.97 L1292.72 1209.97 L1293.31 1209.97 L1293.89 1209.97 L1294.48 1209.97 L1295.06 1209.97 L1295.65 1209.97 L1296.24 1209.97 L1296.82 1209.97 L1297.41 1209.97 L1298 1209.97 L1298.58 1209.97 L1299.17 1209.97 L1299.76 1209.97 L1300.34 1209.97 L1300.93 1209.97 L1301.52 1209.97 L1302.1 1209.97 L1302.69 1209.97 L1303.27 1209.97 L1303.86 1209.97 L1304.45 1209.97 L1305.03 1209.97 L1305.62 1209.97 L1306.21 1209.97 L1306.79 1209.97 L1307.38 1209.97 L1307.97 1209.97 L1308.55 1209.97 L1309.14 1209.97 L1309.73 1209.97 L1310.31 1209.97 L1310.9 1209.97 L1311.48 1209.97 L1312.07 1209.97 L1312.66 1209.97 L1313.24 1209.97 L1313.83 1209.97 L1314.42 1209.97 L1315 1209.97 L1315.59 1209.97 L1316.18 1209.97 L1316.76 1209.97 L1317.35 1209.97 L1317.93 1209.97 L1318.52 1209.97 L1319.11 1209.97 L1319.69 1209.97 L1320.28 1209.97 L1320.87 1209.97 L1321.45 1209.97 L1322.04 1209.97 L1322.63 1209.97 L1323.21 1209.97 L1323.8 1209.97 L1324.39 1209.97 L1324.97 1209.97 L1325.56 1209.97 L1326.14 1209.97 L1326.73 1209.97 L1327.32 1209.97 L1327.9 1209.97 L1328.49 1209.97 L1329.08 1209.97 L1329.66 1209.97 L1330.25 1209.97 L1330.84 1209.97 L1331.42 1209.97 L1332.01 1209.97 L1332.6 1209.97 L1333.18 1209.97 L1333.77 1209.97 L1334.35 1209.97 L1334.94 1209.97 L1335.53 1209.97 L1336.11 1209.97 L1336.7 1209.97 L1337.29 1209.97 L1337.87 1209.97 L1338.46 1209.97 L1339.05 1209.97 L1339.63 1209.97 L1340.22 1209.97 L1340.8 1209.97 L1341.39 1209.97 L1341.98 1209.97 L1342.56 1209.97 L1343.15 1209.97 L1343.74 1209.97 L1344.32 1209.97 L1344.91 1209.97 L1345.5 1209.97 L1346.08 1209.97 L1346.67 1209.97 L1347.26 1209.97 L1347.84 1209.97 L1348.43 1209.97 L1349.01 1209.97 L1349.6 1209.97 L1350.19 1209.97 L1350.77 1209.97 L1351.36 1209.97 L1351.95 1209.97 L1352.53 1209.97 L1353.12 1209.97 L1353.71 1209.97 L1354.29 1209.97 L1354.88 1209.97 L1355.47 1209.97 L1356.05 1209.97 L1356.64 1209.97 L1357.22 1209.97 L1357.81 1209.97 L1358.4 1209.97 L1358.98 1209.97 L1359.57 1209.97 L1360.16 1209.97 L1360.74 1209.97 L1361.33 1209.97 L1361.92 1209.97 L1362.5 1209.97 L1363.09 1209.97 L1363.68 1209.97 L1364.26 1209.97 L1364.85 1209.97 L1365.43 1209.97 L1366.02 1209.97 L1366.61 1209.97 L1367.19 1209.97 L1367.78 1209.97 L1368.37 1209.97 L1368.95 1209.97 L1369.54 1209.97 L1370.13 1209.97 L1370.71 1209.97 L1371.3 1209.97 L1371.88 1209.97 L1372.47 1209.97 L1373.06 1209.97 L1373.64 1209.97 L1374.23 1209.97 L1374.82 1209.97 L1375.4 1209.97 L1375.99 1209.97 L1376.58 1209.97 L1377.16 1209.97 L1377.75 1209.97 L1378.34 1209.97 L1378.92 1209.97 L1379.51 1209.97 L1380.09 1209.97 L1380.68 1209.97 L1381.27 1209.97 L1381.85 1209.97 L1382.44 1209.97 L1383.03 1209.97 L1383.61 1209.97 L1384.2 1209.97 L1384.79 1209.97 L1385.37 1209.97 L1385.96 1209.97 L1386.55 1209.97 L1387.13 1209.97 L1387.72 1209.97 L1388.3 1209.97 L1388.89 1209.97 L1389.48 1209.97 L1390.06 1209.97 L1390.65 1209.97 L1391.24 1209.97 L1391.82 1209.97 L1392.41 1209.97 L1393 1209.97 L1393.58 1209.97 L1394.17 1209.97 L1394.75 1209.97 L1395.34 1209.97 L1395.93 1209.97 L1396.51 1209.97 L1397.1 1209.97 L1397.69 1209.97 L1398.27 1209.97 L1398.86 1209.97 L1399.45 1209.97 L1400.03 1209.97 L1400.62 1209.97 L1401.21 1209.97 L1401.79 1209.97 L1402.38 1209.97 L1402.96 1209.97 L1403.55 1209.97 L1404.14 1209.97 L1404.72 1209.97 L1405.31 1209.97 L1405.9 1209.97 L1406.48 1209.97 L1407.07 1209.97 L1407.66 1209.97 L1408.24 1209.97 L1408.83 1209.97 L1409.42 1209.97 L1410 1209.97 L1410.59 1209.97 L1411.17 1209.97 L1411.76 1209.97 L1412.35 1209.97 L1412.93 1209.97 L1413.52 1209.97 L1414.11 1209.97 L1414.69 1209.97 L1415.28 1209.97 L1415.87 1209.97 L1416.45 1209.97 L1417.04 1209.97 L1417.63 1209.97 L1418.21 1209.97 L1418.8 1209.97 L1419.38 1209.97 L1419.97 1209.97 L1420.56 1209.97 L1421.14 1209.97 L1421.73 1209.97 L1422.32 1209.97 L1422.9 1209.97 L1423.49 1209.97 L1424.08 1209.97 L1424.66 1209.97 L1425.25 1209.97 L1425.83 1209.97 L1426.42 1209.97 L1427.01 1209.97 L1427.59 1209.97 L1428.18 1209.97 L1428.77 1209.97 L1429.35 1209.97 L1429.94 1209.97 L1430.53 1209.97 L1431.11 1209.97 L1431.7 1209.97 L1432.29 1209.97 L1432.87 1209.97 L1433.46 1209.97 L1434.04 1209.97 L1434.63 1209.97 L1435.22 1209.97 L1435.8 1209.97 L1436.39 1209.97 L1436.98 1209.97 L1437.56 1209.97 L1438.15 1209.97 L1438.74 1209.97 L1439.32 1209.97 L1439.91 1209.97 L1440.5 1209.97 L1441.08 1209.97 L1441.67 1209.97 L1442.25 1209.97 L1442.84 1209.97 L1443.43 1209.97 L1444.01 1209.97 L1444.6 1209.97 L1445.19 1209.97 L1445.77 1209.97 L1446.36 1209.97 L1446.95 1209.97 L1447.53 1209.97 L1448.12 1209.97 L1448.7 1209.97 L1449.29 1209.97 L1449.88 1209.97 L1450.46 1209.97 L1451.05 1209.97 L1451.64 1209.97 L1452.22 1209.97 L1452.81 1209.97 L1453.4 1209.97 L1453.98 1209.97 L1454.57 1209.97 L1455.16 1209.97 L1455.74 1209.97 L1456.33 1209.97 L1456.91 1209.97 L1457.5 1209.97 L1458.09 1209.97 L1458.67 1209.97 L1459.26 1209.97 L1459.85 1209.97 L1460.43 1209.97 L1461.02 1209.97 L1461.61 1209.97 L1462.19 1209.97 L1462.78 1209.97 L1463.37 1209.97 L1463.95 1209.97 L1464.54 1209.97 L1465.12 1209.97 L1465.71 1209.97 L1466.3 1209.97 L1466.88 1209.97 L1467.47 1209.97 L1468.06 1209.97 L1468.64 1209.97 L1469.23 1209.97 L1469.82 1209.97 L1470.4 1209.97 L1470.99 1209.97 L1471.57 1209.97 L1472.16 1209.97 L1472.75 1209.97 L1473.33 1209.97 L1473.92 1209.97 L1474.51 1209.97 L1475.09 1209.97 L1475.68 1209.97 L1476.27 1209.97 L1476.85 1209.97 L1477.44 1209.97 L1478.03 1209.97 L1478.61 1209.97 L1479.2 1209.97 L1479.78 1209.97 L1480.37 1209.97 L1480.96 1209.97 L1481.54 1209.97 L1482.13 1209.97 L1482.72 1209.97 L1483.3 1209.97 L1483.89 1209.97 L1484.48 1209.97 L1485.06 1209.97 L1485.65 1209.97 L1486.24 1209.97 L1486.82 1209.97 L1487.41 1209.97 L1487.99 1209.97 L1488.58 1209.97 L1489.17 1209.97 L1489.75 1209.97 L1490.34 1209.97 L1490.93 1209.97 L1491.51 1209.97 L1492.1 1209.97 L1492.69 1209.97 L1493.27 1209.97 L1493.86 1209.97 L1494.45 1209.97 L1495.03 1209.97 L1495.62 1209.97 L1496.2 1209.97 L1496.79 1209.97 L1497.38 1209.97 L1497.96 1209.97 L1498.55 1209.97 L1499.14 1209.97 L1499.72 1209.97 L1500.31 1209.97 L1500.9 1209.97 L1501.48 1209.97 L1502.07 1209.97 L1502.65 1209.97 L1503.24 1209.97 L1503.83 1209.97 L1504.41 1209.97 L1505 1209.97 L1505.59 1209.97 L1506.17 1209.97 L1506.76 1209.97 L1507.35 1209.97 L1507.93 1209.97 L1508.52 1209.97 L1509.11 1209.97 L1509.69 1209.97 L1510.28 1209.97 L1510.86 1209.97 L1511.45 1209.97 L1512.04 1209.97 L1512.62 1209.97 L1513.21 1209.97 L1513.8 1209.97 L1514.38 1209.97 L1514.97 1209.97 L1515.56 1209.97 L1516.14 1209.97 L1516.73 1209.97 L1517.32 1209.97 L1517.9 1209.97 L1518.49 1209.97 L1519.07 1209.97 L1519.66 1209.97 L1520.25 1209.97 L1520.83 1209.97 L1521.42 1209.97 L1522.01 1209.97 L1522.59 1209.97 L1523.18 1209.97 L1523.77 1209.97 L1524.35 1209.97 L1524.94 1209.97 L1525.52 1209.97 L1526.11 1209.97 L1526.7 1209.97 L1527.28 1209.97 L1527.87 1209.97 L1528.46 1209.97 L1529.04 1209.97 L1529.63 1209.97 L1530.22 1209.97 L1530.8 1209.97 L1531.39 1209.97 L1531.98 1209.97 L1532.56 1209.97 L1533.15 1209.97 L1533.73 1209.97 L1534.32 1209.97 L1534.91 1209.97 L1535.49 1209.97 L1536.08 1209.97 L1536.67 1209.97 L1537.25 1209.97 L1537.84 1209.97 L1538.43 1209.97 L1539.01 1209.97 L1539.6 1209.97 L1540.19 1209.97 L1540.77 1209.97 L1541.36 1209.97 L1541.94 1209.97 L1542.53 1209.97 L1543.12 1209.97 L1543.7 1209.97 L1544.29 1209.97 L1544.88 1209.97 L1545.46 1209.97 L1546.05 1209.97 L1546.64 1209.97 L1547.22 1209.97 L1547.81 1209.97 L1548.4 1209.97 L1548.98 1209.97 L1549.57 1209.97 L1550.15 1209.97 L1550.74 1209.97 L1551.33 1209.97 L1551.91 1209.97 L1552.5 1209.97 L1553.09 1209.97 L1553.67 1209.97 L1554.26 1209.97 L1554.85 1209.97 L1555.43 1209.97 L1556.02 1209.97 L1556.6 1209.97 L1557.19 1209.97 L1557.78 1209.97 L1558.36 1209.97 L1558.95 1209.97 L1559.54 1209.97 L1560.12 1209.97 L1560.71 1209.97 L1561.3 1209.97 L1561.88 1209.97 L1562.47 1209.97 L1563.06 1209.97 L1563.64 1209.97 L1564.23 1209.97 L1564.81 1209.97 L1565.4 1209.97 L1565.99 1209.97 L1566.57 1209.97 L1567.16 1209.97 L1567.75 1209.97 L1568.33 1209.97 L1568.92 1209.97 L1569.51 1209.97 L1570.09 1209.97 L1570.68 1209.97 L1571.27 1209.97 L1571.85 1209.97 L1572.44 1209.97 L1573.02 1209.97 L1573.61 1209.97 L1574.2 1209.97 L1574.78 1209.97 L1575.37 1209.97 L1575.96 1209.97 L1576.54 1209.97 L1577.13 1209.97 L1577.72 1209.97 L1578.3 1209.97 L1578.89 1209.97 L1579.47 1209.97 L1580.06 1209.97 L1580.65 1209.97 L1581.23 1209.97 L1581.82 1209.97 L1582.41 1209.97 L1582.99 1209.97 L1583.58 1209.97 L1584.17 1209.97 L1584.75 1209.97 L1585.34 1209.97 L1585.93 1209.97 L1586.51 1209.97 L1587.1 1209.97 L1587.68 1209.97 L1588.27 1209.97 L1588.86 1209.97 L1589.44 1209.97 L1590.03 1209.97 L1590.62 1209.97 L1591.2 1209.97 L1591.79 1209.97 L1592.38 1209.97 L1592.96 1209.97 L1593.55 1209.97 L1594.14 1209.97 L1594.72 1209.97 L1595.31 1209.97 L1595.89 1209.97 L1596.48 1209.97 L1597.07 1209.97 L1597.65 1209.97 L1598.24 1209.97 L1598.83 1209.97 L1599.41 1209.97 L1600 1209.97 L1600.59 1209.97 L1601.17 1209.97 L1601.76 1209.97 L1602.34 1209.97 L1602.93 1209.97 L1603.52 1209.97 L1604.1 1209.97 L1604.69 1209.97 L1605.28 1209.97 L1605.86 1209.97 L1606.45 1209.97 L1607.04 1209.97 L1607.62 1209.97 L1608.21 1209.97 L1608.8 1209.97 L1609.38 1209.97 L1609.97 1209.97 L1610.55 1209.97 L1611.14 1209.97 L1611.73 1209.97 L1612.31 1209.97 L1612.9 1209.97 L1613.49 1209.97 L1614.07 1209.97 L1614.66 1209.97 L1615.25 1209.97 L1615.83 1209.97 L1616.42 1209.97 L1617.01 1209.97 L1617.59 1209.97 L1618.18 1209.97 L1618.76 1209.97 L1619.35 1209.97 L1619.94 1209.97 L1620.52 1209.97 L1621.11 1209.97 L1621.7 1209.97 L1622.28 1209.97 L1622.87 1209.97 L1623.46 1209.97 L1624.04 1209.97 L1624.63 1209.97 L1625.22 1209.97 L1625.8 1209.97 L1626.39 1209.97 L1626.97 1209.97 L1627.56 1209.97 L1628.15 1209.97 L1628.73 1209.97 L1629.32 1209.97 L1629.91 1209.97 L1630.49 1209.97 L1631.08 1209.97 L1631.67 1209.97 L1632.25 1209.97 L1632.84 1209.97 L1633.42 1209.97 L1634.01 1209.97 L1634.6 1209.97 L1635.18 1209.97 L1635.77 1209.97 L1636.36 1209.97 L1636.94 1209.97 L1637.53 1209.97 L1638.12 1209.97 L1638.7 1209.97 L1639.29 1209.97 L1639.88 1209.97 L1640.46 1209.97 L1641.05 1209.97 L1641.63 1209.97 L1642.22 1209.97 L1642.81 1209.97 L1643.39 1209.97 L1643.98 1209.97 L1644.57 1209.97 L1645.15 1209.97 L1645.74 1209.97 L1646.33 1209.97 L1646.91 1209.97 L1647.5 1209.97 L1648.09 1209.97 L1648.67 1209.97 L1649.26 1209.97 L1649.84 1209.97 L1650.43 1209.97 L1651.02 1209.97 L1651.6 1209.97 L1652.19 1209.97 L1652.78 1209.97 L1653.36 1209.97 L1653.95 1209.97 L1654.54 1209.97 L1655.12 1209.97 L1655.71 1209.97 L1656.29 1209.97 L1656.88 1209.97 L1657.47 1209.97 L1658.05 1209.97 L1658.64 1209.97 L1659.23 1209.97 L1659.81 1209.97 L1660.4 1209.97 L1660.99 1209.97 L1661.57 1209.97 L1662.16 1209.97 L1662.75 1209.97 L1663.33 1209.97 L1663.92 1209.97 L1664.5 1209.97 L1665.09 1209.97 L1665.68 1209.97 L1666.26 1209.97 L1666.85 1209.97 L1667.44 1209.97 L1668.02 1209.97 L1668.61 1209.97 L1669.2 1209.97 L1669.78 1209.97 L1670.37 1209.97 L1670.96 1209.97 L1671.54 1209.97 L1672.13 1209.97 L1672.71 1209.97 L1673.3 1209.97 L1673.89 1209.97 L1674.47 1209.97 L1675.06 1209.97 L1675.65 1209.97 L1676.23 1209.97 L1676.82 1209.97 L1677.41 1209.97 L1677.99 1209.97 L1678.58 1209.97 L1679.17 1209.97 L1679.75 1209.97 L1680.34 1209.97 L1680.92 1209.97 L1681.51 1209.97 L1682.1 1209.97 L1682.68 1209.97 L1683.27 1209.97 L1683.86 1209.97 L1684.44 1209.97 L1685.03 1209.97 L1685.62 1209.97 L1686.2 1209.97 L1686.79 1209.97 L1687.37 1209.97 L1687.96 1209.97 L1688.55 1209.97 L1689.13 1209.97 L1689.72 1209.97 L1690.31 1209.97 L1690.89 1209.97 L1691.48 1209.97 L1692.07 1209.97 L1692.65 1209.97 L1693.24 1209.97 L1693.83 1209.97 L1694.41 1209.97 L1695 1209.97 L1695.58 1209.97 L1696.17 1209.97 L1696.76 1209.97 L1697.34 1209.97 L1697.93 1209.97 L1698.52 1209.97 L1699.1 1209.97 L1699.69 1209.97 L1700.28 1209.97 L1700.86 1209.97 L1701.45 1209.97 L1702.04 1209.97 L1702.62 1209.97 L1703.21 1209.97 L1703.79 1209.97 L1704.38 1209.97 L1704.97 1209.97 L1705.55 1209.97 L1706.14 1209.97 L1706.73 1209.97 L1707.31 1209.97 L1707.9 1209.97 L1708.49 1209.97 L1709.07 1209.97 L1709.66 1209.97 L1710.24 1209.97 L1710.83 1209.97 L1711.42 1209.97 L1712 1209.97 L1712.59 1209.97 L1713.18 1209.97 L1713.76 1209.97 L1714.35 1209.97 L1714.94 1209.97 L1715.52 1209.97 L1716.11 1209.97 L1716.7 1209.97 L1717.28 1209.97 L1717.87 1209.97 L1718.45 1209.97 L1719.04 1209.97 L1719.63 1209.97 L1720.21 1209.97 L1720.8 1209.97 L1721.39 1209.97 L1721.97 1209.97 L1722.56 1209.97 L1723.15 1209.97 L1723.73 1209.97 L1724.32 1209.97 L1724.91 1209.97 L1725.49 1209.97 L1726.08 1209.97 L1726.66 1209.97 L1727.25 1209.97 L1727.84 1209.97 L1728.42 1209.97 L1729.01 1209.97 L1729.6 1209.97 L1730.18 1209.97 L1730.77 1209.97 L1731.36 1209.97 L1731.94 1209.97 L1732.53 1209.97 L1733.11 1209.97 L1733.7 1209.97 L1734.29 1209.97 L1734.87 1209.97 L1735.46 1209.97 L1736.05 1209.97 L1736.63 1209.97 L1737.22 1209.97 L1737.81 1209.97 L1738.39 1209.97 L1738.98 1209.97 L1739.57 1209.97 L1740.15 1209.97 L1740.74 1209.97 L1741.32 1209.97 L1741.91 1209.97 L1742.5 1209.97 L1743.08 1209.97 L1743.67 1209.97 L1744.26 1209.97 L1744.84 1209.97 L1745.43 1209.97 L1746.02 1209.97 L1746.6 1209.97 L1747.19 1209.97 L1747.78 1209.97 L1748.36 1209.97 L1748.95 1209.97 L1749.53 1209.97 L1750.12 1209.97 L1750.71 1209.97 L1751.29 1209.97 L1751.88 1209.97 L1752.47 1209.97 L1753.05 1209.97 L1753.64 1209.97 L1754.23 1209.97 L1754.81 1209.97 L1755.4 1209.97 L1755.99 1209.97 L1756.57 1209.97 L1757.16 1209.97 L1757.74 1209.97 L1758.33 1209.97 L1758.92 1209.97 L1759.5 1209.97 L1760.09 1209.97 L1760.68 1209.97 L1761.26 1209.97 L1761.85 1209.97 L1762.44 1209.97 L1763.02 1209.97 L1763.61 1209.97 L1764.19 1209.97 L1764.78 1209.97 L1765.37 1209.97 L1765.95 1209.97 L1766.54 1209.97 L1767.13 1209.97 L1767.71 1209.97 L1768.3 1209.97 L1768.89 1209.97 L1769.47 1209.97 L1770.06 1209.97 L1770.65 1209.97 L1771.23 1209.97 L1771.82 1209.97 L1772.4 1209.97 L1772.99 1209.97 L1773.58 1209.97 L1774.16 1209.97 L1774.75 1209.97 L1775.34 1209.97 L1775.92 1209.97 L1776.51 1209.97 L1777.1 1209.97 L1777.68 1209.97 L1778.27 1209.97 L1778.86 1209.97 L1779.44 1209.97 L1780.03 1209.97 L1780.61 1209.97 L1781.2 1209.97 L1781.79 1209.97 L1782.37 1209.97 L1782.96 1209.97 L1783.55 1209.97 L1784.13 1209.97 L1784.72 1209.97 L1785.31 1209.97 L1785.89 1209.97 L1786.48 1209.97 L1787.06 1209.97 L1787.65 1209.97 L1788.24 1209.97 L1788.82 1209.97 L1789.41 1209.97 L1790 1209.97 L1790.58 1209.97 L1791.17 1209.97 L1791.76 1209.97 L1792.34 1209.97 L1792.93 1209.97 L1793.52 1209.97 L1794.1 1209.97 L1794.69 1209.97 L1795.27 1209.97 L1795.86 1209.97 L1796.45 1209.97 L1797.03 1209.97 L1797.62 1209.97 L1798.21 1209.97 L1798.79 1209.97 L1799.38 1209.97 L1799.97 1209.97 L1800.55 1209.97 L1801.14 1209.97 L1801.73 1209.97 L1802.31 1209.97 L1802.9 1209.97 L1803.48 1209.97 L1804.07 1209.97 L1804.66 1209.97 L1805.24 1209.97 L1805.83 1209.97 L1806.42 1209.97 L1807 1209.97 L1807.59 1209.97 L1808.18 1209.97 L1808.76 1209.97 L1809.35 1209.97 L1809.94 1209.97 L1810.52 1209.97 L1811.11 1209.97 L1811.69 1209.97 L1812.28 1209.97 L1812.87 1209.97 L1813.45 1209.97 L1814.04 1209.97 L1814.63 1209.97 L1815.21 1209.97 L1815.8 1209.97 L1816.39 1209.97 L1816.97 1209.97 L1817.56 1209.97 L1818.14 1209.97 L1818.73 1209.97 L1819.32 1209.97 L1819.9 1209.97 L1820.49 1209.97 L1821.08 1209.97 L1821.66 1209.97 L1822.25 1209.97 L1822.84 1209.97 L1823.42 1209.97 L1824.01 1209.97 L1824.6 1209.97 L1825.18 1209.97 L1825.77 1209.97 L1826.35 1209.97 L1826.94 1209.97 L1827.53 1209.97 L1828.11 1209.97 L1828.7 1209.97 L1829.29 1209.97 L1829.87 1209.97 L1830.46 1209.97 L1831.05 1209.97 L1831.63 1209.97 L1832.22 1209.97 L1832.81 1209.97 L1833.39 1209.97 L1833.98 1209.97 L1834.56 1209.97 L1835.15 1209.97 L1835.74 1209.97 L1836.32 1209.97 L1836.91 1209.97 L1837.5 1209.97 L1838.08 1209.97 L1838.67 1209.97 L1839.26 1209.97 L1839.84 1209.97 L1840.43 1209.97 L1841.01 1209.97 L1841.6 1209.97 L1842.19 1209.97 L1842.77 1209.97 L1843.36 1209.97 L1843.95 1209.97 L1844.53 1209.97 L1845.12 1209.97 L1845.71 1209.97 L1846.29 1209.97 L1846.88 1209.97 L1847.47 1209.97 L1848.05 1209.97 L1848.64 1209.97 L1849.22 1209.97 L1849.81 1209.97 L1850.4 1209.97 L1850.98 1209.97 L1851.57 1209.97 L1852.16 1209.97 L1852.74 1209.97 L1853.33 1209.97 L1853.92 1209.97 L1854.5 1209.97 L1855.09 1209.97 L1855.68 1209.97 L1856.26 1209.97 L1856.85 1209.97 L1857.43 1209.97 L1858.02 1209.97 L1858.61 1209.97 L1859.19 1209.97 L1859.78 1209.97 L1860.37 1209.97 L1860.95 1209.97 L1861.54 1209.97 L1862.13 1209.97 L1862.71 1209.97 L1863.3 1209.97 L1863.88 1209.97 L1864.47 1209.97 L1865.06 1209.97 L1865.64 1209.97 L1866.23 1209.97 L1866.82 1209.97 L1867.4 1209.97 L1867.99 1209.97 L1868.58 1209.97 L1869.16 1209.97 L1869.75 1209.97 L1870.34 1209.97 L1870.92 1209.97 L1871.51 1209.97 L1872.09 1209.97 L1872.68 1209.97 L1873.27 1209.97 L1873.85 1209.97 L1874.44 1209.97 L1875.03 1209.97 L1875.61 1209.97 L1876.2 1209.97 L1876.79 1209.97 L1877.37 1209.97 L1877.96 1209.97 L1878.55 1209.97 L1879.13 1209.97 L1879.72 1209.97 L1880.3 1209.97 L1880.89 1209.97 L1881.48 1209.97 L1882.06 1209.97 L1882.65 1209.97 L1883.24 1209.97 L1883.82 1209.97 L1884.41 1209.97 L1885 1209.97 L1885.58 1209.97 L1886.17 1209.97 L1886.76 1209.97 L1887.34 1209.97 L1887.93 1209.97 L1888.51 1209.97 L1889.1 1209.97 L1889.69 1209.97 L1890.27 1209.97 L1890.86 1209.97 L1891.45 1209.97 L1892.03 1209.97 L1892.62 1209.97 L1893.21 1209.97 L1893.79 1209.97 L1894.38 1209.97 L1894.96 1209.97 L1895.55 1209.97 L1896.14 1209.97 L1896.72 1209.97 L1897.31 1209.97 L1897.9 1209.97 L1898.48 1209.97 L1899.07 1209.97 L1899.66 1209.97 L1900.24 1209.97 L1900.83 1209.97 L1901.42 1209.97 L1902 1209.97 L1902.59 1209.97 L1903.17 1209.97 L1903.76 1209.97 L1904.35 1209.97 L1904.93 1209.97 L1905.52 1209.97 L1906.11 1209.97 L1906.69 1209.97 L1907.28 1209.97 L1907.87 1209.97 L1908.45 1209.97 L1909.04 1209.97 L1909.63 1209.97 L1910.21 1209.97 L1910.8 1209.97 L1911.38 1209.97 L1911.97 1209.97 L1912.56 1209.97 L1913.14 1209.97 L1913.73 1209.97 L1914.32 1209.97 L1914.9 1209.97 L1915.49 1209.97 L1916.08 1209.97 L1916.66 1209.97 L1917.25 1209.97 L1917.83 1209.97 L1918.42 1209.97 L1919.01 1209.97 L1919.59 1209.97 L1920.18 1209.97 L1920.77 1209.97 L1921.35 1209.97 L1921.94 1209.97 L1922.53 1209.97 L1923.11 1209.97 L1923.7 1209.97 L1924.29 1209.97 L1924.87 1209.97 L1925.46 1209.97 L1926.04 1209.97 L1926.63 1209.97 L1927.22 1209.97 L1927.8 1209.97 L1928.39 1209.97 L1928.98 1209.97 L1929.56 1209.97 L1930.15 1209.97 L1930.74 1209.97 L1931.32 1209.97 L1931.91 1209.97 L1932.5 1209.97 L1933.08 1209.97 L1933.67 1209.97 L1934.25 1209.97 L1934.84 1209.97 L1935.43 1209.97 L1936.01 1209.97 L1936.6 1209.97 L1937.19 1209.97 L1937.77 1209.97 L1938.36 1209.97 L1938.95 1209.97 L1939.53 1209.97 L1940.12 1209.97 L1940.71 1209.97 L1941.29 1209.97 L1941.88 1209.97 L1942.46 1209.97 L1943.05 1209.97 L1943.64 1209.97 L1944.22 1209.97 L1944.81 1209.97 L1945.4 1209.97 L1945.98 1209.97 L1946.57 1209.97 L1947.16 1209.97 L1947.74 1209.97 L1948.33 1209.97 L1948.91 1209.97 L1949.5 1209.97 L1950.09 1209.97 L1950.67 1209.97 L1951.26 1209.97 L1951.85 1209.97 L1952.43 1209.97 L1953.02 1209.97 L1953.61 1209.97 L1954.19 1209.97 L1954.78 1209.97 L1955.37 1209.97 L1955.95 1209.97 L1956.54 1209.97 L1957.12 1209.97 L1957.71 1209.97 L1958.3 1209.97 L1958.88 1209.97 L1959.47 1209.97 L1960.06 1209.97 L1960.64 1209.97 L1961.23 1209.97 L1961.82 1209.97 L1962.4 1209.97 L1962.99 1209.97 L1963.58 1209.97 L1964.16 1209.97 L1964.75 1209.97 L1965.33 1209.97 L1965.92 1209.97 L1966.51 1209.97 L1967.09 1209.97 L1967.68 1209.97 L1968.27 1209.97 L1968.85 1209.97 L1969.44 1209.97 L1970.03 1209.97 L1970.61 1209.97 L1971.2 1209.97 L1971.78 1209.97 L1972.37 1209.97 L1972.96 1209.97 L1973.54 1209.97 L1974.13 1209.97 L1974.72 1209.97 L1975.3 1209.97 L1975.89 1209.97 L1976.48 1209.97 L1977.06 1209.97 L1977.65 1209.97 L1978.24 1209.97 L1978.82 1209.97 L1979.41 1209.97 L1979.99 1209.97 L1980.58 1209.97 L1981.17 1209.97 L1981.75 1209.97 L1982.34 1209.97 L1982.93 1209.97 L1983.51 1209.97 L1984.1 1209.97 L1984.69 1209.97 L1985.27 1209.97 L1985.86 1209.97 L1986.45 1209.97 L1987.03 1209.97 L1987.62 1209.97 L1988.2 1209.97 L1988.79 1209.97 L1989.38 1209.97 L1989.96 1209.97 L1990.55 1209.97 L1991.14 1209.97 L1991.72 1209.97 L1992.31 1209.97 L1992.9 1209.97 L1993.48 1209.97 L1994.07 1209.97 L1994.65 1209.97 L1995.24 1209.97 L1995.83 1209.97 L1996.41 1209.97 L1997 1209.97 L1997.59 1209.97 L1998.17 1209.97 L1998.76 1209.97 L1999.35 1209.97 L1999.93 1209.97 L2000.52 1209.97 L2001.11 1209.97 L2001.69 1209.97 L2002.28 1209.97 L2002.86 1209.97 L2003.45 1209.97 L2004.04 1209.97 L2004.62 1209.97 L2005.21 1209.97 L2005.8 1209.97 L2006.38 1209.97 L2006.97 1209.97 L2007.56 1209.97 L2008.14 1209.97 L2008.73 1209.97 L2009.32 1209.97 L2009.9 1209.97 L2010.49 1209.97 L2011.07 1209.97 L2011.66 1209.97 L2012.25 1209.97 L2012.83 1209.97 L2013.42 1209.97 L2014.01 1209.97 L2014.59 1209.97 L2015.18 1209.97 L2015.77 1209.97 L2016.35 1209.97 L2016.94 1209.97 L2017.53 1209.97 L2018.11 1209.97 L2018.7 1209.97 L2019.28 1209.97 L2019.87 1209.97 L2020.46 1209.97 L2021.04 1209.97 L2021.63 1209.97 L2022.22 1209.97 L2022.8 1209.97 L2023.39 1209.97 L2023.98 1209.97 L2024.56 1209.97 L2025.15 1209.97 L2025.73 1209.97 L2026.32 1209.97 L2026.91 1209.97 L2027.49 1209.97 L2028.08 1209.97 L2028.67 1209.97 L2029.25 1209.97 L2029.84 1209.97 L2030.43 1209.97 L2031.01 1209.97 L2031.6 1209.97 L2032.19 1209.97 L2032.77 1209.97 L2033.36 1209.97 L2033.94 1209.97 L2034.53 1209.97 L2035.12 1209.97 L2035.7 1209.97 L2036.29 1209.97 L2036.88 1209.97 L2037.46 1209.97 L2038.05 1209.97 L2038.64 1209.97 L2039.22 1209.97 L2039.81 1209.97 L2040.4 1209.97 L2040.98 1209.97 L2041.57 1209.97 L2042.15 1209.97 L2042.74 1209.97 L2043.33 1209.97 L2043.91 1209.97 L2044.5 1209.97 L2045.09 1209.97 L2045.67 1209.97 L2046.26 1209.97 L2046.85 1209.97 L2047.43 1209.97 L2048.02 1209.97 L2048.6 1209.97 L2049.19 1209.97 L2049.78 1209.97 L2050.36 1209.97 L2050.95 1209.97 L2051.54 1209.97 L2052.12 1209.97 L2052.71 1209.97 L2053.3 1209.97 L2053.88 1209.97 L2054.47 1209.97 L2055.06 1209.97 L2055.64 1209.97 L2056.23 1209.97 L2056.81 1209.97 L2057.4 1209.97 L2057.99 1209.97 L2058.57 1209.97 L2059.16 1209.97 L2059.75 1209.97 L2060.33 1209.97 L2060.92 1209.97 L2061.51 1209.97 L2062.09 1209.97 L2062.68 1209.97 L2063.27 1209.97 L2063.85 1209.97 L2064.44 1209.97 L2065.02 1209.97 L2065.61 1209.97 L2066.2 1209.97 L2066.78 1209.97 L2067.37 1209.97 L2067.96 1209.97 L2068.54 1209.97 L2069.13 1209.97 L2069.72 1209.97 L2070.3 1209.97 L2070.89 1209.97 L2071.48 1209.97 L2072.06 1209.97 L2072.65 1209.97 L2073.23 1209.97 L2073.82 1209.97 L2074.41 1209.97 L2074.99 1209.97 L2075.58 1209.97 L2076.17 1209.97 L2076.75 1209.97 L2077.34 1209.97 L2077.93 1209.97 L2078.51 1209.97 L2079.1 1209.97 L2079.68 1209.97 L2080.27 1209.97 L2080.86 1209.97 L2081.44 1209.97 L2082.03 1209.97 L2082.62 1209.97 L2083.2 1209.97 L2083.79 1209.97 L2084.38 1209.97 L2084.96 1209.97 L2085.55 1209.97 L2086.14 1209.97 L2086.72 1209.97 L2087.31 1209.97 L2087.89 1209.97 L2088.48 1209.97 L2089.07 1209.97 L2089.65 1209.97 L2090.24 1209.97 L2090.83 1209.97 L2091.41 1209.97 L2092 1209.97 L2092.59 1209.97 L2093.17 1209.97 L2093.76 1209.97 L2094.35 1209.97 L2094.93 1209.97 L2095.52 1209.97 L2096.1 1209.97 L2096.69 1209.97 L2097.28 1209.97 L2097.86 1209.97 L2098.45 1209.97 L2099.04 1209.97 L2099.62 1209.97 L2100.21 1209.97 L2100.8 1209.97 L2101.38 1209.97 L2101.97 1209.97 L2102.55 1209.97 L2103.14 1209.97 L2103.73 1209.97 L2104.31 1209.97 L2104.9 1209.97 L2105.49 1209.97 L2106.07 1209.97 L2106.66 1209.97 L2107.25 1209.97 L2107.83 1209.97 L2108.42 1209.97 L2109.01 1209.97 L2109.59 1209.97 L2110.18 1209.97 L2110.76 1209.97 L2111.35 1209.97 L2111.94 1209.97 L2112.52 1209.97 L2113.11 1209.97 L2113.7 1209.97 L2114.28 1209.97 L2114.87 1209.97 L2115.46 1209.97 L2116.04 1209.97 L2116.63 1209.97 L2117.22 1209.97 L2117.8 1209.97 L2118.39 1209.97 L2118.97 1209.97 L2119.56 1209.97 L2120.15 1209.97 L2120.73 1209.97 L2121.32 1209.97 L2121.91 1209.97 L2122.49 1209.97 L2123.08 1209.97 L2123.67 1209.97 L2124.25 1209.97 L2124.84 1209.97 L2125.42 1209.97 L2126.01 1209.97 L2126.6 1209.97 L2127.18 1209.97 L2127.77 1209.97 L2128.36 1209.97 L2128.94 1209.97 L2129.53 1209.97 L2130.12 1209.97 L2130.7 1209.97 L2131.29 1209.97 L2131.88 1209.97 L2132.46 1209.97 L2133.05 1209.97 L2133.63 1209.97 L2134.22 1209.97 L2134.81 1209.97 L2135.39 1209.97 L2135.98 1209.97 L2136.57 1209.97 L2137.15 1209.97 L2137.74 1209.97 L2138.33 1209.97 L2138.91 1209.97 L2139.5 1209.97 L2140.09 1209.97 L2140.67 1209.97 L2141.26 1209.97 L2141.84 1209.97 L2142.43 1209.97 L2143.02 1209.97 L2143.6 1209.97 L2144.19 1209.97 L2144.78 1209.97 L2145.36 1209.97 L2145.95 1209.97 L2146.54 1209.97 L2147.12 1209.97 L2147.71 1209.97 L2148.3 1209.97 L2148.88 1209.97 L2149.47 1209.97 L2150.05 1209.97 L2150.64 1209.97 L2151.23 1209.97 L2151.81 1209.97 L2152.4 1209.97 L2152.99 1209.97 L2153.57 1209.97 L2154.16 1209.97 L2154.75 1209.97 L2155.33 1209.97 L2155.92 1209.97 L2156.5 1209.97 L2157.09 1209.97 L2157.68 1209.97 L2158.26 1209.97 L2158.26 1209.41 L2157.68 1209.41 L2157.09 1209.41 L2156.5 1209.41 L2155.92 1209.41 L2155.33 1209.41 L2154.75 1209.41 L2154.16 1209.41 L2153.57 1209.41 L2152.99 1209.41 L2152.4 1209.41 L2151.81 1209.41 L2151.23 1209.41 L2150.64 1209.41 L2150.05 1209.41 L2149.47 1209.41 L2148.88 1209.41 L2148.3 1209.41 L2147.71 1209.41 L2147.12 1209.41 L2146.54 1209.41 L2145.95 1209.41 L2145.36 1209.41 L2144.78 1209.41 L2144.19 1209.41 L2143.6 1209.41 L2143.02 1209.41 L2142.43 1209.41 L2141.84 1209.41 L2141.26 1209.41 L2140.67 1209.41 L2140.09 1209.41 L2139.5 1209.41 L2138.91 1209.41 L2138.33 1209.41 L2137.74 1209.41 L2137.15 1209.41 L2136.57 1209.41 L2135.98 1209.41 L2135.39 1209.41 L2134.81 1209.41 L2134.22 1209.41 L2133.63 1209.41 L2133.05 1209.41 L2132.46 1209.41 L2131.88 1209.41 L2131.29 1209.41 L2130.7 1209.41 L2130.12 1209.41 L2129.53 1209.41 L2128.94 1209.41 L2128.36 1209.41 L2127.77 1209.41 L2127.18 1209.41 L2126.6 1209.41 L2126.01 1209.41 L2125.42 1209.41 L2124.84 1209.41 L2124.25 1209.41 L2123.67 1209.41 L2123.08 1209.41 L2122.49 1209.41 L2121.91 1209.41 L2121.32 1209.41 L2120.73 1209.41 L2120.15 1209.41 L2119.56 1209.41 L2118.97 1209.41 L2118.39 1209.41 L2117.8 1209.41 L2117.22 1209.41 L2116.63 1209.41 L2116.04 1209.41 L2115.46 1209.41 L2114.87 1209.41 L2114.28 1209.41 L2113.7 1209.41 L2113.11 1209.41 L2112.52 1209.41 L2111.94 1209.41 L2111.35 1209.41 L2110.76 1209.41 L2110.18 1209.41 L2109.59 1209.41 L2109.01 1209.41 L2108.42 1209.41 L2107.83 1209.41 L2107.25 1209.41 L2106.66 1209.41 L2106.07 1209.41 L2105.49 1209.41 L2104.9 1209.41 L2104.31 1209.41 L2103.73 1209.41 L2103.14 1209.41 L2102.55 1209.41 L2101.97 1209.41 L2101.38 1209.41 L2100.8 1209.41 L2100.21 1209.41 L2099.62 1209.41 L2099.04 1209.41 L2098.45 1209.41 L2097.86 1209.41 L2097.28 1209.41 L2096.69 1209.41 L2096.1 1209.41 L2095.52 1209.41 L2094.93 1209.41 L2094.35 1209.41 L2093.76 1209.41 L2093.17 1209.41 L2092.59 1209.41 L2092 1209.41 L2091.41 1209.41 L2090.83 1209.41 L2090.24 1209.41 L2089.65 1209.41 L2089.07 1209.41 L2088.48 1209.41 L2087.89 1209.41 L2087.31 1209.41 L2086.72 1209.41 L2086.14 1209.41 L2085.55 1209.41 L2084.96 1209.41 L2084.38 1209.41 L2083.79 1209.41 L2083.2 1209.41 L2082.62 1209.41 L2082.03 1209.41 L2081.44 1209.41 L2080.86 1209.41 L2080.27 1209.41 L2079.68 1209.41 L2079.1 1209.41 L2078.51 1209.41 L2077.93 1209.41 L2077.34 1209.41 L2076.75 1209.41 L2076.17 1209.41 L2075.58 1209.41 L2074.99 1209.41 L2074.41 1209.41 L2073.82 1209.41 L2073.23 1209.41 L2072.65 1209.41 L2072.06 1209.41 L2071.48 1209.41 L2070.89 1209.41 L2070.3 1209.41 L2069.72 1209.41 L2069.13 1209.41 L2068.54 1209.41 L2067.96 1209.41 L2067.37 1209.41 L2066.78 1209.41 L2066.2 1209.41 L2065.61 1209.41 L2065.02 1209.41 L2064.44 1209.41 L2063.85 1209.41 L2063.27 1209.41 L2062.68 1209.41 L2062.09 1209.41 L2061.51 1209.41 L2060.92 1209.41 L2060.33 1209.41 L2059.75 1209.41 L2059.16 1209.41 L2058.57 1209.41 L2057.99 1209.41 L2057.4 1209.41 L2056.81 1209.41 L2056.23 1209.41 L2055.64 1209.41 L2055.06 1209.41 L2054.47 1209.41 L2053.88 1209.41 L2053.3 1209.41 L2052.71 1209.41 L2052.12 1209.41 L2051.54 1209.41 L2050.95 1209.41 L2050.36 1209.41 L2049.78 1209.41 L2049.19 1209.41 L2048.6 1209.41 L2048.02 1209.41 L2047.43 1209.41 L2046.85 1209.41 L2046.26 1209.41 L2045.67 1209.41 L2045.09 1209.41 L2044.5 1209.41 L2043.91 1209.41 L2043.33 1209.41 L2042.74 1209.41 L2042.15 1209.41 L2041.57 1209.41 L2040.98 1209.41 L2040.4 1209.41 L2039.81 1209.41 L2039.22 1209.41 L2038.64 1209.41 L2038.05 1209.41 L2037.46 1209.41 L2036.88 1209.41 L2036.29 1209.41 L2035.7 1209.41 L2035.12 1209.41 L2034.53 1209.41 L2033.94 1209.41 L2033.36 1209.41 L2032.77 1209.41 L2032.19 1209.41 L2031.6 1209.41 L2031.01 1209.41 L2030.43 1209.41 L2029.84 1209.41 L2029.25 1209.41 L2028.67 1209.41 L2028.08 1209.41 L2027.49 1209.41 L2026.91 1209.41 L2026.32 1209.41 L2025.73 1209.41 L2025.15 1209.41 L2024.56 1209.41 L2023.98 1209.41 L2023.39 1209.41 L2022.8 1209.41 L2022.22 1209.41 L2021.63 1209.41 L2021.04 1209.41 L2020.46 1209.41 L2019.87 1209.41 L2019.28 1209.41 L2018.7 1209.41 L2018.11 1209.41 L2017.53 1209.41 L2016.94 1209.41 L2016.35 1209.41 L2015.77 1209.41 L2015.18 1209.41 L2014.59 1209.41 L2014.01 1209.41 L2013.42 1209.41 L2012.83 1209.41 L2012.25 1209.41 L2011.66 1209.41 L2011.07 1209.41 L2010.49 1209.41 L2009.9 1209.41 L2009.32 1209.41 L2008.73 1209.41 L2008.14 1209.41 L2007.56 1209.41 L2006.97 1209.41 L2006.38 1209.41 L2005.8 1209.41 L2005.21 1209.41 L2004.62 1209.41 L2004.04 1209.41 L2003.45 1209.41 L2002.86 1209.41 L2002.28 1209.41 L2001.69 1209.41 L2001.11 1209.41 L2000.52 1209.41 L1999.93 1209.41 L1999.35 1209.41 L1998.76 1209.41 L1998.17 1209.41 L1997.59 1209.41 L1997 1209.41 L1996.41 1209.41 L1995.83 1209.41 L1995.24 1209.41 L1994.65 1209.41 L1994.07 1209.41 L1993.48 1209.41 L1992.9 1209.41 L1992.31 1209.41 L1991.72 1209.41 L1991.14 1209.41 L1990.55 1209.41 L1989.96 1209.41 L1989.38 1209.41 L1988.79 1209.41 L1988.2 1209.41 L1987.62 1209.41 L1987.03 1209.41 L1986.45 1209.41 L1985.86 1209.41 L1985.27 1209.41 L1984.69 1209.41 L1984.1 1209.41 L1983.51 1209.41 L1982.93 1209.41 L1982.34 1209.41 L1981.75 1209.41 L1981.17 1209.41 L1980.58 1209.41 L1979.99 1209.41 L1979.41 1209.41 L1978.82 1209.41 L1978.24 1209.41 L1977.65 1209.41 L1977.06 1209.41 L1976.48 1209.41 L1975.89 1209.41 L1975.3 1209.41 L1974.72 1209.41 L1974.13 1209.41 L1973.54 1209.41 L1972.96 1209.41 L1972.37 1209.41 L1971.78 1209.41 L1971.2 1209.41 L1970.61 1209.41 L1970.03 1209.41 L1969.44 1209.41 L1968.85 1209.41 L1968.27 1209.41 L1967.68 1209.41 L1967.09 1209.41 L1966.51 1209.41 L1965.92 1209.41 L1965.33 1209.41 L1964.75 1209.41 L1964.16 1209.41 L1963.58 1209.41 L1962.99 1209.41 L1962.4 1209.41 L1961.82 1209.41 L1961.23 1209.41 L1960.64 1209.41 L1960.06 1209.41 L1959.47 1209.41 L1958.88 1209.41 L1958.3 1209.41 L1957.71 1209.41 L1957.12 1209.41 L1956.54 1209.41 L1955.95 1209.41 L1955.37 1209.41 L1954.78 1209.41 L1954.19 1209.41 L1953.61 1209.41 L1953.02 1209.41 L1952.43 1209.41 L1951.85 1209.41 L1951.26 1209.41 L1950.67 1209.41 L1950.09 1209.41 L1949.5 1209.41 L1948.91 1209.41 L1948.33 1209.41 L1947.74 1209.41 L1947.16 1209.41 L1946.57 1209.41 L1945.98 1209.41 L1945.4 1209.41 L1944.81 1209.41 L1944.22 1209.41 L1943.64 1209.41 L1943.05 1209.41 L1942.46 1209.41 L1941.88 1209.41 L1941.29 1209.41 L1940.71 1209.41 L1940.12 1209.41 L1939.53 1209.41 L1938.95 1209.41 L1938.36 1209.41 L1937.77 1209.41 L1937.19 1209.41 L1936.6 1209.41 L1936.01 1209.41 L1935.43 1209.41 L1934.84 1209.41 L1934.25 1209.41 L1933.67 1209.41 L1933.08 1209.41 L1932.5 1209.41 L1931.91 1209.41 L1931.32 1209.41 L1930.74 1209.41 L1930.15 1209.41 L1929.56 1209.41 L1928.98 1209.41 L1928.39 1209.41 L1927.8 1209.41 L1927.22 1209.41 L1926.63 1209.41 L1926.04 1209.41 L1925.46 1209.41 L1924.87 1209.41 L1924.29 1209.41 L1923.7 1209.41 L1923.11 1209.41 L1922.53 1209.41 L1921.94 1209.41 L1921.35 1209.41 L1920.77 1209.41 L1920.18 1209.41 L1919.59 1209.41 L1919.01 1209.41 L1918.42 1209.41 L1917.83 1209.41 L1917.25 1209.41 L1916.66 1209.41 L1916.08 1209.41 L1915.49 1209.41 L1914.9 1209.41 L1914.32 1209.41 L1913.73 1209.41 L1913.14 1209.41 L1912.56 1209.41 L1911.97 1209.41 L1911.38 1209.41 L1910.8 1209.41 L1910.21 1209.41 L1909.63 1209.41 L1909.04 1209.41 L1908.45 1209.41 L1907.87 1209.41 L1907.28 1209.41 L1906.69 1209.41 L1906.11 1209.41 L1905.52 1209.41 L1904.93 1209.41 L1904.35 1209.41 L1903.76 1209.41 L1903.17 1209.41 L1902.59 1209.41 L1902 1209.41 L1901.42 1209.41 L1900.83 1209.41 L1900.24 1209.41 L1899.66 1209.41 L1899.07 1209.41 L1898.48 1209.41 L1897.9 1209.41 L1897.31 1209.41 L1896.72 1209.41 L1896.14 1209.41 L1895.55 1209.41 L1894.96 1209.41 L1894.38 1209.41 L1893.79 1209.41 L1893.21 1209.41 L1892.62 1209.41 L1892.03 1209.41 L1891.45 1209.41 L1890.86 1209.41 L1890.27 1209.41 L1889.69 1209.41 L1889.1 1209.41 L1888.51 1209.41 L1887.93 1209.41 L1887.34 1209.41 L1886.76 1209.41 L1886.17 1209.41 L1885.58 1209.41 L1885 1209.41 L1884.41 1209.41 L1883.82 1209.41 L1883.24 1209.41 L1882.65 1209.41 L1882.06 1209.41 L1881.48 1209.41 L1880.89 1209.41 L1880.3 1209.41 L1879.72 1209.41 L1879.13 1209.41 L1878.55 1209.41 L1877.96 1209.41 L1877.37 1209.41 L1876.79 1209.41 L1876.2 1209.41 L1875.61 1209.41 L1875.03 1209.41 L1874.44 1209.41 L1873.85 1209.41 L1873.27 1209.41 L1872.68 1209.41 L1872.09 1209.41 L1871.51 1209.41 L1870.92 1209.41 L1870.34 1209.41 L1869.75 1209.41 L1869.16 1209.41 L1868.58 1209.41 L1867.99 1209.41 L1867.4 1209.41 L1866.82 1209.41 L1866.23 1209.41 L1865.64 1209.41 L1865.06 1209.41 L1864.47 1209.41 L1863.88 1209.41 L1863.3 1209.41 L1862.71 1209.41 L1862.13 1209.41 L1861.54 1209.41 L1860.95 1209.41 L1860.37 1209.41 L1859.78 1209.41 L1859.19 1209.41 L1858.61 1209.41 L1858.02 1209.41 L1857.43 1209.41 L1856.85 1209.41 L1856.26 1209.41 L1855.68 1209.41 L1855.09 1209.41 L1854.5 1209.41 L1853.92 1209.41 L1853.33 1209.41 L1852.74 1209.41 L1852.16 1209.41 L1851.57 1209.41 L1850.98 1209.41 L1850.4 1209.41 L1849.81 1209.41 L1849.22 1209.41 L1848.64 1209.41 L1848.05 1209.41 L1847.47 1209.41 L1846.88 1209.41 L1846.29 1209.41 L1845.71 1209.41 L1845.12 1209.41 L1844.53 1209.41 L1843.95 1209.41 L1843.36 1209.41 L1842.77 1209.41 L1842.19 1209.41 L1841.6 1209.41 L1841.01 1209.41 L1840.43 1209.41 L1839.84 1209.41 L1839.26 1209.41 L1838.67 1209.41 L1838.08 1209.41 L1837.5 1209.41 L1836.91 1209.41 L1836.32 1209.41 L1835.74 1209.41 L1835.15 1209.41 L1834.56 1209.41 L1833.98 1209.41 L1833.39 1209.41 L1832.81 1209.41 L1832.22 1209.41 L1831.63 1209.41 L1831.05 1209.41 L1830.46 1209.41 L1829.87 1209.41 L1829.29 1209.41 L1828.7 1209.41 L1828.11 1209.41 L1827.53 1209.41 L1826.94 1209.41 L1826.35 1209.41 L1825.77 1209.41 L1825.18 1209.41 L1824.6 1209.41 L1824.01 1209.41 L1823.42 1209.41 L1822.84 1209.41 L1822.25 1209.41 L1821.66 1209.41 L1821.08 1209.41 L1820.49 1209.41 L1819.9 1209.41 L1819.32 1209.41 L1818.73 1209.41 L1818.14 1209.41 L1817.56 1209.41 L1816.97 1209.41 L1816.39 1209.41 L1815.8 1209.41 L1815.21 1209.41 L1814.63 1209.41 L1814.04 1209.41 L1813.45 1209.41 L1812.87 1209.41 L1812.28 1209.41 L1811.69 1209.41 L1811.11 1209.41 L1810.52 1209.41 L1809.94 1209.41 L1809.35 1209.41 L1808.76 1209.41 L1808.18 1209.41 L1807.59 1209.41 L1807 1209.41 L1806.42 1209.41 L1805.83 1209.41 L1805.24 1209.41 L1804.66 1209.41 L1804.07 1209.41 L1803.48 1209.41 L1802.9 1209.41 L1802.31 1209.41 L1801.73 1209.41 L1801.14 1209.41 L1800.55 1209.41 L1799.97 1209.41 L1799.38 1209.41 L1798.79 1209.41 L1798.21 1209.41 L1797.62 1209.41 L1797.03 1209.41 L1796.45 1209.41 L1795.86 1209.41 L1795.27 1209.41 L1794.69 1209.41 L1794.1 1209.41 L1793.52 1209.41 L1792.93 1209.41 L1792.34 1209.41 L1791.76 1209.41 L1791.17 1209.41 L1790.58 1209.41 L1790 1209.41 L1789.41 1209.41 L1788.82 1209.41 L1788.24 1209.41 L1787.65 1209.41 L1787.06 1209.41 L1786.48 1209.41 L1785.89 1209.41 L1785.31 1209.41 L1784.72 1209.41 L1784.13 1209.41 L1783.55 1209.41 L1782.96 1209.41 L1782.37 1209.41 L1781.79 1209.41 L1781.2 1209.41 L1780.61 1209.41 L1780.03 1209.41 L1779.44 1209.41 L1778.86 1209.41 L1778.27 1209.41 L1777.68 1209.41 L1777.1 1209.41 L1776.51 1209.41 L1775.92 1209.41 L1775.34 1209.41 L1774.75 1209.41 L1774.16 1209.41 L1773.58 1209.41 L1772.99 1209.41 L1772.4 1209.41 L1771.82 1209.41 L1771.23 1209.41 L1770.65 1209.41 L1770.06 1209.41 L1769.47 1209.41 L1768.89 1209.41 L1768.3 1209.41 L1767.71 1209.41 L1767.13 1209.41 L1766.54 1209.41 L1765.95 1209.41 L1765.37 1209.41 L1764.78 1209.41 L1764.19 1209.41 L1763.61 1209.41 L1763.02 1209.41 L1762.44 1209.41 L1761.85 1209.41 L1761.26 1209.41 L1760.68 1209.41 L1760.09 1209.41 L1759.5 1209.41 L1758.92 1209.41 L1758.33 1209.41 L1757.74 1209.41 L1757.16 1209.41 L1756.57 1209.41 L1755.99 1209.41 L1755.4 1209.41 L1754.81 1209.41 L1754.23 1209.41 L1753.64 1209.41 L1753.05 1209.41 L1752.47 1209.41 L1751.88 1209.41 L1751.29 1209.41 L1750.71 1209.41 L1750.12 1209.41 L1749.53 1209.41 L1748.95 1209.41 L1748.36 1209.41 L1747.78 1209.41 L1747.19 1209.41 L1746.6 1209.41 L1746.02 1209.41 L1745.43 1209.41 L1744.84 1209.41 L1744.26 1209.41 L1743.67 1209.41 L1743.08 1209.41 L1742.5 1209.41 L1741.91 1209.41 L1741.32 1209.41 L1740.74 1209.41 L1740.15 1209.41 L1739.57 1209.41 L1738.98 1209.41 L1738.39 1209.41 L1737.81 1209.41 L1737.22 1209.41 L1736.63 1209.41 L1736.05 1209.41 L1735.46 1209.41 L1734.87 1209.41 L1734.29 1209.41 L1733.7 1209.41 L1733.11 1209.41 L1732.53 1209.41 L1731.94 1209.41 L1731.36 1209.41 L1730.77 1209.41 L1730.18 1209.41 L1729.6 1209.41 L1729.01 1209.41 L1728.42 1209.41 L1727.84 1209.41 L1727.25 1209.41 L1726.66 1209.41 L1726.08 1209.41 L1725.49 1209.41 L1724.91 1209.41 L1724.32 1209.41 L1723.73 1209.41 L1723.15 1209.41 L1722.56 1209.41 L1721.97 1209.41 L1721.39 1209.41 L1720.8 1209.41 L1720.21 1209.41 L1719.63 1209.41 L1719.04 1209.41 L1718.45 1209.41 L1717.87 1209.41 L1717.28 1209.41 L1716.7 1209.41 L1716.11 1209.41 L1715.52 1209.41 L1714.94 1209.41 L1714.35 1209.41 L1713.76 1209.41 L1713.18 1209.41 L1712.59 1209.41 L1712 1209.41 L1711.42 1209.41 L1710.83 1209.41 L1710.24 1209.41 L1709.66 1209.41 L1709.07 1209.41 L1708.49 1209.41 L1707.9 1209.41 L1707.31 1209.41 L1706.73 1209.41 L1706.14 1209.41 L1705.55 1209.41 L1704.97 1209.41 L1704.38 1209.41 L1703.79 1209.41 L1703.21 1209.41 L1702.62 1209.41 L1702.04 1209.41 L1701.45 1209.41 L1700.86 1209.41 L1700.28 1209.41 L1699.69 1209.41 L1699.1 1209.41 L1698.52 1209.41 L1697.93 1209.41 L1697.34 1209.41 L1696.76 1209.41 L1696.17 1209.41 L1695.58 1209.41 L1695 1209.41 L1694.41 1209.41 L1693.83 1209.41 L1693.24 1209.41 L1692.65 1209.41 L1692.07 1209.41 L1691.48 1209.41 L1690.89 1209.41 L1690.31 1209.41 L1689.72 1209.41 L1689.13 1209.41 L1688.55 1209.41 L1687.96 1209.41 L1687.37 1209.41 L1686.79 1209.41 L1686.2 1209.41 L1685.62 1209.41 L1685.03 1209.41 L1684.44 1209.41 L1683.86 1209.41 L1683.27 1209.41 L1682.68 1209.41 L1682.1 1209.41 L1681.51 1209.41 L1680.92 1209.41 L1680.34 1209.41 L1679.75 1209.41 L1679.17 1209.41 L1678.58 1209.41 L1677.99 1209.41 L1677.41 1209.41 L1676.82 1209.41 L1676.23 1209.41 L1675.65 1209.41 L1675.06 1209.41 L1674.47 1209.41 L1673.89 1209.41 L1673.3 1209.41 L1672.71 1209.41 L1672.13 1209.41 L1671.54 1209.41 L1670.96 1209.41 L1670.37 1209.41 L1669.78 1209.41 L1669.2 1209.41 L1668.61 1209.41 L1668.02 1209.41 L1667.44 1209.41 L1666.85 1209.41 L1666.26 1209.41 L1665.68 1209.41 L1665.09 1209.41 L1664.5 1209.41 L1663.92 1209.41 L1663.33 1209.41 L1662.75 1209.41 L1662.16 1209.41 L1661.57 1209.41 L1660.99 1209.41 L1660.4 1209.41 L1659.81 1209.41 L1659.23 1209.41 L1658.64 1209.41 L1658.05 1209.41 L1657.47 1209.41 L1656.88 1209.41 L1656.29 1209.41 L1655.71 1209.41 L1655.12 1209.41 L1654.54 1209.41 L1653.95 1209.41 L1653.36 1209.41 L1652.78 1209.41 L1652.19 1209.41 L1651.6 1209.41 L1651.02 1209.41 L1650.43 1209.41 L1649.84 1209.41 L1649.26 1209.41 L1648.67 1209.41 L1648.09 1209.41 L1647.5 1209.41 L1646.91 1209.41 L1646.33 1209.41 L1645.74 1209.41 L1645.15 1209.41 L1644.57 1209.41 L1643.98 1209.41 L1643.39 1209.41 L1642.81 1209.41 L1642.22 1209.41 L1641.63 1209.41 L1641.05 1209.41 L1640.46 1209.41 L1639.88 1209.41 L1639.29 1209.41 L1638.7 1209.41 L1638.12 1209.41 L1637.53 1209.41 L1636.94 1209.41 L1636.36 1209.41 L1635.77 1209.41 L1635.18 1209.41 L1634.6 1209.41 L1634.01 1209.41 L1633.42 1209.41 L1632.84 1209.41 L1632.25 1209.41 L1631.67 1209.41 L1631.08 1209.41 L1630.49 1209.41 L1629.91 1209.41 L1629.32 1209.41 L1628.73 1209.41 L1628.15 1209.41 L1627.56 1209.41 L1626.97 1209.41 L1626.39 1209.41 L1625.8 1209.41 L1625.22 1209.41 L1624.63 1209.41 L1624.04 1209.41 L1623.46 1209.41 L1622.87 1209.41 L1622.28 1209.41 L1621.7 1209.41 L1621.11 1209.41 L1620.52 1209.41 L1619.94 1209.41 L1619.35 1209.41 L1618.76 1209.41 L1618.18 1209.41 L1617.59 1209.41 L1617.01 1209.41 L1616.42 1209.41 L1615.83 1209.41 L1615.25 1209.41 L1614.66 1209.41 L1614.07 1209.41 L1613.49 1209.41 L1612.9 1209.41 L1612.31 1209.41 L1611.73 1209.41 L1611.14 1209.41 L1610.55 1209.41 L1609.97 1209.41 L1609.38 1209.41 L1608.8 1209.41 L1608.21 1209.41 L1607.62 1209.41 L1607.04 1209.41 L1606.45 1209.41 L1605.86 1209.41 L1605.28 1209.41 L1604.69 1209.41 L1604.1 1209.41 L1603.52 1209.41 L1602.93 1209.41 L1602.34 1209.41 L1601.76 1209.41 L1601.17 1209.41 L1600.59 1209.41 L1600 1209.41 L1599.41 1209.41 L1598.83 1209.41 L1598.24 1209.41 L1597.65 1209.41 L1597.07 1209.41 L1596.48 1209.41 L1595.89 1209.41 L1595.31 1209.41 L1594.72 1209.41 L1594.14 1209.41 L1593.55 1209.41 L1592.96 1209.41 L1592.38 1209.41 L1591.79 1209.41 L1591.2 1209.41 L1590.62 1209.41 L1590.03 1209.41 L1589.44 1209.41 L1588.86 1209.41 L1588.27 1209.41 L1587.68 1209.41 L1587.1 1209.41 L1586.51 1209.41 L1585.93 1209.41 L1585.34 1209.41 L1584.75 1209.41 L1584.17 1209.41 L1583.58 1209.41 L1582.99 1209.41 L1582.41 1209.41 L1581.82 1209.41 L1581.23 1209.41 L1580.65 1209.41 L1580.06 1209.41 L1579.47 1209.41 L1578.89 1209.41 L1578.3 1209.41 L1577.72 1209.41 L1577.13 1209.41 L1576.54 1209.41 L1575.96 1209.41 L1575.37 1209.41 L1574.78 1209.41 L1574.2 1209.41 L1573.61 1209.41 L1573.02 1209.41 L1572.44 1209.41 L1571.85 1209.41 L1571.27 1209.41 L1570.68 1209.41 L1570.09 1209.41 L1569.51 1209.41 L1568.92 1209.41 L1568.33 1209.41 L1567.75 1209.41 L1567.16 1209.41 L1566.57 1209.41 L1565.99 1209.41 L1565.4 1209.41 L1564.81 1209.41 L1564.23 1209.41 L1563.64 1209.41 L1563.06 1209.41 L1562.47 1209.41 L1561.88 1209.41 L1561.3 1209.41 L1560.71 1209.41 L1560.12 1209.41 L1559.54 1209.41 L1558.95 1209.41 L1558.36 1209.41 L1557.78 1209.41 L1557.19 1209.41 L1556.6 1209.41 L1556.02 1209.41 L1555.43 1209.41 L1554.85 1209.41 L1554.26 1209.41 L1553.67 1209.41 L1553.09 1209.41 L1552.5 1209.41 L1551.91 1209.41 L1551.33 1209.41 L1550.74 1209.41 L1550.15 1209.41 L1549.57 1209.41 L1548.98 1209.41 L1548.4 1209.41 L1547.81 1209.41 L1547.22 1209.41 L1546.64 1209.41 L1546.05 1209.41 L1545.46 1209.41 L1544.88 1209.41 L1544.29 1209.41 L1543.7 1209.41 L1543.12 1209.41 L1542.53 1209.41 L1541.94 1209.41 L1541.36 1209.41 L1540.77 1209.41 L1540.19 1209.41 L1539.6 1209.41 L1539.01 1209.41 L1538.43 1209.41 L1537.84 1209.41 L1537.25 1209.41 L1536.67 1209.41 L1536.08 1209.41 L1535.49 1209.41 L1534.91 1209.41 L1534.32 1209.41 L1533.73 1209.41 L1533.15 1209.41 L1532.56 1209.41 L1531.98 1209.41 L1531.39 1209.41 L1530.8 1209.41 L1530.22 1209.41 L1529.63 1209.41 L1529.04 1209.41 L1528.46 1209.41 L1527.87 1209.41 L1527.28 1209.41 L1526.7 1209.41 L1526.11 1209.41 L1525.52 1209.41 L1524.94 1209.41 L1524.35 1209.41 L1523.77 1209.41 L1523.18 1209.41 L1522.59 1209.41 L1522.01 1209.41 L1521.42 1209.41 L1520.83 1209.41 L1520.25 1209.41 L1519.66 1209.41 L1519.07 1209.41 L1518.49 1209.41 L1517.9 1209.41 L1517.32 1209.41 L1516.73 1209.41 L1516.14 1209.41 L1515.56 1209.41 L1514.97 1209.41 L1514.38 1209.41 L1513.8 1209.41 L1513.21 1209.41 L1512.62 1209.41 L1512.04 1209.41 L1511.45 1209.41 L1510.86 1209.41 L1510.28 1209.41 L1509.69 1209.41 L1509.11 1209.41 L1508.52 1209.41 L1507.93 1209.41 L1507.35 1209.41 L1506.76 1209.41 L1506.17 1209.41 L1505.59 1209.41 L1505 1209.41 L1504.41 1209.41 L1503.83 1209.41 L1503.24 1209.41 L1502.65 1209.41 L1502.07 1209.41 L1501.48 1209.41 L1500.9 1209.41 L1500.31 1209.41 L1499.72 1209.41 L1499.14 1209.41 L1498.55 1209.41 L1497.96 1209.41 L1497.38 1209.41 L1496.79 1209.41 L1496.2 1209.41 L1495.62 1209.41 L1495.03 1209.41 L1494.45 1209.41 L1493.86 1209.41 L1493.27 1209.41 L1492.69 1209.41 L1492.1 1209.41 L1491.51 1209.41 L1490.93 1209.41 L1490.34 1209.41 L1489.75 1209.41 L1489.17 1209.41 L1488.58 1209.41 L1487.99 1209.41 L1487.41 1209.41 L1486.82 1209.41 L1486.24 1209.41 L1485.65 1209.41 L1485.06 1209.41 L1484.48 1209.41 L1483.89 1209.41 L1483.3 1209.41 L1482.72 1209.41 L1482.13 1209.41 L1481.54 1209.41 L1480.96 1209.41 L1480.37 1209.41 L1479.78 1209.41 L1479.2 1209.41 L1478.61 1209.41 L1478.03 1209.41 L1477.44 1209.41 L1476.85 1209.41 L1476.27 1209.41 L1475.68 1209.41 L1475.09 1209.41 L1474.51 1209.41 L1473.92 1209.41 L1473.33 1209.41 L1472.75 1209.41 L1472.16 1209.41 L1471.57 1209.41 L1470.99 1209.41 L1470.4 1209.41 L1469.82 1209.41 L1469.23 1209.41 L1468.64 1209.41 L1468.06 1209.41 L1467.47 1209.41 L1466.88 1209.41 L1466.3 1209.41 L1465.71 1209.41 L1465.12 1209.41 L1464.54 1209.41 L1463.95 1209.41 L1463.37 1209.41 L1462.78 1209.41 L1462.19 1209.41 L1461.61 1209.41 L1461.02 1209.41 L1460.43 1209.41 L1459.85 1209.41 L1459.26 1209.41 L1458.67 1209.41 L1458.09 1209.41 L1457.5 1209.41 L1456.91 1209.41 L1456.33 1209.41 L1455.74 1209.41 L1455.16 1209.41 L1454.57 1209.41 L1453.98 1209.41 L1453.4 1209.41 L1452.81 1209.41 L1452.22 1209.41 L1451.64 1209.41 L1451.05 1209.41 L1450.46 1209.41 L1449.88 1209.41 L1449.29 1209.41 L1448.7 1209.41 L1448.12 1209.41 L1447.53 1209.41 L1446.95 1209.41 L1446.36 1209.41 L1445.77 1209.41 L1445.19 1209.41 L1444.6 1209.41 L1444.01 1209.41 L1443.43 1209.41 L1442.84 1209.41 L1442.25 1209.41 L1441.67 1209.41 L1441.08 1209.41 L1440.5 1209.41 L1439.91 1209.41 L1439.32 1209.41 L1438.74 1209.41 L1438.15 1209.41 L1437.56 1209.41 L1436.98 1209.41 L1436.39 1209.41 L1435.8 1209.41 L1435.22 1209.41 L1434.63 1209.41 L1434.04 1209.41 L1433.46 1209.41 L1432.87 1209.41 L1432.29 1209.41 L1431.7 1209.41 L1431.11 1209.41 L1430.53 1209.41 L1429.94 1209.41 L1429.35 1209.41 L1428.77 1209.41 L1428.18 1209.41 L1427.59 1209.41 L1427.01 1209.41 L1426.42 1209.41 L1425.83 1209.41 L1425.25 1209.41 L1424.66 1209.41 L1424.08 1209.41 L1423.49 1209.41 L1422.9 1209.41 L1422.32 1209.41 L1421.73 1209.41 L1421.14 1209.41 L1420.56 1209.41 L1419.97 1209.41 L1419.38 1209.41 L1418.8 1209.41 L1418.21 1209.41 L1417.63 1209.41 L1417.04 1209.41 L1416.45 1209.41 L1415.87 1209.41 L1415.28 1209.41 L1414.69 1209.41 L1414.11 1209.41 L1413.52 1209.41 L1412.93 1209.41 L1412.35 1209.41 L1411.76 1209.41 L1411.17 1209.41 L1410.59 1209.41 L1410 1209.41 L1409.42 1209.41 L1408.83 1209.41 L1408.24 1209.41 L1407.66 1209.41 L1407.07 1209.41 L1406.48 1209.41 L1405.9 1209.41 L1405.31 1209.41 L1404.72 1209.41 L1404.14 1209.41 L1403.55 1209.41 L1402.96 1209.41 L1402.38 1209.41 L1401.79 1209.41 L1401.21 1209.41 L1400.62 1209.41 L1400.03 1209.41 L1399.45 1209.41 L1398.86 1209.41 L1398.27 1209.41 L1397.69 1209.41 L1397.1 1209.41 L1396.51 1209.41 L1395.93 1209.41 L1395.34 1209.41 L1394.75 1209.41 L1394.17 1209.41 L1393.58 1209.41 L1393 1209.41 L1392.41 1209.41 L1391.82 1209.41 L1391.24 1209.41 L1390.65 1209.41 L1390.06 1209.41 L1389.48 1209.41 L1388.89 1209.41 L1388.3 1209.41 L1387.72 1209.41 L1387.13 1209.41 L1386.55 1209.41 L1385.96 1209.41 L1385.37 1209.41 L1384.79 1209.41 L1384.2 1209.41 L1383.61 1209.41 L1383.03 1209.41 L1382.44 1209.41 L1381.85 1209.41 L1381.27 1209.41 L1380.68 1209.41 L1380.09 1209.41 L1379.51 1209.41 L1378.92 1209.41 L1378.34 1209.41 L1377.75 1209.41 L1377.16 1209.41 L1376.58 1209.41 L1375.99 1209.41 L1375.4 1209.41 L1374.82 1209.41 L1374.23 1209.41 L1373.64 1209.41 L1373.06 1209.41 L1372.47 1209.41 L1371.88 1209.41 L1371.3 1209.41 L1370.71 1209.41 L1370.13 1209.41 L1369.54 1209.41 L1368.95 1209.41 L1368.37 1209.41 L1367.78 1209.41 L1367.19 1209.41 L1366.61 1209.41 L1366.02 1209.41 L1365.43 1209.41 L1364.85 1209.41 L1364.26 1209.41 L1363.68 1209.41 L1363.09 1209.41 L1362.5 1209.41 L1361.92 1209.41 L1361.33 1209.41 L1360.74 1209.41 L1360.16 1209.41 L1359.57 1209.41 L1358.98 1209.41 L1358.4 1209.41 L1357.81 1209.41 L1357.22 1209.41 L1356.64 1209.41 L1356.05 1209.41 L1355.47 1209.41 L1354.88 1209.41 L1354.29 1209.41 L1353.71 1209.41 L1353.12 1209.41 L1352.53 1209.41 L1351.95 1209.41 L1351.36 1209.41 L1350.77 1209.41 L1350.19 1209.41 L1349.6 1209.41 L1349.01 1209.41 L1348.43 1209.41 L1347.84 1209.41 L1347.26 1209.41 L1346.67 1209.41 L1346.08 1209.41 L1345.5 1209.41 L1344.91 1209.41 L1344.32 1209.41 L1343.74 1209.41 L1343.15 1209.41 L1342.56 1209.41 L1341.98 1209.41 L1341.39 1209.41 L1340.8 1209.41 L1340.22 1209.41 L1339.63 1209.41 L1339.05 1209.41 L1338.46 1209.41 L1337.87 1209.41 L1337.29 1209.41 L1336.7 1209.41 L1336.11 1209.41 L1335.53 1209.41 L1334.94 1209.41 L1334.35 1209.41 L1333.77 1209.41 L1333.18 1209.41 L1332.6 1209.41 L1332.01 1209.41 L1331.42 1209.41 L1330.84 1209.41 L1330.25 1209.41 L1329.66 1209.41 L1329.08 1209.41 L1328.49 1209.41 L1327.9 1209.41 L1327.32 1209.41 L1326.73 1209.41 L1326.14 1209.41 L1325.56 1209.41 L1324.97 1209.41 L1324.39 1209.41 L1323.8 1209.41 L1323.21 1209.41 L1322.63 1209.41 L1322.04 1209.41 L1321.45 1209.41 L1320.87 1209.41 L1320.28 1209.41 L1319.69 1209.41 L1319.11 1209.41 L1318.52 1209.41 L1317.93 1209.41 L1317.35 1209.41 L1316.76 1209.41 L1316.18 1209.41 L1315.59 1209.41 L1315 1209.41 L1314.42 1209.41 L1313.83 1209.41 L1313.24 1209.41 L1312.66 1209.41 L1312.07 1209.41 L1311.48 1209.41 L1310.9 1209.41 L1310.31 1209.41 L1309.73 1209.41 L1309.14 1209.41 L1308.55 1209.41 L1307.97 1209.41 L1307.38 1209.41 L1306.79 1209.41 L1306.21 1209.41 L1305.62 1209.41 L1305.03 1209.41 L1304.45 1209.41 L1303.86 1209.41 L1303.27 1209.41 L1302.69 1209.41 L1302.1 1209.41 L1301.52 1209.41 L1300.93 1209.41 L1300.34 1209.41 L1299.76 1209.41 L1299.17 1209.41 L1298.58 1209.41 L1298 1209.41 L1297.41 1209.41 L1296.82 1209.41 L1296.24 1209.41 L1295.65 1209.41 L1295.06 1209.41 L1294.48 1209.41 L1293.89 1209.41 L1293.31 1209.41 L1292.72 1209.41 L1292.13 1209.41 L1291.55 1209.41 L1290.96 1209.41 L1290.37 1209.41 L1289.79 1209.41 L1289.2 1209.41 L1288.61 1209.41 L1288.03 1209.41 L1287.44 1209.41 L1286.86 1209.41 L1286.27 1209.41 L1285.68 1209.41 L1285.1 1209.41 L1284.51 1209.41 L1283.92 1209.41 L1283.34 1209.41 L1282.75 1209.41 L1282.16 1209.41 L1281.58 1209.41 L1280.99 1209.41 L1280.4 1209.41 L1279.82 1209.41 L1279.23 1209.41 L1278.65 1209.41 L1278.06 1209.41 L1277.47 1209.41 L1276.89 1209.41 L1276.3 1209.41 L1275.71 1209.41 L1275.13 1209.41 L1274.54 1209.41 L1273.95 1209.41 L1273.37 1209.41 L1272.78 1209.41 L1272.19 1209.41 L1271.61 1209.41 L1271.02 1209.41 L1270.44 1209.41 L1269.85 1209.41 L1269.26 1209.41 L1268.68 1209.41 L1268.09 1209.41 L1267.5 1209.41 L1266.92 1209.41 L1266.33 1209.41 L1265.74 1209.41 L1265.16 1209.41 L1264.57 1209.41 L1263.98 1209.41 L1263.4 1209.41 L1262.81 1209.41 L1262.23 1209.41 L1261.64 1209.41 L1261.05 1209.41 L1260.47 1209.41 L1259.88 1209.41 L1259.29 1209.41 L1258.71 1209.41 L1258.12 1209.41 L1257.53 1209.41 L1256.95 1209.41 L1256.36 1209.41 L1255.78 1209.41 L1255.19 1209.41 L1254.6 1209.41 L1254.02 1209.41 L1253.43 1209.41 L1252.84 1209.41 L1252.26 1209.41 L1251.67 1209.41 L1251.08 1209.41 L1250.5 1209.41 L1249.91 1209.41 L1249.32 1209.41 L1248.74 1209.41 L1248.15 1209.41 L1247.57 1209.41 L1246.98 1209.41 L1246.39 1209.41 L1245.81 1209.41 L1245.22 1209.41 L1244.63 1209.41 L1244.05 1209.41 L1243.46 1209.41 L1242.87 1209.41 L1242.29 1209.41 L1241.7 1209.41 L1241.11 1209.41 L1240.53 1209.41 L1239.94 1209.41 L1239.36 1209.41 L1238.77 1209.41 L1238.18 1209.41 L1237.6 1209.41 L1237.01 1209.41 L1236.42 1209.41 L1235.84 1209.41 L1235.25 1209.41 L1234.66 1209.41 L1234.08 1209.41 L1233.49 1209.41 L1232.91 1209.41 L1232.32 1209.41 L1231.73 1209.41 L1231.15 1209.41 L1230.56 1209.41 L1229.97 1209.41 L1229.39 1209.41 L1228.8 1209.41 L1228.21 1209.41 L1227.63 1209.41 L1227.04 1209.41 L1226.45 1209.41 L1225.87 1209.41 L1225.28 1209.41 L1224.7 1209.41 L1224.11 1209.41 L1223.52 1209.41 L1222.94 1209.41 L1222.35 1209.41 L1221.76 1209.41 L1221.18 1209.41 L1220.59 1209.41 L1220 1209.41 L1219.42 1209.41 L1218.83 1209.41 L1218.24 1209.41 L1217.66 1209.41 L1217.07 1209.41 L1216.49 1209.41 L1215.9 1209.41 L1215.31 1209.41 L1214.73 1209.41 L1214.14 1209.41 L1213.55 1209.41 L1212.97 1209.41 L1212.38 1209.41 L1211.79 1209.41 L1211.21 1209.41 L1210.62 1209.41 L1210.03 1209.41 L1209.45 1209.41 L1208.86 1209.41 L1208.28 1209.41 L1207.69 1209.41 L1207.1 1209.41 L1206.52 1209.41 L1205.93 1209.41 L1205.34 1209.41 L1204.76 1209.41 L1204.17 1209.41 L1203.58 1209.41 L1203 1209.41 L1202.41 1209.41 L1201.83 1209.41 L1201.24 1209.41 L1200.65 1209.41 L1200.07 1209.41 L1199.48 1209.41 L1198.89 1209.41 L1198.31 1209.41 L1197.72 1209.41 L1197.13 1209.41 L1196.55 1209.41 L1195.96 1209.41 L1195.37 1209.41 L1194.79 1209.41 L1194.2 1209.41 L1193.62 1209.41 L1193.03 1209.41 L1192.44 1209.41 L1191.86 1209.41 L1191.27 1209.41 L1190.68 1209.41 L1190.1 1209.41 L1189.51 1209.41 L1188.92 1209.41 L1188.34 1209.41 L1187.75 1209.41 L1187.16 1209.41 L1186.58 1209.41 L1185.99 1209.41 L1185.41 1209.41 L1184.82 1209.41 L1184.23 1209.41 L1183.65 1209.41 L1183.06 1209.41 L1182.47 1209.41 L1181.89 1209.41 L1181.3 1209.41 L1180.71 1209.41 L1180.13 1209.41 L1179.54 1209.41 L1178.96 1209.41 L1178.37 1209.41 L1177.78 1209.41 L1177.2 1209.41 L1176.61 1209.41 L1176.02 1209.41 L1175.44 1209.41 L1174.85 1209.41 L1174.26 1209.41 L1173.68 1209.41 L1173.09 1209.41 L1172.5 1209.41 L1171.92 1209.41 L1171.33 1209.41 L1170.75 1209.41 L1170.16 1209.41 L1169.57 1209.41 L1168.99 1209.41 L1168.4 1209.41 L1167.81 1209.41 L1167.23 1209.41 L1166.64 1209.41 L1166.05 1209.41 L1165.47 1209.41 L1164.88 1209.41 L1164.29 1209.41 L1163.71 1209.41 L1163.12 1209.41 L1162.54 1209.41 L1161.95 1209.41 L1161.36 1209.41 L1160.78 1209.41 L1160.19 1209.41 L1159.6 1209.41 L1159.02 1209.41 L1158.43 1209.41 L1157.84 1209.41 L1157.26 1209.41 L1156.67 1209.41 L1156.09 1209.41 L1155.5 1209.41 L1154.91 1209.41 L1154.33 1209.41 L1153.74 1209.41 L1153.15 1209.41 L1152.57 1209.41 L1151.98 1209.41 L1151.39 1209.41 L1150.81 1209.41 L1150.22 1209.41 L1149.63 1209.41 L1149.05 1209.41 L1148.46 1209.41 L1147.88 1209.41 L1147.29 1209.41 L1146.7 1209.41 L1146.12 1209.41 L1145.53 1209.41 L1144.94 1209.41 L1144.36 1209.41 L1143.77 1209.41 L1143.18 1209.41 L1142.6 1209.41 L1142.01 1209.41 L1141.42 1209.41 L1140.84 1209.41 L1140.25 1209.41 L1139.67 1209.41 L1139.08 1209.41 L1138.49 1209.41 L1137.91 1209.41 L1137.32 1209.41 L1136.73 1209.41 L1136.15 1209.41 L1135.56 1209.41 L1134.97 1209.41 L1134.39 1209.41 L1133.8 1209.41 L1133.21 1209.41 L1132.63 1209.41 L1132.04 1209.41 L1131.46 1209.41 L1130.87 1209.41 L1130.28 1209.41 L1129.7 1209.41 L1129.11 1209.41 L1128.52 1209.41 L1127.94 1209.41 L1127.35 1209.41 L1126.76 1209.41 L1126.18 1209.41 L1125.59 1209.41 L1125.01 1209.41 L1124.42 1209.41 L1123.83 1209.41 L1123.25 1209.41 L1122.66 1209.41 L1122.07 1209.41 L1121.49 1209.41 L1120.9 1209.41 L1120.31 1209.41 L1119.73 1209.41 L1119.14 1209.41 L1118.55 1209.41 L1117.97 1209.41 L1117.38 1209.41 L1116.8 1209.41 L1116.21 1209.41 L1115.62 1209.41 L1115.04 1209.41 L1114.45 1209.41 L1113.86 1209.41 L1113.28 1209.41 L1112.69 1209.41 L1112.1 1209.41 L1111.52 1209.41 L1110.93 1209.41 L1110.34 1209.41 L1109.76 1209.41 L1109.17 1209.41 L1108.59 1209.41 L1108 1209.41 L1107.41 1209.41 L1106.83 1209.41 L1106.24 1209.41 L1105.65 1209.41 L1105.07 1209.41 L1104.48 1209.41 L1103.89 1209.41 L1103.31 1209.41 L1102.72 1209.41 L1102.14 1209.41 L1101.55 1209.41 L1100.96 1209.41 L1100.38 1209.41 L1099.79 1209.41 L1099.2 1209.41 L1098.62 1209.41 L1098.03 1209.41 L1097.44 1209.41 L1096.86 1209.41 L1096.27 1209.41 L1095.68 1209.41 L1095.1 1209.41 L1094.51 1209.41 L1093.93 1209.41 L1093.34 1209.41 L1092.75 1209.41 L1092.17 1209.41 L1091.58 1209.41 L1090.99 1209.41 L1090.41 1209.41 L1089.82 1209.41 L1089.23 1209.41 L1088.65 1209.41 L1088.06 1209.41 L1087.47 1209.41 L1086.89 1209.41 L1086.3 1209.41 L1085.72 1209.41 L1085.13 1209.41 L1084.54 1209.41 L1083.96 1209.41 L1083.37 1209.41 L1082.78 1209.41 L1082.2 1209.41 L1081.61 1209.41 L1081.02 1209.41 L1080.44 1209.41 L1079.85 1209.41 L1079.26 1209.41 L1078.68 1209.41 L1078.09 1209.41 L1077.51 1209.41 L1076.92 1209.41 L1076.33 1209.41 L1075.75 1209.41 L1075.16 1209.41 L1074.57 1209.41 L1073.99 1209.41 L1073.4 1209.41 L1072.81 1209.41 L1072.23 1209.41 L1071.64 1209.41 L1071.06 1209.41 L1070.47 1209.41 L1069.88 1209.41 L1069.3 1209.41 L1068.71 1209.41 L1068.12 1209.41 L1067.54 1209.41 L1066.95 1209.41 L1066.36 1209.41 L1065.78 1209.41 L1065.19 1209.41 L1064.6 1209.41 L1064.02 1209.41 L1063.43 1209.41 L1062.85 1209.41 L1062.26 1209.41 L1061.67 1209.41 L1061.09 1209.41 L1060.5 1209.41 L1059.91 1209.41 L1059.33 1209.41 L1058.74 1209.41 L1058.15 1209.41 L1057.57 1209.41 L1056.98 1209.41 L1056.39 1209.41 L1055.81 1209.41 L1055.22 1209.41 L1054.64 1209.41 L1054.05 1209.41 L1053.46 1209.41 L1052.88 1209.41 L1052.29 1209.41 L1051.7 1209.41 L1051.12 1209.41 L1050.53 1209.41 L1049.94 1209.41 L1049.36 1209.41 L1048.77 1209.41 L1048.19 1209.41 L1047.6 1209.41 L1047.01 1209.41 L1046.43 1209.41 L1045.84 1209.41 L1045.25 1209.41 L1044.67 1209.41 L1044.08 1209.41 L1043.49 1209.41 L1042.91 1209.41 L1042.32 1209.41 L1041.73 1209.41 L1041.15 1209.41 L1040.56 1209.41 L1039.98 1209.41 L1039.39 1209.41 L1038.8 1209.41 L1038.22 1209.41 L1037.63 1209.41 L1037.04 1209.41 L1036.46 1209.41 L1035.87 1209.41 L1035.28 1209.41 L1034.7 1209.41 L1034.11 1209.41 L1033.52 1209.41 L1032.94 1209.41 L1032.35 1209.41 L1031.77 1209.41 L1031.18 1209.41 L1030.59 1209.41 L1030.01 1209.41 L1029.42 1209.41 L1028.83 1209.41 L1028.25 1209.41 L1027.66 1209.41 L1027.07 1209.41 L1026.49 1209.41 L1025.9 1209.41 L1025.32 1209.41 L1024.73 1209.41 L1024.14 1209.41 L1023.56 1209.41 L1022.97 1209.41 L1022.38 1209.41 L1021.8 1209.41 L1021.21 1209.41 L1020.62 1209.41 L1020.04 1209.41 L1019.45 1209.41 L1018.86 1209.41 L1018.28 1209.41 L1017.69 1209.41 L1017.11 1209.41 L1016.52 1209.41 L1015.93 1209.41 L1015.35 1209.41 L1014.76 1209.41 L1014.17 1209.41 L1013.59 1209.41 L1013 1209.41 L1012.41 1209.41 L1011.83 1209.41 L1011.24 1209.41 L1010.65 1209.41 L1010.07 1209.41 L1009.48 1209.41 L1008.9 1209.41 L1008.31 1209.41 L1007.72 1209.41 L1007.14 1209.41 L1006.55 1209.41 L1005.96 1209.41 L1005.38 1209.41 L1004.79 1209.41 L1004.2 1209.41 L1003.62 1209.41 L1003.03 1209.41 L1002.44 1209.41 L1001.86 1209.41 L1001.27 1209.41 L1000.69 1209.41 L1000.1 1209.41 L999.513 1209.41 L998.926 1209.41 L998.34 1209.41 L997.754 1209.41 L997.167 1209.41 L996.581 1209.41 L995.994 1209.41 L995.408 1209.41 L994.822 1209.41 L994.235 1209.41 L993.649 1209.41 L993.062 1209.41 L992.476 1209.41 L991.889 1209.41 L991.303 1209.41 L990.717 1209.41 L990.13 1209.41 L989.544 1209.41 L988.957 1209.41 L988.371 1209.41 L987.785 1209.41 L987.198 1209.41 L986.612 1209.41 L986.025 1209.41  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1209.69 986.612,1209.69 987.198,1209.69 987.785,1209.69 988.371,1209.69 988.957,1209.69 989.544,1209.69 990.13,1209.69 990.717,1209.69 991.303,1209.69 991.889,1209.69 992.476,1209.69 993.062,1209.69 993.649,1209.69 994.235,1209.69 994.822,1209.69 995.408,1209.69 995.994,1209.69 996.581,1209.69 997.167,1209.69 997.754,1209.69 998.34,1209.69 998.926,1209.69 999.513,1209.69 1000.1,1209.69 1000.69,1209.69 1001.27,1209.69 1001.86,1209.69 1002.44,1209.69 1003.03,1209.69 1003.62,1209.69 1004.2,1209.69 1004.79,1209.69 1005.38,1209.69 1005.96,1209.69 1006.55,1209.69 1007.14,1209.69 1007.72,1209.69 1008.31,1209.69 1008.9,1209.69 1009.48,1209.69 1010.07,1209.69 1010.65,1209.69 1011.24,1209.69 1011.83,1209.69 1012.41,1209.69 1013,1209.69 1013.59,1209.69 1014.17,1209.69 1014.76,1209.69 1015.35,1209.69 1015.93,1209.69 1016.52,1209.69 1017.11,1209.69 1017.69,1209.69 1018.28,1209.69 1018.86,1209.69 1019.45,1209.69 1020.04,1209.69 1020.62,1209.69 1021.21,1209.69 1021.8,1209.69 1022.38,1209.69 1022.97,1209.69 1023.56,1209.69 1024.14,1209.69 1024.73,1209.69 1025.32,1209.69 1025.9,1209.69 1026.49,1209.69 1027.07,1209.69 1027.66,1209.69 1028.25,1209.69 1028.83,1209.69 1029.42,1209.69 1030.01,1209.69 1030.59,1209.69 1031.18,1209.69 1031.77,1209.69 1032.35,1209.69 1032.94,1209.69 1033.52,1209.69 1034.11,1209.69 1034.7,1209.69 1035.28,1209.69 1035.87,1209.69 1036.46,1209.69 1037.04,1209.69 1037.63,1209.69 1038.22,1209.69 1038.8,1209.69 1039.39,1209.69 1039.98,1209.69 1040.56,1209.69 1041.15,1209.69 1041.73,1209.69 1042.32,1209.69 1042.91,1209.69 1043.49,1209.69 1044.08,1209.69 1044.67,1209.69 1045.25,1209.69 1045.84,1209.69 1046.43,1209.69 1047.01,1209.69 1047.6,1209.69 1048.19,1209.69 1048.77,1209.69 1049.36,1209.69 1049.94,1209.69 1050.53,1209.69 1051.12,1209.69 1051.7,1209.69 1052.29,1209.69 1052.88,1209.69 1053.46,1209.69 1054.05,1209.69 1054.64,1209.69 1055.22,1209.69 1055.81,1209.69 1056.39,1209.69 1056.98,1209.69 1057.57,1209.69 1058.15,1209.69 1058.74,1209.69 1059.33,1209.69 1059.91,1209.69 1060.5,1209.69 1061.09,1209.69 1061.67,1209.69 1062.26,1209.69 1062.85,1209.69 1063.43,1209.69 1064.02,1209.69 1064.6,1209.69 1065.19,1209.69 1065.78,1209.69 1066.36,1209.69 1066.95,1209.69 1067.54,1209.69 1068.12,1209.69 1068.71,1209.69 1069.3,1209.69 1069.88,1209.69 1070.47,1209.69 1071.06,1209.69 1071.64,1209.69 1072.23,1209.69 1072.81,1209.69 1073.4,1209.69 1073.99,1209.69 1074.57,1209.69 1075.16,1209.69 1075.75,1209.69 1076.33,1209.69 1076.92,1209.69 1077.51,1209.69 1078.09,1209.69 1078.68,1209.69 1079.26,1209.69 1079.85,1209.69 1080.44,1209.69 1081.02,1209.69 1081.61,1209.69 1082.2,1209.69 1082.78,1209.69 1083.37,1209.69 1083.96,1209.69 1084.54,1209.69 1085.13,1209.69 1085.72,1209.69 1086.3,1209.69 1086.89,1209.69 1087.47,1209.69 1088.06,1209.69 1088.65,1209.69 1089.23,1209.69 1089.82,1209.69 1090.41,1209.69 1090.99,1209.69 1091.58,1209.69 1092.17,1209.69 1092.75,1209.69 1093.34,1209.69 1093.93,1209.69 1094.51,1209.69 1095.1,1209.69 1095.68,1209.69 1096.27,1209.69 1096.86,1209.69 1097.44,1209.69 1098.03,1209.69 1098.62,1209.69 1099.2,1209.69 1099.79,1209.69 1100.38,1209.69 1100.96,1209.69 1101.55,1209.69 1102.14,1209.69 1102.72,1209.69 1103.31,1209.69 1103.89,1209.69 1104.48,1209.69 1105.07,1209.69 1105.65,1209.69 1106.24,1209.69 1106.83,1209.69 1107.41,1209.69 1108,1209.69 1108.59,1209.69 1109.17,1209.69 1109.76,1209.69 1110.34,1209.69 1110.93,1209.69 1111.52,1209.69 1112.1,1209.69 1112.69,1209.69 1113.28,1209.69 1113.86,1209.69 1114.45,1209.69 1115.04,1209.69 1115.62,1209.69 1116.21,1209.69 1116.8,1209.69 1117.38,1209.69 1117.97,1209.69 1118.55,1209.69 1119.14,1209.69 1119.73,1209.69 1120.31,1209.69 1120.9,1209.69 1121.49,1209.69 1122.07,1209.69 1122.66,1209.69 1123.25,1209.69 1123.83,1209.69 1124.42,1209.69 1125.01,1209.69 1125.59,1209.69 1126.18,1209.69 1126.76,1209.69 1127.35,1209.69 1127.94,1209.69 1128.52,1209.69 1129.11,1209.69 1129.7,1209.69 1130.28,1209.69 1130.87,1209.69 1131.46,1209.69 1132.04,1209.69 1132.63,1209.69 1133.21,1209.69 1133.8,1209.69 1134.39,1209.69 1134.97,1209.69 1135.56,1209.69 1136.15,1209.69 1136.73,1209.69 1137.32,1209.69 1137.91,1209.69 1138.49,1209.69 1139.08,1209.69 1139.67,1209.69 1140.25,1209.69 1140.84,1209.69 1141.42,1209.69 1142.01,1209.69 1142.6,1209.69 1143.18,1209.69 1143.77,1209.69 1144.36,1209.69 1144.94,1209.69 1145.53,1209.69 1146.12,1209.69 1146.7,1209.69 1147.29,1209.69 1147.88,1209.69 1148.46,1209.69 1149.05,1209.69 1149.63,1209.69 1150.22,1209.69 1150.81,1209.69 1151.39,1209.69 1151.98,1209.69 1152.57,1209.69 1153.15,1209.69 1153.74,1209.69 1154.33,1209.69 1154.91,1209.69 1155.5,1209.69 1156.09,1209.69 1156.67,1209.69 1157.26,1209.69 1157.84,1209.69 1158.43,1209.69 1159.02,1209.69 1159.6,1209.69 1160.19,1209.69 1160.78,1209.69 1161.36,1209.69 1161.95,1209.69 1162.54,1209.69 1163.12,1209.69 1163.71,1209.69 1164.29,1209.69 1164.88,1209.69 1165.47,1209.69 1166.05,1209.69 1166.64,1209.69 1167.23,1209.69 1167.81,1209.69 1168.4,1209.69 1168.99,1209.69 1169.57,1209.69 1170.16,1209.69 1170.75,1209.69 1171.33,1209.69 1171.92,1209.69 1172.5,1209.69 1173.09,1209.69 1173.68,1209.69 1174.26,1209.69 1174.85,1209.69 1175.44,1209.69 1176.02,1209.69 1176.61,1209.69 1177.2,1209.69 1177.78,1209.69 1178.37,1209.69 1178.96,1209.69 1179.54,1209.69 1180.13,1209.69 1180.71,1209.69 1181.3,1209.69 1181.89,1209.69 1182.47,1209.69 1183.06,1209.69 1183.65,1209.69 1184.23,1209.69 1184.82,1209.69 1185.41,1209.69 1185.99,1209.69 1186.58,1209.69 1187.16,1209.69 1187.75,1209.69 1188.34,1209.69 1188.92,1209.69 1189.51,1209.69 1190.1,1209.69 1190.68,1209.69 1191.27,1209.69 1191.86,1209.69 1192.44,1209.69 1193.03,1209.69 1193.62,1209.69 1194.2,1209.69 1194.79,1209.69 1195.37,1209.69 1195.96,1209.69 1196.55,1209.69 1197.13,1209.69 1197.72,1209.69 1198.31,1209.69 1198.89,1209.69 1199.48,1209.69 1200.07,1209.69 1200.65,1209.69 1201.24,1209.69 1201.83,1209.69 1202.41,1209.69 1203,1209.69 1203.58,1209.69 1204.17,1209.69 1204.76,1209.69 1205.34,1209.69 1205.93,1209.69 1206.52,1209.69 1207.1,1209.69 1207.69,1209.69 1208.28,1209.69 1208.86,1209.69 1209.45,1209.69 1210.03,1209.69 1210.62,1209.69 1211.21,1209.69 1211.79,1209.69 1212.38,1209.69 1212.97,1209.69 1213.55,1209.69 1214.14,1209.69 1214.73,1209.69 1215.31,1209.69 1215.9,1209.69 1216.49,1209.69 1217.07,1209.69 1217.66,1209.69 1218.24,1209.69 1218.83,1209.69 1219.42,1209.69 1220,1209.69 1220.59,1209.69 1221.18,1209.69 1221.76,1209.69 1222.35,1209.69 1222.94,1209.69 1223.52,1209.69 1224.11,1209.69 1224.7,1209.69 1225.28,1209.69 1225.87,1209.69 1226.45,1209.69 1227.04,1209.69 1227.63,1209.69 1228.21,1209.69 1228.8,1209.69 1229.39,1209.69 1229.97,1209.69 1230.56,1209.69 1231.15,1209.69 1231.73,1209.69 1232.32,1209.69 1232.91,1209.69 1233.49,1209.69 1234.08,1209.69 1234.66,1209.69 1235.25,1209.69 1235.84,1209.69 1236.42,1209.69 1237.01,1209.69 1237.6,1209.69 1238.18,1209.69 1238.77,1209.69 1239.36,1209.69 1239.94,1209.69 1240.53,1209.69 1241.11,1209.69 1241.7,1209.69 1242.29,1209.69 1242.87,1209.69 1243.46,1209.69 1244.05,1209.69 1244.63,1209.69 1245.22,1209.69 1245.81,1209.69 1246.39,1209.69 1246.98,1209.69 1247.57,1209.69 1248.15,1209.69 1248.74,1209.69 1249.32,1209.69 1249.91,1209.69 1250.5,1209.69 1251.08,1209.69 1251.67,1209.69 1252.26,1209.69 1252.84,1209.69 1253.43,1209.69 1254.02,1209.69 1254.6,1209.69 1255.19,1209.69 1255.78,1209.69 1256.36,1209.69 1256.95,1209.69 1257.53,1209.69 1258.12,1209.69 1258.71,1209.69 1259.29,1209.69 1259.88,1209.69 1260.47,1209.69 1261.05,1209.69 1261.64,1209.69 1262.23,1209.69 1262.81,1209.69 1263.4,1209.69 1263.98,1209.69 1264.57,1209.69 1265.16,1209.69 1265.74,1209.69 1266.33,1209.69 1266.92,1209.69 1267.5,1209.69 1268.09,1209.69 1268.68,1209.69 1269.26,1209.69 1269.85,1209.69 1270.44,1209.69 1271.02,1209.69 1271.61,1209.69 1272.19,1209.69 1272.78,1209.69 1273.37,1209.69 1273.95,1209.69 1274.54,1209.69 1275.13,1209.69 1275.71,1209.69 1276.3,1209.69 1276.89,1209.69 1277.47,1209.69 1278.06,1209.69 1278.65,1209.69 1279.23,1209.69 1279.82,1209.69 1280.4,1209.69 1280.99,1209.69 1281.58,1209.69 1282.16,1209.69 1282.75,1209.69 1283.34,1209.69 1283.92,1209.69 1284.51,1209.69 1285.1,1209.69 1285.68,1209.69 1286.27,1209.69 1286.86,1209.69 1287.44,1209.69 1288.03,1209.69 1288.61,1209.69 1289.2,1209.69 1289.79,1209.69 1290.37,1209.69 1290.96,1209.69 1291.55,1209.69 1292.13,1209.69 1292.72,1209.69 1293.31,1209.69 1293.89,1209.69 1294.48,1209.69 1295.06,1209.69 1295.65,1209.69 1296.24,1209.69 1296.82,1209.69 1297.41,1209.69 1298,1209.69 1298.58,1209.69 1299.17,1209.69 1299.76,1209.69 1300.34,1209.69 1300.93,1209.69 1301.52,1209.69 1302.1,1209.69 1302.69,1209.69 1303.27,1209.69 1303.86,1209.69 1304.45,1209.69 1305.03,1209.69 1305.62,1209.69 1306.21,1209.69 1306.79,1209.69 1307.38,1209.69 1307.97,1209.69 1308.55,1209.69 1309.14,1209.69 1309.73,1209.69 1310.31,1209.69 1310.9,1209.69 1311.48,1209.69 1312.07,1209.69 1312.66,1209.69 1313.24,1209.69 1313.83,1209.69 1314.42,1209.69 1315,1209.69 1315.59,1209.69 1316.18,1209.69 1316.76,1209.69 1317.35,1209.69 1317.93,1209.69 1318.52,1209.69 1319.11,1209.69 1319.69,1209.69 1320.28,1209.69 1320.87,1209.69 1321.45,1209.69 1322.04,1209.69 1322.63,1209.69 1323.21,1209.69 1323.8,1209.69 1324.39,1209.69 1324.97,1209.69 1325.56,1209.69 1326.14,1209.69 1326.73,1209.69 1327.32,1209.69 1327.9,1209.69 1328.49,1209.69 1329.08,1209.69 1329.66,1209.69 1330.25,1209.69 1330.84,1209.69 1331.42,1209.69 1332.01,1209.69 1332.6,1209.69 1333.18,1209.69 1333.77,1209.69 1334.35,1209.69 1334.94,1209.69 1335.53,1209.69 1336.11,1209.69 1336.7,1209.69 1337.29,1209.69 1337.87,1209.69 1338.46,1209.69 1339.05,1209.69 1339.63,1209.69 1340.22,1209.69 1340.8,1209.69 1341.39,1209.69 1341.98,1209.69 1342.56,1209.69 1343.15,1209.69 1343.74,1209.69 1344.32,1209.69 1344.91,1209.69 1345.5,1209.69 1346.08,1209.69 1346.67,1209.69 1347.26,1209.69 1347.84,1209.69 1348.43,1209.69 1349.01,1209.69 1349.6,1209.69 1350.19,1209.69 1350.77,1209.69 1351.36,1209.69 1351.95,1209.69 1352.53,1209.69 1353.12,1209.69 1353.71,1209.69 1354.29,1209.69 1354.88,1209.69 1355.47,1209.69 1356.05,1209.69 1356.64,1209.69 1357.22,1209.69 1357.81,1209.69 1358.4,1209.69 1358.98,1209.69 1359.57,1209.69 1360.16,1209.69 1360.74,1209.69 1361.33,1209.69 1361.92,1209.69 1362.5,1209.69 1363.09,1209.69 1363.68,1209.69 1364.26,1209.69 1364.85,1209.69 1365.43,1209.69 1366.02,1209.69 1366.61,1209.69 1367.19,1209.69 1367.78,1209.69 1368.37,1209.69 1368.95,1209.69 1369.54,1209.69 1370.13,1209.69 1370.71,1209.69 1371.3,1209.69 1371.88,1209.69 1372.47,1209.69 1373.06,1209.69 1373.64,1209.69 1374.23,1209.69 1374.82,1209.69 1375.4,1209.69 1375.99,1209.69 1376.58,1209.69 1377.16,1209.69 1377.75,1209.69 1378.34,1209.69 1378.92,1209.69 1379.51,1209.69 1380.09,1209.69 1380.68,1209.69 1381.27,1209.69 1381.85,1209.69 1382.44,1209.69 1383.03,1209.69 1383.61,1209.69 1384.2,1209.69 1384.79,1209.69 1385.37,1209.69 1385.96,1209.69 1386.55,1209.69 1387.13,1209.69 1387.72,1209.69 1388.3,1209.69 1388.89,1209.69 1389.48,1209.69 1390.06,1209.69 1390.65,1209.69 1391.24,1209.69 1391.82,1209.69 1392.41,1209.69 1393,1209.69 1393.58,1209.69 1394.17,1209.69 1394.75,1209.69 1395.34,1209.69 1395.93,1209.69 1396.51,1209.69 1397.1,1209.69 1397.69,1209.69 1398.27,1209.69 1398.86,1209.69 1399.45,1209.69 1400.03,1209.69 1400.62,1209.69 1401.21,1209.69 1401.79,1209.69 1402.38,1209.69 1402.96,1209.69 1403.55,1209.69 1404.14,1209.69 1404.72,1209.69 1405.31,1209.69 1405.9,1209.69 1406.48,1209.69 1407.07,1209.69 1407.66,1209.69 1408.24,1209.69 1408.83,1209.69 1409.42,1209.69 1410,1209.69 1410.59,1209.69 1411.17,1209.69 1411.76,1209.69 1412.35,1209.69 1412.93,1209.69 1413.52,1209.69 1414.11,1209.69 1414.69,1209.69 1415.28,1209.69 1415.87,1209.69 1416.45,1209.69 1417.04,1209.69 1417.63,1209.69 1418.21,1209.69 1418.8,1209.69 1419.38,1209.69 1419.97,1209.69 1420.56,1209.69 1421.14,1209.69 1421.73,1209.69 1422.32,1209.69 1422.9,1209.69 1423.49,1209.69 1424.08,1209.69 1424.66,1209.69 1425.25,1209.69 1425.83,1209.69 1426.42,1209.69 1427.01,1209.69 1427.59,1209.69 1428.18,1209.69 1428.77,1209.69 1429.35,1209.69 1429.94,1209.69 1430.53,1209.69 1431.11,1209.69 1431.7,1209.69 1432.29,1209.69 1432.87,1209.69 1433.46,1209.69 1434.04,1209.69 1434.63,1209.69 1435.22,1209.69 1435.8,1209.69 1436.39,1209.69 1436.98,1209.69 1437.56,1209.69 1438.15,1209.69 1438.74,1209.69 1439.32,1209.69 1439.91,1209.69 1440.5,1209.69 1441.08,1209.69 1441.67,1209.69 1442.25,1209.69 1442.84,1209.69 1443.43,1209.69 1444.01,1209.69 1444.6,1209.69 1445.19,1209.69 1445.77,1209.69 1446.36,1209.69 1446.95,1209.69 1447.53,1209.69 1448.12,1209.69 1448.7,1209.69 1449.29,1209.69 1449.88,1209.69 1450.46,1209.69 1451.05,1209.69 1451.64,1209.69 1452.22,1209.69 1452.81,1209.69 1453.4,1209.69 1453.98,1209.69 1454.57,1209.69 1455.16,1209.69 1455.74,1209.69 1456.33,1209.69 1456.91,1209.69 1457.5,1209.69 1458.09,1209.69 1458.67,1209.69 1459.26,1209.69 1459.85,1209.69 1460.43,1209.69 1461.02,1209.69 1461.61,1209.69 1462.19,1209.69 1462.78,1209.69 1463.37,1209.69 1463.95,1209.69 1464.54,1209.69 1465.12,1209.69 1465.71,1209.69 1466.3,1209.69 1466.88,1209.69 1467.47,1209.69 1468.06,1209.69 1468.64,1209.69 1469.23,1209.69 1469.82,1209.69 1470.4,1209.69 1470.99,1209.69 1471.57,1209.69 1472.16,1209.69 1472.75,1209.69 1473.33,1209.69 1473.92,1209.69 1474.51,1209.69 1475.09,1209.69 1475.68,1209.69 1476.27,1209.69 1476.85,1209.69 1477.44,1209.69 1478.03,1209.69 1478.61,1209.69 1479.2,1209.69 1479.78,1209.69 1480.37,1209.69 1480.96,1209.69 1481.54,1209.69 1482.13,1209.69 1482.72,1209.69 1483.3,1209.69 1483.89,1209.69 1484.48,1209.69 1485.06,1209.69 1485.65,1209.69 1486.24,1209.69 1486.82,1209.69 1487.41,1209.69 1487.99,1209.69 1488.58,1209.69 1489.17,1209.69 1489.75,1209.69 1490.34,1209.69 1490.93,1209.69 1491.51,1209.69 1492.1,1209.69 1492.69,1209.69 1493.27,1209.69 1493.86,1209.69 1494.45,1209.69 1495.03,1209.69 1495.62,1209.69 1496.2,1209.69 1496.79,1209.69 1497.38,1209.69 1497.96,1209.69 1498.55,1209.69 1499.14,1209.69 1499.72,1209.69 1500.31,1209.69 1500.9,1209.69 1501.48,1209.69 1502.07,1209.69 1502.65,1209.69 1503.24,1209.69 1503.83,1209.69 1504.41,1209.69 1505,1209.69 1505.59,1209.69 1506.17,1209.69 1506.76,1209.69 1507.35,1209.69 1507.93,1209.69 1508.52,1209.69 1509.11,1209.69 1509.69,1209.69 1510.28,1209.69 1510.86,1209.69 1511.45,1209.69 1512.04,1209.69 1512.62,1209.69 1513.21,1209.69 1513.8,1209.69 1514.38,1209.69 1514.97,1209.69 1515.56,1209.69 1516.14,1209.69 1516.73,1209.69 1517.32,1209.69 1517.9,1209.69 1518.49,1209.69 1519.07,1209.69 1519.66,1209.69 1520.25,1209.69 1520.83,1209.69 1521.42,1209.69 1522.01,1209.69 1522.59,1209.69 1523.18,1209.69 1523.77,1209.69 1524.35,1209.69 1524.94,1209.69 1525.52,1209.69 1526.11,1209.69 1526.7,1209.69 1527.28,1209.69 1527.87,1209.69 1528.46,1209.69 1529.04,1209.69 1529.63,1209.69 1530.22,1209.69 1530.8,1209.69 1531.39,1209.69 1531.98,1209.69 1532.56,1209.69 1533.15,1209.69 1533.73,1209.69 1534.32,1209.69 1534.91,1209.69 1535.49,1209.69 1536.08,1209.69 1536.67,1209.69 1537.25,1209.69 1537.84,1209.69 1538.43,1209.69 1539.01,1209.69 1539.6,1209.69 1540.19,1209.69 1540.77,1209.69 1541.36,1209.69 1541.94,1209.69 1542.53,1209.69 1543.12,1209.69 1543.7,1209.69 1544.29,1209.69 1544.88,1209.69 1545.46,1209.69 1546.05,1209.69 1546.64,1209.69 1547.22,1209.69 1547.81,1209.69 1548.4,1209.69 1548.98,1209.69 1549.57,1209.69 1550.15,1209.69 1550.74,1209.69 1551.33,1209.69 1551.91,1209.69 1552.5,1209.69 1553.09,1209.69 1553.67,1209.69 1554.26,1209.69 1554.85,1209.69 1555.43,1209.69 1556.02,1209.69 1556.6,1209.69 1557.19,1209.69 1557.78,1209.69 1558.36,1209.69 1558.95,1209.69 1559.54,1209.69 1560.12,1209.69 1560.71,1209.69 1561.3,1209.69 1561.88,1209.69 1562.47,1209.69 1563.06,1209.69 1563.64,1209.69 1564.23,1209.69 1564.81,1209.69 1565.4,1209.69 1565.99,1209.69 1566.57,1209.69 1567.16,1209.69 1567.75,1209.69 1568.33,1209.69 1568.92,1209.69 1569.51,1209.69 1570.09,1209.69 1570.68,1209.69 1571.27,1209.69 1571.85,1209.69 1572.44,1209.69 1573.02,1209.69 1573.61,1209.69 1574.2,1209.69 1574.78,1209.69 1575.37,1209.69 1575.96,1209.69 1576.54,1209.69 1577.13,1209.69 1577.72,1209.69 1578.3,1209.69 1578.89,1209.69 1579.47,1209.69 1580.06,1209.69 1580.65,1209.69 1581.23,1209.69 1581.82,1209.69 1582.41,1209.69 1582.99,1209.69 1583.58,1209.69 1584.17,1209.69 1584.75,1209.69 1585.34,1209.69 1585.93,1209.69 1586.51,1209.69 1587.1,1209.69 1587.68,1209.69 1588.27,1209.69 1588.86,1209.69 1589.44,1209.69 1590.03,1209.69 1590.62,1209.69 1591.2,1209.69 1591.79,1209.69 1592.38,1209.69 1592.96,1209.69 1593.55,1209.69 1594.14,1209.69 1594.72,1209.69 1595.31,1209.69 1595.89,1209.69 1596.48,1209.69 1597.07,1209.69 1597.65,1209.69 1598.24,1209.69 1598.83,1209.69 1599.41,1209.69 1600,1209.69 1600.59,1209.69 1601.17,1209.69 1601.76,1209.69 1602.34,1209.69 1602.93,1209.69 1603.52,1209.69 1604.1,1209.69 1604.69,1209.69 1605.28,1209.69 1605.86,1209.69 1606.45,1209.69 1607.04,1209.69 1607.62,1209.69 1608.21,1209.69 1608.8,1209.69 1609.38,1209.69 1609.97,1209.69 1610.55,1209.69 1611.14,1209.69 1611.73,1209.69 1612.31,1209.69 1612.9,1209.69 1613.49,1209.69 1614.07,1209.69 1614.66,1209.69 1615.25,1209.69 1615.83,1209.69 1616.42,1209.69 1617.01,1209.69 1617.59,1209.69 1618.18,1209.69 1618.76,1209.69 1619.35,1209.69 1619.94,1209.69 1620.52,1209.69 1621.11,1209.69 1621.7,1209.69 1622.28,1209.69 1622.87,1209.69 1623.46,1209.69 1624.04,1209.69 1624.63,1209.69 1625.22,1209.69 1625.8,1209.69 1626.39,1209.69 1626.97,1209.69 1627.56,1209.69 1628.15,1209.69 1628.73,1209.69 1629.32,1209.69 1629.91,1209.69 1630.49,1209.69 1631.08,1209.69 1631.67,1209.69 1632.25,1209.69 1632.84,1209.69 1633.42,1209.69 1634.01,1209.69 1634.6,1209.69 1635.18,1209.69 1635.77,1209.69 1636.36,1209.69 1636.94,1209.69 1637.53,1209.69 1638.12,1209.69 1638.7,1209.69 1639.29,1209.69 1639.88,1209.69 1640.46,1209.69 1641.05,1209.69 1641.63,1209.69 1642.22,1209.69 1642.81,1209.69 1643.39,1209.69 1643.98,1209.69 1644.57,1209.69 1645.15,1209.69 1645.74,1209.69 1646.33,1209.69 1646.91,1209.69 1647.5,1209.69 1648.09,1209.69 1648.67,1209.69 1649.26,1209.69 1649.84,1209.69 1650.43,1209.69 1651.02,1209.69 1651.6,1209.69 1652.19,1209.69 1652.78,1209.69 1653.36,1209.69 1653.95,1209.69 1654.54,1209.69 1655.12,1209.69 1655.71,1209.69 1656.29,1209.69 1656.88,1209.69 1657.47,1209.69 1658.05,1209.69 1658.64,1209.69 1659.23,1209.69 1659.81,1209.69 1660.4,1209.69 1660.99,1209.69 1661.57,1209.69 1662.16,1209.69 1662.75,1209.69 1663.33,1209.69 1663.92,1209.69 1664.5,1209.69 1665.09,1209.69 1665.68,1209.69 1666.26,1209.69 1666.85,1209.69 1667.44,1209.69 1668.02,1209.69 1668.61,1209.69 1669.2,1209.69 1669.78,1209.69 1670.37,1209.69 1670.96,1209.69 1671.54,1209.69 1672.13,1209.69 1672.71,1209.69 1673.3,1209.69 1673.89,1209.69 1674.47,1209.69 1675.06,1209.69 1675.65,1209.69 1676.23,1209.69 1676.82,1209.69 1677.41,1209.69 1677.99,1209.69 1678.58,1209.69 1679.17,1209.69 1679.75,1209.69 1680.34,1209.69 1680.92,1209.69 1681.51,1209.69 1682.1,1209.69 1682.68,1209.69 1683.27,1209.69 1683.86,1209.69 1684.44,1209.69 1685.03,1209.69 1685.62,1209.69 1686.2,1209.69 1686.79,1209.69 1687.37,1209.69 1687.96,1209.69 1688.55,1209.69 1689.13,1209.69 1689.72,1209.69 1690.31,1209.69 1690.89,1209.69 1691.48,1209.69 1692.07,1209.69 1692.65,1209.69 1693.24,1209.69 1693.83,1209.69 1694.41,1209.69 1695,1209.69 1695.58,1209.69 1696.17,1209.69 1696.76,1209.69 1697.34,1209.69 1697.93,1209.69 1698.52,1209.69 1699.1,1209.69 1699.69,1209.69 1700.28,1209.69 1700.86,1209.69 1701.45,1209.69 1702.04,1209.69 1702.62,1209.69 1703.21,1209.69 1703.79,1209.69 1704.38,1209.69 1704.97,1209.69 1705.55,1209.69 1706.14,1209.69 1706.73,1209.69 1707.31,1209.69 1707.9,1209.69 1708.49,1209.69 1709.07,1209.69 1709.66,1209.69 1710.24,1209.69 1710.83,1209.69 1711.42,1209.69 1712,1209.69 1712.59,1209.69 1713.18,1209.69 1713.76,1209.69 1714.35,1209.69 1714.94,1209.69 1715.52,1209.69 1716.11,1209.69 1716.7,1209.69 1717.28,1209.69 1717.87,1209.69 1718.45,1209.69 1719.04,1209.69 1719.63,1209.69 1720.21,1209.69 1720.8,1209.69 1721.39,1209.69 1721.97,1209.69 1722.56,1209.69 1723.15,1209.69 1723.73,1209.69 1724.32,1209.69 1724.91,1209.69 1725.49,1209.69 1726.08,1209.69 1726.66,1209.69 1727.25,1209.69 1727.84,1209.69 1728.42,1209.69 1729.01,1209.69 1729.6,1209.69 1730.18,1209.69 1730.77,1209.69 1731.36,1209.69 1731.94,1209.69 1732.53,1209.69 1733.11,1209.69 1733.7,1209.69 1734.29,1209.69 1734.87,1209.69 1735.46,1209.69 1736.05,1209.69 1736.63,1209.69 1737.22,1209.69 1737.81,1209.69 1738.39,1209.69 1738.98,1209.69 1739.57,1209.69 1740.15,1209.69 1740.74,1209.69 1741.32,1209.69 1741.91,1209.69 1742.5,1209.69 1743.08,1209.69 1743.67,1209.69 1744.26,1209.69 1744.84,1209.69 1745.43,1209.69 1746.02,1209.69 1746.6,1209.69 1747.19,1209.69 1747.78,1209.69 1748.36,1209.69 1748.95,1209.69 1749.53,1209.69 1750.12,1209.69 1750.71,1209.69 1751.29,1209.69 1751.88,1209.69 1752.47,1209.69 1753.05,1209.69 1753.64,1209.69 1754.23,1209.69 1754.81,1209.69 1755.4,1209.69 1755.99,1209.69 1756.57,1209.69 1757.16,1209.69 1757.74,1209.69 1758.33,1209.69 1758.92,1209.69 1759.5,1209.69 1760.09,1209.69 1760.68,1209.69 1761.26,1209.69 1761.85,1209.69 1762.44,1209.69 1763.02,1209.69 1763.61,1209.69 1764.19,1209.69 1764.78,1209.69 1765.37,1209.69 1765.95,1209.69 1766.54,1209.69 1767.13,1209.69 1767.71,1209.69 1768.3,1209.69 1768.89,1209.69 1769.47,1209.69 1770.06,1209.69 1770.65,1209.69 1771.23,1209.69 1771.82,1209.69 1772.4,1209.69 1772.99,1209.69 1773.58,1209.69 1774.16,1209.69 1774.75,1209.69 1775.34,1209.69 1775.92,1209.69 1776.51,1209.69 1777.1,1209.69 1777.68,1209.69 1778.27,1209.69 1778.86,1209.69 1779.44,1209.69 1780.03,1209.69 1780.61,1209.69 1781.2,1209.69 1781.79,1209.69 1782.37,1209.69 1782.96,1209.69 1783.55,1209.69 1784.13,1209.69 1784.72,1209.69 1785.31,1209.69 1785.89,1209.69 1786.48,1209.69 1787.06,1209.69 1787.65,1209.69 1788.24,1209.69 1788.82,1209.69 1789.41,1209.69 1790,1209.69 1790.58,1209.69 1791.17,1209.69 1791.76,1209.69 1792.34,1209.69 1792.93,1209.69 1793.52,1209.69 1794.1,1209.69 1794.69,1209.69 1795.27,1209.69 1795.86,1209.69 1796.45,1209.69 1797.03,1209.69 1797.62,1209.69 1798.21,1209.69 1798.79,1209.69 1799.38,1209.69 1799.97,1209.69 1800.55,1209.69 1801.14,1209.69 1801.73,1209.69 1802.31,1209.69 1802.9,1209.69 1803.48,1209.69 1804.07,1209.69 1804.66,1209.69 1805.24,1209.69 1805.83,1209.69 1806.42,1209.69 1807,1209.69 1807.59,1209.69 1808.18,1209.69 1808.76,1209.69 1809.35,1209.69 1809.94,1209.69 1810.52,1209.69 1811.11,1209.69 1811.69,1209.69 1812.28,1209.69 1812.87,1209.69 1813.45,1209.69 1814.04,1209.69 1814.63,1209.69 1815.21,1209.69 1815.8,1209.69 1816.39,1209.69 1816.97,1209.69 1817.56,1209.69 1818.14,1209.69 1818.73,1209.69 1819.32,1209.69 1819.9,1209.69 1820.49,1209.69 1821.08,1209.69 1821.66,1209.69 1822.25,1209.69 1822.84,1209.69 1823.42,1209.69 1824.01,1209.69 1824.6,1209.69 1825.18,1209.69 1825.77,1209.69 1826.35,1209.69 1826.94,1209.69 1827.53,1209.69 1828.11,1209.69 1828.7,1209.69 1829.29,1209.69 1829.87,1209.69 1830.46,1209.69 1831.05,1209.69 1831.63,1209.69 1832.22,1209.69 1832.81,1209.69 1833.39,1209.69 1833.98,1209.69 1834.56,1209.69 1835.15,1209.69 1835.74,1209.69 1836.32,1209.69 1836.91,1209.69 1837.5,1209.69 1838.08,1209.69 1838.67,1209.69 1839.26,1209.69 1839.84,1209.69 1840.43,1209.69 1841.01,1209.69 1841.6,1209.69 1842.19,1209.69 1842.77,1209.69 1843.36,1209.69 1843.95,1209.69 1844.53,1209.69 1845.12,1209.69 1845.71,1209.69 1846.29,1209.69 1846.88,1209.69 1847.47,1209.69 1848.05,1209.69 1848.64,1209.69 1849.22,1209.69 1849.81,1209.69 1850.4,1209.69 1850.98,1209.69 1851.57,1209.69 1852.16,1209.69 1852.74,1209.69 1853.33,1209.69 1853.92,1209.69 1854.5,1209.69 1855.09,1209.69 1855.68,1209.69 1856.26,1209.69 1856.85,1209.69 1857.43,1209.69 1858.02,1209.69 1858.61,1209.69 1859.19,1209.69 1859.78,1209.69 1860.37,1209.69 1860.95,1209.69 1861.54,1209.69 1862.13,1209.69 1862.71,1209.69 1863.3,1209.69 1863.88,1209.69 1864.47,1209.69 1865.06,1209.69 1865.64,1209.69 1866.23,1209.69 1866.82,1209.69 1867.4,1209.69 1867.99,1209.69 1868.58,1209.69 1869.16,1209.69 1869.75,1209.69 1870.34,1209.69 1870.92,1209.69 1871.51,1209.69 1872.09,1209.69 1872.68,1209.69 1873.27,1209.69 1873.85,1209.69 1874.44,1209.69 1875.03,1209.69 1875.61,1209.69 1876.2,1209.69 1876.79,1209.69 1877.37,1209.69 1877.96,1209.69 1878.55,1209.69 1879.13,1209.69 1879.72,1209.69 1880.3,1209.69 1880.89,1209.69 1881.48,1209.69 1882.06,1209.69 1882.65,1209.69 1883.24,1209.69 1883.82,1209.69 1884.41,1209.69 1885,1209.69 1885.58,1209.69 1886.17,1209.69 1886.76,1209.69 1887.34,1209.69 1887.93,1209.69 1888.51,1209.69 1889.1,1209.69 1889.69,1209.69 1890.27,1209.69 1890.86,1209.69 1891.45,1209.69 1892.03,1209.69 1892.62,1209.69 1893.21,1209.69 1893.79,1209.69 1894.38,1209.69 1894.96,1209.69 1895.55,1209.69 1896.14,1209.69 1896.72,1209.69 1897.31,1209.69 1897.9,1209.69 1898.48,1209.69 1899.07,1209.69 1899.66,1209.69 1900.24,1209.69 1900.83,1209.69 1901.42,1209.69 1902,1209.69 1902.59,1209.69 1903.17,1209.69 1903.76,1209.69 1904.35,1209.69 1904.93,1209.69 1905.52,1209.69 1906.11,1209.69 1906.69,1209.69 1907.28,1209.69 1907.87,1209.69 1908.45,1209.69 1909.04,1209.69 1909.63,1209.69 1910.21,1209.69 1910.8,1209.69 1911.38,1209.69 1911.97,1209.69 1912.56,1209.69 1913.14,1209.69 1913.73,1209.69 1914.32,1209.69 1914.9,1209.69 1915.49,1209.69 1916.08,1209.69 1916.66,1209.69 1917.25,1209.69 1917.83,1209.69 1918.42,1209.69 1919.01,1209.69 1919.59,1209.69 1920.18,1209.69 1920.77,1209.69 1921.35,1209.69 1921.94,1209.69 1922.53,1209.69 1923.11,1209.69 1923.7,1209.69 1924.29,1209.69 1924.87,1209.69 1925.46,1209.69 1926.04,1209.69 1926.63,1209.69 1927.22,1209.69 1927.8,1209.69 1928.39,1209.69 1928.98,1209.69 1929.56,1209.69 1930.15,1209.69 1930.74,1209.69 1931.32,1209.69 1931.91,1209.69 1932.5,1209.69 1933.08,1209.69 1933.67,1209.69 1934.25,1209.69 1934.84,1209.69 1935.43,1209.69 1936.01,1209.69 1936.6,1209.69 1937.19,1209.69 1937.77,1209.69 1938.36,1209.69 1938.95,1209.69 1939.53,1209.69 1940.12,1209.69 1940.71,1209.69 1941.29,1209.69 1941.88,1209.69 1942.46,1209.69 1943.05,1209.69 1943.64,1209.69 1944.22,1209.69 1944.81,1209.69 1945.4,1209.69 1945.98,1209.69 1946.57,1209.69 1947.16,1209.69 1947.74,1209.69 1948.33,1209.69 1948.91,1209.69 1949.5,1209.69 1950.09,1209.69 1950.67,1209.69 1951.26,1209.69 1951.85,1209.69 1952.43,1209.69 1953.02,1209.69 1953.61,1209.69 1954.19,1209.69 1954.78,1209.69 1955.37,1209.69 1955.95,1209.69 1956.54,1209.69 1957.12,1209.69 1957.71,1209.69 1958.3,1209.69 1958.88,1209.69 1959.47,1209.69 1960.06,1209.69 1960.64,1209.69 1961.23,1209.69 1961.82,1209.69 1962.4,1209.69 1962.99,1209.69 1963.58,1209.69 1964.16,1209.69 1964.75,1209.69 1965.33,1209.69 1965.92,1209.69 1966.51,1209.69 1967.09,1209.69 1967.68,1209.69 1968.27,1209.69 1968.85,1209.69 1969.44,1209.69 1970.03,1209.69 1970.61,1209.69 1971.2,1209.69 1971.78,1209.69 1972.37,1209.69 1972.96,1209.69 1973.54,1209.69 1974.13,1209.69 1974.72,1209.69 1975.3,1209.69 1975.89,1209.69 1976.48,1209.69 1977.06,1209.69 1977.65,1209.69 1978.24,1209.69 1978.82,1209.69 1979.41,1209.69 1979.99,1209.69 1980.58,1209.69 1981.17,1209.69 1981.75,1209.69 1982.34,1209.69 1982.93,1209.69 1983.51,1209.69 1984.1,1209.69 1984.69,1209.69 1985.27,1209.69 1985.86,1209.69 1986.45,1209.69 1987.03,1209.69 1987.62,1209.69 1988.2,1209.69 1988.79,1209.69 1989.38,1209.69 1989.96,1209.69 1990.55,1209.69 1991.14,1209.69 1991.72,1209.69 1992.31,1209.69 1992.9,1209.69 1993.48,1209.69 1994.07,1209.69 1994.65,1209.69 1995.24,1209.69 1995.83,1209.69 1996.41,1209.69 1997,1209.69 1997.59,1209.69 1998.17,1209.69 1998.76,1209.69 1999.35,1209.69 1999.93,1209.69 2000.52,1209.69 2001.11,1209.69 2001.69,1209.69 2002.28,1209.69 2002.86,1209.69 2003.45,1209.69 2004.04,1209.69 2004.62,1209.69 2005.21,1209.69 2005.8,1209.69 2006.38,1209.69 2006.97,1209.69 2007.56,1209.69 2008.14,1209.69 2008.73,1209.69 2009.32,1209.69 2009.9,1209.69 2010.49,1209.69 2011.07,1209.69 2011.66,1209.69 2012.25,1209.69 2012.83,1209.69 2013.42,1209.69 2014.01,1209.69 2014.59,1209.69 2015.18,1209.69 2015.77,1209.69 2016.35,1209.69 2016.94,1209.69 2017.53,1209.69 2018.11,1209.69 2018.7,1209.69 2019.28,1209.69 2019.87,1209.69 2020.46,1209.69 2021.04,1209.69 2021.63,1209.69 2022.22,1209.69 2022.8,1209.69 2023.39,1209.69 2023.98,1209.69 2024.56,1209.69 2025.15,1209.69 2025.73,1209.69 2026.32,1209.69 2026.91,1209.69 2027.49,1209.69 2028.08,1209.69 2028.67,1209.69 2029.25,1209.69 2029.84,1209.69 2030.43,1209.69 2031.01,1209.69 2031.6,1209.69 2032.19,1209.69 2032.77,1209.69 2033.36,1209.69 2033.94,1209.69 2034.53,1209.69 2035.12,1209.69 2035.7,1209.69 2036.29,1209.69 2036.88,1209.69 2037.46,1209.69 2038.05,1209.69 2038.64,1209.69 2039.22,1209.69 2039.81,1209.69 2040.4,1209.69 2040.98,1209.69 2041.57,1209.69 2042.15,1209.69 2042.74,1209.69 2043.33,1209.69 2043.91,1209.69 2044.5,1209.69 2045.09,1209.69 2045.67,1209.69 2046.26,1209.69 2046.85,1209.69 2047.43,1209.69 2048.02,1209.69 2048.6,1209.69 2049.19,1209.69 2049.78,1209.69 2050.36,1209.69 2050.95,1209.69 2051.54,1209.69 2052.12,1209.69 2052.71,1209.69 2053.3,1209.69 2053.88,1209.69 2054.47,1209.69 2055.06,1209.69 2055.64,1209.69 2056.23,1209.69 2056.81,1209.69 2057.4,1209.69 2057.99,1209.69 2058.57,1209.69 2059.16,1209.69 2059.75,1209.69 2060.33,1209.69 2060.92,1209.69 2061.51,1209.69 2062.09,1209.69 2062.68,1209.69 2063.27,1209.69 2063.85,1209.69 2064.44,1209.69 2065.02,1209.69 2065.61,1209.69 2066.2,1209.69 2066.78,1209.69 2067.37,1209.69 2067.96,1209.69 2068.54,1209.69 2069.13,1209.69 2069.72,1209.69 2070.3,1209.69 2070.89,1209.69 2071.48,1209.69 2072.06,1209.69 2072.65,1209.69 2073.23,1209.69 2073.82,1209.69 2074.41,1209.69 2074.99,1209.69 2075.58,1209.69 2076.17,1209.69 2076.75,1209.69 2077.34,1209.69 2077.93,1209.69 2078.51,1209.69 2079.1,1209.69 2079.68,1209.69 2080.27,1209.69 2080.86,1209.69 2081.44,1209.69 2082.03,1209.69 2082.62,1209.69 2083.2,1209.69 2083.79,1209.69 2084.38,1209.69 2084.96,1209.69 2085.55,1209.69 2086.14,1209.69 2086.72,1209.69 2087.31,1209.69 2087.89,1209.69 2088.48,1209.69 2089.07,1209.69 2089.65,1209.69 2090.24,1209.69 2090.83,1209.69 2091.41,1209.69 2092,1209.69 2092.59,1209.69 2093.17,1209.69 2093.76,1209.69 2094.35,1209.69 2094.93,1209.69 2095.52,1209.69 2096.1,1209.69 2096.69,1209.69 2097.28,1209.69 2097.86,1209.69 2098.45,1209.69 2099.04,1209.69 2099.62,1209.69 2100.21,1209.69 2100.8,1209.69 2101.38,1209.69 2101.97,1209.69 2102.55,1209.69 2103.14,1209.69 2103.73,1209.69 2104.31,1209.69 2104.9,1209.69 2105.49,1209.69 2106.07,1209.69 2106.66,1209.69 2107.25,1209.69 2107.83,1209.69 2108.42,1209.69 2109.01,1209.69 2109.59,1209.69 2110.18,1209.69 2110.76,1209.69 2111.35,1209.69 2111.94,1209.69 2112.52,1209.69 2113.11,1209.69 2113.7,1209.69 2114.28,1209.69 2114.87,1209.69 2115.46,1209.69 2116.04,1209.69 2116.63,1209.69 2117.22,1209.69 2117.8,1209.69 2118.39,1209.69 2118.97,1209.69 2119.56,1209.69 2120.15,1209.69 2120.73,1209.69 2121.32,1209.69 2121.91,1209.69 2122.49,1209.69 2123.08,1209.69 2123.67,1209.69 2124.25,1209.69 2124.84,1209.69 2125.42,1209.69 2126.01,1209.69 2126.6,1209.69 2127.18,1209.69 2127.77,1209.69 2128.36,1209.69 2128.94,1209.69 2129.53,1209.69 2130.12,1209.69 2130.7,1209.69 2131.29,1209.69 2131.88,1209.69 2132.46,1209.69 2133.05,1209.69 2133.63,1209.69 2134.22,1209.69 2134.81,1209.69 2135.39,1209.69 2135.98,1209.69 2136.57,1209.69 2137.15,1209.69 2137.74,1209.69 2138.33,1209.69 2138.91,1209.69 2139.5,1209.69 2140.09,1209.69 2140.67,1209.69 2141.26,1209.69 2141.84,1209.69 2142.43,1209.69 2143.02,1209.69 2143.6,1209.69 2144.19,1209.69 2144.78,1209.69 2145.36,1209.69 2145.95,1209.69 2146.54,1209.69 2147.12,1209.69 2147.71,1209.69 2148.3,1209.69 2148.88,1209.69 2149.47,1209.69 2150.05,1209.69 2150.64,1209.69 2151.23,1209.69 2151.81,1209.69 2152.4,1209.69 2152.99,1209.69 2153.57,1209.69 2154.16,1209.69 2154.75,1209.69 2155.33,1209.69 2155.92,1209.69 2156.5,1209.69 2157.09,1209.69 2157.68,1209.69 2158.26,1209.69 \"/>\n<path clip-path=\"url(#clip552)\" d=\"M986.025 1209.52 L986.612 1209.52 L987.198 1209.52 L987.785 1209.52 L988.371 1209.52 L988.957 1209.52 L989.544 1209.52 L990.13 1209.52 L990.717 1209.52 L991.303 1209.52 L991.889 1209.52 L992.476 1209.52 L993.062 1209.52 L993.649 1209.52 L994.235 1209.52 L994.822 1209.52 L995.408 1209.52 L995.994 1209.52 L996.581 1209.52 L997.167 1209.52 L997.754 1209.52 L998.34 1209.52 L998.926 1209.52 L999.513 1209.52 L1000.1 1209.52 L1000.69 1209.52 L1001.27 1209.52 L1001.86 1209.52 L1002.44 1209.52 L1003.03 1209.52 L1003.62 1209.52 L1004.2 1209.52 L1004.79 1209.52 L1005.38 1209.52 L1005.96 1209.52 L1006.55 1209.52 L1007.14 1209.52 L1007.72 1209.52 L1008.31 1209.52 L1008.9 1209.52 L1009.48 1209.52 L1010.07 1209.52 L1010.65 1209.52 L1011.24 1209.52 L1011.83 1209.52 L1012.41 1209.52 L1013 1209.52 L1013.59 1209.52 L1014.17 1209.52 L1014.76 1209.52 L1015.35 1209.52 L1015.93 1209.52 L1016.52 1209.52 L1017.11 1209.52 L1017.69 1209.52 L1018.28 1209.52 L1018.86 1209.52 L1019.45 1209.52 L1020.04 1209.52 L1020.62 1209.52 L1021.21 1209.52 L1021.8 1209.52 L1022.38 1209.52 L1022.97 1209.52 L1023.56 1209.52 L1024.14 1209.52 L1024.73 1209.52 L1025.32 1209.52 L1025.9 1209.52 L1026.49 1209.52 L1027.07 1209.52 L1027.66 1209.52 L1028.25 1209.52 L1028.83 1209.52 L1029.42 1209.52 L1030.01 1209.52 L1030.59 1209.52 L1031.18 1209.52 L1031.77 1209.52 L1032.35 1209.52 L1032.94 1209.52 L1033.52 1209.52 L1034.11 1209.52 L1034.7 1209.52 L1035.28 1209.52 L1035.87 1209.52 L1036.46 1209.52 L1037.04 1209.52 L1037.63 1209.52 L1038.22 1209.52 L1038.8 1209.52 L1039.39 1209.52 L1039.98 1209.52 L1040.56 1209.52 L1041.15 1209.52 L1041.73 1209.52 L1042.32 1209.52 L1042.91 1209.52 L1043.49 1209.52 L1044.08 1209.52 L1044.67 1209.52 L1045.25 1209.52 L1045.84 1209.52 L1046.43 1209.52 L1047.01 1209.52 L1047.6 1209.52 L1048.19 1209.52 L1048.77 1209.52 L1049.36 1209.52 L1049.94 1209.52 L1050.53 1209.52 L1051.12 1209.52 L1051.7 1209.52 L1052.29 1209.52 L1052.88 1209.52 L1053.46 1209.52 L1054.05 1209.52 L1054.64 1209.52 L1055.22 1209.52 L1055.81 1209.52 L1056.39 1209.52 L1056.98 1209.52 L1057.57 1209.52 L1058.15 1209.52 L1058.74 1209.52 L1059.33 1209.52 L1059.91 1209.52 L1060.5 1209.52 L1061.09 1209.52 L1061.67 1209.52 L1062.26 1209.52 L1062.85 1209.52 L1063.43 1209.52 L1064.02 1209.52 L1064.6 1209.52 L1065.19 1209.52 L1065.78 1209.52 L1066.36 1209.52 L1066.95 1209.52 L1067.54 1209.52 L1068.12 1209.52 L1068.71 1209.52 L1069.3 1209.52 L1069.88 1209.52 L1070.47 1209.52 L1071.06 1209.52 L1071.64 1209.52 L1072.23 1209.52 L1072.81 1209.52 L1073.4 1209.52 L1073.99 1209.52 L1074.57 1209.52 L1075.16 1209.52 L1075.75 1209.52 L1076.33 1209.52 L1076.92 1209.52 L1077.51 1209.52 L1078.09 1209.52 L1078.68 1209.52 L1079.26 1209.52 L1079.85 1209.52 L1080.44 1209.52 L1081.02 1209.52 L1081.61 1209.52 L1082.2 1209.52 L1082.78 1209.52 L1083.37 1209.52 L1083.96 1209.52 L1084.54 1209.52 L1085.13 1209.52 L1085.72 1209.52 L1086.3 1209.52 L1086.89 1209.52 L1087.47 1209.52 L1088.06 1209.52 L1088.65 1209.52 L1089.23 1209.52 L1089.82 1209.52 L1090.41 1209.52 L1090.99 1209.52 L1091.58 1209.52 L1092.17 1209.52 L1092.75 1209.52 L1093.34 1209.52 L1093.93 1209.52 L1094.51 1209.52 L1095.1 1209.52 L1095.68 1209.52 L1096.27 1209.52 L1096.86 1209.52 L1097.44 1209.52 L1098.03 1209.52 L1098.62 1209.52 L1099.2 1209.52 L1099.79 1209.52 L1100.38 1209.52 L1100.96 1209.52 L1101.55 1209.52 L1102.14 1209.52 L1102.72 1209.52 L1103.31 1209.52 L1103.89 1209.52 L1104.48 1209.52 L1105.07 1209.52 L1105.65 1209.52 L1106.24 1209.52 L1106.83 1209.52 L1107.41 1209.52 L1108 1209.52 L1108.59 1209.52 L1109.17 1209.52 L1109.76 1209.52 L1110.34 1209.52 L1110.93 1209.52 L1111.52 1209.52 L1112.1 1209.52 L1112.69 1209.52 L1113.28 1209.52 L1113.86 1209.52 L1114.45 1209.52 L1115.04 1209.52 L1115.62 1209.52 L1116.21 1209.52 L1116.8 1209.52 L1117.38 1209.52 L1117.97 1209.52 L1118.55 1209.52 L1119.14 1209.52 L1119.73 1209.52 L1120.31 1209.52 L1120.9 1209.52 L1121.49 1209.52 L1122.07 1209.52 L1122.66 1209.52 L1123.25 1209.52 L1123.83 1209.52 L1124.42 1209.52 L1125.01 1209.52 L1125.59 1209.52 L1126.18 1209.52 L1126.76 1209.52 L1127.35 1209.52 L1127.94 1209.52 L1128.52 1209.52 L1129.11 1209.52 L1129.7 1209.52 L1130.28 1209.52 L1130.87 1209.52 L1131.46 1209.52 L1132.04 1209.52 L1132.63 1209.52 L1133.21 1209.52 L1133.8 1209.52 L1134.39 1209.52 L1134.97 1209.52 L1135.56 1209.52 L1136.15 1209.52 L1136.73 1209.52 L1137.32 1209.52 L1137.91 1209.52 L1138.49 1209.52 L1139.08 1209.52 L1139.67 1209.52 L1140.25 1209.52 L1140.84 1209.52 L1141.42 1209.52 L1142.01 1209.52 L1142.6 1209.52 L1143.18 1209.52 L1143.77 1209.52 L1144.36 1209.52 L1144.94 1209.52 L1145.53 1209.52 L1146.12 1209.52 L1146.7 1209.52 L1147.29 1209.52 L1147.88 1209.52 L1148.46 1209.52 L1149.05 1209.52 L1149.63 1209.52 L1150.22 1209.52 L1150.81 1209.52 L1151.39 1209.52 L1151.98 1209.52 L1152.57 1209.52 L1153.15 1209.52 L1153.74 1209.52 L1154.33 1209.52 L1154.91 1209.52 L1155.5 1209.52 L1156.09 1209.52 L1156.67 1209.52 L1157.26 1209.52 L1157.84 1209.52 L1158.43 1209.52 L1159.02 1209.52 L1159.6 1209.52 L1160.19 1209.52 L1160.78 1209.52 L1161.36 1209.52 L1161.95 1209.52 L1162.54 1209.52 L1163.12 1209.52 L1163.71 1209.52 L1164.29 1209.52 L1164.88 1209.52 L1165.47 1209.52 L1166.05 1209.52 L1166.64 1209.52 L1167.23 1209.52 L1167.81 1209.52 L1168.4 1209.52 L1168.99 1209.52 L1169.57 1209.52 L1170.16 1209.52 L1170.75 1209.52 L1171.33 1209.52 L1171.92 1209.52 L1172.5 1209.52 L1173.09 1209.52 L1173.68 1209.52 L1174.26 1209.52 L1174.85 1209.52 L1175.44 1209.52 L1176.02 1209.52 L1176.61 1209.52 L1177.2 1209.52 L1177.78 1209.52 L1178.37 1209.52 L1178.96 1209.52 L1179.54 1209.52 L1180.13 1209.52 L1180.71 1209.52 L1181.3 1209.52 L1181.89 1209.52 L1182.47 1209.52 L1183.06 1209.52 L1183.65 1209.52 L1184.23 1209.52 L1184.82 1209.52 L1185.41 1209.52 L1185.99 1209.52 L1186.58 1209.52 L1187.16 1209.52 L1187.75 1209.52 L1188.34 1209.52 L1188.92 1209.52 L1189.51 1209.52 L1190.1 1209.52 L1190.68 1209.52 L1191.27 1209.52 L1191.86 1209.52 L1192.44 1209.52 L1193.03 1209.52 L1193.62 1209.52 L1194.2 1209.52 L1194.79 1209.52 L1195.37 1209.52 L1195.96 1209.52 L1196.55 1209.52 L1197.13 1209.52 L1197.72 1209.52 L1198.31 1209.52 L1198.89 1209.52 L1199.48 1209.52 L1200.07 1209.52 L1200.65 1209.52 L1201.24 1209.52 L1201.83 1209.52 L1202.41 1209.52 L1203 1209.52 L1203.58 1209.52 L1204.17 1209.52 L1204.76 1209.52 L1205.34 1209.52 L1205.93 1209.52 L1206.52 1209.52 L1207.1 1209.52 L1207.69 1209.52 L1208.28 1209.52 L1208.86 1209.52 L1209.45 1209.52 L1210.03 1209.52 L1210.62 1209.52 L1211.21 1209.52 L1211.79 1209.52 L1212.38 1209.52 L1212.97 1209.52 L1213.55 1209.52 L1214.14 1209.52 L1214.73 1209.52 L1215.31 1209.52 L1215.9 1209.52 L1216.49 1209.52 L1217.07 1209.52 L1217.66 1209.52 L1218.24 1209.52 L1218.83 1209.52 L1219.42 1209.52 L1220 1209.52 L1220.59 1209.52 L1221.18 1209.52 L1221.76 1209.52 L1222.35 1209.52 L1222.94 1209.52 L1223.52 1209.52 L1224.11 1209.52 L1224.7 1209.52 L1225.28 1209.52 L1225.87 1209.52 L1226.45 1209.52 L1227.04 1209.52 L1227.63 1209.52 L1228.21 1209.52 L1228.8 1209.52 L1229.39 1209.52 L1229.97 1209.52 L1230.56 1209.52 L1231.15 1209.52 L1231.73 1209.52 L1232.32 1209.52 L1232.91 1209.52 L1233.49 1209.52 L1234.08 1209.52 L1234.66 1209.52 L1235.25 1209.52 L1235.84 1209.52 L1236.42 1209.52 L1237.01 1209.52 L1237.6 1209.52 L1238.18 1209.52 L1238.77 1209.52 L1239.36 1209.52 L1239.94 1209.52 L1240.53 1209.52 L1241.11 1209.52 L1241.7 1209.52 L1242.29 1209.52 L1242.87 1209.52 L1243.46 1209.52 L1244.05 1209.52 L1244.63 1209.52 L1245.22 1209.52 L1245.81 1209.52 L1246.39 1209.52 L1246.98 1209.52 L1247.57 1209.52 L1248.15 1209.52 L1248.74 1209.52 L1249.32 1209.52 L1249.91 1209.52 L1250.5 1209.52 L1251.08 1209.52 L1251.67 1209.52 L1252.26 1209.52 L1252.84 1209.52 L1253.43 1209.52 L1254.02 1209.52 L1254.6 1209.52 L1255.19 1209.52 L1255.78 1209.52 L1256.36 1209.52 L1256.95 1209.52 L1257.53 1209.52 L1258.12 1209.52 L1258.71 1209.52 L1259.29 1209.52 L1259.88 1209.52 L1260.47 1209.52 L1261.05 1209.52 L1261.64 1209.52 L1262.23 1209.52 L1262.81 1209.52 L1263.4 1209.52 L1263.98 1209.52 L1264.57 1209.52 L1265.16 1209.52 L1265.74 1209.52 L1266.33 1209.52 L1266.92 1209.52 L1267.5 1209.52 L1268.09 1209.52 L1268.68 1209.52 L1269.26 1209.52 L1269.85 1209.52 L1270.44 1209.52 L1271.02 1209.52 L1271.61 1209.52 L1272.19 1209.52 L1272.78 1209.52 L1273.37 1209.52 L1273.95 1209.52 L1274.54 1209.52 L1275.13 1209.52 L1275.71 1209.52 L1276.3 1209.52 L1276.89 1209.52 L1277.47 1209.52 L1278.06 1209.52 L1278.65 1209.52 L1279.23 1209.52 L1279.82 1209.52 L1280.4 1209.52 L1280.99 1209.52 L1281.58 1209.52 L1282.16 1209.52 L1282.75 1209.52 L1283.34 1209.52 L1283.92 1209.52 L1284.51 1209.52 L1285.1 1209.52 L1285.68 1209.52 L1286.27 1209.52 L1286.86 1209.52 L1287.44 1209.52 L1288.03 1209.52 L1288.61 1209.52 L1289.2 1209.52 L1289.79 1209.52 L1290.37 1209.52 L1290.96 1209.52 L1291.55 1209.52 L1292.13 1209.52 L1292.72 1209.52 L1293.31 1209.52 L1293.89 1209.52 L1294.48 1209.52 L1295.06 1209.52 L1295.65 1209.52 L1296.24 1209.52 L1296.82 1209.52 L1297.41 1209.52 L1298 1209.52 L1298.58 1209.52 L1299.17 1209.52 L1299.76 1209.52 L1300.34 1209.52 L1300.93 1209.52 L1301.52 1209.52 L1302.1 1209.52 L1302.69 1209.52 L1303.27 1209.52 L1303.86 1209.52 L1304.45 1209.52 L1305.03 1209.52 L1305.62 1209.52 L1306.21 1209.52 L1306.79 1209.52 L1307.38 1209.52 L1307.97 1209.52 L1308.55 1209.52 L1309.14 1209.52 L1309.73 1209.52 L1310.31 1209.52 L1310.9 1209.52 L1311.48 1209.52 L1312.07 1209.52 L1312.66 1209.52 L1313.24 1209.52 L1313.83 1209.52 L1314.42 1209.52 L1315 1209.52 L1315.59 1209.52 L1316.18 1209.52 L1316.76 1209.52 L1317.35 1209.52 L1317.93 1209.52 L1318.52 1209.52 L1319.11 1209.52 L1319.69 1209.52 L1320.28 1209.52 L1320.87 1209.52 L1321.45 1209.52 L1322.04 1209.52 L1322.63 1209.52 L1323.21 1209.52 L1323.8 1209.52 L1324.39 1209.52 L1324.97 1209.52 L1325.56 1209.52 L1326.14 1209.52 L1326.73 1209.52 L1327.32 1209.52 L1327.9 1209.52 L1328.49 1209.52 L1329.08 1209.52 L1329.66 1209.52 L1330.25 1209.52 L1330.84 1209.52 L1331.42 1209.52 L1332.01 1209.52 L1332.6 1209.52 L1333.18 1209.52 L1333.77 1209.52 L1334.35 1209.52 L1334.94 1209.52 L1335.53 1209.52 L1336.11 1209.52 L1336.7 1209.52 L1337.29 1209.52 L1337.87 1209.52 L1338.46 1209.52 L1339.05 1209.52 L1339.63 1209.52 L1340.22 1209.52 L1340.8 1209.52 L1341.39 1209.52 L1341.98 1209.52 L1342.56 1209.52 L1343.15 1209.52 L1343.74 1209.52 L1344.32 1209.52 L1344.91 1209.52 L1345.5 1209.52 L1346.08 1209.52 L1346.67 1209.52 L1347.26 1209.52 L1347.84 1209.52 L1348.43 1209.52 L1349.01 1209.52 L1349.6 1209.52 L1350.19 1209.52 L1350.77 1209.52 L1351.36 1209.52 L1351.95 1209.52 L1352.53 1209.52 L1353.12 1209.52 L1353.71 1209.52 L1354.29 1209.52 L1354.88 1209.52 L1355.47 1209.52 L1356.05 1209.52 L1356.64 1209.52 L1357.22 1209.52 L1357.81 1209.52 L1358.4 1209.52 L1358.98 1209.52 L1359.57 1209.52 L1360.16 1209.52 L1360.74 1209.52 L1361.33 1209.52 L1361.92 1209.52 L1362.5 1209.52 L1363.09 1209.52 L1363.68 1209.52 L1364.26 1209.52 L1364.85 1209.52 L1365.43 1209.52 L1366.02 1209.52 L1366.61 1209.52 L1367.19 1209.52 L1367.78 1209.52 L1368.37 1209.52 L1368.95 1209.52 L1369.54 1209.52 L1370.13 1209.52 L1370.71 1209.52 L1371.3 1209.52 L1371.88 1209.52 L1372.47 1209.52 L1373.06 1209.52 L1373.64 1209.52 L1374.23 1209.52 L1374.82 1209.52 L1375.4 1209.52 L1375.99 1209.52 L1376.58 1209.52 L1377.16 1209.52 L1377.75 1209.52 L1378.34 1209.52 L1378.92 1209.52 L1379.51 1209.52 L1380.09 1209.52 L1380.68 1209.52 L1381.27 1209.52 L1381.85 1209.52 L1382.44 1209.52 L1383.03 1209.52 L1383.61 1209.52 L1384.2 1209.52 L1384.79 1209.52 L1385.37 1209.52 L1385.96 1209.52 L1386.55 1209.52 L1387.13 1209.52 L1387.72 1209.52 L1388.3 1209.52 L1388.89 1209.52 L1389.48 1209.52 L1390.06 1209.52 L1390.65 1209.52 L1391.24 1209.52 L1391.82 1209.52 L1392.41 1209.52 L1393 1209.52 L1393.58 1209.52 L1394.17 1209.52 L1394.75 1209.52 L1395.34 1209.52 L1395.93 1209.52 L1396.51 1209.52 L1397.1 1209.52 L1397.69 1209.52 L1398.27 1209.52 L1398.86 1209.52 L1399.45 1209.52 L1400.03 1209.52 L1400.62 1209.52 L1401.21 1209.52 L1401.79 1209.52 L1402.38 1209.52 L1402.96 1209.52 L1403.55 1209.52 L1404.14 1209.52 L1404.72 1209.52 L1405.31 1209.52 L1405.9 1209.52 L1406.48 1209.52 L1407.07 1209.52 L1407.66 1209.52 L1408.24 1209.52 L1408.83 1209.52 L1409.42 1209.52 L1410 1209.52 L1410.59 1209.52 L1411.17 1209.52 L1411.76 1209.52 L1412.35 1209.52 L1412.93 1209.52 L1413.52 1209.52 L1414.11 1209.52 L1414.69 1209.52 L1415.28 1209.52 L1415.87 1209.52 L1416.45 1209.52 L1417.04 1209.52 L1417.63 1209.52 L1418.21 1209.52 L1418.8 1209.52 L1419.38 1209.52 L1419.97 1209.52 L1420.56 1209.52 L1421.14 1209.52 L1421.73 1209.52 L1422.32 1209.52 L1422.9 1209.52 L1423.49 1209.52 L1424.08 1209.52 L1424.66 1209.52 L1425.25 1209.52 L1425.83 1209.52 L1426.42 1209.52 L1427.01 1209.52 L1427.59 1209.52 L1428.18 1209.52 L1428.77 1209.52 L1429.35 1209.52 L1429.94 1209.52 L1430.53 1209.52 L1431.11 1209.52 L1431.7 1209.52 L1432.29 1209.52 L1432.87 1209.52 L1433.46 1209.52 L1434.04 1209.52 L1434.63 1209.52 L1435.22 1209.52 L1435.8 1209.52 L1436.39 1209.52 L1436.98 1209.52 L1437.56 1209.52 L1438.15 1209.52 L1438.74 1209.52 L1439.32 1209.52 L1439.91 1209.52 L1440.5 1209.52 L1441.08 1209.52 L1441.67 1209.52 L1442.25 1209.52 L1442.84 1209.52 L1443.43 1209.52 L1444.01 1209.52 L1444.6 1209.52 L1445.19 1209.52 L1445.77 1209.52 L1446.36 1209.52 L1446.95 1209.52 L1447.53 1209.52 L1448.12 1209.52 L1448.7 1209.52 L1449.29 1209.52 L1449.88 1209.52 L1450.46 1209.52 L1451.05 1209.52 L1451.64 1209.52 L1452.22 1209.52 L1452.81 1209.52 L1453.4 1209.52 L1453.98 1209.52 L1454.57 1209.52 L1455.16 1209.52 L1455.74 1209.52 L1456.33 1209.52 L1456.91 1209.52 L1457.5 1209.52 L1458.09 1209.52 L1458.67 1209.52 L1459.26 1209.52 L1459.85 1209.52 L1460.43 1209.52 L1461.02 1209.52 L1461.61 1209.52 L1462.19 1209.52 L1462.78 1209.52 L1463.37 1209.52 L1463.95 1209.52 L1464.54 1209.52 L1465.12 1209.52 L1465.71 1209.52 L1466.3 1209.52 L1466.88 1209.52 L1467.47 1209.52 L1468.06 1209.52 L1468.64 1209.52 L1469.23 1209.52 L1469.82 1209.52 L1470.4 1209.52 L1470.99 1209.52 L1471.57 1209.52 L1472.16 1209.52 L1472.75 1209.52 L1473.33 1209.52 L1473.92 1209.52 L1474.51 1209.52 L1475.09 1209.52 L1475.68 1209.52 L1476.27 1209.52 L1476.85 1209.52 L1477.44 1209.52 L1478.03 1209.52 L1478.61 1209.52 L1479.2 1209.52 L1479.78 1209.52 L1480.37 1209.52 L1480.96 1209.52 L1481.54 1209.52 L1482.13 1209.52 L1482.72 1209.52 L1483.3 1209.52 L1483.89 1209.52 L1484.48 1209.52 L1485.06 1209.52 L1485.65 1209.52 L1486.24 1209.52 L1486.82 1209.52 L1487.41 1209.52 L1487.99 1209.52 L1488.58 1209.52 L1489.17 1209.52 L1489.75 1209.52 L1490.34 1209.52 L1490.93 1209.52 L1491.51 1209.52 L1492.1 1209.52 L1492.69 1209.52 L1493.27 1209.52 L1493.86 1209.52 L1494.45 1209.52 L1495.03 1209.52 L1495.62 1209.52 L1496.2 1209.52 L1496.79 1209.52 L1497.38 1209.52 L1497.96 1209.52 L1498.55 1209.52 L1499.14 1209.52 L1499.72 1209.52 L1500.31 1209.52 L1500.9 1209.52 L1501.48 1209.52 L1502.07 1209.52 L1502.65 1209.52 L1503.24 1209.52 L1503.83 1209.52 L1504.41 1209.52 L1505 1209.52 L1505.59 1209.52 L1506.17 1209.52 L1506.76 1209.52 L1507.35 1209.52 L1507.93 1209.52 L1508.52 1209.52 L1509.11 1209.52 L1509.69 1209.52 L1510.28 1209.52 L1510.86 1209.52 L1511.45 1209.52 L1512.04 1209.52 L1512.62 1209.52 L1513.21 1209.52 L1513.8 1209.52 L1514.38 1209.52 L1514.97 1209.52 L1515.56 1209.52 L1516.14 1209.52 L1516.73 1209.52 L1517.32 1209.52 L1517.9 1209.52 L1518.49 1209.52 L1519.07 1209.52 L1519.66 1209.52 L1520.25 1209.52 L1520.83 1209.52 L1521.42 1209.52 L1522.01 1209.52 L1522.59 1209.52 L1523.18 1209.52 L1523.77 1209.52 L1524.35 1209.52 L1524.94 1209.52 L1525.52 1209.52 L1526.11 1209.52 L1526.7 1209.52 L1527.28 1209.52 L1527.87 1209.52 L1528.46 1209.52 L1529.04 1209.52 L1529.63 1209.52 L1530.22 1209.52 L1530.8 1209.52 L1531.39 1209.52 L1531.98 1209.52 L1532.56 1209.52 L1533.15 1209.52 L1533.73 1209.52 L1534.32 1209.52 L1534.91 1209.52 L1535.49 1209.52 L1536.08 1209.52 L1536.67 1209.52 L1537.25 1209.52 L1537.84 1209.52 L1538.43 1209.52 L1539.01 1209.52 L1539.6 1209.52 L1540.19 1209.52 L1540.77 1209.52 L1541.36 1209.52 L1541.94 1209.52 L1542.53 1209.52 L1543.12 1209.52 L1543.7 1209.52 L1544.29 1209.52 L1544.88 1209.52 L1545.46 1209.52 L1546.05 1209.52 L1546.64 1209.52 L1547.22 1209.52 L1547.81 1209.52 L1548.4 1209.52 L1548.98 1209.52 L1549.57 1209.52 L1550.15 1209.52 L1550.74 1209.52 L1551.33 1209.52 L1551.91 1209.52 L1552.5 1209.52 L1553.09 1209.52 L1553.67 1209.52 L1554.26 1209.52 L1554.85 1209.52 L1555.43 1209.52 L1556.02 1209.52 L1556.6 1209.52 L1557.19 1209.52 L1557.78 1209.52 L1558.36 1209.52 L1558.95 1209.52 L1559.54 1209.52 L1560.12 1209.52 L1560.71 1209.52 L1561.3 1209.52 L1561.88 1209.52 L1562.47 1209.52 L1563.06 1209.52 L1563.64 1209.52 L1564.23 1209.52 L1564.81 1209.52 L1565.4 1209.52 L1565.99 1209.52 L1566.57 1209.52 L1567.16 1209.52 L1567.75 1209.52 L1568.33 1209.52 L1568.92 1209.52 L1569.51 1209.52 L1570.09 1209.52 L1570.68 1209.52 L1571.27 1209.52 L1571.85 1209.52 L1572.44 1209.52 L1573.02 1209.52 L1573.61 1209.52 L1574.2 1209.52 L1574.78 1209.52 L1575.37 1209.52 L1575.96 1209.52 L1576.54 1209.52 L1577.13 1209.52 L1577.72 1209.52 L1578.3 1209.52 L1578.89 1209.52 L1579.47 1209.52 L1580.06 1209.52 L1580.65 1209.52 L1581.23 1209.52 L1581.82 1209.52 L1582.41 1209.52 L1582.99 1209.52 L1583.58 1209.52 L1584.17 1209.52 L1584.75 1209.52 L1585.34 1209.52 L1585.93 1209.52 L1586.51 1209.52 L1587.1 1209.52 L1587.68 1209.52 L1588.27 1209.52 L1588.86 1209.52 L1589.44 1209.52 L1590.03 1209.52 L1590.62 1209.52 L1591.2 1209.52 L1591.79 1209.52 L1592.38 1209.52 L1592.96 1209.52 L1593.55 1209.52 L1594.14 1209.52 L1594.72 1209.52 L1595.31 1209.52 L1595.89 1209.52 L1596.48 1209.52 L1597.07 1209.52 L1597.65 1209.52 L1598.24 1209.52 L1598.83 1209.52 L1599.41 1209.52 L1600 1209.52 L1600.59 1209.52 L1601.17 1209.52 L1601.76 1209.52 L1602.34 1209.52 L1602.93 1209.52 L1603.52 1209.52 L1604.1 1209.52 L1604.69 1209.52 L1605.28 1209.52 L1605.86 1209.52 L1606.45 1209.52 L1607.04 1209.52 L1607.62 1209.52 L1608.21 1209.52 L1608.8 1209.52 L1609.38 1209.52 L1609.97 1209.52 L1610.55 1209.52 L1611.14 1209.52 L1611.73 1209.52 L1612.31 1209.52 L1612.9 1209.52 L1613.49 1209.52 L1614.07 1209.52 L1614.66 1209.52 L1615.25 1209.52 L1615.83 1209.52 L1616.42 1209.52 L1617.01 1209.52 L1617.59 1209.52 L1618.18 1209.52 L1618.76 1209.52 L1619.35 1209.52 L1619.94 1209.52 L1620.52 1209.52 L1621.11 1209.52 L1621.7 1209.52 L1622.28 1209.52 L1622.87 1209.52 L1623.46 1209.52 L1624.04 1209.52 L1624.63 1209.52 L1625.22 1209.52 L1625.8 1209.52 L1626.39 1209.52 L1626.97 1209.52 L1627.56 1209.52 L1628.15 1209.52 L1628.73 1209.52 L1629.32 1209.52 L1629.91 1209.52 L1630.49 1209.52 L1631.08 1209.52 L1631.67 1209.52 L1632.25 1209.52 L1632.84 1209.52 L1633.42 1209.52 L1634.01 1209.52 L1634.6 1209.52 L1635.18 1209.52 L1635.77 1209.52 L1636.36 1209.52 L1636.94 1209.52 L1637.53 1209.52 L1638.12 1209.52 L1638.7 1209.52 L1639.29 1209.52 L1639.88 1209.52 L1640.46 1209.52 L1641.05 1209.52 L1641.63 1209.52 L1642.22 1209.52 L1642.81 1209.52 L1643.39 1209.52 L1643.98 1209.52 L1644.57 1209.52 L1645.15 1209.52 L1645.74 1209.52 L1646.33 1209.52 L1646.91 1209.52 L1647.5 1209.52 L1648.09 1209.52 L1648.67 1209.52 L1649.26 1209.52 L1649.84 1209.52 L1650.43 1209.52 L1651.02 1209.52 L1651.6 1209.52 L1652.19 1209.52 L1652.78 1209.52 L1653.36 1209.52 L1653.95 1209.52 L1654.54 1209.52 L1655.12 1209.52 L1655.71 1209.52 L1656.29 1209.52 L1656.88 1209.52 L1657.47 1209.52 L1658.05 1209.52 L1658.64 1209.52 L1659.23 1209.52 L1659.81 1209.52 L1660.4 1209.52 L1660.99 1209.52 L1661.57 1209.52 L1662.16 1209.52 L1662.75 1209.52 L1663.33 1209.52 L1663.92 1209.52 L1664.5 1209.52 L1665.09 1209.52 L1665.68 1209.52 L1666.26 1209.52 L1666.85 1209.52 L1667.44 1209.52 L1668.02 1209.52 L1668.61 1209.52 L1669.2 1209.52 L1669.78 1209.52 L1670.37 1209.52 L1670.96 1209.52 L1671.54 1209.52 L1672.13 1209.52 L1672.71 1209.52 L1673.3 1209.52 L1673.89 1209.52 L1674.47 1209.52 L1675.06 1209.52 L1675.65 1209.52 L1676.23 1209.52 L1676.82 1209.52 L1677.41 1209.52 L1677.99 1209.52 L1678.58 1209.52 L1679.17 1209.52 L1679.75 1209.52 L1680.34 1209.52 L1680.92 1209.52 L1681.51 1209.52 L1682.1 1209.52 L1682.68 1209.52 L1683.27 1209.52 L1683.86 1209.52 L1684.44 1209.52 L1685.03 1209.52 L1685.62 1209.52 L1686.2 1209.52 L1686.79 1209.52 L1687.37 1209.52 L1687.96 1209.52 L1688.55 1209.52 L1689.13 1209.52 L1689.72 1209.52 L1690.31 1209.52 L1690.89 1209.52 L1691.48 1209.52 L1692.07 1209.52 L1692.65 1209.52 L1693.24 1209.52 L1693.83 1209.52 L1694.41 1209.52 L1695 1209.52 L1695.58 1209.52 L1696.17 1209.52 L1696.76 1209.52 L1697.34 1209.52 L1697.93 1209.52 L1698.52 1209.52 L1699.1 1209.52 L1699.69 1209.52 L1700.28 1209.52 L1700.86 1209.52 L1701.45 1209.52 L1702.04 1209.52 L1702.62 1209.52 L1703.21 1209.52 L1703.79 1209.52 L1704.38 1209.52 L1704.97 1209.52 L1705.55 1209.52 L1706.14 1209.52 L1706.73 1209.52 L1707.31 1209.52 L1707.9 1209.52 L1708.49 1209.52 L1709.07 1209.52 L1709.66 1209.52 L1710.24 1209.52 L1710.83 1209.52 L1711.42 1209.52 L1712 1209.52 L1712.59 1209.52 L1713.18 1209.52 L1713.76 1209.52 L1714.35 1209.52 L1714.94 1209.52 L1715.52 1209.52 L1716.11 1209.52 L1716.7 1209.52 L1717.28 1209.52 L1717.87 1209.52 L1718.45 1209.52 L1719.04 1209.52 L1719.63 1209.52 L1720.21 1209.52 L1720.8 1209.52 L1721.39 1209.52 L1721.97 1209.52 L1722.56 1209.52 L1723.15 1209.52 L1723.73 1209.52 L1724.32 1209.52 L1724.91 1209.52 L1725.49 1209.52 L1726.08 1209.52 L1726.66 1209.52 L1727.25 1209.52 L1727.84 1209.52 L1728.42 1209.52 L1729.01 1209.52 L1729.6 1209.52 L1730.18 1209.52 L1730.77 1209.52 L1731.36 1209.52 L1731.94 1209.52 L1732.53 1209.52 L1733.11 1209.52 L1733.7 1209.52 L1734.29 1209.52 L1734.87 1209.52 L1735.46 1209.52 L1736.05 1209.52 L1736.63 1209.52 L1737.22 1209.52 L1737.81 1209.52 L1738.39 1209.52 L1738.98 1209.52 L1739.57 1209.52 L1740.15 1209.52 L1740.74 1209.52 L1741.32 1209.52 L1741.91 1209.52 L1742.5 1209.52 L1743.08 1209.52 L1743.67 1209.52 L1744.26 1209.52 L1744.84 1209.52 L1745.43 1209.52 L1746.02 1209.52 L1746.6 1209.52 L1747.19 1209.52 L1747.78 1209.52 L1748.36 1209.52 L1748.95 1209.52 L1749.53 1209.52 L1750.12 1209.52 L1750.71 1209.52 L1751.29 1209.52 L1751.88 1209.52 L1752.47 1209.52 L1753.05 1209.52 L1753.64 1209.52 L1754.23 1209.52 L1754.81 1209.52 L1755.4 1209.52 L1755.99 1209.52 L1756.57 1209.52 L1757.16 1209.52 L1757.74 1209.52 L1758.33 1209.52 L1758.92 1209.52 L1759.5 1209.52 L1760.09 1209.52 L1760.68 1209.52 L1761.26 1209.52 L1761.85 1209.52 L1762.44 1209.52 L1763.02 1209.52 L1763.61 1209.52 L1764.19 1209.52 L1764.78 1209.52 L1765.37 1209.52 L1765.95 1209.52 L1766.54 1209.52 L1767.13 1209.52 L1767.71 1209.52 L1768.3 1209.52 L1768.89 1209.52 L1769.47 1209.52 L1770.06 1209.52 L1770.65 1209.52 L1771.23 1209.52 L1771.82 1209.52 L1772.4 1209.52 L1772.99 1209.52 L1773.58 1209.52 L1774.16 1209.52 L1774.75 1209.52 L1775.34 1209.52 L1775.92 1209.52 L1776.51 1209.52 L1777.1 1209.52 L1777.68 1209.52 L1778.27 1209.52 L1778.86 1209.52 L1779.44 1209.52 L1780.03 1209.52 L1780.61 1209.52 L1781.2 1209.52 L1781.79 1209.52 L1782.37 1209.52 L1782.96 1209.52 L1783.55 1209.52 L1784.13 1209.52 L1784.72 1209.52 L1785.31 1209.52 L1785.89 1209.52 L1786.48 1209.52 L1787.06 1209.52 L1787.65 1209.52 L1788.24 1209.52 L1788.82 1209.52 L1789.41 1209.52 L1790 1209.52 L1790.58 1209.52 L1791.17 1209.52 L1791.76 1209.52 L1792.34 1209.52 L1792.93 1209.52 L1793.52 1209.52 L1794.1 1209.52 L1794.69 1209.52 L1795.27 1209.52 L1795.86 1209.52 L1796.45 1209.52 L1797.03 1209.52 L1797.62 1209.52 L1798.21 1209.52 L1798.79 1209.52 L1799.38 1209.52 L1799.97 1209.52 L1800.55 1209.52 L1801.14 1209.52 L1801.73 1209.52 L1802.31 1209.52 L1802.9 1209.52 L1803.48 1209.52 L1804.07 1209.52 L1804.66 1209.52 L1805.24 1209.52 L1805.83 1209.52 L1806.42 1209.52 L1807 1209.52 L1807.59 1209.52 L1808.18 1209.52 L1808.76 1209.52 L1809.35 1209.52 L1809.94 1209.52 L1810.52 1209.52 L1811.11 1209.52 L1811.69 1209.52 L1812.28 1209.52 L1812.87 1209.52 L1813.45 1209.52 L1814.04 1209.52 L1814.63 1209.52 L1815.21 1209.52 L1815.8 1209.52 L1816.39 1209.52 L1816.97 1209.52 L1817.56 1209.52 L1818.14 1209.52 L1818.73 1209.52 L1819.32 1209.52 L1819.9 1209.52 L1820.49 1209.52 L1821.08 1209.52 L1821.66 1209.52 L1822.25 1209.52 L1822.84 1209.52 L1823.42 1209.52 L1824.01 1209.52 L1824.6 1209.52 L1825.18 1209.52 L1825.77 1209.52 L1826.35 1209.52 L1826.94 1209.52 L1827.53 1209.52 L1828.11 1209.52 L1828.7 1209.52 L1829.29 1209.52 L1829.87 1209.52 L1830.46 1209.52 L1831.05 1209.52 L1831.63 1209.52 L1832.22 1209.52 L1832.81 1209.52 L1833.39 1209.52 L1833.98 1209.52 L1834.56 1209.52 L1835.15 1209.52 L1835.74 1209.52 L1836.32 1209.52 L1836.91 1209.52 L1837.5 1209.52 L1838.08 1209.52 L1838.67 1209.52 L1839.26 1209.52 L1839.84 1209.52 L1840.43 1209.52 L1841.01 1209.52 L1841.6 1209.52 L1842.19 1209.52 L1842.77 1209.52 L1843.36 1209.52 L1843.95 1209.52 L1844.53 1209.52 L1845.12 1209.52 L1845.71 1209.52 L1846.29 1209.52 L1846.88 1209.52 L1847.47 1209.52 L1848.05 1209.52 L1848.64 1209.52 L1849.22 1209.52 L1849.81 1209.52 L1850.4 1209.52 L1850.98 1209.52 L1851.57 1209.52 L1852.16 1209.52 L1852.74 1209.52 L1853.33 1209.52 L1853.92 1209.52 L1854.5 1209.52 L1855.09 1209.52 L1855.68 1209.52 L1856.26 1209.52 L1856.85 1209.52 L1857.43 1209.52 L1858.02 1209.52 L1858.61 1209.52 L1859.19 1209.52 L1859.78 1209.52 L1860.37 1209.52 L1860.95 1209.52 L1861.54 1209.52 L1862.13 1209.52 L1862.71 1209.52 L1863.3 1209.52 L1863.88 1209.52 L1864.47 1209.52 L1865.06 1209.52 L1865.64 1209.52 L1866.23 1209.52 L1866.82 1209.52 L1867.4 1209.52 L1867.99 1209.52 L1868.58 1209.52 L1869.16 1209.52 L1869.75 1209.52 L1870.34 1209.52 L1870.92 1209.52 L1871.51 1209.52 L1872.09 1209.52 L1872.68 1209.52 L1873.27 1209.52 L1873.85 1209.52 L1874.44 1209.52 L1875.03 1209.52 L1875.61 1209.52 L1876.2 1209.52 L1876.79 1209.52 L1877.37 1209.52 L1877.96 1209.52 L1878.55 1209.52 L1879.13 1209.52 L1879.72 1209.52 L1880.3 1209.52 L1880.89 1209.52 L1881.48 1209.52 L1882.06 1209.52 L1882.65 1209.52 L1883.24 1209.52 L1883.82 1209.52 L1884.41 1209.52 L1885 1209.52 L1885.58 1209.52 L1886.17 1209.52 L1886.76 1209.52 L1887.34 1209.52 L1887.93 1209.52 L1888.51 1209.52 L1889.1 1209.52 L1889.69 1209.52 L1890.27 1209.52 L1890.86 1209.52 L1891.45 1209.52 L1892.03 1209.52 L1892.62 1209.52 L1893.21 1209.52 L1893.79 1209.52 L1894.38 1209.52 L1894.96 1209.52 L1895.55 1209.52 L1896.14 1209.52 L1896.72 1209.52 L1897.31 1209.52 L1897.9 1209.52 L1898.48 1209.52 L1899.07 1209.52 L1899.66 1209.52 L1900.24 1209.52 L1900.83 1209.52 L1901.42 1209.52 L1902 1209.52 L1902.59 1209.52 L1903.17 1209.52 L1903.76 1209.52 L1904.35 1209.52 L1904.93 1209.52 L1905.52 1209.52 L1906.11 1209.52 L1906.69 1209.52 L1907.28 1209.52 L1907.87 1209.52 L1908.45 1209.52 L1909.04 1209.52 L1909.63 1209.52 L1910.21 1209.52 L1910.8 1209.52 L1911.38 1209.52 L1911.97 1209.52 L1912.56 1209.52 L1913.14 1209.52 L1913.73 1209.52 L1914.32 1209.52 L1914.9 1209.52 L1915.49 1209.52 L1916.08 1209.52 L1916.66 1209.52 L1917.25 1209.52 L1917.83 1209.52 L1918.42 1209.52 L1919.01 1209.52 L1919.59 1209.52 L1920.18 1209.52 L1920.77 1209.52 L1921.35 1209.52 L1921.94 1209.52 L1922.53 1209.52 L1923.11 1209.52 L1923.7 1209.52 L1924.29 1209.52 L1924.87 1209.52 L1925.46 1209.52 L1926.04 1209.52 L1926.63 1209.52 L1927.22 1209.52 L1927.8 1209.52 L1928.39 1209.52 L1928.98 1209.52 L1929.56 1209.52 L1930.15 1209.52 L1930.74 1209.52 L1931.32 1209.52 L1931.91 1209.52 L1932.5 1209.52 L1933.08 1209.52 L1933.67 1209.52 L1934.25 1209.52 L1934.84 1209.52 L1935.43 1209.52 L1936.01 1209.52 L1936.6 1209.52 L1937.19 1209.52 L1937.77 1209.52 L1938.36 1209.52 L1938.95 1209.52 L1939.53 1209.52 L1940.12 1209.52 L1940.71 1209.52 L1941.29 1209.52 L1941.88 1209.52 L1942.46 1209.52 L1943.05 1209.52 L1943.64 1209.52 L1944.22 1209.52 L1944.81 1209.52 L1945.4 1209.52 L1945.98 1209.52 L1946.57 1209.52 L1947.16 1209.52 L1947.74 1209.52 L1948.33 1209.52 L1948.91 1209.52 L1949.5 1209.52 L1950.09 1209.52 L1950.67 1209.52 L1951.26 1209.52 L1951.85 1209.52 L1952.43 1209.52 L1953.02 1209.52 L1953.61 1209.52 L1954.19 1209.52 L1954.78 1209.52 L1955.37 1209.52 L1955.95 1209.52 L1956.54 1209.52 L1957.12 1209.52 L1957.71 1209.52 L1958.3 1209.52 L1958.88 1209.52 L1959.47 1209.52 L1960.06 1209.52 L1960.64 1209.52 L1961.23 1209.52 L1961.82 1209.52 L1962.4 1209.52 L1962.99 1209.52 L1963.58 1209.52 L1964.16 1209.52 L1964.75 1209.52 L1965.33 1209.52 L1965.92 1209.52 L1966.51 1209.52 L1967.09 1209.52 L1967.68 1209.52 L1968.27 1209.52 L1968.85 1209.52 L1969.44 1209.52 L1970.03 1209.52 L1970.61 1209.52 L1971.2 1209.52 L1971.78 1209.52 L1972.37 1209.52 L1972.96 1209.52 L1973.54 1209.52 L1974.13 1209.52 L1974.72 1209.52 L1975.3 1209.52 L1975.89 1209.52 L1976.48 1209.52 L1977.06 1209.52 L1977.65 1209.52 L1978.24 1209.52 L1978.82 1209.52 L1979.41 1209.52 L1979.99 1209.52 L1980.58 1209.52 L1981.17 1209.52 L1981.75 1209.52 L1982.34 1209.52 L1982.93 1209.52 L1983.51 1209.52 L1984.1 1209.52 L1984.69 1209.52 L1985.27 1209.52 L1985.86 1209.52 L1986.45 1209.52 L1987.03 1209.52 L1987.62 1209.52 L1988.2 1209.52 L1988.79 1209.52 L1989.38 1209.52 L1989.96 1209.52 L1990.55 1209.52 L1991.14 1209.52 L1991.72 1209.52 L1992.31 1209.52 L1992.9 1209.52 L1993.48 1209.52 L1994.07 1209.52 L1994.65 1209.52 L1995.24 1209.52 L1995.83 1209.52 L1996.41 1209.52 L1997 1209.52 L1997.59 1209.52 L1998.17 1209.52 L1998.76 1209.52 L1999.35 1209.52 L1999.93 1209.52 L2000.52 1209.52 L2001.11 1209.52 L2001.69 1209.52 L2002.28 1209.52 L2002.86 1209.52 L2003.45 1209.52 L2004.04 1209.52 L2004.62 1209.52 L2005.21 1209.52 L2005.8 1209.52 L2006.38 1209.52 L2006.97 1209.52 L2007.56 1209.52 L2008.14 1209.52 L2008.73 1209.52 L2009.32 1209.52 L2009.9 1209.52 L2010.49 1209.52 L2011.07 1209.52 L2011.66 1209.52 L2012.25 1209.52 L2012.83 1209.52 L2013.42 1209.52 L2014.01 1209.52 L2014.59 1209.52 L2015.18 1209.52 L2015.77 1209.52 L2016.35 1209.52 L2016.94 1209.52 L2017.53 1209.52 L2018.11 1209.52 L2018.7 1209.52 L2019.28 1209.52 L2019.87 1209.52 L2020.46 1209.52 L2021.04 1209.52 L2021.63 1209.52 L2022.22 1209.52 L2022.8 1209.52 L2023.39 1209.52 L2023.98 1209.52 L2024.56 1209.52 L2025.15 1209.52 L2025.73 1209.52 L2026.32 1209.52 L2026.91 1209.52 L2027.49 1209.52 L2028.08 1209.52 L2028.67 1209.52 L2029.25 1209.52 L2029.84 1209.52 L2030.43 1209.52 L2031.01 1209.52 L2031.6 1209.52 L2032.19 1209.52 L2032.77 1209.52 L2033.36 1209.52 L2033.94 1209.52 L2034.53 1209.52 L2035.12 1209.52 L2035.7 1209.52 L2036.29 1209.52 L2036.88 1209.52 L2037.46 1209.52 L2038.05 1209.52 L2038.64 1209.52 L2039.22 1209.52 L2039.81 1209.52 L2040.4 1209.52 L2040.98 1209.52 L2041.57 1209.52 L2042.15 1209.52 L2042.74 1209.52 L2043.33 1209.52 L2043.91 1209.52 L2044.5 1209.52 L2045.09 1209.52 L2045.67 1209.52 L2046.26 1209.52 L2046.85 1209.52 L2047.43 1209.52 L2048.02 1209.52 L2048.6 1209.52 L2049.19 1209.52 L2049.78 1209.52 L2050.36 1209.52 L2050.95 1209.52 L2051.54 1209.52 L2052.12 1209.52 L2052.71 1209.52 L2053.3 1209.52 L2053.88 1209.52 L2054.47 1209.52 L2055.06 1209.52 L2055.64 1209.52 L2056.23 1209.52 L2056.81 1209.52 L2057.4 1209.52 L2057.99 1209.52 L2058.57 1209.52 L2059.16 1209.52 L2059.75 1209.52 L2060.33 1209.52 L2060.92 1209.52 L2061.51 1209.52 L2062.09 1209.52 L2062.68 1209.52 L2063.27 1209.52 L2063.85 1209.52 L2064.44 1209.52 L2065.02 1209.52 L2065.61 1209.52 L2066.2 1209.52 L2066.78 1209.52 L2067.37 1209.52 L2067.96 1209.52 L2068.54 1209.52 L2069.13 1209.52 L2069.72 1209.52 L2070.3 1209.52 L2070.89 1209.52 L2071.48 1209.52 L2072.06 1209.52 L2072.65 1209.52 L2073.23 1209.52 L2073.82 1209.52 L2074.41 1209.52 L2074.99 1209.52 L2075.58 1209.52 L2076.17 1209.52 L2076.75 1209.52 L2077.34 1209.52 L2077.93 1209.52 L2078.51 1209.52 L2079.1 1209.52 L2079.68 1209.52 L2080.27 1209.52 L2080.86 1209.52 L2081.44 1209.52 L2082.03 1209.52 L2082.62 1209.52 L2083.2 1209.52 L2083.79 1209.52 L2084.38 1209.52 L2084.96 1209.52 L2085.55 1209.52 L2086.14 1209.52 L2086.72 1209.52 L2087.31 1209.52 L2087.89 1209.52 L2088.48 1209.52 L2089.07 1209.52 L2089.65 1209.52 L2090.24 1209.52 L2090.83 1209.52 L2091.41 1209.52 L2092 1209.52 L2092.59 1209.52 L2093.17 1209.52 L2093.76 1209.52 L2094.35 1209.52 L2094.93 1209.52 L2095.52 1209.52 L2096.1 1209.52 L2096.69 1209.52 L2097.28 1209.52 L2097.86 1209.52 L2098.45 1209.52 L2099.04 1209.52 L2099.62 1209.52 L2100.21 1209.52 L2100.8 1209.52 L2101.38 1209.52 L2101.97 1209.52 L2102.55 1209.52 L2103.14 1209.52 L2103.73 1209.52 L2104.31 1209.52 L2104.9 1209.52 L2105.49 1209.52 L2106.07 1209.52 L2106.66 1209.52 L2107.25 1209.52 L2107.83 1209.52 L2108.42 1209.52 L2109.01 1209.52 L2109.59 1209.52 L2110.18 1209.52 L2110.76 1209.52 L2111.35 1209.52 L2111.94 1209.52 L2112.52 1209.52 L2113.11 1209.52 L2113.7 1209.52 L2114.28 1209.52 L2114.87 1209.52 L2115.46 1209.52 L2116.04 1209.52 L2116.63 1209.52 L2117.22 1209.52 L2117.8 1209.52 L2118.39 1209.52 L2118.97 1209.52 L2119.56 1209.52 L2120.15 1209.52 L2120.73 1209.52 L2121.32 1209.52 L2121.91 1209.52 L2122.49 1209.52 L2123.08 1209.52 L2123.67 1209.52 L2124.25 1209.52 L2124.84 1209.52 L2125.42 1209.52 L2126.01 1209.52 L2126.6 1209.52 L2127.18 1209.52 L2127.77 1209.52 L2128.36 1209.52 L2128.94 1209.52 L2129.53 1209.52 L2130.12 1209.52 L2130.7 1209.52 L2131.29 1209.52 L2131.88 1209.52 L2132.46 1209.52 L2133.05 1209.52 L2133.63 1209.52 L2134.22 1209.52 L2134.81 1209.52 L2135.39 1209.52 L2135.98 1209.52 L2136.57 1209.52 L2137.15 1209.52 L2137.74 1209.52 L2138.33 1209.52 L2138.91 1209.52 L2139.5 1209.52 L2140.09 1209.52 L2140.67 1209.52 L2141.26 1209.52 L2141.84 1209.52 L2142.43 1209.52 L2143.02 1209.52 L2143.6 1209.52 L2144.19 1209.52 L2144.78 1209.52 L2145.36 1209.52 L2145.95 1209.52 L2146.54 1209.52 L2147.12 1209.52 L2147.71 1209.52 L2148.3 1209.52 L2148.88 1209.52 L2149.47 1209.52 L2150.05 1209.52 L2150.64 1209.52 L2151.23 1209.52 L2151.81 1209.52 L2152.4 1209.52 L2152.99 1209.52 L2153.57 1209.52 L2154.16 1209.52 L2154.75 1209.52 L2155.33 1209.52 L2155.92 1209.52 L2156.5 1209.52 L2157.09 1209.52 L2157.68 1209.52 L2158.26 1209.52 L2158.26 1209.37 L2157.68 1209.37 L2157.09 1209.37 L2156.5 1209.37 L2155.92 1209.37 L2155.33 1209.37 L2154.75 1209.37 L2154.16 1209.37 L2153.57 1209.37 L2152.99 1209.37 L2152.4 1209.37 L2151.81 1209.37 L2151.23 1209.37 L2150.64 1209.37 L2150.05 1209.37 L2149.47 1209.37 L2148.88 1209.37 L2148.3 1209.37 L2147.71 1209.37 L2147.12 1209.37 L2146.54 1209.37 L2145.95 1209.37 L2145.36 1209.37 L2144.78 1209.37 L2144.19 1209.37 L2143.6 1209.37 L2143.02 1209.37 L2142.43 1209.37 L2141.84 1209.37 L2141.26 1209.37 L2140.67 1209.37 L2140.09 1209.37 L2139.5 1209.37 L2138.91 1209.37 L2138.33 1209.37 L2137.74 1209.37 L2137.15 1209.37 L2136.57 1209.37 L2135.98 1209.37 L2135.39 1209.37 L2134.81 1209.37 L2134.22 1209.37 L2133.63 1209.37 L2133.05 1209.37 L2132.46 1209.37 L2131.88 1209.37 L2131.29 1209.37 L2130.7 1209.37 L2130.12 1209.37 L2129.53 1209.37 L2128.94 1209.37 L2128.36 1209.37 L2127.77 1209.37 L2127.18 1209.37 L2126.6 1209.37 L2126.01 1209.37 L2125.42 1209.37 L2124.84 1209.37 L2124.25 1209.37 L2123.67 1209.37 L2123.08 1209.37 L2122.49 1209.37 L2121.91 1209.37 L2121.32 1209.37 L2120.73 1209.37 L2120.15 1209.37 L2119.56 1209.37 L2118.97 1209.37 L2118.39 1209.37 L2117.8 1209.37 L2117.22 1209.37 L2116.63 1209.37 L2116.04 1209.37 L2115.46 1209.37 L2114.87 1209.37 L2114.28 1209.37 L2113.7 1209.37 L2113.11 1209.37 L2112.52 1209.37 L2111.94 1209.37 L2111.35 1209.37 L2110.76 1209.37 L2110.18 1209.37 L2109.59 1209.37 L2109.01 1209.37 L2108.42 1209.37 L2107.83 1209.37 L2107.25 1209.37 L2106.66 1209.37 L2106.07 1209.37 L2105.49 1209.37 L2104.9 1209.37 L2104.31 1209.37 L2103.73 1209.37 L2103.14 1209.37 L2102.55 1209.37 L2101.97 1209.37 L2101.38 1209.37 L2100.8 1209.37 L2100.21 1209.37 L2099.62 1209.37 L2099.04 1209.37 L2098.45 1209.37 L2097.86 1209.37 L2097.28 1209.37 L2096.69 1209.37 L2096.1 1209.37 L2095.52 1209.37 L2094.93 1209.37 L2094.35 1209.37 L2093.76 1209.37 L2093.17 1209.37 L2092.59 1209.37 L2092 1209.37 L2091.41 1209.37 L2090.83 1209.37 L2090.24 1209.37 L2089.65 1209.37 L2089.07 1209.37 L2088.48 1209.37 L2087.89 1209.37 L2087.31 1209.37 L2086.72 1209.37 L2086.14 1209.37 L2085.55 1209.37 L2084.96 1209.37 L2084.38 1209.37 L2083.79 1209.37 L2083.2 1209.37 L2082.62 1209.37 L2082.03 1209.37 L2081.44 1209.37 L2080.86 1209.37 L2080.27 1209.37 L2079.68 1209.37 L2079.1 1209.37 L2078.51 1209.37 L2077.93 1209.37 L2077.34 1209.37 L2076.75 1209.37 L2076.17 1209.37 L2075.58 1209.37 L2074.99 1209.37 L2074.41 1209.37 L2073.82 1209.37 L2073.23 1209.37 L2072.65 1209.37 L2072.06 1209.37 L2071.48 1209.37 L2070.89 1209.37 L2070.3 1209.37 L2069.72 1209.37 L2069.13 1209.37 L2068.54 1209.37 L2067.96 1209.37 L2067.37 1209.37 L2066.78 1209.37 L2066.2 1209.37 L2065.61 1209.37 L2065.02 1209.37 L2064.44 1209.37 L2063.85 1209.37 L2063.27 1209.37 L2062.68 1209.37 L2062.09 1209.37 L2061.51 1209.37 L2060.92 1209.37 L2060.33 1209.37 L2059.75 1209.37 L2059.16 1209.37 L2058.57 1209.37 L2057.99 1209.37 L2057.4 1209.37 L2056.81 1209.37 L2056.23 1209.37 L2055.64 1209.37 L2055.06 1209.37 L2054.47 1209.37 L2053.88 1209.37 L2053.3 1209.37 L2052.71 1209.37 L2052.12 1209.37 L2051.54 1209.37 L2050.95 1209.37 L2050.36 1209.37 L2049.78 1209.37 L2049.19 1209.37 L2048.6 1209.37 L2048.02 1209.37 L2047.43 1209.37 L2046.85 1209.37 L2046.26 1209.37 L2045.67 1209.37 L2045.09 1209.37 L2044.5 1209.37 L2043.91 1209.37 L2043.33 1209.37 L2042.74 1209.37 L2042.15 1209.37 L2041.57 1209.37 L2040.98 1209.37 L2040.4 1209.37 L2039.81 1209.37 L2039.22 1209.37 L2038.64 1209.37 L2038.05 1209.37 L2037.46 1209.37 L2036.88 1209.37 L2036.29 1209.37 L2035.7 1209.37 L2035.12 1209.37 L2034.53 1209.37 L2033.94 1209.37 L2033.36 1209.37 L2032.77 1209.37 L2032.19 1209.37 L2031.6 1209.37 L2031.01 1209.37 L2030.43 1209.37 L2029.84 1209.37 L2029.25 1209.37 L2028.67 1209.37 L2028.08 1209.37 L2027.49 1209.37 L2026.91 1209.37 L2026.32 1209.37 L2025.73 1209.37 L2025.15 1209.37 L2024.56 1209.37 L2023.98 1209.37 L2023.39 1209.37 L2022.8 1209.37 L2022.22 1209.37 L2021.63 1209.37 L2021.04 1209.37 L2020.46 1209.37 L2019.87 1209.37 L2019.28 1209.37 L2018.7 1209.37 L2018.11 1209.37 L2017.53 1209.37 L2016.94 1209.37 L2016.35 1209.37 L2015.77 1209.37 L2015.18 1209.37 L2014.59 1209.37 L2014.01 1209.37 L2013.42 1209.37 L2012.83 1209.37 L2012.25 1209.37 L2011.66 1209.37 L2011.07 1209.37 L2010.49 1209.37 L2009.9 1209.37 L2009.32 1209.37 L2008.73 1209.37 L2008.14 1209.37 L2007.56 1209.37 L2006.97 1209.37 L2006.38 1209.37 L2005.8 1209.37 L2005.21 1209.37 L2004.62 1209.37 L2004.04 1209.37 L2003.45 1209.37 L2002.86 1209.37 L2002.28 1209.37 L2001.69 1209.37 L2001.11 1209.37 L2000.52 1209.37 L1999.93 1209.37 L1999.35 1209.37 L1998.76 1209.37 L1998.17 1209.37 L1997.59 1209.37 L1997 1209.37 L1996.41 1209.37 L1995.83 1209.37 L1995.24 1209.37 L1994.65 1209.37 L1994.07 1209.37 L1993.48 1209.37 L1992.9 1209.37 L1992.31 1209.37 L1991.72 1209.37 L1991.14 1209.37 L1990.55 1209.37 L1989.96 1209.37 L1989.38 1209.37 L1988.79 1209.37 L1988.2 1209.37 L1987.62 1209.37 L1987.03 1209.37 L1986.45 1209.37 L1985.86 1209.37 L1985.27 1209.37 L1984.69 1209.37 L1984.1 1209.37 L1983.51 1209.37 L1982.93 1209.37 L1982.34 1209.37 L1981.75 1209.37 L1981.17 1209.37 L1980.58 1209.37 L1979.99 1209.37 L1979.41 1209.37 L1978.82 1209.37 L1978.24 1209.37 L1977.65 1209.37 L1977.06 1209.37 L1976.48 1209.37 L1975.89 1209.37 L1975.3 1209.37 L1974.72 1209.37 L1974.13 1209.37 L1973.54 1209.37 L1972.96 1209.37 L1972.37 1209.37 L1971.78 1209.37 L1971.2 1209.37 L1970.61 1209.37 L1970.03 1209.37 L1969.44 1209.37 L1968.85 1209.37 L1968.27 1209.37 L1967.68 1209.37 L1967.09 1209.37 L1966.51 1209.37 L1965.92 1209.37 L1965.33 1209.37 L1964.75 1209.37 L1964.16 1209.37 L1963.58 1209.37 L1962.99 1209.37 L1962.4 1209.37 L1961.82 1209.37 L1961.23 1209.37 L1960.64 1209.37 L1960.06 1209.37 L1959.47 1209.37 L1958.88 1209.37 L1958.3 1209.37 L1957.71 1209.37 L1957.12 1209.37 L1956.54 1209.37 L1955.95 1209.37 L1955.37 1209.37 L1954.78 1209.37 L1954.19 1209.37 L1953.61 1209.37 L1953.02 1209.37 L1952.43 1209.37 L1951.85 1209.37 L1951.26 1209.37 L1950.67 1209.37 L1950.09 1209.37 L1949.5 1209.37 L1948.91 1209.37 L1948.33 1209.37 L1947.74 1209.37 L1947.16 1209.37 L1946.57 1209.37 L1945.98 1209.37 L1945.4 1209.37 L1944.81 1209.37 L1944.22 1209.37 L1943.64 1209.37 L1943.05 1209.37 L1942.46 1209.37 L1941.88 1209.37 L1941.29 1209.37 L1940.71 1209.37 L1940.12 1209.37 L1939.53 1209.37 L1938.95 1209.37 L1938.36 1209.37 L1937.77 1209.37 L1937.19 1209.37 L1936.6 1209.37 L1936.01 1209.37 L1935.43 1209.37 L1934.84 1209.37 L1934.25 1209.37 L1933.67 1209.37 L1933.08 1209.37 L1932.5 1209.37 L1931.91 1209.37 L1931.32 1209.37 L1930.74 1209.37 L1930.15 1209.37 L1929.56 1209.37 L1928.98 1209.37 L1928.39 1209.37 L1927.8 1209.37 L1927.22 1209.37 L1926.63 1209.37 L1926.04 1209.37 L1925.46 1209.37 L1924.87 1209.37 L1924.29 1209.37 L1923.7 1209.37 L1923.11 1209.37 L1922.53 1209.37 L1921.94 1209.37 L1921.35 1209.37 L1920.77 1209.37 L1920.18 1209.37 L1919.59 1209.37 L1919.01 1209.37 L1918.42 1209.37 L1917.83 1209.37 L1917.25 1209.37 L1916.66 1209.37 L1916.08 1209.37 L1915.49 1209.37 L1914.9 1209.37 L1914.32 1209.37 L1913.73 1209.37 L1913.14 1209.37 L1912.56 1209.37 L1911.97 1209.37 L1911.38 1209.37 L1910.8 1209.37 L1910.21 1209.37 L1909.63 1209.37 L1909.04 1209.37 L1908.45 1209.37 L1907.87 1209.37 L1907.28 1209.37 L1906.69 1209.37 L1906.11 1209.37 L1905.52 1209.37 L1904.93 1209.37 L1904.35 1209.37 L1903.76 1209.37 L1903.17 1209.37 L1902.59 1209.37 L1902 1209.37 L1901.42 1209.37 L1900.83 1209.37 L1900.24 1209.37 L1899.66 1209.37 L1899.07 1209.37 L1898.48 1209.37 L1897.9 1209.37 L1897.31 1209.37 L1896.72 1209.37 L1896.14 1209.37 L1895.55 1209.37 L1894.96 1209.37 L1894.38 1209.37 L1893.79 1209.37 L1893.21 1209.37 L1892.62 1209.37 L1892.03 1209.37 L1891.45 1209.37 L1890.86 1209.37 L1890.27 1209.37 L1889.69 1209.37 L1889.1 1209.37 L1888.51 1209.37 L1887.93 1209.37 L1887.34 1209.37 L1886.76 1209.37 L1886.17 1209.37 L1885.58 1209.37 L1885 1209.37 L1884.41 1209.37 L1883.82 1209.37 L1883.24 1209.37 L1882.65 1209.37 L1882.06 1209.37 L1881.48 1209.37 L1880.89 1209.37 L1880.3 1209.37 L1879.72 1209.37 L1879.13 1209.37 L1878.55 1209.37 L1877.96 1209.37 L1877.37 1209.37 L1876.79 1209.37 L1876.2 1209.37 L1875.61 1209.37 L1875.03 1209.37 L1874.44 1209.37 L1873.85 1209.37 L1873.27 1209.37 L1872.68 1209.37 L1872.09 1209.37 L1871.51 1209.37 L1870.92 1209.37 L1870.34 1209.37 L1869.75 1209.37 L1869.16 1209.37 L1868.58 1209.37 L1867.99 1209.37 L1867.4 1209.37 L1866.82 1209.37 L1866.23 1209.37 L1865.64 1209.37 L1865.06 1209.37 L1864.47 1209.37 L1863.88 1209.37 L1863.3 1209.37 L1862.71 1209.37 L1862.13 1209.37 L1861.54 1209.37 L1860.95 1209.37 L1860.37 1209.37 L1859.78 1209.37 L1859.19 1209.37 L1858.61 1209.37 L1858.02 1209.37 L1857.43 1209.37 L1856.85 1209.37 L1856.26 1209.37 L1855.68 1209.37 L1855.09 1209.37 L1854.5 1209.37 L1853.92 1209.37 L1853.33 1209.37 L1852.74 1209.37 L1852.16 1209.37 L1851.57 1209.37 L1850.98 1209.37 L1850.4 1209.37 L1849.81 1209.37 L1849.22 1209.37 L1848.64 1209.37 L1848.05 1209.37 L1847.47 1209.37 L1846.88 1209.37 L1846.29 1209.37 L1845.71 1209.37 L1845.12 1209.37 L1844.53 1209.37 L1843.95 1209.37 L1843.36 1209.37 L1842.77 1209.37 L1842.19 1209.37 L1841.6 1209.37 L1841.01 1209.37 L1840.43 1209.37 L1839.84 1209.37 L1839.26 1209.37 L1838.67 1209.37 L1838.08 1209.37 L1837.5 1209.37 L1836.91 1209.37 L1836.32 1209.37 L1835.74 1209.37 L1835.15 1209.37 L1834.56 1209.37 L1833.98 1209.37 L1833.39 1209.37 L1832.81 1209.37 L1832.22 1209.37 L1831.63 1209.37 L1831.05 1209.37 L1830.46 1209.37 L1829.87 1209.37 L1829.29 1209.37 L1828.7 1209.37 L1828.11 1209.37 L1827.53 1209.37 L1826.94 1209.37 L1826.35 1209.37 L1825.77 1209.37 L1825.18 1209.37 L1824.6 1209.37 L1824.01 1209.37 L1823.42 1209.37 L1822.84 1209.37 L1822.25 1209.37 L1821.66 1209.37 L1821.08 1209.37 L1820.49 1209.37 L1819.9 1209.37 L1819.32 1209.37 L1818.73 1209.37 L1818.14 1209.37 L1817.56 1209.37 L1816.97 1209.37 L1816.39 1209.37 L1815.8 1209.37 L1815.21 1209.37 L1814.63 1209.37 L1814.04 1209.37 L1813.45 1209.37 L1812.87 1209.37 L1812.28 1209.37 L1811.69 1209.37 L1811.11 1209.37 L1810.52 1209.37 L1809.94 1209.37 L1809.35 1209.37 L1808.76 1209.37 L1808.18 1209.37 L1807.59 1209.37 L1807 1209.37 L1806.42 1209.37 L1805.83 1209.37 L1805.24 1209.37 L1804.66 1209.37 L1804.07 1209.37 L1803.48 1209.37 L1802.9 1209.37 L1802.31 1209.37 L1801.73 1209.37 L1801.14 1209.37 L1800.55 1209.37 L1799.97 1209.37 L1799.38 1209.37 L1798.79 1209.37 L1798.21 1209.37 L1797.62 1209.37 L1797.03 1209.37 L1796.45 1209.37 L1795.86 1209.37 L1795.27 1209.37 L1794.69 1209.37 L1794.1 1209.37 L1793.52 1209.37 L1792.93 1209.37 L1792.34 1209.37 L1791.76 1209.37 L1791.17 1209.37 L1790.58 1209.37 L1790 1209.37 L1789.41 1209.37 L1788.82 1209.37 L1788.24 1209.37 L1787.65 1209.37 L1787.06 1209.37 L1786.48 1209.37 L1785.89 1209.37 L1785.31 1209.37 L1784.72 1209.37 L1784.13 1209.37 L1783.55 1209.37 L1782.96 1209.37 L1782.37 1209.37 L1781.79 1209.37 L1781.2 1209.37 L1780.61 1209.37 L1780.03 1209.37 L1779.44 1209.37 L1778.86 1209.37 L1778.27 1209.37 L1777.68 1209.37 L1777.1 1209.37 L1776.51 1209.37 L1775.92 1209.37 L1775.34 1209.37 L1774.75 1209.37 L1774.16 1209.37 L1773.58 1209.37 L1772.99 1209.37 L1772.4 1209.37 L1771.82 1209.37 L1771.23 1209.37 L1770.65 1209.37 L1770.06 1209.37 L1769.47 1209.37 L1768.89 1209.37 L1768.3 1209.37 L1767.71 1209.37 L1767.13 1209.37 L1766.54 1209.37 L1765.95 1209.37 L1765.37 1209.37 L1764.78 1209.37 L1764.19 1209.37 L1763.61 1209.37 L1763.02 1209.37 L1762.44 1209.37 L1761.85 1209.37 L1761.26 1209.37 L1760.68 1209.37 L1760.09 1209.37 L1759.5 1209.37 L1758.92 1209.37 L1758.33 1209.37 L1757.74 1209.37 L1757.16 1209.37 L1756.57 1209.37 L1755.99 1209.37 L1755.4 1209.37 L1754.81 1209.37 L1754.23 1209.37 L1753.64 1209.37 L1753.05 1209.37 L1752.47 1209.37 L1751.88 1209.37 L1751.29 1209.37 L1750.71 1209.37 L1750.12 1209.37 L1749.53 1209.37 L1748.95 1209.37 L1748.36 1209.37 L1747.78 1209.37 L1747.19 1209.37 L1746.6 1209.37 L1746.02 1209.37 L1745.43 1209.37 L1744.84 1209.37 L1744.26 1209.37 L1743.67 1209.37 L1743.08 1209.37 L1742.5 1209.37 L1741.91 1209.37 L1741.32 1209.37 L1740.74 1209.37 L1740.15 1209.37 L1739.57 1209.37 L1738.98 1209.37 L1738.39 1209.37 L1737.81 1209.37 L1737.22 1209.37 L1736.63 1209.37 L1736.05 1209.37 L1735.46 1209.37 L1734.87 1209.37 L1734.29 1209.37 L1733.7 1209.37 L1733.11 1209.37 L1732.53 1209.37 L1731.94 1209.37 L1731.36 1209.37 L1730.77 1209.37 L1730.18 1209.37 L1729.6 1209.37 L1729.01 1209.37 L1728.42 1209.37 L1727.84 1209.37 L1727.25 1209.37 L1726.66 1209.37 L1726.08 1209.37 L1725.49 1209.37 L1724.91 1209.37 L1724.32 1209.37 L1723.73 1209.37 L1723.15 1209.37 L1722.56 1209.37 L1721.97 1209.37 L1721.39 1209.37 L1720.8 1209.37 L1720.21 1209.37 L1719.63 1209.37 L1719.04 1209.37 L1718.45 1209.37 L1717.87 1209.37 L1717.28 1209.37 L1716.7 1209.37 L1716.11 1209.37 L1715.52 1209.37 L1714.94 1209.37 L1714.35 1209.37 L1713.76 1209.37 L1713.18 1209.37 L1712.59 1209.37 L1712 1209.37 L1711.42 1209.37 L1710.83 1209.37 L1710.24 1209.37 L1709.66 1209.37 L1709.07 1209.37 L1708.49 1209.37 L1707.9 1209.37 L1707.31 1209.37 L1706.73 1209.37 L1706.14 1209.37 L1705.55 1209.37 L1704.97 1209.37 L1704.38 1209.37 L1703.79 1209.37 L1703.21 1209.37 L1702.62 1209.37 L1702.04 1209.37 L1701.45 1209.37 L1700.86 1209.37 L1700.28 1209.37 L1699.69 1209.37 L1699.1 1209.37 L1698.52 1209.37 L1697.93 1209.37 L1697.34 1209.37 L1696.76 1209.37 L1696.17 1209.37 L1695.58 1209.37 L1695 1209.37 L1694.41 1209.37 L1693.83 1209.37 L1693.24 1209.37 L1692.65 1209.37 L1692.07 1209.37 L1691.48 1209.37 L1690.89 1209.37 L1690.31 1209.37 L1689.72 1209.37 L1689.13 1209.37 L1688.55 1209.37 L1687.96 1209.37 L1687.37 1209.37 L1686.79 1209.37 L1686.2 1209.37 L1685.62 1209.37 L1685.03 1209.37 L1684.44 1209.37 L1683.86 1209.37 L1683.27 1209.37 L1682.68 1209.37 L1682.1 1209.37 L1681.51 1209.37 L1680.92 1209.37 L1680.34 1209.37 L1679.75 1209.37 L1679.17 1209.37 L1678.58 1209.37 L1677.99 1209.37 L1677.41 1209.37 L1676.82 1209.37 L1676.23 1209.37 L1675.65 1209.37 L1675.06 1209.37 L1674.47 1209.37 L1673.89 1209.37 L1673.3 1209.37 L1672.71 1209.37 L1672.13 1209.37 L1671.54 1209.37 L1670.96 1209.37 L1670.37 1209.37 L1669.78 1209.37 L1669.2 1209.37 L1668.61 1209.37 L1668.02 1209.37 L1667.44 1209.37 L1666.85 1209.37 L1666.26 1209.37 L1665.68 1209.37 L1665.09 1209.37 L1664.5 1209.37 L1663.92 1209.37 L1663.33 1209.37 L1662.75 1209.37 L1662.16 1209.37 L1661.57 1209.37 L1660.99 1209.37 L1660.4 1209.37 L1659.81 1209.37 L1659.23 1209.37 L1658.64 1209.37 L1658.05 1209.37 L1657.47 1209.37 L1656.88 1209.37 L1656.29 1209.37 L1655.71 1209.37 L1655.12 1209.37 L1654.54 1209.37 L1653.95 1209.37 L1653.36 1209.37 L1652.78 1209.37 L1652.19 1209.37 L1651.6 1209.37 L1651.02 1209.37 L1650.43 1209.37 L1649.84 1209.37 L1649.26 1209.37 L1648.67 1209.37 L1648.09 1209.37 L1647.5 1209.37 L1646.91 1209.37 L1646.33 1209.37 L1645.74 1209.37 L1645.15 1209.37 L1644.57 1209.37 L1643.98 1209.37 L1643.39 1209.37 L1642.81 1209.37 L1642.22 1209.37 L1641.63 1209.37 L1641.05 1209.37 L1640.46 1209.37 L1639.88 1209.37 L1639.29 1209.37 L1638.7 1209.37 L1638.12 1209.37 L1637.53 1209.37 L1636.94 1209.37 L1636.36 1209.37 L1635.77 1209.37 L1635.18 1209.37 L1634.6 1209.37 L1634.01 1209.37 L1633.42 1209.37 L1632.84 1209.37 L1632.25 1209.37 L1631.67 1209.37 L1631.08 1209.37 L1630.49 1209.37 L1629.91 1209.37 L1629.32 1209.37 L1628.73 1209.37 L1628.15 1209.37 L1627.56 1209.37 L1626.97 1209.37 L1626.39 1209.37 L1625.8 1209.37 L1625.22 1209.37 L1624.63 1209.37 L1624.04 1209.37 L1623.46 1209.37 L1622.87 1209.37 L1622.28 1209.37 L1621.7 1209.37 L1621.11 1209.37 L1620.52 1209.37 L1619.94 1209.37 L1619.35 1209.37 L1618.76 1209.37 L1618.18 1209.37 L1617.59 1209.37 L1617.01 1209.37 L1616.42 1209.37 L1615.83 1209.37 L1615.25 1209.37 L1614.66 1209.37 L1614.07 1209.37 L1613.49 1209.37 L1612.9 1209.37 L1612.31 1209.37 L1611.73 1209.37 L1611.14 1209.37 L1610.55 1209.37 L1609.97 1209.37 L1609.38 1209.37 L1608.8 1209.37 L1608.21 1209.37 L1607.62 1209.37 L1607.04 1209.37 L1606.45 1209.37 L1605.86 1209.37 L1605.28 1209.37 L1604.69 1209.37 L1604.1 1209.37 L1603.52 1209.37 L1602.93 1209.37 L1602.34 1209.37 L1601.76 1209.37 L1601.17 1209.37 L1600.59 1209.37 L1600 1209.37 L1599.41 1209.37 L1598.83 1209.37 L1598.24 1209.37 L1597.65 1209.37 L1597.07 1209.37 L1596.48 1209.37 L1595.89 1209.37 L1595.31 1209.37 L1594.72 1209.37 L1594.14 1209.37 L1593.55 1209.37 L1592.96 1209.37 L1592.38 1209.37 L1591.79 1209.37 L1591.2 1209.37 L1590.62 1209.37 L1590.03 1209.37 L1589.44 1209.37 L1588.86 1209.37 L1588.27 1209.37 L1587.68 1209.37 L1587.1 1209.37 L1586.51 1209.37 L1585.93 1209.37 L1585.34 1209.37 L1584.75 1209.37 L1584.17 1209.37 L1583.58 1209.37 L1582.99 1209.37 L1582.41 1209.37 L1581.82 1209.37 L1581.23 1209.37 L1580.65 1209.37 L1580.06 1209.37 L1579.47 1209.37 L1578.89 1209.37 L1578.3 1209.37 L1577.72 1209.37 L1577.13 1209.37 L1576.54 1209.37 L1575.96 1209.37 L1575.37 1209.37 L1574.78 1209.37 L1574.2 1209.37 L1573.61 1209.37 L1573.02 1209.37 L1572.44 1209.37 L1571.85 1209.37 L1571.27 1209.37 L1570.68 1209.37 L1570.09 1209.37 L1569.51 1209.37 L1568.92 1209.37 L1568.33 1209.37 L1567.75 1209.37 L1567.16 1209.37 L1566.57 1209.37 L1565.99 1209.37 L1565.4 1209.37 L1564.81 1209.37 L1564.23 1209.37 L1563.64 1209.37 L1563.06 1209.37 L1562.47 1209.37 L1561.88 1209.37 L1561.3 1209.37 L1560.71 1209.37 L1560.12 1209.37 L1559.54 1209.37 L1558.95 1209.37 L1558.36 1209.37 L1557.78 1209.37 L1557.19 1209.37 L1556.6 1209.37 L1556.02 1209.37 L1555.43 1209.37 L1554.85 1209.37 L1554.26 1209.37 L1553.67 1209.37 L1553.09 1209.37 L1552.5 1209.37 L1551.91 1209.37 L1551.33 1209.37 L1550.74 1209.37 L1550.15 1209.37 L1549.57 1209.37 L1548.98 1209.37 L1548.4 1209.37 L1547.81 1209.37 L1547.22 1209.37 L1546.64 1209.37 L1546.05 1209.37 L1545.46 1209.37 L1544.88 1209.37 L1544.29 1209.37 L1543.7 1209.37 L1543.12 1209.37 L1542.53 1209.37 L1541.94 1209.37 L1541.36 1209.37 L1540.77 1209.37 L1540.19 1209.37 L1539.6 1209.37 L1539.01 1209.37 L1538.43 1209.37 L1537.84 1209.37 L1537.25 1209.37 L1536.67 1209.37 L1536.08 1209.37 L1535.49 1209.37 L1534.91 1209.37 L1534.32 1209.37 L1533.73 1209.37 L1533.15 1209.37 L1532.56 1209.37 L1531.98 1209.37 L1531.39 1209.37 L1530.8 1209.37 L1530.22 1209.37 L1529.63 1209.37 L1529.04 1209.37 L1528.46 1209.37 L1527.87 1209.37 L1527.28 1209.37 L1526.7 1209.37 L1526.11 1209.37 L1525.52 1209.37 L1524.94 1209.37 L1524.35 1209.37 L1523.77 1209.37 L1523.18 1209.37 L1522.59 1209.37 L1522.01 1209.37 L1521.42 1209.37 L1520.83 1209.37 L1520.25 1209.37 L1519.66 1209.37 L1519.07 1209.37 L1518.49 1209.37 L1517.9 1209.37 L1517.32 1209.37 L1516.73 1209.37 L1516.14 1209.37 L1515.56 1209.37 L1514.97 1209.37 L1514.38 1209.37 L1513.8 1209.37 L1513.21 1209.37 L1512.62 1209.37 L1512.04 1209.37 L1511.45 1209.37 L1510.86 1209.37 L1510.28 1209.37 L1509.69 1209.37 L1509.11 1209.37 L1508.52 1209.37 L1507.93 1209.37 L1507.35 1209.37 L1506.76 1209.37 L1506.17 1209.37 L1505.59 1209.37 L1505 1209.37 L1504.41 1209.37 L1503.83 1209.37 L1503.24 1209.37 L1502.65 1209.37 L1502.07 1209.37 L1501.48 1209.37 L1500.9 1209.37 L1500.31 1209.37 L1499.72 1209.37 L1499.14 1209.37 L1498.55 1209.37 L1497.96 1209.37 L1497.38 1209.37 L1496.79 1209.37 L1496.2 1209.37 L1495.62 1209.37 L1495.03 1209.37 L1494.45 1209.37 L1493.86 1209.37 L1493.27 1209.37 L1492.69 1209.37 L1492.1 1209.37 L1491.51 1209.37 L1490.93 1209.37 L1490.34 1209.37 L1489.75 1209.37 L1489.17 1209.37 L1488.58 1209.37 L1487.99 1209.37 L1487.41 1209.37 L1486.82 1209.37 L1486.24 1209.37 L1485.65 1209.37 L1485.06 1209.37 L1484.48 1209.37 L1483.89 1209.37 L1483.3 1209.37 L1482.72 1209.37 L1482.13 1209.37 L1481.54 1209.37 L1480.96 1209.37 L1480.37 1209.37 L1479.78 1209.37 L1479.2 1209.37 L1478.61 1209.37 L1478.03 1209.37 L1477.44 1209.37 L1476.85 1209.37 L1476.27 1209.37 L1475.68 1209.37 L1475.09 1209.37 L1474.51 1209.37 L1473.92 1209.37 L1473.33 1209.37 L1472.75 1209.37 L1472.16 1209.37 L1471.57 1209.37 L1470.99 1209.37 L1470.4 1209.37 L1469.82 1209.37 L1469.23 1209.37 L1468.64 1209.37 L1468.06 1209.37 L1467.47 1209.37 L1466.88 1209.37 L1466.3 1209.37 L1465.71 1209.37 L1465.12 1209.37 L1464.54 1209.37 L1463.95 1209.37 L1463.37 1209.37 L1462.78 1209.37 L1462.19 1209.37 L1461.61 1209.37 L1461.02 1209.37 L1460.43 1209.37 L1459.85 1209.37 L1459.26 1209.37 L1458.67 1209.37 L1458.09 1209.37 L1457.5 1209.37 L1456.91 1209.37 L1456.33 1209.37 L1455.74 1209.37 L1455.16 1209.37 L1454.57 1209.37 L1453.98 1209.37 L1453.4 1209.37 L1452.81 1209.37 L1452.22 1209.37 L1451.64 1209.37 L1451.05 1209.37 L1450.46 1209.37 L1449.88 1209.37 L1449.29 1209.37 L1448.7 1209.37 L1448.12 1209.37 L1447.53 1209.37 L1446.95 1209.37 L1446.36 1209.37 L1445.77 1209.37 L1445.19 1209.37 L1444.6 1209.37 L1444.01 1209.37 L1443.43 1209.37 L1442.84 1209.37 L1442.25 1209.37 L1441.67 1209.37 L1441.08 1209.37 L1440.5 1209.37 L1439.91 1209.37 L1439.32 1209.37 L1438.74 1209.37 L1438.15 1209.37 L1437.56 1209.37 L1436.98 1209.37 L1436.39 1209.37 L1435.8 1209.37 L1435.22 1209.37 L1434.63 1209.37 L1434.04 1209.37 L1433.46 1209.37 L1432.87 1209.37 L1432.29 1209.37 L1431.7 1209.37 L1431.11 1209.37 L1430.53 1209.37 L1429.94 1209.37 L1429.35 1209.37 L1428.77 1209.37 L1428.18 1209.37 L1427.59 1209.37 L1427.01 1209.37 L1426.42 1209.37 L1425.83 1209.37 L1425.25 1209.37 L1424.66 1209.37 L1424.08 1209.37 L1423.49 1209.37 L1422.9 1209.37 L1422.32 1209.37 L1421.73 1209.37 L1421.14 1209.37 L1420.56 1209.37 L1419.97 1209.37 L1419.38 1209.37 L1418.8 1209.37 L1418.21 1209.37 L1417.63 1209.37 L1417.04 1209.37 L1416.45 1209.37 L1415.87 1209.37 L1415.28 1209.37 L1414.69 1209.37 L1414.11 1209.37 L1413.52 1209.37 L1412.93 1209.37 L1412.35 1209.37 L1411.76 1209.37 L1411.17 1209.37 L1410.59 1209.37 L1410 1209.37 L1409.42 1209.37 L1408.83 1209.37 L1408.24 1209.37 L1407.66 1209.37 L1407.07 1209.37 L1406.48 1209.37 L1405.9 1209.37 L1405.31 1209.37 L1404.72 1209.37 L1404.14 1209.37 L1403.55 1209.37 L1402.96 1209.37 L1402.38 1209.37 L1401.79 1209.37 L1401.21 1209.37 L1400.62 1209.37 L1400.03 1209.37 L1399.45 1209.37 L1398.86 1209.37 L1398.27 1209.37 L1397.69 1209.37 L1397.1 1209.37 L1396.51 1209.37 L1395.93 1209.37 L1395.34 1209.37 L1394.75 1209.37 L1394.17 1209.37 L1393.58 1209.37 L1393 1209.37 L1392.41 1209.37 L1391.82 1209.37 L1391.24 1209.37 L1390.65 1209.37 L1390.06 1209.37 L1389.48 1209.37 L1388.89 1209.37 L1388.3 1209.37 L1387.72 1209.37 L1387.13 1209.37 L1386.55 1209.37 L1385.96 1209.37 L1385.37 1209.37 L1384.79 1209.37 L1384.2 1209.37 L1383.61 1209.37 L1383.03 1209.37 L1382.44 1209.37 L1381.85 1209.37 L1381.27 1209.37 L1380.68 1209.37 L1380.09 1209.37 L1379.51 1209.37 L1378.92 1209.37 L1378.34 1209.37 L1377.75 1209.37 L1377.16 1209.37 L1376.58 1209.37 L1375.99 1209.37 L1375.4 1209.37 L1374.82 1209.37 L1374.23 1209.37 L1373.64 1209.37 L1373.06 1209.37 L1372.47 1209.37 L1371.88 1209.37 L1371.3 1209.37 L1370.71 1209.37 L1370.13 1209.37 L1369.54 1209.37 L1368.95 1209.37 L1368.37 1209.37 L1367.78 1209.37 L1367.19 1209.37 L1366.61 1209.37 L1366.02 1209.37 L1365.43 1209.37 L1364.85 1209.37 L1364.26 1209.37 L1363.68 1209.37 L1363.09 1209.37 L1362.5 1209.37 L1361.92 1209.37 L1361.33 1209.37 L1360.74 1209.37 L1360.16 1209.37 L1359.57 1209.37 L1358.98 1209.37 L1358.4 1209.37 L1357.81 1209.37 L1357.22 1209.37 L1356.64 1209.37 L1356.05 1209.37 L1355.47 1209.37 L1354.88 1209.37 L1354.29 1209.37 L1353.71 1209.37 L1353.12 1209.37 L1352.53 1209.37 L1351.95 1209.37 L1351.36 1209.37 L1350.77 1209.37 L1350.19 1209.37 L1349.6 1209.37 L1349.01 1209.37 L1348.43 1209.37 L1347.84 1209.37 L1347.26 1209.37 L1346.67 1209.37 L1346.08 1209.37 L1345.5 1209.37 L1344.91 1209.37 L1344.32 1209.37 L1343.74 1209.37 L1343.15 1209.37 L1342.56 1209.37 L1341.98 1209.37 L1341.39 1209.37 L1340.8 1209.37 L1340.22 1209.37 L1339.63 1209.37 L1339.05 1209.37 L1338.46 1209.37 L1337.87 1209.37 L1337.29 1209.37 L1336.7 1209.37 L1336.11 1209.37 L1335.53 1209.37 L1334.94 1209.37 L1334.35 1209.37 L1333.77 1209.37 L1333.18 1209.37 L1332.6 1209.37 L1332.01 1209.37 L1331.42 1209.37 L1330.84 1209.37 L1330.25 1209.37 L1329.66 1209.37 L1329.08 1209.37 L1328.49 1209.37 L1327.9 1209.37 L1327.32 1209.37 L1326.73 1209.37 L1326.14 1209.37 L1325.56 1209.37 L1324.97 1209.37 L1324.39 1209.37 L1323.8 1209.37 L1323.21 1209.37 L1322.63 1209.37 L1322.04 1209.37 L1321.45 1209.37 L1320.87 1209.37 L1320.28 1209.37 L1319.69 1209.37 L1319.11 1209.37 L1318.52 1209.37 L1317.93 1209.37 L1317.35 1209.37 L1316.76 1209.37 L1316.18 1209.37 L1315.59 1209.37 L1315 1209.37 L1314.42 1209.37 L1313.83 1209.37 L1313.24 1209.37 L1312.66 1209.37 L1312.07 1209.37 L1311.48 1209.37 L1310.9 1209.37 L1310.31 1209.37 L1309.73 1209.37 L1309.14 1209.37 L1308.55 1209.37 L1307.97 1209.37 L1307.38 1209.37 L1306.79 1209.37 L1306.21 1209.37 L1305.62 1209.37 L1305.03 1209.37 L1304.45 1209.37 L1303.86 1209.37 L1303.27 1209.37 L1302.69 1209.37 L1302.1 1209.37 L1301.52 1209.37 L1300.93 1209.37 L1300.34 1209.37 L1299.76 1209.37 L1299.17 1209.37 L1298.58 1209.37 L1298 1209.37 L1297.41 1209.37 L1296.82 1209.37 L1296.24 1209.37 L1295.65 1209.37 L1295.06 1209.37 L1294.48 1209.37 L1293.89 1209.37 L1293.31 1209.37 L1292.72 1209.37 L1292.13 1209.37 L1291.55 1209.37 L1290.96 1209.37 L1290.37 1209.37 L1289.79 1209.37 L1289.2 1209.37 L1288.61 1209.37 L1288.03 1209.37 L1287.44 1209.37 L1286.86 1209.37 L1286.27 1209.37 L1285.68 1209.37 L1285.1 1209.37 L1284.51 1209.37 L1283.92 1209.37 L1283.34 1209.37 L1282.75 1209.37 L1282.16 1209.37 L1281.58 1209.37 L1280.99 1209.37 L1280.4 1209.37 L1279.82 1209.37 L1279.23 1209.37 L1278.65 1209.37 L1278.06 1209.37 L1277.47 1209.37 L1276.89 1209.37 L1276.3 1209.37 L1275.71 1209.37 L1275.13 1209.37 L1274.54 1209.37 L1273.95 1209.37 L1273.37 1209.37 L1272.78 1209.37 L1272.19 1209.37 L1271.61 1209.37 L1271.02 1209.37 L1270.44 1209.37 L1269.85 1209.37 L1269.26 1209.37 L1268.68 1209.37 L1268.09 1209.37 L1267.5 1209.37 L1266.92 1209.37 L1266.33 1209.37 L1265.74 1209.37 L1265.16 1209.37 L1264.57 1209.37 L1263.98 1209.37 L1263.4 1209.37 L1262.81 1209.37 L1262.23 1209.37 L1261.64 1209.37 L1261.05 1209.37 L1260.47 1209.37 L1259.88 1209.37 L1259.29 1209.37 L1258.71 1209.37 L1258.12 1209.37 L1257.53 1209.37 L1256.95 1209.37 L1256.36 1209.37 L1255.78 1209.37 L1255.19 1209.37 L1254.6 1209.37 L1254.02 1209.37 L1253.43 1209.37 L1252.84 1209.37 L1252.26 1209.37 L1251.67 1209.37 L1251.08 1209.37 L1250.5 1209.37 L1249.91 1209.37 L1249.32 1209.37 L1248.74 1209.37 L1248.15 1209.37 L1247.57 1209.37 L1246.98 1209.37 L1246.39 1209.37 L1245.81 1209.37 L1245.22 1209.37 L1244.63 1209.37 L1244.05 1209.37 L1243.46 1209.37 L1242.87 1209.37 L1242.29 1209.37 L1241.7 1209.37 L1241.11 1209.37 L1240.53 1209.37 L1239.94 1209.37 L1239.36 1209.37 L1238.77 1209.37 L1238.18 1209.37 L1237.6 1209.37 L1237.01 1209.37 L1236.42 1209.37 L1235.84 1209.37 L1235.25 1209.37 L1234.66 1209.37 L1234.08 1209.37 L1233.49 1209.37 L1232.91 1209.37 L1232.32 1209.37 L1231.73 1209.37 L1231.15 1209.37 L1230.56 1209.37 L1229.97 1209.37 L1229.39 1209.37 L1228.8 1209.37 L1228.21 1209.37 L1227.63 1209.37 L1227.04 1209.37 L1226.45 1209.37 L1225.87 1209.37 L1225.28 1209.37 L1224.7 1209.37 L1224.11 1209.37 L1223.52 1209.37 L1222.94 1209.37 L1222.35 1209.37 L1221.76 1209.37 L1221.18 1209.37 L1220.59 1209.37 L1220 1209.37 L1219.42 1209.37 L1218.83 1209.37 L1218.24 1209.37 L1217.66 1209.37 L1217.07 1209.37 L1216.49 1209.37 L1215.9 1209.37 L1215.31 1209.37 L1214.73 1209.37 L1214.14 1209.37 L1213.55 1209.37 L1212.97 1209.37 L1212.38 1209.37 L1211.79 1209.37 L1211.21 1209.37 L1210.62 1209.37 L1210.03 1209.37 L1209.45 1209.37 L1208.86 1209.37 L1208.28 1209.37 L1207.69 1209.37 L1207.1 1209.37 L1206.52 1209.37 L1205.93 1209.37 L1205.34 1209.37 L1204.76 1209.37 L1204.17 1209.37 L1203.58 1209.37 L1203 1209.37 L1202.41 1209.37 L1201.83 1209.37 L1201.24 1209.37 L1200.65 1209.37 L1200.07 1209.37 L1199.48 1209.37 L1198.89 1209.37 L1198.31 1209.37 L1197.72 1209.37 L1197.13 1209.37 L1196.55 1209.37 L1195.96 1209.37 L1195.37 1209.37 L1194.79 1209.37 L1194.2 1209.37 L1193.62 1209.37 L1193.03 1209.37 L1192.44 1209.37 L1191.86 1209.37 L1191.27 1209.37 L1190.68 1209.37 L1190.1 1209.37 L1189.51 1209.37 L1188.92 1209.37 L1188.34 1209.37 L1187.75 1209.37 L1187.16 1209.37 L1186.58 1209.37 L1185.99 1209.37 L1185.41 1209.37 L1184.82 1209.37 L1184.23 1209.37 L1183.65 1209.37 L1183.06 1209.37 L1182.47 1209.37 L1181.89 1209.37 L1181.3 1209.37 L1180.71 1209.37 L1180.13 1209.37 L1179.54 1209.37 L1178.96 1209.37 L1178.37 1209.37 L1177.78 1209.37 L1177.2 1209.37 L1176.61 1209.37 L1176.02 1209.37 L1175.44 1209.37 L1174.85 1209.37 L1174.26 1209.37 L1173.68 1209.37 L1173.09 1209.37 L1172.5 1209.37 L1171.92 1209.37 L1171.33 1209.37 L1170.75 1209.37 L1170.16 1209.37 L1169.57 1209.37 L1168.99 1209.37 L1168.4 1209.37 L1167.81 1209.37 L1167.23 1209.37 L1166.64 1209.37 L1166.05 1209.37 L1165.47 1209.37 L1164.88 1209.37 L1164.29 1209.37 L1163.71 1209.37 L1163.12 1209.37 L1162.54 1209.37 L1161.95 1209.37 L1161.36 1209.37 L1160.78 1209.37 L1160.19 1209.37 L1159.6 1209.37 L1159.02 1209.37 L1158.43 1209.37 L1157.84 1209.37 L1157.26 1209.37 L1156.67 1209.37 L1156.09 1209.37 L1155.5 1209.37 L1154.91 1209.37 L1154.33 1209.37 L1153.74 1209.37 L1153.15 1209.37 L1152.57 1209.37 L1151.98 1209.37 L1151.39 1209.37 L1150.81 1209.37 L1150.22 1209.37 L1149.63 1209.37 L1149.05 1209.37 L1148.46 1209.37 L1147.88 1209.37 L1147.29 1209.37 L1146.7 1209.37 L1146.12 1209.37 L1145.53 1209.37 L1144.94 1209.37 L1144.36 1209.37 L1143.77 1209.37 L1143.18 1209.37 L1142.6 1209.37 L1142.01 1209.37 L1141.42 1209.37 L1140.84 1209.37 L1140.25 1209.37 L1139.67 1209.37 L1139.08 1209.37 L1138.49 1209.37 L1137.91 1209.37 L1137.32 1209.37 L1136.73 1209.37 L1136.15 1209.37 L1135.56 1209.37 L1134.97 1209.37 L1134.39 1209.37 L1133.8 1209.37 L1133.21 1209.37 L1132.63 1209.37 L1132.04 1209.37 L1131.46 1209.37 L1130.87 1209.37 L1130.28 1209.37 L1129.7 1209.37 L1129.11 1209.37 L1128.52 1209.37 L1127.94 1209.37 L1127.35 1209.37 L1126.76 1209.37 L1126.18 1209.37 L1125.59 1209.37 L1125.01 1209.37 L1124.42 1209.37 L1123.83 1209.37 L1123.25 1209.37 L1122.66 1209.37 L1122.07 1209.37 L1121.49 1209.37 L1120.9 1209.37 L1120.31 1209.37 L1119.73 1209.37 L1119.14 1209.37 L1118.55 1209.37 L1117.97 1209.37 L1117.38 1209.37 L1116.8 1209.37 L1116.21 1209.37 L1115.62 1209.37 L1115.04 1209.37 L1114.45 1209.37 L1113.86 1209.37 L1113.28 1209.37 L1112.69 1209.37 L1112.1 1209.37 L1111.52 1209.37 L1110.93 1209.37 L1110.34 1209.37 L1109.76 1209.37 L1109.17 1209.37 L1108.59 1209.37 L1108 1209.37 L1107.41 1209.37 L1106.83 1209.37 L1106.24 1209.37 L1105.65 1209.37 L1105.07 1209.37 L1104.48 1209.37 L1103.89 1209.37 L1103.31 1209.37 L1102.72 1209.37 L1102.14 1209.37 L1101.55 1209.37 L1100.96 1209.37 L1100.38 1209.37 L1099.79 1209.37 L1099.2 1209.37 L1098.62 1209.37 L1098.03 1209.37 L1097.44 1209.37 L1096.86 1209.37 L1096.27 1209.37 L1095.68 1209.37 L1095.1 1209.37 L1094.51 1209.37 L1093.93 1209.37 L1093.34 1209.37 L1092.75 1209.37 L1092.17 1209.37 L1091.58 1209.37 L1090.99 1209.37 L1090.41 1209.37 L1089.82 1209.37 L1089.23 1209.37 L1088.65 1209.37 L1088.06 1209.37 L1087.47 1209.37 L1086.89 1209.37 L1086.3 1209.37 L1085.72 1209.37 L1085.13 1209.37 L1084.54 1209.37 L1083.96 1209.37 L1083.37 1209.37 L1082.78 1209.37 L1082.2 1209.37 L1081.61 1209.37 L1081.02 1209.37 L1080.44 1209.37 L1079.85 1209.37 L1079.26 1209.37 L1078.68 1209.37 L1078.09 1209.37 L1077.51 1209.37 L1076.92 1209.37 L1076.33 1209.37 L1075.75 1209.37 L1075.16 1209.37 L1074.57 1209.37 L1073.99 1209.37 L1073.4 1209.37 L1072.81 1209.37 L1072.23 1209.37 L1071.64 1209.37 L1071.06 1209.37 L1070.47 1209.37 L1069.88 1209.37 L1069.3 1209.37 L1068.71 1209.37 L1068.12 1209.37 L1067.54 1209.37 L1066.95 1209.37 L1066.36 1209.37 L1065.78 1209.37 L1065.19 1209.37 L1064.6 1209.37 L1064.02 1209.37 L1063.43 1209.37 L1062.85 1209.37 L1062.26 1209.37 L1061.67 1209.37 L1061.09 1209.37 L1060.5 1209.37 L1059.91 1209.37 L1059.33 1209.37 L1058.74 1209.37 L1058.15 1209.37 L1057.57 1209.37 L1056.98 1209.37 L1056.39 1209.37 L1055.81 1209.37 L1055.22 1209.37 L1054.64 1209.37 L1054.05 1209.37 L1053.46 1209.37 L1052.88 1209.37 L1052.29 1209.37 L1051.7 1209.37 L1051.12 1209.37 L1050.53 1209.37 L1049.94 1209.37 L1049.36 1209.37 L1048.77 1209.37 L1048.19 1209.37 L1047.6 1209.37 L1047.01 1209.37 L1046.43 1209.37 L1045.84 1209.37 L1045.25 1209.37 L1044.67 1209.37 L1044.08 1209.37 L1043.49 1209.37 L1042.91 1209.37 L1042.32 1209.37 L1041.73 1209.37 L1041.15 1209.37 L1040.56 1209.37 L1039.98 1209.37 L1039.39 1209.37 L1038.8 1209.37 L1038.22 1209.37 L1037.63 1209.37 L1037.04 1209.37 L1036.46 1209.37 L1035.87 1209.37 L1035.28 1209.37 L1034.7 1209.37 L1034.11 1209.37 L1033.52 1209.37 L1032.94 1209.37 L1032.35 1209.37 L1031.77 1209.37 L1031.18 1209.37 L1030.59 1209.37 L1030.01 1209.37 L1029.42 1209.37 L1028.83 1209.37 L1028.25 1209.37 L1027.66 1209.37 L1027.07 1209.37 L1026.49 1209.37 L1025.9 1209.37 L1025.32 1209.37 L1024.73 1209.37 L1024.14 1209.37 L1023.56 1209.37 L1022.97 1209.37 L1022.38 1209.37 L1021.8 1209.37 L1021.21 1209.37 L1020.62 1209.37 L1020.04 1209.37 L1019.45 1209.37 L1018.86 1209.37 L1018.28 1209.37 L1017.69 1209.37 L1017.11 1209.37 L1016.52 1209.37 L1015.93 1209.37 L1015.35 1209.37 L1014.76 1209.37 L1014.17 1209.37 L1013.59 1209.37 L1013 1209.37 L1012.41 1209.37 L1011.83 1209.37 L1011.24 1209.37 L1010.65 1209.37 L1010.07 1209.37 L1009.48 1209.37 L1008.9 1209.37 L1008.31 1209.37 L1007.72 1209.37 L1007.14 1209.37 L1006.55 1209.37 L1005.96 1209.37 L1005.38 1209.37 L1004.79 1209.37 L1004.2 1209.37 L1003.62 1209.37 L1003.03 1209.37 L1002.44 1209.37 L1001.86 1209.37 L1001.27 1209.37 L1000.69 1209.37 L1000.1 1209.37 L999.513 1209.37 L998.926 1209.37 L998.34 1209.37 L997.754 1209.37 L997.167 1209.37 L996.581 1209.37 L995.994 1209.37 L995.408 1209.37 L994.822 1209.37 L994.235 1209.37 L993.649 1209.37 L993.062 1209.37 L992.476 1209.37 L991.889 1209.37 L991.303 1209.37 L990.717 1209.37 L990.13 1209.37 L989.544 1209.37 L988.957 1209.37 L988.371 1209.37 L987.785 1209.37 L987.198 1209.37 L986.612 1209.37 L986.025 1209.37  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1209.45 986.612,1209.45 987.198,1209.45 987.785,1209.45 988.371,1209.45 988.957,1209.45 989.544,1209.45 990.13,1209.45 990.717,1209.45 991.303,1209.45 991.889,1209.45 992.476,1209.45 993.062,1209.45 993.649,1209.45 994.235,1209.45 994.822,1209.45 995.408,1209.45 995.994,1209.45 996.581,1209.45 997.167,1209.45 997.754,1209.45 998.34,1209.45 998.926,1209.45 999.513,1209.45 1000.1,1209.45 1000.69,1209.45 1001.27,1209.45 1001.86,1209.45 1002.44,1209.45 1003.03,1209.45 1003.62,1209.45 1004.2,1209.45 1004.79,1209.45 1005.38,1209.45 1005.96,1209.45 1006.55,1209.45 1007.14,1209.45 1007.72,1209.45 1008.31,1209.45 1008.9,1209.45 1009.48,1209.45 1010.07,1209.45 1010.65,1209.45 1011.24,1209.45 1011.83,1209.45 1012.41,1209.45 1013,1209.45 1013.59,1209.45 1014.17,1209.45 1014.76,1209.45 1015.35,1209.45 1015.93,1209.45 1016.52,1209.45 1017.11,1209.45 1017.69,1209.45 1018.28,1209.45 1018.86,1209.45 1019.45,1209.45 1020.04,1209.45 1020.62,1209.45 1021.21,1209.45 1021.8,1209.45 1022.38,1209.45 1022.97,1209.45 1023.56,1209.45 1024.14,1209.45 1024.73,1209.45 1025.32,1209.45 1025.9,1209.45 1026.49,1209.45 1027.07,1209.45 1027.66,1209.45 1028.25,1209.45 1028.83,1209.45 1029.42,1209.45 1030.01,1209.45 1030.59,1209.45 1031.18,1209.45 1031.77,1209.45 1032.35,1209.45 1032.94,1209.45 1033.52,1209.45 1034.11,1209.45 1034.7,1209.45 1035.28,1209.45 1035.87,1209.45 1036.46,1209.45 1037.04,1209.45 1037.63,1209.45 1038.22,1209.45 1038.8,1209.45 1039.39,1209.45 1039.98,1209.45 1040.56,1209.45 1041.15,1209.45 1041.73,1209.45 1042.32,1209.45 1042.91,1209.45 1043.49,1209.45 1044.08,1209.45 1044.67,1209.45 1045.25,1209.45 1045.84,1209.45 1046.43,1209.45 1047.01,1209.45 1047.6,1209.45 1048.19,1209.45 1048.77,1209.45 1049.36,1209.45 1049.94,1209.45 1050.53,1209.45 1051.12,1209.45 1051.7,1209.45 1052.29,1209.45 1052.88,1209.45 1053.46,1209.45 1054.05,1209.45 1054.64,1209.45 1055.22,1209.45 1055.81,1209.45 1056.39,1209.45 1056.98,1209.45 1057.57,1209.45 1058.15,1209.45 1058.74,1209.45 1059.33,1209.45 1059.91,1209.45 1060.5,1209.45 1061.09,1209.45 1061.67,1209.45 1062.26,1209.45 1062.85,1209.45 1063.43,1209.45 1064.02,1209.45 1064.6,1209.45 1065.19,1209.45 1065.78,1209.45 1066.36,1209.45 1066.95,1209.45 1067.54,1209.45 1068.12,1209.45 1068.71,1209.45 1069.3,1209.45 1069.88,1209.45 1070.47,1209.45 1071.06,1209.45 1071.64,1209.45 1072.23,1209.45 1072.81,1209.45 1073.4,1209.45 1073.99,1209.45 1074.57,1209.45 1075.16,1209.45 1075.75,1209.45 1076.33,1209.45 1076.92,1209.45 1077.51,1209.45 1078.09,1209.45 1078.68,1209.45 1079.26,1209.45 1079.85,1209.45 1080.44,1209.45 1081.02,1209.45 1081.61,1209.45 1082.2,1209.45 1082.78,1209.45 1083.37,1209.45 1083.96,1209.45 1084.54,1209.45 1085.13,1209.45 1085.72,1209.45 1086.3,1209.45 1086.89,1209.45 1087.47,1209.45 1088.06,1209.45 1088.65,1209.45 1089.23,1209.45 1089.82,1209.45 1090.41,1209.45 1090.99,1209.45 1091.58,1209.45 1092.17,1209.45 1092.75,1209.45 1093.34,1209.45 1093.93,1209.45 1094.51,1209.45 1095.1,1209.45 1095.68,1209.45 1096.27,1209.45 1096.86,1209.45 1097.44,1209.45 1098.03,1209.45 1098.62,1209.45 1099.2,1209.45 1099.79,1209.45 1100.38,1209.45 1100.96,1209.45 1101.55,1209.45 1102.14,1209.45 1102.72,1209.45 1103.31,1209.45 1103.89,1209.45 1104.48,1209.45 1105.07,1209.45 1105.65,1209.45 1106.24,1209.45 1106.83,1209.45 1107.41,1209.45 1108,1209.45 1108.59,1209.45 1109.17,1209.45 1109.76,1209.45 1110.34,1209.45 1110.93,1209.45 1111.52,1209.45 1112.1,1209.45 1112.69,1209.45 1113.28,1209.45 1113.86,1209.45 1114.45,1209.45 1115.04,1209.45 1115.62,1209.45 1116.21,1209.45 1116.8,1209.45 1117.38,1209.45 1117.97,1209.45 1118.55,1209.45 1119.14,1209.45 1119.73,1209.45 1120.31,1209.45 1120.9,1209.45 1121.49,1209.45 1122.07,1209.45 1122.66,1209.45 1123.25,1209.45 1123.83,1209.45 1124.42,1209.45 1125.01,1209.45 1125.59,1209.45 1126.18,1209.45 1126.76,1209.45 1127.35,1209.45 1127.94,1209.45 1128.52,1209.45 1129.11,1209.45 1129.7,1209.45 1130.28,1209.45 1130.87,1209.45 1131.46,1209.45 1132.04,1209.45 1132.63,1209.45 1133.21,1209.45 1133.8,1209.45 1134.39,1209.45 1134.97,1209.45 1135.56,1209.45 1136.15,1209.45 1136.73,1209.45 1137.32,1209.45 1137.91,1209.45 1138.49,1209.45 1139.08,1209.45 1139.67,1209.45 1140.25,1209.45 1140.84,1209.45 1141.42,1209.45 1142.01,1209.45 1142.6,1209.45 1143.18,1209.45 1143.77,1209.45 1144.36,1209.45 1144.94,1209.45 1145.53,1209.45 1146.12,1209.45 1146.7,1209.45 1147.29,1209.45 1147.88,1209.45 1148.46,1209.45 1149.05,1209.45 1149.63,1209.45 1150.22,1209.45 1150.81,1209.45 1151.39,1209.45 1151.98,1209.45 1152.57,1209.45 1153.15,1209.45 1153.74,1209.45 1154.33,1209.45 1154.91,1209.45 1155.5,1209.45 1156.09,1209.45 1156.67,1209.45 1157.26,1209.45 1157.84,1209.45 1158.43,1209.45 1159.02,1209.45 1159.6,1209.45 1160.19,1209.45 1160.78,1209.45 1161.36,1209.45 1161.95,1209.45 1162.54,1209.45 1163.12,1209.45 1163.71,1209.45 1164.29,1209.45 1164.88,1209.45 1165.47,1209.45 1166.05,1209.45 1166.64,1209.45 1167.23,1209.45 1167.81,1209.45 1168.4,1209.45 1168.99,1209.45 1169.57,1209.45 1170.16,1209.45 1170.75,1209.45 1171.33,1209.45 1171.92,1209.45 1172.5,1209.45 1173.09,1209.45 1173.68,1209.45 1174.26,1209.45 1174.85,1209.45 1175.44,1209.45 1176.02,1209.45 1176.61,1209.45 1177.2,1209.45 1177.78,1209.45 1178.37,1209.45 1178.96,1209.45 1179.54,1209.45 1180.13,1209.45 1180.71,1209.45 1181.3,1209.45 1181.89,1209.45 1182.47,1209.45 1183.06,1209.45 1183.65,1209.45 1184.23,1209.45 1184.82,1209.45 1185.41,1209.45 1185.99,1209.45 1186.58,1209.45 1187.16,1209.45 1187.75,1209.45 1188.34,1209.45 1188.92,1209.45 1189.51,1209.45 1190.1,1209.45 1190.68,1209.45 1191.27,1209.45 1191.86,1209.45 1192.44,1209.45 1193.03,1209.45 1193.62,1209.45 1194.2,1209.45 1194.79,1209.45 1195.37,1209.45 1195.96,1209.45 1196.55,1209.45 1197.13,1209.45 1197.72,1209.45 1198.31,1209.45 1198.89,1209.45 1199.48,1209.45 1200.07,1209.45 1200.65,1209.45 1201.24,1209.45 1201.83,1209.45 1202.41,1209.45 1203,1209.45 1203.58,1209.45 1204.17,1209.45 1204.76,1209.45 1205.34,1209.45 1205.93,1209.45 1206.52,1209.45 1207.1,1209.45 1207.69,1209.45 1208.28,1209.45 1208.86,1209.45 1209.45,1209.45 1210.03,1209.45 1210.62,1209.45 1211.21,1209.45 1211.79,1209.45 1212.38,1209.45 1212.97,1209.45 1213.55,1209.45 1214.14,1209.45 1214.73,1209.45 1215.31,1209.45 1215.9,1209.45 1216.49,1209.45 1217.07,1209.45 1217.66,1209.45 1218.24,1209.45 1218.83,1209.45 1219.42,1209.45 1220,1209.45 1220.59,1209.45 1221.18,1209.45 1221.76,1209.45 1222.35,1209.45 1222.94,1209.45 1223.52,1209.45 1224.11,1209.45 1224.7,1209.45 1225.28,1209.45 1225.87,1209.45 1226.45,1209.45 1227.04,1209.45 1227.63,1209.45 1228.21,1209.45 1228.8,1209.45 1229.39,1209.45 1229.97,1209.45 1230.56,1209.45 1231.15,1209.45 1231.73,1209.45 1232.32,1209.45 1232.91,1209.45 1233.49,1209.45 1234.08,1209.45 1234.66,1209.45 1235.25,1209.45 1235.84,1209.45 1236.42,1209.45 1237.01,1209.45 1237.6,1209.45 1238.18,1209.45 1238.77,1209.45 1239.36,1209.45 1239.94,1209.45 1240.53,1209.45 1241.11,1209.45 1241.7,1209.45 1242.29,1209.45 1242.87,1209.45 1243.46,1209.45 1244.05,1209.45 1244.63,1209.45 1245.22,1209.45 1245.81,1209.45 1246.39,1209.45 1246.98,1209.45 1247.57,1209.45 1248.15,1209.45 1248.74,1209.45 1249.32,1209.45 1249.91,1209.45 1250.5,1209.45 1251.08,1209.45 1251.67,1209.45 1252.26,1209.45 1252.84,1209.45 1253.43,1209.45 1254.02,1209.45 1254.6,1209.45 1255.19,1209.45 1255.78,1209.45 1256.36,1209.45 1256.95,1209.45 1257.53,1209.45 1258.12,1209.45 1258.71,1209.45 1259.29,1209.45 1259.88,1209.45 1260.47,1209.45 1261.05,1209.45 1261.64,1209.45 1262.23,1209.45 1262.81,1209.45 1263.4,1209.45 1263.98,1209.45 1264.57,1209.45 1265.16,1209.45 1265.74,1209.45 1266.33,1209.45 1266.92,1209.45 1267.5,1209.45 1268.09,1209.45 1268.68,1209.45 1269.26,1209.45 1269.85,1209.45 1270.44,1209.45 1271.02,1209.45 1271.61,1209.45 1272.19,1209.45 1272.78,1209.45 1273.37,1209.45 1273.95,1209.45 1274.54,1209.45 1275.13,1209.45 1275.71,1209.45 1276.3,1209.45 1276.89,1209.45 1277.47,1209.45 1278.06,1209.45 1278.65,1209.45 1279.23,1209.45 1279.82,1209.45 1280.4,1209.45 1280.99,1209.45 1281.58,1209.45 1282.16,1209.45 1282.75,1209.45 1283.34,1209.45 1283.92,1209.45 1284.51,1209.45 1285.1,1209.45 1285.68,1209.45 1286.27,1209.45 1286.86,1209.45 1287.44,1209.45 1288.03,1209.45 1288.61,1209.45 1289.2,1209.45 1289.79,1209.45 1290.37,1209.45 1290.96,1209.45 1291.55,1209.45 1292.13,1209.45 1292.72,1209.45 1293.31,1209.45 1293.89,1209.45 1294.48,1209.45 1295.06,1209.45 1295.65,1209.45 1296.24,1209.45 1296.82,1209.45 1297.41,1209.45 1298,1209.45 1298.58,1209.45 1299.17,1209.45 1299.76,1209.45 1300.34,1209.45 1300.93,1209.45 1301.52,1209.45 1302.1,1209.45 1302.69,1209.45 1303.27,1209.45 1303.86,1209.45 1304.45,1209.45 1305.03,1209.45 1305.62,1209.45 1306.21,1209.45 1306.79,1209.45 1307.38,1209.45 1307.97,1209.45 1308.55,1209.45 1309.14,1209.45 1309.73,1209.45 1310.31,1209.45 1310.9,1209.45 1311.48,1209.45 1312.07,1209.45 1312.66,1209.45 1313.24,1209.45 1313.83,1209.45 1314.42,1209.45 1315,1209.45 1315.59,1209.45 1316.18,1209.45 1316.76,1209.45 1317.35,1209.45 1317.93,1209.45 1318.52,1209.45 1319.11,1209.45 1319.69,1209.45 1320.28,1209.45 1320.87,1209.45 1321.45,1209.45 1322.04,1209.45 1322.63,1209.45 1323.21,1209.45 1323.8,1209.45 1324.39,1209.45 1324.97,1209.45 1325.56,1209.45 1326.14,1209.45 1326.73,1209.45 1327.32,1209.45 1327.9,1209.45 1328.49,1209.45 1329.08,1209.45 1329.66,1209.45 1330.25,1209.45 1330.84,1209.45 1331.42,1209.45 1332.01,1209.45 1332.6,1209.45 1333.18,1209.45 1333.77,1209.45 1334.35,1209.45 1334.94,1209.45 1335.53,1209.45 1336.11,1209.45 1336.7,1209.45 1337.29,1209.45 1337.87,1209.45 1338.46,1209.45 1339.05,1209.45 1339.63,1209.45 1340.22,1209.45 1340.8,1209.45 1341.39,1209.45 1341.98,1209.45 1342.56,1209.45 1343.15,1209.45 1343.74,1209.45 1344.32,1209.45 1344.91,1209.45 1345.5,1209.45 1346.08,1209.45 1346.67,1209.45 1347.26,1209.45 1347.84,1209.45 1348.43,1209.45 1349.01,1209.45 1349.6,1209.45 1350.19,1209.45 1350.77,1209.45 1351.36,1209.45 1351.95,1209.45 1352.53,1209.45 1353.12,1209.45 1353.71,1209.45 1354.29,1209.45 1354.88,1209.45 1355.47,1209.45 1356.05,1209.45 1356.64,1209.45 1357.22,1209.45 1357.81,1209.45 1358.4,1209.45 1358.98,1209.45 1359.57,1209.45 1360.16,1209.45 1360.74,1209.45 1361.33,1209.45 1361.92,1209.45 1362.5,1209.45 1363.09,1209.45 1363.68,1209.45 1364.26,1209.45 1364.85,1209.45 1365.43,1209.45 1366.02,1209.45 1366.61,1209.45 1367.19,1209.45 1367.78,1209.45 1368.37,1209.45 1368.95,1209.45 1369.54,1209.45 1370.13,1209.45 1370.71,1209.45 1371.3,1209.45 1371.88,1209.45 1372.47,1209.45 1373.06,1209.45 1373.64,1209.45 1374.23,1209.45 1374.82,1209.45 1375.4,1209.45 1375.99,1209.45 1376.58,1209.45 1377.16,1209.45 1377.75,1209.45 1378.34,1209.45 1378.92,1209.45 1379.51,1209.45 1380.09,1209.45 1380.68,1209.45 1381.27,1209.45 1381.85,1209.45 1382.44,1209.45 1383.03,1209.45 1383.61,1209.45 1384.2,1209.45 1384.79,1209.45 1385.37,1209.45 1385.96,1209.45 1386.55,1209.45 1387.13,1209.45 1387.72,1209.45 1388.3,1209.45 1388.89,1209.45 1389.48,1209.45 1390.06,1209.45 1390.65,1209.45 1391.24,1209.45 1391.82,1209.45 1392.41,1209.45 1393,1209.45 1393.58,1209.45 1394.17,1209.45 1394.75,1209.45 1395.34,1209.45 1395.93,1209.45 1396.51,1209.45 1397.1,1209.45 1397.69,1209.45 1398.27,1209.45 1398.86,1209.45 1399.45,1209.45 1400.03,1209.45 1400.62,1209.45 1401.21,1209.45 1401.79,1209.45 1402.38,1209.45 1402.96,1209.45 1403.55,1209.45 1404.14,1209.45 1404.72,1209.45 1405.31,1209.45 1405.9,1209.45 1406.48,1209.45 1407.07,1209.45 1407.66,1209.45 1408.24,1209.45 1408.83,1209.45 1409.42,1209.45 1410,1209.45 1410.59,1209.45 1411.17,1209.45 1411.76,1209.45 1412.35,1209.45 1412.93,1209.45 1413.52,1209.45 1414.11,1209.45 1414.69,1209.45 1415.28,1209.45 1415.87,1209.45 1416.45,1209.45 1417.04,1209.45 1417.63,1209.45 1418.21,1209.45 1418.8,1209.45 1419.38,1209.45 1419.97,1209.45 1420.56,1209.45 1421.14,1209.45 1421.73,1209.45 1422.32,1209.45 1422.9,1209.45 1423.49,1209.45 1424.08,1209.45 1424.66,1209.45 1425.25,1209.45 1425.83,1209.45 1426.42,1209.45 1427.01,1209.45 1427.59,1209.45 1428.18,1209.45 1428.77,1209.45 1429.35,1209.45 1429.94,1209.45 1430.53,1209.45 1431.11,1209.45 1431.7,1209.45 1432.29,1209.45 1432.87,1209.45 1433.46,1209.45 1434.04,1209.45 1434.63,1209.45 1435.22,1209.45 1435.8,1209.45 1436.39,1209.45 1436.98,1209.45 1437.56,1209.45 1438.15,1209.45 1438.74,1209.45 1439.32,1209.45 1439.91,1209.45 1440.5,1209.45 1441.08,1209.45 1441.67,1209.45 1442.25,1209.45 1442.84,1209.45 1443.43,1209.45 1444.01,1209.45 1444.6,1209.45 1445.19,1209.45 1445.77,1209.45 1446.36,1209.45 1446.95,1209.45 1447.53,1209.45 1448.12,1209.45 1448.7,1209.45 1449.29,1209.45 1449.88,1209.45 1450.46,1209.45 1451.05,1209.45 1451.64,1209.45 1452.22,1209.45 1452.81,1209.45 1453.4,1209.45 1453.98,1209.45 1454.57,1209.45 1455.16,1209.45 1455.74,1209.45 1456.33,1209.45 1456.91,1209.45 1457.5,1209.45 1458.09,1209.45 1458.67,1209.45 1459.26,1209.45 1459.85,1209.45 1460.43,1209.45 1461.02,1209.45 1461.61,1209.45 1462.19,1209.45 1462.78,1209.45 1463.37,1209.45 1463.95,1209.45 1464.54,1209.45 1465.12,1209.45 1465.71,1209.45 1466.3,1209.45 1466.88,1209.45 1467.47,1209.45 1468.06,1209.45 1468.64,1209.45 1469.23,1209.45 1469.82,1209.45 1470.4,1209.45 1470.99,1209.45 1471.57,1209.45 1472.16,1209.45 1472.75,1209.45 1473.33,1209.45 1473.92,1209.45 1474.51,1209.45 1475.09,1209.45 1475.68,1209.45 1476.27,1209.45 1476.85,1209.45 1477.44,1209.45 1478.03,1209.45 1478.61,1209.45 1479.2,1209.45 1479.78,1209.45 1480.37,1209.45 1480.96,1209.45 1481.54,1209.45 1482.13,1209.45 1482.72,1209.45 1483.3,1209.45 1483.89,1209.45 1484.48,1209.45 1485.06,1209.45 1485.65,1209.45 1486.24,1209.45 1486.82,1209.45 1487.41,1209.45 1487.99,1209.45 1488.58,1209.45 1489.17,1209.45 1489.75,1209.45 1490.34,1209.45 1490.93,1209.45 1491.51,1209.45 1492.1,1209.45 1492.69,1209.45 1493.27,1209.45 1493.86,1209.45 1494.45,1209.45 1495.03,1209.45 1495.62,1209.45 1496.2,1209.45 1496.79,1209.45 1497.38,1209.45 1497.96,1209.45 1498.55,1209.45 1499.14,1209.45 1499.72,1209.45 1500.31,1209.45 1500.9,1209.45 1501.48,1209.45 1502.07,1209.45 1502.65,1209.45 1503.24,1209.45 1503.83,1209.45 1504.41,1209.45 1505,1209.45 1505.59,1209.45 1506.17,1209.45 1506.76,1209.45 1507.35,1209.45 1507.93,1209.45 1508.52,1209.45 1509.11,1209.45 1509.69,1209.45 1510.28,1209.45 1510.86,1209.45 1511.45,1209.45 1512.04,1209.45 1512.62,1209.45 1513.21,1209.45 1513.8,1209.45 1514.38,1209.45 1514.97,1209.45 1515.56,1209.45 1516.14,1209.45 1516.73,1209.45 1517.32,1209.45 1517.9,1209.45 1518.49,1209.45 1519.07,1209.45 1519.66,1209.45 1520.25,1209.45 1520.83,1209.45 1521.42,1209.45 1522.01,1209.45 1522.59,1209.45 1523.18,1209.45 1523.77,1209.45 1524.35,1209.45 1524.94,1209.45 1525.52,1209.45 1526.11,1209.45 1526.7,1209.45 1527.28,1209.45 1527.87,1209.45 1528.46,1209.45 1529.04,1209.45 1529.63,1209.45 1530.22,1209.45 1530.8,1209.45 1531.39,1209.45 1531.98,1209.45 1532.56,1209.45 1533.15,1209.45 1533.73,1209.45 1534.32,1209.45 1534.91,1209.45 1535.49,1209.45 1536.08,1209.45 1536.67,1209.45 1537.25,1209.45 1537.84,1209.45 1538.43,1209.45 1539.01,1209.45 1539.6,1209.45 1540.19,1209.45 1540.77,1209.45 1541.36,1209.45 1541.94,1209.45 1542.53,1209.45 1543.12,1209.45 1543.7,1209.45 1544.29,1209.45 1544.88,1209.45 1545.46,1209.45 1546.05,1209.45 1546.64,1209.45 1547.22,1209.45 1547.81,1209.45 1548.4,1209.45 1548.98,1209.45 1549.57,1209.45 1550.15,1209.45 1550.74,1209.45 1551.33,1209.45 1551.91,1209.45 1552.5,1209.45 1553.09,1209.45 1553.67,1209.45 1554.26,1209.45 1554.85,1209.45 1555.43,1209.45 1556.02,1209.45 1556.6,1209.45 1557.19,1209.45 1557.78,1209.45 1558.36,1209.45 1558.95,1209.45 1559.54,1209.45 1560.12,1209.45 1560.71,1209.45 1561.3,1209.45 1561.88,1209.45 1562.47,1209.45 1563.06,1209.45 1563.64,1209.45 1564.23,1209.45 1564.81,1209.45 1565.4,1209.45 1565.99,1209.45 1566.57,1209.45 1567.16,1209.45 1567.75,1209.45 1568.33,1209.45 1568.92,1209.45 1569.51,1209.45 1570.09,1209.45 1570.68,1209.45 1571.27,1209.45 1571.85,1209.45 1572.44,1209.45 1573.02,1209.45 1573.61,1209.45 1574.2,1209.45 1574.78,1209.45 1575.37,1209.45 1575.96,1209.45 1576.54,1209.45 1577.13,1209.45 1577.72,1209.45 1578.3,1209.45 1578.89,1209.45 1579.47,1209.45 1580.06,1209.45 1580.65,1209.45 1581.23,1209.45 1581.82,1209.45 1582.41,1209.45 1582.99,1209.45 1583.58,1209.45 1584.17,1209.45 1584.75,1209.45 1585.34,1209.45 1585.93,1209.45 1586.51,1209.45 1587.1,1209.45 1587.68,1209.45 1588.27,1209.45 1588.86,1209.45 1589.44,1209.45 1590.03,1209.45 1590.62,1209.45 1591.2,1209.45 1591.79,1209.45 1592.38,1209.45 1592.96,1209.45 1593.55,1209.45 1594.14,1209.45 1594.72,1209.45 1595.31,1209.45 1595.89,1209.45 1596.48,1209.45 1597.07,1209.45 1597.65,1209.45 1598.24,1209.45 1598.83,1209.45 1599.41,1209.45 1600,1209.45 1600.59,1209.45 1601.17,1209.45 1601.76,1209.45 1602.34,1209.45 1602.93,1209.45 1603.52,1209.45 1604.1,1209.45 1604.69,1209.45 1605.28,1209.45 1605.86,1209.45 1606.45,1209.45 1607.04,1209.45 1607.62,1209.45 1608.21,1209.45 1608.8,1209.45 1609.38,1209.45 1609.97,1209.45 1610.55,1209.45 1611.14,1209.45 1611.73,1209.45 1612.31,1209.45 1612.9,1209.45 1613.49,1209.45 1614.07,1209.45 1614.66,1209.45 1615.25,1209.45 1615.83,1209.45 1616.42,1209.45 1617.01,1209.45 1617.59,1209.45 1618.18,1209.45 1618.76,1209.45 1619.35,1209.45 1619.94,1209.45 1620.52,1209.45 1621.11,1209.45 1621.7,1209.45 1622.28,1209.45 1622.87,1209.45 1623.46,1209.45 1624.04,1209.45 1624.63,1209.45 1625.22,1209.45 1625.8,1209.45 1626.39,1209.45 1626.97,1209.45 1627.56,1209.45 1628.15,1209.45 1628.73,1209.45 1629.32,1209.45 1629.91,1209.45 1630.49,1209.45 1631.08,1209.45 1631.67,1209.45 1632.25,1209.45 1632.84,1209.45 1633.42,1209.45 1634.01,1209.45 1634.6,1209.45 1635.18,1209.45 1635.77,1209.45 1636.36,1209.45 1636.94,1209.45 1637.53,1209.45 1638.12,1209.45 1638.7,1209.45 1639.29,1209.45 1639.88,1209.45 1640.46,1209.45 1641.05,1209.45 1641.63,1209.45 1642.22,1209.45 1642.81,1209.45 1643.39,1209.45 1643.98,1209.45 1644.57,1209.45 1645.15,1209.45 1645.74,1209.45 1646.33,1209.45 1646.91,1209.45 1647.5,1209.45 1648.09,1209.45 1648.67,1209.45 1649.26,1209.45 1649.84,1209.45 1650.43,1209.45 1651.02,1209.45 1651.6,1209.45 1652.19,1209.45 1652.78,1209.45 1653.36,1209.45 1653.95,1209.45 1654.54,1209.45 1655.12,1209.45 1655.71,1209.45 1656.29,1209.45 1656.88,1209.45 1657.47,1209.45 1658.05,1209.45 1658.64,1209.45 1659.23,1209.45 1659.81,1209.45 1660.4,1209.45 1660.99,1209.45 1661.57,1209.45 1662.16,1209.45 1662.75,1209.45 1663.33,1209.45 1663.92,1209.45 1664.5,1209.45 1665.09,1209.45 1665.68,1209.45 1666.26,1209.45 1666.85,1209.45 1667.44,1209.45 1668.02,1209.45 1668.61,1209.45 1669.2,1209.45 1669.78,1209.45 1670.37,1209.45 1670.96,1209.45 1671.54,1209.45 1672.13,1209.45 1672.71,1209.45 1673.3,1209.45 1673.89,1209.45 1674.47,1209.45 1675.06,1209.45 1675.65,1209.45 1676.23,1209.45 1676.82,1209.45 1677.41,1209.45 1677.99,1209.45 1678.58,1209.45 1679.17,1209.45 1679.75,1209.45 1680.34,1209.45 1680.92,1209.45 1681.51,1209.45 1682.1,1209.45 1682.68,1209.45 1683.27,1209.45 1683.86,1209.45 1684.44,1209.45 1685.03,1209.45 1685.62,1209.45 1686.2,1209.45 1686.79,1209.45 1687.37,1209.45 1687.96,1209.45 1688.55,1209.45 1689.13,1209.45 1689.72,1209.45 1690.31,1209.45 1690.89,1209.45 1691.48,1209.45 1692.07,1209.45 1692.65,1209.45 1693.24,1209.45 1693.83,1209.45 1694.41,1209.45 1695,1209.45 1695.58,1209.45 1696.17,1209.45 1696.76,1209.45 1697.34,1209.45 1697.93,1209.45 1698.52,1209.45 1699.1,1209.45 1699.69,1209.45 1700.28,1209.45 1700.86,1209.45 1701.45,1209.45 1702.04,1209.45 1702.62,1209.45 1703.21,1209.45 1703.79,1209.45 1704.38,1209.45 1704.97,1209.45 1705.55,1209.45 1706.14,1209.45 1706.73,1209.45 1707.31,1209.45 1707.9,1209.45 1708.49,1209.45 1709.07,1209.45 1709.66,1209.45 1710.24,1209.45 1710.83,1209.45 1711.42,1209.45 1712,1209.45 1712.59,1209.45 1713.18,1209.45 1713.76,1209.45 1714.35,1209.45 1714.94,1209.45 1715.52,1209.45 1716.11,1209.45 1716.7,1209.45 1717.28,1209.45 1717.87,1209.45 1718.45,1209.45 1719.04,1209.45 1719.63,1209.45 1720.21,1209.45 1720.8,1209.45 1721.39,1209.45 1721.97,1209.45 1722.56,1209.45 1723.15,1209.45 1723.73,1209.45 1724.32,1209.45 1724.91,1209.45 1725.49,1209.45 1726.08,1209.45 1726.66,1209.45 1727.25,1209.45 1727.84,1209.45 1728.42,1209.45 1729.01,1209.45 1729.6,1209.45 1730.18,1209.45 1730.77,1209.45 1731.36,1209.45 1731.94,1209.45 1732.53,1209.45 1733.11,1209.45 1733.7,1209.45 1734.29,1209.45 1734.87,1209.45 1735.46,1209.45 1736.05,1209.45 1736.63,1209.45 1737.22,1209.45 1737.81,1209.45 1738.39,1209.45 1738.98,1209.45 1739.57,1209.45 1740.15,1209.45 1740.74,1209.45 1741.32,1209.45 1741.91,1209.45 1742.5,1209.45 1743.08,1209.45 1743.67,1209.45 1744.26,1209.45 1744.84,1209.45 1745.43,1209.45 1746.02,1209.45 1746.6,1209.45 1747.19,1209.45 1747.78,1209.45 1748.36,1209.45 1748.95,1209.45 1749.53,1209.45 1750.12,1209.45 1750.71,1209.45 1751.29,1209.45 1751.88,1209.45 1752.47,1209.45 1753.05,1209.45 1753.64,1209.45 1754.23,1209.45 1754.81,1209.45 1755.4,1209.45 1755.99,1209.45 1756.57,1209.45 1757.16,1209.45 1757.74,1209.45 1758.33,1209.45 1758.92,1209.45 1759.5,1209.45 1760.09,1209.45 1760.68,1209.45 1761.26,1209.45 1761.85,1209.45 1762.44,1209.45 1763.02,1209.45 1763.61,1209.45 1764.19,1209.45 1764.78,1209.45 1765.37,1209.45 1765.95,1209.45 1766.54,1209.45 1767.13,1209.45 1767.71,1209.45 1768.3,1209.45 1768.89,1209.45 1769.47,1209.45 1770.06,1209.45 1770.65,1209.45 1771.23,1209.45 1771.82,1209.45 1772.4,1209.45 1772.99,1209.45 1773.58,1209.45 1774.16,1209.45 1774.75,1209.45 1775.34,1209.45 1775.92,1209.45 1776.51,1209.45 1777.1,1209.45 1777.68,1209.45 1778.27,1209.45 1778.86,1209.45 1779.44,1209.45 1780.03,1209.45 1780.61,1209.45 1781.2,1209.45 1781.79,1209.45 1782.37,1209.45 1782.96,1209.45 1783.55,1209.45 1784.13,1209.45 1784.72,1209.45 1785.31,1209.45 1785.89,1209.45 1786.48,1209.45 1787.06,1209.45 1787.65,1209.45 1788.24,1209.45 1788.82,1209.45 1789.41,1209.45 1790,1209.45 1790.58,1209.45 1791.17,1209.45 1791.76,1209.45 1792.34,1209.45 1792.93,1209.45 1793.52,1209.45 1794.1,1209.45 1794.69,1209.45 1795.27,1209.45 1795.86,1209.45 1796.45,1209.45 1797.03,1209.45 1797.62,1209.45 1798.21,1209.45 1798.79,1209.45 1799.38,1209.45 1799.97,1209.45 1800.55,1209.45 1801.14,1209.45 1801.73,1209.45 1802.31,1209.45 1802.9,1209.45 1803.48,1209.45 1804.07,1209.45 1804.66,1209.45 1805.24,1209.45 1805.83,1209.45 1806.42,1209.45 1807,1209.45 1807.59,1209.45 1808.18,1209.45 1808.76,1209.45 1809.35,1209.45 1809.94,1209.45 1810.52,1209.45 1811.11,1209.45 1811.69,1209.45 1812.28,1209.45 1812.87,1209.45 1813.45,1209.45 1814.04,1209.45 1814.63,1209.45 1815.21,1209.45 1815.8,1209.45 1816.39,1209.45 1816.97,1209.45 1817.56,1209.45 1818.14,1209.45 1818.73,1209.45 1819.32,1209.45 1819.9,1209.45 1820.49,1209.45 1821.08,1209.45 1821.66,1209.45 1822.25,1209.45 1822.84,1209.45 1823.42,1209.45 1824.01,1209.45 1824.6,1209.45 1825.18,1209.45 1825.77,1209.45 1826.35,1209.45 1826.94,1209.45 1827.53,1209.45 1828.11,1209.45 1828.7,1209.45 1829.29,1209.45 1829.87,1209.45 1830.46,1209.45 1831.05,1209.45 1831.63,1209.45 1832.22,1209.45 1832.81,1209.45 1833.39,1209.45 1833.98,1209.45 1834.56,1209.45 1835.15,1209.45 1835.74,1209.45 1836.32,1209.45 1836.91,1209.45 1837.5,1209.45 1838.08,1209.45 1838.67,1209.45 1839.26,1209.45 1839.84,1209.45 1840.43,1209.45 1841.01,1209.45 1841.6,1209.45 1842.19,1209.45 1842.77,1209.45 1843.36,1209.45 1843.95,1209.45 1844.53,1209.45 1845.12,1209.45 1845.71,1209.45 1846.29,1209.45 1846.88,1209.45 1847.47,1209.45 1848.05,1209.45 1848.64,1209.45 1849.22,1209.45 1849.81,1209.45 1850.4,1209.45 1850.98,1209.45 1851.57,1209.45 1852.16,1209.45 1852.74,1209.45 1853.33,1209.45 1853.92,1209.45 1854.5,1209.45 1855.09,1209.45 1855.68,1209.45 1856.26,1209.45 1856.85,1209.45 1857.43,1209.45 1858.02,1209.45 1858.61,1209.45 1859.19,1209.45 1859.78,1209.45 1860.37,1209.45 1860.95,1209.45 1861.54,1209.45 1862.13,1209.45 1862.71,1209.45 1863.3,1209.45 1863.88,1209.45 1864.47,1209.45 1865.06,1209.45 1865.64,1209.45 1866.23,1209.45 1866.82,1209.45 1867.4,1209.45 1867.99,1209.45 1868.58,1209.45 1869.16,1209.45 1869.75,1209.45 1870.34,1209.45 1870.92,1209.45 1871.51,1209.45 1872.09,1209.45 1872.68,1209.45 1873.27,1209.45 1873.85,1209.45 1874.44,1209.45 1875.03,1209.45 1875.61,1209.45 1876.2,1209.45 1876.79,1209.45 1877.37,1209.45 1877.96,1209.45 1878.55,1209.45 1879.13,1209.45 1879.72,1209.45 1880.3,1209.45 1880.89,1209.45 1881.48,1209.45 1882.06,1209.45 1882.65,1209.45 1883.24,1209.45 1883.82,1209.45 1884.41,1209.45 1885,1209.45 1885.58,1209.45 1886.17,1209.45 1886.76,1209.45 1887.34,1209.45 1887.93,1209.45 1888.51,1209.45 1889.1,1209.45 1889.69,1209.45 1890.27,1209.45 1890.86,1209.45 1891.45,1209.45 1892.03,1209.45 1892.62,1209.45 1893.21,1209.45 1893.79,1209.45 1894.38,1209.45 1894.96,1209.45 1895.55,1209.45 1896.14,1209.45 1896.72,1209.45 1897.31,1209.45 1897.9,1209.45 1898.48,1209.45 1899.07,1209.45 1899.66,1209.45 1900.24,1209.45 1900.83,1209.45 1901.42,1209.45 1902,1209.45 1902.59,1209.45 1903.17,1209.45 1903.76,1209.45 1904.35,1209.45 1904.93,1209.45 1905.52,1209.45 1906.11,1209.45 1906.69,1209.45 1907.28,1209.45 1907.87,1209.45 1908.45,1209.45 1909.04,1209.45 1909.63,1209.45 1910.21,1209.45 1910.8,1209.45 1911.38,1209.45 1911.97,1209.45 1912.56,1209.45 1913.14,1209.45 1913.73,1209.45 1914.32,1209.45 1914.9,1209.45 1915.49,1209.45 1916.08,1209.45 1916.66,1209.45 1917.25,1209.45 1917.83,1209.45 1918.42,1209.45 1919.01,1209.45 1919.59,1209.45 1920.18,1209.45 1920.77,1209.45 1921.35,1209.45 1921.94,1209.45 1922.53,1209.45 1923.11,1209.45 1923.7,1209.45 1924.29,1209.45 1924.87,1209.45 1925.46,1209.45 1926.04,1209.45 1926.63,1209.45 1927.22,1209.45 1927.8,1209.45 1928.39,1209.45 1928.98,1209.45 1929.56,1209.45 1930.15,1209.45 1930.74,1209.45 1931.32,1209.45 1931.91,1209.45 1932.5,1209.45 1933.08,1209.45 1933.67,1209.45 1934.25,1209.45 1934.84,1209.45 1935.43,1209.45 1936.01,1209.45 1936.6,1209.45 1937.19,1209.45 1937.77,1209.45 1938.36,1209.45 1938.95,1209.45 1939.53,1209.45 1940.12,1209.45 1940.71,1209.45 1941.29,1209.45 1941.88,1209.45 1942.46,1209.45 1943.05,1209.45 1943.64,1209.45 1944.22,1209.45 1944.81,1209.45 1945.4,1209.45 1945.98,1209.45 1946.57,1209.45 1947.16,1209.45 1947.74,1209.45 1948.33,1209.45 1948.91,1209.45 1949.5,1209.45 1950.09,1209.45 1950.67,1209.45 1951.26,1209.45 1951.85,1209.45 1952.43,1209.45 1953.02,1209.45 1953.61,1209.45 1954.19,1209.45 1954.78,1209.45 1955.37,1209.45 1955.95,1209.45 1956.54,1209.45 1957.12,1209.45 1957.71,1209.45 1958.3,1209.45 1958.88,1209.45 1959.47,1209.45 1960.06,1209.45 1960.64,1209.45 1961.23,1209.45 1961.82,1209.45 1962.4,1209.45 1962.99,1209.45 1963.58,1209.45 1964.16,1209.45 1964.75,1209.45 1965.33,1209.45 1965.92,1209.45 1966.51,1209.45 1967.09,1209.45 1967.68,1209.45 1968.27,1209.45 1968.85,1209.45 1969.44,1209.45 1970.03,1209.45 1970.61,1209.45 1971.2,1209.45 1971.78,1209.45 1972.37,1209.45 1972.96,1209.45 1973.54,1209.45 1974.13,1209.45 1974.72,1209.45 1975.3,1209.45 1975.89,1209.45 1976.48,1209.45 1977.06,1209.45 1977.65,1209.45 1978.24,1209.45 1978.82,1209.45 1979.41,1209.45 1979.99,1209.45 1980.58,1209.45 1981.17,1209.45 1981.75,1209.45 1982.34,1209.45 1982.93,1209.45 1983.51,1209.45 1984.1,1209.45 1984.69,1209.45 1985.27,1209.45 1985.86,1209.45 1986.45,1209.45 1987.03,1209.45 1987.62,1209.45 1988.2,1209.45 1988.79,1209.45 1989.38,1209.45 1989.96,1209.45 1990.55,1209.45 1991.14,1209.45 1991.72,1209.45 1992.31,1209.45 1992.9,1209.45 1993.48,1209.45 1994.07,1209.45 1994.65,1209.45 1995.24,1209.45 1995.83,1209.45 1996.41,1209.45 1997,1209.45 1997.59,1209.45 1998.17,1209.45 1998.76,1209.45 1999.35,1209.45 1999.93,1209.45 2000.52,1209.45 2001.11,1209.45 2001.69,1209.45 2002.28,1209.45 2002.86,1209.45 2003.45,1209.45 2004.04,1209.45 2004.62,1209.45 2005.21,1209.45 2005.8,1209.45 2006.38,1209.45 2006.97,1209.45 2007.56,1209.45 2008.14,1209.45 2008.73,1209.45 2009.32,1209.45 2009.9,1209.45 2010.49,1209.45 2011.07,1209.45 2011.66,1209.45 2012.25,1209.45 2012.83,1209.45 2013.42,1209.45 2014.01,1209.45 2014.59,1209.45 2015.18,1209.45 2015.77,1209.45 2016.35,1209.45 2016.94,1209.45 2017.53,1209.45 2018.11,1209.45 2018.7,1209.45 2019.28,1209.45 2019.87,1209.45 2020.46,1209.45 2021.04,1209.45 2021.63,1209.45 2022.22,1209.45 2022.8,1209.45 2023.39,1209.45 2023.98,1209.45 2024.56,1209.45 2025.15,1209.45 2025.73,1209.45 2026.32,1209.45 2026.91,1209.45 2027.49,1209.45 2028.08,1209.45 2028.67,1209.45 2029.25,1209.45 2029.84,1209.45 2030.43,1209.45 2031.01,1209.45 2031.6,1209.45 2032.19,1209.45 2032.77,1209.45 2033.36,1209.45 2033.94,1209.45 2034.53,1209.45 2035.12,1209.45 2035.7,1209.45 2036.29,1209.45 2036.88,1209.45 2037.46,1209.45 2038.05,1209.45 2038.64,1209.45 2039.22,1209.45 2039.81,1209.45 2040.4,1209.45 2040.98,1209.45 2041.57,1209.45 2042.15,1209.45 2042.74,1209.45 2043.33,1209.45 2043.91,1209.45 2044.5,1209.45 2045.09,1209.45 2045.67,1209.45 2046.26,1209.45 2046.85,1209.45 2047.43,1209.45 2048.02,1209.45 2048.6,1209.45 2049.19,1209.45 2049.78,1209.45 2050.36,1209.45 2050.95,1209.45 2051.54,1209.45 2052.12,1209.45 2052.71,1209.45 2053.3,1209.45 2053.88,1209.45 2054.47,1209.45 2055.06,1209.45 2055.64,1209.45 2056.23,1209.45 2056.81,1209.45 2057.4,1209.45 2057.99,1209.45 2058.57,1209.45 2059.16,1209.45 2059.75,1209.45 2060.33,1209.45 2060.92,1209.45 2061.51,1209.45 2062.09,1209.45 2062.68,1209.45 2063.27,1209.45 2063.85,1209.45 2064.44,1209.45 2065.02,1209.45 2065.61,1209.45 2066.2,1209.45 2066.78,1209.45 2067.37,1209.45 2067.96,1209.45 2068.54,1209.45 2069.13,1209.45 2069.72,1209.45 2070.3,1209.45 2070.89,1209.45 2071.48,1209.45 2072.06,1209.45 2072.65,1209.45 2073.23,1209.45 2073.82,1209.45 2074.41,1209.45 2074.99,1209.45 2075.58,1209.45 2076.17,1209.45 2076.75,1209.45 2077.34,1209.45 2077.93,1209.45 2078.51,1209.45 2079.1,1209.45 2079.68,1209.45 2080.27,1209.45 2080.86,1209.45 2081.44,1209.45 2082.03,1209.45 2082.62,1209.45 2083.2,1209.45 2083.79,1209.45 2084.38,1209.45 2084.96,1209.45 2085.55,1209.45 2086.14,1209.45 2086.72,1209.45 2087.31,1209.45 2087.89,1209.45 2088.48,1209.45 2089.07,1209.45 2089.65,1209.45 2090.24,1209.45 2090.83,1209.45 2091.41,1209.45 2092,1209.45 2092.59,1209.45 2093.17,1209.45 2093.76,1209.45 2094.35,1209.45 2094.93,1209.45 2095.52,1209.45 2096.1,1209.45 2096.69,1209.45 2097.28,1209.45 2097.86,1209.45 2098.45,1209.45 2099.04,1209.45 2099.62,1209.45 2100.21,1209.45 2100.8,1209.45 2101.38,1209.45 2101.97,1209.45 2102.55,1209.45 2103.14,1209.45 2103.73,1209.45 2104.31,1209.45 2104.9,1209.45 2105.49,1209.45 2106.07,1209.45 2106.66,1209.45 2107.25,1209.45 2107.83,1209.45 2108.42,1209.45 2109.01,1209.45 2109.59,1209.45 2110.18,1209.45 2110.76,1209.45 2111.35,1209.45 2111.94,1209.45 2112.52,1209.45 2113.11,1209.45 2113.7,1209.45 2114.28,1209.45 2114.87,1209.45 2115.46,1209.45 2116.04,1209.45 2116.63,1209.45 2117.22,1209.45 2117.8,1209.45 2118.39,1209.45 2118.97,1209.45 2119.56,1209.45 2120.15,1209.45 2120.73,1209.45 2121.32,1209.45 2121.91,1209.45 2122.49,1209.45 2123.08,1209.45 2123.67,1209.45 2124.25,1209.45 2124.84,1209.45 2125.42,1209.45 2126.01,1209.45 2126.6,1209.45 2127.18,1209.45 2127.77,1209.45 2128.36,1209.45 2128.94,1209.45 2129.53,1209.45 2130.12,1209.45 2130.7,1209.45 2131.29,1209.45 2131.88,1209.45 2132.46,1209.45 2133.05,1209.45 2133.63,1209.45 2134.22,1209.45 2134.81,1209.45 2135.39,1209.45 2135.98,1209.45 2136.57,1209.45 2137.15,1209.45 2137.74,1209.45 2138.33,1209.45 2138.91,1209.45 2139.5,1209.45 2140.09,1209.45 2140.67,1209.45 2141.26,1209.45 2141.84,1209.45 2142.43,1209.45 2143.02,1209.45 2143.6,1209.45 2144.19,1209.45 2144.78,1209.45 2145.36,1209.45 2145.95,1209.45 2146.54,1209.45 2147.12,1209.45 2147.71,1209.45 2148.3,1209.45 2148.88,1209.45 2149.47,1209.45 2150.05,1209.45 2150.64,1209.45 2151.23,1209.45 2151.81,1209.45 2152.4,1209.45 2152.99,1209.45 2153.57,1209.45 2154.16,1209.45 2154.75,1209.45 2155.33,1209.45 2155.92,1209.45 2156.5,1209.45 2157.09,1209.45 2157.68,1209.45 2158.26,1209.45 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1563.17,1193.57 1400,899.083 \"/>\n<polyline clip-path=\"url(#clip552)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1224.92 985.439,1193.57 2158.26,1193.57 2158.26,1224.92 985.439,1224.92 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip550)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip550)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip553\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip550)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip550)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip550)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip553)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-10247.9 166.588,-10821.4 167.147,-11334.6 167.706,-11791.5 168.266,-12195.6 168.825,-12550.4 169.384,-12859.3 169.943,-12307.6 170.503,-12564 171.062,-12781.6 171.621,-12962.9 172.18,-13110.5 172.74,-12100.9 173.299,-11717.8 173.858,-11813.6 174.417,-11887.1 174.977,-11138 175.536,-11189.1 176.095,-11213.1 176.655,-11211.2 177.214,-11202.4 177.773,-11170.8 178.332,-11121.4 178.892,-11065.2 179.451,-10987.6 180.01,-10894.8 180.569,-10586.8 181.129,-10469.8 181.688,-10347.8 182.247,-10221.4 182.806,-9914.37 183.366,-9780.01 183.925,-9642.36 184.484,-9500.21 185.043,-9352.31 185.603,-9075.56 186.162,-8669.07 186.721,-8392.04 187.28,-8013.56 187.84,-7755.31 188.399,-7587.18 188.958,-7323.56 189.517,-7059.29 190.077,-6892.06 190.636,-6641.57 191.195,-6478.8 191.754,-6310.44 192.314,-6148.36 192.873,-5920.4 193.432,-5634.44 193.991,-5304.42 194.551,-5172.73 195.11,-5040.46 195.669,-4857.05 196.228,-4623.19 196.788,-4507.02 197.347,-4343.51 197.906,-4131.54 198.465,-3930.74 199.025,-3827.35 199.584,-3680.74 200.143,-3451.37 200.702,-3352.33 201.262,-3218.04 201.821,-3048.27 202.38,-2921.07 202.939,-2723.38 203.499,-2644.41 204.058,-2562.72 204.617,-2410.95 205.176,-2265.62 205.736,-2195.46 206.295,-1994.28 206.854,-1895.37 207.413,-1736.92 207.973,-1647.1 208.532,-1558.52 209.091,-1469.21 209.65,-1385.64 210.21,-1330.31 210.769,-1245.17 211.328,-1138 211.887,-1085.48 212.447,-959.233 213.006,-890.808 213.565,-847.364 214.124,-803.055 214.684,-710.677 215.243,-596.711 215.802,-562.915 216.361,-479.856 216.921,-372.584 217.48,-297.186 218.039,-199.752 218.598,-130.882 219.158,-83.7581 219.717,-14.8522 220.276,6.7439 220.835,53.3035 221.395,138.389 221.954,160.198 222.513,224.604 223.072,285.694 223.632,364.549 224.191,396.903 224.75,389.888 225.309,403.45 225.869,393.493 226.428,446.311 226.987,460.27 227.546,493.938 228.106,479.685 228.665,512.267 229.224,517.916 229.783,606.814 230.343,573.272 230.902,622.3 231.461,665.507 232.02,671.124 232.58,694.593 233.139,755.994 233.698,774.416 234.257,795.493 234.817,832.435 235.376,831.503 235.935,848.767 236.494,850.939 237.054,869.24 237.613,885.916 238.172,895.953 238.731,948.065 239.291,961.886 239.85,1028.03 240.409,1019.22 240.968,996.252 241.528,1025.65 242.087,1089.02 242.646,1061.64 243.205,1018.23 243.765,993.277 244.324,969.853 244.883,965.111 245.442,998.342 246.002,975.715 246.561,990.492 247.12,1040.83 247.679,1105.01 248.239,1130.99 248.798,1104.68 249.357,1130.77 249.916,1157.52 250.476,1167.85 251.035,1151.55 251.594,1122.41 252.153,1114.21 252.713,1121.81 253.272,1094.94 253.831,1087.86 254.39,1115.5 254.95,1127.22 255.509,1117.66 256.068,1110.23 256.627,1105.57 257.187,1131.43 257.746,1153.2 258.305,1144.1 258.864,1151.52 259.424,1138.2 259.983,1146.52 260.542,1134.79 261.101,1140.4 261.661,1215.95 262.22,1238.5 262.779,1221.94 263.338,1243.44 263.898,1213.31 264.457,1182.89 265.016,1170.66 265.575,1175.7 266.135,1162.42 266.694,1152.51 267.253,1142.47 267.812,1152.56 268.372,1111.34 268.931,1055.5 269.49,1067.3 270.049,1096 270.609,1087.48 271.168,1095.84 271.727,1085.01 272.286,1079.33 272.846,1105.61 273.405,1080.32 273.964,1078.91 274.523,1092.64 275.083,1084.24 275.642,1092.87 276.201,1101.68 276.76,1093 277.32,1117.21 277.879,1157.84 278.438,1181.37 278.997,1216.17 279.557,1201.68 280.116,1173.99 280.675,1131.23 281.234,1138.23 281.794,1113.42 282.353,1102.96 282.912,1128.48 283.471,1084.03 284.031,1079.48 284.59,1084.76 285.149,1062.13 285.708,1077.02 286.268,1123.72 286.827,1113.98 287.386,1122.49 287.945,1097.95 288.505,1087.37 289.064,1060.41 289.623,1018.55 290.182,1012.97 290.742,1025.65 291.301,1074.49 291.86,1114.74 292.419,1118.52 292.979,1191.24 293.538,1194.5 294.097,1195.76 294.656,1216.34 295.216,1202.69 295.775,1223.21 296.334,1222.71 296.893,1256 297.453,1238.89 298.012,1237.44 298.571,1221.98 299.13,1194.29 299.69,1181.35 300.249,1203.57 300.808,1207.71 301.368,1178.77 301.927,1147.53 302.486,1150.12 303.045,1139.18 303.605,1078.9 304.164,1134.45 304.723,1121.97 305.282,1144.42 305.842,1133.73 306.401,1122.69 306.96,1141.66 307.519,1107.58 308.079,1078.53 308.638,1033.76 309.197,994.337 309.756,1005.13 310.316,998.708 310.875,1014.14 311.434,1008.75 311.993,1021.2 312.553,998.244 313.112,993.189 313.671,985.209 314.23,998.3 314.79,1009.13 315.349,1017.77 315.908,994.528 316.467,988.484 317.027,984.767 317.586,997.148 318.145,941.073 318.704,953.734 319.264,966.079 319.823,978.915 320.382,971.572 320.941,981.379 321.501,1013.14 322.06,1007.13 322.619,1053.9 323.178,1042.47 323.738,1050 324.297,1055.73 324.856,1060.95 325.415,1069.92 325.975,1112.71 326.534,1102.22 327.093,1076.32 327.652,1081.33 328.212,1056.17 328.771,1045.01 329.33,1020.26 329.889,1060.57 330.449,1050.13 331.008,1088.8 331.567,1087.97 332.126,1092.35 332.686,1065.81 333.245,1040.98 333.804,999.524 334.363,978.345 334.923,967.901 335.482,997.83 336.041,991.087 336.6,982.404 337.16,960.552 337.719,970.204 338.278,953.46 338.837,962.628 339.397,955.97 339.956,935.842 340.515,916.71 341.074,927.394 341.634,940.796 342.193,950.89 342.752,963.432 343.311,954.497 343.871,966.285 344.43,944.031 344.989,922.641 345.548,936.696 346.108,915.877 346.667,913.623 347.226,925.831 347.785,903.629 348.345,946.153 348.904,1006.58 349.463,1029.66 350.022,1019.5 350.582,1010.21 351.141,1002.13 351.7,957.921 352.259,937.148 352.819,917.715 353.378,931.509 353.937,910.284 354.496,889.301 355.056,885.368 355.615,898.312 356.174,896.655 356.733,890.41 357.293,883.157 357.852,881.17 358.411,893.516 358.97,905.161 359.53,867.485 360.089,885.252 360.648,882.794 361.207,894.73 361.767,908.382 362.326,907.187 362.885,867.316 363.444,863.074 364.004,875.928 364.563,873.001 365.122,887.659 365.681,867.18 366.241,850.392 366.8,866.247 367.359,850.518 367.918,864.406 368.478,891.177 369.037,885.992 369.596,867.657 370.155,880.598 370.715,876.203 371.274,873.068 371.833,885.108 372.392,897.403 372.952,876.111 373.511,857.705 374.07,890.936 374.629,854.992 375.189,820.057 375.748,853.993 376.307,835.891 376.866,850.981 377.426,882.357 377.985,877.973 378.544,860.07 379.103,841.289 379.663,824.49 380.222,841.9 380.781,856.549 381.34,852.869 381.9,899.656 382.459,860.044 383.018,871.886 383.577,855.342 384.137,852.555 384.696,832.239 385.255,814.303 385.814,813.781 386.374,797.341 386.933,799.16 387.492,788.02 388.051,820.601 388.611,849.341 389.17,831.816 389.729,813.261 390.288,827.476 390.848,809.515 391.407,809.01 391.966,792.405 392.525,778.29 393.085,782.782 393.644,784.779 394.203,770.326 394.762,788.477 395.322,820.864 395.881,817.488 396.44,816.185 396.999,863.547 397.559,860.274 398.118,826.51 398.677,855.797 399.236,817.958 399.796,881.46 400.355,856.726 400.914,820.831 401.473,871.55 402.033,815.007 402.592,847.571 403.151,823.275 403.71,838.019 404.27,851.332 404.829,817.008 405.388,835.348 405.947,801.424 406.507,766.949 407.066,749.828 407.625,770.11 408.184,821.81 408.744,837.265 409.303,833.254 409.862,861.255 410.421,839.688 410.981,915.508 411.54,889.64 412.099,884.42 412.658,848.143 413.218,841.441 413.777,839.051 414.336,786.991 414.895,805.302 415.455,790.96 416.014,805.757 416.573,807.267 417.132,792.119 417.692,793.997 418.251,793.853 418.81,794.264 419.369,805.985 419.929,808.758 420.488,788.445 421.047,805.711 421.606,819.019 422.166,849.346 422.725,830.992 423.284,825.61 423.843,825.118 424.403,841.107 424.962,839.22 425.521,838.845 426.08,834.601 426.64,799.647 427.199,765.859 427.758,730.395 428.318,750.225 428.877,734.193 429.436,686.057 429.995,727.964 430.555,711.161 431.114,746.853 431.673,766.437 432.232,754.692 432.792,722.931 433.351,709.575 433.91,728.31 434.469,716.947 435.029,719.37 435.588,754.519 436.147,788.095 436.706,806.811 437.266,818.862 437.825,817.665 438.384,817.446 438.943,851.404 439.503,862.546 440.062,811.247 440.621,792.258 441.18,790.351 441.74,794.914 442.299,776.685 442.858,760.367 443.417,810.009 443.977,809.678 444.536,807.836 445.095,806.743 445.654,816.709 446.214,796.893 446.773,814.836 447.332,779.665 447.891,761.756 448.451,763.782 449.01,747.257 449.569,763.534 450.128,811.069 450.688,792.528 451.247,775.545 451.806,787.897 452.365,784.948 452.925,831.483 453.484,825.729 454.043,838.581 454.602,832.779 455.162,842.541 455.721,855.542 456.28,836.215 456.839,849.899 457.399,827.972 457.958,809.328 458.517,835.388 459.076,817.439 459.636,812.497 460.195,828 460.754,821.241 461.313,850.506 461.873,826.158 462.432,834.038 462.991,826.147 463.55,842.295 464.11,901.545 464.669,923.083 465.228,910.548 465.787,869.625 466.347,811.386 466.906,841.388 467.465,868.945 468.024,815.355 468.584,808.91 469.143,821.115 469.702,813.917 470.261,791.89 470.821,818.834 471.38,765.707 471.939,746.332 472.498,778.851 473.058,773.931 473.617,755.7 474.176,765.844 474.735,746.036 475.295,761.524 475.854,725.16 476.413,727.229 476.972,729.02 477.532,762.979 478.091,745.723 478.65,763.254 479.209,777.137 479.769,757.376 480.328,757.254 480.887,754.273 481.446,766.442 482.006,765.597 482.565,732.176 483.124,730.274 483.683,762.024 484.243,779.024 484.802,809.155 485.361,818.522 485.92,799.027 486.48,762.802 487.039,761.25 487.598,714.659 488.157,716.654 488.717,668.583 489.276,640.671 489.835,627.075 490.394,629.317 490.954,601.495 491.513,608.039 492.072,634.682 492.631,656.617 493.191,646.133 493.75,635.4 494.309,669.824 494.868,670.792 495.428,689.687 495.987,692.707 496.546,693.021 497.105,693.723 497.665,694.538 498.224,680.712 498.783,685.262 499.342,686.464 499.902,670.782 500.461,658.282 501.02,674.339 501.579,663.133 502.139,697.445 502.698,700.438 503.257,655.156 503.816,660.608 504.376,710.826 504.935,743.617 505.494,727.086 506.053,746.508 506.613,764.746 507.172,763.322 507.731,779.813 508.29,779.338 508.85,793.5 509.409,772.613 509.968,773.343 510.527,741.98 511.087,757.82 511.646,820.408 512.205,814.06 512.764,824.026 513.324,853.48 513.883,868.152 514.442,863.822 515.001,890.189 515.561,880.078 516.12,873.918 516.679,849.254 517.238,843.971 517.798,886.239 518.357,892.703 518.916,899.79 519.475,880.718 520.035,890.386 520.594,898.274 521.153,877.106 521.712,853.76 522.272,828.719 522.831,820.584 523.39,848.376 523.949,840.133 524.509,863.697 525.068,807.088 525.627,786.103 526.186,731.365 526.746,747.879 527.305,746.908 527.864,743.261 528.423,775.472 528.983,805.842 529.542,833.482 530.101,828.67 530.66,790.599 531.22,768.34 531.779,765.767 532.338,729.888 532.897,712.306 533.457,711.463 534.016,664.506 534.575,589.827 535.134,583.086 535.694,639.713 536.253,646.28 536.812,663.504 537.371,652.361 537.931,626.02 538.49,615.469 539.049,621.304 539.608,628.626 540.168,629.925 540.727,652.192 541.286,660.947 541.845,680.226 542.405,685.25 542.964,655.524 543.523,677.966 544.082,697.546 544.642,682.478 545.201,687.766 545.76,658.726 546.319,630.017 546.879,600.654 547.438,593.44 547.997,616.08 548.556,604.353 549.116,624.369 549.675,615.521 550.234,620.037 550.793,592.863 551.353,601.214 551.912,622.913 552.471,628.898 553.031,676.226 553.59,693.128 554.149,744.425 554.708,757.117 555.268,756.362 555.827,740.196 556.386,738.128 556.945,741.78 557.505,755.515 558.064,754.84 558.623,769.629 559.182,768.34 559.742,831.514 560.301,793.752 560.86,791.143 561.419,753.823 561.979,721.446 562.538,705.339 563.097,707.163 563.656,691.465 564.216,710.104 564.775,708.687 565.334,690.569 565.893,725.027 566.453,725.346 567.012,694.636 567.571,696.526 568.13,712.808 568.69,745.762 569.249,728.696 569.808,759.039 570.367,736.762 570.927,705.838 571.486,687.512 572.045,719.521 572.604,721.501 573.164,734.507 573.723,734.293 574.282,730.968 574.841,730.142 575.401,724.447 575.96,737.106 576.519,734.21 577.078,749.392 577.638,766.739 578.197,781.669 578.756,762.714 579.315,775.008 579.875,770.927 580.434,721.26 580.993,735.314 581.552,746.221 582.112,756.704 582.671,754.747 583.23,737.36 583.789,754.687 584.349,784.67 584.908,784.507 585.467,780.245 586.026,793.571 586.586,803.355 587.145,781.678 587.704,760.94 588.263,770.335 588.823,802.057 589.382,746.803 589.941,759.073 590.5,738.551 591.06,768 591.619,767.701 592.178,794.751 592.737,788.821 593.297,783.357 593.856,747.633 594.415,744.062 594.974,756.023 595.534,752.537 596.093,767.421 596.652,730.38 597.211,696.542 597.771,731.65 598.33,760.041 598.889,758.905 599.448,755.215 600.008,752.273 600.567,749.925 601.126,717.67 601.685,733.119 602.245,715.904 602.804,699.247 603.363,697.302 603.922,677.355 604.482,661.566 605.041,683.696 605.6,717.408 606.159,715.959 606.719,697.436 607.278,713.766 607.837,730.803 608.396,730.405 608.956,718.059 609.515,701.851 610.074,685.875 610.633,686.226 611.193,721.215 611.752,751.828 612.311,734.762 612.87,752.665 613.43,740.362 613.989,742.011 614.548,724.853 615.107,707.502 615.667,708.624 616.226,708.737 616.785,726.082 617.344,725.198 617.904,723.231 618.463,687.406 619.022,700.949 619.581,684.315 620.141,683.768 620.7,682.78 621.259,666.479 621.818,687.217 622.378,706.432 622.937,722.692 623.496,740.214 624.055,767.629 624.615,780.438 625.174,757.308 625.733,785.863 626.292,799.33 626.852,793.974 627.411,772.679 627.97,820.538 628.529,797.098 629.089,790.058 629.648,788.474 630.207,767.844 630.766,763.229 631.326,761.969 631.885,787.632 632.444,736.141 633.003,700.355 633.563,682.702 634.122,699.165 634.681,680.691 635.24,648.095 635.8,668.804 636.359,654.214 636.918,642.824 637.477,661.864 638.037,663.057 638.596,664.72 639.155,664.62 639.714,682.84 640.274,714.394 640.833,714.81 641.392,697.305 641.951,696.112 642.511,665.291 643.07,636.235 643.629,654.795 644.188,660.241 644.748,679.686 645.307,648.598 645.866,652.482 646.425,701.826 646.985,701.822 647.544,684.318 648.103,664.091 648.662,648.615 649.222,665.575 649.781,667.895 650.34,620.831 650.899,574.199 651.459,545.774 652.018,555.322 652.577,529.35 653.136,555.37 653.696,549.786 654.255,522.583 654.814,533.147 655.373,544.38 655.933,535.954 656.492,542.358 657.051,597.221 657.61,586.913 658.17,611.855 658.729,631.891 659.288,638.709 659.847,657.734 660.407,643.887 660.966,630.705 661.525,634.518 662.084,669.14 662.644,670.012 663.203,656.137 663.762,673.809 664.321,641.209 664.881,646.569 665.44,683.341 665.999,670.717 666.558,673.736 667.118,737.518 667.677,720.46 668.236,717.443 668.795,734.833 669.355,703.526 669.914,737.068 670.473,768.383 671.032,782.426 671.592,806.809 672.151,753.01 672.71,751.801 673.269,685.923 673.829,654.09 674.388,676.587 674.947,681.545 675.506,648.435 676.066,656.037 676.625,638.501 677.184,658.515 677.743,648.281 678.303,635.184 678.862,655.076 679.421,624.913 679.981,612.293 680.54,617.74 681.099,606.556 681.658,626.04 682.218,662.791 682.777,650.072 683.336,634.732 683.895,617.815 684.455,618.417 685.014,639.735 685.573,642.467 686.132,646.506 686.692,665.286 687.251,681.569 687.81,686.384 688.369,684.689 688.929,735.479 689.488,747.329 690.047,742.083 690.606,771.05 691.166,768.983 691.725,782.667 692.284,763.793 692.843,776.647 693.403,787.283 693.962,753.635 694.521,734.58 695.08,717.07 695.64,718.202 696.199,719.18 696.758,687.541 697.317,689.86 697.877,702.925 698.436,701.392 698.995,747.582 699.554,728.859 700.114,774.318 700.673,786.156 701.232,767.323 701.791,780.09 702.351,722.455 702.91,733.225 703.469,731.4 704.028,746.39 704.588,744.665 705.147,740.628 705.706,738.376 706.265,719.749 706.825,751.405 707.384,729.548 707.943,695.405 708.502,756.799 709.062,722.634 709.621,704.944 710.18,704.92 710.739,735.895 711.299,702.019 711.858,702.14 712.417,737.303 712.976,736.11 713.536,715.867 714.095,712.071 714.654,728.2 715.213,726.854 715.773,692.744 716.332,707.121 716.891,691.459 717.45,691.796 718.01,707.696 718.569,689.52 719.128,669.443 719.687,653.208 720.247,657.286 720.806,661.271 721.365,663.283 721.924,650.375 722.484,651.666 723.043,669.197 723.602,703.036 724.161,733.436 724.721,731.152 725.28,728.839 725.839,725.983 726.398,740.305 726.958,737.669 727.517,731.233 728.076,762.102 728.635,741.886 729.195,704.719 729.754,703.177 730.313,704.068 730.872,702.396 731.432,704.765 731.991,702.5 732.55,701.802 733.109,700.872 733.669,669.117 734.228,652.535 734.787,687.79 735.346,720.325 735.906,734.994 736.465,719.69 737.024,698.77 737.583,683.882 738.143,685.518 738.702,640.198 739.261,642.146 739.82,663.257 740.38,683.05 740.939,638.796 741.498,657.181 742.057,640.757 742.617,657.892 743.176,674.664 743.735,659.792 744.294,662.068 744.854,682.839 745.413,681.218 745.972,665.7 746.531,684.556 747.091,668.815 747.65,671.504 748.209,656.031 748.768,676.454 749.328,676.633 749.887,678.18 750.446,677.717 751.005,675.245 751.565,661.481 752.124,648.513 752.683,671.989 753.242,691.355 753.802,689.849 754.361,672.337 754.92,657.868 755.479,660.285 756.039,693.94 756.598,677.48 757.157,662.751 757.716,676.29 758.276,691.709 758.835,690.196 759.394,687.84 759.953,689.527 760.513,722.228 761.072,703.644 761.631,703.265 762.19,703.976 762.75,687.067 763.309,705.658 763.868,737.676 764.427,708.123 764.987,722.618 765.546,737.342 766.105,733.451 766.664,732.808 767.224,778.543 767.783,788.98 768.342,771.018 768.901,750.562 769.461,748.702 770.02,775.158 770.579,800.708 771.138,808.959 771.698,830.997 772.257,842.03 772.816,786.034 773.375,809.513 773.935,789.367 774.494,801.751 775.053,794.564 775.612,786.88 776.172,778.521 776.731,757.864 777.29,752.987 777.849,698.699 778.409,713.297 778.968,710.49 779.527,722.869 780.086,720.431 780.646,722.108 781.205,709.017 781.764,740.618 782.323,740.422 782.883,766.806 783.442,760.131 784.001,820.874 784.56,782.476 785.12,760.585 785.679,741.387 786.238,719.789 786.797,733.795 787.357,730.57 787.916,743.785 788.475,707.552 789.034,705.475 789.594,672.592 790.153,674.406 790.712,678.103 791.271,684.747 791.831,683.661 792.39,621.854 792.949,630.452 793.508,634.298 794.068,658.865 794.627,661.64 795.186,661.753 795.745,649.029 796.305,634.733 796.864,641.783 797.423,677.061 797.982,664.71 798.542,649.152 799.101,684.071 799.66,653.354 800.219,638.974 800.779,659.049 801.338,662.308 801.897,630.629 802.456,588.305 803.016,610.419 803.575,613.35 804.134,616.686 804.693,652.42 805.253,637.59 805.812,690.38 806.371,724.418 806.931,736.44 807.49,717.529 808.049,701.919 808.608,720.462 809.168,735.777 809.727,732.647 810.286,762.299 810.845,740.708 811.405,751.888 811.964,732.339 812.523,729.385 813.082,743.675 813.642,708.48 814.201,677.977 814.76,660.14 815.319,641.187 815.879,626.444 816.438,599.006 816.997,619.995 817.556,623.072 818.116,625.253 818.675,615.784 819.234,636.487 819.793,659.059 820.353,627.365 820.912,628.839 821.471,633.169 822.03,650.812 822.59,667.654 823.149,701.209 823.708,733.6 824.267,684.873 824.827,685.921 825.386,688.784 825.945,688.948 826.504,690.19 827.064,722.146 827.623,747.655 828.182,759.986 828.741,756.415 829.301,803.11 829.86,807.86 830.419,802.23 830.978,797.978 831.538,841.785 832.097,833.154 832.656,808.6 833.215,800.176 833.775,794.344 834.334,772.324 834.893,782.969 835.452,760.718 836.012,790.729 836.571,755.275 837.13,737.44 837.689,737.386 838.249,717.237 838.808,701.636 839.367,665.924 839.926,666.315 840.486,668.528 841.045,637.032 841.604,609.811 842.163,599.861 842.723,621.383 843.282,627.382 843.841,626.993 844.4,657.334 844.96,612.105 845.519,599.663 846.078,606.508 846.637,640.103 847.197,626.111 847.756,644.92 848.315,665.731 848.874,655.821 849.434,644.91 849.993,665.343 850.552,687.487 851.111,659.267 851.671,660.191 852.23,662.541 852.789,665.656 853.348,685.012 853.908,701.214 854.467,713.919 855.026,682.75 855.585,652.595 856.145,704.076 856.704,684.102 857.263,684.917 857.822,667.658 858.382,669.406 858.941,750.822 859.5,697.418 860.059,714.819 860.619,727.193 861.178,744.056 861.737,709.662 862.296,710.188 862.856,675.029 863.415,661.271 863.974,645.965 864.533,644.54 865.093,645.902 865.652,630.018 866.211,649.973 866.77,651.49 867.33,653.012 867.889,620.459 868.448,609.453 869.007,664.991 869.567,681.16 870.126,682.355 870.685,697.635 871.244,697.476 871.804,696.076 872.363,665.298 872.922,667.93 873.481,666.665 874.041,636.182 874.6,606.351 875.159,609.953 875.718,616.059 876.278,619.097 876.837,591.747 877.396,645.754 877.955,644.88 878.515,723.166 879.074,688.847 879.633,670.326 880.192,670.158 880.752,685.522 881.311,668.801 881.87,682.487 882.429,679.521 882.989,697.369 883.548,678.655 884.107,709.229 884.666,703.207 885.226,687.402 885.785,669.08 886.344,686.375 886.903,685.823 887.463,669.96 888.022,686.175 888.581,698.181 889.14,667.503 889.7,652.117 890.259,623.347 890.818,631.237 891.377,633.988 891.937,685.927 892.496,684.217 893.055,666.033 893.614,682.81 894.174,717.186 894.733,725.746 895.292,721.534 895.851,717.775 896.411,716.045 896.97,698.716 897.529,700.855 898.088,700.424 898.648,717.072 899.207,717.781 899.766,719.498 900.325,686.891 900.885,671.037 901.444,657.071 902.003,674.574 902.562,674.636 903.122,756.943 903.681,771.074 904.24,780.867 904.799,725.745 905.359,720.67 905.918,717.682 906.477,732.496 907.036,749.841 907.596,746.905 908.155,743.131 908.714,710.68 909.273,739.274 909.833,735.114 910.392,716.616 910.951,732.893 911.51,734.96 912.07,715.749 912.629,716.113 913.188,700.743 913.747,684.274 914.307,651.114 914.866,650.873 915.425,636.3 915.984,655.283 916.544,660.226 917.103,642.345 917.662,676.567 918.221,663.679 918.781,675.582 919.34,675.863 919.899,676.426 920.458,672.823 921.018,706.713 921.577,723.097 922.136,736.219 922.695,733.182 923.255,716.603 923.814,697.992 924.373,681.978 924.932,702.137 925.492,702.011 926.051,752.073 926.61,734.46 927.169,745.533 927.729,756.506 928.288,736.618 928.847,719.655 929.406,702.966 929.966,702.713 930.525,683.025 931.084,701.513 931.644,703.235 932.203,673.784 932.762,690.658 933.321,674.971 933.881,675.686 934.44,678.003 934.999,680.834 935.558,678.655 936.118,678.907 936.677,695.641 937.236,694.019 937.795,712.144 938.355,712.107 938.914,711.345 939.473,710.769 940.032,711.727 940.592,727.98 941.151,723.989 941.71,706.309 942.269,688.821 942.829,689.069 943.388,705.843 943.947,659.847 944.506,614.366 945.066,619.484 945.625,607.467 946.184,659.862 946.743,676.226 947.303,697.054 947.862,663.542 948.421,617.548 948.98,626.106 949.54,625.155 950.099,613.125 950.658,617.656 951.217,639.592 951.777,625.454 952.336,613.203 952.895,619.875 953.454,588.672 954.014,595.045 954.573,620.673 955.132,591.825 955.691,547.874 956.251,574.248 956.81,579.381 957.369,619.112 957.928,606.364 958.488,643.911 959.047,650.354 959.606,654.183 960.165,657.556 960.725,645.414 961.284,646.741 961.843,649.592 962.402,652.74 962.962,701.673 963.521,684.553 964.08,735.441 964.639,734.693 965.199,728.995 965.758,711.319 966.317,714.156 966.876,696.198 967.436,682.248 967.995,651.936 968.554,634.742 969.113,659.144 969.673,647.056 970.232,631.982 970.791,666.701 971.35,678.947 971.91,695.164 972.469,692.088 973.028,675.007 973.587,674.059 974.147,675.334 974.706,671.765 975.265,674.333 975.824,659.555 976.384,678.817 976.943,678.482 977.502,712.746 978.061,711.778 978.621,711.615 979.18,742.71 979.739,738.893 980.298,720.157 980.858,748.611 981.417,744.265 981.976,740.755 982.535,737.186 983.095,732.478 983.654,761.614 984.213,758.089 984.772,756.77 985.332,735.659 985.891,751.4 986.45,728.301 987.009,744.408 987.569,738.604 988.128,697.321 988.687,726.471 989.246,724.538 989.806,769.184 990.365,750.216 990.924,762.302 991.483,693.657 992.043,723.867 992.602,707.882 993.161,705.005 993.72,700.045 994.28,715.414 994.839,729.376 995.398,725.062 995.957,704.441 996.517,703.384 997.076,720.014 997.635,684.302 998.194,681.735 998.754,666.122 999.313,634.492 999.872,638.122 1000.43,606.575 1000.99,612.265 1001.55,631.874 1002.11,648.574 1002.67,664.612 1003.23,646.105 1003.79,665.571 1004.35,664.439 1004.91,663.968 1005.46,682.416 1006.02,648.895 1006.58,667.453 1007.14,637.412 1007.7,641.3 1008.26,644.374 1008.82,643.954 1009.38,611.972 1009.94,616.211 1010.5,619.635 1011.06,652.749 1011.62,670.74 1012.18,638.306 1012.73,671.363 1013.29,655.235 1013.85,657.613 1014.41,662.458 1014.97,648.539 1015.53,654.91 1016.09,642.495 1016.65,645.181 1017.21,679.824 1017.77,681.294 1018.33,665.257 1018.89,698.47 1019.45,698.344 1020.01,665.534 1020.56,663.853 1021.12,646.357 1021.68,681.238 1022.24,663.311 1022.8,714.462 1023.36,698.299 1023.92,685.091 1024.48,655.243 1025.04,656.223 1025.6,673.392 1026.16,719.371 1026.72,687.281 1027.28,654.745 1027.83,638.381 1028.39,655.892 1028.95,658.599 1029.51,658.818 1030.07,681.597 1030.63,683.128 1031.19,700.542 1031.75,667.103 1032.31,663.886 1032.87,665.349 1033.43,717.687 1033.99,732.472 1034.55,745.381 1035.1,726.822 1035.66,758.833 1036.22,755.047 1036.78,715.939 1037.34,680.548 1037.9,682.188 1038.46,632.079 1039.02,632.318 1039.58,652.339 1040.14,653.577 1040.7,674.47 1041.26,674.75 1041.82,687.679 1042.38,691.015 1042.93,694.57 1043.49,681.151 1044.05,679.402 1044.61,695.716 1045.17,696.714 1045.73,697.853 1046.29,730.134 1046.85,728.019 1047.41,742.103 1047.97,725.964 1048.53,692.79 1049.09,645.188 1049.65,614.14 1050.2,682.617 1050.76,712.326 1051.32,710.476 1051.88,708.547 1052.44,706.253 1053,722.809 1053.56,723.054 1054.12,706.336 1054.68,721.104 1055.24,732.528 1055.8,724.885 1056.36,725.036 1056.92,705.288 1057.48,699.043 1058.03,718.101 1058.59,717.477 1059.15,669.997 1059.71,654.992 1060.27,691.282 1060.83,672.111 1061.39,702.693 1061.95,699.189 1062.51,682.239 1063.07,695.414 1063.63,728.309 1064.19,725.773 1064.75,692.769 1065.3,726.207 1065.86,721.897 1066.42,717.938 1066.98,700.205 1067.54,732.596 1068.1,730.155 1068.66,729.736 1069.22,711.427 1069.78,711.039 1070.34,708.072 1070.9,705.195 1071.46,705.186 1072.02,687.809 1072.57,689.719 1073.13,722.245 1073.69,725.385 1074.25,693.121 1074.81,704.736 1075.37,704.833 1075.93,753.57 1076.49,732.992 1077.05,715.368 1077.61,743.044 1078.17,741.032 1078.73,707.068 1079.29,704.406 1079.85,703.957 1080.4,717.286 1080.96,664.89 1081.52,682.945 1082.08,718.254 1082.64,734.441 1083.2,732.97 1083.76,730.084 1084.32,744.115 1084.88,721.463 1085.44,736.439 1086,748.682 1086.56,743.453 1087.12,727.071 1087.67,706.272 1088.23,703.044 1088.79,704.078 1089.35,684.974 1089.91,684.554 1090.47,681.265 1091.03,665.307 1091.59,669.135 1092.15,654.2 1092.71,658.152 1093.27,660.6 1093.83,676.127 1094.39,627.781 1094.94,628.605 1095.5,646.624 1096.06,650.445 1096.62,618.685 1097.18,586.836 1097.74,576.344 1098.3,547.4 1098.86,537.024 1099.42,525.931 1099.98,548.645 1100.54,538.581 1101.1,595.763 1101.66,619.272 1102.22,623.53 1102.77,611.375 1103.33,601.179 1103.89,607.372 1104.45,628.984 1105.01,615.881 1105.57,636.607 1106.13,687.621 1106.69,698.32 1107.25,745.725 1107.81,759.908 1108.37,771.319 1108.93,750.359 1109.49,714.762 1110.04,727.359 1110.6,707.994 1111.16,706.816 1111.72,706.936 1112.28,770.176 1112.84,781.224 1113.4,792.745 1113.96,803.74 1114.52,795.618 1115.08,790.555 1115.64,817.212 1116.2,808.862 1116.76,802.579 1117.31,761.727 1117.87,741.281 1118.43,750.641 1118.99,745.421 1119.55,741.856 1120.11,739.903 1120.67,717.905 1121.23,699.65 1121.79,702.469 1122.35,686.608 1122.91,704.07 1123.47,705.503 1124.03,738.504 1124.59,719.202 1125.14,731.741 1125.7,731.361 1126.26,666.142 1126.82,666.583 1127.38,649.412 1127.94,667.5 1128.5,686.869 1129.06,701.075 1129.62,686.692 1130.18,702.157 1130.74,735.734 1131.3,703.8 1131.86,754.071 1132.41,748.607 1132.97,749.615 1133.53,748.379 1134.09,744.779 1134.65,775.242 1135.21,787.007 1135.77,764.168 1136.33,758.793 1136.89,752.69 1137.45,731.816 1138.01,720.22 1138.57,737.548 1139.13,719.717 1139.68,670.683 1140.24,671.649 1140.8,636.479 1141.36,639.196 1141.92,603.715 1142.48,573.382 1143.04,598.675 1143.6,600.432 1144.16,601.326 1144.72,607.55 1145.28,611.071 1145.84,662.552 1146.4,647.713 1146.96,616.186 1147.51,651.519 1148.07,638.523 1148.63,640.53 1149.19,644.172 1149.75,646.177 1150.31,646.5 1150.87,693.555 1151.43,662.569 1151.99,713.583 1152.55,715.574 1153.11,709.073 1153.67,688.96 1154.23,705.764 1154.78,721.823 1155.34,716.278 1155.9,713.511 1156.46,692.287 1157.02,706.14 1157.58,689.257 1158.14,690.971 1158.7,674.427 1159.26,675.528 1159.82,694.767 1160.38,695.83 1160.94,682.885 1161.5,697.814 1162.05,712.527 1162.61,741.793 1163.17,735.397 1163.73,716.002 1164.29,699.013 1164.85,715.709 1165.41,697.137 1165.97,712.54 1166.53,728.648 1167.09,712.36 1167.65,679.225 1168.21,663.9 1168.77,683.234 1169.33,684.327 1169.88,666.524 1170.44,637.032 1171,638.521 1171.56,653.373 1172.12,656.532 1172.68,676.574 1173.24,664.46 1173.8,666.779 1174.36,635.985 1174.92,669.873 1175.48,635.736 1176.04,655.112 1176.6,673.345 1177.15,675.095 1177.71,687.736 1178.27,685.778 1178.83,697.776 1179.39,646.582 1179.95,651.498 1180.51,632.932 1181.07,668.971 1181.63,637.324 1182.19,639.376 1182.75,627.119 1183.31,632.38 1183.87,618.481 1184.43,605.765 1184.98,608.704 1185.54,615.059 1186.1,632.872 1186.66,651.411 1187.22,621.574 1187.78,626.131 1188.34,596.404 1188.9,600.822 1189.46,622.577 1190.02,609.281 1190.58,631.863 1191.14,621.535 1191.7,609.851 1192.25,631.54 1192.81,634.361 1193.37,587.377 1193.93,623.276 1194.49,658.663 1195.05,660.572 1195.61,628.964 1196.17,667.684 1196.73,670.726 1197.29,688.957 1197.85,692.141 1198.41,689.46 1198.97,671.069 1199.52,685.291 1200.08,682.61 1200.64,664.253 1201.2,670.272 1201.76,654.909 1202.32,656.59 1202.88,669.406 1203.44,688.236 1204,668.328 1204.56,717.19 1205.12,682.616 1205.68,681.946 1206.24,713.914 1206.8,696.983 1207.35,726.262 1207.91,744.003 1208.47,729.928 1209.03,743.884 1209.59,740.021 1210.15,719.823 1210.71,701.478 1211.27,733.939 1211.83,685.601 1212.39,700.416 1212.95,698.884 1213.51,716.066 1214.07,744.202 1214.62,693.165 1215.18,675.4 1215.74,706.377 1216.3,655.541 1216.86,657.289 1217.42,676.625 1217.98,690.945 1218.54,660.852 1219.1,644.414 1219.66,645.174 1220.22,632.741 1220.78,652.551 1221.34,652.969 1221.89,637.539 1222.45,641.596 1223.01,644.237 1223.57,646.847 1224.13,649.175 1224.69,622.757 1225.25,628.102 1225.81,599.03 1226.37,586.731 1226.93,576.781 1227.49,582.855 1228.05,585.27 1228.61,588.43 1229.17,577.102 1229.72,598.624 1230.28,606.509 1230.84,593.671 1231.4,600.345 1231.96,588.847 1232.52,594.343 1233.08,634.804 1233.64,604.705 1234.2,593.892 1234.76,584.504 1235.32,590.621 1235.88,596.61 1236.44,634.894 1236.99,639.568 1237.55,624.343 1238.11,662.948 1238.67,678.017 1239.23,644.015 1239.79,661.556 1240.35,664.939 1240.91,699.495 1241.47,666.695 1242.03,665.473 1242.59,632.615 1243.15,654.169 1243.71,638.948 1244.26,639.235 1244.82,687.154 1245.38,687.277 1245.94,670.339 1246.5,655.642 1247.06,642.718 1247.62,661.325 1248.18,630.977 1248.74,649.83 1249.3,657.681 1249.86,677.08 1250.42,679.31 1250.98,677.36 1251.54,692.524 1252.09,724.698 1252.65,707.815 1253.21,705.14 1253.77,700.81 1254.33,714.9 1254.89,730.849 1255.45,727.426 1256.01,726.265 1256.57,723.572 1257.13,736.34 1257.69,732.116 1258.25,759.755 1258.81,772.679 1259.36,754.205 1259.92,751.463 1260.48,746.804 1261.04,725.696 1261.6,722.275 1262.16,754.449 1262.72,718.332 1263.28,700.031 1263.84,701.743 1264.4,700.431 1264.96,701.512 1265.52,764.89 1266.08,745.805 1266.63,759.818 1267.19,771.568 1267.75,782.156 1268.31,803.444 1268.87,798.384 1269.43,793.766 1269.99,756.737 1270.55,753.889 1271.11,749.052 1271.67,778.588 1272.23,774.113 1272.79,723.59 1273.35,709.091 1273.91,722.73 1274.46,754.098 1275.02,764.529 1275.58,790.599 1276.14,783 1276.7,759.117 1277.26,752.915 1277.82,750.193 1278.38,727.987 1278.94,727.629 1279.5,741.308 1280.06,708.326 1280.62,689.694 1281.18,672.5 1281.73,670.714 1282.29,687.756 1282.85,688.883 1283.41,704.661 1283.97,667.532 1284.53,683.991 1285.09,701.984 1285.65,716.206 1286.21,745.851 1286.77,728.856 1287.33,724.326 1287.89,722.332 1288.45,701.002 1289,695.485 1289.56,730.885 1290.12,709.427 1290.68,724.754 1291.24,739.702 1291.8,717.925 1292.36,731.835 1292.92,760.115 1293.48,757.117 1294.04,749.837 1294.6,746.269 1295.16,791.928 1295.72,755.112 1296.28,748.874 1296.83,761.629 1297.39,745.119 1297.95,695.963 1298.51,712.701 1299.07,744.379 1299.63,742.821 1300.19,756.137 1300.75,748.553 1301.31,775.105 1301.87,786.193 1302.43,799.129 1302.99,790.979 1303.55,801.885 1304.1,827.107 1304.66,836.276 1305.22,799.812 1305.78,779.981 1306.34,788.605 1306.9,767.436 1307.46,730.353 1308.02,729.885 1308.58,726.662 1309.14,706.93 1309.7,702.956 1310.26,702.306 1310.82,702.996 1311.38,687.205 1311.93,706.468 1312.49,707.199 1313.05,705.216 1313.61,687.396 1314.17,686.862 1314.73,689.185 1315.29,720.464 1315.85,716.382 1316.41,732.068 1316.97,746.451 1317.53,758.903 1318.09,770.284 1318.65,733.456 1319.2,760.288 1319.76,785.212 1320.32,732.024 1320.88,728.66 1321.44,757.388 1322,770.564 1322.56,731.298 1323.12,709.268 1323.68,674.23 1324.24,671.17 1324.8,668.958 1325.36,668.053 1325.92,684.321 1326.47,684.368 1327.03,702.847 1327.59,703.199 1328.15,716.116 1328.71,665.139 1329.27,647.821 1329.83,664.692 1330.39,662.53 1330.95,666.792 1331.51,665.931 1332.07,697.726 1332.63,697.36 1333.19,711.647 1333.75,743.351 1334.3,722.495 1334.86,704.578 1335.42,703.341 1335.98,653.138 1336.54,657.352 1337.1,629.26 1337.66,646.369 1338.22,630.179 1338.78,665.958 1339.34,649.419 1339.9,620.274 1340.46,641.753 1341.02,575.408 1341.57,608.737 1342.13,612.422 1342.69,632.697 1343.25,616.035 1343.81,621.364 1344.37,626.011 1344.93,628.199 1345.49,596.288 1346.05,617.589 1346.61,634.135 1347.17,650.517 1347.73,654.789 1348.29,624.332 1348.84,630.163 1349.4,605.481 1349.96,593.906 1350.52,599.195 1351.08,604.003 1351.64,606.122 1352.2,596.272 1352.76,617.141 1353.32,638.311 1353.88,642.238 1354.44,629.195 1355,634.926 1355.56,635.928 1356.12,638.462 1356.67,658.583 1357.23,659.612 1357.79,646.329 1358.35,685.27 1358.91,683.667 1359.47,682.983 1360.03,696.962 1360.59,714.257 1361.15,726.509 1361.71,706.797 1362.27,658.675 1362.83,627.951 1363.39,614.389 1363.94,634.521 1364.5,639.734 1365.06,640.254 1365.62,626.042 1366.18,632.002 1366.74,619.407 1367.3,637.581 1367.86,621.324 1368.42,641.837 1368.98,659.96 1369.54,676.937 1370.1,675.208 1370.66,660.256 1371.21,648.274 1371.77,651.139 1372.33,619.203 1372.89,621.821 1373.45,594.298 1374.01,631.548 1374.57,623.862 1375.13,644.622 1375.69,694.085 1376.25,704.851 1376.81,723.819 1377.37,754.074 1377.93,784.186 1378.49,765.817 1379.04,780.225 1379.6,747.459 1380.16,742.89 1380.72,693.861 1381.28,694.226 1381.84,708.497 1382.4,706.346 1382.96,719.948 1383.52,748.05 1384.08,727.95 1384.64,724.418 1385.2,705.137 1385.76,703.754 1386.31,704.085 1386.87,703.318 1387.43,706.618 1387.99,722.227 1388.55,739.565 1389.11,753.062 1389.67,733.143 1390.23,748.294 1390.79,748.512 1391.35,744.408 1391.91,744.037 1392.47,727.194 1393.03,737.72 1393.58,669.1 1394.14,702.654 1394.7,654.451 1395.26,607.44 1395.82,612.792 1396.38,602.177 1396.94,624.015 1397.5,612.546 1398.06,584.885 1398.62,590.865 1399.18,595.615 1399.74,646.895 1400.3,664.407 1400.86,616.368 1401.41,601.149 1401.97,591.493 1402.53,596.82 1403.09,601.014 1403.65,606.278 1404.21,630.881 1404.77,632.208 1405.33,618.474 1405.89,671.296 1406.45,670.221 1407.01,669.133 1407.57,641.73 1408.13,660.705 1408.68,678.758 1409.24,694.469 1409.8,657.67 1410.36,659.86 1410.92,646.333 1411.48,680.088 1412.04,679.599 1412.6,661.105 1413.16,662.451 1413.72,714.979 1414.28,713.225 1414.84,695.641 1415.4,696.695 1415.95,679.968 1416.51,680.197 1417.07,645.362 1417.63,631.071 1418.19,617.46 1418.75,606.594 1419.31,611.687 1419.87,601.46 1420.43,621.277 1420.99,640.994 1421.55,627.753 1422.11,630.415 1422.67,617.234 1423.23,638.921 1423.78,655.9 1424.34,624.07 1424.9,642.885 1425.46,711.459 1426.02,709.874 1426.58,743.661 1427.14,721.451 1427.7,723.012 1428.26,704.732 1428.82,737.244 1429.38,735.153 1429.94,715.806 1430.5,730.05 1431.05,712.703 1431.61,712.514 1432.17,729.94 1432.73,741.955 1433.29,724.894 1433.85,722.128 1434.41,721.235 1434.97,723.367 1435.53,707.043 1436.09,738.519 1436.65,717.274 1437.21,719.352 1437.77,700.52 1438.33,700.736 1438.88,701.845 1439.44,684.158 1440,669.36 1440.56,704.937 1441.12,688.264 1441.68,672.617 1442.24,672.093 1442.8,690.323 1443.36,688.994 1443.92,669.101 1444.48,669.697 1445.04,671.021 1445.6,668.817 1446.15,704.37 1446.71,686.883 1447.27,700.941 1447.83,717.796 1448.39,712.259 1448.95,727.895 1449.51,678.177 1450.07,676.144 1450.63,676.84 1451.19,664.368 1451.75,668.335 1452.31,699.992 1452.87,715.278 1453.42,714.332 1453.98,729.654 1454.54,743.99 1455.1,736.066 1455.66,734.553 1456.22,714.782 1456.78,682.975 1457.34,663.712 1457.9,696.928 1458.46,679.019 1459.02,679.203 1459.58,678.33 1460.14,676.134 1460.7,674.896 1461.25,642.996 1461.81,645.995 1462.37,629.122 1462.93,682.958 1463.49,653.17 1464.05,655.652 1464.61,641.64 1465.17,678.046 1465.73,665.049 1466.29,681.638 1466.85,708.6 1467.41,705.427 1467.97,700.783 1468.52,681.258 1469.08,648.552 1469.64,699.981 1470.2,733.287 1470.76,714.058 1471.32,722.658 1471.88,704.923 1472.44,716.603 1473,700.41 1473.56,750.473 1474.12,760.852 1474.68,789.784 1475.24,803.879 1475.79,765.461 1476.35,732.614 1476.91,716.075 1477.47,698.075 1478.03,696.87 1478.59,663.324 1479.15,693.372 1479.71,691.46 1480.27,709.707 1480.83,693.312 1481.39,644.997 1481.95,628.677 1482.51,612.994 1483.07,633.914 1483.62,639.039 1484.18,641.177 1484.74,678.728 1485.3,691.04 1485.86,693.828 1486.42,688.727 1486.98,688.104 1487.54,669.666 1488.1,686.122 1488.66,654.072 1489.22,671.729 1489.78,657.687 1490.34,688.329 1490.89,673.696 1491.45,706.993 1492.01,690.461 1492.57,691.241 1493.13,640.455 1493.69,674.332 1494.25,654.618 1494.81,674.213 1495.37,673.35 1495.93,674.143 1496.49,677.722 1497.05,681.516 1497.61,697.795 1498.16,666.268 1498.72,670.121 1499.28,701.867 1499.84,702.482 1500.4,671.911 1500.96,706.625 1501.52,704.588 1502.08,718.978 1502.64,752.524 1503.2,736.485 1503.76,754.228 1504.32,701.793 1504.88,719.353 1505.44,731.74 1505.99,725.012 1506.55,721.945 1507.11,706.5 1507.67,690.247 1508.23,673.552 1508.79,672.36 1509.35,708.597 1509.91,689.955 1510.47,657.041 1511.03,642.091 1511.59,662.069 1512.15,648.334 1512.71,645.015 1513.26,665.561 1513.82,663.666 1514.38,700.739 1514.94,698.724 1515.5,685.008 1516.06,697.194 1516.62,712.928 1517.18,694.718 1517.74,711.361 1518.3,695.233 1518.86,678.427 1519.42,692.987 1519.98,692.981 1520.53,656.159 1521.09,644.502 1521.65,663.433 1522.21,695.423 1522.77,692.036 1523.33,688.921 1523.89,675.115 1524.45,659.818 1525.01,662.316 1525.57,661.618 1526.13,631.504 1526.69,633.806 1527.25,637.967 1527.81,654.657 1528.36,686.548 1528.92,669.113 1529.48,667.892 1530.04,701.056 1530.6,670.698 1531.16,703.851 1531.72,702.157 1532.28,700.893 1532.84,665.81 1533.4,652.489 1533.96,655.185 1534.52,639.688 1535.08,595.731 1535.63,616.282 1536.19,604.206 1536.75,624.934 1537.31,625.596 1537.87,645.164 1538.43,647.388 1538.99,634.244 1539.55,654.279 1540.11,656.68 1540.67,672.472 1541.23,687.839 1541.79,703.768 1542.35,717.36 1542.9,715.087 1543.46,715.129 1544.02,746.43 1544.58,743.63 1545.14,737.064 1545.7,733.39 1546.26,699.005 1546.82,731.27 1547.38,697.239 1547.94,712.291 1548.5,745.664 1549.06,741.826 1549.62,723.841 1550.18,704.357 1550.73,718.671 1551.29,702.973 1551.85,685.307 1552.41,686.713 1552.97,718.205 1553.53,732.587 1554.09,760.268 1554.65,772.548 1555.21,765.422 1555.77,789.063 1556.33,815.436 1556.89,793.616 1557.45,788.023 1558,764.28 1558.56,728.744 1559.12,726.478 1559.68,658.968 1560.24,642.186 1560.8,642.144 1561.36,639.887 1561.92,643.647 1562.48,675.358 1563.04,658.089 1563.6,642.165 1564.16,629.968 1564.72,599.128 1565.28,571.121 1565.83,576.438 1566.39,584.627 1566.95,588.623 1567.51,579.206 1568.07,583.16 1568.63,588.001 1569.19,635.999 1569.75,669.627 1570.31,685.082 1570.87,673.225 1571.43,704.903 1571.99,751.554 1572.55,730.073 1573.1,712.164 1573.66,710.081 1574.22,693.198 1574.78,693.73 1575.34,692.016 1575.9,708.74 1576.46,707.141 1577.02,706.506 1577.58,690.929 1578.14,689.631 1578.7,723.229 1579.26,686.244 1579.82,699.854 1580.37,698.961 1580.93,716.118 1581.49,763.016 1582.05,741.157 1582.61,725.746 1583.17,721.186 1583.73,703.194 1584.29,704.423 1584.85,718.323 1585.41,730.984 1585.97,710.096 1586.53,709.753 1587.09,707.99 1587.65,722.183 1588.2,732.676 1588.76,679.527 1589.32,679.6 1589.88,680.27 1590.44,661.877 1591,647.194 1591.56,665.345 1592.12,696.49 1592.68,663.956 1593.24,711.937 1593.8,697.783 1594.36,681.073 1594.92,710.742 1595.47,709.831 1596.03,693.32 1596.59,742.369 1597.15,710.528 1597.71,671.969 1598.27,676.038 1598.83,675.696 1599.39,723.704 1599.95,720.328 1600.51,701.354 1601.07,699.937 1601.63,669.101 1602.19,702.783 1602.74,713.763 1603.3,698.18 1603.86,679.089 1604.42,692.749 1604.98,689.157 1605.54,656.177 1606.1,626.022 1606.66,614.201 1607.22,602.925 1607.78,607.048 1608.34,627.325 1608.9,647.981 1609.46,683.834 1610.02,650.663 1610.57,651.543 1611.13,666.37 1611.69,666.689 1612.25,697.705 1612.81,697.077 1613.37,663.645 1613.93,650.585 1614.49,636.272 1615.05,654.172 1615.61,652.246 1616.17,669.23 1616.73,651.922 1617.29,682.806 1617.84,700.793 1618.4,654.856 1618.96,676.513 1619.52,664.343 1620.08,702.752 1620.64,683.506 1621.2,649.148 1621.76,715.34 1622.32,717.126 1622.88,698.223 1623.44,678.805 1624,644.847 1624.56,646.975 1625.11,634.837 1625.67,655.098 1626.23,640.822 1626.79,627.732 1627.35,600.017 1627.91,589.476 1628.47,595.406 1629.03,585.266 1629.59,592.162 1630.15,611.867 1630.71,615.66 1631.27,602.585 1631.83,625.474 1632.39,626.308 1632.94,629.102 1633.5,645.034 1634.06,681.399 1634.62,700.097 1635.18,699.421 1635.74,718.774 1636.3,717.729 1636.86,684.473 1637.42,670.113 1637.98,687.688 1638.54,700.818 1639.1,698.572 1639.66,713.467 1640.21,710.771 1640.77,643.702 1641.33,662.364 1641.89,612.951 1642.45,618.005 1643.01,608.99 1643.57,644.625 1644.13,631.663 1644.69,634.371 1645.25,641.402 1645.81,628.02 1646.37,647.062 1646.93,695.248 1647.48,662.593 1648.04,665.29 1648.6,649.505 1649.16,633.588 1649.72,652.016 1650.28,652.407 1650.84,656.74 1651.4,659.247 1651.96,664.081 1652.52,665.682 1653.08,671.233 1653.64,672.563 1654.2,658.64 1654.76,658.836 1655.31,645.372 1655.87,646.384 1656.43,650.632 1656.99,667.127 1657.55,651.248 1658.11,672.634 1658.67,656.676 1659.23,688.918 1659.79,720.223 1660.35,752.1 1660.91,779.117 1661.47,789.746 1662.03,740.3 1662.58,722.332 1663.14,717.68 1663.7,715.593 1664.26,711.106 1664.82,726.826 1665.38,743.462 1665.94,758.5 1666.5,724.292 1667.06,721.597 1667.62,687.47 1668.18,690.429 1668.74,695.138 1669.3,725.251 1669.85,724.264 1670.41,735.735 1670.97,749.16 1671.53,746.884 1672.09,745.15 1672.65,741.147 1673.21,769.988 1673.77,737.517 1674.33,750.705 1674.89,713.401 1675.45,715.51 1676.01,715.32 1676.57,682.891 1677.13,698.965 1677.68,732.324 1678.24,693.38 1678.8,692.922 1679.36,690.488 1679.92,659.939 1680.48,659.443 1681.04,675.369 1681.6,679.39 1682.16,652.053 1682.72,654.445 1683.28,655.813 1683.84,673.339 1684.4,732.705 1684.95,728.96 1685.51,679.381 1686.07,664.348 1686.63,634.925 1687.19,607.092 1687.75,595.426 1688.31,585.535 1688.87,591.047 1689.43,628.352 1689.99,650.749 1690.55,667.411 1691.11,672.649 1691.67,654.089 1692.23,671.338 1692.78,655.185 1693.34,640.889 1693.9,643.279 1694.46,662.088 1695.02,682.35 1695.58,699.213 1696.14,667.726 1696.7,684.15 1697.26,730.622 1697.82,762.476 1698.38,774.344 1698.94,767.961 1699.5,727.749 1700.05,739.002 1700.61,734.697 1701.17,743.688 1701.73,724.942 1702.29,739.258 1702.85,720.605 1703.41,734.554 1703.97,730.506 1704.53,730.949 1705.09,710.154 1705.65,709.578 1706.21,674.765 1706.77,658.957 1707.32,692.999 1707.88,692.441 1708.44,708.078 1709,739.005 1709.56,737.357 1710.12,768.465 1710.68,767.251 1711.24,797.608 1711.8,776.153 1712.36,804.802 1712.92,814.213 1713.48,807.543 1714.04,818.089 1714.6,794.155 1715.15,787.699 1715.71,783.085 1716.27,761.925 1716.83,738.008 1717.39,734.423 1717.95,733.778 1718.51,746.611 1719.07,743.575 1719.63,738.01 1720.19,705.391 1720.75,721.742 1721.31,748.753 1721.87,695.368 1722.42,694.594 1722.98,729.2 1723.54,729.158 1724.1,711.858 1724.66,710.378 1725.22,710.836 1725.78,662.185 1726.34,663.658 1726.9,695.158 1727.46,724.884 1728.02,735.309 1728.58,750.59 1729.14,731.526 1729.69,731.439 1730.25,697.422 1730.81,697.883 1731.37,742.317 1731.93,734.733 1732.49,748.627 1733.05,741.719 1733.61,690.139 1734.17,655.71 1734.73,675.423 1735.29,674.206 1735.85,674.613 1736.41,642.68 1736.97,676.567 1737.52,690.854 1738.08,674.311 1738.64,690.371 1739.2,708.517 1739.76,723.593 1740.32,719.823 1740.88,716.284 1741.44,715.763 1742,680.863 1742.56,684.076 1743.12,684.324 1743.68,667.307 1744.24,636.193 1744.79,654.465 1745.35,640.605 1745.91,659.369 1746.47,623.509 1747.03,593.869 1747.59,597.283 1748.15,553.251 1748.71,559.074 1749.27,580.671 1749.83,590.257 1750.39,579.585 1750.95,554.797 1751.51,608.568 1752.06,626.024 1752.62,628.19 1753.18,630.763 1753.74,600.567 1754.3,592.519 1754.86,577.019 1755.42,563.594 1755.98,556.191 1756.54,580.147 1757.1,602.329 1757.66,610.15 1758.22,600.279 1758.78,605.938 1759.34,580.394 1759.89,603.495 1760.45,624.105 1761.01,615.743 1761.57,591.073 1762.13,612.453 1762.69,614.781 1763.25,636.28 1763.81,684.077 1764.37,654.163 1764.93,652.265 1765.49,704.132 1766.05,669.21 1766.61,671.336 1767.16,705.627 1767.72,701.372 1768.28,699.6 1768.84,715.366 1769.4,762.561 1769.96,756.366 1770.52,731.747 1771.08,696.726 1771.64,678.336 1772.2,697.24 1772.76,696.222 1773.32,713.612 1773.88,693.604 1774.43,691.349 1774.99,670.56 1775.55,673.267 1776.11,658.823 1776.67,662.322 1777.23,641.718 1777.79,623.974 1778.35,677.192 1778.91,691.934 1779.47,690.5 1780.03,708.732 1780.59,706.2 1781.15,671.573 1781.71,671.731 1782.26,642.629 1782.82,678.186 1783.38,631.703 1783.94,651.997 1784.5,653.636 1785.06,657.35 1785.62,654.782 1786.18,690.536 1786.74,686.141 1787.3,672.321 1787.86,655.963 1788.42,625.602 1788.98,630.376 1789.53,648.536 1790.09,668.19 1790.65,665.078 1791.21,700.468 1791.77,700.116 1792.33,685.94 1792.89,703.832 1793.45,738.207 1794.01,735.149 1794.57,763.44 1795.13,777.039 1795.69,773.485 1796.25,785.026 1796.8,780.234 1797.36,792.092 1797.92,804.088 1798.48,763.376 1799.04,759.617 1799.6,753.248 1800.16,750.155 1800.72,728.965 1801.28,740.425 1801.84,754.911 1802.4,750.644 1802.96,763.363 1803.52,759.212 1804.08,739.436 1804.63,738.575 1805.19,753.245 1805.75,762.194 1806.31,756.076 1806.87,755.059 1807.43,686.121 1807.99,686.507 1808.55,689.739 1809.11,689.837 1809.67,641.238 1810.23,595.426 1810.79,582.188 1811.35,584.414 1811.9,589.35 1812.46,578.775 1813.02,599.015 1813.58,619.871 1814.14,638.263 1814.7,642.713 1815.26,629.396 1815.82,652.804 1816.38,659.274 1816.94,626.132 1817.5,613.74 1818.06,633.957 1818.62,639.014 1819.18,656.676 1819.73,660.614 1820.29,679.197 1820.85,643.55 1821.41,630.817 1821.97,599.427 1822.53,587.933 1823.09,610.345 1823.65,597.153 1824.21,602.138 1824.77,669.625 1825.33,732.88 1825.89,747.761 1826.45,745.618 1827,744.254 1827.56,740.281 1828.12,704.466 1828.68,702.506 1829.24,721.523 1829.8,715.18 1830.36,696.505 1830.92,712.414 1831.48,731.056 1832.04,743.978 1832.6,692.258 1833.16,691.525 1833.72,690.108 1834.27,689.947 1834.83,692.741 1835.39,692.635 1835.95,674.276 1836.51,691.31 1837.07,709.277 1837.63,759.512 1838.19,757.118 \"/>\n<path clip-path=\"url(#clip553)\" d=\"M720.247 690.635 L720.806 690.635 L721.365 690.635 L721.924 690.635 L722.484 690.635 L723.043 690.635 L723.602 690.635 L724.161 690.635 L724.721 690.635 L725.28 690.635 L725.839 690.635 L726.398 690.635 L726.958 690.635 L727.517 690.635 L728.076 690.635 L728.635 690.635 L729.195 690.635 L729.754 690.635 L730.313 690.635 L730.872 690.635 L731.432 690.635 L731.991 690.635 L732.55 690.635 L733.109 690.635 L733.669 690.635 L734.228 690.635 L734.787 690.635 L735.346 690.635 L735.906 690.635 L736.465 690.635 L737.024 690.635 L737.583 690.635 L738.143 690.635 L738.702 690.635 L739.261 690.635 L739.82 690.635 L740.38 690.635 L740.939 690.635 L741.498 690.635 L742.057 690.635 L742.617 690.635 L743.176 690.635 L743.735 690.635 L744.294 690.635 L744.854 690.635 L745.413 690.635 L745.972 690.635 L746.531 690.635 L747.091 690.635 L747.65 690.635 L748.209 690.635 L748.768 690.635 L749.328 690.635 L749.887 690.635 L750.446 690.635 L751.005 690.635 L751.565 690.635 L752.124 690.635 L752.683 690.635 L753.242 690.635 L753.802 690.635 L754.361 690.635 L754.92 690.635 L755.479 690.635 L756.039 690.635 L756.598 690.635 L757.157 690.635 L757.716 690.635 L758.276 690.635 L758.835 690.635 L759.394 690.635 L759.953 690.635 L760.513 690.635 L761.072 690.635 L761.631 690.635 L762.19 690.635 L762.75 690.635 L763.309 690.635 L763.868 690.635 L764.427 690.635 L764.987 690.635 L765.546 690.635 L766.105 690.635 L766.664 690.635 L767.224 690.635 L767.783 690.635 L768.342 690.635 L768.901 690.635 L769.461 690.635 L770.02 690.635 L770.579 690.635 L771.138 690.635 L771.698 690.635 L772.257 690.635 L772.816 690.635 L773.375 690.635 L773.935 690.635 L774.494 690.635 L775.053 690.635 L775.612 690.635 L776.172 690.635 L776.731 690.635 L777.29 690.635 L777.849 690.635 L778.409 690.635 L778.968 690.635 L779.527 690.635 L780.086 690.635 L780.646 690.635 L781.205 690.635 L781.764 690.635 L782.323 690.635 L782.883 690.635 L783.442 690.635 L784.001 690.635 L784.56 690.635 L785.12 690.635 L785.679 690.635 L786.238 690.635 L786.797 690.635 L787.357 690.635 L787.916 690.635 L788.475 690.635 L789.034 690.635 L789.594 690.635 L790.153 690.635 L790.712 690.635 L791.271 690.635 L791.831 690.635 L792.39 690.635 L792.949 690.635 L793.508 690.635 L794.068 690.635 L794.627 690.635 L795.186 690.635 L795.745 690.635 L796.305 690.635 L796.864 690.635 L797.423 690.635 L797.982 690.635 L798.542 690.635 L799.101 690.635 L799.66 690.635 L800.219 690.635 L800.779 690.635 L801.338 690.635 L801.897 690.635 L802.456 690.635 L803.016 690.635 L803.575 690.635 L804.134 690.635 L804.693 690.635 L805.253 690.635 L805.812 690.635 L806.371 690.635 L806.931 690.635 L807.49 690.635 L808.049 690.635 L808.608 690.635 L809.168 690.635 L809.727 690.635 L810.286 690.635 L810.845 690.635 L811.405 690.635 L811.964 690.635 L812.523 690.635 L813.082 690.635 L813.642 690.635 L814.201 690.635 L814.76 690.635 L815.319 690.635 L815.879 690.635 L816.438 690.635 L816.997 690.635 L817.556 690.635 L818.116 690.635 L818.675 690.635 L819.234 690.635 L819.793 690.635 L820.353 690.635 L820.912 690.635 L821.471 690.635 L822.03 690.635 L822.59 690.635 L823.149 690.635 L823.708 690.635 L824.267 690.635 L824.827 690.635 L825.386 690.635 L825.945 690.635 L826.504 690.635 L827.064 690.635 L827.623 690.635 L828.182 690.635 L828.741 690.635 L829.301 690.635 L829.86 690.635 L830.419 690.635 L830.978 690.635 L831.538 690.635 L832.097 690.635 L832.656 690.635 L833.215 690.635 L833.775 690.635 L834.334 690.635 L834.893 690.635 L835.452 690.635 L836.012 690.635 L836.571 690.635 L837.13 690.635 L837.689 690.635 L838.249 690.635 L838.808 690.635 L839.367 690.635 L839.926 690.635 L840.486 690.635 L841.045 690.635 L841.604 690.635 L842.163 690.635 L842.723 690.635 L843.282 690.635 L843.841 690.635 L844.4 690.635 L844.96 690.635 L845.519 690.635 L846.078 690.635 L846.637 690.635 L847.197 690.635 L847.756 690.635 L848.315 690.635 L848.874 690.635 L849.434 690.635 L849.993 690.635 L850.552 690.635 L851.111 690.635 L851.671 690.635 L852.23 690.635 L852.789 690.635 L853.348 690.635 L853.908 690.635 L854.467 690.635 L855.026 690.635 L855.585 690.635 L856.145 690.635 L856.704 690.635 L857.263 690.635 L857.822 690.635 L858.382 690.635 L858.941 690.635 L859.5 690.635 L860.059 690.635 L860.619 690.635 L861.178 690.635 L861.737 690.635 L862.296 690.635 L862.856 690.635 L863.415 690.635 L863.974 690.635 L864.533 690.635 L865.093 690.635 L865.652 690.635 L866.211 690.635 L866.77 690.635 L867.33 690.635 L867.889 690.635 L868.448 690.635 L869.007 690.635 L869.567 690.635 L870.126 690.635 L870.685 690.635 L871.244 690.635 L871.804 690.635 L872.363 690.635 L872.922 690.635 L873.481 690.635 L874.041 690.635 L874.6 690.635 L875.159 690.635 L875.718 690.635 L876.278 690.635 L876.837 690.635 L877.396 690.635 L877.955 690.635 L878.515 690.635 L879.074 690.635 L879.633 690.635 L880.192 690.635 L880.752 690.635 L881.311 690.635 L881.87 690.635 L882.429 690.635 L882.989 690.635 L883.548 690.635 L884.107 690.635 L884.666 690.635 L885.226 690.635 L885.785 690.635 L886.344 690.635 L886.903 690.635 L887.463 690.635 L888.022 690.635 L888.581 690.635 L889.14 690.635 L889.7 690.635 L890.259 690.635 L890.818 690.635 L891.377 690.635 L891.937 690.635 L892.496 690.635 L893.055 690.635 L893.614 690.635 L894.174 690.635 L894.733 690.635 L895.292 690.635 L895.851 690.635 L896.411 690.635 L896.97 690.635 L897.529 690.635 L898.088 690.635 L898.648 690.635 L899.207 690.635 L899.766 690.635 L900.325 690.635 L900.885 690.635 L901.444 690.635 L902.003 690.635 L902.562 690.635 L903.122 690.635 L903.681 690.635 L904.24 690.635 L904.799 690.635 L905.359 690.635 L905.918 690.635 L906.477 690.635 L907.036 690.635 L907.596 690.635 L908.155 690.635 L908.714 690.635 L909.273 690.635 L909.833 690.635 L910.392 690.635 L910.951 690.635 L911.51 690.635 L912.07 690.635 L912.629 690.635 L913.188 690.635 L913.747 690.635 L914.307 690.635 L914.866 690.635 L915.425 690.635 L915.984 690.635 L916.544 690.635 L917.103 690.635 L917.662 690.635 L918.221 690.635 L918.781 690.635 L919.34 690.635 L919.899 690.635 L920.458 690.635 L921.018 690.635 L921.577 690.635 L922.136 690.635 L922.695 690.635 L923.255 690.635 L923.814 690.635 L924.373 690.635 L924.932 690.635 L925.492 690.635 L926.051 690.635 L926.61 690.635 L927.169 690.635 L927.729 690.635 L928.288 690.635 L928.847 690.635 L929.406 690.635 L929.966 690.635 L930.525 690.635 L931.084 690.635 L931.644 690.635 L932.203 690.635 L932.762 690.635 L933.321 690.635 L933.881 690.635 L934.44 690.635 L934.999 690.635 L935.558 690.635 L936.118 690.635 L936.677 690.635 L937.236 690.635 L937.795 690.635 L938.355 690.635 L938.914 690.635 L939.473 690.635 L940.032 690.635 L940.592 690.635 L941.151 690.635 L941.71 690.635 L942.269 690.635 L942.829 690.635 L943.388 690.635 L943.947 690.635 L944.506 690.635 L945.066 690.635 L945.625 690.635 L946.184 690.635 L946.743 690.635 L947.303 690.635 L947.862 690.635 L948.421 690.635 L948.98 690.635 L949.54 690.635 L950.099 690.635 L950.658 690.635 L951.217 690.635 L951.777 690.635 L952.336 690.635 L952.895 690.635 L953.454 690.635 L954.014 690.635 L954.573 690.635 L955.132 690.635 L955.691 690.635 L956.251 690.635 L956.81 690.635 L957.369 690.635 L957.928 690.635 L958.488 690.635 L959.047 690.635 L959.606 690.635 L960.165 690.635 L960.725 690.635 L961.284 690.635 L961.843 690.635 L962.402 690.635 L962.962 690.635 L963.521 690.635 L964.08 690.635 L964.639 690.635 L965.199 690.635 L965.758 690.635 L966.317 690.635 L966.876 690.635 L967.436 690.635 L967.995 690.635 L968.554 690.635 L969.113 690.635 L969.673 690.635 L970.232 690.635 L970.791 690.635 L971.35 690.635 L971.91 690.635 L972.469 690.635 L973.028 690.635 L973.587 690.635 L974.147 690.635 L974.706 690.635 L975.265 690.635 L975.824 690.635 L976.384 690.635 L976.943 690.635 L977.502 690.635 L978.061 690.635 L978.621 690.635 L979.18 690.635 L979.739 690.635 L980.298 690.635 L980.858 690.635 L981.417 690.635 L981.976 690.635 L982.535 690.635 L983.095 690.635 L983.654 690.635 L984.213 690.635 L984.772 690.635 L985.332 690.635 L985.891 690.635 L986.45 690.635 L987.009 690.635 L987.569 690.635 L988.128 690.635 L988.687 690.635 L989.246 690.635 L989.806 690.635 L990.365 690.635 L990.924 690.635 L991.483 690.635 L992.043 690.635 L992.602 690.635 L993.161 690.635 L993.72 690.635 L994.28 690.635 L994.839 690.635 L995.398 690.635 L995.957 690.635 L996.517 690.635 L997.076 690.635 L997.635 690.635 L998.194 690.635 L998.754 690.635 L999.313 690.635 L999.872 690.635 L1000.43 690.635 L1000.99 690.635 L1001.55 690.635 L1002.11 690.635 L1002.67 690.635 L1003.23 690.635 L1003.79 690.635 L1004.35 690.635 L1004.91 690.635 L1005.46 690.635 L1006.02 690.635 L1006.58 690.635 L1007.14 690.635 L1007.7 690.635 L1008.26 690.635 L1008.82 690.635 L1009.38 690.635 L1009.94 690.635 L1010.5 690.635 L1011.06 690.635 L1011.62 690.635 L1012.18 690.635 L1012.73 690.635 L1013.29 690.635 L1013.85 690.635 L1014.41 690.635 L1014.97 690.635 L1015.53 690.635 L1016.09 690.635 L1016.65 690.635 L1017.21 690.635 L1017.77 690.635 L1018.33 690.635 L1018.89 690.635 L1019.45 690.635 L1020.01 690.635 L1020.56 690.635 L1021.12 690.635 L1021.68 690.635 L1022.24 690.635 L1022.8 690.635 L1023.36 690.635 L1023.92 690.635 L1024.48 690.635 L1025.04 690.635 L1025.6 690.635 L1026.16 690.635 L1026.72 690.635 L1027.28 690.635 L1027.83 690.635 L1028.39 690.635 L1028.95 690.635 L1029.51 690.635 L1030.07 690.635 L1030.63 690.635 L1031.19 690.635 L1031.75 690.635 L1032.31 690.635 L1032.87 690.635 L1033.43 690.635 L1033.99 690.635 L1034.55 690.635 L1035.1 690.635 L1035.66 690.635 L1036.22 690.635 L1036.78 690.635 L1037.34 690.635 L1037.9 690.635 L1038.46 690.635 L1039.02 690.635 L1039.58 690.635 L1040.14 690.635 L1040.7 690.635 L1041.26 690.635 L1041.82 690.635 L1042.38 690.635 L1042.93 690.635 L1043.49 690.635 L1044.05 690.635 L1044.61 690.635 L1045.17 690.635 L1045.73 690.635 L1046.29 690.635 L1046.85 690.635 L1047.41 690.635 L1047.97 690.635 L1048.53 690.635 L1049.09 690.635 L1049.65 690.635 L1050.2 690.635 L1050.76 690.635 L1051.32 690.635 L1051.88 690.635 L1052.44 690.635 L1053 690.635 L1053.56 690.635 L1054.12 690.635 L1054.68 690.635 L1055.24 690.635 L1055.8 690.635 L1056.36 690.635 L1056.92 690.635 L1057.48 690.635 L1058.03 690.635 L1058.59 690.635 L1059.15 690.635 L1059.71 690.635 L1060.27 690.635 L1060.83 690.635 L1061.39 690.635 L1061.95 690.635 L1062.51 690.635 L1063.07 690.635 L1063.63 690.635 L1064.19 690.635 L1064.75 690.635 L1065.3 690.635 L1065.86 690.635 L1066.42 690.635 L1066.98 690.635 L1067.54 690.635 L1068.1 690.635 L1068.66 690.635 L1069.22 690.635 L1069.78 690.635 L1070.34 690.635 L1070.9 690.635 L1071.46 690.635 L1072.02 690.635 L1072.57 690.635 L1073.13 690.635 L1073.69 690.635 L1074.25 690.635 L1074.81 690.635 L1075.37 690.635 L1075.93 690.635 L1076.49 690.635 L1077.05 690.635 L1077.61 690.635 L1078.17 690.635 L1078.73 690.635 L1079.29 690.635 L1079.85 690.635 L1080.4 690.635 L1080.96 690.635 L1081.52 690.635 L1082.08 690.635 L1082.64 690.635 L1083.2 690.635 L1083.76 690.635 L1084.32 690.635 L1084.88 690.635 L1085.44 690.635 L1086 690.635 L1086.56 690.635 L1087.12 690.635 L1087.67 690.635 L1088.23 690.635 L1088.79 690.635 L1089.35 690.635 L1089.91 690.635 L1090.47 690.635 L1091.03 690.635 L1091.59 690.635 L1092.15 690.635 L1092.71 690.635 L1093.27 690.635 L1093.83 690.635 L1094.39 690.635 L1094.94 690.635 L1095.5 690.635 L1096.06 690.635 L1096.62 690.635 L1097.18 690.635 L1097.74 690.635 L1098.3 690.635 L1098.86 690.635 L1099.42 690.635 L1099.98 690.635 L1100.54 690.635 L1101.1 690.635 L1101.66 690.635 L1102.22 690.635 L1102.77 690.635 L1103.33 690.635 L1103.89 690.635 L1104.45 690.635 L1105.01 690.635 L1105.57 690.635 L1106.13 690.635 L1106.69 690.635 L1107.25 690.635 L1107.81 690.635 L1108.37 690.635 L1108.93 690.635 L1109.49 690.635 L1110.04 690.635 L1110.6 690.635 L1111.16 690.635 L1111.72 690.635 L1112.28 690.635 L1112.84 690.635 L1113.4 690.635 L1113.96 690.635 L1114.52 690.635 L1115.08 690.635 L1115.64 690.635 L1116.2 690.635 L1116.76 690.635 L1117.31 690.635 L1117.87 690.635 L1118.43 690.635 L1118.99 690.635 L1119.55 690.635 L1120.11 690.635 L1120.67 690.635 L1121.23 690.635 L1121.79 690.635 L1122.35 690.635 L1122.91 690.635 L1123.47 690.635 L1124.03 690.635 L1124.59 690.635 L1125.14 690.635 L1125.7 690.635 L1126.26 690.635 L1126.82 690.635 L1127.38 690.635 L1127.94 690.635 L1128.5 690.635 L1129.06 690.635 L1129.62 690.635 L1130.18 690.635 L1130.74 690.635 L1131.3 690.635 L1131.86 690.635 L1132.41 690.635 L1132.97 690.635 L1133.53 690.635 L1134.09 690.635 L1134.65 690.635 L1135.21 690.635 L1135.77 690.635 L1136.33 690.635 L1136.89 690.635 L1137.45 690.635 L1138.01 690.635 L1138.57 690.635 L1139.13 690.635 L1139.68 690.635 L1140.24 690.635 L1140.8 690.635 L1141.36 690.635 L1141.92 690.635 L1142.48 690.635 L1143.04 690.635 L1143.6 690.635 L1144.16 690.635 L1144.72 690.635 L1145.28 690.635 L1145.84 690.635 L1146.4 690.635 L1146.96 690.635 L1147.51 690.635 L1148.07 690.635 L1148.63 690.635 L1149.19 690.635 L1149.75 690.635 L1150.31 690.635 L1150.87 690.635 L1151.43 690.635 L1151.99 690.635 L1152.55 690.635 L1153.11 690.635 L1153.67 690.635 L1154.23 690.635 L1154.78 690.635 L1155.34 690.635 L1155.9 690.635 L1156.46 690.635 L1157.02 690.635 L1157.58 690.635 L1158.14 690.635 L1158.7 690.635 L1159.26 690.635 L1159.82 690.635 L1160.38 690.635 L1160.94 690.635 L1161.5 690.635 L1162.05 690.635 L1162.61 690.635 L1163.17 690.635 L1163.73 690.635 L1164.29 690.635 L1164.85 690.635 L1165.41 690.635 L1165.97 690.635 L1166.53 690.635 L1167.09 690.635 L1167.65 690.635 L1168.21 690.635 L1168.77 690.635 L1169.33 690.635 L1169.88 690.635 L1170.44 690.635 L1171 690.635 L1171.56 690.635 L1172.12 690.635 L1172.68 690.635 L1173.24 690.635 L1173.8 690.635 L1174.36 690.635 L1174.92 690.635 L1175.48 690.635 L1176.04 690.635 L1176.6 690.635 L1177.15 690.635 L1177.71 690.635 L1178.27 690.635 L1178.83 690.635 L1179.39 690.635 L1179.95 690.635 L1180.51 690.635 L1181.07 690.635 L1181.63 690.635 L1182.19 690.635 L1182.75 690.635 L1183.31 690.635 L1183.87 690.635 L1184.43 690.635 L1184.98 690.635 L1185.54 690.635 L1186.1 690.635 L1186.66 690.635 L1187.22 690.635 L1187.78 690.635 L1188.34 690.635 L1188.9 690.635 L1189.46 690.635 L1190.02 690.635 L1190.58 690.635 L1191.14 690.635 L1191.7 690.635 L1192.25 690.635 L1192.81 690.635 L1193.37 690.635 L1193.93 690.635 L1194.49 690.635 L1195.05 690.635 L1195.61 690.635 L1196.17 690.635 L1196.73 690.635 L1197.29 690.635 L1197.85 690.635 L1198.41 690.635 L1198.97 690.635 L1199.52 690.635 L1200.08 690.635 L1200.64 690.635 L1201.2 690.635 L1201.76 690.635 L1202.32 690.635 L1202.88 690.635 L1203.44 690.635 L1204 690.635 L1204.56 690.635 L1205.12 690.635 L1205.68 690.635 L1206.24 690.635 L1206.8 690.635 L1207.35 690.635 L1207.91 690.635 L1208.47 690.635 L1209.03 690.635 L1209.59 690.635 L1210.15 690.635 L1210.71 690.635 L1211.27 690.635 L1211.83 690.635 L1212.39 690.635 L1212.95 690.635 L1213.51 690.635 L1214.07 690.635 L1214.62 690.635 L1215.18 690.635 L1215.74 690.635 L1216.3 690.635 L1216.86 690.635 L1217.42 690.635 L1217.98 690.635 L1218.54 690.635 L1219.1 690.635 L1219.66 690.635 L1220.22 690.635 L1220.78 690.635 L1221.34 690.635 L1221.89 690.635 L1222.45 690.635 L1223.01 690.635 L1223.57 690.635 L1224.13 690.635 L1224.69 690.635 L1225.25 690.635 L1225.81 690.635 L1226.37 690.635 L1226.93 690.635 L1227.49 690.635 L1228.05 690.635 L1228.61 690.635 L1229.17 690.635 L1229.72 690.635 L1230.28 690.635 L1230.84 690.635 L1231.4 690.635 L1231.96 690.635 L1232.52 690.635 L1233.08 690.635 L1233.64 690.635 L1234.2 690.635 L1234.76 690.635 L1235.32 690.635 L1235.88 690.635 L1236.44 690.635 L1236.99 690.635 L1237.55 690.635 L1238.11 690.635 L1238.67 690.635 L1239.23 690.635 L1239.79 690.635 L1240.35 690.635 L1240.91 690.635 L1241.47 690.635 L1242.03 690.635 L1242.59 690.635 L1243.15 690.635 L1243.71 690.635 L1244.26 690.635 L1244.82 690.635 L1245.38 690.635 L1245.94 690.635 L1246.5 690.635 L1247.06 690.635 L1247.62 690.635 L1248.18 690.635 L1248.74 690.635 L1249.3 690.635 L1249.86 690.635 L1250.42 690.635 L1250.98 690.635 L1251.54 690.635 L1252.09 690.635 L1252.65 690.635 L1253.21 690.635 L1253.77 690.635 L1254.33 690.635 L1254.89 690.635 L1255.45 690.635 L1256.01 690.635 L1256.57 690.635 L1257.13 690.635 L1257.69 690.635 L1258.25 690.635 L1258.81 690.635 L1259.36 690.635 L1259.92 690.635 L1260.48 690.635 L1261.04 690.635 L1261.6 690.635 L1262.16 690.635 L1262.72 690.635 L1263.28 690.635 L1263.84 690.635 L1264.4 690.635 L1264.96 690.635 L1265.52 690.635 L1266.08 690.635 L1266.63 690.635 L1267.19 690.635 L1267.75 690.635 L1268.31 690.635 L1268.87 690.635 L1269.43 690.635 L1269.99 690.635 L1270.55 690.635 L1271.11 690.635 L1271.67 690.635 L1272.23 690.635 L1272.79 690.635 L1273.35 690.635 L1273.91 690.635 L1274.46 690.635 L1275.02 690.635 L1275.58 690.635 L1276.14 690.635 L1276.7 690.635 L1277.26 690.635 L1277.82 690.635 L1278.38 690.635 L1278.94 690.635 L1279.5 690.635 L1280.06 690.635 L1280.62 690.635 L1281.18 690.635 L1281.73 690.635 L1282.29 690.635 L1282.85 690.635 L1283.41 690.635 L1283.97 690.635 L1284.53 690.635 L1285.09 690.635 L1285.65 690.635 L1286.21 690.635 L1286.77 690.635 L1287.33 690.635 L1287.89 690.635 L1288.45 690.635 L1289 690.635 L1289.56 690.635 L1290.12 690.635 L1290.68 690.635 L1291.24 690.635 L1291.8 690.635 L1292.36 690.635 L1292.92 690.635 L1293.48 690.635 L1294.04 690.635 L1294.6 690.635 L1295.16 690.635 L1295.72 690.635 L1296.28 690.635 L1296.83 690.635 L1297.39 690.635 L1297.95 690.635 L1298.51 690.635 L1299.07 690.635 L1299.63 690.635 L1300.19 690.635 L1300.75 690.635 L1301.31 690.635 L1301.87 690.635 L1302.43 690.635 L1302.99 690.635 L1303.55 690.635 L1304.1 690.635 L1304.66 690.635 L1305.22 690.635 L1305.78 690.635 L1306.34 690.635 L1306.9 690.635 L1307.46 690.635 L1308.02 690.635 L1308.58 690.635 L1309.14 690.635 L1309.7 690.635 L1310.26 690.635 L1310.82 690.635 L1311.38 690.635 L1311.93 690.635 L1312.49 690.635 L1313.05 690.635 L1313.61 690.635 L1314.17 690.635 L1314.73 690.635 L1315.29 690.635 L1315.85 690.635 L1316.41 690.635 L1316.97 690.635 L1317.53 690.635 L1318.09 690.635 L1318.65 690.635 L1319.2 690.635 L1319.76 690.635 L1320.32 690.635 L1320.88 690.635 L1321.44 690.635 L1322 690.635 L1322.56 690.635 L1323.12 690.635 L1323.68 690.635 L1324.24 690.635 L1324.8 690.635 L1325.36 690.635 L1325.92 690.635 L1326.47 690.635 L1327.03 690.635 L1327.59 690.635 L1328.15 690.635 L1328.71 690.635 L1329.27 690.635 L1329.83 690.635 L1330.39 690.635 L1330.95 690.635 L1331.51 690.635 L1332.07 690.635 L1332.63 690.635 L1333.19 690.635 L1333.75 690.635 L1334.3 690.635 L1334.86 690.635 L1335.42 690.635 L1335.98 690.635 L1336.54 690.635 L1337.1 690.635 L1337.66 690.635 L1338.22 690.635 L1338.78 690.635 L1339.34 690.635 L1339.9 690.635 L1340.46 690.635 L1341.02 690.635 L1341.57 690.635 L1342.13 690.635 L1342.69 690.635 L1343.25 690.635 L1343.81 690.635 L1344.37 690.635 L1344.93 690.635 L1345.49 690.635 L1346.05 690.635 L1346.61 690.635 L1347.17 690.635 L1347.73 690.635 L1348.29 690.635 L1348.84 690.635 L1349.4 690.635 L1349.96 690.635 L1350.52 690.635 L1351.08 690.635 L1351.64 690.635 L1352.2 690.635 L1352.76 690.635 L1353.32 690.635 L1353.88 690.635 L1354.44 690.635 L1355 690.635 L1355.56 690.635 L1356.12 690.635 L1356.67 690.635 L1357.23 690.635 L1357.79 690.635 L1358.35 690.635 L1358.91 690.635 L1359.47 690.635 L1360.03 690.635 L1360.59 690.635 L1361.15 690.635 L1361.71 690.635 L1362.27 690.635 L1362.83 690.635 L1363.39 690.635 L1363.94 690.635 L1364.5 690.635 L1365.06 690.635 L1365.62 690.635 L1366.18 690.635 L1366.74 690.635 L1367.3 690.635 L1367.86 690.635 L1368.42 690.635 L1368.98 690.635 L1369.54 690.635 L1370.1 690.635 L1370.66 690.635 L1371.21 690.635 L1371.77 690.635 L1372.33 690.635 L1372.89 690.635 L1373.45 690.635 L1374.01 690.635 L1374.57 690.635 L1375.13 690.635 L1375.69 690.635 L1376.25 690.635 L1376.81 690.635 L1377.37 690.635 L1377.93 690.635 L1378.49 690.635 L1379.04 690.635 L1379.6 690.635 L1380.16 690.635 L1380.72 690.635 L1381.28 690.635 L1381.84 690.635 L1382.4 690.635 L1382.96 690.635 L1383.52 690.635 L1384.08 690.635 L1384.64 690.635 L1385.2 690.635 L1385.76 690.635 L1386.31 690.635 L1386.87 690.635 L1387.43 690.635 L1387.99 690.635 L1388.55 690.635 L1389.11 690.635 L1389.67 690.635 L1390.23 690.635 L1390.79 690.635 L1391.35 690.635 L1391.91 690.635 L1392.47 690.635 L1393.03 690.635 L1393.58 690.635 L1394.14 690.635 L1394.7 690.635 L1395.26 690.635 L1395.82 690.635 L1396.38 690.635 L1396.94 690.635 L1397.5 690.635 L1398.06 690.635 L1398.62 690.635 L1399.18 690.635 L1399.74 690.635 L1400.3 690.635 L1400.86 690.635 L1401.41 690.635 L1401.97 690.635 L1402.53 690.635 L1403.09 690.635 L1403.65 690.635 L1404.21 690.635 L1404.77 690.635 L1405.33 690.635 L1405.89 690.635 L1406.45 690.635 L1407.01 690.635 L1407.57 690.635 L1408.13 690.635 L1408.68 690.635 L1409.24 690.635 L1409.8 690.635 L1410.36 690.635 L1410.92 690.635 L1411.48 690.635 L1412.04 690.635 L1412.6 690.635 L1413.16 690.635 L1413.72 690.635 L1414.28 690.635 L1414.84 690.635 L1415.4 690.635 L1415.95 690.635 L1416.51 690.635 L1417.07 690.635 L1417.63 690.635 L1418.19 690.635 L1418.75 690.635 L1419.31 690.635 L1419.87 690.635 L1420.43 690.635 L1420.99 690.635 L1421.55 690.635 L1422.11 690.635 L1422.67 690.635 L1423.23 690.635 L1423.78 690.635 L1424.34 690.635 L1424.9 690.635 L1425.46 690.635 L1426.02 690.635 L1426.58 690.635 L1427.14 690.635 L1427.7 690.635 L1428.26 690.635 L1428.82 690.635 L1429.38 690.635 L1429.94 690.635 L1430.5 690.635 L1431.05 690.635 L1431.61 690.635 L1432.17 690.635 L1432.73 690.635 L1433.29 690.635 L1433.85 690.635 L1434.41 690.635 L1434.97 690.635 L1435.53 690.635 L1436.09 690.635 L1436.65 690.635 L1437.21 690.635 L1437.77 690.635 L1438.33 690.635 L1438.88 690.635 L1439.44 690.635 L1440 690.635 L1440.56 690.635 L1441.12 690.635 L1441.68 690.635 L1442.24 690.635 L1442.8 690.635 L1443.36 690.635 L1443.92 690.635 L1444.48 690.635 L1445.04 690.635 L1445.6 690.635 L1446.15 690.635 L1446.71 690.635 L1447.27 690.635 L1447.83 690.635 L1448.39 690.635 L1448.95 690.635 L1449.51 690.635 L1450.07 690.635 L1450.63 690.635 L1451.19 690.635 L1451.75 690.635 L1452.31 690.635 L1452.87 690.635 L1453.42 690.635 L1453.98 690.635 L1454.54 690.635 L1455.1 690.635 L1455.66 690.635 L1456.22 690.635 L1456.78 690.635 L1457.34 690.635 L1457.9 690.635 L1458.46 690.635 L1459.02 690.635 L1459.58 690.635 L1460.14 690.635 L1460.7 690.635 L1461.25 690.635 L1461.81 690.635 L1462.37 690.635 L1462.93 690.635 L1463.49 690.635 L1464.05 690.635 L1464.61 690.635 L1465.17 690.635 L1465.73 690.635 L1466.29 690.635 L1466.85 690.635 L1467.41 690.635 L1467.97 690.635 L1468.52 690.635 L1469.08 690.635 L1469.64 690.635 L1470.2 690.635 L1470.76 690.635 L1471.32 690.635 L1471.88 690.635 L1472.44 690.635 L1473 690.635 L1473.56 690.635 L1474.12 690.635 L1474.68 690.635 L1475.24 690.635 L1475.79 690.635 L1476.35 690.635 L1476.91 690.635 L1477.47 690.635 L1478.03 690.635 L1478.59 690.635 L1479.15 690.635 L1479.71 690.635 L1480.27 690.635 L1480.83 690.635 L1481.39 690.635 L1481.95 690.635 L1482.51 690.635 L1483.07 690.635 L1483.62 690.635 L1484.18 690.635 L1484.74 690.635 L1485.3 690.635 L1485.86 690.635 L1486.42 690.635 L1486.98 690.635 L1487.54 690.635 L1488.1 690.635 L1488.66 690.635 L1489.22 690.635 L1489.78 690.635 L1490.34 690.635 L1490.89 690.635 L1491.45 690.635 L1492.01 690.635 L1492.57 690.635 L1493.13 690.635 L1493.69 690.635 L1494.25 690.635 L1494.81 690.635 L1495.37 690.635 L1495.93 690.635 L1496.49 690.635 L1497.05 690.635 L1497.61 690.635 L1498.16 690.635 L1498.72 690.635 L1499.28 690.635 L1499.84 690.635 L1500.4 690.635 L1500.96 690.635 L1501.52 690.635 L1502.08 690.635 L1502.64 690.635 L1503.2 690.635 L1503.76 690.635 L1504.32 690.635 L1504.88 690.635 L1505.44 690.635 L1505.99 690.635 L1506.55 690.635 L1507.11 690.635 L1507.67 690.635 L1508.23 690.635 L1508.79 690.635 L1509.35 690.635 L1509.91 690.635 L1510.47 690.635 L1511.03 690.635 L1511.59 690.635 L1512.15 690.635 L1512.71 690.635 L1513.26 690.635 L1513.82 690.635 L1514.38 690.635 L1514.94 690.635 L1515.5 690.635 L1516.06 690.635 L1516.62 690.635 L1517.18 690.635 L1517.74 690.635 L1518.3 690.635 L1518.86 690.635 L1519.42 690.635 L1519.98 690.635 L1520.53 690.635 L1521.09 690.635 L1521.65 690.635 L1522.21 690.635 L1522.77 690.635 L1523.33 690.635 L1523.89 690.635 L1524.45 690.635 L1525.01 690.635 L1525.57 690.635 L1526.13 690.635 L1526.69 690.635 L1527.25 690.635 L1527.81 690.635 L1528.36 690.635 L1528.92 690.635 L1529.48 690.635 L1530.04 690.635 L1530.6 690.635 L1531.16 690.635 L1531.72 690.635 L1532.28 690.635 L1532.84 690.635 L1533.4 690.635 L1533.96 690.635 L1534.52 690.635 L1535.08 690.635 L1535.63 690.635 L1536.19 690.635 L1536.75 690.635 L1537.31 690.635 L1537.87 690.635 L1538.43 690.635 L1538.99 690.635 L1539.55 690.635 L1540.11 690.635 L1540.67 690.635 L1541.23 690.635 L1541.79 690.635 L1542.35 690.635 L1542.9 690.635 L1543.46 690.635 L1544.02 690.635 L1544.58 690.635 L1545.14 690.635 L1545.7 690.635 L1546.26 690.635 L1546.82 690.635 L1547.38 690.635 L1547.94 690.635 L1548.5 690.635 L1549.06 690.635 L1549.62 690.635 L1550.18 690.635 L1550.73 690.635 L1551.29 690.635 L1551.85 690.635 L1552.41 690.635 L1552.97 690.635 L1553.53 690.635 L1554.09 690.635 L1554.65 690.635 L1555.21 690.635 L1555.77 690.635 L1556.33 690.635 L1556.89 690.635 L1557.45 690.635 L1558 690.635 L1558.56 690.635 L1559.12 690.635 L1559.68 690.635 L1560.24 690.635 L1560.8 690.635 L1561.36 690.635 L1561.92 690.635 L1562.48 690.635 L1563.04 690.635 L1563.6 690.635 L1564.16 690.635 L1564.72 690.635 L1565.28 690.635 L1565.83 690.635 L1566.39 690.635 L1566.95 690.635 L1567.51 690.635 L1568.07 690.635 L1568.63 690.635 L1569.19 690.635 L1569.75 690.635 L1570.31 690.635 L1570.87 690.635 L1571.43 690.635 L1571.99 690.635 L1572.55 690.635 L1573.1 690.635 L1573.66 690.635 L1574.22 690.635 L1574.78 690.635 L1575.34 690.635 L1575.9 690.635 L1576.46 690.635 L1577.02 690.635 L1577.58 690.635 L1578.14 690.635 L1578.7 690.635 L1579.26 690.635 L1579.82 690.635 L1580.37 690.635 L1580.93 690.635 L1581.49 690.635 L1582.05 690.635 L1582.61 690.635 L1583.17 690.635 L1583.73 690.635 L1584.29 690.635 L1584.85 690.635 L1585.41 690.635 L1585.97 690.635 L1586.53 690.635 L1587.09 690.635 L1587.65 690.635 L1588.2 690.635 L1588.76 690.635 L1589.32 690.635 L1589.88 690.635 L1590.44 690.635 L1591 690.635 L1591.56 690.635 L1592.12 690.635 L1592.68 690.635 L1593.24 690.635 L1593.8 690.635 L1594.36 690.635 L1594.92 690.635 L1595.47 690.635 L1596.03 690.635 L1596.59 690.635 L1597.15 690.635 L1597.71 690.635 L1598.27 690.635 L1598.83 690.635 L1599.39 690.635 L1599.95 690.635 L1600.51 690.635 L1601.07 690.635 L1601.63 690.635 L1602.19 690.635 L1602.74 690.635 L1603.3 690.635 L1603.86 690.635 L1604.42 690.635 L1604.98 690.635 L1605.54 690.635 L1606.1 690.635 L1606.66 690.635 L1607.22 690.635 L1607.78 690.635 L1608.34 690.635 L1608.9 690.635 L1609.46 690.635 L1610.02 690.635 L1610.57 690.635 L1611.13 690.635 L1611.69 690.635 L1612.25 690.635 L1612.81 690.635 L1613.37 690.635 L1613.93 690.635 L1614.49 690.635 L1615.05 690.635 L1615.61 690.635 L1616.17 690.635 L1616.73 690.635 L1617.29 690.635 L1617.84 690.635 L1618.4 690.635 L1618.96 690.635 L1619.52 690.635 L1620.08 690.635 L1620.64 690.635 L1621.2 690.635 L1621.76 690.635 L1622.32 690.635 L1622.88 690.635 L1623.44 690.635 L1624 690.635 L1624.56 690.635 L1625.11 690.635 L1625.67 690.635 L1626.23 690.635 L1626.79 690.635 L1627.35 690.635 L1627.91 690.635 L1628.47 690.635 L1629.03 690.635 L1629.59 690.635 L1630.15 690.635 L1630.71 690.635 L1631.27 690.635 L1631.83 690.635 L1632.39 690.635 L1632.94 690.635 L1633.5 690.635 L1634.06 690.635 L1634.62 690.635 L1635.18 690.635 L1635.74 690.635 L1636.3 690.635 L1636.86 690.635 L1637.42 690.635 L1637.98 690.635 L1638.54 690.635 L1639.1 690.635 L1639.66 690.635 L1640.21 690.635 L1640.77 690.635 L1641.33 690.635 L1641.89 690.635 L1642.45 690.635 L1643.01 690.635 L1643.57 690.635 L1644.13 690.635 L1644.69 690.635 L1645.25 690.635 L1645.81 690.635 L1646.37 690.635 L1646.93 690.635 L1647.48 690.635 L1648.04 690.635 L1648.6 690.635 L1649.16 690.635 L1649.72 690.635 L1650.28 690.635 L1650.84 690.635 L1651.4 690.635 L1651.96 690.635 L1652.52 690.635 L1653.08 690.635 L1653.64 690.635 L1654.2 690.635 L1654.76 690.635 L1655.31 690.635 L1655.87 690.635 L1656.43 690.635 L1656.99 690.635 L1657.55 690.635 L1658.11 690.635 L1658.67 690.635 L1659.23 690.635 L1659.79 690.635 L1660.35 690.635 L1660.91 690.635 L1661.47 690.635 L1662.03 690.635 L1662.58 690.635 L1663.14 690.635 L1663.7 690.635 L1664.26 690.635 L1664.82 690.635 L1665.38 690.635 L1665.94 690.635 L1666.5 690.635 L1667.06 690.635 L1667.62 690.635 L1668.18 690.635 L1668.74 690.635 L1669.3 690.635 L1669.85 690.635 L1670.41 690.635 L1670.97 690.635 L1671.53 690.635 L1672.09 690.635 L1672.65 690.635 L1673.21 690.635 L1673.77 690.635 L1674.33 690.635 L1674.89 690.635 L1675.45 690.635 L1676.01 690.635 L1676.57 690.635 L1677.13 690.635 L1677.68 690.635 L1678.24 690.635 L1678.8 690.635 L1679.36 690.635 L1679.92 690.635 L1680.48 690.635 L1681.04 690.635 L1681.6 690.635 L1682.16 690.635 L1682.72 690.635 L1683.28 690.635 L1683.84 690.635 L1684.4 690.635 L1684.95 690.635 L1685.51 690.635 L1686.07 690.635 L1686.63 690.635 L1687.19 690.635 L1687.75 690.635 L1688.31 690.635 L1688.87 690.635 L1689.43 690.635 L1689.99 690.635 L1690.55 690.635 L1691.11 690.635 L1691.67 690.635 L1692.23 690.635 L1692.78 690.635 L1693.34 690.635 L1693.9 690.635 L1694.46 690.635 L1695.02 690.635 L1695.58 690.635 L1696.14 690.635 L1696.7 690.635 L1697.26 690.635 L1697.82 690.635 L1698.38 690.635 L1698.94 690.635 L1699.5 690.635 L1700.05 690.635 L1700.61 690.635 L1701.17 690.635 L1701.73 690.635 L1702.29 690.635 L1702.85 690.635 L1703.41 690.635 L1703.97 690.635 L1704.53 690.635 L1705.09 690.635 L1705.65 690.635 L1706.21 690.635 L1706.77 690.635 L1707.32 690.635 L1707.88 690.635 L1708.44 690.635 L1709 690.635 L1709.56 690.635 L1710.12 690.635 L1710.68 690.635 L1711.24 690.635 L1711.8 690.635 L1712.36 690.635 L1712.92 690.635 L1713.48 690.635 L1714.04 690.635 L1714.6 690.635 L1715.15 690.635 L1715.71 690.635 L1716.27 690.635 L1716.83 690.635 L1717.39 690.635 L1717.95 690.635 L1718.51 690.635 L1719.07 690.635 L1719.63 690.635 L1720.19 690.635 L1720.75 690.635 L1721.31 690.635 L1721.87 690.635 L1722.42 690.635 L1722.98 690.635 L1723.54 690.635 L1724.1 690.635 L1724.66 690.635 L1725.22 690.635 L1725.78 690.635 L1726.34 690.635 L1726.9 690.635 L1727.46 690.635 L1728.02 690.635 L1728.58 690.635 L1729.14 690.635 L1729.69 690.635 L1730.25 690.635 L1730.81 690.635 L1731.37 690.635 L1731.93 690.635 L1732.49 690.635 L1733.05 690.635 L1733.61 690.635 L1734.17 690.635 L1734.73 690.635 L1735.29 690.635 L1735.85 690.635 L1736.41 690.635 L1736.97 690.635 L1737.52 690.635 L1738.08 690.635 L1738.64 690.635 L1739.2 690.635 L1739.76 690.635 L1740.32 690.635 L1740.88 690.635 L1741.44 690.635 L1742 690.635 L1742.56 690.635 L1743.12 690.635 L1743.68 690.635 L1744.24 690.635 L1744.79 690.635 L1745.35 690.635 L1745.91 690.635 L1746.47 690.635 L1747.03 690.635 L1747.59 690.635 L1748.15 690.635 L1748.71 690.635 L1749.27 690.635 L1749.83 690.635 L1750.39 690.635 L1750.95 690.635 L1751.51 690.635 L1752.06 690.635 L1752.62 690.635 L1753.18 690.635 L1753.74 690.635 L1754.3 690.635 L1754.86 690.635 L1755.42 690.635 L1755.98 690.635 L1756.54 690.635 L1757.1 690.635 L1757.66 690.635 L1758.22 690.635 L1758.78 690.635 L1759.34 690.635 L1759.89 690.635 L1760.45 690.635 L1761.01 690.635 L1761.57 690.635 L1762.13 690.635 L1762.69 690.635 L1763.25 690.635 L1763.81 690.635 L1764.37 690.635 L1764.93 690.635 L1765.49 690.635 L1766.05 690.635 L1766.61 690.635 L1767.16 690.635 L1767.72 690.635 L1768.28 690.635 L1768.84 690.635 L1769.4 690.635 L1769.96 690.635 L1770.52 690.635 L1771.08 690.635 L1771.64 690.635 L1772.2 690.635 L1772.76 690.635 L1773.32 690.635 L1773.88 690.635 L1774.43 690.635 L1774.99 690.635 L1775.55 690.635 L1776.11 690.635 L1776.67 690.635 L1777.23 690.635 L1777.79 690.635 L1778.35 690.635 L1778.91 690.635 L1779.47 690.635 L1780.03 690.635 L1780.59 690.635 L1781.15 690.635 L1781.71 690.635 L1782.26 690.635 L1782.82 690.635 L1783.38 690.635 L1783.94 690.635 L1784.5 690.635 L1785.06 690.635 L1785.62 690.635 L1786.18 690.635 L1786.74 690.635 L1787.3 690.635 L1787.86 690.635 L1788.42 690.635 L1788.98 690.635 L1789.53 690.635 L1790.09 690.635 L1790.65 690.635 L1791.21 690.635 L1791.77 690.635 L1792.33 690.635 L1792.89 690.635 L1793.45 690.635 L1794.01 690.635 L1794.57 690.635 L1795.13 690.635 L1795.69 690.635 L1796.25 690.635 L1796.8 690.635 L1797.36 690.635 L1797.92 690.635 L1798.48 690.635 L1799.04 690.635 L1799.6 690.635 L1800.16 690.635 L1800.72 690.635 L1801.28 690.635 L1801.84 690.635 L1802.4 690.635 L1802.96 690.635 L1803.52 690.635 L1804.08 690.635 L1804.63 690.635 L1805.19 690.635 L1805.75 690.635 L1806.31 690.635 L1806.87 690.635 L1807.43 690.635 L1807.99 690.635 L1808.55 690.635 L1809.11 690.635 L1809.67 690.635 L1810.23 690.635 L1810.79 690.635 L1811.35 690.635 L1811.9 690.635 L1812.46 690.635 L1813.02 690.635 L1813.58 690.635 L1814.14 690.635 L1814.7 690.635 L1815.26 690.635 L1815.82 690.635 L1816.38 690.635 L1816.94 690.635 L1817.5 690.635 L1818.06 690.635 L1818.62 690.635 L1819.18 690.635 L1819.73 690.635 L1820.29 690.635 L1820.85 690.635 L1821.41 690.635 L1821.97 690.635 L1822.53 690.635 L1823.09 690.635 L1823.65 690.635 L1824.21 690.635 L1824.77 690.635 L1825.33 690.635 L1825.89 690.635 L1826.45 690.635 L1827 690.635 L1827.56 690.635 L1828.12 690.635 L1828.68 690.635 L1829.24 690.635 L1829.8 690.635 L1830.36 690.635 L1830.92 690.635 L1831.48 690.635 L1832.04 690.635 L1832.6 690.635 L1833.16 690.635 L1833.72 690.635 L1834.27 690.635 L1834.83 690.635 L1835.39 690.635 L1835.95 690.635 L1836.51 690.635 L1837.07 690.635 L1837.63 690.635 L1838.19 690.635 L1838.19 682.783 L1837.63 682.783 L1837.07 682.783 L1836.51 682.783 L1835.95 682.783 L1835.39 682.783 L1834.83 682.783 L1834.27 682.783 L1833.72 682.783 L1833.16 682.783 L1832.6 682.783 L1832.04 682.783 L1831.48 682.783 L1830.92 682.783 L1830.36 682.783 L1829.8 682.783 L1829.24 682.783 L1828.68 682.783 L1828.12 682.783 L1827.56 682.783 L1827 682.783 L1826.45 682.783 L1825.89 682.783 L1825.33 682.783 L1824.77 682.783 L1824.21 682.783 L1823.65 682.783 L1823.09 682.783 L1822.53 682.783 L1821.97 682.783 L1821.41 682.783 L1820.85 682.783 L1820.29 682.783 L1819.73 682.783 L1819.18 682.783 L1818.62 682.783 L1818.06 682.783 L1817.5 682.783 L1816.94 682.783 L1816.38 682.783 L1815.82 682.783 L1815.26 682.783 L1814.7 682.783 L1814.14 682.783 L1813.58 682.783 L1813.02 682.783 L1812.46 682.783 L1811.9 682.783 L1811.35 682.783 L1810.79 682.783 L1810.23 682.783 L1809.67 682.783 L1809.11 682.783 L1808.55 682.783 L1807.99 682.783 L1807.43 682.783 L1806.87 682.783 L1806.31 682.783 L1805.75 682.783 L1805.19 682.783 L1804.63 682.783 L1804.08 682.783 L1803.52 682.783 L1802.96 682.783 L1802.4 682.783 L1801.84 682.783 L1801.28 682.783 L1800.72 682.783 L1800.16 682.783 L1799.6 682.783 L1799.04 682.783 L1798.48 682.783 L1797.92 682.783 L1797.36 682.783 L1796.8 682.783 L1796.25 682.783 L1795.69 682.783 L1795.13 682.783 L1794.57 682.783 L1794.01 682.783 L1793.45 682.783 L1792.89 682.783 L1792.33 682.783 L1791.77 682.783 L1791.21 682.783 L1790.65 682.783 L1790.09 682.783 L1789.53 682.783 L1788.98 682.783 L1788.42 682.783 L1787.86 682.783 L1787.3 682.783 L1786.74 682.783 L1786.18 682.783 L1785.62 682.783 L1785.06 682.783 L1784.5 682.783 L1783.94 682.783 L1783.38 682.783 L1782.82 682.783 L1782.26 682.783 L1781.71 682.783 L1781.15 682.783 L1780.59 682.783 L1780.03 682.783 L1779.47 682.783 L1778.91 682.783 L1778.35 682.783 L1777.79 682.783 L1777.23 682.783 L1776.67 682.783 L1776.11 682.783 L1775.55 682.783 L1774.99 682.783 L1774.43 682.783 L1773.88 682.783 L1773.32 682.783 L1772.76 682.783 L1772.2 682.783 L1771.64 682.783 L1771.08 682.783 L1770.52 682.783 L1769.96 682.783 L1769.4 682.783 L1768.84 682.783 L1768.28 682.783 L1767.72 682.783 L1767.16 682.783 L1766.61 682.783 L1766.05 682.783 L1765.49 682.783 L1764.93 682.783 L1764.37 682.783 L1763.81 682.783 L1763.25 682.783 L1762.69 682.783 L1762.13 682.783 L1761.57 682.783 L1761.01 682.783 L1760.45 682.783 L1759.89 682.783 L1759.34 682.783 L1758.78 682.783 L1758.22 682.783 L1757.66 682.783 L1757.1 682.783 L1756.54 682.783 L1755.98 682.783 L1755.42 682.783 L1754.86 682.783 L1754.3 682.783 L1753.74 682.783 L1753.18 682.783 L1752.62 682.783 L1752.06 682.783 L1751.51 682.783 L1750.95 682.783 L1750.39 682.783 L1749.83 682.783 L1749.27 682.783 L1748.71 682.783 L1748.15 682.783 L1747.59 682.783 L1747.03 682.783 L1746.47 682.783 L1745.91 682.783 L1745.35 682.783 L1744.79 682.783 L1744.24 682.783 L1743.68 682.783 L1743.12 682.783 L1742.56 682.783 L1742 682.783 L1741.44 682.783 L1740.88 682.783 L1740.32 682.783 L1739.76 682.783 L1739.2 682.783 L1738.64 682.783 L1738.08 682.783 L1737.52 682.783 L1736.97 682.783 L1736.41 682.783 L1735.85 682.783 L1735.29 682.783 L1734.73 682.783 L1734.17 682.783 L1733.61 682.783 L1733.05 682.783 L1732.49 682.783 L1731.93 682.783 L1731.37 682.783 L1730.81 682.783 L1730.25 682.783 L1729.69 682.783 L1729.14 682.783 L1728.58 682.783 L1728.02 682.783 L1727.46 682.783 L1726.9 682.783 L1726.34 682.783 L1725.78 682.783 L1725.22 682.783 L1724.66 682.783 L1724.1 682.783 L1723.54 682.783 L1722.98 682.783 L1722.42 682.783 L1721.87 682.783 L1721.31 682.783 L1720.75 682.783 L1720.19 682.783 L1719.63 682.783 L1719.07 682.783 L1718.51 682.783 L1717.95 682.783 L1717.39 682.783 L1716.83 682.783 L1716.27 682.783 L1715.71 682.783 L1715.15 682.783 L1714.6 682.783 L1714.04 682.783 L1713.48 682.783 L1712.92 682.783 L1712.36 682.783 L1711.8 682.783 L1711.24 682.783 L1710.68 682.783 L1710.12 682.783 L1709.56 682.783 L1709 682.783 L1708.44 682.783 L1707.88 682.783 L1707.32 682.783 L1706.77 682.783 L1706.21 682.783 L1705.65 682.783 L1705.09 682.783 L1704.53 682.783 L1703.97 682.783 L1703.41 682.783 L1702.85 682.783 L1702.29 682.783 L1701.73 682.783 L1701.17 682.783 L1700.61 682.783 L1700.05 682.783 L1699.5 682.783 L1698.94 682.783 L1698.38 682.783 L1697.82 682.783 L1697.26 682.783 L1696.7 682.783 L1696.14 682.783 L1695.58 682.783 L1695.02 682.783 L1694.46 682.783 L1693.9 682.783 L1693.34 682.783 L1692.78 682.783 L1692.23 682.783 L1691.67 682.783 L1691.11 682.783 L1690.55 682.783 L1689.99 682.783 L1689.43 682.783 L1688.87 682.783 L1688.31 682.783 L1687.75 682.783 L1687.19 682.783 L1686.63 682.783 L1686.07 682.783 L1685.51 682.783 L1684.95 682.783 L1684.4 682.783 L1683.84 682.783 L1683.28 682.783 L1682.72 682.783 L1682.16 682.783 L1681.6 682.783 L1681.04 682.783 L1680.48 682.783 L1679.92 682.783 L1679.36 682.783 L1678.8 682.783 L1678.24 682.783 L1677.68 682.783 L1677.13 682.783 L1676.57 682.783 L1676.01 682.783 L1675.45 682.783 L1674.89 682.783 L1674.33 682.783 L1673.77 682.783 L1673.21 682.783 L1672.65 682.783 L1672.09 682.783 L1671.53 682.783 L1670.97 682.783 L1670.41 682.783 L1669.85 682.783 L1669.3 682.783 L1668.74 682.783 L1668.18 682.783 L1667.62 682.783 L1667.06 682.783 L1666.5 682.783 L1665.94 682.783 L1665.38 682.783 L1664.82 682.783 L1664.26 682.783 L1663.7 682.783 L1663.14 682.783 L1662.58 682.783 L1662.03 682.783 L1661.47 682.783 L1660.91 682.783 L1660.35 682.783 L1659.79 682.783 L1659.23 682.783 L1658.67 682.783 L1658.11 682.783 L1657.55 682.783 L1656.99 682.783 L1656.43 682.783 L1655.87 682.783 L1655.31 682.783 L1654.76 682.783 L1654.2 682.783 L1653.64 682.783 L1653.08 682.783 L1652.52 682.783 L1651.96 682.783 L1651.4 682.783 L1650.84 682.783 L1650.28 682.783 L1649.72 682.783 L1649.16 682.783 L1648.6 682.783 L1648.04 682.783 L1647.48 682.783 L1646.93 682.783 L1646.37 682.783 L1645.81 682.783 L1645.25 682.783 L1644.69 682.783 L1644.13 682.783 L1643.57 682.783 L1643.01 682.783 L1642.45 682.783 L1641.89 682.783 L1641.33 682.783 L1640.77 682.783 L1640.21 682.783 L1639.66 682.783 L1639.1 682.783 L1638.54 682.783 L1637.98 682.783 L1637.42 682.783 L1636.86 682.783 L1636.3 682.783 L1635.74 682.783 L1635.18 682.783 L1634.62 682.783 L1634.06 682.783 L1633.5 682.783 L1632.94 682.783 L1632.39 682.783 L1631.83 682.783 L1631.27 682.783 L1630.71 682.783 L1630.15 682.783 L1629.59 682.783 L1629.03 682.783 L1628.47 682.783 L1627.91 682.783 L1627.35 682.783 L1626.79 682.783 L1626.23 682.783 L1625.67 682.783 L1625.11 682.783 L1624.56 682.783 L1624 682.783 L1623.44 682.783 L1622.88 682.783 L1622.32 682.783 L1621.76 682.783 L1621.2 682.783 L1620.64 682.783 L1620.08 682.783 L1619.52 682.783 L1618.96 682.783 L1618.4 682.783 L1617.84 682.783 L1617.29 682.783 L1616.73 682.783 L1616.17 682.783 L1615.61 682.783 L1615.05 682.783 L1614.49 682.783 L1613.93 682.783 L1613.37 682.783 L1612.81 682.783 L1612.25 682.783 L1611.69 682.783 L1611.13 682.783 L1610.57 682.783 L1610.02 682.783 L1609.46 682.783 L1608.9 682.783 L1608.34 682.783 L1607.78 682.783 L1607.22 682.783 L1606.66 682.783 L1606.1 682.783 L1605.54 682.783 L1604.98 682.783 L1604.42 682.783 L1603.86 682.783 L1603.3 682.783 L1602.74 682.783 L1602.19 682.783 L1601.63 682.783 L1601.07 682.783 L1600.51 682.783 L1599.95 682.783 L1599.39 682.783 L1598.83 682.783 L1598.27 682.783 L1597.71 682.783 L1597.15 682.783 L1596.59 682.783 L1596.03 682.783 L1595.47 682.783 L1594.92 682.783 L1594.36 682.783 L1593.8 682.783 L1593.24 682.783 L1592.68 682.783 L1592.12 682.783 L1591.56 682.783 L1591 682.783 L1590.44 682.783 L1589.88 682.783 L1589.32 682.783 L1588.76 682.783 L1588.2 682.783 L1587.65 682.783 L1587.09 682.783 L1586.53 682.783 L1585.97 682.783 L1585.41 682.783 L1584.85 682.783 L1584.29 682.783 L1583.73 682.783 L1583.17 682.783 L1582.61 682.783 L1582.05 682.783 L1581.49 682.783 L1580.93 682.783 L1580.37 682.783 L1579.82 682.783 L1579.26 682.783 L1578.7 682.783 L1578.14 682.783 L1577.58 682.783 L1577.02 682.783 L1576.46 682.783 L1575.9 682.783 L1575.34 682.783 L1574.78 682.783 L1574.22 682.783 L1573.66 682.783 L1573.1 682.783 L1572.55 682.783 L1571.99 682.783 L1571.43 682.783 L1570.87 682.783 L1570.31 682.783 L1569.75 682.783 L1569.19 682.783 L1568.63 682.783 L1568.07 682.783 L1567.51 682.783 L1566.95 682.783 L1566.39 682.783 L1565.83 682.783 L1565.28 682.783 L1564.72 682.783 L1564.16 682.783 L1563.6 682.783 L1563.04 682.783 L1562.48 682.783 L1561.92 682.783 L1561.36 682.783 L1560.8 682.783 L1560.24 682.783 L1559.68 682.783 L1559.12 682.783 L1558.56 682.783 L1558 682.783 L1557.45 682.783 L1556.89 682.783 L1556.33 682.783 L1555.77 682.783 L1555.21 682.783 L1554.65 682.783 L1554.09 682.783 L1553.53 682.783 L1552.97 682.783 L1552.41 682.783 L1551.85 682.783 L1551.29 682.783 L1550.73 682.783 L1550.18 682.783 L1549.62 682.783 L1549.06 682.783 L1548.5 682.783 L1547.94 682.783 L1547.38 682.783 L1546.82 682.783 L1546.26 682.783 L1545.7 682.783 L1545.14 682.783 L1544.58 682.783 L1544.02 682.783 L1543.46 682.783 L1542.9 682.783 L1542.35 682.783 L1541.79 682.783 L1541.23 682.783 L1540.67 682.783 L1540.11 682.783 L1539.55 682.783 L1538.99 682.783 L1538.43 682.783 L1537.87 682.783 L1537.31 682.783 L1536.75 682.783 L1536.19 682.783 L1535.63 682.783 L1535.08 682.783 L1534.52 682.783 L1533.96 682.783 L1533.4 682.783 L1532.84 682.783 L1532.28 682.783 L1531.72 682.783 L1531.16 682.783 L1530.6 682.783 L1530.04 682.783 L1529.48 682.783 L1528.92 682.783 L1528.36 682.783 L1527.81 682.783 L1527.25 682.783 L1526.69 682.783 L1526.13 682.783 L1525.57 682.783 L1525.01 682.783 L1524.45 682.783 L1523.89 682.783 L1523.33 682.783 L1522.77 682.783 L1522.21 682.783 L1521.65 682.783 L1521.09 682.783 L1520.53 682.783 L1519.98 682.783 L1519.42 682.783 L1518.86 682.783 L1518.3 682.783 L1517.74 682.783 L1517.18 682.783 L1516.62 682.783 L1516.06 682.783 L1515.5 682.783 L1514.94 682.783 L1514.38 682.783 L1513.82 682.783 L1513.26 682.783 L1512.71 682.783 L1512.15 682.783 L1511.59 682.783 L1511.03 682.783 L1510.47 682.783 L1509.91 682.783 L1509.35 682.783 L1508.79 682.783 L1508.23 682.783 L1507.67 682.783 L1507.11 682.783 L1506.55 682.783 L1505.99 682.783 L1505.44 682.783 L1504.88 682.783 L1504.32 682.783 L1503.76 682.783 L1503.2 682.783 L1502.64 682.783 L1502.08 682.783 L1501.52 682.783 L1500.96 682.783 L1500.4 682.783 L1499.84 682.783 L1499.28 682.783 L1498.72 682.783 L1498.16 682.783 L1497.61 682.783 L1497.05 682.783 L1496.49 682.783 L1495.93 682.783 L1495.37 682.783 L1494.81 682.783 L1494.25 682.783 L1493.69 682.783 L1493.13 682.783 L1492.57 682.783 L1492.01 682.783 L1491.45 682.783 L1490.89 682.783 L1490.34 682.783 L1489.78 682.783 L1489.22 682.783 L1488.66 682.783 L1488.1 682.783 L1487.54 682.783 L1486.98 682.783 L1486.42 682.783 L1485.86 682.783 L1485.3 682.783 L1484.74 682.783 L1484.18 682.783 L1483.62 682.783 L1483.07 682.783 L1482.51 682.783 L1481.95 682.783 L1481.39 682.783 L1480.83 682.783 L1480.27 682.783 L1479.71 682.783 L1479.15 682.783 L1478.59 682.783 L1478.03 682.783 L1477.47 682.783 L1476.91 682.783 L1476.35 682.783 L1475.79 682.783 L1475.24 682.783 L1474.68 682.783 L1474.12 682.783 L1473.56 682.783 L1473 682.783 L1472.44 682.783 L1471.88 682.783 L1471.32 682.783 L1470.76 682.783 L1470.2 682.783 L1469.64 682.783 L1469.08 682.783 L1468.52 682.783 L1467.97 682.783 L1467.41 682.783 L1466.85 682.783 L1466.29 682.783 L1465.73 682.783 L1465.17 682.783 L1464.61 682.783 L1464.05 682.783 L1463.49 682.783 L1462.93 682.783 L1462.37 682.783 L1461.81 682.783 L1461.25 682.783 L1460.7 682.783 L1460.14 682.783 L1459.58 682.783 L1459.02 682.783 L1458.46 682.783 L1457.9 682.783 L1457.34 682.783 L1456.78 682.783 L1456.22 682.783 L1455.66 682.783 L1455.1 682.783 L1454.54 682.783 L1453.98 682.783 L1453.42 682.783 L1452.87 682.783 L1452.31 682.783 L1451.75 682.783 L1451.19 682.783 L1450.63 682.783 L1450.07 682.783 L1449.51 682.783 L1448.95 682.783 L1448.39 682.783 L1447.83 682.783 L1447.27 682.783 L1446.71 682.783 L1446.15 682.783 L1445.6 682.783 L1445.04 682.783 L1444.48 682.783 L1443.92 682.783 L1443.36 682.783 L1442.8 682.783 L1442.24 682.783 L1441.68 682.783 L1441.12 682.783 L1440.56 682.783 L1440 682.783 L1439.44 682.783 L1438.88 682.783 L1438.33 682.783 L1437.77 682.783 L1437.21 682.783 L1436.65 682.783 L1436.09 682.783 L1435.53 682.783 L1434.97 682.783 L1434.41 682.783 L1433.85 682.783 L1433.29 682.783 L1432.73 682.783 L1432.17 682.783 L1431.61 682.783 L1431.05 682.783 L1430.5 682.783 L1429.94 682.783 L1429.38 682.783 L1428.82 682.783 L1428.26 682.783 L1427.7 682.783 L1427.14 682.783 L1426.58 682.783 L1426.02 682.783 L1425.46 682.783 L1424.9 682.783 L1424.34 682.783 L1423.78 682.783 L1423.23 682.783 L1422.67 682.783 L1422.11 682.783 L1421.55 682.783 L1420.99 682.783 L1420.43 682.783 L1419.87 682.783 L1419.31 682.783 L1418.75 682.783 L1418.19 682.783 L1417.63 682.783 L1417.07 682.783 L1416.51 682.783 L1415.95 682.783 L1415.4 682.783 L1414.84 682.783 L1414.28 682.783 L1413.72 682.783 L1413.16 682.783 L1412.6 682.783 L1412.04 682.783 L1411.48 682.783 L1410.92 682.783 L1410.36 682.783 L1409.8 682.783 L1409.24 682.783 L1408.68 682.783 L1408.13 682.783 L1407.57 682.783 L1407.01 682.783 L1406.45 682.783 L1405.89 682.783 L1405.33 682.783 L1404.77 682.783 L1404.21 682.783 L1403.65 682.783 L1403.09 682.783 L1402.53 682.783 L1401.97 682.783 L1401.41 682.783 L1400.86 682.783 L1400.3 682.783 L1399.74 682.783 L1399.18 682.783 L1398.62 682.783 L1398.06 682.783 L1397.5 682.783 L1396.94 682.783 L1396.38 682.783 L1395.82 682.783 L1395.26 682.783 L1394.7 682.783 L1394.14 682.783 L1393.58 682.783 L1393.03 682.783 L1392.47 682.783 L1391.91 682.783 L1391.35 682.783 L1390.79 682.783 L1390.23 682.783 L1389.67 682.783 L1389.11 682.783 L1388.55 682.783 L1387.99 682.783 L1387.43 682.783 L1386.87 682.783 L1386.31 682.783 L1385.76 682.783 L1385.2 682.783 L1384.64 682.783 L1384.08 682.783 L1383.52 682.783 L1382.96 682.783 L1382.4 682.783 L1381.84 682.783 L1381.28 682.783 L1380.72 682.783 L1380.16 682.783 L1379.6 682.783 L1379.04 682.783 L1378.49 682.783 L1377.93 682.783 L1377.37 682.783 L1376.81 682.783 L1376.25 682.783 L1375.69 682.783 L1375.13 682.783 L1374.57 682.783 L1374.01 682.783 L1373.45 682.783 L1372.89 682.783 L1372.33 682.783 L1371.77 682.783 L1371.21 682.783 L1370.66 682.783 L1370.1 682.783 L1369.54 682.783 L1368.98 682.783 L1368.42 682.783 L1367.86 682.783 L1367.3 682.783 L1366.74 682.783 L1366.18 682.783 L1365.62 682.783 L1365.06 682.783 L1364.5 682.783 L1363.94 682.783 L1363.39 682.783 L1362.83 682.783 L1362.27 682.783 L1361.71 682.783 L1361.15 682.783 L1360.59 682.783 L1360.03 682.783 L1359.47 682.783 L1358.91 682.783 L1358.35 682.783 L1357.79 682.783 L1357.23 682.783 L1356.67 682.783 L1356.12 682.783 L1355.56 682.783 L1355 682.783 L1354.44 682.783 L1353.88 682.783 L1353.32 682.783 L1352.76 682.783 L1352.2 682.783 L1351.64 682.783 L1351.08 682.783 L1350.52 682.783 L1349.96 682.783 L1349.4 682.783 L1348.84 682.783 L1348.29 682.783 L1347.73 682.783 L1347.17 682.783 L1346.61 682.783 L1346.05 682.783 L1345.49 682.783 L1344.93 682.783 L1344.37 682.783 L1343.81 682.783 L1343.25 682.783 L1342.69 682.783 L1342.13 682.783 L1341.57 682.783 L1341.02 682.783 L1340.46 682.783 L1339.9 682.783 L1339.34 682.783 L1338.78 682.783 L1338.22 682.783 L1337.66 682.783 L1337.1 682.783 L1336.54 682.783 L1335.98 682.783 L1335.42 682.783 L1334.86 682.783 L1334.3 682.783 L1333.75 682.783 L1333.19 682.783 L1332.63 682.783 L1332.07 682.783 L1331.51 682.783 L1330.95 682.783 L1330.39 682.783 L1329.83 682.783 L1329.27 682.783 L1328.71 682.783 L1328.15 682.783 L1327.59 682.783 L1327.03 682.783 L1326.47 682.783 L1325.92 682.783 L1325.36 682.783 L1324.8 682.783 L1324.24 682.783 L1323.68 682.783 L1323.12 682.783 L1322.56 682.783 L1322 682.783 L1321.44 682.783 L1320.88 682.783 L1320.32 682.783 L1319.76 682.783 L1319.2 682.783 L1318.65 682.783 L1318.09 682.783 L1317.53 682.783 L1316.97 682.783 L1316.41 682.783 L1315.85 682.783 L1315.29 682.783 L1314.73 682.783 L1314.17 682.783 L1313.61 682.783 L1313.05 682.783 L1312.49 682.783 L1311.93 682.783 L1311.38 682.783 L1310.82 682.783 L1310.26 682.783 L1309.7 682.783 L1309.14 682.783 L1308.58 682.783 L1308.02 682.783 L1307.46 682.783 L1306.9 682.783 L1306.34 682.783 L1305.78 682.783 L1305.22 682.783 L1304.66 682.783 L1304.1 682.783 L1303.55 682.783 L1302.99 682.783 L1302.43 682.783 L1301.87 682.783 L1301.31 682.783 L1300.75 682.783 L1300.19 682.783 L1299.63 682.783 L1299.07 682.783 L1298.51 682.783 L1297.95 682.783 L1297.39 682.783 L1296.83 682.783 L1296.28 682.783 L1295.72 682.783 L1295.16 682.783 L1294.6 682.783 L1294.04 682.783 L1293.48 682.783 L1292.92 682.783 L1292.36 682.783 L1291.8 682.783 L1291.24 682.783 L1290.68 682.783 L1290.12 682.783 L1289.56 682.783 L1289 682.783 L1288.45 682.783 L1287.89 682.783 L1287.33 682.783 L1286.77 682.783 L1286.21 682.783 L1285.65 682.783 L1285.09 682.783 L1284.53 682.783 L1283.97 682.783 L1283.41 682.783 L1282.85 682.783 L1282.29 682.783 L1281.73 682.783 L1281.18 682.783 L1280.62 682.783 L1280.06 682.783 L1279.5 682.783 L1278.94 682.783 L1278.38 682.783 L1277.82 682.783 L1277.26 682.783 L1276.7 682.783 L1276.14 682.783 L1275.58 682.783 L1275.02 682.783 L1274.46 682.783 L1273.91 682.783 L1273.35 682.783 L1272.79 682.783 L1272.23 682.783 L1271.67 682.783 L1271.11 682.783 L1270.55 682.783 L1269.99 682.783 L1269.43 682.783 L1268.87 682.783 L1268.31 682.783 L1267.75 682.783 L1267.19 682.783 L1266.63 682.783 L1266.08 682.783 L1265.52 682.783 L1264.96 682.783 L1264.4 682.783 L1263.84 682.783 L1263.28 682.783 L1262.72 682.783 L1262.16 682.783 L1261.6 682.783 L1261.04 682.783 L1260.48 682.783 L1259.92 682.783 L1259.36 682.783 L1258.81 682.783 L1258.25 682.783 L1257.69 682.783 L1257.13 682.783 L1256.57 682.783 L1256.01 682.783 L1255.45 682.783 L1254.89 682.783 L1254.33 682.783 L1253.77 682.783 L1253.21 682.783 L1252.65 682.783 L1252.09 682.783 L1251.54 682.783 L1250.98 682.783 L1250.42 682.783 L1249.86 682.783 L1249.3 682.783 L1248.74 682.783 L1248.18 682.783 L1247.62 682.783 L1247.06 682.783 L1246.5 682.783 L1245.94 682.783 L1245.38 682.783 L1244.82 682.783 L1244.26 682.783 L1243.71 682.783 L1243.15 682.783 L1242.59 682.783 L1242.03 682.783 L1241.47 682.783 L1240.91 682.783 L1240.35 682.783 L1239.79 682.783 L1239.23 682.783 L1238.67 682.783 L1238.11 682.783 L1237.55 682.783 L1236.99 682.783 L1236.44 682.783 L1235.88 682.783 L1235.32 682.783 L1234.76 682.783 L1234.2 682.783 L1233.64 682.783 L1233.08 682.783 L1232.52 682.783 L1231.96 682.783 L1231.4 682.783 L1230.84 682.783 L1230.28 682.783 L1229.72 682.783 L1229.17 682.783 L1228.61 682.783 L1228.05 682.783 L1227.49 682.783 L1226.93 682.783 L1226.37 682.783 L1225.81 682.783 L1225.25 682.783 L1224.69 682.783 L1224.13 682.783 L1223.57 682.783 L1223.01 682.783 L1222.45 682.783 L1221.89 682.783 L1221.34 682.783 L1220.78 682.783 L1220.22 682.783 L1219.66 682.783 L1219.1 682.783 L1218.54 682.783 L1217.98 682.783 L1217.42 682.783 L1216.86 682.783 L1216.3 682.783 L1215.74 682.783 L1215.18 682.783 L1214.62 682.783 L1214.07 682.783 L1213.51 682.783 L1212.95 682.783 L1212.39 682.783 L1211.83 682.783 L1211.27 682.783 L1210.71 682.783 L1210.15 682.783 L1209.59 682.783 L1209.03 682.783 L1208.47 682.783 L1207.91 682.783 L1207.35 682.783 L1206.8 682.783 L1206.24 682.783 L1205.68 682.783 L1205.12 682.783 L1204.56 682.783 L1204 682.783 L1203.44 682.783 L1202.88 682.783 L1202.32 682.783 L1201.76 682.783 L1201.2 682.783 L1200.64 682.783 L1200.08 682.783 L1199.52 682.783 L1198.97 682.783 L1198.41 682.783 L1197.85 682.783 L1197.29 682.783 L1196.73 682.783 L1196.17 682.783 L1195.61 682.783 L1195.05 682.783 L1194.49 682.783 L1193.93 682.783 L1193.37 682.783 L1192.81 682.783 L1192.25 682.783 L1191.7 682.783 L1191.14 682.783 L1190.58 682.783 L1190.02 682.783 L1189.46 682.783 L1188.9 682.783 L1188.34 682.783 L1187.78 682.783 L1187.22 682.783 L1186.66 682.783 L1186.1 682.783 L1185.54 682.783 L1184.98 682.783 L1184.43 682.783 L1183.87 682.783 L1183.31 682.783 L1182.75 682.783 L1182.19 682.783 L1181.63 682.783 L1181.07 682.783 L1180.51 682.783 L1179.95 682.783 L1179.39 682.783 L1178.83 682.783 L1178.27 682.783 L1177.71 682.783 L1177.15 682.783 L1176.6 682.783 L1176.04 682.783 L1175.48 682.783 L1174.92 682.783 L1174.36 682.783 L1173.8 682.783 L1173.24 682.783 L1172.68 682.783 L1172.12 682.783 L1171.56 682.783 L1171 682.783 L1170.44 682.783 L1169.88 682.783 L1169.33 682.783 L1168.77 682.783 L1168.21 682.783 L1167.65 682.783 L1167.09 682.783 L1166.53 682.783 L1165.97 682.783 L1165.41 682.783 L1164.85 682.783 L1164.29 682.783 L1163.73 682.783 L1163.17 682.783 L1162.61 682.783 L1162.05 682.783 L1161.5 682.783 L1160.94 682.783 L1160.38 682.783 L1159.82 682.783 L1159.26 682.783 L1158.7 682.783 L1158.14 682.783 L1157.58 682.783 L1157.02 682.783 L1156.46 682.783 L1155.9 682.783 L1155.34 682.783 L1154.78 682.783 L1154.23 682.783 L1153.67 682.783 L1153.11 682.783 L1152.55 682.783 L1151.99 682.783 L1151.43 682.783 L1150.87 682.783 L1150.31 682.783 L1149.75 682.783 L1149.19 682.783 L1148.63 682.783 L1148.07 682.783 L1147.51 682.783 L1146.96 682.783 L1146.4 682.783 L1145.84 682.783 L1145.28 682.783 L1144.72 682.783 L1144.16 682.783 L1143.6 682.783 L1143.04 682.783 L1142.48 682.783 L1141.92 682.783 L1141.36 682.783 L1140.8 682.783 L1140.24 682.783 L1139.68 682.783 L1139.13 682.783 L1138.57 682.783 L1138.01 682.783 L1137.45 682.783 L1136.89 682.783 L1136.33 682.783 L1135.77 682.783 L1135.21 682.783 L1134.65 682.783 L1134.09 682.783 L1133.53 682.783 L1132.97 682.783 L1132.41 682.783 L1131.86 682.783 L1131.3 682.783 L1130.74 682.783 L1130.18 682.783 L1129.62 682.783 L1129.06 682.783 L1128.5 682.783 L1127.94 682.783 L1127.38 682.783 L1126.82 682.783 L1126.26 682.783 L1125.7 682.783 L1125.14 682.783 L1124.59 682.783 L1124.03 682.783 L1123.47 682.783 L1122.91 682.783 L1122.35 682.783 L1121.79 682.783 L1121.23 682.783 L1120.67 682.783 L1120.11 682.783 L1119.55 682.783 L1118.99 682.783 L1118.43 682.783 L1117.87 682.783 L1117.31 682.783 L1116.76 682.783 L1116.2 682.783 L1115.64 682.783 L1115.08 682.783 L1114.52 682.783 L1113.96 682.783 L1113.4 682.783 L1112.84 682.783 L1112.28 682.783 L1111.72 682.783 L1111.16 682.783 L1110.6 682.783 L1110.04 682.783 L1109.49 682.783 L1108.93 682.783 L1108.37 682.783 L1107.81 682.783 L1107.25 682.783 L1106.69 682.783 L1106.13 682.783 L1105.57 682.783 L1105.01 682.783 L1104.45 682.783 L1103.89 682.783 L1103.33 682.783 L1102.77 682.783 L1102.22 682.783 L1101.66 682.783 L1101.1 682.783 L1100.54 682.783 L1099.98 682.783 L1099.42 682.783 L1098.86 682.783 L1098.3 682.783 L1097.74 682.783 L1097.18 682.783 L1096.62 682.783 L1096.06 682.783 L1095.5 682.783 L1094.94 682.783 L1094.39 682.783 L1093.83 682.783 L1093.27 682.783 L1092.71 682.783 L1092.15 682.783 L1091.59 682.783 L1091.03 682.783 L1090.47 682.783 L1089.91 682.783 L1089.35 682.783 L1088.79 682.783 L1088.23 682.783 L1087.67 682.783 L1087.12 682.783 L1086.56 682.783 L1086 682.783 L1085.44 682.783 L1084.88 682.783 L1084.32 682.783 L1083.76 682.783 L1083.2 682.783 L1082.64 682.783 L1082.08 682.783 L1081.52 682.783 L1080.96 682.783 L1080.4 682.783 L1079.85 682.783 L1079.29 682.783 L1078.73 682.783 L1078.17 682.783 L1077.61 682.783 L1077.05 682.783 L1076.49 682.783 L1075.93 682.783 L1075.37 682.783 L1074.81 682.783 L1074.25 682.783 L1073.69 682.783 L1073.13 682.783 L1072.57 682.783 L1072.02 682.783 L1071.46 682.783 L1070.9 682.783 L1070.34 682.783 L1069.78 682.783 L1069.22 682.783 L1068.66 682.783 L1068.1 682.783 L1067.54 682.783 L1066.98 682.783 L1066.42 682.783 L1065.86 682.783 L1065.3 682.783 L1064.75 682.783 L1064.19 682.783 L1063.63 682.783 L1063.07 682.783 L1062.51 682.783 L1061.95 682.783 L1061.39 682.783 L1060.83 682.783 L1060.27 682.783 L1059.71 682.783 L1059.15 682.783 L1058.59 682.783 L1058.03 682.783 L1057.48 682.783 L1056.92 682.783 L1056.36 682.783 L1055.8 682.783 L1055.24 682.783 L1054.68 682.783 L1054.12 682.783 L1053.56 682.783 L1053 682.783 L1052.44 682.783 L1051.88 682.783 L1051.32 682.783 L1050.76 682.783 L1050.2 682.783 L1049.65 682.783 L1049.09 682.783 L1048.53 682.783 L1047.97 682.783 L1047.41 682.783 L1046.85 682.783 L1046.29 682.783 L1045.73 682.783 L1045.17 682.783 L1044.61 682.783 L1044.05 682.783 L1043.49 682.783 L1042.93 682.783 L1042.38 682.783 L1041.82 682.783 L1041.26 682.783 L1040.7 682.783 L1040.14 682.783 L1039.58 682.783 L1039.02 682.783 L1038.46 682.783 L1037.9 682.783 L1037.34 682.783 L1036.78 682.783 L1036.22 682.783 L1035.66 682.783 L1035.1 682.783 L1034.55 682.783 L1033.99 682.783 L1033.43 682.783 L1032.87 682.783 L1032.31 682.783 L1031.75 682.783 L1031.19 682.783 L1030.63 682.783 L1030.07 682.783 L1029.51 682.783 L1028.95 682.783 L1028.39 682.783 L1027.83 682.783 L1027.28 682.783 L1026.72 682.783 L1026.16 682.783 L1025.6 682.783 L1025.04 682.783 L1024.48 682.783 L1023.92 682.783 L1023.36 682.783 L1022.8 682.783 L1022.24 682.783 L1021.68 682.783 L1021.12 682.783 L1020.56 682.783 L1020.01 682.783 L1019.45 682.783 L1018.89 682.783 L1018.33 682.783 L1017.77 682.783 L1017.21 682.783 L1016.65 682.783 L1016.09 682.783 L1015.53 682.783 L1014.97 682.783 L1014.41 682.783 L1013.85 682.783 L1013.29 682.783 L1012.73 682.783 L1012.18 682.783 L1011.62 682.783 L1011.06 682.783 L1010.5 682.783 L1009.94 682.783 L1009.38 682.783 L1008.82 682.783 L1008.26 682.783 L1007.7 682.783 L1007.14 682.783 L1006.58 682.783 L1006.02 682.783 L1005.46 682.783 L1004.91 682.783 L1004.35 682.783 L1003.79 682.783 L1003.23 682.783 L1002.67 682.783 L1002.11 682.783 L1001.55 682.783 L1000.99 682.783 L1000.43 682.783 L999.872 682.783 L999.313 682.783 L998.754 682.783 L998.194 682.783 L997.635 682.783 L997.076 682.783 L996.517 682.783 L995.957 682.783 L995.398 682.783 L994.839 682.783 L994.28 682.783 L993.72 682.783 L993.161 682.783 L992.602 682.783 L992.043 682.783 L991.483 682.783 L990.924 682.783 L990.365 682.783 L989.806 682.783 L989.246 682.783 L988.687 682.783 L988.128 682.783 L987.569 682.783 L987.009 682.783 L986.45 682.783 L985.891 682.783 L985.332 682.783 L984.772 682.783 L984.213 682.783 L983.654 682.783 L983.095 682.783 L982.535 682.783 L981.976 682.783 L981.417 682.783 L980.858 682.783 L980.298 682.783 L979.739 682.783 L979.18 682.783 L978.621 682.783 L978.061 682.783 L977.502 682.783 L976.943 682.783 L976.384 682.783 L975.824 682.783 L975.265 682.783 L974.706 682.783 L974.147 682.783 L973.587 682.783 L973.028 682.783 L972.469 682.783 L971.91 682.783 L971.35 682.783 L970.791 682.783 L970.232 682.783 L969.673 682.783 L969.113 682.783 L968.554 682.783 L967.995 682.783 L967.436 682.783 L966.876 682.783 L966.317 682.783 L965.758 682.783 L965.199 682.783 L964.639 682.783 L964.08 682.783 L963.521 682.783 L962.962 682.783 L962.402 682.783 L961.843 682.783 L961.284 682.783 L960.725 682.783 L960.165 682.783 L959.606 682.783 L959.047 682.783 L958.488 682.783 L957.928 682.783 L957.369 682.783 L956.81 682.783 L956.251 682.783 L955.691 682.783 L955.132 682.783 L954.573 682.783 L954.014 682.783 L953.454 682.783 L952.895 682.783 L952.336 682.783 L951.777 682.783 L951.217 682.783 L950.658 682.783 L950.099 682.783 L949.54 682.783 L948.98 682.783 L948.421 682.783 L947.862 682.783 L947.303 682.783 L946.743 682.783 L946.184 682.783 L945.625 682.783 L945.066 682.783 L944.506 682.783 L943.947 682.783 L943.388 682.783 L942.829 682.783 L942.269 682.783 L941.71 682.783 L941.151 682.783 L940.592 682.783 L940.032 682.783 L939.473 682.783 L938.914 682.783 L938.355 682.783 L937.795 682.783 L937.236 682.783 L936.677 682.783 L936.118 682.783 L935.558 682.783 L934.999 682.783 L934.44 682.783 L933.881 682.783 L933.321 682.783 L932.762 682.783 L932.203 682.783 L931.644 682.783 L931.084 682.783 L930.525 682.783 L929.966 682.783 L929.406 682.783 L928.847 682.783 L928.288 682.783 L927.729 682.783 L927.169 682.783 L926.61 682.783 L926.051 682.783 L925.492 682.783 L924.932 682.783 L924.373 682.783 L923.814 682.783 L923.255 682.783 L922.695 682.783 L922.136 682.783 L921.577 682.783 L921.018 682.783 L920.458 682.783 L919.899 682.783 L919.34 682.783 L918.781 682.783 L918.221 682.783 L917.662 682.783 L917.103 682.783 L916.544 682.783 L915.984 682.783 L915.425 682.783 L914.866 682.783 L914.307 682.783 L913.747 682.783 L913.188 682.783 L912.629 682.783 L912.07 682.783 L911.51 682.783 L910.951 682.783 L910.392 682.783 L909.833 682.783 L909.273 682.783 L908.714 682.783 L908.155 682.783 L907.596 682.783 L907.036 682.783 L906.477 682.783 L905.918 682.783 L905.359 682.783 L904.799 682.783 L904.24 682.783 L903.681 682.783 L903.122 682.783 L902.562 682.783 L902.003 682.783 L901.444 682.783 L900.885 682.783 L900.325 682.783 L899.766 682.783 L899.207 682.783 L898.648 682.783 L898.088 682.783 L897.529 682.783 L896.97 682.783 L896.411 682.783 L895.851 682.783 L895.292 682.783 L894.733 682.783 L894.174 682.783 L893.614 682.783 L893.055 682.783 L892.496 682.783 L891.937 682.783 L891.377 682.783 L890.818 682.783 L890.259 682.783 L889.7 682.783 L889.14 682.783 L888.581 682.783 L888.022 682.783 L887.463 682.783 L886.903 682.783 L886.344 682.783 L885.785 682.783 L885.226 682.783 L884.666 682.783 L884.107 682.783 L883.548 682.783 L882.989 682.783 L882.429 682.783 L881.87 682.783 L881.311 682.783 L880.752 682.783 L880.192 682.783 L879.633 682.783 L879.074 682.783 L878.515 682.783 L877.955 682.783 L877.396 682.783 L876.837 682.783 L876.278 682.783 L875.718 682.783 L875.159 682.783 L874.6 682.783 L874.041 682.783 L873.481 682.783 L872.922 682.783 L872.363 682.783 L871.804 682.783 L871.244 682.783 L870.685 682.783 L870.126 682.783 L869.567 682.783 L869.007 682.783 L868.448 682.783 L867.889 682.783 L867.33 682.783 L866.77 682.783 L866.211 682.783 L865.652 682.783 L865.093 682.783 L864.533 682.783 L863.974 682.783 L863.415 682.783 L862.856 682.783 L862.296 682.783 L861.737 682.783 L861.178 682.783 L860.619 682.783 L860.059 682.783 L859.5 682.783 L858.941 682.783 L858.382 682.783 L857.822 682.783 L857.263 682.783 L856.704 682.783 L856.145 682.783 L855.585 682.783 L855.026 682.783 L854.467 682.783 L853.908 682.783 L853.348 682.783 L852.789 682.783 L852.23 682.783 L851.671 682.783 L851.111 682.783 L850.552 682.783 L849.993 682.783 L849.434 682.783 L848.874 682.783 L848.315 682.783 L847.756 682.783 L847.197 682.783 L846.637 682.783 L846.078 682.783 L845.519 682.783 L844.96 682.783 L844.4 682.783 L843.841 682.783 L843.282 682.783 L842.723 682.783 L842.163 682.783 L841.604 682.783 L841.045 682.783 L840.486 682.783 L839.926 682.783 L839.367 682.783 L838.808 682.783 L838.249 682.783 L837.689 682.783 L837.13 682.783 L836.571 682.783 L836.012 682.783 L835.452 682.783 L834.893 682.783 L834.334 682.783 L833.775 682.783 L833.215 682.783 L832.656 682.783 L832.097 682.783 L831.538 682.783 L830.978 682.783 L830.419 682.783 L829.86 682.783 L829.301 682.783 L828.741 682.783 L828.182 682.783 L827.623 682.783 L827.064 682.783 L826.504 682.783 L825.945 682.783 L825.386 682.783 L824.827 682.783 L824.267 682.783 L823.708 682.783 L823.149 682.783 L822.59 682.783 L822.03 682.783 L821.471 682.783 L820.912 682.783 L820.353 682.783 L819.793 682.783 L819.234 682.783 L818.675 682.783 L818.116 682.783 L817.556 682.783 L816.997 682.783 L816.438 682.783 L815.879 682.783 L815.319 682.783 L814.76 682.783 L814.201 682.783 L813.642 682.783 L813.082 682.783 L812.523 682.783 L811.964 682.783 L811.405 682.783 L810.845 682.783 L810.286 682.783 L809.727 682.783 L809.168 682.783 L808.608 682.783 L808.049 682.783 L807.49 682.783 L806.931 682.783 L806.371 682.783 L805.812 682.783 L805.253 682.783 L804.693 682.783 L804.134 682.783 L803.575 682.783 L803.016 682.783 L802.456 682.783 L801.897 682.783 L801.338 682.783 L800.779 682.783 L800.219 682.783 L799.66 682.783 L799.101 682.783 L798.542 682.783 L797.982 682.783 L797.423 682.783 L796.864 682.783 L796.305 682.783 L795.745 682.783 L795.186 682.783 L794.627 682.783 L794.068 682.783 L793.508 682.783 L792.949 682.783 L792.39 682.783 L791.831 682.783 L791.271 682.783 L790.712 682.783 L790.153 682.783 L789.594 682.783 L789.034 682.783 L788.475 682.783 L787.916 682.783 L787.357 682.783 L786.797 682.783 L786.238 682.783 L785.679 682.783 L785.12 682.783 L784.56 682.783 L784.001 682.783 L783.442 682.783 L782.883 682.783 L782.323 682.783 L781.764 682.783 L781.205 682.783 L780.646 682.783 L780.086 682.783 L779.527 682.783 L778.968 682.783 L778.409 682.783 L777.849 682.783 L777.29 682.783 L776.731 682.783 L776.172 682.783 L775.612 682.783 L775.053 682.783 L774.494 682.783 L773.935 682.783 L773.375 682.783 L772.816 682.783 L772.257 682.783 L771.698 682.783 L771.138 682.783 L770.579 682.783 L770.02 682.783 L769.461 682.783 L768.901 682.783 L768.342 682.783 L767.783 682.783 L767.224 682.783 L766.664 682.783 L766.105 682.783 L765.546 682.783 L764.987 682.783 L764.427 682.783 L763.868 682.783 L763.309 682.783 L762.75 682.783 L762.19 682.783 L761.631 682.783 L761.072 682.783 L760.513 682.783 L759.953 682.783 L759.394 682.783 L758.835 682.783 L758.276 682.783 L757.716 682.783 L757.157 682.783 L756.598 682.783 L756.039 682.783 L755.479 682.783 L754.92 682.783 L754.361 682.783 L753.802 682.783 L753.242 682.783 L752.683 682.783 L752.124 682.783 L751.565 682.783 L751.005 682.783 L750.446 682.783 L749.887 682.783 L749.328 682.783 L748.768 682.783 L748.209 682.783 L747.65 682.783 L747.091 682.783 L746.531 682.783 L745.972 682.783 L745.413 682.783 L744.854 682.783 L744.294 682.783 L743.735 682.783 L743.176 682.783 L742.617 682.783 L742.057 682.783 L741.498 682.783 L740.939 682.783 L740.38 682.783 L739.82 682.783 L739.261 682.783 L738.702 682.783 L738.143 682.783 L737.583 682.783 L737.024 682.783 L736.465 682.783 L735.906 682.783 L735.346 682.783 L734.787 682.783 L734.228 682.783 L733.669 682.783 L733.109 682.783 L732.55 682.783 L731.991 682.783 L731.432 682.783 L730.872 682.783 L730.313 682.783 L729.754 682.783 L729.195 682.783 L728.635 682.783 L728.076 682.783 L727.517 682.783 L726.958 682.783 L726.398 682.783 L725.839 682.783 L725.28 682.783 L724.721 682.783 L724.161 682.783 L723.602 682.783 L723.043 682.783 L722.484 682.783 L721.924 682.783 L721.365 682.783 L720.806 682.783 L720.247 682.783  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.709 720.806,686.709 721.365,686.709 721.924,686.709 722.484,686.709 723.043,686.709 723.602,686.709 724.161,686.709 724.721,686.709 725.28,686.709 725.839,686.709 726.398,686.709 726.958,686.709 727.517,686.709 728.076,686.709 728.635,686.709 729.195,686.709 729.754,686.709 730.313,686.709 730.872,686.709 731.432,686.709 731.991,686.709 732.55,686.709 733.109,686.709 733.669,686.709 734.228,686.709 734.787,686.709 735.346,686.709 735.906,686.709 736.465,686.709 737.024,686.709 737.583,686.709 738.143,686.709 738.702,686.709 739.261,686.709 739.82,686.709 740.38,686.709 740.939,686.709 741.498,686.709 742.057,686.709 742.617,686.709 743.176,686.709 743.735,686.709 744.294,686.709 744.854,686.709 745.413,686.709 745.972,686.709 746.531,686.709 747.091,686.709 747.65,686.709 748.209,686.709 748.768,686.709 749.328,686.709 749.887,686.709 750.446,686.709 751.005,686.709 751.565,686.709 752.124,686.709 752.683,686.709 753.242,686.709 753.802,686.709 754.361,686.709 754.92,686.709 755.479,686.709 756.039,686.709 756.598,686.709 757.157,686.709 757.716,686.709 758.276,686.709 758.835,686.709 759.394,686.709 759.953,686.709 760.513,686.709 761.072,686.709 761.631,686.709 762.19,686.709 762.75,686.709 763.309,686.709 763.868,686.709 764.427,686.709 764.987,686.709 765.546,686.709 766.105,686.709 766.664,686.709 767.224,686.709 767.783,686.709 768.342,686.709 768.901,686.709 769.461,686.709 770.02,686.709 770.579,686.709 771.138,686.709 771.698,686.709 772.257,686.709 772.816,686.709 773.375,686.709 773.935,686.709 774.494,686.709 775.053,686.709 775.612,686.709 776.172,686.709 776.731,686.709 777.29,686.709 777.849,686.709 778.409,686.709 778.968,686.709 779.527,686.709 780.086,686.709 780.646,686.709 781.205,686.709 781.764,686.709 782.323,686.709 782.883,686.709 783.442,686.709 784.001,686.709 784.56,686.709 785.12,686.709 785.679,686.709 786.238,686.709 786.797,686.709 787.357,686.709 787.916,686.709 788.475,686.709 789.034,686.709 789.594,686.709 790.153,686.709 790.712,686.709 791.271,686.709 791.831,686.709 792.39,686.709 792.949,686.709 793.508,686.709 794.068,686.709 794.627,686.709 795.186,686.709 795.745,686.709 796.305,686.709 796.864,686.709 797.423,686.709 797.982,686.709 798.542,686.709 799.101,686.709 799.66,686.709 800.219,686.709 800.779,686.709 801.338,686.709 801.897,686.709 802.456,686.709 803.016,686.709 803.575,686.709 804.134,686.709 804.693,686.709 805.253,686.709 805.812,686.709 806.371,686.709 806.931,686.709 807.49,686.709 808.049,686.709 808.608,686.709 809.168,686.709 809.727,686.709 810.286,686.709 810.845,686.709 811.405,686.709 811.964,686.709 812.523,686.709 813.082,686.709 813.642,686.709 814.201,686.709 814.76,686.709 815.319,686.709 815.879,686.709 816.438,686.709 816.997,686.709 817.556,686.709 818.116,686.709 818.675,686.709 819.234,686.709 819.793,686.709 820.353,686.709 820.912,686.709 821.471,686.709 822.03,686.709 822.59,686.709 823.149,686.709 823.708,686.709 824.267,686.709 824.827,686.709 825.386,686.709 825.945,686.709 826.504,686.709 827.064,686.709 827.623,686.709 828.182,686.709 828.741,686.709 829.301,686.709 829.86,686.709 830.419,686.709 830.978,686.709 831.538,686.709 832.097,686.709 832.656,686.709 833.215,686.709 833.775,686.709 834.334,686.709 834.893,686.709 835.452,686.709 836.012,686.709 836.571,686.709 837.13,686.709 837.689,686.709 838.249,686.709 838.808,686.709 839.367,686.709 839.926,686.709 840.486,686.709 841.045,686.709 841.604,686.709 842.163,686.709 842.723,686.709 843.282,686.709 843.841,686.709 844.4,686.709 844.96,686.709 845.519,686.709 846.078,686.709 846.637,686.709 847.197,686.709 847.756,686.709 848.315,686.709 848.874,686.709 849.434,686.709 849.993,686.709 850.552,686.709 851.111,686.709 851.671,686.709 852.23,686.709 852.789,686.709 853.348,686.709 853.908,686.709 854.467,686.709 855.026,686.709 855.585,686.709 856.145,686.709 856.704,686.709 857.263,686.709 857.822,686.709 858.382,686.709 858.941,686.709 859.5,686.709 860.059,686.709 860.619,686.709 861.178,686.709 861.737,686.709 862.296,686.709 862.856,686.709 863.415,686.709 863.974,686.709 864.533,686.709 865.093,686.709 865.652,686.709 866.211,686.709 866.77,686.709 867.33,686.709 867.889,686.709 868.448,686.709 869.007,686.709 869.567,686.709 870.126,686.709 870.685,686.709 871.244,686.709 871.804,686.709 872.363,686.709 872.922,686.709 873.481,686.709 874.041,686.709 874.6,686.709 875.159,686.709 875.718,686.709 876.278,686.709 876.837,686.709 877.396,686.709 877.955,686.709 878.515,686.709 879.074,686.709 879.633,686.709 880.192,686.709 880.752,686.709 881.311,686.709 881.87,686.709 882.429,686.709 882.989,686.709 883.548,686.709 884.107,686.709 884.666,686.709 885.226,686.709 885.785,686.709 886.344,686.709 886.903,686.709 887.463,686.709 888.022,686.709 888.581,686.709 889.14,686.709 889.7,686.709 890.259,686.709 890.818,686.709 891.377,686.709 891.937,686.709 892.496,686.709 893.055,686.709 893.614,686.709 894.174,686.709 894.733,686.709 895.292,686.709 895.851,686.709 896.411,686.709 896.97,686.709 897.529,686.709 898.088,686.709 898.648,686.709 899.207,686.709 899.766,686.709 900.325,686.709 900.885,686.709 901.444,686.709 902.003,686.709 902.562,686.709 903.122,686.709 903.681,686.709 904.24,686.709 904.799,686.709 905.359,686.709 905.918,686.709 906.477,686.709 907.036,686.709 907.596,686.709 908.155,686.709 908.714,686.709 909.273,686.709 909.833,686.709 910.392,686.709 910.951,686.709 911.51,686.709 912.07,686.709 912.629,686.709 913.188,686.709 913.747,686.709 914.307,686.709 914.866,686.709 915.425,686.709 915.984,686.709 916.544,686.709 917.103,686.709 917.662,686.709 918.221,686.709 918.781,686.709 919.34,686.709 919.899,686.709 920.458,686.709 921.018,686.709 921.577,686.709 922.136,686.709 922.695,686.709 923.255,686.709 923.814,686.709 924.373,686.709 924.932,686.709 925.492,686.709 926.051,686.709 926.61,686.709 927.169,686.709 927.729,686.709 928.288,686.709 928.847,686.709 929.406,686.709 929.966,686.709 930.525,686.709 931.084,686.709 931.644,686.709 932.203,686.709 932.762,686.709 933.321,686.709 933.881,686.709 934.44,686.709 934.999,686.709 935.558,686.709 936.118,686.709 936.677,686.709 937.236,686.709 937.795,686.709 938.355,686.709 938.914,686.709 939.473,686.709 940.032,686.709 940.592,686.709 941.151,686.709 941.71,686.709 942.269,686.709 942.829,686.709 943.388,686.709 943.947,686.709 944.506,686.709 945.066,686.709 945.625,686.709 946.184,686.709 946.743,686.709 947.303,686.709 947.862,686.709 948.421,686.709 948.98,686.709 949.54,686.709 950.099,686.709 950.658,686.709 951.217,686.709 951.777,686.709 952.336,686.709 952.895,686.709 953.454,686.709 954.014,686.709 954.573,686.709 955.132,686.709 955.691,686.709 956.251,686.709 956.81,686.709 957.369,686.709 957.928,686.709 958.488,686.709 959.047,686.709 959.606,686.709 960.165,686.709 960.725,686.709 961.284,686.709 961.843,686.709 962.402,686.709 962.962,686.709 963.521,686.709 964.08,686.709 964.639,686.709 965.199,686.709 965.758,686.709 966.317,686.709 966.876,686.709 967.436,686.709 967.995,686.709 968.554,686.709 969.113,686.709 969.673,686.709 970.232,686.709 970.791,686.709 971.35,686.709 971.91,686.709 972.469,686.709 973.028,686.709 973.587,686.709 974.147,686.709 974.706,686.709 975.265,686.709 975.824,686.709 976.384,686.709 976.943,686.709 977.502,686.709 978.061,686.709 978.621,686.709 979.18,686.709 979.739,686.709 980.298,686.709 980.858,686.709 981.417,686.709 981.976,686.709 982.535,686.709 983.095,686.709 983.654,686.709 984.213,686.709 984.772,686.709 985.332,686.709 985.891,686.709 986.45,686.709 987.009,686.709 987.569,686.709 988.128,686.709 988.687,686.709 989.246,686.709 989.806,686.709 990.365,686.709 990.924,686.709 991.483,686.709 992.043,686.709 992.602,686.709 993.161,686.709 993.72,686.709 994.28,686.709 994.839,686.709 995.398,686.709 995.957,686.709 996.517,686.709 997.076,686.709 997.635,686.709 998.194,686.709 998.754,686.709 999.313,686.709 999.872,686.709 1000.43,686.709 1000.99,686.709 1001.55,686.709 1002.11,686.709 1002.67,686.709 1003.23,686.709 1003.79,686.709 1004.35,686.709 1004.91,686.709 1005.46,686.709 1006.02,686.709 1006.58,686.709 1007.14,686.709 1007.7,686.709 1008.26,686.709 1008.82,686.709 1009.38,686.709 1009.94,686.709 1010.5,686.709 1011.06,686.709 1011.62,686.709 1012.18,686.709 1012.73,686.709 1013.29,686.709 1013.85,686.709 1014.41,686.709 1014.97,686.709 1015.53,686.709 1016.09,686.709 1016.65,686.709 1017.21,686.709 1017.77,686.709 1018.33,686.709 1018.89,686.709 1019.45,686.709 1020.01,686.709 1020.56,686.709 1021.12,686.709 1021.68,686.709 1022.24,686.709 1022.8,686.709 1023.36,686.709 1023.92,686.709 1024.48,686.709 1025.04,686.709 1025.6,686.709 1026.16,686.709 1026.72,686.709 1027.28,686.709 1027.83,686.709 1028.39,686.709 1028.95,686.709 1029.51,686.709 1030.07,686.709 1030.63,686.709 1031.19,686.709 1031.75,686.709 1032.31,686.709 1032.87,686.709 1033.43,686.709 1033.99,686.709 1034.55,686.709 1035.1,686.709 1035.66,686.709 1036.22,686.709 1036.78,686.709 1037.34,686.709 1037.9,686.709 1038.46,686.709 1039.02,686.709 1039.58,686.709 1040.14,686.709 1040.7,686.709 1041.26,686.709 1041.82,686.709 1042.38,686.709 1042.93,686.709 1043.49,686.709 1044.05,686.709 1044.61,686.709 1045.17,686.709 1045.73,686.709 1046.29,686.709 1046.85,686.709 1047.41,686.709 1047.97,686.709 1048.53,686.709 1049.09,686.709 1049.65,686.709 1050.2,686.709 1050.76,686.709 1051.32,686.709 1051.88,686.709 1052.44,686.709 1053,686.709 1053.56,686.709 1054.12,686.709 1054.68,686.709 1055.24,686.709 1055.8,686.709 1056.36,686.709 1056.92,686.709 1057.48,686.709 1058.03,686.709 1058.59,686.709 1059.15,686.709 1059.71,686.709 1060.27,686.709 1060.83,686.709 1061.39,686.709 1061.95,686.709 1062.51,686.709 1063.07,686.709 1063.63,686.709 1064.19,686.709 1064.75,686.709 1065.3,686.709 1065.86,686.709 1066.42,686.709 1066.98,686.709 1067.54,686.709 1068.1,686.709 1068.66,686.709 1069.22,686.709 1069.78,686.709 1070.34,686.709 1070.9,686.709 1071.46,686.709 1072.02,686.709 1072.57,686.709 1073.13,686.709 1073.69,686.709 1074.25,686.709 1074.81,686.709 1075.37,686.709 1075.93,686.709 1076.49,686.709 1077.05,686.709 1077.61,686.709 1078.17,686.709 1078.73,686.709 1079.29,686.709 1079.85,686.709 1080.4,686.709 1080.96,686.709 1081.52,686.709 1082.08,686.709 1082.64,686.709 1083.2,686.709 1083.76,686.709 1084.32,686.709 1084.88,686.709 1085.44,686.709 1086,686.709 1086.56,686.709 1087.12,686.709 1087.67,686.709 1088.23,686.709 1088.79,686.709 1089.35,686.709 1089.91,686.709 1090.47,686.709 1091.03,686.709 1091.59,686.709 1092.15,686.709 1092.71,686.709 1093.27,686.709 1093.83,686.709 1094.39,686.709 1094.94,686.709 1095.5,686.709 1096.06,686.709 1096.62,686.709 1097.18,686.709 1097.74,686.709 1098.3,686.709 1098.86,686.709 1099.42,686.709 1099.98,686.709 1100.54,686.709 1101.1,686.709 1101.66,686.709 1102.22,686.709 1102.77,686.709 1103.33,686.709 1103.89,686.709 1104.45,686.709 1105.01,686.709 1105.57,686.709 1106.13,686.709 1106.69,686.709 1107.25,686.709 1107.81,686.709 1108.37,686.709 1108.93,686.709 1109.49,686.709 1110.04,686.709 1110.6,686.709 1111.16,686.709 1111.72,686.709 1112.28,686.709 1112.84,686.709 1113.4,686.709 1113.96,686.709 1114.52,686.709 1115.08,686.709 1115.64,686.709 1116.2,686.709 1116.76,686.709 1117.31,686.709 1117.87,686.709 1118.43,686.709 1118.99,686.709 1119.55,686.709 1120.11,686.709 1120.67,686.709 1121.23,686.709 1121.79,686.709 1122.35,686.709 1122.91,686.709 1123.47,686.709 1124.03,686.709 1124.59,686.709 1125.14,686.709 1125.7,686.709 1126.26,686.709 1126.82,686.709 1127.38,686.709 1127.94,686.709 1128.5,686.709 1129.06,686.709 1129.62,686.709 1130.18,686.709 1130.74,686.709 1131.3,686.709 1131.86,686.709 1132.41,686.709 1132.97,686.709 1133.53,686.709 1134.09,686.709 1134.65,686.709 1135.21,686.709 1135.77,686.709 1136.33,686.709 1136.89,686.709 1137.45,686.709 1138.01,686.709 1138.57,686.709 1139.13,686.709 1139.68,686.709 1140.24,686.709 1140.8,686.709 1141.36,686.709 1141.92,686.709 1142.48,686.709 1143.04,686.709 1143.6,686.709 1144.16,686.709 1144.72,686.709 1145.28,686.709 1145.84,686.709 1146.4,686.709 1146.96,686.709 1147.51,686.709 1148.07,686.709 1148.63,686.709 1149.19,686.709 1149.75,686.709 1150.31,686.709 1150.87,686.709 1151.43,686.709 1151.99,686.709 1152.55,686.709 1153.11,686.709 1153.67,686.709 1154.23,686.709 1154.78,686.709 1155.34,686.709 1155.9,686.709 1156.46,686.709 1157.02,686.709 1157.58,686.709 1158.14,686.709 1158.7,686.709 1159.26,686.709 1159.82,686.709 1160.38,686.709 1160.94,686.709 1161.5,686.709 1162.05,686.709 1162.61,686.709 1163.17,686.709 1163.73,686.709 1164.29,686.709 1164.85,686.709 1165.41,686.709 1165.97,686.709 1166.53,686.709 1167.09,686.709 1167.65,686.709 1168.21,686.709 1168.77,686.709 1169.33,686.709 1169.88,686.709 1170.44,686.709 1171,686.709 1171.56,686.709 1172.12,686.709 1172.68,686.709 1173.24,686.709 1173.8,686.709 1174.36,686.709 1174.92,686.709 1175.48,686.709 1176.04,686.709 1176.6,686.709 1177.15,686.709 1177.71,686.709 1178.27,686.709 1178.83,686.709 1179.39,686.709 1179.95,686.709 1180.51,686.709 1181.07,686.709 1181.63,686.709 1182.19,686.709 1182.75,686.709 1183.31,686.709 1183.87,686.709 1184.43,686.709 1184.98,686.709 1185.54,686.709 1186.1,686.709 1186.66,686.709 1187.22,686.709 1187.78,686.709 1188.34,686.709 1188.9,686.709 1189.46,686.709 1190.02,686.709 1190.58,686.709 1191.14,686.709 1191.7,686.709 1192.25,686.709 1192.81,686.709 1193.37,686.709 1193.93,686.709 1194.49,686.709 1195.05,686.709 1195.61,686.709 1196.17,686.709 1196.73,686.709 1197.29,686.709 1197.85,686.709 1198.41,686.709 1198.97,686.709 1199.52,686.709 1200.08,686.709 1200.64,686.709 1201.2,686.709 1201.76,686.709 1202.32,686.709 1202.88,686.709 1203.44,686.709 1204,686.709 1204.56,686.709 1205.12,686.709 1205.68,686.709 1206.24,686.709 1206.8,686.709 1207.35,686.709 1207.91,686.709 1208.47,686.709 1209.03,686.709 1209.59,686.709 1210.15,686.709 1210.71,686.709 1211.27,686.709 1211.83,686.709 1212.39,686.709 1212.95,686.709 1213.51,686.709 1214.07,686.709 1214.62,686.709 1215.18,686.709 1215.74,686.709 1216.3,686.709 1216.86,686.709 1217.42,686.709 1217.98,686.709 1218.54,686.709 1219.1,686.709 1219.66,686.709 1220.22,686.709 1220.78,686.709 1221.34,686.709 1221.89,686.709 1222.45,686.709 1223.01,686.709 1223.57,686.709 1224.13,686.709 1224.69,686.709 1225.25,686.709 1225.81,686.709 1226.37,686.709 1226.93,686.709 1227.49,686.709 1228.05,686.709 1228.61,686.709 1229.17,686.709 1229.72,686.709 1230.28,686.709 1230.84,686.709 1231.4,686.709 1231.96,686.709 1232.52,686.709 1233.08,686.709 1233.64,686.709 1234.2,686.709 1234.76,686.709 1235.32,686.709 1235.88,686.709 1236.44,686.709 1236.99,686.709 1237.55,686.709 1238.11,686.709 1238.67,686.709 1239.23,686.709 1239.79,686.709 1240.35,686.709 1240.91,686.709 1241.47,686.709 1242.03,686.709 1242.59,686.709 1243.15,686.709 1243.71,686.709 1244.26,686.709 1244.82,686.709 1245.38,686.709 1245.94,686.709 1246.5,686.709 1247.06,686.709 1247.62,686.709 1248.18,686.709 1248.74,686.709 1249.3,686.709 1249.86,686.709 1250.42,686.709 1250.98,686.709 1251.54,686.709 1252.09,686.709 1252.65,686.709 1253.21,686.709 1253.77,686.709 1254.33,686.709 1254.89,686.709 1255.45,686.709 1256.01,686.709 1256.57,686.709 1257.13,686.709 1257.69,686.709 1258.25,686.709 1258.81,686.709 1259.36,686.709 1259.92,686.709 1260.48,686.709 1261.04,686.709 1261.6,686.709 1262.16,686.709 1262.72,686.709 1263.28,686.709 1263.84,686.709 1264.4,686.709 1264.96,686.709 1265.52,686.709 1266.08,686.709 1266.63,686.709 1267.19,686.709 1267.75,686.709 1268.31,686.709 1268.87,686.709 1269.43,686.709 1269.99,686.709 1270.55,686.709 1271.11,686.709 1271.67,686.709 1272.23,686.709 1272.79,686.709 1273.35,686.709 1273.91,686.709 1274.46,686.709 1275.02,686.709 1275.58,686.709 1276.14,686.709 1276.7,686.709 1277.26,686.709 1277.82,686.709 1278.38,686.709 1278.94,686.709 1279.5,686.709 1280.06,686.709 1280.62,686.709 1281.18,686.709 1281.73,686.709 1282.29,686.709 1282.85,686.709 1283.41,686.709 1283.97,686.709 1284.53,686.709 1285.09,686.709 1285.65,686.709 1286.21,686.709 1286.77,686.709 1287.33,686.709 1287.89,686.709 1288.45,686.709 1289,686.709 1289.56,686.709 1290.12,686.709 1290.68,686.709 1291.24,686.709 1291.8,686.709 1292.36,686.709 1292.92,686.709 1293.48,686.709 1294.04,686.709 1294.6,686.709 1295.16,686.709 1295.72,686.709 1296.28,686.709 1296.83,686.709 1297.39,686.709 1297.95,686.709 1298.51,686.709 1299.07,686.709 1299.63,686.709 1300.19,686.709 1300.75,686.709 1301.31,686.709 1301.87,686.709 1302.43,686.709 1302.99,686.709 1303.55,686.709 1304.1,686.709 1304.66,686.709 1305.22,686.709 1305.78,686.709 1306.34,686.709 1306.9,686.709 1307.46,686.709 1308.02,686.709 1308.58,686.709 1309.14,686.709 1309.7,686.709 1310.26,686.709 1310.82,686.709 1311.38,686.709 1311.93,686.709 1312.49,686.709 1313.05,686.709 1313.61,686.709 1314.17,686.709 1314.73,686.709 1315.29,686.709 1315.85,686.709 1316.41,686.709 1316.97,686.709 1317.53,686.709 1318.09,686.709 1318.65,686.709 1319.2,686.709 1319.76,686.709 1320.32,686.709 1320.88,686.709 1321.44,686.709 1322,686.709 1322.56,686.709 1323.12,686.709 1323.68,686.709 1324.24,686.709 1324.8,686.709 1325.36,686.709 1325.92,686.709 1326.47,686.709 1327.03,686.709 1327.59,686.709 1328.15,686.709 1328.71,686.709 1329.27,686.709 1329.83,686.709 1330.39,686.709 1330.95,686.709 1331.51,686.709 1332.07,686.709 1332.63,686.709 1333.19,686.709 1333.75,686.709 1334.3,686.709 1334.86,686.709 1335.42,686.709 1335.98,686.709 1336.54,686.709 1337.1,686.709 1337.66,686.709 1338.22,686.709 1338.78,686.709 1339.34,686.709 1339.9,686.709 1340.46,686.709 1341.02,686.709 1341.57,686.709 1342.13,686.709 1342.69,686.709 1343.25,686.709 1343.81,686.709 1344.37,686.709 1344.93,686.709 1345.49,686.709 1346.05,686.709 1346.61,686.709 1347.17,686.709 1347.73,686.709 1348.29,686.709 1348.84,686.709 1349.4,686.709 1349.96,686.709 1350.52,686.709 1351.08,686.709 1351.64,686.709 1352.2,686.709 1352.76,686.709 1353.32,686.709 1353.88,686.709 1354.44,686.709 1355,686.709 1355.56,686.709 1356.12,686.709 1356.67,686.709 1357.23,686.709 1357.79,686.709 1358.35,686.709 1358.91,686.709 1359.47,686.709 1360.03,686.709 1360.59,686.709 1361.15,686.709 1361.71,686.709 1362.27,686.709 1362.83,686.709 1363.39,686.709 1363.94,686.709 1364.5,686.709 1365.06,686.709 1365.62,686.709 1366.18,686.709 1366.74,686.709 1367.3,686.709 1367.86,686.709 1368.42,686.709 1368.98,686.709 1369.54,686.709 1370.1,686.709 1370.66,686.709 1371.21,686.709 1371.77,686.709 1372.33,686.709 1372.89,686.709 1373.45,686.709 1374.01,686.709 1374.57,686.709 1375.13,686.709 1375.69,686.709 1376.25,686.709 1376.81,686.709 1377.37,686.709 1377.93,686.709 1378.49,686.709 1379.04,686.709 1379.6,686.709 1380.16,686.709 1380.72,686.709 1381.28,686.709 1381.84,686.709 1382.4,686.709 1382.96,686.709 1383.52,686.709 1384.08,686.709 1384.64,686.709 1385.2,686.709 1385.76,686.709 1386.31,686.709 1386.87,686.709 1387.43,686.709 1387.99,686.709 1388.55,686.709 1389.11,686.709 1389.67,686.709 1390.23,686.709 1390.79,686.709 1391.35,686.709 1391.91,686.709 1392.47,686.709 1393.03,686.709 1393.58,686.709 1394.14,686.709 1394.7,686.709 1395.26,686.709 1395.82,686.709 1396.38,686.709 1396.94,686.709 1397.5,686.709 1398.06,686.709 1398.62,686.709 1399.18,686.709 1399.74,686.709 1400.3,686.709 1400.86,686.709 1401.41,686.709 1401.97,686.709 1402.53,686.709 1403.09,686.709 1403.65,686.709 1404.21,686.709 1404.77,686.709 1405.33,686.709 1405.89,686.709 1406.45,686.709 1407.01,686.709 1407.57,686.709 1408.13,686.709 1408.68,686.709 1409.24,686.709 1409.8,686.709 1410.36,686.709 1410.92,686.709 1411.48,686.709 1412.04,686.709 1412.6,686.709 1413.16,686.709 1413.72,686.709 1414.28,686.709 1414.84,686.709 1415.4,686.709 1415.95,686.709 1416.51,686.709 1417.07,686.709 1417.63,686.709 1418.19,686.709 1418.75,686.709 1419.31,686.709 1419.87,686.709 1420.43,686.709 1420.99,686.709 1421.55,686.709 1422.11,686.709 1422.67,686.709 1423.23,686.709 1423.78,686.709 1424.34,686.709 1424.9,686.709 1425.46,686.709 1426.02,686.709 1426.58,686.709 1427.14,686.709 1427.7,686.709 1428.26,686.709 1428.82,686.709 1429.38,686.709 1429.94,686.709 1430.5,686.709 1431.05,686.709 1431.61,686.709 1432.17,686.709 1432.73,686.709 1433.29,686.709 1433.85,686.709 1434.41,686.709 1434.97,686.709 1435.53,686.709 1436.09,686.709 1436.65,686.709 1437.21,686.709 1437.77,686.709 1438.33,686.709 1438.88,686.709 1439.44,686.709 1440,686.709 1440.56,686.709 1441.12,686.709 1441.68,686.709 1442.24,686.709 1442.8,686.709 1443.36,686.709 1443.92,686.709 1444.48,686.709 1445.04,686.709 1445.6,686.709 1446.15,686.709 1446.71,686.709 1447.27,686.709 1447.83,686.709 1448.39,686.709 1448.95,686.709 1449.51,686.709 1450.07,686.709 1450.63,686.709 1451.19,686.709 1451.75,686.709 1452.31,686.709 1452.87,686.709 1453.42,686.709 1453.98,686.709 1454.54,686.709 1455.1,686.709 1455.66,686.709 1456.22,686.709 1456.78,686.709 1457.34,686.709 1457.9,686.709 1458.46,686.709 1459.02,686.709 1459.58,686.709 1460.14,686.709 1460.7,686.709 1461.25,686.709 1461.81,686.709 1462.37,686.709 1462.93,686.709 1463.49,686.709 1464.05,686.709 1464.61,686.709 1465.17,686.709 1465.73,686.709 1466.29,686.709 1466.85,686.709 1467.41,686.709 1467.97,686.709 1468.52,686.709 1469.08,686.709 1469.64,686.709 1470.2,686.709 1470.76,686.709 1471.32,686.709 1471.88,686.709 1472.44,686.709 1473,686.709 1473.56,686.709 1474.12,686.709 1474.68,686.709 1475.24,686.709 1475.79,686.709 1476.35,686.709 1476.91,686.709 1477.47,686.709 1478.03,686.709 1478.59,686.709 1479.15,686.709 1479.71,686.709 1480.27,686.709 1480.83,686.709 1481.39,686.709 1481.95,686.709 1482.51,686.709 1483.07,686.709 1483.62,686.709 1484.18,686.709 1484.74,686.709 1485.3,686.709 1485.86,686.709 1486.42,686.709 1486.98,686.709 1487.54,686.709 1488.1,686.709 1488.66,686.709 1489.22,686.709 1489.78,686.709 1490.34,686.709 1490.89,686.709 1491.45,686.709 1492.01,686.709 1492.57,686.709 1493.13,686.709 1493.69,686.709 1494.25,686.709 1494.81,686.709 1495.37,686.709 1495.93,686.709 1496.49,686.709 1497.05,686.709 1497.61,686.709 1498.16,686.709 1498.72,686.709 1499.28,686.709 1499.84,686.709 1500.4,686.709 1500.96,686.709 1501.52,686.709 1502.08,686.709 1502.64,686.709 1503.2,686.709 1503.76,686.709 1504.32,686.709 1504.88,686.709 1505.44,686.709 1505.99,686.709 1506.55,686.709 1507.11,686.709 1507.67,686.709 1508.23,686.709 1508.79,686.709 1509.35,686.709 1509.91,686.709 1510.47,686.709 1511.03,686.709 1511.59,686.709 1512.15,686.709 1512.71,686.709 1513.26,686.709 1513.82,686.709 1514.38,686.709 1514.94,686.709 1515.5,686.709 1516.06,686.709 1516.62,686.709 1517.18,686.709 1517.74,686.709 1518.3,686.709 1518.86,686.709 1519.42,686.709 1519.98,686.709 1520.53,686.709 1521.09,686.709 1521.65,686.709 1522.21,686.709 1522.77,686.709 1523.33,686.709 1523.89,686.709 1524.45,686.709 1525.01,686.709 1525.57,686.709 1526.13,686.709 1526.69,686.709 1527.25,686.709 1527.81,686.709 1528.36,686.709 1528.92,686.709 1529.48,686.709 1530.04,686.709 1530.6,686.709 1531.16,686.709 1531.72,686.709 1532.28,686.709 1532.84,686.709 1533.4,686.709 1533.96,686.709 1534.52,686.709 1535.08,686.709 1535.63,686.709 1536.19,686.709 1536.75,686.709 1537.31,686.709 1537.87,686.709 1538.43,686.709 1538.99,686.709 1539.55,686.709 1540.11,686.709 1540.67,686.709 1541.23,686.709 1541.79,686.709 1542.35,686.709 1542.9,686.709 1543.46,686.709 1544.02,686.709 1544.58,686.709 1545.14,686.709 1545.7,686.709 1546.26,686.709 1546.82,686.709 1547.38,686.709 1547.94,686.709 1548.5,686.709 1549.06,686.709 1549.62,686.709 1550.18,686.709 1550.73,686.709 1551.29,686.709 1551.85,686.709 1552.41,686.709 1552.97,686.709 1553.53,686.709 1554.09,686.709 1554.65,686.709 1555.21,686.709 1555.77,686.709 1556.33,686.709 1556.89,686.709 1557.45,686.709 1558,686.709 1558.56,686.709 1559.12,686.709 1559.68,686.709 1560.24,686.709 1560.8,686.709 1561.36,686.709 1561.92,686.709 1562.48,686.709 1563.04,686.709 1563.6,686.709 1564.16,686.709 1564.72,686.709 1565.28,686.709 1565.83,686.709 1566.39,686.709 1566.95,686.709 1567.51,686.709 1568.07,686.709 1568.63,686.709 1569.19,686.709 1569.75,686.709 1570.31,686.709 1570.87,686.709 1571.43,686.709 1571.99,686.709 1572.55,686.709 1573.1,686.709 1573.66,686.709 1574.22,686.709 1574.78,686.709 1575.34,686.709 1575.9,686.709 1576.46,686.709 1577.02,686.709 1577.58,686.709 1578.14,686.709 1578.7,686.709 1579.26,686.709 1579.82,686.709 1580.37,686.709 1580.93,686.709 1581.49,686.709 1582.05,686.709 1582.61,686.709 1583.17,686.709 1583.73,686.709 1584.29,686.709 1584.85,686.709 1585.41,686.709 1585.97,686.709 1586.53,686.709 1587.09,686.709 1587.65,686.709 1588.2,686.709 1588.76,686.709 1589.32,686.709 1589.88,686.709 1590.44,686.709 1591,686.709 1591.56,686.709 1592.12,686.709 1592.68,686.709 1593.24,686.709 1593.8,686.709 1594.36,686.709 1594.92,686.709 1595.47,686.709 1596.03,686.709 1596.59,686.709 1597.15,686.709 1597.71,686.709 1598.27,686.709 1598.83,686.709 1599.39,686.709 1599.95,686.709 1600.51,686.709 1601.07,686.709 1601.63,686.709 1602.19,686.709 1602.74,686.709 1603.3,686.709 1603.86,686.709 1604.42,686.709 1604.98,686.709 1605.54,686.709 1606.1,686.709 1606.66,686.709 1607.22,686.709 1607.78,686.709 1608.34,686.709 1608.9,686.709 1609.46,686.709 1610.02,686.709 1610.57,686.709 1611.13,686.709 1611.69,686.709 1612.25,686.709 1612.81,686.709 1613.37,686.709 1613.93,686.709 1614.49,686.709 1615.05,686.709 1615.61,686.709 1616.17,686.709 1616.73,686.709 1617.29,686.709 1617.84,686.709 1618.4,686.709 1618.96,686.709 1619.52,686.709 1620.08,686.709 1620.64,686.709 1621.2,686.709 1621.76,686.709 1622.32,686.709 1622.88,686.709 1623.44,686.709 1624,686.709 1624.56,686.709 1625.11,686.709 1625.67,686.709 1626.23,686.709 1626.79,686.709 1627.35,686.709 1627.91,686.709 1628.47,686.709 1629.03,686.709 1629.59,686.709 1630.15,686.709 1630.71,686.709 1631.27,686.709 1631.83,686.709 1632.39,686.709 1632.94,686.709 1633.5,686.709 1634.06,686.709 1634.62,686.709 1635.18,686.709 1635.74,686.709 1636.3,686.709 1636.86,686.709 1637.42,686.709 1637.98,686.709 1638.54,686.709 1639.1,686.709 1639.66,686.709 1640.21,686.709 1640.77,686.709 1641.33,686.709 1641.89,686.709 1642.45,686.709 1643.01,686.709 1643.57,686.709 1644.13,686.709 1644.69,686.709 1645.25,686.709 1645.81,686.709 1646.37,686.709 1646.93,686.709 1647.48,686.709 1648.04,686.709 1648.6,686.709 1649.16,686.709 1649.72,686.709 1650.28,686.709 1650.84,686.709 1651.4,686.709 1651.96,686.709 1652.52,686.709 1653.08,686.709 1653.64,686.709 1654.2,686.709 1654.76,686.709 1655.31,686.709 1655.87,686.709 1656.43,686.709 1656.99,686.709 1657.55,686.709 1658.11,686.709 1658.67,686.709 1659.23,686.709 1659.79,686.709 1660.35,686.709 1660.91,686.709 1661.47,686.709 1662.03,686.709 1662.58,686.709 1663.14,686.709 1663.7,686.709 1664.26,686.709 1664.82,686.709 1665.38,686.709 1665.94,686.709 1666.5,686.709 1667.06,686.709 1667.62,686.709 1668.18,686.709 1668.74,686.709 1669.3,686.709 1669.85,686.709 1670.41,686.709 1670.97,686.709 1671.53,686.709 1672.09,686.709 1672.65,686.709 1673.21,686.709 1673.77,686.709 1674.33,686.709 1674.89,686.709 1675.45,686.709 1676.01,686.709 1676.57,686.709 1677.13,686.709 1677.68,686.709 1678.24,686.709 1678.8,686.709 1679.36,686.709 1679.92,686.709 1680.48,686.709 1681.04,686.709 1681.6,686.709 1682.16,686.709 1682.72,686.709 1683.28,686.709 1683.84,686.709 1684.4,686.709 1684.95,686.709 1685.51,686.709 1686.07,686.709 1686.63,686.709 1687.19,686.709 1687.75,686.709 1688.31,686.709 1688.87,686.709 1689.43,686.709 1689.99,686.709 1690.55,686.709 1691.11,686.709 1691.67,686.709 1692.23,686.709 1692.78,686.709 1693.34,686.709 1693.9,686.709 1694.46,686.709 1695.02,686.709 1695.58,686.709 1696.14,686.709 1696.7,686.709 1697.26,686.709 1697.82,686.709 1698.38,686.709 1698.94,686.709 1699.5,686.709 1700.05,686.709 1700.61,686.709 1701.17,686.709 1701.73,686.709 1702.29,686.709 1702.85,686.709 1703.41,686.709 1703.97,686.709 1704.53,686.709 1705.09,686.709 1705.65,686.709 1706.21,686.709 1706.77,686.709 1707.32,686.709 1707.88,686.709 1708.44,686.709 1709,686.709 1709.56,686.709 1710.12,686.709 1710.68,686.709 1711.24,686.709 1711.8,686.709 1712.36,686.709 1712.92,686.709 1713.48,686.709 1714.04,686.709 1714.6,686.709 1715.15,686.709 1715.71,686.709 1716.27,686.709 1716.83,686.709 1717.39,686.709 1717.95,686.709 1718.51,686.709 1719.07,686.709 1719.63,686.709 1720.19,686.709 1720.75,686.709 1721.31,686.709 1721.87,686.709 1722.42,686.709 1722.98,686.709 1723.54,686.709 1724.1,686.709 1724.66,686.709 1725.22,686.709 1725.78,686.709 1726.34,686.709 1726.9,686.709 1727.46,686.709 1728.02,686.709 1728.58,686.709 1729.14,686.709 1729.69,686.709 1730.25,686.709 1730.81,686.709 1731.37,686.709 1731.93,686.709 1732.49,686.709 1733.05,686.709 1733.61,686.709 1734.17,686.709 1734.73,686.709 1735.29,686.709 1735.85,686.709 1736.41,686.709 1736.97,686.709 1737.52,686.709 1738.08,686.709 1738.64,686.709 1739.2,686.709 1739.76,686.709 1740.32,686.709 1740.88,686.709 1741.44,686.709 1742,686.709 1742.56,686.709 1743.12,686.709 1743.68,686.709 1744.24,686.709 1744.79,686.709 1745.35,686.709 1745.91,686.709 1746.47,686.709 1747.03,686.709 1747.59,686.709 1748.15,686.709 1748.71,686.709 1749.27,686.709 1749.83,686.709 1750.39,686.709 1750.95,686.709 1751.51,686.709 1752.06,686.709 1752.62,686.709 1753.18,686.709 1753.74,686.709 1754.3,686.709 1754.86,686.709 1755.42,686.709 1755.98,686.709 1756.54,686.709 1757.1,686.709 1757.66,686.709 1758.22,686.709 1758.78,686.709 1759.34,686.709 1759.89,686.709 1760.45,686.709 1761.01,686.709 1761.57,686.709 1762.13,686.709 1762.69,686.709 1763.25,686.709 1763.81,686.709 1764.37,686.709 1764.93,686.709 1765.49,686.709 1766.05,686.709 1766.61,686.709 1767.16,686.709 1767.72,686.709 1768.28,686.709 1768.84,686.709 1769.4,686.709 1769.96,686.709 1770.52,686.709 1771.08,686.709 1771.64,686.709 1772.2,686.709 1772.76,686.709 1773.32,686.709 1773.88,686.709 1774.43,686.709 1774.99,686.709 1775.55,686.709 1776.11,686.709 1776.67,686.709 1777.23,686.709 1777.79,686.709 1778.35,686.709 1778.91,686.709 1779.47,686.709 1780.03,686.709 1780.59,686.709 1781.15,686.709 1781.71,686.709 1782.26,686.709 1782.82,686.709 1783.38,686.709 1783.94,686.709 1784.5,686.709 1785.06,686.709 1785.62,686.709 1786.18,686.709 1786.74,686.709 1787.3,686.709 1787.86,686.709 1788.42,686.709 1788.98,686.709 1789.53,686.709 1790.09,686.709 1790.65,686.709 1791.21,686.709 1791.77,686.709 1792.33,686.709 1792.89,686.709 1793.45,686.709 1794.01,686.709 1794.57,686.709 1795.13,686.709 1795.69,686.709 1796.25,686.709 1796.8,686.709 1797.36,686.709 1797.92,686.709 1798.48,686.709 1799.04,686.709 1799.6,686.709 1800.16,686.709 1800.72,686.709 1801.28,686.709 1801.84,686.709 1802.4,686.709 1802.96,686.709 1803.52,686.709 1804.08,686.709 1804.63,686.709 1805.19,686.709 1805.75,686.709 1806.31,686.709 1806.87,686.709 1807.43,686.709 1807.99,686.709 1808.55,686.709 1809.11,686.709 1809.67,686.709 1810.23,686.709 1810.79,686.709 1811.35,686.709 1811.9,686.709 1812.46,686.709 1813.02,686.709 1813.58,686.709 1814.14,686.709 1814.7,686.709 1815.26,686.709 1815.82,686.709 1816.38,686.709 1816.94,686.709 1817.5,686.709 1818.06,686.709 1818.62,686.709 1819.18,686.709 1819.73,686.709 1820.29,686.709 1820.85,686.709 1821.41,686.709 1821.97,686.709 1822.53,686.709 1823.09,686.709 1823.65,686.709 1824.21,686.709 1824.77,686.709 1825.33,686.709 1825.89,686.709 1826.45,686.709 1827,686.709 1827.56,686.709 1828.12,686.709 1828.68,686.709 1829.24,686.709 1829.8,686.709 1830.36,686.709 1830.92,686.709 1831.48,686.709 1832.04,686.709 1832.6,686.709 1833.16,686.709 1833.72,686.709 1834.27,686.709 1834.83,686.709 1835.39,686.709 1835.95,686.709 1836.51,686.709 1837.07,686.709 1837.63,686.709 1838.19,686.709 \"/>\n<path clip-path=\"url(#clip553)\" d=\"M720.247 684.306 L720.806 684.306 L721.365 684.306 L721.924 684.306 L722.484 684.306 L723.043 684.306 L723.602 684.306 L724.161 684.306 L724.721 684.306 L725.28 684.306 L725.839 684.306 L726.398 684.306 L726.958 684.306 L727.517 684.306 L728.076 684.306 L728.635 684.306 L729.195 684.306 L729.754 684.306 L730.313 684.306 L730.872 684.306 L731.432 684.306 L731.991 684.306 L732.55 684.306 L733.109 684.306 L733.669 684.306 L734.228 684.306 L734.787 684.306 L735.346 684.306 L735.906 684.306 L736.465 684.306 L737.024 684.306 L737.583 684.306 L738.143 684.306 L738.702 684.306 L739.261 684.306 L739.82 684.306 L740.38 684.306 L740.939 684.306 L741.498 684.306 L742.057 684.306 L742.617 684.306 L743.176 684.306 L743.735 684.306 L744.294 684.306 L744.854 684.306 L745.413 684.306 L745.972 684.306 L746.531 684.306 L747.091 684.306 L747.65 684.306 L748.209 684.306 L748.768 684.306 L749.328 684.306 L749.887 684.306 L750.446 684.306 L751.005 684.306 L751.565 684.306 L752.124 684.306 L752.683 684.306 L753.242 684.306 L753.802 684.306 L754.361 684.306 L754.92 684.306 L755.479 684.306 L756.039 684.306 L756.598 684.306 L757.157 684.306 L757.716 684.306 L758.276 684.306 L758.835 684.306 L759.394 684.306 L759.953 684.306 L760.513 684.306 L761.072 684.306 L761.631 684.306 L762.19 684.306 L762.75 684.306 L763.309 684.306 L763.868 684.306 L764.427 684.306 L764.987 684.306 L765.546 684.306 L766.105 684.306 L766.664 684.306 L767.224 684.306 L767.783 684.306 L768.342 684.306 L768.901 684.306 L769.461 684.306 L770.02 684.306 L770.579 684.306 L771.138 684.306 L771.698 684.306 L772.257 684.306 L772.816 684.306 L773.375 684.306 L773.935 684.306 L774.494 684.306 L775.053 684.306 L775.612 684.306 L776.172 684.306 L776.731 684.306 L777.29 684.306 L777.849 684.306 L778.409 684.306 L778.968 684.306 L779.527 684.306 L780.086 684.306 L780.646 684.306 L781.205 684.306 L781.764 684.306 L782.323 684.306 L782.883 684.306 L783.442 684.306 L784.001 684.306 L784.56 684.306 L785.12 684.306 L785.679 684.306 L786.238 684.306 L786.797 684.306 L787.357 684.306 L787.916 684.306 L788.475 684.306 L789.034 684.306 L789.594 684.306 L790.153 684.306 L790.712 684.306 L791.271 684.306 L791.831 684.306 L792.39 684.306 L792.949 684.306 L793.508 684.306 L794.068 684.306 L794.627 684.306 L795.186 684.306 L795.745 684.306 L796.305 684.306 L796.864 684.306 L797.423 684.306 L797.982 684.306 L798.542 684.306 L799.101 684.306 L799.66 684.306 L800.219 684.306 L800.779 684.306 L801.338 684.306 L801.897 684.306 L802.456 684.306 L803.016 684.306 L803.575 684.306 L804.134 684.306 L804.693 684.306 L805.253 684.306 L805.812 684.306 L806.371 684.306 L806.931 684.306 L807.49 684.306 L808.049 684.306 L808.608 684.306 L809.168 684.306 L809.727 684.306 L810.286 684.306 L810.845 684.306 L811.405 684.306 L811.964 684.306 L812.523 684.306 L813.082 684.306 L813.642 684.306 L814.201 684.306 L814.76 684.306 L815.319 684.306 L815.879 684.306 L816.438 684.306 L816.997 684.306 L817.556 684.306 L818.116 684.306 L818.675 684.306 L819.234 684.306 L819.793 684.306 L820.353 684.306 L820.912 684.306 L821.471 684.306 L822.03 684.306 L822.59 684.306 L823.149 684.306 L823.708 684.306 L824.267 684.306 L824.827 684.306 L825.386 684.306 L825.945 684.306 L826.504 684.306 L827.064 684.306 L827.623 684.306 L828.182 684.306 L828.741 684.306 L829.301 684.306 L829.86 684.306 L830.419 684.306 L830.978 684.306 L831.538 684.306 L832.097 684.306 L832.656 684.306 L833.215 684.306 L833.775 684.306 L834.334 684.306 L834.893 684.306 L835.452 684.306 L836.012 684.306 L836.571 684.306 L837.13 684.306 L837.689 684.306 L838.249 684.306 L838.808 684.306 L839.367 684.306 L839.926 684.306 L840.486 684.306 L841.045 684.306 L841.604 684.306 L842.163 684.306 L842.723 684.306 L843.282 684.306 L843.841 684.306 L844.4 684.306 L844.96 684.306 L845.519 684.306 L846.078 684.306 L846.637 684.306 L847.197 684.306 L847.756 684.306 L848.315 684.306 L848.874 684.306 L849.434 684.306 L849.993 684.306 L850.552 684.306 L851.111 684.306 L851.671 684.306 L852.23 684.306 L852.789 684.306 L853.348 684.306 L853.908 684.306 L854.467 684.306 L855.026 684.306 L855.585 684.306 L856.145 684.306 L856.704 684.306 L857.263 684.306 L857.822 684.306 L858.382 684.306 L858.941 684.306 L859.5 684.306 L860.059 684.306 L860.619 684.306 L861.178 684.306 L861.737 684.306 L862.296 684.306 L862.856 684.306 L863.415 684.306 L863.974 684.306 L864.533 684.306 L865.093 684.306 L865.652 684.306 L866.211 684.306 L866.77 684.306 L867.33 684.306 L867.889 684.306 L868.448 684.306 L869.007 684.306 L869.567 684.306 L870.126 684.306 L870.685 684.306 L871.244 684.306 L871.804 684.306 L872.363 684.306 L872.922 684.306 L873.481 684.306 L874.041 684.306 L874.6 684.306 L875.159 684.306 L875.718 684.306 L876.278 684.306 L876.837 684.306 L877.396 684.306 L877.955 684.306 L878.515 684.306 L879.074 684.306 L879.633 684.306 L880.192 684.306 L880.752 684.306 L881.311 684.306 L881.87 684.306 L882.429 684.306 L882.989 684.306 L883.548 684.306 L884.107 684.306 L884.666 684.306 L885.226 684.306 L885.785 684.306 L886.344 684.306 L886.903 684.306 L887.463 684.306 L888.022 684.306 L888.581 684.306 L889.14 684.306 L889.7 684.306 L890.259 684.306 L890.818 684.306 L891.377 684.306 L891.937 684.306 L892.496 684.306 L893.055 684.306 L893.614 684.306 L894.174 684.306 L894.733 684.306 L895.292 684.306 L895.851 684.306 L896.411 684.306 L896.97 684.306 L897.529 684.306 L898.088 684.306 L898.648 684.306 L899.207 684.306 L899.766 684.306 L900.325 684.306 L900.885 684.306 L901.444 684.306 L902.003 684.306 L902.562 684.306 L903.122 684.306 L903.681 684.306 L904.24 684.306 L904.799 684.306 L905.359 684.306 L905.918 684.306 L906.477 684.306 L907.036 684.306 L907.596 684.306 L908.155 684.306 L908.714 684.306 L909.273 684.306 L909.833 684.306 L910.392 684.306 L910.951 684.306 L911.51 684.306 L912.07 684.306 L912.629 684.306 L913.188 684.306 L913.747 684.306 L914.307 684.306 L914.866 684.306 L915.425 684.306 L915.984 684.306 L916.544 684.306 L917.103 684.306 L917.662 684.306 L918.221 684.306 L918.781 684.306 L919.34 684.306 L919.899 684.306 L920.458 684.306 L921.018 684.306 L921.577 684.306 L922.136 684.306 L922.695 684.306 L923.255 684.306 L923.814 684.306 L924.373 684.306 L924.932 684.306 L925.492 684.306 L926.051 684.306 L926.61 684.306 L927.169 684.306 L927.729 684.306 L928.288 684.306 L928.847 684.306 L929.406 684.306 L929.966 684.306 L930.525 684.306 L931.084 684.306 L931.644 684.306 L932.203 684.306 L932.762 684.306 L933.321 684.306 L933.881 684.306 L934.44 684.306 L934.999 684.306 L935.558 684.306 L936.118 684.306 L936.677 684.306 L937.236 684.306 L937.795 684.306 L938.355 684.306 L938.914 684.306 L939.473 684.306 L940.032 684.306 L940.592 684.306 L941.151 684.306 L941.71 684.306 L942.269 684.306 L942.829 684.306 L943.388 684.306 L943.947 684.306 L944.506 684.306 L945.066 684.306 L945.625 684.306 L946.184 684.306 L946.743 684.306 L947.303 684.306 L947.862 684.306 L948.421 684.306 L948.98 684.306 L949.54 684.306 L950.099 684.306 L950.658 684.306 L951.217 684.306 L951.777 684.306 L952.336 684.306 L952.895 684.306 L953.454 684.306 L954.014 684.306 L954.573 684.306 L955.132 684.306 L955.691 684.306 L956.251 684.306 L956.81 684.306 L957.369 684.306 L957.928 684.306 L958.488 684.306 L959.047 684.306 L959.606 684.306 L960.165 684.306 L960.725 684.306 L961.284 684.306 L961.843 684.306 L962.402 684.306 L962.962 684.306 L963.521 684.306 L964.08 684.306 L964.639 684.306 L965.199 684.306 L965.758 684.306 L966.317 684.306 L966.876 684.306 L967.436 684.306 L967.995 684.306 L968.554 684.306 L969.113 684.306 L969.673 684.306 L970.232 684.306 L970.791 684.306 L971.35 684.306 L971.91 684.306 L972.469 684.306 L973.028 684.306 L973.587 684.306 L974.147 684.306 L974.706 684.306 L975.265 684.306 L975.824 684.306 L976.384 684.306 L976.943 684.306 L977.502 684.306 L978.061 684.306 L978.621 684.306 L979.18 684.306 L979.739 684.306 L980.298 684.306 L980.858 684.306 L981.417 684.306 L981.976 684.306 L982.535 684.306 L983.095 684.306 L983.654 684.306 L984.213 684.306 L984.772 684.306 L985.332 684.306 L985.891 684.306 L986.45 684.306 L987.009 684.306 L987.569 684.306 L988.128 684.306 L988.687 684.306 L989.246 684.306 L989.806 684.306 L990.365 684.306 L990.924 684.306 L991.483 684.306 L992.043 684.306 L992.602 684.306 L993.161 684.306 L993.72 684.306 L994.28 684.306 L994.839 684.306 L995.398 684.306 L995.957 684.306 L996.517 684.306 L997.076 684.306 L997.635 684.306 L998.194 684.306 L998.754 684.306 L999.313 684.306 L999.872 684.306 L1000.43 684.306 L1000.99 684.306 L1001.55 684.306 L1002.11 684.306 L1002.67 684.306 L1003.23 684.306 L1003.79 684.306 L1004.35 684.306 L1004.91 684.306 L1005.46 684.306 L1006.02 684.306 L1006.58 684.306 L1007.14 684.306 L1007.7 684.306 L1008.26 684.306 L1008.82 684.306 L1009.38 684.306 L1009.94 684.306 L1010.5 684.306 L1011.06 684.306 L1011.62 684.306 L1012.18 684.306 L1012.73 684.306 L1013.29 684.306 L1013.85 684.306 L1014.41 684.306 L1014.97 684.306 L1015.53 684.306 L1016.09 684.306 L1016.65 684.306 L1017.21 684.306 L1017.77 684.306 L1018.33 684.306 L1018.89 684.306 L1019.45 684.306 L1020.01 684.306 L1020.56 684.306 L1021.12 684.306 L1021.68 684.306 L1022.24 684.306 L1022.8 684.306 L1023.36 684.306 L1023.92 684.306 L1024.48 684.306 L1025.04 684.306 L1025.6 684.306 L1026.16 684.306 L1026.72 684.306 L1027.28 684.306 L1027.83 684.306 L1028.39 684.306 L1028.95 684.306 L1029.51 684.306 L1030.07 684.306 L1030.63 684.306 L1031.19 684.306 L1031.75 684.306 L1032.31 684.306 L1032.87 684.306 L1033.43 684.306 L1033.99 684.306 L1034.55 684.306 L1035.1 684.306 L1035.66 684.306 L1036.22 684.306 L1036.78 684.306 L1037.34 684.306 L1037.9 684.306 L1038.46 684.306 L1039.02 684.306 L1039.58 684.306 L1040.14 684.306 L1040.7 684.306 L1041.26 684.306 L1041.82 684.306 L1042.38 684.306 L1042.93 684.306 L1043.49 684.306 L1044.05 684.306 L1044.61 684.306 L1045.17 684.306 L1045.73 684.306 L1046.29 684.306 L1046.85 684.306 L1047.41 684.306 L1047.97 684.306 L1048.53 684.306 L1049.09 684.306 L1049.65 684.306 L1050.2 684.306 L1050.76 684.306 L1051.32 684.306 L1051.88 684.306 L1052.44 684.306 L1053 684.306 L1053.56 684.306 L1054.12 684.306 L1054.68 684.306 L1055.24 684.306 L1055.8 684.306 L1056.36 684.306 L1056.92 684.306 L1057.48 684.306 L1058.03 684.306 L1058.59 684.306 L1059.15 684.306 L1059.71 684.306 L1060.27 684.306 L1060.83 684.306 L1061.39 684.306 L1061.95 684.306 L1062.51 684.306 L1063.07 684.306 L1063.63 684.306 L1064.19 684.306 L1064.75 684.306 L1065.3 684.306 L1065.86 684.306 L1066.42 684.306 L1066.98 684.306 L1067.54 684.306 L1068.1 684.306 L1068.66 684.306 L1069.22 684.306 L1069.78 684.306 L1070.34 684.306 L1070.9 684.306 L1071.46 684.306 L1072.02 684.306 L1072.57 684.306 L1073.13 684.306 L1073.69 684.306 L1074.25 684.306 L1074.81 684.306 L1075.37 684.306 L1075.93 684.306 L1076.49 684.306 L1077.05 684.306 L1077.61 684.306 L1078.17 684.306 L1078.73 684.306 L1079.29 684.306 L1079.85 684.306 L1080.4 684.306 L1080.96 684.306 L1081.52 684.306 L1082.08 684.306 L1082.64 684.306 L1083.2 684.306 L1083.76 684.306 L1084.32 684.306 L1084.88 684.306 L1085.44 684.306 L1086 684.306 L1086.56 684.306 L1087.12 684.306 L1087.67 684.306 L1088.23 684.306 L1088.79 684.306 L1089.35 684.306 L1089.91 684.306 L1090.47 684.306 L1091.03 684.306 L1091.59 684.306 L1092.15 684.306 L1092.71 684.306 L1093.27 684.306 L1093.83 684.306 L1094.39 684.306 L1094.94 684.306 L1095.5 684.306 L1096.06 684.306 L1096.62 684.306 L1097.18 684.306 L1097.74 684.306 L1098.3 684.306 L1098.86 684.306 L1099.42 684.306 L1099.98 684.306 L1100.54 684.306 L1101.1 684.306 L1101.66 684.306 L1102.22 684.306 L1102.77 684.306 L1103.33 684.306 L1103.89 684.306 L1104.45 684.306 L1105.01 684.306 L1105.57 684.306 L1106.13 684.306 L1106.69 684.306 L1107.25 684.306 L1107.81 684.306 L1108.37 684.306 L1108.93 684.306 L1109.49 684.306 L1110.04 684.306 L1110.6 684.306 L1111.16 684.306 L1111.72 684.306 L1112.28 684.306 L1112.84 684.306 L1113.4 684.306 L1113.96 684.306 L1114.52 684.306 L1115.08 684.306 L1115.64 684.306 L1116.2 684.306 L1116.76 684.306 L1117.31 684.306 L1117.87 684.306 L1118.43 684.306 L1118.99 684.306 L1119.55 684.306 L1120.11 684.306 L1120.67 684.306 L1121.23 684.306 L1121.79 684.306 L1122.35 684.306 L1122.91 684.306 L1123.47 684.306 L1124.03 684.306 L1124.59 684.306 L1125.14 684.306 L1125.7 684.306 L1126.26 684.306 L1126.82 684.306 L1127.38 684.306 L1127.94 684.306 L1128.5 684.306 L1129.06 684.306 L1129.62 684.306 L1130.18 684.306 L1130.74 684.306 L1131.3 684.306 L1131.86 684.306 L1132.41 684.306 L1132.97 684.306 L1133.53 684.306 L1134.09 684.306 L1134.65 684.306 L1135.21 684.306 L1135.77 684.306 L1136.33 684.306 L1136.89 684.306 L1137.45 684.306 L1138.01 684.306 L1138.57 684.306 L1139.13 684.306 L1139.68 684.306 L1140.24 684.306 L1140.8 684.306 L1141.36 684.306 L1141.92 684.306 L1142.48 684.306 L1143.04 684.306 L1143.6 684.306 L1144.16 684.306 L1144.72 684.306 L1145.28 684.306 L1145.84 684.306 L1146.4 684.306 L1146.96 684.306 L1147.51 684.306 L1148.07 684.306 L1148.63 684.306 L1149.19 684.306 L1149.75 684.306 L1150.31 684.306 L1150.87 684.306 L1151.43 684.306 L1151.99 684.306 L1152.55 684.306 L1153.11 684.306 L1153.67 684.306 L1154.23 684.306 L1154.78 684.306 L1155.34 684.306 L1155.9 684.306 L1156.46 684.306 L1157.02 684.306 L1157.58 684.306 L1158.14 684.306 L1158.7 684.306 L1159.26 684.306 L1159.82 684.306 L1160.38 684.306 L1160.94 684.306 L1161.5 684.306 L1162.05 684.306 L1162.61 684.306 L1163.17 684.306 L1163.73 684.306 L1164.29 684.306 L1164.85 684.306 L1165.41 684.306 L1165.97 684.306 L1166.53 684.306 L1167.09 684.306 L1167.65 684.306 L1168.21 684.306 L1168.77 684.306 L1169.33 684.306 L1169.88 684.306 L1170.44 684.306 L1171 684.306 L1171.56 684.306 L1172.12 684.306 L1172.68 684.306 L1173.24 684.306 L1173.8 684.306 L1174.36 684.306 L1174.92 684.306 L1175.48 684.306 L1176.04 684.306 L1176.6 684.306 L1177.15 684.306 L1177.71 684.306 L1178.27 684.306 L1178.83 684.306 L1179.39 684.306 L1179.95 684.306 L1180.51 684.306 L1181.07 684.306 L1181.63 684.306 L1182.19 684.306 L1182.75 684.306 L1183.31 684.306 L1183.87 684.306 L1184.43 684.306 L1184.98 684.306 L1185.54 684.306 L1186.1 684.306 L1186.66 684.306 L1187.22 684.306 L1187.78 684.306 L1188.34 684.306 L1188.9 684.306 L1189.46 684.306 L1190.02 684.306 L1190.58 684.306 L1191.14 684.306 L1191.7 684.306 L1192.25 684.306 L1192.81 684.306 L1193.37 684.306 L1193.93 684.306 L1194.49 684.306 L1195.05 684.306 L1195.61 684.306 L1196.17 684.306 L1196.73 684.306 L1197.29 684.306 L1197.85 684.306 L1198.41 684.306 L1198.97 684.306 L1199.52 684.306 L1200.08 684.306 L1200.64 684.306 L1201.2 684.306 L1201.76 684.306 L1202.32 684.306 L1202.88 684.306 L1203.44 684.306 L1204 684.306 L1204.56 684.306 L1205.12 684.306 L1205.68 684.306 L1206.24 684.306 L1206.8 684.306 L1207.35 684.306 L1207.91 684.306 L1208.47 684.306 L1209.03 684.306 L1209.59 684.306 L1210.15 684.306 L1210.71 684.306 L1211.27 684.306 L1211.83 684.306 L1212.39 684.306 L1212.95 684.306 L1213.51 684.306 L1214.07 684.306 L1214.62 684.306 L1215.18 684.306 L1215.74 684.306 L1216.3 684.306 L1216.86 684.306 L1217.42 684.306 L1217.98 684.306 L1218.54 684.306 L1219.1 684.306 L1219.66 684.306 L1220.22 684.306 L1220.78 684.306 L1221.34 684.306 L1221.89 684.306 L1222.45 684.306 L1223.01 684.306 L1223.57 684.306 L1224.13 684.306 L1224.69 684.306 L1225.25 684.306 L1225.81 684.306 L1226.37 684.306 L1226.93 684.306 L1227.49 684.306 L1228.05 684.306 L1228.61 684.306 L1229.17 684.306 L1229.72 684.306 L1230.28 684.306 L1230.84 684.306 L1231.4 684.306 L1231.96 684.306 L1232.52 684.306 L1233.08 684.306 L1233.64 684.306 L1234.2 684.306 L1234.76 684.306 L1235.32 684.306 L1235.88 684.306 L1236.44 684.306 L1236.99 684.306 L1237.55 684.306 L1238.11 684.306 L1238.67 684.306 L1239.23 684.306 L1239.79 684.306 L1240.35 684.306 L1240.91 684.306 L1241.47 684.306 L1242.03 684.306 L1242.59 684.306 L1243.15 684.306 L1243.71 684.306 L1244.26 684.306 L1244.82 684.306 L1245.38 684.306 L1245.94 684.306 L1246.5 684.306 L1247.06 684.306 L1247.62 684.306 L1248.18 684.306 L1248.74 684.306 L1249.3 684.306 L1249.86 684.306 L1250.42 684.306 L1250.98 684.306 L1251.54 684.306 L1252.09 684.306 L1252.65 684.306 L1253.21 684.306 L1253.77 684.306 L1254.33 684.306 L1254.89 684.306 L1255.45 684.306 L1256.01 684.306 L1256.57 684.306 L1257.13 684.306 L1257.69 684.306 L1258.25 684.306 L1258.81 684.306 L1259.36 684.306 L1259.92 684.306 L1260.48 684.306 L1261.04 684.306 L1261.6 684.306 L1262.16 684.306 L1262.72 684.306 L1263.28 684.306 L1263.84 684.306 L1264.4 684.306 L1264.96 684.306 L1265.52 684.306 L1266.08 684.306 L1266.63 684.306 L1267.19 684.306 L1267.75 684.306 L1268.31 684.306 L1268.87 684.306 L1269.43 684.306 L1269.99 684.306 L1270.55 684.306 L1271.11 684.306 L1271.67 684.306 L1272.23 684.306 L1272.79 684.306 L1273.35 684.306 L1273.91 684.306 L1274.46 684.306 L1275.02 684.306 L1275.58 684.306 L1276.14 684.306 L1276.7 684.306 L1277.26 684.306 L1277.82 684.306 L1278.38 684.306 L1278.94 684.306 L1279.5 684.306 L1280.06 684.306 L1280.62 684.306 L1281.18 684.306 L1281.73 684.306 L1282.29 684.306 L1282.85 684.306 L1283.41 684.306 L1283.97 684.306 L1284.53 684.306 L1285.09 684.306 L1285.65 684.306 L1286.21 684.306 L1286.77 684.306 L1287.33 684.306 L1287.89 684.306 L1288.45 684.306 L1289 684.306 L1289.56 684.306 L1290.12 684.306 L1290.68 684.306 L1291.24 684.306 L1291.8 684.306 L1292.36 684.306 L1292.92 684.306 L1293.48 684.306 L1294.04 684.306 L1294.6 684.306 L1295.16 684.306 L1295.72 684.306 L1296.28 684.306 L1296.83 684.306 L1297.39 684.306 L1297.95 684.306 L1298.51 684.306 L1299.07 684.306 L1299.63 684.306 L1300.19 684.306 L1300.75 684.306 L1301.31 684.306 L1301.87 684.306 L1302.43 684.306 L1302.99 684.306 L1303.55 684.306 L1304.1 684.306 L1304.66 684.306 L1305.22 684.306 L1305.78 684.306 L1306.34 684.306 L1306.9 684.306 L1307.46 684.306 L1308.02 684.306 L1308.58 684.306 L1309.14 684.306 L1309.7 684.306 L1310.26 684.306 L1310.82 684.306 L1311.38 684.306 L1311.93 684.306 L1312.49 684.306 L1313.05 684.306 L1313.61 684.306 L1314.17 684.306 L1314.73 684.306 L1315.29 684.306 L1315.85 684.306 L1316.41 684.306 L1316.97 684.306 L1317.53 684.306 L1318.09 684.306 L1318.65 684.306 L1319.2 684.306 L1319.76 684.306 L1320.32 684.306 L1320.88 684.306 L1321.44 684.306 L1322 684.306 L1322.56 684.306 L1323.12 684.306 L1323.68 684.306 L1324.24 684.306 L1324.8 684.306 L1325.36 684.306 L1325.92 684.306 L1326.47 684.306 L1327.03 684.306 L1327.59 684.306 L1328.15 684.306 L1328.71 684.306 L1329.27 684.306 L1329.83 684.306 L1330.39 684.306 L1330.95 684.306 L1331.51 684.306 L1332.07 684.306 L1332.63 684.306 L1333.19 684.306 L1333.75 684.306 L1334.3 684.306 L1334.86 684.306 L1335.42 684.306 L1335.98 684.306 L1336.54 684.306 L1337.1 684.306 L1337.66 684.306 L1338.22 684.306 L1338.78 684.306 L1339.34 684.306 L1339.9 684.306 L1340.46 684.306 L1341.02 684.306 L1341.57 684.306 L1342.13 684.306 L1342.69 684.306 L1343.25 684.306 L1343.81 684.306 L1344.37 684.306 L1344.93 684.306 L1345.49 684.306 L1346.05 684.306 L1346.61 684.306 L1347.17 684.306 L1347.73 684.306 L1348.29 684.306 L1348.84 684.306 L1349.4 684.306 L1349.96 684.306 L1350.52 684.306 L1351.08 684.306 L1351.64 684.306 L1352.2 684.306 L1352.76 684.306 L1353.32 684.306 L1353.88 684.306 L1354.44 684.306 L1355 684.306 L1355.56 684.306 L1356.12 684.306 L1356.67 684.306 L1357.23 684.306 L1357.79 684.306 L1358.35 684.306 L1358.91 684.306 L1359.47 684.306 L1360.03 684.306 L1360.59 684.306 L1361.15 684.306 L1361.71 684.306 L1362.27 684.306 L1362.83 684.306 L1363.39 684.306 L1363.94 684.306 L1364.5 684.306 L1365.06 684.306 L1365.62 684.306 L1366.18 684.306 L1366.74 684.306 L1367.3 684.306 L1367.86 684.306 L1368.42 684.306 L1368.98 684.306 L1369.54 684.306 L1370.1 684.306 L1370.66 684.306 L1371.21 684.306 L1371.77 684.306 L1372.33 684.306 L1372.89 684.306 L1373.45 684.306 L1374.01 684.306 L1374.57 684.306 L1375.13 684.306 L1375.69 684.306 L1376.25 684.306 L1376.81 684.306 L1377.37 684.306 L1377.93 684.306 L1378.49 684.306 L1379.04 684.306 L1379.6 684.306 L1380.16 684.306 L1380.72 684.306 L1381.28 684.306 L1381.84 684.306 L1382.4 684.306 L1382.96 684.306 L1383.52 684.306 L1384.08 684.306 L1384.64 684.306 L1385.2 684.306 L1385.76 684.306 L1386.31 684.306 L1386.87 684.306 L1387.43 684.306 L1387.99 684.306 L1388.55 684.306 L1389.11 684.306 L1389.67 684.306 L1390.23 684.306 L1390.79 684.306 L1391.35 684.306 L1391.91 684.306 L1392.47 684.306 L1393.03 684.306 L1393.58 684.306 L1394.14 684.306 L1394.7 684.306 L1395.26 684.306 L1395.82 684.306 L1396.38 684.306 L1396.94 684.306 L1397.5 684.306 L1398.06 684.306 L1398.62 684.306 L1399.18 684.306 L1399.74 684.306 L1400.3 684.306 L1400.86 684.306 L1401.41 684.306 L1401.97 684.306 L1402.53 684.306 L1403.09 684.306 L1403.65 684.306 L1404.21 684.306 L1404.77 684.306 L1405.33 684.306 L1405.89 684.306 L1406.45 684.306 L1407.01 684.306 L1407.57 684.306 L1408.13 684.306 L1408.68 684.306 L1409.24 684.306 L1409.8 684.306 L1410.36 684.306 L1410.92 684.306 L1411.48 684.306 L1412.04 684.306 L1412.6 684.306 L1413.16 684.306 L1413.72 684.306 L1414.28 684.306 L1414.84 684.306 L1415.4 684.306 L1415.95 684.306 L1416.51 684.306 L1417.07 684.306 L1417.63 684.306 L1418.19 684.306 L1418.75 684.306 L1419.31 684.306 L1419.87 684.306 L1420.43 684.306 L1420.99 684.306 L1421.55 684.306 L1422.11 684.306 L1422.67 684.306 L1423.23 684.306 L1423.78 684.306 L1424.34 684.306 L1424.9 684.306 L1425.46 684.306 L1426.02 684.306 L1426.58 684.306 L1427.14 684.306 L1427.7 684.306 L1428.26 684.306 L1428.82 684.306 L1429.38 684.306 L1429.94 684.306 L1430.5 684.306 L1431.05 684.306 L1431.61 684.306 L1432.17 684.306 L1432.73 684.306 L1433.29 684.306 L1433.85 684.306 L1434.41 684.306 L1434.97 684.306 L1435.53 684.306 L1436.09 684.306 L1436.65 684.306 L1437.21 684.306 L1437.77 684.306 L1438.33 684.306 L1438.88 684.306 L1439.44 684.306 L1440 684.306 L1440.56 684.306 L1441.12 684.306 L1441.68 684.306 L1442.24 684.306 L1442.8 684.306 L1443.36 684.306 L1443.92 684.306 L1444.48 684.306 L1445.04 684.306 L1445.6 684.306 L1446.15 684.306 L1446.71 684.306 L1447.27 684.306 L1447.83 684.306 L1448.39 684.306 L1448.95 684.306 L1449.51 684.306 L1450.07 684.306 L1450.63 684.306 L1451.19 684.306 L1451.75 684.306 L1452.31 684.306 L1452.87 684.306 L1453.42 684.306 L1453.98 684.306 L1454.54 684.306 L1455.1 684.306 L1455.66 684.306 L1456.22 684.306 L1456.78 684.306 L1457.34 684.306 L1457.9 684.306 L1458.46 684.306 L1459.02 684.306 L1459.58 684.306 L1460.14 684.306 L1460.7 684.306 L1461.25 684.306 L1461.81 684.306 L1462.37 684.306 L1462.93 684.306 L1463.49 684.306 L1464.05 684.306 L1464.61 684.306 L1465.17 684.306 L1465.73 684.306 L1466.29 684.306 L1466.85 684.306 L1467.41 684.306 L1467.97 684.306 L1468.52 684.306 L1469.08 684.306 L1469.64 684.306 L1470.2 684.306 L1470.76 684.306 L1471.32 684.306 L1471.88 684.306 L1472.44 684.306 L1473 684.306 L1473.56 684.306 L1474.12 684.306 L1474.68 684.306 L1475.24 684.306 L1475.79 684.306 L1476.35 684.306 L1476.91 684.306 L1477.47 684.306 L1478.03 684.306 L1478.59 684.306 L1479.15 684.306 L1479.71 684.306 L1480.27 684.306 L1480.83 684.306 L1481.39 684.306 L1481.95 684.306 L1482.51 684.306 L1483.07 684.306 L1483.62 684.306 L1484.18 684.306 L1484.74 684.306 L1485.3 684.306 L1485.86 684.306 L1486.42 684.306 L1486.98 684.306 L1487.54 684.306 L1488.1 684.306 L1488.66 684.306 L1489.22 684.306 L1489.78 684.306 L1490.34 684.306 L1490.89 684.306 L1491.45 684.306 L1492.01 684.306 L1492.57 684.306 L1493.13 684.306 L1493.69 684.306 L1494.25 684.306 L1494.81 684.306 L1495.37 684.306 L1495.93 684.306 L1496.49 684.306 L1497.05 684.306 L1497.61 684.306 L1498.16 684.306 L1498.72 684.306 L1499.28 684.306 L1499.84 684.306 L1500.4 684.306 L1500.96 684.306 L1501.52 684.306 L1502.08 684.306 L1502.64 684.306 L1503.2 684.306 L1503.76 684.306 L1504.32 684.306 L1504.88 684.306 L1505.44 684.306 L1505.99 684.306 L1506.55 684.306 L1507.11 684.306 L1507.67 684.306 L1508.23 684.306 L1508.79 684.306 L1509.35 684.306 L1509.91 684.306 L1510.47 684.306 L1511.03 684.306 L1511.59 684.306 L1512.15 684.306 L1512.71 684.306 L1513.26 684.306 L1513.82 684.306 L1514.38 684.306 L1514.94 684.306 L1515.5 684.306 L1516.06 684.306 L1516.62 684.306 L1517.18 684.306 L1517.74 684.306 L1518.3 684.306 L1518.86 684.306 L1519.42 684.306 L1519.98 684.306 L1520.53 684.306 L1521.09 684.306 L1521.65 684.306 L1522.21 684.306 L1522.77 684.306 L1523.33 684.306 L1523.89 684.306 L1524.45 684.306 L1525.01 684.306 L1525.57 684.306 L1526.13 684.306 L1526.69 684.306 L1527.25 684.306 L1527.81 684.306 L1528.36 684.306 L1528.92 684.306 L1529.48 684.306 L1530.04 684.306 L1530.6 684.306 L1531.16 684.306 L1531.72 684.306 L1532.28 684.306 L1532.84 684.306 L1533.4 684.306 L1533.96 684.306 L1534.52 684.306 L1535.08 684.306 L1535.63 684.306 L1536.19 684.306 L1536.75 684.306 L1537.31 684.306 L1537.87 684.306 L1538.43 684.306 L1538.99 684.306 L1539.55 684.306 L1540.11 684.306 L1540.67 684.306 L1541.23 684.306 L1541.79 684.306 L1542.35 684.306 L1542.9 684.306 L1543.46 684.306 L1544.02 684.306 L1544.58 684.306 L1545.14 684.306 L1545.7 684.306 L1546.26 684.306 L1546.82 684.306 L1547.38 684.306 L1547.94 684.306 L1548.5 684.306 L1549.06 684.306 L1549.62 684.306 L1550.18 684.306 L1550.73 684.306 L1551.29 684.306 L1551.85 684.306 L1552.41 684.306 L1552.97 684.306 L1553.53 684.306 L1554.09 684.306 L1554.65 684.306 L1555.21 684.306 L1555.77 684.306 L1556.33 684.306 L1556.89 684.306 L1557.45 684.306 L1558 684.306 L1558.56 684.306 L1559.12 684.306 L1559.68 684.306 L1560.24 684.306 L1560.8 684.306 L1561.36 684.306 L1561.92 684.306 L1562.48 684.306 L1563.04 684.306 L1563.6 684.306 L1564.16 684.306 L1564.72 684.306 L1565.28 684.306 L1565.83 684.306 L1566.39 684.306 L1566.95 684.306 L1567.51 684.306 L1568.07 684.306 L1568.63 684.306 L1569.19 684.306 L1569.75 684.306 L1570.31 684.306 L1570.87 684.306 L1571.43 684.306 L1571.99 684.306 L1572.55 684.306 L1573.1 684.306 L1573.66 684.306 L1574.22 684.306 L1574.78 684.306 L1575.34 684.306 L1575.9 684.306 L1576.46 684.306 L1577.02 684.306 L1577.58 684.306 L1578.14 684.306 L1578.7 684.306 L1579.26 684.306 L1579.82 684.306 L1580.37 684.306 L1580.93 684.306 L1581.49 684.306 L1582.05 684.306 L1582.61 684.306 L1583.17 684.306 L1583.73 684.306 L1584.29 684.306 L1584.85 684.306 L1585.41 684.306 L1585.97 684.306 L1586.53 684.306 L1587.09 684.306 L1587.65 684.306 L1588.2 684.306 L1588.76 684.306 L1589.32 684.306 L1589.88 684.306 L1590.44 684.306 L1591 684.306 L1591.56 684.306 L1592.12 684.306 L1592.68 684.306 L1593.24 684.306 L1593.8 684.306 L1594.36 684.306 L1594.92 684.306 L1595.47 684.306 L1596.03 684.306 L1596.59 684.306 L1597.15 684.306 L1597.71 684.306 L1598.27 684.306 L1598.83 684.306 L1599.39 684.306 L1599.95 684.306 L1600.51 684.306 L1601.07 684.306 L1601.63 684.306 L1602.19 684.306 L1602.74 684.306 L1603.3 684.306 L1603.86 684.306 L1604.42 684.306 L1604.98 684.306 L1605.54 684.306 L1606.1 684.306 L1606.66 684.306 L1607.22 684.306 L1607.78 684.306 L1608.34 684.306 L1608.9 684.306 L1609.46 684.306 L1610.02 684.306 L1610.57 684.306 L1611.13 684.306 L1611.69 684.306 L1612.25 684.306 L1612.81 684.306 L1613.37 684.306 L1613.93 684.306 L1614.49 684.306 L1615.05 684.306 L1615.61 684.306 L1616.17 684.306 L1616.73 684.306 L1617.29 684.306 L1617.84 684.306 L1618.4 684.306 L1618.96 684.306 L1619.52 684.306 L1620.08 684.306 L1620.64 684.306 L1621.2 684.306 L1621.76 684.306 L1622.32 684.306 L1622.88 684.306 L1623.44 684.306 L1624 684.306 L1624.56 684.306 L1625.11 684.306 L1625.67 684.306 L1626.23 684.306 L1626.79 684.306 L1627.35 684.306 L1627.91 684.306 L1628.47 684.306 L1629.03 684.306 L1629.59 684.306 L1630.15 684.306 L1630.71 684.306 L1631.27 684.306 L1631.83 684.306 L1632.39 684.306 L1632.94 684.306 L1633.5 684.306 L1634.06 684.306 L1634.62 684.306 L1635.18 684.306 L1635.74 684.306 L1636.3 684.306 L1636.86 684.306 L1637.42 684.306 L1637.98 684.306 L1638.54 684.306 L1639.1 684.306 L1639.66 684.306 L1640.21 684.306 L1640.77 684.306 L1641.33 684.306 L1641.89 684.306 L1642.45 684.306 L1643.01 684.306 L1643.57 684.306 L1644.13 684.306 L1644.69 684.306 L1645.25 684.306 L1645.81 684.306 L1646.37 684.306 L1646.93 684.306 L1647.48 684.306 L1648.04 684.306 L1648.6 684.306 L1649.16 684.306 L1649.72 684.306 L1650.28 684.306 L1650.84 684.306 L1651.4 684.306 L1651.96 684.306 L1652.52 684.306 L1653.08 684.306 L1653.64 684.306 L1654.2 684.306 L1654.76 684.306 L1655.31 684.306 L1655.87 684.306 L1656.43 684.306 L1656.99 684.306 L1657.55 684.306 L1658.11 684.306 L1658.67 684.306 L1659.23 684.306 L1659.79 684.306 L1660.35 684.306 L1660.91 684.306 L1661.47 684.306 L1662.03 684.306 L1662.58 684.306 L1663.14 684.306 L1663.7 684.306 L1664.26 684.306 L1664.82 684.306 L1665.38 684.306 L1665.94 684.306 L1666.5 684.306 L1667.06 684.306 L1667.62 684.306 L1668.18 684.306 L1668.74 684.306 L1669.3 684.306 L1669.85 684.306 L1670.41 684.306 L1670.97 684.306 L1671.53 684.306 L1672.09 684.306 L1672.65 684.306 L1673.21 684.306 L1673.77 684.306 L1674.33 684.306 L1674.89 684.306 L1675.45 684.306 L1676.01 684.306 L1676.57 684.306 L1677.13 684.306 L1677.68 684.306 L1678.24 684.306 L1678.8 684.306 L1679.36 684.306 L1679.92 684.306 L1680.48 684.306 L1681.04 684.306 L1681.6 684.306 L1682.16 684.306 L1682.72 684.306 L1683.28 684.306 L1683.84 684.306 L1684.4 684.306 L1684.95 684.306 L1685.51 684.306 L1686.07 684.306 L1686.63 684.306 L1687.19 684.306 L1687.75 684.306 L1688.31 684.306 L1688.87 684.306 L1689.43 684.306 L1689.99 684.306 L1690.55 684.306 L1691.11 684.306 L1691.67 684.306 L1692.23 684.306 L1692.78 684.306 L1693.34 684.306 L1693.9 684.306 L1694.46 684.306 L1695.02 684.306 L1695.58 684.306 L1696.14 684.306 L1696.7 684.306 L1697.26 684.306 L1697.82 684.306 L1698.38 684.306 L1698.94 684.306 L1699.5 684.306 L1700.05 684.306 L1700.61 684.306 L1701.17 684.306 L1701.73 684.306 L1702.29 684.306 L1702.85 684.306 L1703.41 684.306 L1703.97 684.306 L1704.53 684.306 L1705.09 684.306 L1705.65 684.306 L1706.21 684.306 L1706.77 684.306 L1707.32 684.306 L1707.88 684.306 L1708.44 684.306 L1709 684.306 L1709.56 684.306 L1710.12 684.306 L1710.68 684.306 L1711.24 684.306 L1711.8 684.306 L1712.36 684.306 L1712.92 684.306 L1713.48 684.306 L1714.04 684.306 L1714.6 684.306 L1715.15 684.306 L1715.71 684.306 L1716.27 684.306 L1716.83 684.306 L1717.39 684.306 L1717.95 684.306 L1718.51 684.306 L1719.07 684.306 L1719.63 684.306 L1720.19 684.306 L1720.75 684.306 L1721.31 684.306 L1721.87 684.306 L1722.42 684.306 L1722.98 684.306 L1723.54 684.306 L1724.1 684.306 L1724.66 684.306 L1725.22 684.306 L1725.78 684.306 L1726.34 684.306 L1726.9 684.306 L1727.46 684.306 L1728.02 684.306 L1728.58 684.306 L1729.14 684.306 L1729.69 684.306 L1730.25 684.306 L1730.81 684.306 L1731.37 684.306 L1731.93 684.306 L1732.49 684.306 L1733.05 684.306 L1733.61 684.306 L1734.17 684.306 L1734.73 684.306 L1735.29 684.306 L1735.85 684.306 L1736.41 684.306 L1736.97 684.306 L1737.52 684.306 L1738.08 684.306 L1738.64 684.306 L1739.2 684.306 L1739.76 684.306 L1740.32 684.306 L1740.88 684.306 L1741.44 684.306 L1742 684.306 L1742.56 684.306 L1743.12 684.306 L1743.68 684.306 L1744.24 684.306 L1744.79 684.306 L1745.35 684.306 L1745.91 684.306 L1746.47 684.306 L1747.03 684.306 L1747.59 684.306 L1748.15 684.306 L1748.71 684.306 L1749.27 684.306 L1749.83 684.306 L1750.39 684.306 L1750.95 684.306 L1751.51 684.306 L1752.06 684.306 L1752.62 684.306 L1753.18 684.306 L1753.74 684.306 L1754.3 684.306 L1754.86 684.306 L1755.42 684.306 L1755.98 684.306 L1756.54 684.306 L1757.1 684.306 L1757.66 684.306 L1758.22 684.306 L1758.78 684.306 L1759.34 684.306 L1759.89 684.306 L1760.45 684.306 L1761.01 684.306 L1761.57 684.306 L1762.13 684.306 L1762.69 684.306 L1763.25 684.306 L1763.81 684.306 L1764.37 684.306 L1764.93 684.306 L1765.49 684.306 L1766.05 684.306 L1766.61 684.306 L1767.16 684.306 L1767.72 684.306 L1768.28 684.306 L1768.84 684.306 L1769.4 684.306 L1769.96 684.306 L1770.52 684.306 L1771.08 684.306 L1771.64 684.306 L1772.2 684.306 L1772.76 684.306 L1773.32 684.306 L1773.88 684.306 L1774.43 684.306 L1774.99 684.306 L1775.55 684.306 L1776.11 684.306 L1776.67 684.306 L1777.23 684.306 L1777.79 684.306 L1778.35 684.306 L1778.91 684.306 L1779.47 684.306 L1780.03 684.306 L1780.59 684.306 L1781.15 684.306 L1781.71 684.306 L1782.26 684.306 L1782.82 684.306 L1783.38 684.306 L1783.94 684.306 L1784.5 684.306 L1785.06 684.306 L1785.62 684.306 L1786.18 684.306 L1786.74 684.306 L1787.3 684.306 L1787.86 684.306 L1788.42 684.306 L1788.98 684.306 L1789.53 684.306 L1790.09 684.306 L1790.65 684.306 L1791.21 684.306 L1791.77 684.306 L1792.33 684.306 L1792.89 684.306 L1793.45 684.306 L1794.01 684.306 L1794.57 684.306 L1795.13 684.306 L1795.69 684.306 L1796.25 684.306 L1796.8 684.306 L1797.36 684.306 L1797.92 684.306 L1798.48 684.306 L1799.04 684.306 L1799.6 684.306 L1800.16 684.306 L1800.72 684.306 L1801.28 684.306 L1801.84 684.306 L1802.4 684.306 L1802.96 684.306 L1803.52 684.306 L1804.08 684.306 L1804.63 684.306 L1805.19 684.306 L1805.75 684.306 L1806.31 684.306 L1806.87 684.306 L1807.43 684.306 L1807.99 684.306 L1808.55 684.306 L1809.11 684.306 L1809.67 684.306 L1810.23 684.306 L1810.79 684.306 L1811.35 684.306 L1811.9 684.306 L1812.46 684.306 L1813.02 684.306 L1813.58 684.306 L1814.14 684.306 L1814.7 684.306 L1815.26 684.306 L1815.82 684.306 L1816.38 684.306 L1816.94 684.306 L1817.5 684.306 L1818.06 684.306 L1818.62 684.306 L1819.18 684.306 L1819.73 684.306 L1820.29 684.306 L1820.85 684.306 L1821.41 684.306 L1821.97 684.306 L1822.53 684.306 L1823.09 684.306 L1823.65 684.306 L1824.21 684.306 L1824.77 684.306 L1825.33 684.306 L1825.89 684.306 L1826.45 684.306 L1827 684.306 L1827.56 684.306 L1828.12 684.306 L1828.68 684.306 L1829.24 684.306 L1829.8 684.306 L1830.36 684.306 L1830.92 684.306 L1831.48 684.306 L1832.04 684.306 L1832.6 684.306 L1833.16 684.306 L1833.72 684.306 L1834.27 684.306 L1834.83 684.306 L1835.39 684.306 L1835.95 684.306 L1836.51 684.306 L1837.07 684.306 L1837.63 684.306 L1838.19 684.306 L1838.19 682.341 L1837.63 682.341 L1837.07 682.341 L1836.51 682.341 L1835.95 682.341 L1835.39 682.341 L1834.83 682.341 L1834.27 682.341 L1833.72 682.341 L1833.16 682.341 L1832.6 682.341 L1832.04 682.341 L1831.48 682.341 L1830.92 682.341 L1830.36 682.341 L1829.8 682.341 L1829.24 682.341 L1828.68 682.341 L1828.12 682.341 L1827.56 682.341 L1827 682.341 L1826.45 682.341 L1825.89 682.341 L1825.33 682.341 L1824.77 682.341 L1824.21 682.341 L1823.65 682.341 L1823.09 682.341 L1822.53 682.341 L1821.97 682.341 L1821.41 682.341 L1820.85 682.341 L1820.29 682.341 L1819.73 682.341 L1819.18 682.341 L1818.62 682.341 L1818.06 682.341 L1817.5 682.341 L1816.94 682.341 L1816.38 682.341 L1815.82 682.341 L1815.26 682.341 L1814.7 682.341 L1814.14 682.341 L1813.58 682.341 L1813.02 682.341 L1812.46 682.341 L1811.9 682.341 L1811.35 682.341 L1810.79 682.341 L1810.23 682.341 L1809.67 682.341 L1809.11 682.341 L1808.55 682.341 L1807.99 682.341 L1807.43 682.341 L1806.87 682.341 L1806.31 682.341 L1805.75 682.341 L1805.19 682.341 L1804.63 682.341 L1804.08 682.341 L1803.52 682.341 L1802.96 682.341 L1802.4 682.341 L1801.84 682.341 L1801.28 682.341 L1800.72 682.341 L1800.16 682.341 L1799.6 682.341 L1799.04 682.341 L1798.48 682.341 L1797.92 682.341 L1797.36 682.341 L1796.8 682.341 L1796.25 682.341 L1795.69 682.341 L1795.13 682.341 L1794.57 682.341 L1794.01 682.341 L1793.45 682.341 L1792.89 682.341 L1792.33 682.341 L1791.77 682.341 L1791.21 682.341 L1790.65 682.341 L1790.09 682.341 L1789.53 682.341 L1788.98 682.341 L1788.42 682.341 L1787.86 682.341 L1787.3 682.341 L1786.74 682.341 L1786.18 682.341 L1785.62 682.341 L1785.06 682.341 L1784.5 682.341 L1783.94 682.341 L1783.38 682.341 L1782.82 682.341 L1782.26 682.341 L1781.71 682.341 L1781.15 682.341 L1780.59 682.341 L1780.03 682.341 L1779.47 682.341 L1778.91 682.341 L1778.35 682.341 L1777.79 682.341 L1777.23 682.341 L1776.67 682.341 L1776.11 682.341 L1775.55 682.341 L1774.99 682.341 L1774.43 682.341 L1773.88 682.341 L1773.32 682.341 L1772.76 682.341 L1772.2 682.341 L1771.64 682.341 L1771.08 682.341 L1770.52 682.341 L1769.96 682.341 L1769.4 682.341 L1768.84 682.341 L1768.28 682.341 L1767.72 682.341 L1767.16 682.341 L1766.61 682.341 L1766.05 682.341 L1765.49 682.341 L1764.93 682.341 L1764.37 682.341 L1763.81 682.341 L1763.25 682.341 L1762.69 682.341 L1762.13 682.341 L1761.57 682.341 L1761.01 682.341 L1760.45 682.341 L1759.89 682.341 L1759.34 682.341 L1758.78 682.341 L1758.22 682.341 L1757.66 682.341 L1757.1 682.341 L1756.54 682.341 L1755.98 682.341 L1755.42 682.341 L1754.86 682.341 L1754.3 682.341 L1753.74 682.341 L1753.18 682.341 L1752.62 682.341 L1752.06 682.341 L1751.51 682.341 L1750.95 682.341 L1750.39 682.341 L1749.83 682.341 L1749.27 682.341 L1748.71 682.341 L1748.15 682.341 L1747.59 682.341 L1747.03 682.341 L1746.47 682.341 L1745.91 682.341 L1745.35 682.341 L1744.79 682.341 L1744.24 682.341 L1743.68 682.341 L1743.12 682.341 L1742.56 682.341 L1742 682.341 L1741.44 682.341 L1740.88 682.341 L1740.32 682.341 L1739.76 682.341 L1739.2 682.341 L1738.64 682.341 L1738.08 682.341 L1737.52 682.341 L1736.97 682.341 L1736.41 682.341 L1735.85 682.341 L1735.29 682.341 L1734.73 682.341 L1734.17 682.341 L1733.61 682.341 L1733.05 682.341 L1732.49 682.341 L1731.93 682.341 L1731.37 682.341 L1730.81 682.341 L1730.25 682.341 L1729.69 682.341 L1729.14 682.341 L1728.58 682.341 L1728.02 682.341 L1727.46 682.341 L1726.9 682.341 L1726.34 682.341 L1725.78 682.341 L1725.22 682.341 L1724.66 682.341 L1724.1 682.341 L1723.54 682.341 L1722.98 682.341 L1722.42 682.341 L1721.87 682.341 L1721.31 682.341 L1720.75 682.341 L1720.19 682.341 L1719.63 682.341 L1719.07 682.341 L1718.51 682.341 L1717.95 682.341 L1717.39 682.341 L1716.83 682.341 L1716.27 682.341 L1715.71 682.341 L1715.15 682.341 L1714.6 682.341 L1714.04 682.341 L1713.48 682.341 L1712.92 682.341 L1712.36 682.341 L1711.8 682.341 L1711.24 682.341 L1710.68 682.341 L1710.12 682.341 L1709.56 682.341 L1709 682.341 L1708.44 682.341 L1707.88 682.341 L1707.32 682.341 L1706.77 682.341 L1706.21 682.341 L1705.65 682.341 L1705.09 682.341 L1704.53 682.341 L1703.97 682.341 L1703.41 682.341 L1702.85 682.341 L1702.29 682.341 L1701.73 682.341 L1701.17 682.341 L1700.61 682.341 L1700.05 682.341 L1699.5 682.341 L1698.94 682.341 L1698.38 682.341 L1697.82 682.341 L1697.26 682.341 L1696.7 682.341 L1696.14 682.341 L1695.58 682.341 L1695.02 682.341 L1694.46 682.341 L1693.9 682.341 L1693.34 682.341 L1692.78 682.341 L1692.23 682.341 L1691.67 682.341 L1691.11 682.341 L1690.55 682.341 L1689.99 682.341 L1689.43 682.341 L1688.87 682.341 L1688.31 682.341 L1687.75 682.341 L1687.19 682.341 L1686.63 682.341 L1686.07 682.341 L1685.51 682.341 L1684.95 682.341 L1684.4 682.341 L1683.84 682.341 L1683.28 682.341 L1682.72 682.341 L1682.16 682.341 L1681.6 682.341 L1681.04 682.341 L1680.48 682.341 L1679.92 682.341 L1679.36 682.341 L1678.8 682.341 L1678.24 682.341 L1677.68 682.341 L1677.13 682.341 L1676.57 682.341 L1676.01 682.341 L1675.45 682.341 L1674.89 682.341 L1674.33 682.341 L1673.77 682.341 L1673.21 682.341 L1672.65 682.341 L1672.09 682.341 L1671.53 682.341 L1670.97 682.341 L1670.41 682.341 L1669.85 682.341 L1669.3 682.341 L1668.74 682.341 L1668.18 682.341 L1667.62 682.341 L1667.06 682.341 L1666.5 682.341 L1665.94 682.341 L1665.38 682.341 L1664.82 682.341 L1664.26 682.341 L1663.7 682.341 L1663.14 682.341 L1662.58 682.341 L1662.03 682.341 L1661.47 682.341 L1660.91 682.341 L1660.35 682.341 L1659.79 682.341 L1659.23 682.341 L1658.67 682.341 L1658.11 682.341 L1657.55 682.341 L1656.99 682.341 L1656.43 682.341 L1655.87 682.341 L1655.31 682.341 L1654.76 682.341 L1654.2 682.341 L1653.64 682.341 L1653.08 682.341 L1652.52 682.341 L1651.96 682.341 L1651.4 682.341 L1650.84 682.341 L1650.28 682.341 L1649.72 682.341 L1649.16 682.341 L1648.6 682.341 L1648.04 682.341 L1647.48 682.341 L1646.93 682.341 L1646.37 682.341 L1645.81 682.341 L1645.25 682.341 L1644.69 682.341 L1644.13 682.341 L1643.57 682.341 L1643.01 682.341 L1642.45 682.341 L1641.89 682.341 L1641.33 682.341 L1640.77 682.341 L1640.21 682.341 L1639.66 682.341 L1639.1 682.341 L1638.54 682.341 L1637.98 682.341 L1637.42 682.341 L1636.86 682.341 L1636.3 682.341 L1635.74 682.341 L1635.18 682.341 L1634.62 682.341 L1634.06 682.341 L1633.5 682.341 L1632.94 682.341 L1632.39 682.341 L1631.83 682.341 L1631.27 682.341 L1630.71 682.341 L1630.15 682.341 L1629.59 682.341 L1629.03 682.341 L1628.47 682.341 L1627.91 682.341 L1627.35 682.341 L1626.79 682.341 L1626.23 682.341 L1625.67 682.341 L1625.11 682.341 L1624.56 682.341 L1624 682.341 L1623.44 682.341 L1622.88 682.341 L1622.32 682.341 L1621.76 682.341 L1621.2 682.341 L1620.64 682.341 L1620.08 682.341 L1619.52 682.341 L1618.96 682.341 L1618.4 682.341 L1617.84 682.341 L1617.29 682.341 L1616.73 682.341 L1616.17 682.341 L1615.61 682.341 L1615.05 682.341 L1614.49 682.341 L1613.93 682.341 L1613.37 682.341 L1612.81 682.341 L1612.25 682.341 L1611.69 682.341 L1611.13 682.341 L1610.57 682.341 L1610.02 682.341 L1609.46 682.341 L1608.9 682.341 L1608.34 682.341 L1607.78 682.341 L1607.22 682.341 L1606.66 682.341 L1606.1 682.341 L1605.54 682.341 L1604.98 682.341 L1604.42 682.341 L1603.86 682.341 L1603.3 682.341 L1602.74 682.341 L1602.19 682.341 L1601.63 682.341 L1601.07 682.341 L1600.51 682.341 L1599.95 682.341 L1599.39 682.341 L1598.83 682.341 L1598.27 682.341 L1597.71 682.341 L1597.15 682.341 L1596.59 682.341 L1596.03 682.341 L1595.47 682.341 L1594.92 682.341 L1594.36 682.341 L1593.8 682.341 L1593.24 682.341 L1592.68 682.341 L1592.12 682.341 L1591.56 682.341 L1591 682.341 L1590.44 682.341 L1589.88 682.341 L1589.32 682.341 L1588.76 682.341 L1588.2 682.341 L1587.65 682.341 L1587.09 682.341 L1586.53 682.341 L1585.97 682.341 L1585.41 682.341 L1584.85 682.341 L1584.29 682.341 L1583.73 682.341 L1583.17 682.341 L1582.61 682.341 L1582.05 682.341 L1581.49 682.341 L1580.93 682.341 L1580.37 682.341 L1579.82 682.341 L1579.26 682.341 L1578.7 682.341 L1578.14 682.341 L1577.58 682.341 L1577.02 682.341 L1576.46 682.341 L1575.9 682.341 L1575.34 682.341 L1574.78 682.341 L1574.22 682.341 L1573.66 682.341 L1573.1 682.341 L1572.55 682.341 L1571.99 682.341 L1571.43 682.341 L1570.87 682.341 L1570.31 682.341 L1569.75 682.341 L1569.19 682.341 L1568.63 682.341 L1568.07 682.341 L1567.51 682.341 L1566.95 682.341 L1566.39 682.341 L1565.83 682.341 L1565.28 682.341 L1564.72 682.341 L1564.16 682.341 L1563.6 682.341 L1563.04 682.341 L1562.48 682.341 L1561.92 682.341 L1561.36 682.341 L1560.8 682.341 L1560.24 682.341 L1559.68 682.341 L1559.12 682.341 L1558.56 682.341 L1558 682.341 L1557.45 682.341 L1556.89 682.341 L1556.33 682.341 L1555.77 682.341 L1555.21 682.341 L1554.65 682.341 L1554.09 682.341 L1553.53 682.341 L1552.97 682.341 L1552.41 682.341 L1551.85 682.341 L1551.29 682.341 L1550.73 682.341 L1550.18 682.341 L1549.62 682.341 L1549.06 682.341 L1548.5 682.341 L1547.94 682.341 L1547.38 682.341 L1546.82 682.341 L1546.26 682.341 L1545.7 682.341 L1545.14 682.341 L1544.58 682.341 L1544.02 682.341 L1543.46 682.341 L1542.9 682.341 L1542.35 682.341 L1541.79 682.341 L1541.23 682.341 L1540.67 682.341 L1540.11 682.341 L1539.55 682.341 L1538.99 682.341 L1538.43 682.341 L1537.87 682.341 L1537.31 682.341 L1536.75 682.341 L1536.19 682.341 L1535.63 682.341 L1535.08 682.341 L1534.52 682.341 L1533.96 682.341 L1533.4 682.341 L1532.84 682.341 L1532.28 682.341 L1531.72 682.341 L1531.16 682.341 L1530.6 682.341 L1530.04 682.341 L1529.48 682.341 L1528.92 682.341 L1528.36 682.341 L1527.81 682.341 L1527.25 682.341 L1526.69 682.341 L1526.13 682.341 L1525.57 682.341 L1525.01 682.341 L1524.45 682.341 L1523.89 682.341 L1523.33 682.341 L1522.77 682.341 L1522.21 682.341 L1521.65 682.341 L1521.09 682.341 L1520.53 682.341 L1519.98 682.341 L1519.42 682.341 L1518.86 682.341 L1518.3 682.341 L1517.74 682.341 L1517.18 682.341 L1516.62 682.341 L1516.06 682.341 L1515.5 682.341 L1514.94 682.341 L1514.38 682.341 L1513.82 682.341 L1513.26 682.341 L1512.71 682.341 L1512.15 682.341 L1511.59 682.341 L1511.03 682.341 L1510.47 682.341 L1509.91 682.341 L1509.35 682.341 L1508.79 682.341 L1508.23 682.341 L1507.67 682.341 L1507.11 682.341 L1506.55 682.341 L1505.99 682.341 L1505.44 682.341 L1504.88 682.341 L1504.32 682.341 L1503.76 682.341 L1503.2 682.341 L1502.64 682.341 L1502.08 682.341 L1501.52 682.341 L1500.96 682.341 L1500.4 682.341 L1499.84 682.341 L1499.28 682.341 L1498.72 682.341 L1498.16 682.341 L1497.61 682.341 L1497.05 682.341 L1496.49 682.341 L1495.93 682.341 L1495.37 682.341 L1494.81 682.341 L1494.25 682.341 L1493.69 682.341 L1493.13 682.341 L1492.57 682.341 L1492.01 682.341 L1491.45 682.341 L1490.89 682.341 L1490.34 682.341 L1489.78 682.341 L1489.22 682.341 L1488.66 682.341 L1488.1 682.341 L1487.54 682.341 L1486.98 682.341 L1486.42 682.341 L1485.86 682.341 L1485.3 682.341 L1484.74 682.341 L1484.18 682.341 L1483.62 682.341 L1483.07 682.341 L1482.51 682.341 L1481.95 682.341 L1481.39 682.341 L1480.83 682.341 L1480.27 682.341 L1479.71 682.341 L1479.15 682.341 L1478.59 682.341 L1478.03 682.341 L1477.47 682.341 L1476.91 682.341 L1476.35 682.341 L1475.79 682.341 L1475.24 682.341 L1474.68 682.341 L1474.12 682.341 L1473.56 682.341 L1473 682.341 L1472.44 682.341 L1471.88 682.341 L1471.32 682.341 L1470.76 682.341 L1470.2 682.341 L1469.64 682.341 L1469.08 682.341 L1468.52 682.341 L1467.97 682.341 L1467.41 682.341 L1466.85 682.341 L1466.29 682.341 L1465.73 682.341 L1465.17 682.341 L1464.61 682.341 L1464.05 682.341 L1463.49 682.341 L1462.93 682.341 L1462.37 682.341 L1461.81 682.341 L1461.25 682.341 L1460.7 682.341 L1460.14 682.341 L1459.58 682.341 L1459.02 682.341 L1458.46 682.341 L1457.9 682.341 L1457.34 682.341 L1456.78 682.341 L1456.22 682.341 L1455.66 682.341 L1455.1 682.341 L1454.54 682.341 L1453.98 682.341 L1453.42 682.341 L1452.87 682.341 L1452.31 682.341 L1451.75 682.341 L1451.19 682.341 L1450.63 682.341 L1450.07 682.341 L1449.51 682.341 L1448.95 682.341 L1448.39 682.341 L1447.83 682.341 L1447.27 682.341 L1446.71 682.341 L1446.15 682.341 L1445.6 682.341 L1445.04 682.341 L1444.48 682.341 L1443.92 682.341 L1443.36 682.341 L1442.8 682.341 L1442.24 682.341 L1441.68 682.341 L1441.12 682.341 L1440.56 682.341 L1440 682.341 L1439.44 682.341 L1438.88 682.341 L1438.33 682.341 L1437.77 682.341 L1437.21 682.341 L1436.65 682.341 L1436.09 682.341 L1435.53 682.341 L1434.97 682.341 L1434.41 682.341 L1433.85 682.341 L1433.29 682.341 L1432.73 682.341 L1432.17 682.341 L1431.61 682.341 L1431.05 682.341 L1430.5 682.341 L1429.94 682.341 L1429.38 682.341 L1428.82 682.341 L1428.26 682.341 L1427.7 682.341 L1427.14 682.341 L1426.58 682.341 L1426.02 682.341 L1425.46 682.341 L1424.9 682.341 L1424.34 682.341 L1423.78 682.341 L1423.23 682.341 L1422.67 682.341 L1422.11 682.341 L1421.55 682.341 L1420.99 682.341 L1420.43 682.341 L1419.87 682.341 L1419.31 682.341 L1418.75 682.341 L1418.19 682.341 L1417.63 682.341 L1417.07 682.341 L1416.51 682.341 L1415.95 682.341 L1415.4 682.341 L1414.84 682.341 L1414.28 682.341 L1413.72 682.341 L1413.16 682.341 L1412.6 682.341 L1412.04 682.341 L1411.48 682.341 L1410.92 682.341 L1410.36 682.341 L1409.8 682.341 L1409.24 682.341 L1408.68 682.341 L1408.13 682.341 L1407.57 682.341 L1407.01 682.341 L1406.45 682.341 L1405.89 682.341 L1405.33 682.341 L1404.77 682.341 L1404.21 682.341 L1403.65 682.341 L1403.09 682.341 L1402.53 682.341 L1401.97 682.341 L1401.41 682.341 L1400.86 682.341 L1400.3 682.341 L1399.74 682.341 L1399.18 682.341 L1398.62 682.341 L1398.06 682.341 L1397.5 682.341 L1396.94 682.341 L1396.38 682.341 L1395.82 682.341 L1395.26 682.341 L1394.7 682.341 L1394.14 682.341 L1393.58 682.341 L1393.03 682.341 L1392.47 682.341 L1391.91 682.341 L1391.35 682.341 L1390.79 682.341 L1390.23 682.341 L1389.67 682.341 L1389.11 682.341 L1388.55 682.341 L1387.99 682.341 L1387.43 682.341 L1386.87 682.341 L1386.31 682.341 L1385.76 682.341 L1385.2 682.341 L1384.64 682.341 L1384.08 682.341 L1383.52 682.341 L1382.96 682.341 L1382.4 682.341 L1381.84 682.341 L1381.28 682.341 L1380.72 682.341 L1380.16 682.341 L1379.6 682.341 L1379.04 682.341 L1378.49 682.341 L1377.93 682.341 L1377.37 682.341 L1376.81 682.341 L1376.25 682.341 L1375.69 682.341 L1375.13 682.341 L1374.57 682.341 L1374.01 682.341 L1373.45 682.341 L1372.89 682.341 L1372.33 682.341 L1371.77 682.341 L1371.21 682.341 L1370.66 682.341 L1370.1 682.341 L1369.54 682.341 L1368.98 682.341 L1368.42 682.341 L1367.86 682.341 L1367.3 682.341 L1366.74 682.341 L1366.18 682.341 L1365.62 682.341 L1365.06 682.341 L1364.5 682.341 L1363.94 682.341 L1363.39 682.341 L1362.83 682.341 L1362.27 682.341 L1361.71 682.341 L1361.15 682.341 L1360.59 682.341 L1360.03 682.341 L1359.47 682.341 L1358.91 682.341 L1358.35 682.341 L1357.79 682.341 L1357.23 682.341 L1356.67 682.341 L1356.12 682.341 L1355.56 682.341 L1355 682.341 L1354.44 682.341 L1353.88 682.341 L1353.32 682.341 L1352.76 682.341 L1352.2 682.341 L1351.64 682.341 L1351.08 682.341 L1350.52 682.341 L1349.96 682.341 L1349.4 682.341 L1348.84 682.341 L1348.29 682.341 L1347.73 682.341 L1347.17 682.341 L1346.61 682.341 L1346.05 682.341 L1345.49 682.341 L1344.93 682.341 L1344.37 682.341 L1343.81 682.341 L1343.25 682.341 L1342.69 682.341 L1342.13 682.341 L1341.57 682.341 L1341.02 682.341 L1340.46 682.341 L1339.9 682.341 L1339.34 682.341 L1338.78 682.341 L1338.22 682.341 L1337.66 682.341 L1337.1 682.341 L1336.54 682.341 L1335.98 682.341 L1335.42 682.341 L1334.86 682.341 L1334.3 682.341 L1333.75 682.341 L1333.19 682.341 L1332.63 682.341 L1332.07 682.341 L1331.51 682.341 L1330.95 682.341 L1330.39 682.341 L1329.83 682.341 L1329.27 682.341 L1328.71 682.341 L1328.15 682.341 L1327.59 682.341 L1327.03 682.341 L1326.47 682.341 L1325.92 682.341 L1325.36 682.341 L1324.8 682.341 L1324.24 682.341 L1323.68 682.341 L1323.12 682.341 L1322.56 682.341 L1322 682.341 L1321.44 682.341 L1320.88 682.341 L1320.32 682.341 L1319.76 682.341 L1319.2 682.341 L1318.65 682.341 L1318.09 682.341 L1317.53 682.341 L1316.97 682.341 L1316.41 682.341 L1315.85 682.341 L1315.29 682.341 L1314.73 682.341 L1314.17 682.341 L1313.61 682.341 L1313.05 682.341 L1312.49 682.341 L1311.93 682.341 L1311.38 682.341 L1310.82 682.341 L1310.26 682.341 L1309.7 682.341 L1309.14 682.341 L1308.58 682.341 L1308.02 682.341 L1307.46 682.341 L1306.9 682.341 L1306.34 682.341 L1305.78 682.341 L1305.22 682.341 L1304.66 682.341 L1304.1 682.341 L1303.55 682.341 L1302.99 682.341 L1302.43 682.341 L1301.87 682.341 L1301.31 682.341 L1300.75 682.341 L1300.19 682.341 L1299.63 682.341 L1299.07 682.341 L1298.51 682.341 L1297.95 682.341 L1297.39 682.341 L1296.83 682.341 L1296.28 682.341 L1295.72 682.341 L1295.16 682.341 L1294.6 682.341 L1294.04 682.341 L1293.48 682.341 L1292.92 682.341 L1292.36 682.341 L1291.8 682.341 L1291.24 682.341 L1290.68 682.341 L1290.12 682.341 L1289.56 682.341 L1289 682.341 L1288.45 682.341 L1287.89 682.341 L1287.33 682.341 L1286.77 682.341 L1286.21 682.341 L1285.65 682.341 L1285.09 682.341 L1284.53 682.341 L1283.97 682.341 L1283.41 682.341 L1282.85 682.341 L1282.29 682.341 L1281.73 682.341 L1281.18 682.341 L1280.62 682.341 L1280.06 682.341 L1279.5 682.341 L1278.94 682.341 L1278.38 682.341 L1277.82 682.341 L1277.26 682.341 L1276.7 682.341 L1276.14 682.341 L1275.58 682.341 L1275.02 682.341 L1274.46 682.341 L1273.91 682.341 L1273.35 682.341 L1272.79 682.341 L1272.23 682.341 L1271.67 682.341 L1271.11 682.341 L1270.55 682.341 L1269.99 682.341 L1269.43 682.341 L1268.87 682.341 L1268.31 682.341 L1267.75 682.341 L1267.19 682.341 L1266.63 682.341 L1266.08 682.341 L1265.52 682.341 L1264.96 682.341 L1264.4 682.341 L1263.84 682.341 L1263.28 682.341 L1262.72 682.341 L1262.16 682.341 L1261.6 682.341 L1261.04 682.341 L1260.48 682.341 L1259.92 682.341 L1259.36 682.341 L1258.81 682.341 L1258.25 682.341 L1257.69 682.341 L1257.13 682.341 L1256.57 682.341 L1256.01 682.341 L1255.45 682.341 L1254.89 682.341 L1254.33 682.341 L1253.77 682.341 L1253.21 682.341 L1252.65 682.341 L1252.09 682.341 L1251.54 682.341 L1250.98 682.341 L1250.42 682.341 L1249.86 682.341 L1249.3 682.341 L1248.74 682.341 L1248.18 682.341 L1247.62 682.341 L1247.06 682.341 L1246.5 682.341 L1245.94 682.341 L1245.38 682.341 L1244.82 682.341 L1244.26 682.341 L1243.71 682.341 L1243.15 682.341 L1242.59 682.341 L1242.03 682.341 L1241.47 682.341 L1240.91 682.341 L1240.35 682.341 L1239.79 682.341 L1239.23 682.341 L1238.67 682.341 L1238.11 682.341 L1237.55 682.341 L1236.99 682.341 L1236.44 682.341 L1235.88 682.341 L1235.32 682.341 L1234.76 682.341 L1234.2 682.341 L1233.64 682.341 L1233.08 682.341 L1232.52 682.341 L1231.96 682.341 L1231.4 682.341 L1230.84 682.341 L1230.28 682.341 L1229.72 682.341 L1229.17 682.341 L1228.61 682.341 L1228.05 682.341 L1227.49 682.341 L1226.93 682.341 L1226.37 682.341 L1225.81 682.341 L1225.25 682.341 L1224.69 682.341 L1224.13 682.341 L1223.57 682.341 L1223.01 682.341 L1222.45 682.341 L1221.89 682.341 L1221.34 682.341 L1220.78 682.341 L1220.22 682.341 L1219.66 682.341 L1219.1 682.341 L1218.54 682.341 L1217.98 682.341 L1217.42 682.341 L1216.86 682.341 L1216.3 682.341 L1215.74 682.341 L1215.18 682.341 L1214.62 682.341 L1214.07 682.341 L1213.51 682.341 L1212.95 682.341 L1212.39 682.341 L1211.83 682.341 L1211.27 682.341 L1210.71 682.341 L1210.15 682.341 L1209.59 682.341 L1209.03 682.341 L1208.47 682.341 L1207.91 682.341 L1207.35 682.341 L1206.8 682.341 L1206.24 682.341 L1205.68 682.341 L1205.12 682.341 L1204.56 682.341 L1204 682.341 L1203.44 682.341 L1202.88 682.341 L1202.32 682.341 L1201.76 682.341 L1201.2 682.341 L1200.64 682.341 L1200.08 682.341 L1199.52 682.341 L1198.97 682.341 L1198.41 682.341 L1197.85 682.341 L1197.29 682.341 L1196.73 682.341 L1196.17 682.341 L1195.61 682.341 L1195.05 682.341 L1194.49 682.341 L1193.93 682.341 L1193.37 682.341 L1192.81 682.341 L1192.25 682.341 L1191.7 682.341 L1191.14 682.341 L1190.58 682.341 L1190.02 682.341 L1189.46 682.341 L1188.9 682.341 L1188.34 682.341 L1187.78 682.341 L1187.22 682.341 L1186.66 682.341 L1186.1 682.341 L1185.54 682.341 L1184.98 682.341 L1184.43 682.341 L1183.87 682.341 L1183.31 682.341 L1182.75 682.341 L1182.19 682.341 L1181.63 682.341 L1181.07 682.341 L1180.51 682.341 L1179.95 682.341 L1179.39 682.341 L1178.83 682.341 L1178.27 682.341 L1177.71 682.341 L1177.15 682.341 L1176.6 682.341 L1176.04 682.341 L1175.48 682.341 L1174.92 682.341 L1174.36 682.341 L1173.8 682.341 L1173.24 682.341 L1172.68 682.341 L1172.12 682.341 L1171.56 682.341 L1171 682.341 L1170.44 682.341 L1169.88 682.341 L1169.33 682.341 L1168.77 682.341 L1168.21 682.341 L1167.65 682.341 L1167.09 682.341 L1166.53 682.341 L1165.97 682.341 L1165.41 682.341 L1164.85 682.341 L1164.29 682.341 L1163.73 682.341 L1163.17 682.341 L1162.61 682.341 L1162.05 682.341 L1161.5 682.341 L1160.94 682.341 L1160.38 682.341 L1159.82 682.341 L1159.26 682.341 L1158.7 682.341 L1158.14 682.341 L1157.58 682.341 L1157.02 682.341 L1156.46 682.341 L1155.9 682.341 L1155.34 682.341 L1154.78 682.341 L1154.23 682.341 L1153.67 682.341 L1153.11 682.341 L1152.55 682.341 L1151.99 682.341 L1151.43 682.341 L1150.87 682.341 L1150.31 682.341 L1149.75 682.341 L1149.19 682.341 L1148.63 682.341 L1148.07 682.341 L1147.51 682.341 L1146.96 682.341 L1146.4 682.341 L1145.84 682.341 L1145.28 682.341 L1144.72 682.341 L1144.16 682.341 L1143.6 682.341 L1143.04 682.341 L1142.48 682.341 L1141.92 682.341 L1141.36 682.341 L1140.8 682.341 L1140.24 682.341 L1139.68 682.341 L1139.13 682.341 L1138.57 682.341 L1138.01 682.341 L1137.45 682.341 L1136.89 682.341 L1136.33 682.341 L1135.77 682.341 L1135.21 682.341 L1134.65 682.341 L1134.09 682.341 L1133.53 682.341 L1132.97 682.341 L1132.41 682.341 L1131.86 682.341 L1131.3 682.341 L1130.74 682.341 L1130.18 682.341 L1129.62 682.341 L1129.06 682.341 L1128.5 682.341 L1127.94 682.341 L1127.38 682.341 L1126.82 682.341 L1126.26 682.341 L1125.7 682.341 L1125.14 682.341 L1124.59 682.341 L1124.03 682.341 L1123.47 682.341 L1122.91 682.341 L1122.35 682.341 L1121.79 682.341 L1121.23 682.341 L1120.67 682.341 L1120.11 682.341 L1119.55 682.341 L1118.99 682.341 L1118.43 682.341 L1117.87 682.341 L1117.31 682.341 L1116.76 682.341 L1116.2 682.341 L1115.64 682.341 L1115.08 682.341 L1114.52 682.341 L1113.96 682.341 L1113.4 682.341 L1112.84 682.341 L1112.28 682.341 L1111.72 682.341 L1111.16 682.341 L1110.6 682.341 L1110.04 682.341 L1109.49 682.341 L1108.93 682.341 L1108.37 682.341 L1107.81 682.341 L1107.25 682.341 L1106.69 682.341 L1106.13 682.341 L1105.57 682.341 L1105.01 682.341 L1104.45 682.341 L1103.89 682.341 L1103.33 682.341 L1102.77 682.341 L1102.22 682.341 L1101.66 682.341 L1101.1 682.341 L1100.54 682.341 L1099.98 682.341 L1099.42 682.341 L1098.86 682.341 L1098.3 682.341 L1097.74 682.341 L1097.18 682.341 L1096.62 682.341 L1096.06 682.341 L1095.5 682.341 L1094.94 682.341 L1094.39 682.341 L1093.83 682.341 L1093.27 682.341 L1092.71 682.341 L1092.15 682.341 L1091.59 682.341 L1091.03 682.341 L1090.47 682.341 L1089.91 682.341 L1089.35 682.341 L1088.79 682.341 L1088.23 682.341 L1087.67 682.341 L1087.12 682.341 L1086.56 682.341 L1086 682.341 L1085.44 682.341 L1084.88 682.341 L1084.32 682.341 L1083.76 682.341 L1083.2 682.341 L1082.64 682.341 L1082.08 682.341 L1081.52 682.341 L1080.96 682.341 L1080.4 682.341 L1079.85 682.341 L1079.29 682.341 L1078.73 682.341 L1078.17 682.341 L1077.61 682.341 L1077.05 682.341 L1076.49 682.341 L1075.93 682.341 L1075.37 682.341 L1074.81 682.341 L1074.25 682.341 L1073.69 682.341 L1073.13 682.341 L1072.57 682.341 L1072.02 682.341 L1071.46 682.341 L1070.9 682.341 L1070.34 682.341 L1069.78 682.341 L1069.22 682.341 L1068.66 682.341 L1068.1 682.341 L1067.54 682.341 L1066.98 682.341 L1066.42 682.341 L1065.86 682.341 L1065.3 682.341 L1064.75 682.341 L1064.19 682.341 L1063.63 682.341 L1063.07 682.341 L1062.51 682.341 L1061.95 682.341 L1061.39 682.341 L1060.83 682.341 L1060.27 682.341 L1059.71 682.341 L1059.15 682.341 L1058.59 682.341 L1058.03 682.341 L1057.48 682.341 L1056.92 682.341 L1056.36 682.341 L1055.8 682.341 L1055.24 682.341 L1054.68 682.341 L1054.12 682.341 L1053.56 682.341 L1053 682.341 L1052.44 682.341 L1051.88 682.341 L1051.32 682.341 L1050.76 682.341 L1050.2 682.341 L1049.65 682.341 L1049.09 682.341 L1048.53 682.341 L1047.97 682.341 L1047.41 682.341 L1046.85 682.341 L1046.29 682.341 L1045.73 682.341 L1045.17 682.341 L1044.61 682.341 L1044.05 682.341 L1043.49 682.341 L1042.93 682.341 L1042.38 682.341 L1041.82 682.341 L1041.26 682.341 L1040.7 682.341 L1040.14 682.341 L1039.58 682.341 L1039.02 682.341 L1038.46 682.341 L1037.9 682.341 L1037.34 682.341 L1036.78 682.341 L1036.22 682.341 L1035.66 682.341 L1035.1 682.341 L1034.55 682.341 L1033.99 682.341 L1033.43 682.341 L1032.87 682.341 L1032.31 682.341 L1031.75 682.341 L1031.19 682.341 L1030.63 682.341 L1030.07 682.341 L1029.51 682.341 L1028.95 682.341 L1028.39 682.341 L1027.83 682.341 L1027.28 682.341 L1026.72 682.341 L1026.16 682.341 L1025.6 682.341 L1025.04 682.341 L1024.48 682.341 L1023.92 682.341 L1023.36 682.341 L1022.8 682.341 L1022.24 682.341 L1021.68 682.341 L1021.12 682.341 L1020.56 682.341 L1020.01 682.341 L1019.45 682.341 L1018.89 682.341 L1018.33 682.341 L1017.77 682.341 L1017.21 682.341 L1016.65 682.341 L1016.09 682.341 L1015.53 682.341 L1014.97 682.341 L1014.41 682.341 L1013.85 682.341 L1013.29 682.341 L1012.73 682.341 L1012.18 682.341 L1011.62 682.341 L1011.06 682.341 L1010.5 682.341 L1009.94 682.341 L1009.38 682.341 L1008.82 682.341 L1008.26 682.341 L1007.7 682.341 L1007.14 682.341 L1006.58 682.341 L1006.02 682.341 L1005.46 682.341 L1004.91 682.341 L1004.35 682.341 L1003.79 682.341 L1003.23 682.341 L1002.67 682.341 L1002.11 682.341 L1001.55 682.341 L1000.99 682.341 L1000.43 682.341 L999.872 682.341 L999.313 682.341 L998.754 682.341 L998.194 682.341 L997.635 682.341 L997.076 682.341 L996.517 682.341 L995.957 682.341 L995.398 682.341 L994.839 682.341 L994.28 682.341 L993.72 682.341 L993.161 682.341 L992.602 682.341 L992.043 682.341 L991.483 682.341 L990.924 682.341 L990.365 682.341 L989.806 682.341 L989.246 682.341 L988.687 682.341 L988.128 682.341 L987.569 682.341 L987.009 682.341 L986.45 682.341 L985.891 682.341 L985.332 682.341 L984.772 682.341 L984.213 682.341 L983.654 682.341 L983.095 682.341 L982.535 682.341 L981.976 682.341 L981.417 682.341 L980.858 682.341 L980.298 682.341 L979.739 682.341 L979.18 682.341 L978.621 682.341 L978.061 682.341 L977.502 682.341 L976.943 682.341 L976.384 682.341 L975.824 682.341 L975.265 682.341 L974.706 682.341 L974.147 682.341 L973.587 682.341 L973.028 682.341 L972.469 682.341 L971.91 682.341 L971.35 682.341 L970.791 682.341 L970.232 682.341 L969.673 682.341 L969.113 682.341 L968.554 682.341 L967.995 682.341 L967.436 682.341 L966.876 682.341 L966.317 682.341 L965.758 682.341 L965.199 682.341 L964.639 682.341 L964.08 682.341 L963.521 682.341 L962.962 682.341 L962.402 682.341 L961.843 682.341 L961.284 682.341 L960.725 682.341 L960.165 682.341 L959.606 682.341 L959.047 682.341 L958.488 682.341 L957.928 682.341 L957.369 682.341 L956.81 682.341 L956.251 682.341 L955.691 682.341 L955.132 682.341 L954.573 682.341 L954.014 682.341 L953.454 682.341 L952.895 682.341 L952.336 682.341 L951.777 682.341 L951.217 682.341 L950.658 682.341 L950.099 682.341 L949.54 682.341 L948.98 682.341 L948.421 682.341 L947.862 682.341 L947.303 682.341 L946.743 682.341 L946.184 682.341 L945.625 682.341 L945.066 682.341 L944.506 682.341 L943.947 682.341 L943.388 682.341 L942.829 682.341 L942.269 682.341 L941.71 682.341 L941.151 682.341 L940.592 682.341 L940.032 682.341 L939.473 682.341 L938.914 682.341 L938.355 682.341 L937.795 682.341 L937.236 682.341 L936.677 682.341 L936.118 682.341 L935.558 682.341 L934.999 682.341 L934.44 682.341 L933.881 682.341 L933.321 682.341 L932.762 682.341 L932.203 682.341 L931.644 682.341 L931.084 682.341 L930.525 682.341 L929.966 682.341 L929.406 682.341 L928.847 682.341 L928.288 682.341 L927.729 682.341 L927.169 682.341 L926.61 682.341 L926.051 682.341 L925.492 682.341 L924.932 682.341 L924.373 682.341 L923.814 682.341 L923.255 682.341 L922.695 682.341 L922.136 682.341 L921.577 682.341 L921.018 682.341 L920.458 682.341 L919.899 682.341 L919.34 682.341 L918.781 682.341 L918.221 682.341 L917.662 682.341 L917.103 682.341 L916.544 682.341 L915.984 682.341 L915.425 682.341 L914.866 682.341 L914.307 682.341 L913.747 682.341 L913.188 682.341 L912.629 682.341 L912.07 682.341 L911.51 682.341 L910.951 682.341 L910.392 682.341 L909.833 682.341 L909.273 682.341 L908.714 682.341 L908.155 682.341 L907.596 682.341 L907.036 682.341 L906.477 682.341 L905.918 682.341 L905.359 682.341 L904.799 682.341 L904.24 682.341 L903.681 682.341 L903.122 682.341 L902.562 682.341 L902.003 682.341 L901.444 682.341 L900.885 682.341 L900.325 682.341 L899.766 682.341 L899.207 682.341 L898.648 682.341 L898.088 682.341 L897.529 682.341 L896.97 682.341 L896.411 682.341 L895.851 682.341 L895.292 682.341 L894.733 682.341 L894.174 682.341 L893.614 682.341 L893.055 682.341 L892.496 682.341 L891.937 682.341 L891.377 682.341 L890.818 682.341 L890.259 682.341 L889.7 682.341 L889.14 682.341 L888.581 682.341 L888.022 682.341 L887.463 682.341 L886.903 682.341 L886.344 682.341 L885.785 682.341 L885.226 682.341 L884.666 682.341 L884.107 682.341 L883.548 682.341 L882.989 682.341 L882.429 682.341 L881.87 682.341 L881.311 682.341 L880.752 682.341 L880.192 682.341 L879.633 682.341 L879.074 682.341 L878.515 682.341 L877.955 682.341 L877.396 682.341 L876.837 682.341 L876.278 682.341 L875.718 682.341 L875.159 682.341 L874.6 682.341 L874.041 682.341 L873.481 682.341 L872.922 682.341 L872.363 682.341 L871.804 682.341 L871.244 682.341 L870.685 682.341 L870.126 682.341 L869.567 682.341 L869.007 682.341 L868.448 682.341 L867.889 682.341 L867.33 682.341 L866.77 682.341 L866.211 682.341 L865.652 682.341 L865.093 682.341 L864.533 682.341 L863.974 682.341 L863.415 682.341 L862.856 682.341 L862.296 682.341 L861.737 682.341 L861.178 682.341 L860.619 682.341 L860.059 682.341 L859.5 682.341 L858.941 682.341 L858.382 682.341 L857.822 682.341 L857.263 682.341 L856.704 682.341 L856.145 682.341 L855.585 682.341 L855.026 682.341 L854.467 682.341 L853.908 682.341 L853.348 682.341 L852.789 682.341 L852.23 682.341 L851.671 682.341 L851.111 682.341 L850.552 682.341 L849.993 682.341 L849.434 682.341 L848.874 682.341 L848.315 682.341 L847.756 682.341 L847.197 682.341 L846.637 682.341 L846.078 682.341 L845.519 682.341 L844.96 682.341 L844.4 682.341 L843.841 682.341 L843.282 682.341 L842.723 682.341 L842.163 682.341 L841.604 682.341 L841.045 682.341 L840.486 682.341 L839.926 682.341 L839.367 682.341 L838.808 682.341 L838.249 682.341 L837.689 682.341 L837.13 682.341 L836.571 682.341 L836.012 682.341 L835.452 682.341 L834.893 682.341 L834.334 682.341 L833.775 682.341 L833.215 682.341 L832.656 682.341 L832.097 682.341 L831.538 682.341 L830.978 682.341 L830.419 682.341 L829.86 682.341 L829.301 682.341 L828.741 682.341 L828.182 682.341 L827.623 682.341 L827.064 682.341 L826.504 682.341 L825.945 682.341 L825.386 682.341 L824.827 682.341 L824.267 682.341 L823.708 682.341 L823.149 682.341 L822.59 682.341 L822.03 682.341 L821.471 682.341 L820.912 682.341 L820.353 682.341 L819.793 682.341 L819.234 682.341 L818.675 682.341 L818.116 682.341 L817.556 682.341 L816.997 682.341 L816.438 682.341 L815.879 682.341 L815.319 682.341 L814.76 682.341 L814.201 682.341 L813.642 682.341 L813.082 682.341 L812.523 682.341 L811.964 682.341 L811.405 682.341 L810.845 682.341 L810.286 682.341 L809.727 682.341 L809.168 682.341 L808.608 682.341 L808.049 682.341 L807.49 682.341 L806.931 682.341 L806.371 682.341 L805.812 682.341 L805.253 682.341 L804.693 682.341 L804.134 682.341 L803.575 682.341 L803.016 682.341 L802.456 682.341 L801.897 682.341 L801.338 682.341 L800.779 682.341 L800.219 682.341 L799.66 682.341 L799.101 682.341 L798.542 682.341 L797.982 682.341 L797.423 682.341 L796.864 682.341 L796.305 682.341 L795.745 682.341 L795.186 682.341 L794.627 682.341 L794.068 682.341 L793.508 682.341 L792.949 682.341 L792.39 682.341 L791.831 682.341 L791.271 682.341 L790.712 682.341 L790.153 682.341 L789.594 682.341 L789.034 682.341 L788.475 682.341 L787.916 682.341 L787.357 682.341 L786.797 682.341 L786.238 682.341 L785.679 682.341 L785.12 682.341 L784.56 682.341 L784.001 682.341 L783.442 682.341 L782.883 682.341 L782.323 682.341 L781.764 682.341 L781.205 682.341 L780.646 682.341 L780.086 682.341 L779.527 682.341 L778.968 682.341 L778.409 682.341 L777.849 682.341 L777.29 682.341 L776.731 682.341 L776.172 682.341 L775.612 682.341 L775.053 682.341 L774.494 682.341 L773.935 682.341 L773.375 682.341 L772.816 682.341 L772.257 682.341 L771.698 682.341 L771.138 682.341 L770.579 682.341 L770.02 682.341 L769.461 682.341 L768.901 682.341 L768.342 682.341 L767.783 682.341 L767.224 682.341 L766.664 682.341 L766.105 682.341 L765.546 682.341 L764.987 682.341 L764.427 682.341 L763.868 682.341 L763.309 682.341 L762.75 682.341 L762.19 682.341 L761.631 682.341 L761.072 682.341 L760.513 682.341 L759.953 682.341 L759.394 682.341 L758.835 682.341 L758.276 682.341 L757.716 682.341 L757.157 682.341 L756.598 682.341 L756.039 682.341 L755.479 682.341 L754.92 682.341 L754.361 682.341 L753.802 682.341 L753.242 682.341 L752.683 682.341 L752.124 682.341 L751.565 682.341 L751.005 682.341 L750.446 682.341 L749.887 682.341 L749.328 682.341 L748.768 682.341 L748.209 682.341 L747.65 682.341 L747.091 682.341 L746.531 682.341 L745.972 682.341 L745.413 682.341 L744.854 682.341 L744.294 682.341 L743.735 682.341 L743.176 682.341 L742.617 682.341 L742.057 682.341 L741.498 682.341 L740.939 682.341 L740.38 682.341 L739.82 682.341 L739.261 682.341 L738.702 682.341 L738.143 682.341 L737.583 682.341 L737.024 682.341 L736.465 682.341 L735.906 682.341 L735.346 682.341 L734.787 682.341 L734.228 682.341 L733.669 682.341 L733.109 682.341 L732.55 682.341 L731.991 682.341 L731.432 682.341 L730.872 682.341 L730.313 682.341 L729.754 682.341 L729.195 682.341 L728.635 682.341 L728.076 682.341 L727.517 682.341 L726.958 682.341 L726.398 682.341 L725.839 682.341 L725.28 682.341 L724.721 682.341 L724.161 682.341 L723.602 682.341 L723.043 682.341 L722.484 682.341 L721.924 682.341 L721.365 682.341 L720.806 682.341 L720.247 682.341  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip553)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.33 720.806,683.33 721.365,683.33 721.924,683.33 722.484,683.33 723.043,683.33 723.602,683.33 724.161,683.33 724.721,683.33 725.28,683.33 725.839,683.33 726.398,683.33 726.958,683.33 727.517,683.33 728.076,683.33 728.635,683.33 729.195,683.33 729.754,683.33 730.313,683.33 730.872,683.33 731.432,683.33 731.991,683.33 732.55,683.33 733.109,683.33 733.669,683.33 734.228,683.33 734.787,683.33 735.346,683.33 735.906,683.33 736.465,683.33 737.024,683.33 737.583,683.33 738.143,683.33 738.702,683.33 739.261,683.33 739.82,683.33 740.38,683.33 740.939,683.33 741.498,683.33 742.057,683.33 742.617,683.33 743.176,683.33 743.735,683.33 744.294,683.33 744.854,683.33 745.413,683.33 745.972,683.33 746.531,683.33 747.091,683.33 747.65,683.33 748.209,683.33 748.768,683.33 749.328,683.33 749.887,683.33 750.446,683.33 751.005,683.33 751.565,683.33 752.124,683.33 752.683,683.33 753.242,683.33 753.802,683.33 754.361,683.33 754.92,683.33 755.479,683.33 756.039,683.33 756.598,683.33 757.157,683.33 757.716,683.33 758.276,683.33 758.835,683.33 759.394,683.33 759.953,683.33 760.513,683.33 761.072,683.33 761.631,683.33 762.19,683.33 762.75,683.33 763.309,683.33 763.868,683.33 764.427,683.33 764.987,683.33 765.546,683.33 766.105,683.33 766.664,683.33 767.224,683.33 767.783,683.33 768.342,683.33 768.901,683.33 769.461,683.33 770.02,683.33 770.579,683.33 771.138,683.33 771.698,683.33 772.257,683.33 772.816,683.33 773.375,683.33 773.935,683.33 774.494,683.33 775.053,683.33 775.612,683.33 776.172,683.33 776.731,683.33 777.29,683.33 777.849,683.33 778.409,683.33 778.968,683.33 779.527,683.33 780.086,683.33 780.646,683.33 781.205,683.33 781.764,683.33 782.323,683.33 782.883,683.33 783.442,683.33 784.001,683.33 784.56,683.33 785.12,683.33 785.679,683.33 786.238,683.33 786.797,683.33 787.357,683.33 787.916,683.33 788.475,683.33 789.034,683.33 789.594,683.33 790.153,683.33 790.712,683.33 791.271,683.33 791.831,683.33 792.39,683.33 792.949,683.33 793.508,683.33 794.068,683.33 794.627,683.33 795.186,683.33 795.745,683.33 796.305,683.33 796.864,683.33 797.423,683.33 797.982,683.33 798.542,683.33 799.101,683.33 799.66,683.33 800.219,683.33 800.779,683.33 801.338,683.33 801.897,683.33 802.456,683.33 803.016,683.33 803.575,683.33 804.134,683.33 804.693,683.33 805.253,683.33 805.812,683.33 806.371,683.33 806.931,683.33 807.49,683.33 808.049,683.33 808.608,683.33 809.168,683.33 809.727,683.33 810.286,683.33 810.845,683.33 811.405,683.33 811.964,683.33 812.523,683.33 813.082,683.33 813.642,683.33 814.201,683.33 814.76,683.33 815.319,683.33 815.879,683.33 816.438,683.33 816.997,683.33 817.556,683.33 818.116,683.33 818.675,683.33 819.234,683.33 819.793,683.33 820.353,683.33 820.912,683.33 821.471,683.33 822.03,683.33 822.59,683.33 823.149,683.33 823.708,683.33 824.267,683.33 824.827,683.33 825.386,683.33 825.945,683.33 826.504,683.33 827.064,683.33 827.623,683.33 828.182,683.33 828.741,683.33 829.301,683.33 829.86,683.33 830.419,683.33 830.978,683.33 831.538,683.33 832.097,683.33 832.656,683.33 833.215,683.33 833.775,683.33 834.334,683.33 834.893,683.33 835.452,683.33 836.012,683.33 836.571,683.33 837.13,683.33 837.689,683.33 838.249,683.33 838.808,683.33 839.367,683.33 839.926,683.33 840.486,683.33 841.045,683.33 841.604,683.33 842.163,683.33 842.723,683.33 843.282,683.33 843.841,683.33 844.4,683.33 844.96,683.33 845.519,683.33 846.078,683.33 846.637,683.33 847.197,683.33 847.756,683.33 848.315,683.33 848.874,683.33 849.434,683.33 849.993,683.33 850.552,683.33 851.111,683.33 851.671,683.33 852.23,683.33 852.789,683.33 853.348,683.33 853.908,683.33 854.467,683.33 855.026,683.33 855.585,683.33 856.145,683.33 856.704,683.33 857.263,683.33 857.822,683.33 858.382,683.33 858.941,683.33 859.5,683.33 860.059,683.33 860.619,683.33 861.178,683.33 861.737,683.33 862.296,683.33 862.856,683.33 863.415,683.33 863.974,683.33 864.533,683.33 865.093,683.33 865.652,683.33 866.211,683.33 866.77,683.33 867.33,683.33 867.889,683.33 868.448,683.33 869.007,683.33 869.567,683.33 870.126,683.33 870.685,683.33 871.244,683.33 871.804,683.33 872.363,683.33 872.922,683.33 873.481,683.33 874.041,683.33 874.6,683.33 875.159,683.33 875.718,683.33 876.278,683.33 876.837,683.33 877.396,683.33 877.955,683.33 878.515,683.33 879.074,683.33 879.633,683.33 880.192,683.33 880.752,683.33 881.311,683.33 881.87,683.33 882.429,683.33 882.989,683.33 883.548,683.33 884.107,683.33 884.666,683.33 885.226,683.33 885.785,683.33 886.344,683.33 886.903,683.33 887.463,683.33 888.022,683.33 888.581,683.33 889.14,683.33 889.7,683.33 890.259,683.33 890.818,683.33 891.377,683.33 891.937,683.33 892.496,683.33 893.055,683.33 893.614,683.33 894.174,683.33 894.733,683.33 895.292,683.33 895.851,683.33 896.411,683.33 896.97,683.33 897.529,683.33 898.088,683.33 898.648,683.33 899.207,683.33 899.766,683.33 900.325,683.33 900.885,683.33 901.444,683.33 902.003,683.33 902.562,683.33 903.122,683.33 903.681,683.33 904.24,683.33 904.799,683.33 905.359,683.33 905.918,683.33 906.477,683.33 907.036,683.33 907.596,683.33 908.155,683.33 908.714,683.33 909.273,683.33 909.833,683.33 910.392,683.33 910.951,683.33 911.51,683.33 912.07,683.33 912.629,683.33 913.188,683.33 913.747,683.33 914.307,683.33 914.866,683.33 915.425,683.33 915.984,683.33 916.544,683.33 917.103,683.33 917.662,683.33 918.221,683.33 918.781,683.33 919.34,683.33 919.899,683.33 920.458,683.33 921.018,683.33 921.577,683.33 922.136,683.33 922.695,683.33 923.255,683.33 923.814,683.33 924.373,683.33 924.932,683.33 925.492,683.33 926.051,683.33 926.61,683.33 927.169,683.33 927.729,683.33 928.288,683.33 928.847,683.33 929.406,683.33 929.966,683.33 930.525,683.33 931.084,683.33 931.644,683.33 932.203,683.33 932.762,683.33 933.321,683.33 933.881,683.33 934.44,683.33 934.999,683.33 935.558,683.33 936.118,683.33 936.677,683.33 937.236,683.33 937.795,683.33 938.355,683.33 938.914,683.33 939.473,683.33 940.032,683.33 940.592,683.33 941.151,683.33 941.71,683.33 942.269,683.33 942.829,683.33 943.388,683.33 943.947,683.33 944.506,683.33 945.066,683.33 945.625,683.33 946.184,683.33 946.743,683.33 947.303,683.33 947.862,683.33 948.421,683.33 948.98,683.33 949.54,683.33 950.099,683.33 950.658,683.33 951.217,683.33 951.777,683.33 952.336,683.33 952.895,683.33 953.454,683.33 954.014,683.33 954.573,683.33 955.132,683.33 955.691,683.33 956.251,683.33 956.81,683.33 957.369,683.33 957.928,683.33 958.488,683.33 959.047,683.33 959.606,683.33 960.165,683.33 960.725,683.33 961.284,683.33 961.843,683.33 962.402,683.33 962.962,683.33 963.521,683.33 964.08,683.33 964.639,683.33 965.199,683.33 965.758,683.33 966.317,683.33 966.876,683.33 967.436,683.33 967.995,683.33 968.554,683.33 969.113,683.33 969.673,683.33 970.232,683.33 970.791,683.33 971.35,683.33 971.91,683.33 972.469,683.33 973.028,683.33 973.587,683.33 974.147,683.33 974.706,683.33 975.265,683.33 975.824,683.33 976.384,683.33 976.943,683.33 977.502,683.33 978.061,683.33 978.621,683.33 979.18,683.33 979.739,683.33 980.298,683.33 980.858,683.33 981.417,683.33 981.976,683.33 982.535,683.33 983.095,683.33 983.654,683.33 984.213,683.33 984.772,683.33 985.332,683.33 985.891,683.33 986.45,683.33 987.009,683.33 987.569,683.33 988.128,683.33 988.687,683.33 989.246,683.33 989.806,683.33 990.365,683.33 990.924,683.33 991.483,683.33 992.043,683.33 992.602,683.33 993.161,683.33 993.72,683.33 994.28,683.33 994.839,683.33 995.398,683.33 995.957,683.33 996.517,683.33 997.076,683.33 997.635,683.33 998.194,683.33 998.754,683.33 999.313,683.33 999.872,683.33 1000.43,683.33 1000.99,683.33 1001.55,683.33 1002.11,683.33 1002.67,683.33 1003.23,683.33 1003.79,683.33 1004.35,683.33 1004.91,683.33 1005.46,683.33 1006.02,683.33 1006.58,683.33 1007.14,683.33 1007.7,683.33 1008.26,683.33 1008.82,683.33 1009.38,683.33 1009.94,683.33 1010.5,683.33 1011.06,683.33 1011.62,683.33 1012.18,683.33 1012.73,683.33 1013.29,683.33 1013.85,683.33 1014.41,683.33 1014.97,683.33 1015.53,683.33 1016.09,683.33 1016.65,683.33 1017.21,683.33 1017.77,683.33 1018.33,683.33 1018.89,683.33 1019.45,683.33 1020.01,683.33 1020.56,683.33 1021.12,683.33 1021.68,683.33 1022.24,683.33 1022.8,683.33 1023.36,683.33 1023.92,683.33 1024.48,683.33 1025.04,683.33 1025.6,683.33 1026.16,683.33 1026.72,683.33 1027.28,683.33 1027.83,683.33 1028.39,683.33 1028.95,683.33 1029.51,683.33 1030.07,683.33 1030.63,683.33 1031.19,683.33 1031.75,683.33 1032.31,683.33 1032.87,683.33 1033.43,683.33 1033.99,683.33 1034.55,683.33 1035.1,683.33 1035.66,683.33 1036.22,683.33 1036.78,683.33 1037.34,683.33 1037.9,683.33 1038.46,683.33 1039.02,683.33 1039.58,683.33 1040.14,683.33 1040.7,683.33 1041.26,683.33 1041.82,683.33 1042.38,683.33 1042.93,683.33 1043.49,683.33 1044.05,683.33 1044.61,683.33 1045.17,683.33 1045.73,683.33 1046.29,683.33 1046.85,683.33 1047.41,683.33 1047.97,683.33 1048.53,683.33 1049.09,683.33 1049.65,683.33 1050.2,683.33 1050.76,683.33 1051.32,683.33 1051.88,683.33 1052.44,683.33 1053,683.33 1053.56,683.33 1054.12,683.33 1054.68,683.33 1055.24,683.33 1055.8,683.33 1056.36,683.33 1056.92,683.33 1057.48,683.33 1058.03,683.33 1058.59,683.33 1059.15,683.33 1059.71,683.33 1060.27,683.33 1060.83,683.33 1061.39,683.33 1061.95,683.33 1062.51,683.33 1063.07,683.33 1063.63,683.33 1064.19,683.33 1064.75,683.33 1065.3,683.33 1065.86,683.33 1066.42,683.33 1066.98,683.33 1067.54,683.33 1068.1,683.33 1068.66,683.33 1069.22,683.33 1069.78,683.33 1070.34,683.33 1070.9,683.33 1071.46,683.33 1072.02,683.33 1072.57,683.33 1073.13,683.33 1073.69,683.33 1074.25,683.33 1074.81,683.33 1075.37,683.33 1075.93,683.33 1076.49,683.33 1077.05,683.33 1077.61,683.33 1078.17,683.33 1078.73,683.33 1079.29,683.33 1079.85,683.33 1080.4,683.33 1080.96,683.33 1081.52,683.33 1082.08,683.33 1082.64,683.33 1083.2,683.33 1083.76,683.33 1084.32,683.33 1084.88,683.33 1085.44,683.33 1086,683.33 1086.56,683.33 1087.12,683.33 1087.67,683.33 1088.23,683.33 1088.79,683.33 1089.35,683.33 1089.91,683.33 1090.47,683.33 1091.03,683.33 1091.59,683.33 1092.15,683.33 1092.71,683.33 1093.27,683.33 1093.83,683.33 1094.39,683.33 1094.94,683.33 1095.5,683.33 1096.06,683.33 1096.62,683.33 1097.18,683.33 1097.74,683.33 1098.3,683.33 1098.86,683.33 1099.42,683.33 1099.98,683.33 1100.54,683.33 1101.1,683.33 1101.66,683.33 1102.22,683.33 1102.77,683.33 1103.33,683.33 1103.89,683.33 1104.45,683.33 1105.01,683.33 1105.57,683.33 1106.13,683.33 1106.69,683.33 1107.25,683.33 1107.81,683.33 1108.37,683.33 1108.93,683.33 1109.49,683.33 1110.04,683.33 1110.6,683.33 1111.16,683.33 1111.72,683.33 1112.28,683.33 1112.84,683.33 1113.4,683.33 1113.96,683.33 1114.52,683.33 1115.08,683.33 1115.64,683.33 1116.2,683.33 1116.76,683.33 1117.31,683.33 1117.87,683.33 1118.43,683.33 1118.99,683.33 1119.55,683.33 1120.11,683.33 1120.67,683.33 1121.23,683.33 1121.79,683.33 1122.35,683.33 1122.91,683.33 1123.47,683.33 1124.03,683.33 1124.59,683.33 1125.14,683.33 1125.7,683.33 1126.26,683.33 1126.82,683.33 1127.38,683.33 1127.94,683.33 1128.5,683.33 1129.06,683.33 1129.62,683.33 1130.18,683.33 1130.74,683.33 1131.3,683.33 1131.86,683.33 1132.41,683.33 1132.97,683.33 1133.53,683.33 1134.09,683.33 1134.65,683.33 1135.21,683.33 1135.77,683.33 1136.33,683.33 1136.89,683.33 1137.45,683.33 1138.01,683.33 1138.57,683.33 1139.13,683.33 1139.68,683.33 1140.24,683.33 1140.8,683.33 1141.36,683.33 1141.92,683.33 1142.48,683.33 1143.04,683.33 1143.6,683.33 1144.16,683.33 1144.72,683.33 1145.28,683.33 1145.84,683.33 1146.4,683.33 1146.96,683.33 1147.51,683.33 1148.07,683.33 1148.63,683.33 1149.19,683.33 1149.75,683.33 1150.31,683.33 1150.87,683.33 1151.43,683.33 1151.99,683.33 1152.55,683.33 1153.11,683.33 1153.67,683.33 1154.23,683.33 1154.78,683.33 1155.34,683.33 1155.9,683.33 1156.46,683.33 1157.02,683.33 1157.58,683.33 1158.14,683.33 1158.7,683.33 1159.26,683.33 1159.82,683.33 1160.38,683.33 1160.94,683.33 1161.5,683.33 1162.05,683.33 1162.61,683.33 1163.17,683.33 1163.73,683.33 1164.29,683.33 1164.85,683.33 1165.41,683.33 1165.97,683.33 1166.53,683.33 1167.09,683.33 1167.65,683.33 1168.21,683.33 1168.77,683.33 1169.33,683.33 1169.88,683.33 1170.44,683.33 1171,683.33 1171.56,683.33 1172.12,683.33 1172.68,683.33 1173.24,683.33 1173.8,683.33 1174.36,683.33 1174.92,683.33 1175.48,683.33 1176.04,683.33 1176.6,683.33 1177.15,683.33 1177.71,683.33 1178.27,683.33 1178.83,683.33 1179.39,683.33 1179.95,683.33 1180.51,683.33 1181.07,683.33 1181.63,683.33 1182.19,683.33 1182.75,683.33 1183.31,683.33 1183.87,683.33 1184.43,683.33 1184.98,683.33 1185.54,683.33 1186.1,683.33 1186.66,683.33 1187.22,683.33 1187.78,683.33 1188.34,683.33 1188.9,683.33 1189.46,683.33 1190.02,683.33 1190.58,683.33 1191.14,683.33 1191.7,683.33 1192.25,683.33 1192.81,683.33 1193.37,683.33 1193.93,683.33 1194.49,683.33 1195.05,683.33 1195.61,683.33 1196.17,683.33 1196.73,683.33 1197.29,683.33 1197.85,683.33 1198.41,683.33 1198.97,683.33 1199.52,683.33 1200.08,683.33 1200.64,683.33 1201.2,683.33 1201.76,683.33 1202.32,683.33 1202.88,683.33 1203.44,683.33 1204,683.33 1204.56,683.33 1205.12,683.33 1205.68,683.33 1206.24,683.33 1206.8,683.33 1207.35,683.33 1207.91,683.33 1208.47,683.33 1209.03,683.33 1209.59,683.33 1210.15,683.33 1210.71,683.33 1211.27,683.33 1211.83,683.33 1212.39,683.33 1212.95,683.33 1213.51,683.33 1214.07,683.33 1214.62,683.33 1215.18,683.33 1215.74,683.33 1216.3,683.33 1216.86,683.33 1217.42,683.33 1217.98,683.33 1218.54,683.33 1219.1,683.33 1219.66,683.33 1220.22,683.33 1220.78,683.33 1221.34,683.33 1221.89,683.33 1222.45,683.33 1223.01,683.33 1223.57,683.33 1224.13,683.33 1224.69,683.33 1225.25,683.33 1225.81,683.33 1226.37,683.33 1226.93,683.33 1227.49,683.33 1228.05,683.33 1228.61,683.33 1229.17,683.33 1229.72,683.33 1230.28,683.33 1230.84,683.33 1231.4,683.33 1231.96,683.33 1232.52,683.33 1233.08,683.33 1233.64,683.33 1234.2,683.33 1234.76,683.33 1235.32,683.33 1235.88,683.33 1236.44,683.33 1236.99,683.33 1237.55,683.33 1238.11,683.33 1238.67,683.33 1239.23,683.33 1239.79,683.33 1240.35,683.33 1240.91,683.33 1241.47,683.33 1242.03,683.33 1242.59,683.33 1243.15,683.33 1243.71,683.33 1244.26,683.33 1244.82,683.33 1245.38,683.33 1245.94,683.33 1246.5,683.33 1247.06,683.33 1247.62,683.33 1248.18,683.33 1248.74,683.33 1249.3,683.33 1249.86,683.33 1250.42,683.33 1250.98,683.33 1251.54,683.33 1252.09,683.33 1252.65,683.33 1253.21,683.33 1253.77,683.33 1254.33,683.33 1254.89,683.33 1255.45,683.33 1256.01,683.33 1256.57,683.33 1257.13,683.33 1257.69,683.33 1258.25,683.33 1258.81,683.33 1259.36,683.33 1259.92,683.33 1260.48,683.33 1261.04,683.33 1261.6,683.33 1262.16,683.33 1262.72,683.33 1263.28,683.33 1263.84,683.33 1264.4,683.33 1264.96,683.33 1265.52,683.33 1266.08,683.33 1266.63,683.33 1267.19,683.33 1267.75,683.33 1268.31,683.33 1268.87,683.33 1269.43,683.33 1269.99,683.33 1270.55,683.33 1271.11,683.33 1271.67,683.33 1272.23,683.33 1272.79,683.33 1273.35,683.33 1273.91,683.33 1274.46,683.33 1275.02,683.33 1275.58,683.33 1276.14,683.33 1276.7,683.33 1277.26,683.33 1277.82,683.33 1278.38,683.33 1278.94,683.33 1279.5,683.33 1280.06,683.33 1280.62,683.33 1281.18,683.33 1281.73,683.33 1282.29,683.33 1282.85,683.33 1283.41,683.33 1283.97,683.33 1284.53,683.33 1285.09,683.33 1285.65,683.33 1286.21,683.33 1286.77,683.33 1287.33,683.33 1287.89,683.33 1288.45,683.33 1289,683.33 1289.56,683.33 1290.12,683.33 1290.68,683.33 1291.24,683.33 1291.8,683.33 1292.36,683.33 1292.92,683.33 1293.48,683.33 1294.04,683.33 1294.6,683.33 1295.16,683.33 1295.72,683.33 1296.28,683.33 1296.83,683.33 1297.39,683.33 1297.95,683.33 1298.51,683.33 1299.07,683.33 1299.63,683.33 1300.19,683.33 1300.75,683.33 1301.31,683.33 1301.87,683.33 1302.43,683.33 1302.99,683.33 1303.55,683.33 1304.1,683.33 1304.66,683.33 1305.22,683.33 1305.78,683.33 1306.34,683.33 1306.9,683.33 1307.46,683.33 1308.02,683.33 1308.58,683.33 1309.14,683.33 1309.7,683.33 1310.26,683.33 1310.82,683.33 1311.38,683.33 1311.93,683.33 1312.49,683.33 1313.05,683.33 1313.61,683.33 1314.17,683.33 1314.73,683.33 1315.29,683.33 1315.85,683.33 1316.41,683.33 1316.97,683.33 1317.53,683.33 1318.09,683.33 1318.65,683.33 1319.2,683.33 1319.76,683.33 1320.32,683.33 1320.88,683.33 1321.44,683.33 1322,683.33 1322.56,683.33 1323.12,683.33 1323.68,683.33 1324.24,683.33 1324.8,683.33 1325.36,683.33 1325.92,683.33 1326.47,683.33 1327.03,683.33 1327.59,683.33 1328.15,683.33 1328.71,683.33 1329.27,683.33 1329.83,683.33 1330.39,683.33 1330.95,683.33 1331.51,683.33 1332.07,683.33 1332.63,683.33 1333.19,683.33 1333.75,683.33 1334.3,683.33 1334.86,683.33 1335.42,683.33 1335.98,683.33 1336.54,683.33 1337.1,683.33 1337.66,683.33 1338.22,683.33 1338.78,683.33 1339.34,683.33 1339.9,683.33 1340.46,683.33 1341.02,683.33 1341.57,683.33 1342.13,683.33 1342.69,683.33 1343.25,683.33 1343.81,683.33 1344.37,683.33 1344.93,683.33 1345.49,683.33 1346.05,683.33 1346.61,683.33 1347.17,683.33 1347.73,683.33 1348.29,683.33 1348.84,683.33 1349.4,683.33 1349.96,683.33 1350.52,683.33 1351.08,683.33 1351.64,683.33 1352.2,683.33 1352.76,683.33 1353.32,683.33 1353.88,683.33 1354.44,683.33 1355,683.33 1355.56,683.33 1356.12,683.33 1356.67,683.33 1357.23,683.33 1357.79,683.33 1358.35,683.33 1358.91,683.33 1359.47,683.33 1360.03,683.33 1360.59,683.33 1361.15,683.33 1361.71,683.33 1362.27,683.33 1362.83,683.33 1363.39,683.33 1363.94,683.33 1364.5,683.33 1365.06,683.33 1365.62,683.33 1366.18,683.33 1366.74,683.33 1367.3,683.33 1367.86,683.33 1368.42,683.33 1368.98,683.33 1369.54,683.33 1370.1,683.33 1370.66,683.33 1371.21,683.33 1371.77,683.33 1372.33,683.33 1372.89,683.33 1373.45,683.33 1374.01,683.33 1374.57,683.33 1375.13,683.33 1375.69,683.33 1376.25,683.33 1376.81,683.33 1377.37,683.33 1377.93,683.33 1378.49,683.33 1379.04,683.33 1379.6,683.33 1380.16,683.33 1380.72,683.33 1381.28,683.33 1381.84,683.33 1382.4,683.33 1382.96,683.33 1383.52,683.33 1384.08,683.33 1384.64,683.33 1385.2,683.33 1385.76,683.33 1386.31,683.33 1386.87,683.33 1387.43,683.33 1387.99,683.33 1388.55,683.33 1389.11,683.33 1389.67,683.33 1390.23,683.33 1390.79,683.33 1391.35,683.33 1391.91,683.33 1392.47,683.33 1393.03,683.33 1393.58,683.33 1394.14,683.33 1394.7,683.33 1395.26,683.33 1395.82,683.33 1396.38,683.33 1396.94,683.33 1397.5,683.33 1398.06,683.33 1398.62,683.33 1399.18,683.33 1399.74,683.33 1400.3,683.33 1400.86,683.33 1401.41,683.33 1401.97,683.33 1402.53,683.33 1403.09,683.33 1403.65,683.33 1404.21,683.33 1404.77,683.33 1405.33,683.33 1405.89,683.33 1406.45,683.33 1407.01,683.33 1407.57,683.33 1408.13,683.33 1408.68,683.33 1409.24,683.33 1409.8,683.33 1410.36,683.33 1410.92,683.33 1411.48,683.33 1412.04,683.33 1412.6,683.33 1413.16,683.33 1413.72,683.33 1414.28,683.33 1414.84,683.33 1415.4,683.33 1415.95,683.33 1416.51,683.33 1417.07,683.33 1417.63,683.33 1418.19,683.33 1418.75,683.33 1419.31,683.33 1419.87,683.33 1420.43,683.33 1420.99,683.33 1421.55,683.33 1422.11,683.33 1422.67,683.33 1423.23,683.33 1423.78,683.33 1424.34,683.33 1424.9,683.33 1425.46,683.33 1426.02,683.33 1426.58,683.33 1427.14,683.33 1427.7,683.33 1428.26,683.33 1428.82,683.33 1429.38,683.33 1429.94,683.33 1430.5,683.33 1431.05,683.33 1431.61,683.33 1432.17,683.33 1432.73,683.33 1433.29,683.33 1433.85,683.33 1434.41,683.33 1434.97,683.33 1435.53,683.33 1436.09,683.33 1436.65,683.33 1437.21,683.33 1437.77,683.33 1438.33,683.33 1438.88,683.33 1439.44,683.33 1440,683.33 1440.56,683.33 1441.12,683.33 1441.68,683.33 1442.24,683.33 1442.8,683.33 1443.36,683.33 1443.92,683.33 1444.48,683.33 1445.04,683.33 1445.6,683.33 1446.15,683.33 1446.71,683.33 1447.27,683.33 1447.83,683.33 1448.39,683.33 1448.95,683.33 1449.51,683.33 1450.07,683.33 1450.63,683.33 1451.19,683.33 1451.75,683.33 1452.31,683.33 1452.87,683.33 1453.42,683.33 1453.98,683.33 1454.54,683.33 1455.1,683.33 1455.66,683.33 1456.22,683.33 1456.78,683.33 1457.34,683.33 1457.9,683.33 1458.46,683.33 1459.02,683.33 1459.58,683.33 1460.14,683.33 1460.7,683.33 1461.25,683.33 1461.81,683.33 1462.37,683.33 1462.93,683.33 1463.49,683.33 1464.05,683.33 1464.61,683.33 1465.17,683.33 1465.73,683.33 1466.29,683.33 1466.85,683.33 1467.41,683.33 1467.97,683.33 1468.52,683.33 1469.08,683.33 1469.64,683.33 1470.2,683.33 1470.76,683.33 1471.32,683.33 1471.88,683.33 1472.44,683.33 1473,683.33 1473.56,683.33 1474.12,683.33 1474.68,683.33 1475.24,683.33 1475.79,683.33 1476.35,683.33 1476.91,683.33 1477.47,683.33 1478.03,683.33 1478.59,683.33 1479.15,683.33 1479.71,683.33 1480.27,683.33 1480.83,683.33 1481.39,683.33 1481.95,683.33 1482.51,683.33 1483.07,683.33 1483.62,683.33 1484.18,683.33 1484.74,683.33 1485.3,683.33 1485.86,683.33 1486.42,683.33 1486.98,683.33 1487.54,683.33 1488.1,683.33 1488.66,683.33 1489.22,683.33 1489.78,683.33 1490.34,683.33 1490.89,683.33 1491.45,683.33 1492.01,683.33 1492.57,683.33 1493.13,683.33 1493.69,683.33 1494.25,683.33 1494.81,683.33 1495.37,683.33 1495.93,683.33 1496.49,683.33 1497.05,683.33 1497.61,683.33 1498.16,683.33 1498.72,683.33 1499.28,683.33 1499.84,683.33 1500.4,683.33 1500.96,683.33 1501.52,683.33 1502.08,683.33 1502.64,683.33 1503.2,683.33 1503.76,683.33 1504.32,683.33 1504.88,683.33 1505.44,683.33 1505.99,683.33 1506.55,683.33 1507.11,683.33 1507.67,683.33 1508.23,683.33 1508.79,683.33 1509.35,683.33 1509.91,683.33 1510.47,683.33 1511.03,683.33 1511.59,683.33 1512.15,683.33 1512.71,683.33 1513.26,683.33 1513.82,683.33 1514.38,683.33 1514.94,683.33 1515.5,683.33 1516.06,683.33 1516.62,683.33 1517.18,683.33 1517.74,683.33 1518.3,683.33 1518.86,683.33 1519.42,683.33 1519.98,683.33 1520.53,683.33 1521.09,683.33 1521.65,683.33 1522.21,683.33 1522.77,683.33 1523.33,683.33 1523.89,683.33 1524.45,683.33 1525.01,683.33 1525.57,683.33 1526.13,683.33 1526.69,683.33 1527.25,683.33 1527.81,683.33 1528.36,683.33 1528.92,683.33 1529.48,683.33 1530.04,683.33 1530.6,683.33 1531.16,683.33 1531.72,683.33 1532.28,683.33 1532.84,683.33 1533.4,683.33 1533.96,683.33 1534.52,683.33 1535.08,683.33 1535.63,683.33 1536.19,683.33 1536.75,683.33 1537.31,683.33 1537.87,683.33 1538.43,683.33 1538.99,683.33 1539.55,683.33 1540.11,683.33 1540.67,683.33 1541.23,683.33 1541.79,683.33 1542.35,683.33 1542.9,683.33 1543.46,683.33 1544.02,683.33 1544.58,683.33 1545.14,683.33 1545.7,683.33 1546.26,683.33 1546.82,683.33 1547.38,683.33 1547.94,683.33 1548.5,683.33 1549.06,683.33 1549.62,683.33 1550.18,683.33 1550.73,683.33 1551.29,683.33 1551.85,683.33 1552.41,683.33 1552.97,683.33 1553.53,683.33 1554.09,683.33 1554.65,683.33 1555.21,683.33 1555.77,683.33 1556.33,683.33 1556.89,683.33 1557.45,683.33 1558,683.33 1558.56,683.33 1559.12,683.33 1559.68,683.33 1560.24,683.33 1560.8,683.33 1561.36,683.33 1561.92,683.33 1562.48,683.33 1563.04,683.33 1563.6,683.33 1564.16,683.33 1564.72,683.33 1565.28,683.33 1565.83,683.33 1566.39,683.33 1566.95,683.33 1567.51,683.33 1568.07,683.33 1568.63,683.33 1569.19,683.33 1569.75,683.33 1570.31,683.33 1570.87,683.33 1571.43,683.33 1571.99,683.33 1572.55,683.33 1573.1,683.33 1573.66,683.33 1574.22,683.33 1574.78,683.33 1575.34,683.33 1575.9,683.33 1576.46,683.33 1577.02,683.33 1577.58,683.33 1578.14,683.33 1578.7,683.33 1579.26,683.33 1579.82,683.33 1580.37,683.33 1580.93,683.33 1581.49,683.33 1582.05,683.33 1582.61,683.33 1583.17,683.33 1583.73,683.33 1584.29,683.33 1584.85,683.33 1585.41,683.33 1585.97,683.33 1586.53,683.33 1587.09,683.33 1587.65,683.33 1588.2,683.33 1588.76,683.33 1589.32,683.33 1589.88,683.33 1590.44,683.33 1591,683.33 1591.56,683.33 1592.12,683.33 1592.68,683.33 1593.24,683.33 1593.8,683.33 1594.36,683.33 1594.92,683.33 1595.47,683.33 1596.03,683.33 1596.59,683.33 1597.15,683.33 1597.71,683.33 1598.27,683.33 1598.83,683.33 1599.39,683.33 1599.95,683.33 1600.51,683.33 1601.07,683.33 1601.63,683.33 1602.19,683.33 1602.74,683.33 1603.3,683.33 1603.86,683.33 1604.42,683.33 1604.98,683.33 1605.54,683.33 1606.1,683.33 1606.66,683.33 1607.22,683.33 1607.78,683.33 1608.34,683.33 1608.9,683.33 1609.46,683.33 1610.02,683.33 1610.57,683.33 1611.13,683.33 1611.69,683.33 1612.25,683.33 1612.81,683.33 1613.37,683.33 1613.93,683.33 1614.49,683.33 1615.05,683.33 1615.61,683.33 1616.17,683.33 1616.73,683.33 1617.29,683.33 1617.84,683.33 1618.4,683.33 1618.96,683.33 1619.52,683.33 1620.08,683.33 1620.64,683.33 1621.2,683.33 1621.76,683.33 1622.32,683.33 1622.88,683.33 1623.44,683.33 1624,683.33 1624.56,683.33 1625.11,683.33 1625.67,683.33 1626.23,683.33 1626.79,683.33 1627.35,683.33 1627.91,683.33 1628.47,683.33 1629.03,683.33 1629.59,683.33 1630.15,683.33 1630.71,683.33 1631.27,683.33 1631.83,683.33 1632.39,683.33 1632.94,683.33 1633.5,683.33 1634.06,683.33 1634.62,683.33 1635.18,683.33 1635.74,683.33 1636.3,683.33 1636.86,683.33 1637.42,683.33 1637.98,683.33 1638.54,683.33 1639.1,683.33 1639.66,683.33 1640.21,683.33 1640.77,683.33 1641.33,683.33 1641.89,683.33 1642.45,683.33 1643.01,683.33 1643.57,683.33 1644.13,683.33 1644.69,683.33 1645.25,683.33 1645.81,683.33 1646.37,683.33 1646.93,683.33 1647.48,683.33 1648.04,683.33 1648.6,683.33 1649.16,683.33 1649.72,683.33 1650.28,683.33 1650.84,683.33 1651.4,683.33 1651.96,683.33 1652.52,683.33 1653.08,683.33 1653.64,683.33 1654.2,683.33 1654.76,683.33 1655.31,683.33 1655.87,683.33 1656.43,683.33 1656.99,683.33 1657.55,683.33 1658.11,683.33 1658.67,683.33 1659.23,683.33 1659.79,683.33 1660.35,683.33 1660.91,683.33 1661.47,683.33 1662.03,683.33 1662.58,683.33 1663.14,683.33 1663.7,683.33 1664.26,683.33 1664.82,683.33 1665.38,683.33 1665.94,683.33 1666.5,683.33 1667.06,683.33 1667.62,683.33 1668.18,683.33 1668.74,683.33 1669.3,683.33 1669.85,683.33 1670.41,683.33 1670.97,683.33 1671.53,683.33 1672.09,683.33 1672.65,683.33 1673.21,683.33 1673.77,683.33 1674.33,683.33 1674.89,683.33 1675.45,683.33 1676.01,683.33 1676.57,683.33 1677.13,683.33 1677.68,683.33 1678.24,683.33 1678.8,683.33 1679.36,683.33 1679.92,683.33 1680.48,683.33 1681.04,683.33 1681.6,683.33 1682.16,683.33 1682.72,683.33 1683.28,683.33 1683.84,683.33 1684.4,683.33 1684.95,683.33 1685.51,683.33 1686.07,683.33 1686.63,683.33 1687.19,683.33 1687.75,683.33 1688.31,683.33 1688.87,683.33 1689.43,683.33 1689.99,683.33 1690.55,683.33 1691.11,683.33 1691.67,683.33 1692.23,683.33 1692.78,683.33 1693.34,683.33 1693.9,683.33 1694.46,683.33 1695.02,683.33 1695.58,683.33 1696.14,683.33 1696.7,683.33 1697.26,683.33 1697.82,683.33 1698.38,683.33 1698.94,683.33 1699.5,683.33 1700.05,683.33 1700.61,683.33 1701.17,683.33 1701.73,683.33 1702.29,683.33 1702.85,683.33 1703.41,683.33 1703.97,683.33 1704.53,683.33 1705.09,683.33 1705.65,683.33 1706.21,683.33 1706.77,683.33 1707.32,683.33 1707.88,683.33 1708.44,683.33 1709,683.33 1709.56,683.33 1710.12,683.33 1710.68,683.33 1711.24,683.33 1711.8,683.33 1712.36,683.33 1712.92,683.33 1713.48,683.33 1714.04,683.33 1714.6,683.33 1715.15,683.33 1715.71,683.33 1716.27,683.33 1716.83,683.33 1717.39,683.33 1717.95,683.33 1718.51,683.33 1719.07,683.33 1719.63,683.33 1720.19,683.33 1720.75,683.33 1721.31,683.33 1721.87,683.33 1722.42,683.33 1722.98,683.33 1723.54,683.33 1724.1,683.33 1724.66,683.33 1725.22,683.33 1725.78,683.33 1726.34,683.33 1726.9,683.33 1727.46,683.33 1728.02,683.33 1728.58,683.33 1729.14,683.33 1729.69,683.33 1730.25,683.33 1730.81,683.33 1731.37,683.33 1731.93,683.33 1732.49,683.33 1733.05,683.33 1733.61,683.33 1734.17,683.33 1734.73,683.33 1735.29,683.33 1735.85,683.33 1736.41,683.33 1736.97,683.33 1737.52,683.33 1738.08,683.33 1738.64,683.33 1739.2,683.33 1739.76,683.33 1740.32,683.33 1740.88,683.33 1741.44,683.33 1742,683.33 1742.56,683.33 1743.12,683.33 1743.68,683.33 1744.24,683.33 1744.79,683.33 1745.35,683.33 1745.91,683.33 1746.47,683.33 1747.03,683.33 1747.59,683.33 1748.15,683.33 1748.71,683.33 1749.27,683.33 1749.83,683.33 1750.39,683.33 1750.95,683.33 1751.51,683.33 1752.06,683.33 1752.62,683.33 1753.18,683.33 1753.74,683.33 1754.3,683.33 1754.86,683.33 1755.42,683.33 1755.98,683.33 1756.54,683.33 1757.1,683.33 1757.66,683.33 1758.22,683.33 1758.78,683.33 1759.34,683.33 1759.89,683.33 1760.45,683.33 1761.01,683.33 1761.57,683.33 1762.13,683.33 1762.69,683.33 1763.25,683.33 1763.81,683.33 1764.37,683.33 1764.93,683.33 1765.49,683.33 1766.05,683.33 1766.61,683.33 1767.16,683.33 1767.72,683.33 1768.28,683.33 1768.84,683.33 1769.4,683.33 1769.96,683.33 1770.52,683.33 1771.08,683.33 1771.64,683.33 1772.2,683.33 1772.76,683.33 1773.32,683.33 1773.88,683.33 1774.43,683.33 1774.99,683.33 1775.55,683.33 1776.11,683.33 1776.67,683.33 1777.23,683.33 1777.79,683.33 1778.35,683.33 1778.91,683.33 1779.47,683.33 1780.03,683.33 1780.59,683.33 1781.15,683.33 1781.71,683.33 1782.26,683.33 1782.82,683.33 1783.38,683.33 1783.94,683.33 1784.5,683.33 1785.06,683.33 1785.62,683.33 1786.18,683.33 1786.74,683.33 1787.3,683.33 1787.86,683.33 1788.42,683.33 1788.98,683.33 1789.53,683.33 1790.09,683.33 1790.65,683.33 1791.21,683.33 1791.77,683.33 1792.33,683.33 1792.89,683.33 1793.45,683.33 1794.01,683.33 1794.57,683.33 1795.13,683.33 1795.69,683.33 1796.25,683.33 1796.8,683.33 1797.36,683.33 1797.92,683.33 1798.48,683.33 1799.04,683.33 1799.6,683.33 1800.16,683.33 1800.72,683.33 1801.28,683.33 1801.84,683.33 1802.4,683.33 1802.96,683.33 1803.52,683.33 1804.08,683.33 1804.63,683.33 1805.19,683.33 1805.75,683.33 1806.31,683.33 1806.87,683.33 1807.43,683.33 1807.99,683.33 1808.55,683.33 1809.11,683.33 1809.67,683.33 1810.23,683.33 1810.79,683.33 1811.35,683.33 1811.9,683.33 1812.46,683.33 1813.02,683.33 1813.58,683.33 1814.14,683.33 1814.7,683.33 1815.26,683.33 1815.82,683.33 1816.38,683.33 1816.94,683.33 1817.5,683.33 1818.06,683.33 1818.62,683.33 1819.18,683.33 1819.73,683.33 1820.29,683.33 1820.85,683.33 1821.41,683.33 1821.97,683.33 1822.53,683.33 1823.09,683.33 1823.65,683.33 1824.21,683.33 1824.77,683.33 1825.33,683.33 1825.89,683.33 1826.45,683.33 1827,683.33 1827.56,683.33 1828.12,683.33 1828.68,683.33 1829.24,683.33 1829.8,683.33 1830.36,683.33 1830.92,683.33 1831.48,683.33 1832.04,683.33 1832.6,683.33 1833.16,683.33 1833.72,683.33 1834.27,683.33 1834.83,683.33 1835.39,683.33 1835.95,683.33 1836.51,683.33 1837.07,683.33 1837.63,683.33 1838.19,683.33 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ¬± $(se.err)\n    Projected Energy: $(v.val) ¬± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.030812502878291 ¬± 0.01976636185224912\nProjected Energy: -4.0138040716307675 ¬± (0.0049112996517655105, 0.004981425592845312)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; Œ± = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-Œ±.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ¬± 0.0029\n  with uncertainty of ¬± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13√ó6 DataFrame\n Row ‚îÇ blocks  mean      std_err      std_err_err  p_cov       mj\n     ‚îÇ Int64   Float64   Float64      Float64      Float64     Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 ‚îÇ   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 ‚îÇ   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 ‚îÇ   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 ‚îÇ    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 ‚îÇ    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 ‚îÇ    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 ‚îÇ     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 ‚îÇ     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 ‚îÇ     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 ‚îÇ      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 ‚îÇ      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 ‚îÇ      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ästd err vs blocking steps‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n    0.00423501 ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ m test\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ std err\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°†‚¢∫‚†í‚†í‚¢∫‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚°Ü‚£Ä‚†§‚°ó‚†â‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ß‚†§‚†î‚°ó‚†ä‚†â‚°è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚¢£‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚°á‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†∏‚°Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†Å‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚°á‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£¶‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†î‚†í‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n   -0.00012335 ‚îÇ‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†ß‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚îÇ\n               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n               ‚†Ä0.64‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äk‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä13.36‚†Ä\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; Œ± = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; Œ±=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.œÉ_f using x_by_y_linear. The standard error estimate r.œÉ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.Œ¥_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ¬± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*œÉ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3√ó3 DataFrame\n Row ‚îÇ res      res_l    res_u\n     ‚îÇ Float64  Float64  Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282\n   2 ‚îÇ    13.0  1.7282   1.7282\n   3 ‚îÇ    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dœÑ=df.dœÑ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ‚â• 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dœÑ=df.dœÑ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dœÑ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dœÑln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dœÑ=df.dœÑ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dœÑ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dœÑ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |œà‚ü© and |œï‚ü© is defined as\n\nF(œàœï) = fracœàœï^2œàœàœïœï \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v‚ãÖv == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ‚â• 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:¬±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ¬± 0.029\n  with uncertainty of ¬± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; Œ± = 0.01) -> k\nmtest(table::NamedTuple; Œ± = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-Œ± after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, œÉ_f, Œ¥_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nœÉ_f::T: std from linear propagation\nŒ¥_y::T: coefficient of variation for denominator (‚â§ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, Œº, œÉ)\nparticles(samples, Œº::AbstractVector, Œ£::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, œÉ_f, Œ¥_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nœÉ_f standard deviation of f from linear error propagation (normal approximation)\nŒ¥_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(Œº_x,Œº_y,œÉ_x,œÉ_y,œÅ) -> f, œÉ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013).\n\nœÉ_f = sqrtfracœÉ_xŒº_y^2 + fracŒº_x œÉ_yŒº_y^2^2 - frac2 œÅ Œº_xŒº_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3√ó7 DataFrame\n Row ‚îÇ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     ‚îÇ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 ‚îÇ    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 ‚îÇ    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1√ó9 DataFrame\n Row ‚îÇ val       val_l      val_u      val_f     val_œÉ_f    val_Œ¥_y    val_k  val_blocks  val_success\n     ‚îÇ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7√ó6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS‚Ä¶</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple‚Ä¶</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.474477</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4357e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.1982e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">1.0009e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.372e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.545e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.296e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ‚â† basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10√ó10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10√ó10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nŒîE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ŒîE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0‚ü©\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0‚ü©\"\n fs\"|0 1 2 1 0‚ü©\"\n fs\"|1 0 2 0 1‚ü©\"\n fs\"|1 0 1 2 0‚ü©\"\n fs\"|0 0 1 1 2‚ü©\"\n fs\"|0 2 1 0 1‚ü©\"\n fs\"|2 1 1 0 0‚ü©\"\n fs\"|0 2 0 2 0‚ü©\"\n fs\"|1 1 0 1 1‚ü©\"\n fs\"|2 0 0 0 2‚ü©\"\n fs\"|0 0 0 3 1‚ü©\"\n fs\"|3 0 0 1 0‚ü©\"\n fs\"|0 1 0 0 3‚ü©\"\n fs\"|1 3 0 0 0‚ü©\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ‚âà all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0‚ü©\" => -0.0214153\n  fs\"|2 0 0 0 2‚ü©\" => -0.00237613\n  fs\"|0 0 4 0 0‚ü©\" => -0.980348\n  fs\"|0 0 0 3 1‚ü©\" => 0.00363555\n  fs\"|2 1 1 0 0‚ü©\" => -0.0119687\n  fs\"|1 0 2 0 1‚ü©\" => 0.0768085\n  fs\"|1 3 0 0 0‚ü©\" => 0.00363555\n  fs\"|0 1 2 1 0‚ü©\" => 0.177701\n  fs\"|0 0 1 1 2‚ü©\" => -0.0119687\n  fs\"|3 0 0 1 0‚ü©\" => 0.00195478\n  fs\"|0 2 0 2 0‚ü©\" => -0.0138439\n  fs\"|1 1 0 1 1‚ü©\" => -0.00234782\n  fs\"|0 1 0 0 3‚ü©\" => 0.00195478\n  fs\"|0 2 1 0 1‚ü©\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i œµ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential œµ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleœÉ t_œÉ a^_iœÉ a_jœÉ +\n  frac12sum_iœÉ u_œÉœÉ n_iœÉ (n_iœÉ - 1) +\n  sum_iœÉœÑu_œÉœÑ n_iœÉ n_iœÑ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iœÉd v_œÉd x_di^2 n_iœÉ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C √ó D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, Œ∑, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, Œ∑, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i œµ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi œµ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nŒ∑s = (): a tuple of aspect ratios for the remaining dimensions (Œ∑_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/Œ∑_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kœÉk^2 n_kœÉ \n    quad + sum_pqkœÉœÉ T_pqk a^_p-kœÉ a^_q+kœÉ a_qœÉ a_pœÉ \n    quad + sum_pqskkœÉœÉ Q_kka^_p-kœÉ a^_q+kœÉ a^_s+k-kœÉ\n                                       a_sœÉ a_qœÉ a_pœÉ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + œâN - v Œ£‚Çñ(a‚Çñ^ + a‚Çñ)\n\nwhere p is the total momentum, p_f = Œ£_k k a‚Çñ^ a‚Çñ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2œÄl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons œâ.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0‚ü©{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M√∑2, M√∑2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M√∑2, M√∑2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address Œ± is replaced by frac12(Œ±  Œ±) for even and odd parity, respectively, where Œ±ÃÑ == reverse(Œ±).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1‚ü©\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ‚âà eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ‚âà eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ‚â§ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0‚ü©{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ‚â§ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, œÉ=1, œÑ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_œÉœÑ(d) = frac1M _i n_œÉi (n_œÑi+d - Œ¥_0dŒ¥_œÉœÑ)\n\nFor multicomponent addresses, œÉ and œÑ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s b^_p  b_q a_r Œ¥_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s a^_p  a_q a_r Œ¥_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ‚â§ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ‚â§ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iœÉ = hat a^_iœÉ hat a_iœÉ\n\nwhere i is the mode and œÉ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0‚ü©\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0‚ü©\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x‚ãÖ(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1‚ü©\", -3.0)\n (fs\"|2 2 2‚ü©\", -2.449489742783178)\n (fs\"|3 1 2‚ü©\", -2.0)\n (fs\"|4 1 1‚ü©\", -2.8284271247461903)\n (fs\"|4 2 0‚ü©\", -2.0)\n (fs\"|3 3 0‚ü©\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ‚Ä¶.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb‚ãÖ(1:7) == onr(b)‚ãÖ(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w‚ãÖop(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ‚ãÖ A ‚ãÖ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1‚ü©\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ‚âà values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3√ó3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2√ó2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1‚ü©\" => -0.57735   fs\"|0 1 0‚ü©\" => -0.57735   fs\"|1 0 0‚ü©\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nŒ±mathrmnaddrrangle\n\nReturns the new address naddr and the factor Œ±. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0‚ü©\" => 1\n\njulia> fs\"|0 1 2 0‚ü©\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3‚ü©‚äó|0 1 0‚ü©\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üë‚ü©\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0‚ü©{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0‚ü©{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ‚â§ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Œ£_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) √∑ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ‚â§ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|‚ãÖ‚Üë‚Üë‚Üë‚ãÖ‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üì‚ü©\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3‚ü©{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n‚Üí (nadd, Œ±)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3‚ü©{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, Œ± = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dœÑ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ after projecting onto projector.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracPŒ®^(n+1)PŒ®^(n)right)-fracŒædœÑlnleft(fracPŒ®^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4, Œ± = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracŒædœÑlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-Œ±)*walkernumber() + Œ±*UniformProjector()‚ãÖœà computed with walkernumber() and UniformProjector(). When Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)-fracŒædœÑlnleft(fracŒ®_1^n+1Œ®_1^texttargetright)\n\nWhen Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08, Œæ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, Œ∂ = 0.08,   Œæ = Œ∂^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dœÑ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\nùêì = 1 + dœÑ(S - ùêá)\n\nwhere ùêá is the hamiltonian and S is the shift.\n\nùêì represents the first order expansion of the exponential evolution operator of the imaginary-time Schr√∂dinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nŒ∂ = 0.08: Damping parameter for the shift update.\nŒæ = Œ∂^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, Œ∂, Œæ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dœÑ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(‚ãÖ,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dœÑ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndœÑ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3‚ü©\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nœÑ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, Œ∂ = 0.08, Œæ = Œ∂^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ‚âà num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0, fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5\n  fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dœÑ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dœÑ","text":"update_dœÑ(s<:TimeStepStrategy, dœÑ, tnorm) -> new dœÑ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    targetwalkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schr√∂dinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Bl√∂te PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schr√∂dinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija ƒåufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. ƒåufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelm√ºller, D. Huber, M. ƒåufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/œÄ^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => -1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -2.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 3.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 3.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()‚ãÖv == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
