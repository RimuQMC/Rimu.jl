var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndœÑ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dœÑ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ¬± $(r.œÉ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ¬± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ¬± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ¬± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ¬± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ¬± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ¬± 0.13748856752861724\n   Replica 2: -3.974753826250174 ¬± 0.12466355058904417\n   Replica 3: -4.011054302602586 ¬± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1‚ü©\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1‚ü©\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0‚ü©\"=>-14.1421, fs\"|0 2 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 1 0 2‚ü©\"=>-14.1421, fs\"|1 2 0 1 1 1‚ü©\"=>-14.1421, fs\"|2 0 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 2 0 1‚ü©\"=>-14.1421, fs\"|1 1 2 0 1 1‚ü©\"=>-14.1421, fs\"|1 1 0 2 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 0 2 1‚ü©\"=>-14.1421, fs\"|1 0 2 1 1 1‚ü©\"=>-14.1421, fs\"|2 1 1 1 1 0‚ü©\"=>-14.1421, fs\"|0 1 1 1 1 2‚ü©\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip090\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip090)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip091\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip090)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip092\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip090)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.85 2211.02,1260.85 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1002.7 2211.02,1002.7 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,744.546 2211.02,744.546 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,486.391 2211.02,486.391 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,228.237 2211.02,228.237 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.85 423.181,1260.85 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1002.7 423.181,1002.7 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,744.546 423.181,744.546 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,486.391 423.181,486.391 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,228.237 423.181,228.237 \"/>\n<path clip-path=\"url(#clip090)\" d=\"M356.339 1246.65 Q352.728 1246.65 350.899 1250.22 Q349.094 1253.76 349.094 1260.89 Q349.094 1268 350.899 1271.56 Q352.728 1275.1 356.339 1275.1 Q359.973 1275.1 361.779 1271.56 Q363.608 1268 363.608 1260.89 Q363.608 1253.76 361.779 1250.22 Q359.973 1246.65 356.339 1246.65 M356.339 1242.95 Q362.149 1242.95 365.205 1247.56 Q368.284 1252.14 368.284 1260.89 Q368.284 1269.62 365.205 1274.22 Q362.149 1278.81 356.339 1278.81 Q350.529 1278.81 347.45 1274.22 Q344.395 1269.62 344.395 1260.89 Q344.395 1252.14 347.45 1247.56 Q350.529 1242.95 356.339 1242.95 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M290.043 1016.05 L306.363 1016.05 L306.363 1019.98 L284.418 1019.98 L284.418 1016.05 Q287.08 1013.29 291.664 1008.66 Q296.27 1004.01 297.451 1002.67 Q299.696 1000.14 300.576 998.406 Q301.478 996.647 301.478 994.957 Q301.478 992.203 299.534 990.466 Q297.613 988.73 294.511 988.73 Q292.312 988.73 289.858 989.494 Q287.427 990.258 284.65 991.809 L284.65 987.087 Q287.474 985.953 289.927 985.374 Q292.381 984.795 294.418 984.795 Q299.789 984.795 302.983 987.48 Q306.177 990.166 306.177 994.656 Q306.177 996.786 305.367 998.707 Q304.58 1000.61 302.474 1003.2 Q301.895 1003.87 298.793 1007.09 Q295.691 1010.28 290.043 1016.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M316.224 985.42 L334.58 985.42 L334.58 989.355 L320.506 989.355 L320.506 997.828 Q321.524 997.48 322.543 997.318 Q323.562 997.133 324.58 997.133 Q330.367 997.133 333.747 1000.3 Q337.126 1003.48 337.126 1008.89 Q337.126 1014.47 333.654 1017.57 Q330.182 1020.65 323.862 1020.65 Q321.687 1020.65 319.418 1020.28 Q317.173 1019.91 314.765 1019.17 L314.765 1014.47 Q316.849 1015.61 319.071 1016.16 Q321.293 1016.72 323.77 1016.72 Q327.774 1016.72 330.112 1014.61 Q332.45 1012.5 332.45 1008.89 Q332.45 1005.28 330.112 1003.17 Q327.774 1001.07 323.77 1001.07 Q321.895 1001.07 320.02 1001.48 Q318.168 1001.9 316.224 1002.78 L316.224 985.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M356.339 988.499 Q352.728 988.499 350.899 992.064 Q349.094 995.605 349.094 1002.73 Q349.094 1009.84 350.899 1013.41 Q352.728 1016.95 356.339 1016.95 Q359.973 1016.95 361.779 1013.41 Q363.608 1009.84 363.608 1002.73 Q363.608 995.605 361.779 992.064 Q359.973 988.499 356.339 988.499 M356.339 984.795 Q362.149 984.795 365.205 989.402 Q368.284 993.985 368.284 1002.73 Q368.284 1011.46 365.205 1016.07 Q362.149 1020.65 356.339 1020.65 Q350.529 1020.65 347.45 1016.07 Q344.395 1011.46 344.395 1002.73 Q344.395 993.985 347.45 989.402 Q350.529 984.795 356.339 984.795 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M286.062 727.266 L304.418 727.266 L304.418 731.201 L290.344 731.201 L290.344 739.673 Q291.363 739.326 292.381 739.164 Q293.4 738.979 294.418 738.979 Q300.205 738.979 303.585 742.15 Q306.964 745.321 306.964 750.738 Q306.964 756.316 303.492 759.418 Q300.02 762.497 293.701 762.497 Q291.525 762.497 289.256 762.127 Q287.011 761.756 284.603 761.015 L284.603 756.316 Q286.687 757.451 288.909 758.006 Q291.131 758.562 293.608 758.562 Q297.613 758.562 299.951 756.455 Q302.288 754.349 302.288 750.738 Q302.288 747.127 299.951 745.02 Q297.613 742.914 293.608 742.914 Q291.733 742.914 289.858 743.33 Q288.006 743.747 286.062 744.627 L286.062 727.266 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M326.177 730.344 Q322.566 730.344 320.737 733.909 Q318.932 737.451 318.932 744.58 Q318.932 751.687 320.737 755.252 Q322.566 758.793 326.177 758.793 Q329.811 758.793 331.617 755.252 Q333.446 751.687 333.446 744.58 Q333.446 737.451 331.617 733.909 Q329.811 730.344 326.177 730.344 M326.177 726.641 Q331.987 726.641 335.043 731.247 Q338.122 735.83 338.122 744.58 Q338.122 753.307 335.043 757.914 Q331.987 762.497 326.177 762.497 Q320.367 762.497 317.288 757.914 Q314.233 753.307 314.233 744.58 Q314.233 735.83 317.288 731.247 Q320.367 726.641 326.177 726.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M356.339 730.344 Q352.728 730.344 350.899 733.909 Q349.094 737.451 349.094 744.58 Q349.094 751.687 350.899 755.252 Q352.728 758.793 356.339 758.793 Q359.973 758.793 361.779 755.252 Q363.608 751.687 363.608 744.58 Q363.608 737.451 361.779 733.909 Q359.973 730.344 356.339 730.344 M356.339 726.641 Q362.149 726.641 365.205 731.247 Q368.284 735.83 368.284 744.58 Q368.284 753.307 365.205 757.914 Q362.149 762.497 356.339 762.497 Q350.529 762.497 347.45 757.914 Q344.395 753.307 344.395 744.58 Q344.395 735.83 347.45 731.247 Q350.529 726.641 356.339 726.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M284.835 469.111 L307.057 469.111 L307.057 471.102 L294.511 503.671 L289.627 503.671 L301.432 473.046 L284.835 473.046 L284.835 469.111 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M316.224 469.111 L334.58 469.111 L334.58 473.046 L320.506 473.046 L320.506 481.518 Q321.524 481.171 322.543 481.009 Q323.562 480.824 324.58 480.824 Q330.367 480.824 333.747 483.995 Q337.126 487.167 337.126 492.583 Q337.126 498.162 333.654 501.264 Q330.182 504.342 323.862 504.342 Q321.687 504.342 319.418 503.972 Q317.173 503.602 314.765 502.861 L314.765 498.162 Q316.849 499.296 319.071 499.852 Q321.293 500.407 323.77 500.407 Q327.774 500.407 330.112 498.301 Q332.45 496.194 332.45 492.583 Q332.45 488.972 330.112 486.866 Q327.774 484.759 323.77 484.759 Q321.895 484.759 320.02 485.176 Q318.168 485.592 316.224 486.472 L316.224 469.111 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M356.339 472.19 Q352.728 472.19 350.899 475.755 Q349.094 479.296 349.094 486.426 Q349.094 493.532 350.899 497.097 Q352.728 500.639 356.339 500.639 Q359.973 500.639 361.779 497.097 Q363.608 493.532 363.608 486.426 Q363.608 479.296 361.779 475.755 Q359.973 472.19 356.339 472.19 M356.339 468.486 Q362.149 468.486 365.205 473.093 Q368.284 477.676 368.284 486.426 Q368.284 495.153 365.205 499.759 Q362.149 504.342 356.339 504.342 Q350.529 504.342 347.45 499.759 Q344.395 495.153 344.395 486.426 Q344.395 477.676 347.45 473.093 Q350.529 468.486 356.339 468.486 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M256.664 241.581 L264.303 241.581 L264.303 215.216 L255.992 216.882 L255.992 212.623 L264.256 210.957 L268.932 210.957 L268.932 241.581 L276.571 241.581 L276.571 245.517 L256.664 245.517 L256.664 241.581 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M296.015 214.035 Q292.404 214.035 290.576 217.6 Q288.77 221.142 288.77 228.271 Q288.77 235.378 290.576 238.942 Q292.404 242.484 296.015 242.484 Q299.65 242.484 301.455 238.942 Q303.284 235.378 303.284 228.271 Q303.284 221.142 301.455 217.6 Q299.65 214.035 296.015 214.035 M296.015 210.332 Q301.826 210.332 304.881 214.938 Q307.96 219.521 307.96 228.271 Q307.96 236.998 304.881 241.605 Q301.826 246.188 296.015 246.188 Q290.205 246.188 287.127 241.605 Q284.071 236.998 284.071 228.271 Q284.071 219.521 287.127 214.938 Q290.205 210.332 296.015 210.332 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M326.177 214.035 Q322.566 214.035 320.737 217.6 Q318.932 221.142 318.932 228.271 Q318.932 235.378 320.737 238.942 Q322.566 242.484 326.177 242.484 Q329.811 242.484 331.617 238.942 Q333.446 235.378 333.446 228.271 Q333.446 221.142 331.617 217.6 Q329.811 214.035 326.177 214.035 M326.177 210.332 Q331.987 210.332 335.043 214.938 Q338.122 219.521 338.122 228.271 Q338.122 236.998 335.043 241.605 Q331.987 246.188 326.177 246.188 Q320.367 246.188 317.288 241.605 Q314.233 236.998 314.233 228.271 Q314.233 219.521 317.288 214.938 Q320.367 210.332 326.177 210.332 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M356.339 214.035 Q352.728 214.035 350.899 217.6 Q349.094 221.142 349.094 228.271 Q349.094 235.378 350.899 238.942 Q352.728 242.484 356.339 242.484 Q359.973 242.484 361.779 238.942 Q363.608 235.378 363.608 228.271 Q363.608 221.142 361.779 217.6 Q359.973 214.035 356.339 214.035 M356.339 210.332 Q362.149 210.332 365.205 214.938 Q368.284 219.521 368.284 228.271 Q368.284 236.998 365.205 241.605 Q362.149 246.188 356.339 246.188 Q350.529 246.188 347.45 241.605 Q344.395 236.998 344.395 228.271 Q344.395 219.521 347.45 214.938 Q350.529 210.332 356.339 210.332 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip092)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,228.237 4017.76,228.237 \"/>\n<polyline clip-path=\"url(#clip092)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1248.03 457.691,1247.89 458.259,1246.6 458.828,1246.37 459.396,1245.95 459.964,1245.51 460.533,1243.94 461.101,1243.45 461.669,1242.82 462.238,1242.12 462.806,1241.32 463.375,1240.44 463.943,1239.45 464.511,1238.37 465.08,1236.15 465.648,1234.87 466.216,1233.43 466.785,1231.92 467.353,1230.28 467.921,1228.51 468.49,1225.57 469.058,1223.52 469.626,1220.29 470.195,1217.95 470.763,1215.47 471.331,1212.77 471.9,1209.9 472.468,1206.81 473.036,1202.58 473.605,1198.14 474.173,1193.51 474.741,1187.63 475.31,1182.59 475.878,1177.31 476.446,1172.82 477.015,1166.02 477.583,1160.07 478.152,1153.96 478.72,1148.63 479.288,1143.08 479.857,1136.28 480.425,1130.33 480.993,1123.17 481.562,1114.74 482.13,1108.22 482.698,1098.24 483.267,1090.22 483.835,1082 484.403,1073.66 484.972,1065.24 485.54,1057.7 486.108,1049.97 486.677,1040.97 487.245,1031.89 487.813,1022.65 488.382,1012.22 488.95,1001.83 489.518,992.281 490.087,982.681 490.655,972.869 491.224,962.054 491.792,952.177 492.36,943.31 492.929,933.205 493.497,923.143 494.065,910.924 494.634,900.728 495.202,888.267 495.77,876 496.339,865.867 496.907,853.708 497.475,843.752 498.044,834.657 498.612,825.574 499.18,815.206 499.749,805.148 500.317,794.024 500.885,782.923 501.454,772.828 502.022,761.806 502.59,753.041 503.159,744.219 503.727,735.279 504.295,725.488 504.864,715.653 505.432,706.928 506.001,696.253 506.569,686.58 507.137,678.192 507.706,668.816 508.274,658.425 508.842,646.241 509.411,637.116 509.979,627.046 510.547,618.286 511.116,607.538 511.684,599.037 512.252,587.643 512.821,578.696 513.389,572.97 513.957,564.846 514.526,556.897 515.094,548.281 515.662,538.723 516.231,531.571 516.799,520.269 517.367,514.708 517.936,508.065 518.504,502.56 519.072,496.147 519.641,488.621 520.209,482.532 520.778,477.304 521.346,471.361 521.914,464.342 522.483,454.496 523.051,448.066 523.619,441.87 524.188,437.972 524.756,431.799 525.324,427.035 525.893,422.169 526.461,418.496 527.029,414.91 527.598,410.388 528.166,407.687 528.734,405.079 529.303,401.525 529.871,399.006 530.439,396.281 531.008,391.816 531.576,388.32 532.144,383.811 532.713,378.529 533.281,370.337 533.85,366.573 534.418,363.882 534.986,359.465 535.555,356.062 536.123,353.476 536.691,349.218 537.26,347.04 537.828,344.832 538.396,339.459 538.965,334.535 539.533,330.867 540.101,329.215 540.67,328.659 541.238,324.884 541.806,323.295 542.375,319.848 542.943,316.437 543.511,314.017 544.08,312.692 544.648,312.57 545.216,311.182 545.785,310.835 546.353,309.516 546.921,305.99 547.49,303.633 548.058,300.67 548.627,298.896 549.195,296.717 549.763,294.98 550.332,295.054 550.9,293.102 551.468,289.978 552.037,290.312 552.605,288.517 553.173,286.823 553.742,283.961 554.31,283.451 554.878,283.989 555.447,281.251 556.015,277.982 556.583,276.905 557.152,275.717 557.72,275.448 558.288,274.092 558.857,270.792 559.425,271.774 559.993,270.349 560.562,270.286 561.13,270.184 561.698,268.765 562.267,268.607 562.835,266.364 563.404,263.907 563.972,263.918 564.54,264.75 565.109,265.657 565.677,266.204 566.245,264.693 566.814,264.652 567.382,263.03 567.95,258.565 568.519,257.648 569.087,258.793 569.655,258.768 570.224,259.669 570.792,258.319 571.36,257.097 571.929,256.03 572.497,256.809 573.065,256.62 573.634,254.531 574.202,254.75 574.77,253.622 575.339,253.725 575.907,253.73 576.476,252.858 577.044,254.722 577.612,254.755 578.181,255.946 578.749,253.806 579.317,252.625 579.886,251.56 580.454,251.617 581.022,253.825 581.591,255.61 582.159,254.103 582.727,253.783 583.296,252.337 583.864,250.883 584.432,250.946 585.001,250.955 585.569,250.81 586.137,250.643 586.706,248.414 587.274,248.451 587.842,248.52 588.411,245.2 588.979,244.068 589.547,243.976 590.116,245.903 590.684,245.939 591.253,244.795 591.821,243.572 592.389,243.408 592.958,242.44 593.526,242.548 594.094,243.779 594.663,242.842 595.231,241.766 595.799,243.861 596.368,245.826 596.936,245.66 597.504,245.437 598.073,246.171 598.641,245.871 599.209,246.507 599.778,246.254 600.346,244.806 600.914,244.483 601.483,241.21 602.051,238.266 602.619,238.529 603.188,236.742 603.756,234.079 604.325,233.503 604.893,234.18 605.461,233.557 606.03,237.223 606.598,233.448 607.166,234.324 607.735,234.848 608.303,234.484 608.871,234.869 609.44,234.217 610.008,235.602 610.576,236.832 611.145,237.281 611.713,237.605 612.281,237.675 612.85,236.873 613.418,238.071 613.986,236.987 614.555,239.313 615.123,241.591 615.691,242.771 616.26,240.231 616.828,239.297 617.396,239.446 617.965,240.53 618.533,237.21 619.102,239.612 619.67,238.573 620.238,237.418 620.807,235.509 621.375,237.72 621.943,237.976 622.512,237.772 623.08,238.818 623.648,241.826 624.217,242.409 624.785,240.824 625.353,240.485 625.922,239.25 626.49,238.055 627.058,239.069 627.627,239.079 628.195,237.766 628.763,235.568 629.332,236.526 629.9,240.593 630.468,239.333 631.037,239.087 631.605,236.836 632.173,234.609 632.742,236.821 633.31,236.567 633.879,236.409 634.447,235.366 635.015,234.565 635.584,234.472 636.152,235.603 636.72,238.789 637.289,239.471 637.857,237.139 638.425,236.858 638.994,236.793 639.562,234.575 640.13,232.6 640.699,233.796 641.267,235.901 641.835,235.938 642.404,234.874 642.972,234.007 643.54,232.939 644.109,231.097 644.677,230.503 645.245,229.692 645.814,231.864 646.382,230.768 646.951,232.755 647.519,232.053 648.087,234.197 648.656,235.205 649.224,234.163 649.792,234.077 650.361,232.185 650.929,232.416 651.497,232.792 652.066,233.091 652.634,233.067 653.202,231.034 653.771,230.24 654.339,229.483 654.907,230.644 655.476,230.978 656.044,229.25 656.612,230.658 657.181,228.098 657.749,228.59 658.317,230.343 658.886,230.684 659.454,229.04 660.022,228.339 660.591,228.78 661.159,228.124 661.728,227.519 662.296,228.047 662.864,228.762 663.433,228.078 664.001,226.549 664.569,227.456 665.138,228.984 665.706,229.46 666.274,230.84 666.843,231.085 667.411,230.28 667.979,229.487 668.548,230.619 669.116,231.714 669.684,231.925 670.253,233.21 670.821,231.348 671.389,230.641 671.958,229.815 672.526,230.097 673.094,231.589 673.663,230.691 674.231,231.072 674.799,230.445 675.368,229.735 675.936,228.94 676.505,230.704 677.073,231.105 677.641,232.545 678.21,232.76 678.778,233.837 679.346,232.633 679.915,231.61 680.483,232.902 681.051,235.811 681.62,236.866 682.188,236.601 682.756,234.357 683.325,232.301 683.893,232.468 684.461,232.317 685.03,231.238 685.598,233.257 686.166,233.242 686.735,234.27 687.303,233.194 687.871,232.314 688.44,232.626 689.008,232.676 689.577,232.668 690.145,232.671 690.713,233.572 691.282,234.41 691.85,235.249 692.418,233.888 692.987,230.735 693.555,231.773 694.123,232.013 694.692,231.121 695.26,230.337 695.828,231.596 696.397,230.853 696.965,229.193 697.533,230.592 698.102,230.74 698.67,228.894 699.238,228.163 699.807,227.448 700.375,227.91 700.943,228.213 701.512,228.525 702.08,227.772 702.648,228.138 703.217,227.369 703.785,229.044 704.354,228.298 704.922,227.582 705.49,226.863 706.059,227.107 706.627,230.662 707.195,231.792 707.764,227.763 708.332,227.084 708.9,227.814 709.469,227.442 710.037,227.854 710.605,226.362 711.174,227.008 711.742,227.378 712.31,227.734 712.879,229.341 713.447,229.571 714.015,229.809 714.584,230.091 715.152,230.165 715.72,230.421 716.289,230.586 716.857,228.785 717.425,226.112 717.994,229.822 718.562,230.881 719.131,232.11 719.699,233.261 720.267,233.379 720.836,233.302 721.404,235.34 721.972,234.188 722.541,235.24 723.109,233.802 723.677,230.747 724.246,231.039 724.814,229.018 725.382,230.213 725.951,228.159 726.519,229.59 727.087,229.879 727.656,225.862 728.224,226.31 728.792,228.89 729.361,229.09 729.929,230.495 730.497,231.709 731.066,231.85 731.634,232.051 732.203,229.893 732.771,227.983 733.339,231.727 733.908,232.068 734.476,232.361 735.044,230.342 735.613,229.558 736.181,231.916 736.749,234.96 737.318,232.552 737.886,233.592 738.454,232.373 739.023,231.285 739.591,231.273 740.159,231.124 740.728,230.346 741.296,230.372 741.864,231.521 742.433,231.826 743.001,231.826 743.569,230.942 744.138,233.229 744.706,233.219 745.274,232.179 745.843,231.229 746.411,230.033 746.98,228.857 747.548,232.195 748.116,231.358 748.685,233.544 749.253,232.291 749.821,233.363 750.39,230.248 750.958,230.244 751.526,230.412 752.095,228.566 752.663,229.818 753.231,231.009 753.8,233.314 754.368,232.156 754.936,232.325 755.505,231.21 756.073,231.214 756.641,229.027 757.21,229.193 757.778,229.366 758.346,231.667 758.915,229.565 759.483,230.862 760.052,230.627 760.62,228.6 761.188,226.79 761.757,229.992 762.325,230.034 762.893,233.311 763.462,234.184 764.03,233.004 764.598,233.994 765.167,234.659 765.735,232.293 766.303,233.107 766.872,233.931 767.44,233.701 768.008,231.444 768.577,231.541 769.145,232.33 769.713,232.122 770.282,230.905 770.85,231.866 771.418,234.601 771.987,234.063 772.555,233.879 773.123,232.687 773.692,231.579 774.26,231.433 774.829,231.348 775.397,231.381 775.965,229.188 776.534,229.339 777.102,228.39 777.67,228.507 778.239,231.389 778.807,232.483 779.375,233.455 779.944,233.207 780.512,232.964 781.08,233.822 781.649,232.627 782.217,233.583 782.785,231.106 783.354,230.171 783.922,230.22 784.49,229.085 785.059,228.328 785.627,229.303 786.195,229.3 786.764,228.038 787.332,229.25 787.9,229.074 788.469,229.097 789.037,227.048 789.606,227.109 790.174,225.198 790.742,224.668 791.311,227.111 791.879,227.265 792.447,227.321 793.016,229.829 793.584,226.703 794.152,227.86 794.721,227.894 795.289,227.261 795.857,224.467 796.426,226.105 796.994,228.365 797.562,227.457 798.131,227.579 798.699,228.834 799.267,231.037 799.836,229.706 800.404,231.981 800.972,230.804 801.541,229.582 802.109,229.513 802.678,231.419 803.246,230.209 803.814,229.958 804.383,228.834 804.951,230.112 805.519,231.128 806.088,231.273 806.656,232.166 807.224,234.021 807.793,233.627 808.361,233.467 808.929,231.324 809.498,231.329 810.066,229.067 810.634,230.11 811.203,228.002 811.771,227.189 812.339,228.339 812.908,227.431 813.476,230.704 814.044,229.676 814.613,229.548 815.181,228.52 815.749,230.547 816.318,231.579 816.886,230.267 817.455,230.285 818.023,229.096 818.591,231.291 819.16,231.079 819.728,230.659 820.296,231.456 820.865,228.1 821.433,229.005 822.001,229.161 822.57,228.048 823.138,230.135 823.706,229.049 824.275,228.995 824.843,230.206 825.411,230.961 825.98,229.777 826.548,229.704 827.116,228.697 827.685,225.447 828.253,225.778 828.821,227.007 829.39,228.213 829.958,228.19 830.526,228.33 831.095,226.292 831.663,225.37 832.232,224.856 832.8,225.257 833.368,226.424 833.937,228.529 834.505,227.445 835.073,227.578 835.642,227.589 836.21,228.635 836.778,229.824 837.347,231.795 837.915,232.793 838.483,232.454 839.052,233.109 839.62,231.581 840.188,231.37 840.757,232.155 841.325,233.037 841.893,233.867 842.462,235.686 843.03,236.195 843.598,235.642 844.167,235.067 844.735,234.325 845.304,234.124 845.872,234.607 846.44,234.098 847.009,234.543 847.577,234.061 848.145,236.766 848.714,236.341 849.282,233.784 849.85,233.062 850.419,232.807 850.987,231.432 851.555,230.159 852.124,228.984 852.692,229.989 853.26,229.861 853.829,227.545 854.397,227.64 854.965,228.519 855.534,227.489 856.102,226.316 856.67,226.334 857.239,226.512 857.807,227.71 858.375,227.658 858.944,227.453 859.512,226.484 860.081,227.602 860.649,223.734 861.217,224.995 861.786,225.27 862.354,225.243 862.922,227.377 863.491,227.261 864.059,228.305 864.627,228.217 865.196,228.07 865.764,226.984 866.332,227.004 866.901,228.028 867.469,225.833 868.037,223.854 868.606,226.154 869.174,225.448 869.742,227.441 870.311,226.329 870.879,226.672 871.447,224.754 872.016,223.935 872.584,227.361 873.152,228.492 873.721,227.632 874.289,228.698 874.858,228.773 875.426,227.837 875.994,226.9 876.563,227.96 877.131,230.123 877.699,232.048 878.268,232.82 878.836,233.441 879.404,233.112 879.973,231.655 880.541,227.473 881.109,227.518 881.678,227.685 882.246,228.768 882.814,231.911 883.383,231.593 883.951,232.302 884.519,233.193 885.088,231.701 885.656,229.531 886.224,229.429 886.793,232.381 887.361,230.981 887.93,230.772 888.498,229.575 889.066,229.624 889.635,230.444 890.203,231.228 890.771,230.937 891.34,228.54 891.908,229.525 892.476,229.338 893.045,228.235 893.613,230.223 894.181,232.111 894.75,229.612 895.318,229.439 895.886,229.39 896.455,229.296 897.023,229.139 897.591,229.072 898.16,228.812 898.728,228.727 899.296,227.463 899.865,228.439 900.433,229.355 901.001,230.252 901.57,228.208 902.138,226.894 902.707,227.017 903.275,225.883 903.843,227.024 904.412,231.063 904.98,228.579 905.548,226.422 906.117,225.486 906.685,223.401 907.253,224.807 907.822,228.177 908.39,230.317 908.958,229.092 909.527,230.996 910.095,230.589 910.663,230.414 911.232,233.442 911.8,230.944 912.368,228.496 912.937,229.712 913.505,228.502 914.073,227.514 914.642,228.561 915.21,228.286 915.779,226.229 916.347,225.394 916.915,225.549 917.484,226.675 918.052,226.628 918.62,225.634 919.189,223.719 919.757,222.123 920.325,221.516 920.894,220.828 921.462,220.419 922.03,223.009 922.599,222.316 923.167,222.707 923.735,224.269 924.304,224.631 924.872,224.768 925.44,226.325 926.009,225.362 926.577,226.573 927.145,228.779 927.714,231.953 928.282,232.707 928.85,230.336 929.419,228.195 929.987,228.166 930.556,227.237 931.124,227.329 931.692,227.524 932.261,227.545 932.829,228.77 933.397,225.787 933.966,226.283 934.534,227.5 935.102,228.495 935.671,227.413 936.239,227.601 936.807,228.837 937.376,228.816 937.944,228.813 938.512,230.928 939.081,229.592 939.649,229.563 940.217,230.458 940.786,231.182 941.354,230.89 941.922,229.469 942.491,228.52 943.059,227.601 943.627,227.764 944.196,228.933 944.764,230.145 945.333,230.115 945.901,229.859 946.469,229.682 947.038,229.772 947.606,230.582 948.174,230.138 948.743,230.939 949.311,228.64 949.879,228.536 950.448,227.495 951.016,228.429 951.584,227.464 952.153,225.716 952.721,226.269 953.289,225.444 953.858,224.637 954.426,224.773 954.994,226.153 955.563,225.286 956.131,226.666 956.699,225.889 957.268,226.168 957.836,227.255 958.405,227.432 958.973,228.669 959.541,228.896 960.11,228.79 960.678,229.812 961.246,229.741 961.815,227.748 962.383,227.623 962.951,227.793 963.52,229.017 964.088,229.076 964.656,230.162 965.225,233.18 965.793,232.791 966.361,232.536 966.93,233.298 967.498,232.897 968.066,232.667 968.635,232.171 969.203,231.988 969.771,231.716 970.34,232.466 970.908,232.096 971.476,231.646 972.045,230.375 972.613,231.17 973.182,231.084 973.75,229.876 974.318,229.916 974.887,228.855 975.455,230.881 976.023,228.575 976.592,228.604 977.16,228.526 977.728,230.624 978.297,228.325 978.865,228.282 979.433,227.308 980.002,226.318 980.57,226.417 981.138,227.579 981.707,226.765 982.275,226.965 982.843,229.052 983.412,228.998 983.98,229.981 984.548,228.746 985.117,228.625 985.685,228.488 986.253,232.394 986.822,232.128 987.39,232.95 987.959,232.674 988.527,232.248 989.095,230.886 989.664,229.553 990.232,228.305 990.8,228.179 991.369,227.104 991.937,224.037 992.505,223.178 993.074,221.718 993.642,222.235 994.21,221.656 994.779,222.249 995.347,222.679 995.915,222.975 996.484,221.282 997.052,221.666 997.62,222.118 998.189,223.631 998.757,225.938 999.325,224.913 999.894,226.316 1000.46,224.412 1001.03,225.884 1001.6,227.073 1002.17,228.209 1002.74,230.395 1003.3,231.128 1003.87,228.021 1004.44,227.391 1005.01,229.726 1005.58,232.74 1006.15,231.11 1006.71,230.773 1007.28,229.713 1007.85,231.704 1008.42,230.363 1008.99,228.129 1009.56,228.993 1010.12,229.932 1010.69,229.771 1011.26,228.511 1011.83,225.428 1012.4,226.494 1012.97,227.674 1013.53,227.732 1014.1,226.683 1014.67,225.778 1015.24,226.887 1015.81,225.989 1016.38,227.3 1016.94,226.63 1017.51,226.664 1018.08,226.776 1018.65,226.842 1019.22,227.004 1019.79,228.083 1020.35,229.188 1020.92,227.935 1021.49,228.026 1022.06,227.195 1022.63,229.481 1023.2,229.459 1023.76,231.505 1024.33,232.217 1024.9,232.018 1025.47,233.003 1026.04,229.317 1026.61,231.296 1027.17,227.088 1027.74,225.904 1028.31,225.102 1028.88,225.449 1029.45,226.719 1030.02,226.943 1030.58,226.181 1031.15,226.42 1031.72,226.483 1032.29,225.652 1032.86,225.944 1033.43,225.906 1033.99,227.02 1034.56,227.308 1035.13,227.493 1035.7,226.609 1036.27,225.721 1036.84,224.8 1037.4,225.148 1037.97,225.334 1038.54,225.619 1039.11,228.721 1039.68,230.842 1040.25,233.685 1040.81,234.448 1041.38,229.912 1041.95,230.84 1042.52,231.878 1043.09,231.615 1043.66,231.784 1044.22,231.577 1044.79,232.216 1045.36,232.188 1045.93,232.093 1046.5,231.893 1047.07,232.458 1047.63,232.246 1048.2,230.972 1048.77,230.641 1049.34,229.385 1049.91,229.603 1050.48,231.592 1051.05,234.594 1051.61,233.073 1052.18,232.667 1052.75,229.186 1053.32,227.857 1053.89,227.948 1054.46,228.877 1055.02,227.816 1055.59,227.93 1056.16,226.955 1056.73,227.075 1057.3,224.034 1057.87,223.319 1058.43,224.759 1059,224.997 1059.57,222.108 1060.14,222.41 1060.71,220.5 1061.28,223.234 1061.84,223.468 1062.41,223.851 1062.98,227.069 1063.55,228.383 1064.12,228.418 1064.69,227.478 1065.25,226.387 1065.82,226.379 1066.39,225.63 1066.96,226.968 1067.53,228.152 1068.1,228.168 1068.66,229.329 1069.23,228.384 1069.8,230.462 1070.37,230.348 1070.94,230.379 1071.51,229.247 1072.07,227.289 1072.64,229.435 1073.21,229.351 1073.78,227.46 1074.35,227.529 1074.92,227.824 1075.48,227.781 1076.05,227.815 1076.62,228.94 1077.19,229.052 1077.76,224.947 1078.33,223.202 1078.89,223.373 1079.46,222.775 1080.03,224.217 1080.6,224.622 1081.17,227.173 1081.74,225.283 1082.3,227.545 1082.87,230.132 1083.44,231.101 1084.01,229.148 1084.58,229.167 1085.15,229.094 1085.71,226.981 1086.28,227.958 1086.85,226.006 1087.42,226.243 1087.99,225.62 1088.56,225.889 1089.12,226.248 1089.69,229.428 1090.26,228.642 1090.83,230.979 1091.4,229.838 1091.97,225.824 1092.53,226.205 1093.1,228.372 1093.67,228.276 1094.24,229.359 1094.81,229.403 1095.38,228.337 1095.94,228.374 1096.51,230.4 1097.08,230.453 1097.65,228.456 1098.22,230.612 1098.79,232.571 1099.35,233.369 1099.92,232.986 1100.49,232.968 1101.06,233.66 1101.63,235.521 1102.2,235.05 1102.76,235.494 1103.33,236.163 1103.9,235.479 1104.47,235.033 1105.04,233.542 1105.61,233.204 1106.17,232.792 1106.74,232.347 1107.31,232.066 1107.88,232.941 1108.45,232.901 1109.02,231.577 1109.58,232.316 1110.15,228.832 1110.72,228.848 1111.29,229.661 1111.86,226.435 1112.43,226.588 1112.99,227.775 1113.56,227.81 1114.13,229.015 1114.7,225.824 1115.27,225.083 1115.84,227.26 1116.4,226.607 1116.97,224.877 1117.54,225.011 1118.11,223.267 1118.68,224.581 1119.25,225.867 1119.81,226.159 1120.38,227.42 1120.95,228.329 1121.52,228.73 1122.09,228.627 1122.66,228.684 1123.23,227.7 1123.79,229.93 1124.36,228.909 1124.93,229.8 1125.5,229.589 1126.07,229.471 1126.64,228.182 1127.2,228.235 1127.77,229.071 1128.34,228.92 1128.91,227.799 1129.48,226.559 1130.05,227.595 1130.61,226.653 1131.18,225.754 1131.75,229.141 1132.32,230.225 1132.89,229.043 1133.46,227.804 1134.02,227.693 1134.59,226.521 1135.16,227.673 1135.73,228.951 1136.3,229.951 1136.87,230.742 1137.43,230.421 1138,231.317 1138.57,231.987 1139.14,231.693 1139.71,229.297 1140.28,230.159 1140.84,230.134 1141.41,232.068 1141.98,233.783 1142.55,232.189 1143.12,230.637 1143.69,228.531 1144.25,227.426 1144.82,228.235 1145.39,229.267 1145.96,228.989 1146.53,227.96 1147.1,226.845 1147.66,227.9 1148.23,227.699 1148.8,226.764 1149.37,227.912 1149.94,227.068 1150.51,226.983 1151.07,228.259 1151.64,230.339 1152.21,228.017 1152.78,226.824 1153.35,225.981 1153.92,222.2 1154.48,222.517 1155.05,222.909 1155.62,222.326 1156.19,221.637 1156.76,220.151 1157.33,221.84 1157.89,222.204 1158.46,221.643 1159.03,222.147 1159.6,220.759 1160.17,222.325 1160.74,223.788 1161.3,225.302 1161.87,223.566 1162.44,223.879 1163.01,225.355 1163.58,227.59 1164.15,227.8 1164.71,227.914 1165.28,226.973 1165.85,226.323 1166.42,225.683 1166.99,226.948 1167.56,226.143 1168.12,224.226 1168.69,224.518 1169.26,224.812 1169.83,226.228 1170.4,227.545 1170.97,226.542 1171.53,226.704 1172.1,225.943 1172.67,226.095 1173.24,225.326 1173.81,224.748 1174.38,226.139 1174.94,231.636 1175.51,233.449 1176.08,227.947 1176.65,228.063 1177.22,229.029 1177.79,229.309 1178.35,229.315 1178.92,229.337 1179.49,230.155 1180.06,229.099 1180.63,226.083 1181.2,224.509 1181.76,224.873 1182.33,226.168 1182.9,225.395 1183.47,225.708 1184.04,225.138 1184.61,225.669 1185.17,227.017 1185.74,228.571 1186.31,231.901 1186.88,231.72 1187.45,231.823 1188.02,229.967 1188.58,229.885 1189.15,230.767 1189.72,227.806 1190.29,227.995 1190.86,228.214 1191.43,229.488 1192,229.544 1192.56,230.772 1193.13,231.748 1193.7,230.905 1194.27,232.985 1194.84,230.664 1195.41,232.48 1195.97,234.353 1196.54,237.067 1197.11,237.719 1197.68,239.256 1198.25,239.51 1198.82,237.65 1199.38,236.997 1199.95,237.607 1200.52,236.956 1201.09,235.434 1201.66,236.706 1202.23,236.955 1202.79,236.293 1203.36,234.456 1203.93,235.03 1204.5,234.607 1205.07,235.227 1205.64,232.602 1206.2,230.008 1206.77,230.618 1207.34,230.54 1207.91,231.402 1208.48,228.777 1209.05,228.849 1209.61,226.683 1210.18,228.839 1210.75,228.744 1211.32,229.699 1211.89,229.637 1212.46,229.399 1213.02,230.382 1213.59,230.012 1214.16,228.602 1214.73,227.592 1215.3,228.696 1215.87,227.439 1216.43,225.286 1217,225.267 1217.57,224.418 1218.14,224.519 1218.71,225.534 1219.28,224.67 1219.84,225.694 1220.41,225.83 1220.98,225.884 1221.55,225.84 1222.12,226.964 1222.69,226.757 1223.25,226.709 1223.82,227.707 1224.39,227.598 1224.96,229.386 1225.53,230.393 1226.1,227.293 1226.66,227.244 1227.23,226.276 1227.8,227.349 1228.37,227.235 1228.94,228.157 1229.51,227.151 1230.07,229.234 1230.64,230.234 1231.21,230.066 1231.78,228.016 1232.35,229.216 1232.92,231.356 1233.48,231.996 1234.05,231.626 1234.62,231.404 1235.19,231.033 1235.76,228.594 1236.33,229.438 1236.89,230.386 1237.46,233.29 1238.03,233.879 1238.6,233.324 1239.17,234.619 1239.74,230.88 1240.3,230.501 1240.87,230.187 1241.44,230.898 1242.01,230.775 1242.58,227.386 1243.15,226.126 1243.71,228.153 1244.28,228.999 1244.85,229.836 1245.42,228.687 1245.99,227.823 1246.56,228.912 1247.12,230.762 1247.69,230.524 1248.26,229.168 1248.83,228.958 1249.4,227.974 1249.97,229.804 1250.53,231.488 1251.1,228.864 1251.67,229.726 1252.24,228.602 1252.81,227.573 1253.38,229.343 1253.94,229.135 1254.51,227.689 1255.08,227.611 1255.65,225.597 1256.22,227.72 1256.79,226.772 1257.35,226.779 1257.92,226.542 1258.49,226.415 1259.06,227.263 1259.63,226.15 1260.2,226.456 1260.76,226.562 1261.33,227.763 1261.9,228.73 1262.47,228.64 1263.04,227.635 1263.61,226.414 1264.18,226.315 1264.74,226.445 1265.31,225.39 1265.88,225.352 1266.45,226.65 1267.02,226.551 1267.59,225.787 1268.15,228.044 1268.72,228.076 1269.29,225.7 1269.86,226.778 1270.43,225.649 1271,225.81 1271.56,225.95 1272.13,226.038 1272.7,226.261 1273.27,229.24 1273.84,230.203 1274.41,229.918 1274.97,230.837 1275.54,227.462 1276.11,227.462 1276.68,231.741 1277.25,229.498 1277.82,229.431 1278.38,228.396 1278.95,228.434 1279.52,229.394 1280.09,227.196 1280.66,223.352 1281.23,224.553 1281.79,223.879 1282.36,224.925 1282.93,226.133 1283.5,226.092 1284.07,225.098 1284.64,225.294 1285.2,226.627 1285.77,227.915 1286.34,228.878 1286.91,227.755 1287.48,228.713 1288.05,228.457 1288.61,228.278 1289.18,229.179 1289.75,229.221 1290.32,227.887 1290.89,228.775 1291.46,226.639 1292.02,226.745 1292.59,228.747 1293.16,227.633 1293.73,227.462 1294.3,224.155 1294.87,225.353 1295.43,224.45 1296,221.573 1296.57,222.962 1297.14,225.386 1297.71,224.671 1298.28,225.137 1298.84,224.637 1299.41,223.824 1299.98,225.076 1300.55,223.35 1301.12,221.669 1301.69,221.275 1302.25,220.715 1302.82,224.271 1303.39,222.576 1303.96,222.107 1304.53,222.412 1305.1,225.039 1305.66,226.729 1306.23,227.866 1306.8,225.908 1307.37,226.182 1307.94,228.431 1308.51,228.363 1309.07,227.498 1309.64,227.579 1310.21,227.675 1310.78,226.718 1311.35,226.639 1311.92,227.832 1312.48,225.73 1313.05,223.826 1313.62,225.33 1314.19,226.714 1314.76,226.005 1315.33,226.242 1315.89,226.504 1316.46,227.734 1317.03,228.68 1317.6,228.71 1318.17,229.72 1318.74,230.719 1319.3,231.611 1319.87,231.46 1320.44,230.298 1321.01,233.384 1321.58,232.007 1322.15,230.627 1322.71,230.207 1323.28,229.216 1323.85,228.071 1324.42,229.204 1324.99,228.508 1325.56,229.565 1326.12,229.824 1326.69,228.773 1327.26,228.669 1327.83,228.888 1328.4,230.861 1328.97,230.567 1329.53,231.53 1330.1,231.231 1330.67,230.878 1331.24,230.794 1331.81,230.645 1332.38,228.485 1332.94,228.6 1333.51,228.607 1334.08,228.456 1334.65,228.502 1335.22,230.343 1335.79,230.35 1336.36,230.19 1336.92,231.219 1337.49,229.979 1338.06,231.91 1338.63,231.642 1339.2,231.406 1339.77,230.047 1340.33,230.072 1340.9,228.108 1341.47,230.257 1342.04,225.914 1342.61,225.053 1343.18,225.281 1343.74,224.212 1344.31,228.822 1344.88,228.619 1345.45,231.877 1346.02,228.514 1346.59,227.466 1347.15,228.655 1347.72,227.678 1348.29,224.588 1348.86,222.659 1349.43,222.279 1350,223.734 1350.56,223.017 1351.13,223.512 1351.7,224.877 1352.27,224.073 1352.84,224.495 1353.41,224.744 1353.97,225.03 1354.54,225.304 1355.11,225.625 1355.68,222.717 1356.25,224.141 1356.82,223.608 1357.38,223.853 1357.95,222.299 1358.52,221.809 1359.09,223.326 1359.66,225.865 1360.23,227.107 1360.79,228.356 1361.36,228.305 1361.93,228.417 1362.5,227.379 1363.07,225.42 1363.64,228.781 1364.2,229.854 1364.77,231.902 1365.34,230.615 1365.91,231.671 1366.48,232.553 1367.05,233.4 1367.61,233.229 1368.18,232.866 1368.75,236.571 1369.32,237.093 1369.89,236.56 1370.46,238.2 1371.02,238.462 1371.59,237.825 1372.16,233.993 1372.73,234.656 1373.3,234.245 1373.87,232.667 1374.43,233.342 1375,232.045 1375.57,232.612 1376.14,230.083 1376.71,229.946 1377.28,229.813 1377.84,229.031 1378.41,229.034 1378.98,229.991 1379.55,227.815 1380.12,229.644 1380.69,228.489 1381.25,229.347 1381.82,229.091 1382.39,227.994 1382.96,229.213 1383.53,224.852 1384.1,225.111 1384.66,225.291 1385.23,225.545 1385.8,226.882 1386.37,224.759 1386.94,225.66 1387.51,225.78 1388.07,226.951 1388.64,226.94 1389.21,228.109 1389.78,228.087 1390.35,227.247 1390.92,226.345 1391.48,226.479 1392.05,228.625 1392.62,228.592 1393.19,230.576 1393.76,228.311 1394.33,228.18 1394.89,226.909 1395.46,227.283 1396.03,226.257 1396.6,225.405 1397.17,227.824 1397.74,227.05 1398.3,226.144 1398.87,225.316 1399.44,226.573 1400.01,226.732 1400.58,225.946 1401.15,224.979 1401.71,226.114 1402.28,226.416 1402.85,228.503 1403.42,227.603 1403.99,226.571 1404.56,227.618 1405.13,226.665 1405.69,227.786 1406.26,228.921 1406.83,228.923 1407.4,229.082 1407.97,226.101 1408.54,224.195 1409.1,224.578 1409.67,224.978 1410.24,227.264 1410.81,228.416 1411.38,227.578 1411.95,228.516 1412.51,227.473 1413.08,227.68 1413.65,227.773 1414.22,227.759 1414.79,228.839 1415.36,228.864 1415.92,228.116 1416.49,228.227 1417.06,228.096 1417.63,229.253 1418.2,228.554 1418.77,228.67 1419.33,228.494 1419.9,229.6 1420.47,229.331 1421.04,226.282 1421.61,230.491 1422.18,228.523 1422.74,227.447 1423.31,228.775 1423.88,228.891 1424.45,231.146 1425.02,229.897 1425.59,227.54 1426.15,226.375 1426.72,223.245 1427.29,223.432 1427.86,224.924 1428.43,226.18 1429,223.287 1429.56,222.479 1430.13,223.727 1430.7,223.991 1431.27,223.461 1431.84,223.889 1432.41,225.398 1432.97,225.719 1433.54,224.792 1434.11,225.023 1434.68,226.46 1435.25,226.938 1435.82,225.98 1436.38,226.263 1436.95,227.336 1437.52,227.607 1438.09,229.784 1438.66,230.62 1439.23,231.68 1439.79,232.462 1440.36,233.398 1440.93,235.107 1441.5,234.709 1442.07,235.368 1442.64,233.768 1443.2,235.419 1443.77,234.858 1444.34,235.346 1444.91,234.853 1445.48,235.5 1446.05,234.031 1446.61,232.579 1447.18,232.159 1447.75,230.637 1448.32,228.454 1448.89,226.435 1449.46,226.588 1450.02,226.764 1450.59,227.65 1451.16,225.745 1451.73,228.016 1452.3,227.046 1452.87,224.917 1453.43,226.13 1454,225.369 1454.57,225.557 1455.14,229.169 1455.71,230.064 1456.28,228.802 1456.84,229.862 1457.41,228.808 1457.98,228.714 1458.55,228.695 1459.12,227.617 1459.69,228.758 1460.25,228.754 1460.82,227.726 1461.39,225.825 1461.96,226.049 1462.53,226.377 1463.1,226.54 1463.66,227.558 1464.23,228.589 1464.8,228.578 1465.37,227.603 1465.94,224.688 1466.51,225.74 1467.07,223.69 1467.64,224.939 1468.21,224.286 1468.78,223.625 1469.35,224.075 1469.92,225.603 1470.48,225.541 1471.05,224.724 1471.62,228.159 1472.19,227.334 1472.76,226.428 1473.33,226.533 1473.89,226.744 1474.46,228.095 1475.03,231.247 1475.6,232.031 1476.17,231.951 1476.74,227.47 1477.31,227.773 1477.87,227.89 1478.44,226.844 1479.01,229.86 1479.58,230.858 1480.15,231.709 1480.72,230.482 1481.28,229.638 1481.85,228.477 1482.42,228.128 1482.99,228.989 1483.56,231.342 1484.13,233.44 1484.69,231.312 1485.26,232.132 1485.83,229.84 1486.4,229.824 1486.97,230.667 1487.54,230.519 1488.1,230.393 1488.67,229.295 1489.24,227.939 1489.81,227.91 1490.38,228.034 1490.95,228.904 1491.51,229.843 1492.08,231.755 1492.65,232.454 1493.22,234.174 1493.79,231.535 1494.36,232.378 1494.92,232.085 1495.49,229.663 1496.06,229.724 1496.63,229.531 1497.2,230.44 1497.77,230.193 1498.33,229.977 1498.9,229.075 1499.47,231.856 1500.04,231.392 1500.61,231.212 1501.18,230.86 1501.74,232.725 1502.31,232.155 1502.88,230.829 1503.45,228.423 1504.02,228.318 1504.59,228.24 1505.15,229.284 1505.72,229.173 1506.29,229.06 1506.86,228.854 1507.43,230.679 1508,229.454 1508.56,230.803 1509.13,229.533 1509.7,229.588 1510.27,230.499 1510.84,231.194 1511.41,230.9 1511.97,229.681 1512.54,230.5 1513.11,231.353 1513.68,229.934 1514.25,230.67 1514.82,231.464 1515.38,233.259 1515.95,232.955 1516.52,232.567 1517.09,234.277 1517.66,233.522 1518.23,231.894 1518.79,231.414 1519.36,229.879 1519.93,230.699 1520.5,229.342 1521.07,228.019 1521.64,230.936 1522.2,228.462 1522.77,228.232 1523.34,226.972 1523.91,225.906 1524.48,225.68 1525.05,225.721 1525.61,225.736 1526.18,224.706 1526.75,226.837 1527.32,225.652 1527.89,225.682 1528.46,226.781 1529.02,228.085 1529.59,225.813 1530.16,226.952 1530.73,224.921 1531.3,220.893 1531.87,220.148 1532.43,221.748 1533,221.946 1533.57,226.196 1534.14,226.26 1534.71,223.109 1535.28,222.589 1535.84,222.069 1536.41,221.409 1536.98,221.06 1537.55,221.801 1538.12,221.143 1538.69,220.736 1539.25,222.409 1539.82,223.873 1540.39,225.468 1540.96,225.652 1541.53,225.701 1542.1,227.001 1542.66,225.903 1543.23,225.781 1543.8,225.891 1544.37,226.162 1544.94,226.271 1545.51,227.506 1546.08,229.591 1546.64,228.489 1547.21,229.648 1547.78,229.465 1548.35,229.49 1548.92,227.442 1549.49,224.356 1550.05,225.691 1550.62,227.999 1551.19,230.006 1551.76,229.773 1552.33,229.78 1552.9,228.563 1553.46,228.451 1554.03,228.334 1554.6,230.444 1555.17,231.384 1555.74,228.991 1556.31,231.073 1556.87,232.915 1557.44,232.376 1558.01,232.897 1558.58,232.688 1559.15,233.335 1559.72,231.862 1560.28,233.308 1560.85,232.002 1561.42,229.702 1561.99,225.575 1562.56,225.849 1563.13,224.757 1563.69,227.056 1564.26,225.958 1564.83,226.104 1565.4,228.424 1565.97,227.54 1566.54,229.649 1567.1,229.381 1567.67,228.003 1568.24,227.933 1568.81,227.85 1569.38,226.91 1569.95,228.002 1570.51,227.916 1571.08,227.911 1571.65,229.104 1572.22,231.295 1572.79,234.207 1573.36,232.556 1573.92,231.32 1574.49,230.977 1575.06,229.817 1575.63,228.496 1576.2,228.414 1576.77,226.249 1577.33,225.573 1577.9,225.81 1578.47,224.262 1579.04,225.6 1579.61,226.982 1580.18,225.009 1580.74,224.048 1581.31,224.362 1581.88,222.546 1582.45,224.976 1583.02,226.166 1583.59,223.136 1584.15,221.411 1584.72,220.92 1585.29,224.569 1585.86,226.035 1586.43,225.192 1587,224.38 1587.56,224.871 1588.13,225.994 1588.7,226.088 1589.27,226.094 1589.84,226.485 1590.41,226.632 1590.97,226.811 1591.54,228.023 1592.11,226.863 1592.68,227.049 1593.25,227.1 1593.82,228.155 1594.38,228.352 1594.95,228.231 1595.52,228.334 1596.09,227.355 1596.66,225.686 1597.23,224.882 1597.79,224.955 1598.36,225.315 1598.93,222.509 1599.5,222.981 1600.07,223.581 1600.64,223.946 1601.2,224.156 1601.77,224.573 1602.34,227.01 1602.91,225.192 1603.48,224.55 1604.05,224.065 1604.61,224.423 1605.18,225.844 1605.75,226.031 1606.32,226.366 1606.89,227.614 1607.46,227.726 1608.02,230.046 1608.59,229.852 1609.16,231.017 1609.73,232.795 1610.3,231.367 1610.87,231.245 1611.43,232.3 1612,232.078 1612.57,231.788 1613.14,229.372 1613.71,230.302 1614.28,228.185 1614.84,228.102 1615.41,227.304 1615.98,226.156 1616.55,224.114 1617.12,226.762 1617.69,227.982 1618.26,229.043 1618.82,228.152 1619.39,233.269 1619.96,233.017 1620.53,231.864 1621.1,230.467 1621.67,230.372 1622.23,230.291 1622.8,230.195 1623.37,230.112 1623.94,230.192 1624.51,229.314 1625.08,230.283 1625.64,232.399 1626.21,232.315 1626.78,233.077 1627.35,235.919 1627.92,236.463 1628.49,235.767 1629.05,237.26 1629.62,238.584 1630.19,240.098 1630.76,239.322 1631.33,238.428 1631.9,237.675 1632.46,236.942 1633.03,235.342 1633.6,235.746 1634.17,235.061 1634.74,233.366 1635.31,234.913 1635.87,234.432 1636.44,232.741 1637.01,231.242 1637.58,229.021 1638.15,229.154 1638.72,228.092 1639.28,228.116 1639.85,228.027 1640.42,228.955 1640.99,227.841 1641.56,224.666 1642.13,225.086 1642.69,225.32 1643.26,225.513 1643.83,228.726 1644.4,227.616 1644.97,227.581 1645.54,226.478 1646.1,226.746 1646.67,225.78 1647.24,225.915 1647.81,224.978 1648.38,223.07 1648.95,220.355 1649.51,220.697 1650.08,223.12 1650.65,221.442 1651.22,223.712 1651.79,223.871 1652.36,224.061 1652.92,225.454 1653.49,226.637 1654.06,227.918 1654.63,228.8 1655.2,228.896 1655.77,229.72 1656.33,228.505 1656.9,229.441 1657.47,228.145 1658.04,228.182 1658.61,225.955 1659.18,224.921 1659.74,228.189 1660.31,227.11 1660.88,226.202 1661.45,227.213 1662.02,227.278 1662.59,227.255 1663.15,228.298 1663.72,231.222 1664.29,230.024 1664.86,229.905 1665.43,229.796 1666,229.84 1666.56,229.671 1667.13,230.491 1667.7,229.186 1668.27,230.205 1668.84,229.135 1669.41,231.126 1669.97,229.831 1670.54,229.69 1671.11,230.833 1671.68,230.496 1672.25,231.318 1672.82,230.055 1673.38,230.053 1673.95,229.828 1674.52,227.63 1675.09,227.549 1675.66,228.562 1676.23,228.528 1676.79,230.409 1677.36,229.09 1677.93,228.783 1678.5,228.947 1679.07,228.751 1679.64,228.384 1680.2,227.083 1680.77,226.253 1681.34,226.322 1681.91,225.563 1682.48,227.836 1683.05,227.75 1683.61,226.518 1684.18,227.864 1684.75,228.892 1685.32,226.795 1685.89,227.961 1686.46,225.639 1687.02,227.999 1687.59,225.993 1688.16,225.137 1688.73,225.145 1689.3,226.404 1689.87,225.163 1690.44,224.152 1691,227.521 1691.57,226.816 1692.14,226.704 1692.71,225.787 1693.28,224.938 1693.85,226.42 1694.41,227.541 1694.98,227.694 1695.55,226.798 1696.12,223.71 1696.69,224.112 1697.26,221.599 1697.82,223.219 1698.39,222.717 1698.96,223.282 1699.53,220.723 1700.1,221.371 1700.67,220.944 1701.23,223.399 1701.8,224.757 1702.37,227.001 1702.94,229.237 1703.51,231.316 1704.08,231.955 1704.64,231.752 1705.21,231.603 1705.78,232.436 1706.35,230.076 1706.92,230.089 1707.49,230.143 1708.05,230.988 1708.62,233.821 1709.19,233.503 1709.76,233.248 1710.33,234.098 1710.9,236.05 1711.46,237.607 1712.03,236.905 1712.6,236.275 1713.17,235.744 1713.74,231.099 1714.31,231.01 1714.87,230.68 1715.44,229.539 1716.01,228.333 1716.58,227.103 1717.15,226.97 1717.72,227.986 1718.28,226.784 1718.85,226.021 1719.42,227.19 1719.99,228.438 1720.56,227.231 1721.13,228.307 1721.69,229.246 1722.26,229.085 1722.83,231.009 1723.4,230.937 1723.97,229.902 1724.54,230.857 1725.1,230.696 1725.67,229.455 1726.24,227.351 1726.81,224.197 1727.38,224.574 1727.95,224.778 1728.51,225.107 1729.08,225.335 1729.65,225.347 1730.22,224.505 1730.79,222.516 1731.36,223.86 1731.92,225.206 1732.49,225.175 1733.06,227.404 1733.63,226.637 1734.2,226.685 1734.77,225.925 1735.33,225.064 1735.9,226.416 1736.47,226.567 1737.04,225.429 1737.61,226.603 1738.18,226.843 1738.74,228.969 1739.31,228.67 1739.88,230.631 1740.45,232.65 1741.02,233.153 1741.59,230.894 1742.15,230.772 1742.72,230.46 1743.29,232.388 1743.86,232.072 1744.43,231.787 1745,231.589 1745.56,230.233 1746.13,229.06 1746.7,229.982 1747.27,228.834 1747.84,226.751 1748.41,225.644 1748.97,227.711 1749.54,226.669 1750.11,226.727 1750.68,226.52 1751.25,226.715 1751.82,226.755 1752.38,227.94 1752.95,229.131 1753.52,227.233 1754.09,227.274 1754.66,227.147 1755.23,226.044 1755.79,226.991 1756.36,227.048 1756.93,227.157 1757.5,225.109 1758.07,225.108 1758.64,226.427 1759.21,226.622 1759.77,229.85 1760.34,227.72 1760.91,227.786 1761.48,227.786 1762.05,228.81 1762.62,227.683 1763.18,227.704 1763.75,227.928 1764.32,225.994 1764.89,226.132 1765.46,229.389 1766.03,228.359 1766.59,226.515 1767.16,224.75 1767.73,225.322 1768.3,226.615 1768.87,230 1769.44,229.823 1770,229.894 1770.57,229.798 1771.14,229.585 1771.71,229.401 1772.28,228.279 1772.85,228.409 1773.41,231.545 1773.98,231.407 1774.55,230.177 1775.12,231.069 1775.69,230.999 1776.26,229.854 1776.82,231.93 1777.39,229.7 1777.96,228.5 1778.53,228.519 1779.1,227.548 1779.67,227.696 1780.23,224.659 1780.8,225.025 1781.37,227.22 1781.94,228.412 1782.51,228.304 1783.08,228.297 1783.64,228.421 1784.21,227.426 1784.78,227.394 1785.35,227.461 1785.92,226.551 1786.49,227.893 1787.05,229.088 1787.62,226.936 1788.19,227.291 1788.76,227.388 1789.33,228.455 1789.9,228.56 1790.46,229.795 1791.03,228.701 1791.6,226.881 1792.17,227.989 1792.74,227.882 1793.31,226.853 1793.87,225.899 1794.44,225.11 1795.01,226.488 1795.58,228.934 1796.15,226.701 1796.72,226.881 1797.28,227.039 1797.85,226.959 1798.42,226.835 1798.99,226.669 1799.56,225.713 1800.13,225.029 1800.69,225.469 1801.26,224.66 1801.83,224.982 1802.4,226.467 1802.97,226.683 1803.54,226.816 1804.1,226.972 1804.67,227.101 1805.24,226.342 1805.81,226.594 1806.38,227.011 1806.95,228.079 1807.51,230.344 1808.08,230.242 1808.65,230.263 1809.22,227.221 1809.79,228.148 1810.36,228.285 1810.92,228.372 1811.49,228.39 1812.06,229.371 1812.63,229.196 1813.2,228.253 1813.77,229.357 1814.33,227.288 1814.9,227.288 1815.47,227.369 1816.04,229.832 1816.61,229.78 1817.18,231.823 1817.74,231.643 1818.31,228.353 1818.88,228.428 1819.45,230.546 1820.02,229.394 1820.59,229.561 1821.15,229.521 1821.72,229.422 1822.29,230.369 1822.86,230.343 1823.43,230.222 1824,230.317 1824.56,229.082 1825.13,228.065 1825.7,226.924 1826.27,226.942 1826.84,229.241 1827.41,228.301 1827.97,228.367 1828.54,228.514 1829.11,229.606 1829.68,229.712 1830.25,228.687 1830.82,229.839 1831.39,228.77 1831.95,227.72 1832.52,226.791 1833.09,226.744 1833.66,223.872 1834.23,226.488 1834.8,226.843 1835.36,231.046 1835.93,231.889 1836.5,232.775 1837.07,234.389 1837.64,234.266 1838.21,232.684 1838.77,231.285 1839.34,230.031 1839.91,232.998 1840.48,230.348 1841.05,230.1 1841.62,230.05 1842.18,229.829 1842.75,230.622 1843.32,229.461 1843.89,228.569 1844.46,227.549 1845.03,226.569 1845.59,228.886 1846.16,231.019 1846.73,230.677 1847.3,230.424 1847.87,231.316 1848.44,230.087 1849,229.821 1849.57,228.718 1850.14,227.504 1850.71,228.667 1851.28,228.403 1851.85,229.212 1852.41,230.04 1852.98,231.774 1853.55,235.535 1854.12,234.763 1854.69,235.424 1855.26,233.752 1855.82,230.175 1856.39,229.941 1856.96,228.766 1857.53,227.718 1858.1,228.75 1858.67,228.625 1859.23,228.697 1859.8,228.546 1860.37,227.625 1860.94,228.472 1861.51,227.282 1862.08,228.269 1862.64,228.131 1863.21,227.985 1863.78,224.586 1864.35,225.825 1864.92,226.036 1865.49,227.018 1866.05,226.942 1866.62,225.76 1867.19,225.78 1867.76,225.971 1868.33,224.775 1868.9,225.919 1869.46,225.009 1870.03,227.305 1870.6,226.292 1871.17,225.246 1871.74,223.312 1872.31,223.608 1872.87,222.912 1873.44,225.075 1874.01,227.392 1874.58,229.412 1875.15,228.223 1875.72,229.116 1876.28,230.164 1876.85,229.293 1877.42,230.453 1877.99,231.182 1878.56,231.045 1879.13,227.731 1879.69,226.738 1880.26,224.892 1880.83,224.368 1881.4,223.717 1881.97,223.811 1882.54,224.219 1883.1,225.402 1883.67,224.886 1884.24,225.215 1884.81,224.391 1885.38,224.56 1885.95,228.8 1886.51,226.732 1887.08,227.773 1887.65,228.786 1888.22,229.009 1888.79,230.037 1889.36,227.764 1889.92,227.7 1890.49,225.48 1891.06,225.593 1891.63,227.79 1892.2,228.943 1892.77,227.89 1893.33,227.831 1893.9,226.914 1894.47,230.252 1895.04,229.17 1895.61,229.198 1896.18,228.043 1896.74,228.104 1897.31,227.187 1897.88,228.152 1898.45,229.208 1899.02,229.182 1899.59,227.061 1900.16,226.051 1900.72,226.299 1901.29,226.457 1901.86,225.619 1902.43,225.881 1903,225.927 1903.57,227.222 1904.13,227.168 1904.7,227.159 1905.27,228.139 1905.84,227.984 1906.41,228.116 1906.98,227.061 1907.54,226.258 1908.11,225.303 1908.68,226.611 1909.25,228.826 1909.82,228.81 1910.39,228.902 1910.95,229.894 1911.52,231.944 1912.09,233.714 1912.66,233.389 1913.23,231.801 1913.8,229.476 1914.36,228.427 1914.93,228.293 1915.5,228.263 1916.07,228.175 1916.64,227.151 1917.21,228.578 1917.77,228.575 1918.34,225.266 1918.91,226.366 1919.48,225.351 1920.05,223.436 1920.62,223.818 1921.18,223.345 1921.75,223.693 1922.32,227.063 1922.89,227.183 1923.46,227.318 1924.03,226.2 1924.59,228.517 1925.16,228.634 1925.73,229.819 1926.3,229.826 1926.87,229.712 1927.44,229.799 1928,228.744 1928.57,227.589 1929.14,226.777 1929.71,224.119 1930.28,228.628 1930.85,230.783 1931.41,229.536 1931.98,229.577 1932.55,228.279 1933.12,229.131 1933.69,229.068 1934.26,230.134 1934.82,230.01 1935.39,230.845 1935.96,230.582 1936.53,229.433 1937.1,227.479 1937.67,226.714 1938.23,226.697 1938.8,227.972 1939.37,227.879 1939.94,228.014 1940.51,226.805 1941.08,226.607 1941.64,228.616 1942.21,227.601 1942.78,227.631 1943.35,230.824 1943.92,230.918 1944.49,230.858 1945.05,228.533 1945.62,227.646 1946.19,226.848 1946.76,228.989 1947.33,228.89 1947.9,227.693 1948.46,226.74 1949.03,225.895 1949.6,228.174 1950.17,228.393 1950.74,227.576 1951.31,227.591 1951.87,227.771 1952.44,225.711 1953.01,225.028 1953.58,224.332 1954.15,224.569 1954.72,223.848 1955.28,224.16 1955.85,224.748 1956.42,226.075 1956.99,225.187 1957.56,227.434 1958.13,228.699 1958.69,229.673 1959.26,230.58 1959.83,231.486 1960.4,232.49 1960.97,232.275 1961.54,232.128 1962.1,230.824 1962.67,231.689 1963.24,231.428 1963.81,228.148 1964.38,227.24 1964.95,230.531 1965.51,231.302 1966.08,233.411 1966.65,233.783 1967.22,235.545 1967.79,235.347 1968.36,234.638 1968.92,235.014 1969.49,232.378 1970.06,233.997 1970.63,234.603 1971.2,233.268 1971.77,233.964 1972.34,233.62 1972.9,233.212 1973.47,230.644 1974.04,228.175 1974.61,225.034 1975.18,225.062 1975.75,225.081 1976.31,226.188 1976.88,228.376 1977.45,229.272 1978.02,228.247 1978.59,227.059 1979.16,226.99 1979.72,225.998 1980.29,226.197 1980.86,225.042 1981.43,225.164 1982,224.345 1982.57,226.413 1983.13,225.258 1983.7,225.593 1984.27,226.671 1984.84,227.486 1985.41,226.507 1985.98,227.453 1986.54,228.479 1987.11,228.297 1987.68,230.399 1988.25,231.146 1988.82,229.796 1989.39,229.655 1989.95,229.504 1990.52,226.235 1991.09,227.427 1991.66,227.492 1992.23,226.394 1992.8,226.52 1993.36,225.515 1993.93,225.899 1994.5,227.285 1995.07,227.398 1995.64,226.361 1996.21,227.495 1996.77,228.688 1997.34,227.692 1997.91,224.275 1998.48,223.432 1999.05,225.794 1999.62,225.976 2000.18,225.159 2000.75,227.391 2001.32,227.543 2001.89,228.538 2002.46,228.582 2003.03,229.556 2003.59,228.461 2004.16,230.473 2004.73,231.294 2005.3,229.902 2005.87,230.547 2006.44,228.355 2007,227.494 2007.57,223.487 2008.14,223.773 2008.71,225.205 2009.28,223.22 2009.85,224.744 2010.41,225.259 2010.98,225.621 2011.55,223.748 2012.12,225.285 2012.69,225.471 2013.26,226.63 2013.82,226.789 2014.39,224.799 2014.96,226.07 2015.53,226.268 2016.1,229.466 2016.67,231.358 2017.23,231.082 2017.8,229.885 2018.37,225.602 2018.94,224.629 2019.51,225.885 2020.08,227.089 2020.64,226.061 2021.21,226.481 2021.78,224.454 2022.35,228.911 2022.92,227.763 2023.49,227.995 2024.05,232.29 2024.62,230.98 2025.19,233.788 2025.76,233.543 2026.33,233.275 2026.9,231.973 2027.46,229.588 2028.03,229.314 2028.6,229.068 2029.17,227.703 2029.74,226.689 2030.31,227.844 2030.87,226.955 2031.44,226.346 2032.01,225.306 2032.58,224.711 2033.15,225.172 2033.72,225.325 2034.28,225.307 2034.85,224.554 2035.42,222.821 2035.99,222.008 2036.56,224.566 2037.13,222.812 2037.69,224.309 2038.26,224.582 2038.83,224.988 2039.4,226.307 2039.97,226.722 2040.54,227.959 2041.11,224.986 2041.67,224.983 2042.24,227.316 2042.81,224.321 2043.38,219.895 2043.95,222.566 2044.52,224.2 2045.08,226.607 2045.65,228.794 2046.22,230.12 2046.79,230.096 2047.36,230.904 2047.93,229.819 2048.49,229.753 2049.06,230.738 2049.63,230.706 2050.2,230.667 2050.77,232.859 2051.34,230.386 2051.9,229.329 2052.47,230.426 2053.04,228.328 2053.61,230.521 2054.18,230.684 2054.75,232.653 2055.31,233.525 2055.88,234.209 2056.45,234.9 2057.02,236.474 2057.59,234.826 2058.16,232.07 2058.72,232.702 2059.29,231.14 2059.86,234.237 2060.43,233.669 2061,233.218 2061.57,233.889 2062.13,232.305 2062.7,231.159 2063.27,230.992 2063.84,231.011 2064.41,233.678 2064.98,234.502 2065.54,231.908 2066.11,232.374 2066.68,234.012 2067.25,233.586 2067.82,233.065 2068.39,233.06 2068.95,234.758 2069.52,235.385 2070.09,234.629 2070.66,234.075 2071.23,233.65 2071.8,233.259 2072.36,233.893 2072.93,233.074 2073.5,235.57 2074.07,233.76 2074.64,233.389 2075.21,232.724 2075.77,232.323 2076.34,231.9 2076.91,229.279 2077.48,226.774 2078.05,224.741 2078.62,224.866 2079.18,224.863 2079.75,224.985 2080.32,225.024 2080.89,224.939 2081.46,223.899 2082.03,224.859 2082.59,223.966 2083.16,224.245 2083.73,224.598 2084.3,222.742 2084.87,226.047 2085.44,225.141 2086,226.296 2086.57,227.357 2087.14,228.27 2087.71,228.08 2088.28,228.934 2088.85,227.711 2089.41,227.493 2089.98,226.394 2090.55,226.573 2091.12,225.483 2091.69,224.456 2092.26,224.523 2092.82,223.732 2093.39,224.18 2093.96,224.359 2094.53,228.794 2095.1,226.595 2095.67,226.42 2096.23,227.507 2096.8,226.603 2097.37,225.749 2097.94,227.827 2098.51,227.925 2099.08,227.968 2099.64,228.135 2100.21,228.924 2100.78,228.993 2101.35,228.884 2101.92,227.62 2102.49,225.524 2103.05,224.783 2103.62,224.031 2104.19,224.402 2104.76,221.429 2105.33,223.108 2105.9,222.294 2106.46,223.581 2107.03,223.843 2107.6,225.096 2108.17,224.333 2108.74,223.537 2109.31,223.035 2109.87,223.883 2110.44,228.457 2111.01,228.593 2111.58,227.459 2112.15,228.579 2112.72,227.413 2113.29,226.365 2113.85,226.502 2114.42,225.61 2114.99,225.84 2115.56,228.192 2116.13,229.278 2116.7,228.216 2117.26,227.31 2117.83,226.384 2118.4,226.535 2118.97,226.438 2119.54,229.73 2120.11,230.489 2120.67,231.547 2121.24,229.437 2121.81,229.631 2122.38,230.49 2122.95,230.323 2123.52,232.277 2124.08,234.129 2124.65,234.651 2125.22,235.176 2125.79,235.694 2126.36,233.142 2126.93,232.708 2127.49,232.365 2128.06,230.934 2128.63,229.75 2129.2,229.543 2129.77,230.382 2130.34,230.987 2130.9,230.603 2131.47,229.249 2132.04,226.813 2132.61,226.869 2133.18,228.981 2133.75,227.859 2134.31,228.993 2134.88,229.08 2135.45,228.826 2136.02,227.813 2136.59,226.722 2137.16,224.772 2137.72,227.067 2138.29,227.019 2138.86,225.938 2139.43,227.121 2140,226.295 2140.57,226.543 2141.13,226.56 2141.7,224.52 2142.27,224.864 2142.84,224.869 2143.41,225.884 2143.98,226.065 2144.54,226.291 2145.11,226.09 2145.68,226.296 2146.25,226.506 2146.82,226.706 2147.39,222.855 2147.95,221.189 2148.52,222.867 2149.09,222.404 2149.66,224.86 2150.23,224.977 2150.8,224.94 2151.36,225.232 2151.93,224.366 2152.5,225.95 2153.07,228.198 2153.64,229.978 2154.21,229.709 2154.77,229.534 2155.34,229.575 2155.91,227.483 2156.48,226.59 2157.05,223.63 2157.62,227.073 2158.18,226.166 2158.75,227.504 2159.32,227.735 2159.89,228.087 \"/>\n<path clip-path=\"url(#clip090)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip090)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip090)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip090)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip090)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip090)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.031 ¬± 0.021\n  with uncertainty of ¬± 0.0019052800599163658\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01349 ¬± (0.00219205, 0.00221431) (MC)\n  95% confidence interval: [-4.01766, -4.00937]) (MC)\n  linear error propagation: -4.01364 ¬± 0.00212049\n  |Œ¥_y| = |0.00135773| (‚â§ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.01348701027864, val_l = 0.004176046015821555, val_u = 0.004118520632469647)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip120\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip120)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip121\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip120)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip122\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1150.6 2211.02,1150.6 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,988.596 2211.02,988.596 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,826.59 2211.02,826.59 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,664.583 2211.02,664.583 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,502.577 2211.02,502.577 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,340.57 2211.02,340.57 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1150.6 365.751,1150.6 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,988.596 365.751,988.596 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,826.59 365.751,826.59 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,664.583 365.751,664.583 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,502.577 365.751,502.577 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,340.57 365.751,340.57 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M298.909 1136.4 Q295.298 1136.4 293.469 1139.97 Q291.664 1143.51 291.664 1150.64 Q291.664 1157.74 293.469 1161.31 Q295.298 1164.85 298.909 1164.85 Q302.543 1164.85 304.349 1161.31 Q306.177 1157.74 306.177 1150.64 Q306.177 1143.51 304.349 1139.97 Q302.543 1136.4 298.909 1136.4 M298.909 1132.7 Q304.719 1132.7 307.775 1137.3 Q310.853 1141.89 310.853 1150.64 Q310.853 1159.36 307.775 1163.97 Q304.719 1168.55 298.909 1168.55 Q293.099 1168.55 290.02 1163.97 Q286.964 1159.36 286.964 1150.64 Q286.964 1141.89 290.02 1137.3 Q293.099 1132.7 298.909 1132.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M259.557 1001.94 L267.196 1001.94 L267.196 975.576 L258.886 977.242 L258.886 972.983 L267.15 971.316 L271.826 971.316 L271.826 1001.94 L279.465 1001.94 L279.465 1005.88 L259.557 1005.88 L259.557 1001.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M298.909 974.395 Q295.298 974.395 293.469 977.96 Q291.664 981.502 291.664 988.631 Q291.664 995.738 293.469 999.302 Q295.298 1002.84 298.909 1002.84 Q302.543 1002.84 304.349 999.302 Q306.177 995.738 306.177 988.631 Q306.177 981.502 304.349 977.96 Q302.543 974.395 298.909 974.395 M298.909 970.691 Q304.719 970.691 307.775 975.298 Q310.853 979.881 310.853 988.631 Q310.853 997.358 307.775 1001.96 Q304.719 1006.55 298.909 1006.55 Q293.099 1006.55 290.02 1001.96 Q286.964 997.358 286.964 988.631 Q286.964 979.881 290.02 975.298 Q293.099 970.691 298.909 970.691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M262.775 839.935 L279.094 839.935 L279.094 843.87 L257.15 843.87 L257.15 839.935 Q259.812 837.18 264.395 832.55 Q269.002 827.898 270.182 826.555 Q272.428 824.032 273.307 822.296 Q274.21 820.537 274.21 818.847 Q274.21 816.092 272.266 814.356 Q270.344 812.62 267.242 812.62 Q265.043 812.62 262.59 813.384 Q260.159 814.148 257.381 815.699 L257.381 810.977 Q260.205 809.842 262.659 809.264 Q265.113 808.685 267.15 808.685 Q272.52 808.685 275.715 811.37 Q278.909 814.055 278.909 818.546 Q278.909 820.676 278.099 822.597 Q277.312 824.495 275.205 827.088 Q274.627 827.759 271.525 830.976 Q268.423 834.171 262.775 839.935 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M298.909 812.389 Q295.298 812.389 293.469 815.953 Q291.664 819.495 291.664 826.625 Q291.664 833.731 293.469 837.296 Q295.298 840.837 298.909 840.837 Q302.543 840.837 304.349 837.296 Q306.177 833.731 306.177 826.625 Q306.177 819.495 304.349 815.953 Q302.543 812.389 298.909 812.389 M298.909 808.685 Q304.719 808.685 307.775 813.291 Q310.853 817.875 310.853 826.625 Q310.853 835.351 307.775 839.958 Q304.719 844.541 298.909 844.541 Q293.099 844.541 290.02 839.958 Q286.964 835.351 286.964 826.625 Q286.964 817.875 290.02 813.291 Q293.099 808.685 298.909 808.685 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M272.914 663.229 Q276.27 663.947 278.145 666.215 Q280.043 668.484 280.043 671.817 Q280.043 676.933 276.525 679.734 Q273.006 682.535 266.525 682.535 Q264.349 682.535 262.034 682.095 Q259.742 681.678 257.289 680.822 L257.289 676.308 Q259.233 677.442 261.548 678.021 Q263.863 678.599 266.386 678.599 Q270.784 678.599 273.076 676.863 Q275.39 675.127 275.39 671.817 Q275.39 668.762 273.238 667.049 Q271.108 665.313 267.289 665.313 L263.261 665.313 L263.261 661.47 L267.474 661.47 Q270.923 661.47 272.752 660.104 Q274.58 658.715 274.58 656.123 Q274.58 653.461 272.682 652.049 Q270.807 650.614 267.289 650.614 Q265.367 650.614 263.168 651.03 Q260.969 651.447 258.33 652.326 L258.33 648.16 Q260.992 647.419 263.307 647.049 Q265.645 646.678 267.705 646.678 Q273.029 646.678 276.131 649.109 Q279.233 651.516 279.233 655.637 Q279.233 658.507 277.59 660.498 Q275.946 662.465 272.914 663.229 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M298.909 650.382 Q295.298 650.382 293.469 653.947 Q291.664 657.488 291.664 664.618 Q291.664 671.725 293.469 675.289 Q295.298 678.831 298.909 678.831 Q302.543 678.831 304.349 675.289 Q306.177 671.725 306.177 664.618 Q306.177 657.488 304.349 653.947 Q302.543 650.382 298.909 650.382 M298.909 646.678 Q304.719 646.678 307.775 651.285 Q310.853 655.868 310.853 664.618 Q310.853 673.345 307.775 677.951 Q304.719 682.535 298.909 682.535 Q293.099 682.535 290.02 677.951 Q286.964 673.345 286.964 664.618 Q286.964 655.868 290.02 651.285 Q293.099 646.678 298.909 646.678 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M271.594 489.371 L259.789 507.82 L271.594 507.82 L271.594 489.371 M270.367 485.297 L276.247 485.297 L276.247 507.82 L281.177 507.82 L281.177 511.709 L276.247 511.709 L276.247 519.857 L271.594 519.857 L271.594 511.709 L255.992 511.709 L255.992 507.195 L270.367 485.297 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M298.909 488.376 Q295.298 488.376 293.469 491.94 Q291.664 495.482 291.664 502.612 Q291.664 509.718 293.469 513.283 Q295.298 516.824 298.909 516.824 Q302.543 516.824 304.349 513.283 Q306.177 509.718 306.177 502.612 Q306.177 495.482 304.349 491.94 Q302.543 488.376 298.909 488.376 M298.909 484.672 Q304.719 484.672 307.775 489.278 Q310.853 493.862 310.853 502.612 Q310.853 511.338 307.775 515.945 Q304.719 520.528 298.909 520.528 Q293.099 520.528 290.02 515.945 Q286.964 511.338 286.964 502.612 Q286.964 493.862 290.02 489.278 Q293.099 484.672 298.909 484.672 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M258.793 323.29 L277.15 323.29 L277.15 327.225 L263.076 327.225 L263.076 335.698 Q264.094 335.35 265.113 335.188 Q266.131 335.003 267.15 335.003 Q272.937 335.003 276.316 338.174 Q279.696 341.346 279.696 346.762 Q279.696 352.341 276.224 355.443 Q272.752 358.522 266.432 358.522 Q264.256 358.522 261.988 358.151 Q259.742 357.781 257.335 357.04 L257.335 352.341 Q259.418 353.475 261.641 354.031 Q263.863 354.586 266.34 354.586 Q270.344 354.586 272.682 352.48 Q275.02 350.373 275.02 346.762 Q275.02 343.151 272.682 341.045 Q270.344 338.938 266.34 338.938 Q264.465 338.938 262.59 339.355 Q260.738 339.772 258.793 340.651 L258.793 323.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M298.909 326.369 Q295.298 326.369 293.469 329.934 Q291.664 333.475 291.664 340.605 Q291.664 347.711 293.469 351.276 Q295.298 354.818 298.909 354.818 Q302.543 354.818 304.349 351.276 Q306.177 347.711 306.177 340.605 Q306.177 333.475 304.349 329.934 Q302.543 326.369 298.909 326.369 M298.909 322.665 Q304.719 322.665 307.775 327.272 Q310.853 331.855 310.853 340.605 Q310.853 349.332 307.775 353.938 Q304.719 358.522 298.909 358.522 Q293.099 358.522 290.02 353.938 Q286.964 349.332 286.964 340.605 Q286.964 331.855 290.02 327.272 Q293.099 322.665 298.909 322.665 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip122)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1031.23 400.199,921.566 400.786,820.944 401.372,960.79 401.958,861.181 402.545,872.975 403.131,782.69 403.718,710.273 404.304,638.555 404.891,658.104 405.477,589.479 406.063,530.878 406.65,476.507 407.236,427.399 407.823,383.214 408.409,343.633 408.995,308.356 409.582,333.556 410.168,303.67 410.755,279.586 411.341,256.59 411.927,236.764 412.514,219.895 413.1,245.05 413.687,232.168 414.273,255.694 414.86,245.891 415.446,237.921 416.032,233.385 416.619,230.538 417.205,230.238 417.792,253.437 418.378,275.989 418.964,297.58 419.551,337.337 420.137,356.789 420.724,376.195 421.31,380.23 421.896,414.835 422.483,433.328 423.069,450.836 423.656,456.445 424.242,462.73 424.829,480.63 425.415,487.456 426.001,504.437 426.588,530.808 427.174,537.762 427.761,571.969 428.347,587.72 428.933,603.199 429.52,618.051 430.106,631.906 430.693,638.801 431.279,646.037 431.865,660.122 432.452,673.489 433.038,686.735 433.625,705.414 434.211,722.591 434.798,734.616 435.384,746.134 435.97,757.964 436.557,773.6 437.143,784.445 437.73,790.583 438.316,801.428 438.902,811.661 439.489,829.675 440.075,839.597 440.662,857.26 441.248,873.66 441.835,882.431 442.421,897.603 443.007,905.415 443.594,910.433 444.18,915.373 444.767,924.099 445.353,931.821 445.939,942.5 446.526,952.99 447.112,960.654 447.699,970.751 448.285,974.919 448.871,979.289 449.458,984.018 450.044,990.913 450.631,997.952 451.217,1002.38 451.804,1011.47 452.39,1018.28 452.976,1022.24 453.563,1028.51 454.149,1037.09 454.736,1049.59 455.322,1055.63 455.908,1063.73 456.495,1069.23 457.081,1078.86 457.668,1084.08 458.254,1095.12 458.84,1101.48 459.427,1101.79 460.013,1106.78 460.6,1111.56 461.186,1117.72 461.773,1125.71 462.359,1129.47 462.945,1140.79 463.532,1142.06 464.118,1145.36 464.705,1146.79 465.291,1149.92 465.877,1155.08 466.464,1157.94 467.05,1159.46 467.637,1162.29 468.223,1167.03 468.809,1176.55 469.396,1180.63 469.982,1184.47 470.569,1184.74 471.155,1188.73 471.742,1190.62 472.328,1192.77 472.914,1193.15 473.501,1193.49 474.087,1195.37 474.674,1194.53 475.26,1193.61 475.846,1194.22 476.433,1193.33 477.019,1192.82 477.606,1195.02 478.192,1195.86 478.778,1198.31 479.365,1202.01 479.951,1210.15 480.538,1211.89 481.124,1212.14 481.711,1214.98 482.297,1216.44 482.883,1216.79 483.47,1219.62 484.056,1219.55 484.643,1219.57 485.229,1224.2 485.815,1228.29 486.402,1230.7 486.988,1230.33 487.575,1228.45 488.161,1231.14 488.748,1230.84 489.334,1233.18 489.92,1235.56 490.507,1236.63 491.093,1236.23 491.68,1234.19 492.266,1233.91 492.852,1232.22 493.439,1231.9 494.025,1234.66 494.612,1235.89 495.198,1238.01 495.784,1238.57 496.371,1239.72 496.957,1240.32 497.544,1238.49 498.13,1239.43 498.717,1242 499.303,1239.95 499.889,1240.79 500.476,1241.53 501.062,1243.89 501.649,1243.15 502.235,1240.99 502.821,1243.26 503.408,1246.29 503.994,1246.46 504.581,1246.81 505.167,1245.95 505.753,1246.55 506.34,1249.79 506.926,1247.38 507.513,1248.17 508.099,1247.17 508.686,1246.23 509.272,1247.05 509.858,1246.22 510.445,1248.18 511.031,1250.46 511.618,1249.54 512.204,1247.52 512.79,1245.38 513.377,1243.7 513.963,1244.74 514.55,1243.86 515.136,1245.08 515.722,1250.09 516.309,1250.53 516.895,1248.27 517.482,1247.52 518.068,1245.56 518.655,1246.54 519.241,1247.38 519.827,1248.05 520.414,1246.32 521,1245.84 521.587,1247.86 522.173,1246.91 522.759,1247.71 523.346,1246.93 523.932,1246.28 524.519,1246.78 525.105,1243.7 525.691,1242.99 526.278,1240.75 526.864,1242.85 527.451,1243.75 528.037,1244.53 528.624,1243.86 529.21,1240.37 529.796,1237.38 530.383,1238.66 530.969,1238.42 531.556,1239.67 532.142,1240.96 532.728,1240.31 533.315,1239.72 533.901,1239.33 534.488,1238.98 535.074,1241.32 535.661,1240.76 536.247,1240.16 536.833,1243.97 537.42,1245.02 538.006,1244.74 538.593,1241.83 539.179,1241.34 539.765,1242.38 540.352,1243.55 540.938,1243.37 541.525,1244.25 542.111,1243.75 542.697,1241.79 543.284,1242.61 543.87,1243.64 544.457,1240.58 545.043,1237.62 545.63,1237.4 546.216,1237.24 546.802,1235.85 547.389,1235.79 547.975,1234.52 548.562,1234.38 549.148,1235.81 549.734,1235.81 550.321,1239.65 550.907,1243.14 551.494,1242.54 552.08,1244.59 552.666,1247.81 553.253,1248.4 553.839,1247.4 554.426,1248.05 555.012,1243.19 555.599,1247.83 556.185,1246.57 556.771,1245.75 557.358,1246.05 557.944,1245.39 558.531,1246.07 559.117,1244.13 559.703,1242.36 560.29,1241.56 560.876,1240.92 561.463,1240.59 562.049,1241.39 562.635,1239.62 563.222,1240.77 563.808,1237.55 564.395,1234.32 564.981,1232.45 565.568,1235.37 566.154,1236.28 566.74,1235.81 567.327,1234.12 567.913,1238.11 568.5,1234.77 569.086,1235.83 569.672,1237.06 570.259,1239.3 570.845,1236.26 571.432,1235.69 572.018,1235.71 572.605,1234.11 573.191,1229.95 573.777,1228.85 574.364,1230.55 574.95,1230.67 575.537,1231.96 576.123,1233.23 576.709,1231.67 577.296,1231.38 577.882,1232.81 578.469,1235.4 579.055,1233.98 579.641,1228.51 580.228,1229.83 580.814,1229.87 581.401,1232.51 581.987,1235.16 582.574,1232.15 583.16,1232.26 583.746,1232.25 584.333,1233.39 584.919,1234.25 585.506,1234.21 586.092,1232.59 586.678,1228.29 587.265,1227.14 587.851,1229.88 588.438,1230.01 589.024,1229.88 589.61,1232.52 590.197,1234.91 590.783,1233.26 591.37,1230.41 591.956,1230.16 592.543,1231.34 593.129,1232.29 593.715,1233.52 594.302,1235.77 594.888,1236.46 595.475,1237.44 596.061,1234.62 596.647,1235.94 597.234,1233.32 597.82,1234.11 598.407,1231.25 598.993,1229.81 599.579,1230.97 600.166,1230.93 600.752,1233.22 601.339,1232.82 601.925,1232.24 602.512,1231.74 603.098,1231.65 603.684,1234.14 604.271,1235.08 604.857,1236 605.444,1234.48 606.03,1234 606.616,1236.14 607.203,1234.31 607.789,1237.53 608.376,1236.91 608.962,1234.65 609.548,1234.16 610.135,1236.21 610.721,1237.08 611.308,1236.52 611.894,1237.34 612.481,1238.12 613.067,1237.46 613.653,1236.55 614.24,1237.41 614.826,1239.37 615.413,1238.26 615.999,1236.32 616.585,1235.69 617.172,1233.89 617.758,1233.51 618.345,1234.47 618.931,1235.44 619.518,1233.95 620.104,1232.49 620.69,1232.13 621.277,1230.38 621.863,1232.65 622.45,1233.48 623.036,1234.48 623.622,1234.08 624.209,1232.12 624.795,1233.19 625.382,1232.64 625.968,1233.37 626.554,1234.22 627.141,1235.21 627.727,1232.93 628.314,1232.35 628.9,1230.43 629.487,1230.04 630.073,1228.54 630.659,1229.95 631.246,1231.16 631.832,1229.41 632.419,1225.55 633.005,1223.99 633.591,1224.12 634.178,1226.8 634.764,1229.29 635.351,1228.98 635.937,1229.06 636.523,1230.35 637.11,1227.68 637.696,1227.57 638.283,1226.12 638.869,1227.35 639.456,1228.36 640.042,1227.86 640.628,1227.68 641.215,1227.58 641.801,1227.46 642.388,1226.19 642.974,1224.98 643.56,1223.74 644.147,1225.32 644.733,1229.23 645.32,1227.84 645.906,1227.44 646.492,1228.49 647.079,1229.42 647.665,1227.75 648.252,1228.62 648.838,1230.69 649.425,1228.87 650.011,1228.62 650.597,1230.92 651.184,1231.84 651.77,1232.76 652.357,1232.19 652.943,1231.81 653.529,1231.41 654.116,1232.37 654.702,1231.91 655.289,1232.9 655.875,1230.77 656.462,1231.71 657.048,1232.62 657.634,1233.56 658.221,1233.28 658.807,1228.76 659.394,1227.25 659.98,1232.32 660.566,1233.2 661.153,1232.3 661.739,1232.78 662.326,1232.28 662.912,1234.19 663.498,1233.41 664.085,1232.97 664.671,1232.54 665.258,1230.49 665.844,1230.17 666.431,1229.83 667.017,1229.43 667.603,1229.29 668.19,1228.91 668.776,1228.65 669.363,1230.9 669.949,1234.3 670.535,1229.61 671.122,1228.21 671.708,1226.56 672.295,1224.99 672.881,1224.71 673.467,1224.68 674.054,1221.93 674.64,1223.23 675.227,1221.73 675.813,1223.4 676.4,1227.19 676.986,1226.75 677.572,1229.27 678.159,1227.72 678.745,1230.3 679.332,1228.47 679.918,1228.07 680.504,1233.17 681.091,1232.65 681.677,1229.4 682.264,1229.13 682.85,1227.31 683.436,1225.69 684.023,1225.42 684.609,1225.07 685.196,1227.75 685.782,1230.15 686.369,1225.36 686.955,1224.83 687.541,1224.36 688.128,1226.85 688.714,1227.8 689.301,1224.74 689.887,1220.73 690.473,1223.66 691.06,1222.21 691.646,1223.65 692.233,1224.94 692.819,1224.88 693.405,1225 693.992,1225.92 694.578,1225.83 695.165,1224.31 695.751,1223.83 696.338,1223.74 696.924,1224.79 697.51,1221.78 698.097,1221.67 698.683,1222.88 699.27,1224 699.856,1225.46 700.442,1226.92 701.029,1222.62 701.615,1223.6 702.202,1220.71 702.788,1222.19 703.375,1220.71 703.961,1224.58 704.547,1224.53 705.134,1224.27 705.72,1226.58 706.307,1224.97 706.893,1223.4 707.479,1220.37 708.066,1221.73 708.652,1221.41 709.239,1222.74 709.825,1222.66 710.411,1225.39 710.998,1225.16 711.584,1224.92 712.171,1221.93 712.757,1224.54 713.344,1222.85 713.93,1223.08 714.516,1225.62 715.103,1227.93 715.689,1223.87 716.276,1223.77 716.862,1219.51 717.448,1218.26 718.035,1219.63 718.621,1218.24 719.208,1217.24 719.794,1220.12 720.38,1218.97 720.967,1217.79 721.553,1217.94 722.14,1220.7 722.726,1220.5 723.313,1219.4 723.899,1219.57 724.485,1221.03 725.072,1219.73 725.658,1216.12 726.245,1216.65 726.831,1216.74 727.417,1218.13 728.004,1219.45 728.59,1219.55 729.177,1219.58 729.763,1219.46 730.349,1222.19 730.936,1221.98 731.522,1223.16 732.109,1223.01 732.695,1219.31 733.282,1217.82 733.868,1216.46 734.454,1216.65 735.041,1216.84 735.627,1215.62 736.214,1217.01 736.8,1215.67 737.386,1218.72 737.973,1219.85 738.559,1219.74 739.146,1221.14 739.732,1222.09 740.318,1220.84 740.905,1220.82 741.491,1222.41 742.078,1220.86 742.664,1221.06 743.251,1221.01 743.837,1223.61 744.423,1223.56 745.01,1226.03 745.596,1226.79 746.183,1223.75 746.769,1223.59 747.355,1223.54 747.942,1220.35 748.528,1224.31 749.115,1222.87 749.701,1222.84 750.288,1223.66 750.874,1227.25 751.46,1225.25 752.047,1222.41 752.633,1223.57 753.22,1223.44 753.806,1221.85 754.392,1219.01 754.979,1220.64 755.565,1217.69 756.152,1219.1 756.738,1220.61 757.324,1220.66 757.911,1218.18 758.497,1219.66 759.084,1219.93 759.67,1221.33 760.257,1219.67 760.843,1218.32 761.429,1218.06 762.016,1216.84 762.602,1214.36 763.189,1214.72 763.775,1214.79 764.361,1217.41 764.948,1217.33 765.534,1220.15 766.121,1218.79 766.707,1221.45 767.293,1222.49 767.88,1221.05 768.466,1222.21 769.053,1218.03 769.639,1219.29 770.226,1219.42 770.812,1220.7 771.398,1218.1 771.985,1216.71 772.571,1218.31 773.158,1218.24 773.744,1219.71 774.33,1216.88 774.917,1217.07 775.503,1217.54 776.09,1216.45 776.676,1220.68 777.262,1219.52 777.849,1219.3 778.435,1220.7 779.022,1218.03 779.608,1219.38 780.195,1219.43 780.781,1217.86 781.367,1216.84 781.954,1218.29 782.54,1218.34 783.127,1219.6 783.713,1223.74 784.299,1223.39 784.886,1221.88 785.472,1220.37 786.059,1220.4 786.645,1220.22 787.232,1222.82 787.818,1224.05 788.404,1224.78 788.991,1224.35 789.577,1222.94 790.164,1220.29 790.75,1221.67 791.336,1221.52 791.923,1221.52 792.509,1220.2 793.096,1218.66 793.682,1216.09 794.268,1214.72 794.855,1215.04 795.441,1214.09 796.028,1215.94 796.614,1216.12 797.201,1215.04 797.787,1213.8 798.373,1212.61 798.96,1210.13 799.546,1209.28 800.133,1209.8 800.719,1210.35 801.305,1211.14 801.892,1211.24 802.478,1210.47 803.065,1210.97 803.651,1210.25 804.237,1210.71 804.824,1207.07 805.41,1207.41 805.997,1210.5 806.583,1211.29 807.17,1211.49 807.756,1213.15 808.342,1214.7 808.929,1216.16 809.515,1214.85 810.102,1214.97 810.688,1217.9 811.274,1217.79 811.861,1216.68 812.447,1217.99 813.034,1219.51 813.62,1219.54 814.206,1219.36 814.793,1217.87 815.379,1217.95 815.966,1218.23 816.552,1219.48 817.139,1218.1 817.725,1223.05 818.311,1221.56 818.898,1221.29 819.484,1221.4 820.071,1218.74 820.657,1218.92 821.243,1217.6 821.83,1217.72 822.416,1217.9 823.003,1219.3 823.589,1219.3 824.175,1218.02 824.762,1220.84 825.348,1223.42 825.935,1220.6 826.521,1221.55 827.108,1219.07 827.694,1220.51 828.28,1220.12 828.867,1222.61 829.453,1223.74 830.04,1219.48 830.626,1218.05 831.212,1219.14 831.799,1217.8 832.385,1217.69 832.972,1218.87 833.558,1220.08 834.145,1218.76 834.731,1216 835.317,1213.48 835.904,1212.39 836.49,1211.47 837.077,1211.77 837.663,1213.52 838.249,1218.79 838.836,1218.75 839.422,1218.56 840.009,1217.19 840.595,1213.14 841.181,1213.46 841.768,1212.46 842.354,1211.21 842.941,1213.01 843.527,1215.7 844.114,1215.8 844.7,1211.98 845.286,1213.68 845.873,1213.88 846.459,1215.35 847.046,1215.25 847.632,1214.16 848.218,1213.1 848.805,1213.4 849.391,1216.41 849.978,1215.14 850.564,1215.34 851.15,1216.73 851.737,1214.18 852.323,1211.71 852.91,1214.82 853.496,1215.01 854.083,1215.04 854.669,1215.13 855.255,1215.3 855.842,1215.37 856.428,1215.68 857.015,1215.77 857.601,1217.38 858.187,1216.15 858.774,1214.97 859.36,1213.79 859.947,1216.36 860.533,1218.04 861.119,1217.92 861.706,1219.4 862.292,1218 862.879,1212.86 863.465,1215.97 864.052,1218.72 864.638,1219.96 865.224,1222.69 865.811,1221.02 866.397,1216.8 866.984,1214.06 867.57,1215.57 868.156,1213.11 868.743,1213.56 869.329,1213.73 869.916,1209.78 870.502,1212.86 871.089,1215.93 871.675,1214.37 872.261,1215.88 872.848,1217.14 873.434,1215.82 874.021,1216.16 874.607,1218.79 875.193,1219.91 875.78,1219.78 876.366,1218.41 876.953,1218.51 877.539,1219.82 878.125,1222.33 878.712,1224.48 879.298,1225.4 879.885,1226.44 880.471,1227.15 881.058,1224.05 881.644,1225.06 882.23,1224.71 882.817,1222.86 883.403,1222.5 883.99,1222.41 884.576,1220.51 885.162,1221.79 885.749,1220.32 886.335,1217.54 886.922,1213.45 887.508,1212.39 888.094,1215.32 888.681,1218.01 889.267,1218.05 889.854,1219.24 890.44,1219.15 891.027,1218.92 891.613,1218.91 892.199,1217.36 892.786,1221.16 893.372,1220.59 893.959,1219.08 894.545,1217.83 895.131,1219.21 895.718,1218.99 896.304,1217.42 896.891,1217.43 897.477,1217.42 898.063,1214.69 898.65,1216.34 899.236,1216.34 899.823,1215.16 900.409,1214.18 900.996,1214.48 901.582,1216.23 902.168,1217.42 902.755,1218.59 903.341,1218.4 903.928,1216.91 904.514,1215.34 905.1,1215.33 905.687,1215.61 906.273,1215.8 906.86,1215.65 907.446,1214.57 908.032,1215.08 908.619,1214 909.205,1216.88 909.792,1217.01 910.378,1218.33 910.965,1217.15 911.551,1218.39 912.137,1220.64 912.724,1220 913.31,1221.1 913.897,1222.2 914.483,1222.11 915.069,1220.44 915.656,1221.6 916.242,1219.91 916.829,1220.94 917.415,1220.64 918.002,1219.31 918.588,1219.11 919.174,1217.54 919.761,1217.24 920.347,1217.36 920.934,1216.04 921.52,1216.09 922.106,1218.6 922.693,1218.77 923.279,1218.57 923.866,1217.02 924.452,1216.92 925.038,1215.51 925.625,1211.58 926.211,1211.96 926.798,1212.17 927.384,1211.08 927.971,1211.47 928.557,1211.65 929.143,1212.18 929.73,1212.31 930.316,1212.57 930.903,1211.52 931.489,1211.89 932.075,1212.37 932.662,1213.91 933.248,1212.84 933.835,1212.88 934.421,1214.35 935.007,1214.26 935.594,1215.58 936.18,1212.97 936.767,1215.86 937.353,1215.81 937.94,1215.9 938.526,1213.2 939.112,1216.09 939.699,1216.14 940.285,1217.39 940.872,1218.68 941.458,1218.6 942.044,1217.16 942.631,1218.22 943.217,1218 943.804,1215.36 944.39,1215.41 944.976,1214.13 945.563,1215.67 946.149,1215.81 946.736,1215.98 947.322,1210.96 947.909,1211.2 948.495,1210.04 949.081,1210.28 949.668,1210.71 950.254,1212.36 950.841,1214 951.427,1215.57 952.013,1215.73 952.6,1217.11 953.186,1221.05 953.773,1222.25 954.359,1224.24 954.945,1223.74 955.532,1224.63 956.118,1224.04 956.705,1223.64 957.291,1223.4 957.878,1225.69 958.464,1225.38 959.05,1224.96 959.637,1223.19 960.223,1220.36 960.81,1221.73 961.396,1220.02 961.982,1222.5 962.569,1220.72 963.155,1219.26 963.742,1217.83 964.328,1215.03 964.915,1214.04 965.501,1217.95 966.087,1218.76 966.674,1215.79 967.26,1211.88 967.847,1213.86 968.433,1214.22 969.019,1215.52 969.606,1212.93 970.192,1214.56 970.779,1217.37 971.365,1216.27 971.951,1215.04 972.538,1215.21 973.124,1216.78 973.711,1220.72 974.297,1219.43 974.884,1217.96 975.47,1217.9 976.056,1219.26 976.643,1220.45 977.229,1219.1 977.816,1220.28 978.402,1218.66 978.988,1219.54 979.575,1219.54 980.161,1219.43 980.748,1219.38 981.334,1219.21 981.92,1217.86 982.507,1216.45 983.093,1218.03 983.68,1217.92 984.266,1218.99 984.853,1216.09 985.439,1216.09 986.025,1213.43 986.612,1212.44 987.198,1212.59 987.785,1211.23 988.371,1215.84 988.957,1213.28 989.544,1218.59 990.13,1220.13 990.717,1221.22 991.303,1220.85 991.889,1219.3 992.476,1219.05 993.062,1220.06 993.649,1219.8 994.235,1219.77 994.822,1220.87 995.408,1220.57 995.994,1220.67 996.581,1219.31 997.167,1218.97 997.754,1218.76 998.34,1219.9 998.926,1221.08 999.513,1222.32 1000.1,1221.96 1000.69,1221.8 1001.27,1221.51 1001.86,1217.61 1002.44,1214.88 1003.03,1211.16 1003.62,1210.04 1004.2,1215.71 1004.79,1214.48 1005.38,1213.08 1005.96,1213.32 1006.55,1213.02 1007.14,1213.2 1007.72,1212.29 1008.31,1212.23 1008.9,1212.25 1009.48,1212.41 1010.07,1211.6 1010.65,1211.76 1011.24,1213.3 1011.83,1213.65 1012.41,1215.2 1013,1214.89 1013.59,1212.31 1014.17,1208.36 1014.76,1210.16 1015.35,1210.56 1015.93,1214.92 1016.52,1216.6 1017.11,1216.49 1017.69,1215.31 1018.28,1216.65 1018.86,1216.51 1019.45,1217.77 1020.04,1217.65 1020.62,1221.56 1021.21,1222.58 1021.8,1220.86 1022.38,1220.65 1022.97,1224.41 1023.56,1224.18 1024.14,1226.75 1024.73,1223.47 1025.32,1223.3 1025.9,1222.93 1026.49,1218.93 1027.07,1217.28 1027.66,1217.23 1028.25,1218.43 1028.83,1219.84 1029.42,1219.9 1030.01,1220.9 1030.59,1219.26 1031.18,1217.77 1031.77,1217.75 1032.35,1216.27 1032.94,1217.45 1033.52,1214.79 1034.11,1214.88 1034.7,1214.78 1035.28,1216.18 1035.87,1218.66 1036.46,1215.94 1037.04,1216.01 1037.63,1218.41 1038.22,1218.34 1038.8,1217.98 1039.39,1218.05 1039.98,1218.01 1040.56,1216.58 1041.15,1216.42 1041.73,1221.65 1042.32,1223.96 1042.91,1223.87 1043.49,1224.75 1044.08,1223.05 1044.67,1222.63 1045.25,1219.47 1045.84,1221.91 1046.43,1219.09 1047.01,1215.79 1047.6,1214.5 1048.19,1216.94 1048.77,1216.89 1049.36,1216.96 1049.94,1219.64 1050.53,1218.42 1051.12,1220.93 1051.7,1220.68 1052.29,1221.52 1052.88,1221.25 1053.46,1220.85 1054.05,1216.83 1054.64,1217.8 1055.22,1214.8 1055.81,1216.19 1056.39,1221.29 1056.98,1220.86 1057.57,1218.14 1058.15,1218.26 1058.74,1216.87 1059.33,1216.79 1059.91,1218.13 1060.5,1218.08 1061.09,1215.48 1061.67,1215.35 1062.26,1217.86 1062.85,1215.09 1063.43,1212.51 1064.02,1211.38 1064.6,1211.74 1065.19,1211.64 1065.78,1210.63 1066.36,1208.1 1066.95,1208.52 1067.54,1207.78 1068.12,1206.73 1068.71,1207.42 1069.3,1207.81 1069.88,1209.56 1070.47,1209.86 1071.06,1210.27 1071.64,1210.72 1072.23,1210.98 1072.81,1209.76 1073.4,1209.69 1073.99,1211.28 1074.57,1210.24 1075.16,1214.61 1075.75,1214.58 1076.33,1213.52 1076.92,1217.61 1077.51,1217.46 1078.09,1215.98 1078.68,1215.95 1079.26,1214.42 1079.85,1218.48 1080.44,1219.49 1081.02,1216.79 1081.61,1217.64 1082.2,1219.9 1082.78,1219.81 1083.37,1222.11 1083.96,1220.56 1084.54,1219.01 1085.13,1218.7 1085.72,1217.14 1086.3,1216 1086.89,1215.48 1087.47,1215.6 1088.06,1215.52 1088.65,1216.77 1089.23,1213.92 1089.82,1215.19 1090.41,1214.03 1090.99,1214.26 1091.58,1214.38 1092.17,1216 1092.75,1215.93 1093.34,1214.86 1093.93,1215.03 1094.51,1216.45 1095.1,1218.05 1095.68,1216.77 1096.27,1217.99 1096.86,1219.18 1097.44,1214.91 1098.03,1213.49 1098.62,1214.96 1099.2,1216.52 1099.79,1216.68 1100.38,1218.19 1100.96,1216.76 1101.55,1215.14 1102.14,1213.84 1102.72,1212.78 1103.31,1213.13 1103.89,1211.92 1104.48,1210.98 1105.07,1211.27 1105.65,1214.26 1106.24,1213.12 1106.83,1213.11 1107.41,1210.58 1108,1208.28 1108.59,1210.19 1109.17,1212.08 1109.76,1214.72 1110.34,1216.13 1110.93,1215.11 1111.52,1213.79 1112.1,1214.12 1112.69,1215.42 1113.28,1216.85 1113.86,1215.54 1114.45,1215.8 1115.04,1217.01 1115.62,1215.58 1116.21,1216.67 1116.8,1216.81 1117.38,1215.2 1117.97,1212.54 1118.55,1215.46 1119.14,1216.99 1119.73,1218.11 1120.31,1222.98 1120.9,1222.73 1121.49,1222.38 1122.07,1223.25 1122.66,1224.28 1123.25,1226.33 1123.83,1224.38 1124.42,1224.08 1125.01,1224.95 1125.59,1224.47 1126.18,1226.39 1126.76,1224.58 1127.35,1222.87 1127.94,1221.05 1128.52,1223.33 1129.11,1223.05 1129.7,1221.28 1130.28,1218.49 1130.87,1218.24 1131.46,1218.11 1132.04,1219.32 1132.63,1220.18 1133.21,1221.05 1133.8,1219.49 1134.39,1220.56 1134.97,1223.06 1135.56,1222.78 1136.15,1222.5 1136.73,1220.78 1137.32,1219.15 1137.91,1220.45 1138.49,1220.28 1139.08,1221.29 1139.67,1221.16 1140.25,1222.19 1140.84,1223 1141.42,1221.31 1142.01,1214.32 1142.6,1211.91 1143.18,1218.84 1143.77,1218.7 1144.36,1217.46 1144.94,1217.08 1145.53,1217.05 1146.12,1216.99 1146.7,1215.92 1147.29,1217.22 1147.88,1221.06 1148.46,1223.12 1149.05,1222.75 1149.63,1221.18 1150.22,1222.22 1150.81,1221.89 1151.39,1222.69 1151.98,1222.09 1152.57,1220.43 1153.15,1218.47 1153.74,1214.19 1154.33,1214.33 1154.91,1214.11 1155.5,1216.4 1156.09,1216.46 1156.67,1215.29 1157.26,1219.02 1157.84,1218.79 1158.43,1218.52 1159.02,1216.89 1159.6,1216.78 1160.19,1215.17 1160.78,1213.86 1161.36,1214.85 1161.95,1212.11 1162.54,1214.97 1163.12,1212.58 1163.71,1210.06 1164.29,1206.41 1164.88,1205.34 1165.47,1203.12 1166.05,1202.51 1166.64,1204.63 1167.23,1205.24 1167.81,1204.23 1168.4,1204.83 1168.99,1206.58 1169.57,1204.76 1170.16,1204.22 1170.75,1204.86 1171.33,1207.02 1171.92,1206.13 1172.5,1206.5 1173.09,1205.54 1173.68,1208.74 1174.26,1211.96 1174.85,1211.14 1175.44,1211.18 1176.02,1210.01 1176.61,1213.3 1177.2,1213.19 1177.78,1215.95 1178.37,1213.23 1178.96,1213.34 1179.54,1212.1 1180.13,1212.14 1180.71,1212.41 1181.3,1211.12 1181.89,1211.54 1182.47,1213.31 1183.06,1214.59 1183.65,1213.19 1184.23,1214.79 1184.82,1217.56 1185.41,1217.66 1185.99,1218.82 1186.58,1218.78 1187.16,1217.58 1187.75,1218.75 1188.34,1217.53 1188.92,1217.42 1189.51,1217.42 1190.1,1217.53 1190.68,1216.16 1191.27,1216.45 1191.86,1216.55 1192.44,1215.31 1193.03,1215.46 1193.62,1213.19 1194.2,1211.87 1194.79,1215.79 1195.37,1215.87 1195.96,1217.14 1196.55,1215.81 1197.13,1215.98 1197.72,1214.83 1198.31,1216.12 1198.89,1213.48 1199.48,1212.17 1200.07,1212.34 1200.65,1214.92 1201.24,1213.38 1201.83,1210.61 1202.41,1209.71 1203,1210.09 1203.58,1210.29 1204.17,1210.69 1204.76,1213.75 1205.34,1212.66 1205.93,1211.41 1206.52,1207.63 1207.1,1206.74 1207.69,1207.31 1208.28,1205.52 1208.86,1210.17 1209.45,1210.59 1210.03,1210.93 1210.62,1209.97 1211.21,1210.06 1211.79,1214.34 1212.38,1215.97 1212.97,1213.43 1213.55,1212.35 1214.14,1211.26 1214.73,1212.69 1215.31,1213.79 1215.9,1212.4 1216.49,1210.01 1217.07,1210.26 1217.66,1211.94 1218.24,1212.18 1218.83,1213.43 1219.42,1211.09 1220,1208.89 1220.59,1212.17 1221.18,1211.05 1221.76,1212.45 1222.35,1213.76 1222.94,1211.51 1223.52,1211.75 1224.11,1213.58 1224.7,1213.69 1225.28,1216.28 1225.87,1213.64 1226.45,1214.86 1227.04,1214.89 1227.63,1215.23 1228.21,1215.43 1228.8,1214.39 1229.39,1215.84 1229.97,1215.5 1230.56,1215.41 1231.15,1213.92 1231.73,1212.69 1232.32,1212.79 1232.91,1214.07 1233.49,1215.65 1234.08,1215.82 1234.66,1215.7 1235.25,1217.09 1235.84,1217.21 1236.42,1215.63 1237.01,1215.8 1237.6,1216.81 1238.18,1213.99 1238.77,1213.95 1239.36,1217 1239.94,1215.68 1240.53,1217.16 1241.11,1217.02 1241.7,1216.9 1242.29,1216.85 1242.87,1216.62 1243.46,1212.85 1244.05,1211.59 1244.63,1211.91 1245.22,1210.69 1245.81,1214.95 1246.39,1214.97 1246.98,1209.5 1247.57,1212.29 1248.15,1212.35 1248.74,1213.64 1249.32,1213.59 1249.91,1212.35 1250.5,1215.14 1251.08,1220.07 1251.67,1218.66 1252.26,1219.62 1252.84,1218.39 1253.43,1216.93 1254.02,1217.04 1254.6,1218.36 1255.19,1218.19 1255.78,1216.56 1256.36,1214.95 1256.95,1213.73 1257.53,1215.15 1258.12,1213.93 1258.71,1214.25 1259.29,1214.47 1259.88,1213.32 1260.47,1213.24 1261.05,1214.92 1261.64,1213.8 1262.23,1216.52 1262.81,1216.42 1263.4,1213.9 1263.98,1215.31 1264.57,1215.54 1265.16,1219.79 1265.74,1218.36 1266.33,1219.58 1266.92,1223.35 1267.5,1221.74 1268.09,1218.79 1268.68,1219.77 1269.26,1219.26 1269.85,1219.98 1270.44,1221.11 1271.02,1219.62 1271.61,1221.9 1272.19,1224.16 1272.78,1224.83 1273.37,1225.71 1273.95,1221.37 1274.54,1223.63 1275.13,1224.37 1275.71,1224.14 1276.3,1220.94 1276.89,1218.86 1277.47,1217.44 1278.06,1219.95 1278.65,1219.66 1279.23,1216.84 1279.82,1216.92 1280.4,1218.02 1280.99,1217.94 1281.58,1217.83 1282.16,1219.07 1282.75,1219.21 1283.34,1217.72 1283.92,1220.42 1284.51,1222.91 1285.1,1221.1 1285.68,1219.41 1286.27,1220.35 1286.86,1220.11 1287.44,1219.82 1288.03,1218.29 1288.61,1217.09 1289.2,1217.04 1289.79,1215.74 1290.37,1214.42 1290.96,1213.21 1291.55,1213.32 1292.13,1214.73 1292.72,1210.71 1293.31,1212.35 1293.89,1214.03 1294.48,1214.51 1295.06,1215.73 1295.65,1217.17 1296.24,1215.73 1296.82,1216.59 1297.41,1215.23 1298,1214.87 1298.58,1216.18 1299.17,1216.29 1299.76,1216 1300.34,1213.46 1300.93,1213.77 1301.52,1212.47 1302.1,1212.77 1302.69,1213.15 1303.27,1213.19 1303.86,1213.32 1304.45,1216.03 1305.03,1215.88 1305.62,1215.86 1306.21,1216.04 1306.79,1215.98 1307.38,1213.61 1307.97,1213.55 1308.55,1213.7 1309.14,1212.33 1309.73,1213.85 1310.31,1211.33 1310.9,1211.58 1311.48,1211.8 1312.07,1213.46 1312.66,1213.38 1313.24,1215.85 1313.83,1213.1 1314.42,1218.61 1315,1219.77 1315.59,1219.56 1316.18,1220.99 1316.76,1215.2 1317.35,1215.45 1317.93,1211.26 1318.52,1215.48 1319.11,1216.82 1319.69,1215.31 1320.28,1216.55 1320.87,1220.52 1321.45,1223.07 1322.04,1223.69 1322.63,1221.98 1323.21,1223.01 1323.8,1222.51 1324.39,1220.89 1324.97,1222 1325.56,1221.56 1326.14,1221.34 1326.73,1221.06 1327.32,1220.79 1327.9,1220.46 1328.49,1224.23 1329.08,1222.55 1329.66,1223.34 1330.25,1223.14 1330.84,1225.23 1331.42,1226 1332.01,1224.23 1332.6,1221.12 1333.18,1219.59 1333.77,1218.02 1334.35,1218.08 1334.94,1217.94 1335.53,1219.26 1336.11,1221.78 1336.7,1217.56 1337.29,1216.17 1337.87,1213.5 1338.46,1215.06 1339.05,1213.64 1339.63,1212.42 1340.22,1211.23 1340.8,1211.32 1341.39,1211.66 1341.98,1206.77 1342.56,1205.88 1343.15,1206.35 1343.74,1204.02 1344.32,1203.43 1344.91,1204 1345.5,1208.7 1346.08,1207.7 1346.67,1208.07 1347.26,1209.94 1347.84,1208.96 1348.43,1210.5 1349.01,1209.68 1349.6,1212.82 1350.19,1212.95 1350.77,1213.07 1351.36,1214.04 1351.95,1214.01 1352.53,1212.77 1353.12,1215.51 1353.71,1213.18 1354.29,1214.62 1354.88,1213.52 1355.47,1213.82 1356.05,1215.2 1356.64,1213.64 1357.22,1219.2 1357.81,1218.95 1358.4,1218.8 1358.98,1218.55 1359.57,1216.91 1360.16,1219.65 1360.74,1218.59 1361.33,1218.5 1361.92,1217.07 1362.5,1217.11 1363.09,1215.65 1363.68,1215.68 1364.26,1216.76 1364.85,1217.94 1365.43,1217.81 1366.02,1215.11 1366.61,1215.15 1367.19,1212.59 1367.78,1215.44 1368.37,1215.6 1368.95,1217.23 1369.54,1216.79 1370.13,1218.12 1370.71,1219.26 1371.3,1216.24 1371.88,1217.24 1372.47,1218.43 1373.06,1219.54 1373.64,1218 1374.23,1217.84 1374.82,1218.88 1375.4,1220.18 1375.99,1218.81 1376.58,1218.48 1377.16,1215.85 1377.75,1217 1378.34,1218.33 1378.92,1217.04 1379.51,1218.27 1380.09,1216.88 1380.68,1215.43 1381.27,1215.41 1381.85,1215.19 1382.44,1218.99 1383.03,1221.47 1383.61,1221.09 1384.2,1220.67 1384.79,1217.83 1385.37,1216.38 1385.96,1217.45 1386.55,1216.26 1387.13,1217.59 1387.72,1217.34 1388.3,1217.24 1388.89,1217.27 1389.48,1215.9 1390.06,1215.85 1390.65,1216.79 1391.24,1216.65 1391.82,1216.82 1392.41,1215.34 1393,1216.21 1393.58,1216.06 1394.17,1216.27 1394.75,1214.85 1395.34,1215.16 1395.93,1219.03 1396.51,1213.69 1397.1,1216.16 1397.69,1217.53 1398.27,1215.85 1398.86,1215.69 1399.45,1212.78 1400.03,1214.31 1400.62,1217.28 1401.21,1218.79 1401.79,1222.83 1402.38,1222.72 1402.96,1220.94 1403.55,1219.42 1404.14,1223.16 1404.72,1224.31 1405.31,1222.87 1405.9,1222.64 1406.48,1223.42 1407.07,1223 1407.66,1221.18 1408.24,1220.84 1408.83,1222.09 1409.42,1221.88 1410,1220.13 1410.59,1219.56 1411.17,1220.82 1411.76,1220.51 1412.35,1219.19 1412.93,1218.87 1413.52,1216.09 1414.11,1214.98 1414.69,1213.56 1415.28,1212.47 1415.87,1211.16 1416.45,1208.83 1417.04,1209.17 1417.63,1208.16 1418.21,1210.04 1418.8,1207.77 1419.38,1208.31 1419.97,1207.52 1420.56,1207.97 1421.14,1206.97 1421.73,1208.68 1422.32,1210.41 1422.9,1210.84 1423.49,1212.69 1424.08,1215.43 1424.66,1218.01 1425.25,1217.86 1425.83,1217.67 1426.42,1216.58 1427.01,1219.03 1427.59,1216.19 1428.18,1217.43 1428.77,1220.18 1429.35,1218.72 1429.94,1219.74 1430.53,1219.57 1431.11,1215.02 1431.7,1213.85 1432.29,1215.42 1432.87,1214.05 1433.46,1215.36 1434.04,1215.46 1434.63,1215.48 1435.22,1216.85 1435.8,1215.4 1436.39,1215.39 1436.98,1216.7 1437.56,1219.14 1438.15,1218.91 1438.74,1218.55 1439.32,1218.39 1439.91,1217.13 1440.5,1215.82 1441.08,1215.83 1441.67,1217.07 1442.25,1220.81 1442.84,1219.56 1443.43,1222.23 1444.01,1220.76 1444.6,1221.67 1445.19,1222.61 1445.77,1222.15 1446.36,1220.31 1446.95,1220.45 1447.53,1221.56 1448.12,1217.26 1448.7,1218.32 1449.29,1219.5 1449.88,1219.41 1450.46,1219.19 1451.05,1217.49 1451.64,1213.46 1452.22,1212.37 1452.81,1212.38 1453.4,1218.03 1453.98,1217.66 1454.57,1217.53 1455.16,1218.87 1455.74,1215.05 1456.33,1213.72 1456.91,1212.57 1457.5,1214.05 1458.09,1215.08 1458.67,1216.53 1459.26,1216.97 1459.85,1215.87 1460.43,1212.84 1461.02,1210.06 1461.61,1212.67 1462.19,1211.54 1462.78,1214.38 1463.37,1214.36 1463.95,1213.24 1464.54,1213.37 1465.12,1213.47 1465.71,1214.83 1466.3,1216.54 1466.88,1216.58 1467.47,1216.43 1468.06,1215.32 1468.64,1214.1 1469.23,1211.61 1469.82,1210.62 1470.4,1208.3 1470.99,1211.54 1471.57,1210.38 1472.16,1210.65 1472.75,1213.66 1473.33,1213.55 1473.92,1213.76 1474.51,1212.56 1475.09,1212.82 1475.68,1213.05 1476.27,1214.16 1476.85,1210.57 1477.44,1211.08 1478.03,1211.23 1478.61,1211.61 1479.2,1209.15 1479.78,1209.77 1480.37,1211.37 1480.96,1214.39 1481.54,1214.52 1482.13,1214.62 1482.72,1213.28 1483.3,1213.39 1483.89,1213.52 1484.48,1213.76 1485.06,1211.4 1485.65,1212.91 1486.24,1211.15 1486.82,1212.72 1487.41,1212.61 1487.99,1211.41 1488.58,1210.46 1489.17,1210.77 1489.75,1212.26 1490.34,1211.18 1490.93,1210.03 1491.51,1211.77 1492.1,1210.78 1492.69,1209.7 1493.27,1207.31 1493.86,1207.58 1494.45,1207.96 1495.03,1205.65 1495.62,1206.47 1496.2,1208.43 1496.79,1208.95 1497.38,1210.84 1497.96,1209.75 1498.55,1211.43 1499.14,1213.09 1499.72,1209.36 1500.31,1212.46 1500.9,1212.75 1501.48,1214.37 1502.07,1215.76 1502.65,1216.11 1503.24,1216.12 1503.83,1216.16 1504.41,1217.54 1505,1214.91 1505.59,1216.46 1506.17,1216.48 1506.76,1215.14 1507.35,1213.51 1507.93,1216.42 1508.52,1215.02 1509.11,1217.65 1509.69,1222.86 1510.28,1224 1510.86,1222.16 1511.45,1222.07 1512.04,1216.81 1512.62,1216.78 1513.21,1220.85 1513.8,1221.64 1514.38,1222.44 1514.97,1223.44 1515.56,1224.05 1516.14,1223.29 1516.73,1224.29 1517.32,1224.98 1517.9,1223.04 1518.49,1221.32 1519.07,1219.4 1519.66,1219.23 1520.25,1219.23 1520.83,1217.64 1521.42,1219.07 1522.01,1219.29 1522.59,1219.21 1523.18,1218.92 1523.77,1218.83 1524.35,1217.3 1524.94,1214.65 1525.52,1216.03 1526.11,1214.54 1526.7,1214.74 1527.28,1214.67 1527.87,1217.27 1528.46,1221.23 1529.04,1219.62 1529.63,1216.73 1530.22,1214.17 1530.8,1214.42 1531.39,1214.37 1531.98,1215.89 1532.56,1216.03 1533.15,1216.17 1533.73,1213.47 1534.32,1212.21 1534.91,1215.2 1535.49,1212.51 1536.08,1210.07 1536.67,1210.64 1537.25,1209.87 1537.84,1210.02 1538.43,1209.08 1539.01,1210.84 1539.6,1208.89 1540.19,1210.44 1540.77,1213.3 1541.36,1218.55 1541.94,1218.26 1542.53,1219.72 1543.12,1216.87 1543.7,1218.3 1544.29,1218.17 1544.88,1215.26 1545.46,1216.38 1546.05,1213.7 1546.64,1214.01 1547.22,1215.74 1547.81,1215.84 1548.4,1215.95 1548.98,1217.17 1549.57,1215.8 1550.15,1215.92 1550.74,1215.93 1551.33,1214.41 1551.91,1211.58 1552.5,1207.76 1553.09,1209.73 1553.67,1211.21 1554.26,1211.58 1554.85,1212.99 1555.43,1214.65 1556.02,1214.75 1556.6,1217.51 1557.19,1218.42 1557.78,1218.19 1558.36,1220.22 1558.95,1218.62 1559.54,1216.92 1560.12,1219.47 1560.71,1220.78 1561.3,1220.48 1561.88,1222.89 1562.47,1219.94 1563.06,1218.5 1563.64,1222.42 1564.23,1224.74 1564.81,1225.54 1565.4,1221.07 1565.99,1219.29 1566.57,1220.42 1567.16,1221.54 1567.75,1221.01 1568.33,1219.66 1568.92,1219.59 1569.51,1219.64 1570.09,1219.19 1570.68,1219.05 1571.27,1218.86 1571.85,1217.35 1572.44,1218.83 1573.02,1218.63 1573.61,1218.6 1574.2,1217.27 1574.78,1217.02 1575.37,1217.18 1575.96,1217.05 1576.54,1218.3 1577.13,1220.45 1577.72,1221.54 1578.3,1221.53 1578.89,1221.15 1579.47,1224.81 1580.06,1224.35 1580.65,1223.71 1581.23,1223.37 1581.82,1223.21 1582.41,1222.78 1582.99,1219.75 1583.58,1222.11 1584.17,1223 1584.75,1223.71 1585.34,1223.36 1585.93,1221.64 1586.51,1221.47 1587.1,1221.09 1587.68,1219.54 1588.27,1219.42 1588.86,1216.46 1589.44,1216.66 1590.03,1215.13 1590.62,1212.77 1591.2,1214.49 1591.79,1214.57 1592.38,1213.14 1592.96,1213.32 1593.55,1213.6 1594.14,1216.61 1594.72,1215.39 1595.31,1218.05 1595.89,1218.16 1596.48,1219.18 1597.07,1220.67 1597.65,1223.33 1598.24,1220.05 1598.83,1218.53 1599.41,1217.18 1600,1218.3 1600.59,1211.73 1601.17,1211.93 1601.76,1213.29 1602.34,1214.99 1602.93,1215.06 1603.52,1215.11 1604.1,1215.18 1604.69,1215.24 1605.28,1215.09 1605.86,1216.17 1606.45,1214.9 1607.04,1212.13 1607.62,1212.13 1608.21,1211.05 1608.8,1207.27 1609.38,1206.37 1609.97,1207.06 1610.55,1204.95 1611.14,1203.01 1611.73,1200.79 1612.31,1201.49 1612.9,1202.37 1613.49,1203.08 1614.07,1203.79 1614.66,1205.64 1615.25,1204.94 1615.83,1205.63 1616.42,1207.64 1617.01,1205.52 1617.59,1205.97 1618.18,1207.99 1618.76,1209.81 1619.35,1212.58 1619.94,1212.39 1620.52,1213.73 1621.11,1213.7 1621.7,1213.82 1622.28,1212.63 1622.87,1214.04 1623.46,1218.11 1624.04,1217.66 1624.63,1217.44 1625.22,1217.27 1625.8,1213.23 1626.39,1214.64 1626.97,1214.7 1627.56,1216.12 1628.15,1215.82 1628.73,1217.1 1629.32,1216.99 1629.91,1218.24 1630.49,1220.76 1631.08,1224.34 1631.67,1224.1 1632.25,1221.21 1632.84,1223.47 1633.42,1220.75 1634.01,1220.66 1634.6,1220.53 1635.18,1218.85 1635.77,1217.41 1636.36,1215.82 1636.94,1214.69 1637.53,1214.56 1638.12,1213.48 1638.7,1215 1639.29,1213.8 1639.88,1215.43 1640.46,1215.38 1641.05,1218.23 1641.63,1219.61 1642.22,1215.52 1642.81,1216.9 1643.39,1218.09 1643.98,1216.84 1644.57,1216.79 1645.15,1216.84 1645.74,1215.53 1646.33,1211.78 1646.91,1213.24 1647.5,1213.35 1648.09,1213.45 1648.67,1213.35 1649.26,1213.53 1649.84,1212.44 1650.43,1214.06 1651.02,1212.73 1651.6,1214.05 1652.19,1211.47 1652.78,1213.06 1653.36,1213.2 1653.95,1211.7 1654.54,1212.07 1655.12,1210.96 1655.71,1212.5 1656.29,1212.46 1656.88,1212.7 1657.47,1215.47 1658.05,1215.59 1658.64,1214.31 1659.23,1214.35 1659.81,1211.93 1660.4,1213.57 1660.99,1213.94 1661.57,1213.71 1662.16,1213.95 1662.75,1214.41 1663.33,1216.07 1663.92,1217.16 1664.5,1217.12 1665.09,1218.14 1665.68,1215.3 1666.26,1215.42 1666.85,1217 1667.44,1215.33 1668.02,1214.02 1668.61,1216.69 1669.2,1215.23 1669.78,1218.21 1670.37,1215.25 1670.96,1217.83 1671.54,1218.97 1672.13,1219.04 1672.71,1217.51 1673.3,1219.14 1673.89,1220.51 1674.47,1216.31 1675.06,1217.23 1675.65,1217.41 1676.23,1218.62 1676.82,1219.76 1677.41,1217.95 1677.99,1216.57 1678.58,1216.39 1679.17,1217.55 1679.75,1221.53 1680.34,1221.13 1680.92,1224.43 1681.51,1222.53 1682.1,1223.3 1682.68,1222.72 1683.27,1226.1 1683.86,1225.46 1684.44,1226.18 1685.03,1223.23 1685.62,1221.62 1686.2,1218.84 1686.79,1216.01 1687.37,1213.32 1687.96,1212.42 1688.55,1212.59 1689.13,1212.69 1689.72,1211.54 1690.31,1214.46 1690.89,1214.4 1691.48,1214.28 1692.07,1213.15 1692.65,1209.44 1693.24,1209.71 1693.83,1209.91 1694.41,1208.69 1695,1206.02 1695.58,1203.81 1696.17,1204.49 1696.76,1205.08 1697.34,1205.56 1697.93,1211.35 1698.52,1211.39 1699.1,1211.75 1699.69,1213.15 1700.28,1214.66 1700.86,1216.23 1701.45,1216.43 1702.04,1215.16 1702.62,1216.71 1703.21,1217.72 1703.79,1216.28 1704.38,1214.71 1704.97,1216.25 1705.55,1214.9 1706.14,1213.69 1706.73,1213.87 1707.31,1211.38 1707.9,1211.41 1708.49,1212.67 1709.07,1211.4 1709.66,1211.54 1710.24,1213.07 1710.83,1215.73 1711.42,1219.78 1712,1219.4 1712.59,1219.24 1713.18,1218.9 1713.76,1218.69 1714.35,1218.75 1714.94,1219.9 1715.52,1222.52 1716.11,1220.95 1716.7,1219.35 1717.28,1219.46 1717.87,1216.69 1718.45,1217.69 1719.04,1217.67 1719.63,1218.68 1720.21,1219.84 1720.8,1218.19 1721.39,1218.04 1721.97,1219.54 1722.56,1218.11 1723.15,1217.84 1723.73,1215.16 1724.32,1215.52 1724.91,1213 1725.49,1210.34 1726.08,1209.59 1726.66,1212.37 1727.25,1212.46 1727.84,1212.79 1728.42,1210.26 1729.01,1210.56 1729.6,1210.83 1730.18,1211 1730.77,1212.65 1731.36,1214.11 1731.94,1212.9 1732.53,1214.33 1733.11,1216.98 1733.7,1218.43 1734.29,1215.86 1734.87,1217.2 1735.46,1217.17 1736.05,1217.47 1736.63,1217.26 1737.22,1217.25 1737.81,1215.77 1738.39,1214.25 1738.98,1216.66 1739.57,1216.63 1740.15,1216.82 1740.74,1218.26 1741.32,1217.1 1741.91,1217.06 1742.5,1216.95 1743.08,1219.59 1743.67,1219.67 1744.26,1218.07 1744.84,1217.87 1745.43,1213.77 1746.02,1216.46 1746.6,1216.39 1747.19,1216.4 1747.78,1215.1 1748.36,1216.53 1748.95,1216.52 1749.53,1216.24 1750.12,1218.72 1750.71,1218.6 1751.29,1214.49 1751.88,1215.78 1752.47,1218.13 1753.05,1220.43 1753.64,1219.79 1754.23,1218.21 1754.81,1213.92 1755.4,1214.1 1755.99,1213.97 1756.57,1214.05 1757.16,1214.28 1757.74,1214.49 1758.33,1215.89 1758.92,1215.73 1759.5,1211.7 1760.09,1211.79 1760.68,1213.29 1761.26,1212.1 1761.85,1212.12 1762.44,1213.52 1763.02,1210.81 1763.61,1213.58 1764.19,1215.08 1764.78,1215.05 1765.37,1216.29 1765.95,1216.12 1766.54,1220.01 1767.13,1219.63 1767.71,1216.91 1768.3,1215.41 1768.89,1215.54 1769.47,1215.55 1770.06,1215.39 1770.65,1216.66 1771.23,1216.72 1771.82,1216.65 1772.4,1217.84 1772.99,1216.16 1773.58,1214.64 1774.16,1217.38 1774.75,1216.95 1775.34,1216.85 1775.92,1215.51 1776.51,1215.37 1777.1,1213.78 1777.68,1215.14 1778.27,1217.46 1778.86,1216.08 1779.44,1216.22 1780.03,1217.54 1780.61,1218.8 1781.2,1219.86 1781.79,1218.18 1782.37,1215.1 1782.96,1217.94 1783.55,1217.74 1784.13,1217.58 1784.72,1217.71 1785.31,1217.9 1785.89,1218.15 1786.48,1219.41 1787.06,1220.34 1787.65,1219.86 1788.24,1220.96 1788.82,1220.64 1789.41,1218.83 1790,1218.6 1790.58,1218.47 1791.17,1218.3 1791.76,1218.17 1792.34,1219.17 1792.93,1218.89 1793.52,1218.4 1794.1,1217.07 1794.69,1214.17 1795.27,1214.24 1795.86,1214.17 1796.45,1218.01 1797.03,1216.85 1797.62,1216.68 1798.21,1216.57 1798.79,1216.54 1799.38,1215.28 1799.97,1215.48 1800.55,1216.66 1801.14,1215.24 1801.73,1217.86 1802.31,1217.89 1802.9,1217.81 1803.48,1214.68 1804.07,1214.7 1804.66,1212.04 1805.24,1212.18 1805.83,1216.32 1806.42,1216.22 1807,1213.5 1807.59,1214.92 1808.18,1214.67 1808.76,1214.69 1809.35,1214.79 1809.94,1213.54 1810.52,1213.52 1811.11,1213.63 1811.69,1213.45 1812.28,1214.98 1812.87,1216.27 1813.45,1217.73 1814.04,1217.74 1814.63,1214.83 1815.21,1216.01 1815.8,1215.92 1816.39,1215.73 1816.97,1214.32 1817.56,1214.15 1818.14,1215.43 1818.73,1213.94 1819.32,1215.27 1819.9,1216.6 1820.49,1217.8 1821.08,1217.9 1821.66,1221.6 1822.25,1218.37 1822.84,1217.97 1823.42,1212.62 1824.01,1211.46 1824.6,1210.23 1825.18,1208.04 1825.77,1208.04 1826.35,1209.93 1826.94,1211.61 1827.53,1213.15 1828.11,1209.29 1828.7,1212.57 1829.29,1212.84 1829.87,1212.86 1830.46,1213.1 1831.05,1212.04 1831.63,1213.47 1832.22,1214.58 1832.81,1215.88 1833.39,1217.15 1833.98,1214.22 1834.56,1211.47 1835.15,1211.84 1835.74,1212.1 1836.32,1210.9 1836.91,1212.4 1837.5,1212.7 1838.08,1214.07 1838.67,1215.61 1839.26,1214.14 1839.84,1214.47 1840.43,1213.43 1841.01,1212.34 1841.6,1210.07 1842.19,1205.14 1842.77,1205.96 1843.36,1204.94 1843.95,1206.91 1844.53,1211.37 1845.12,1211.62 1845.71,1213.08 1846.29,1214.41 1846.88,1213.1 1847.47,1213.25 1848.05,1213.15 1848.64,1213.33 1849.22,1214.5 1849.81,1213.43 1850.4,1214.95 1850.98,1213.71 1851.57,1213.89 1852.16,1214.08 1852.74,1218.43 1853.33,1216.94 1853.92,1216.73 1854.5,1215.53 1855.09,1215.66 1855.68,1217.2 1856.26,1217.23 1856.85,1217.05 1857.43,1218.64 1858.02,1217.26 1858.61,1218.48 1859.19,1215.63 1859.78,1216.95 1860.37,1218.33 1860.95,1220.87 1861.54,1220.62 1862.13,1221.62 1862.71,1219 1863.3,1216.12 1863.88,1213.55 1864.47,1215.04 1865.06,1213.9 1865.64,1212.54 1866.23,1213.6 1866.82,1212.09 1867.4,1211.1 1867.99,1211.2 1868.58,1215.38 1869.16,1216.66 1869.75,1219.06 1870.34,1219.81 1870.92,1220.74 1871.51,1220.73 1872.09,1220.32 1872.68,1218.91 1873.27,1219.64 1873.85,1219.3 1874.44,1220.43 1875.03,1220.31 1875.61,1214.98 1876.2,1217.62 1876.79,1216.32 1877.37,1215.04 1877.96,1214.74 1878.55,1213.4 1879.13,1216.27 1879.72,1216.36 1880.3,1219.21 1880.89,1219.14 1881.48,1216.39 1882.06,1214.93 1882.65,1216.26 1883.24,1216.35 1883.82,1217.53 1884.41,1213.29 1885,1214.62 1885.58,1214.56 1886.17,1216.02 1886.76,1215.95 1887.34,1217.12 1887.93,1215.91 1888.51,1214.56 1889.1,1214.57 1889.69,1217.26 1890.27,1218.58 1890.86,1218.32 1891.45,1218.17 1892.03,1219.28 1892.62,1219.01 1893.21,1219.01 1893.79,1217.42 1894.38,1217.51 1894.96,1217.55 1895.55,1216.32 1896.14,1216.52 1896.72,1216.36 1897.31,1217.71 1897.9,1218.77 1898.48,1220.04 1899.07,1218.44 1899.66,1215.65 1900.24,1215.65 1900.83,1215.52 1901.42,1214.23 1902,1211.56 1902.59,1209.19 1903.17,1209.47 1903.76,1211.38 1904.35,1214.28 1904.93,1215.59 1905.52,1215.76 1906.11,1215.79 1906.69,1215.91 1907.28,1217.22 1907.87,1215.42 1908.45,1215.42 1909.04,1219.64 1909.63,1218.31 1910.21,1219.65 1910.8,1222.16 1911.38,1221.8 1911.97,1222.51 1912.56,1222.19 1913.14,1218 1913.73,1217.88 1914.32,1217.73 1914.9,1219.18 1915.49,1216.27 1916.08,1216.11 1916.66,1214.59 1917.25,1214.54 1917.83,1214.64 1918.42,1214.49 1919.01,1215.81 1919.59,1217.27 1920.18,1218.33 1920.77,1221.76 1921.35,1216.1 1921.94,1213.33 1922.53,1214.86 1923.11,1214.78 1923.7,1216.41 1924.29,1215.31 1924.87,1215.37 1925.46,1213.99 1926.04,1214.1 1926.63,1212.98 1927.22,1213.25 1927.8,1214.67 1928.39,1217.14 1928.98,1218.14 1929.56,1218.2 1930.15,1216.6 1930.74,1216.73 1931.32,1216.57 1931.91,1218.12 1932.5,1218.41 1933.08,1215.88 1933.67,1217.17 1934.25,1217.15 1934.84,1213.07 1935.43,1212.88 1936.01,1212.89 1936.6,1215.81 1937.19,1216.94 1937.77,1217.97 1938.36,1215.26 1938.95,1215.37 1939.53,1216.89 1940.12,1218.12 1940.71,1219.24 1941.29,1216.38 1941.88,1216.1 1942.46,1217.15 1943.05,1217.14 1943.64,1216.93 1944.22,1219.57 1944.81,1220.51 1945.4,1221.48 1945.98,1221.27 1946.57,1222.28 1947.16,1222 1947.74,1221.35 1948.33,1219.74 1948.91,1220.93 1949.5,1218.14 1950.09,1216.54 1950.67,1215.28 1951.26,1214.08 1951.85,1212.86 1952.43,1211.48 1953.02,1211.65 1953.61,1211.74 1954.19,1213.32 1954.78,1212.14 1955.37,1212.39 1955.95,1216.52 1956.54,1217.68 1957.12,1213.49 1957.71,1212.44 1958.3,1209.65 1958.88,1209.05 1959.47,1206.64 1960.06,1206.71 1960.64,1207.44 1961.23,1206.8 1961.82,1210.02 1962.4,1207.83 1962.99,1206.9 1963.58,1208.46 1964.16,1207.44 1964.75,1207.74 1965.33,1208.13 1965.92,1211.3 1966.51,1214.41 1967.09,1218.42 1967.68,1218.47 1968.27,1218.52 1968.85,1217.19 1969.44,1214.44 1970.03,1213.29 1970.61,1214.58 1971.2,1216.1 1971.78,1216.22 1972.37,1217.51 1972.96,1217.32 1973.54,1218.84 1974.13,1218.77 1974.72,1219.89 1975.3,1217.35 1975.89,1218.87 1976.48,1218.51 1977.06,1217.2 1977.65,1216.2 1978.24,1217.47 1978.82,1216.3 1979.41,1215.01 1979.99,1215.24 1980.58,1212.54 1981.17,1211.53 1981.75,1213.19 1982.34,1213.33 1982.93,1213.49 1983.51,1217.64 1984.1,1216.17 1984.69,1216.1 1985.27,1217.52 1985.86,1217.41 1986.45,1218.74 1987.03,1218.31 1987.62,1216.6 1988.2,1216.48 1988.79,1217.83 1989.38,1216.43 1989.96,1214.92 1990.55,1216.18 1991.14,1220.56 1991.72,1221.73 1992.31,1218.84 1992.9,1218.67 1993.48,1219.77 1994.07,1216.99 1994.65,1216.82 1995.24,1215.57 1995.83,1215.5 1996.41,1214.24 1997,1215.61 1997.59,1213.03 1998.17,1211.92 1998.76,1213.63 1999.35,1212.76 1999.93,1215.51 2000.52,1216.61 2001.11,1221.74 2001.69,1221.5 2002.28,1219.78 2002.86,1222.39 2003.45,1220.57 2004.04,1220.01 2004.62,1219.62 2005.21,1222.07 2005.8,1220.22 2006.38,1220.06 2006.97,1218.65 2007.56,1218.49 2008.14,1221.06 2008.73,1219.53 2009.32,1219.33 2009.9,1215.29 2010.49,1212.83 2011.07,1213.1 2011.66,1214.57 2012.25,1220.01 2012.83,1221.32 2013.42,1219.8 2014.01,1218.32 2014.59,1219.66 2015.18,1219.18 2015.77,1221.81 2016.35,1216.21 2016.94,1217.67 2017.53,1217.38 2018.11,1211.88 2018.7,1213.46 2019.28,1209.78 2019.87,1209.96 2020.46,1210.17 2021.04,1211.71 2021.63,1214.68 2022.22,1215 2022.8,1215.29 2023.39,1217.01 2023.98,1218.32 2024.56,1216.88 2025.15,1218.03 2025.73,1218.84 2026.32,1220.22 2026.91,1221.05 2027.49,1220.55 2028.08,1220.43 2028.67,1220.53 2029.25,1221.56 2029.84,1223.86 2030.43,1225.03 2031.01,1221.93 2031.6,1224.26 2032.19,1222.49 2032.77,1222.24 2033.36,1221.81 2033.94,1220.21 2034.53,1219.73 2035.12,1218.18 2035.7,1221.99 2036.29,1222.07 2036.88,1219.17 2037.46,1223.02 2038.05,1228.75 2038.64,1225.57 2039.22,1223.63 2039.81,1220.65 2040.4,1217.9 2040.98,1216.18 2041.57,1216.17 2042.15,1215.08 2042.74,1216.41 2043.33,1216.45 2043.91,1215.15 2044.5,1215.13 2045.09,1215.12 2045.67,1212.24 2046.26,1215.3 2046.85,1216.6 2047.43,1215.17 2048.02,1217.8 2048.6,1214.99 2049.19,1214.72 2049.78,1212.13 2050.36,1210.9 2050.95,1209.88 2051.54,1208.84 2052.12,1206.65 2052.71,1208.56 2053.3,1211.94 2053.88,1211.04 2054.47,1212.93 2055.06,1208.87 2055.64,1209.46 2056.23,1209.9 2056.81,1208.91 2057.4,1210.81 2057.99,1212.17 2058.57,1212.32 2059.16,1212.22 2059.75,1208.72 2060.33,1207.53 2060.92,1210.71 2061.51,1210.01 2062.09,1207.8 2062.68,1208.21 2063.27,1208.74 2063.85,1208.63 2064.44,1206.32 2065.02,1205.35 2065.61,1206.14 2066.2,1206.69 2066.78,1207.09 2067.37,1207.46 2067.96,1206.52 2068.54,1207.43 2069.13,1204.09 2069.72,1206.24 2070.3,1206.58 2070.89,1207.3 2071.48,1207.71 2072.06,1208.15 2072.65,1211.42 2073.23,1214.6 2073.82,1217.23 2074.41,1217.16 2074.99,1217.25 2075.58,1217.18 2076.17,1217.21 2076.75,1217.4 2077.34,1218.81 2077.93,1217.69 2078.51,1218.92 2079.1,1218.67 2079.68,1218.32 2080.27,1220.77 2080.86,1216.7 2081.44,1217.91 2082.03,1216.51 2082.62,1215.2 2083.2,1214.06 2083.79,1214.3 2084.38,1213.21 2084.96,1214.76 2085.55,1215.05 2086.14,1216.47 2086.72,1216.29 2087.31,1217.72 2087.89,1219.1 2088.48,1219.11 2089.07,1220.22 2089.65,1219.76 2090.24,1219.63 2090.83,1214.06 2091.41,1216.86 2092,1217.12 2092.59,1215.78 2093.17,1216.95 2093.76,1218.09 2094.35,1215.49 2094.93,1215.38 2095.52,1215.33 2096.1,1215.12 2096.69,1214.11 2097.28,1214.01 2097.86,1214.13 2098.45,1215.73 2099.04,1218.43 2099.62,1219.44 2100.21,1220.49 2100.8,1220.12 2101.38,1224 2101.97,1222.03 2102.55,1223.2 2103.14,1221.71 2103.73,1221.49 2104.31,1220 2104.9,1221.05 2105.49,1222.17 2106.07,1222.92 2106.66,1221.97 2107.25,1216.24 2107.83,1216.06 2108.42,1217.5 2109.01,1216.09 2109.59,1217.57 2110.18,1218.93 2110.76,1218.8 2111.35,1219.99 2111.94,1219.76 2112.52,1216.81 2113.11,1215.42 2113.7,1216.76 2114.28,1217.92 2114.87,1219.12 2115.46,1218.98 2116.04,1219.14 2116.63,1214.97 2117.22,1213.96 2117.8,1212.55 2118.39,1215.17 2118.97,1214.89 2119.56,1213.76 2120.15,1213.91 2120.73,1211.35 2121.32,1208.87 2121.91,1208.05 2122.49,1207.21 2123.08,1206.37 2123.67,1209.47 2124.25,1209.9 2124.84,1210.23 2125.42,1211.96 2126.01,1213.41 2126.6,1213.64 2127.18,1212.53 2127.77,1211.7 2128.36,1212.13 2128.94,1213.8 2129.53,1216.9 2130.12,1216.86 2130.7,1214.19 2131.29,1215.61 2131.88,1214.17 2132.46,1214.04 2133.05,1214.34 2133.63,1215.62 2134.22,1217.03 2134.81,1219.56 2135.39,1216.71 2135.98,1216.8 2136.57,1218.22 2137.15,1216.76 2137.74,1217.85 2138.33,1217.58 2138.91,1217.6 2139.5,1220.24 2140.09,1219.9 2140.67,1219.98 2141.26,1218.77 2141.84,1218.59 2142.43,1218.36 2143.02,1218.67 2143.6,1218.46 2144.19,1218.24 2144.78,1218.02 2145.36,1222.98 2145.95,1225.23 2146.54,1223.27 2147.12,1224 2147.71,1221.01 2148.3,1220.95 2148.88,1221.07 2149.47,1220.78 2150.05,1221.97 2150.64,1220.04 2151.23,1217.22 2151.81,1214.94 2152.4,1215.24 2152.99,1215.43 2153.57,1215.35 2154.16,1217.99 2154.75,1219.15 2155.33,1222.97 2155.92,1218.69 2156.5,1219.88 2157.09,1218.22 2157.68,1217.94 2158.26,1217.51 \"/>\n<path clip-path=\"url(#clip122)\" d=\"M986.025 1216.25 L986.612 1216.25 L987.198 1216.25 L987.785 1216.25 L988.371 1216.25 L988.957 1216.25 L989.544 1216.25 L990.13 1216.25 L990.717 1216.25 L991.303 1216.25 L991.889 1216.25 L992.476 1216.25 L993.062 1216.25 L993.649 1216.25 L994.235 1216.25 L994.822 1216.25 L995.408 1216.25 L995.994 1216.25 L996.581 1216.25 L997.167 1216.25 L997.754 1216.25 L998.34 1216.25 L998.926 1216.25 L999.513 1216.25 L1000.1 1216.25 L1000.69 1216.25 L1001.27 1216.25 L1001.86 1216.25 L1002.44 1216.25 L1003.03 1216.25 L1003.62 1216.25 L1004.2 1216.25 L1004.79 1216.25 L1005.38 1216.25 L1005.96 1216.25 L1006.55 1216.25 L1007.14 1216.25 L1007.72 1216.25 L1008.31 1216.25 L1008.9 1216.25 L1009.48 1216.25 L1010.07 1216.25 L1010.65 1216.25 L1011.24 1216.25 L1011.83 1216.25 L1012.41 1216.25 L1013 1216.25 L1013.59 1216.25 L1014.17 1216.25 L1014.76 1216.25 L1015.35 1216.25 L1015.93 1216.25 L1016.52 1216.25 L1017.11 1216.25 L1017.69 1216.25 L1018.28 1216.25 L1018.86 1216.25 L1019.45 1216.25 L1020.04 1216.25 L1020.62 1216.25 L1021.21 1216.25 L1021.8 1216.25 L1022.38 1216.25 L1022.97 1216.25 L1023.56 1216.25 L1024.14 1216.25 L1024.73 1216.25 L1025.32 1216.25 L1025.9 1216.25 L1026.49 1216.25 L1027.07 1216.25 L1027.66 1216.25 L1028.25 1216.25 L1028.83 1216.25 L1029.42 1216.25 L1030.01 1216.25 L1030.59 1216.25 L1031.18 1216.25 L1031.77 1216.25 L1032.35 1216.25 L1032.94 1216.25 L1033.52 1216.25 L1034.11 1216.25 L1034.7 1216.25 L1035.28 1216.25 L1035.87 1216.25 L1036.46 1216.25 L1037.04 1216.25 L1037.63 1216.25 L1038.22 1216.25 L1038.8 1216.25 L1039.39 1216.25 L1039.98 1216.25 L1040.56 1216.25 L1041.15 1216.25 L1041.73 1216.25 L1042.32 1216.25 L1042.91 1216.25 L1043.49 1216.25 L1044.08 1216.25 L1044.67 1216.25 L1045.25 1216.25 L1045.84 1216.25 L1046.43 1216.25 L1047.01 1216.25 L1047.6 1216.25 L1048.19 1216.25 L1048.77 1216.25 L1049.36 1216.25 L1049.94 1216.25 L1050.53 1216.25 L1051.12 1216.25 L1051.7 1216.25 L1052.29 1216.25 L1052.88 1216.25 L1053.46 1216.25 L1054.05 1216.25 L1054.64 1216.25 L1055.22 1216.25 L1055.81 1216.25 L1056.39 1216.25 L1056.98 1216.25 L1057.57 1216.25 L1058.15 1216.25 L1058.74 1216.25 L1059.33 1216.25 L1059.91 1216.25 L1060.5 1216.25 L1061.09 1216.25 L1061.67 1216.25 L1062.26 1216.25 L1062.85 1216.25 L1063.43 1216.25 L1064.02 1216.25 L1064.6 1216.25 L1065.19 1216.25 L1065.78 1216.25 L1066.36 1216.25 L1066.95 1216.25 L1067.54 1216.25 L1068.12 1216.25 L1068.71 1216.25 L1069.3 1216.25 L1069.88 1216.25 L1070.47 1216.25 L1071.06 1216.25 L1071.64 1216.25 L1072.23 1216.25 L1072.81 1216.25 L1073.4 1216.25 L1073.99 1216.25 L1074.57 1216.25 L1075.16 1216.25 L1075.75 1216.25 L1076.33 1216.25 L1076.92 1216.25 L1077.51 1216.25 L1078.09 1216.25 L1078.68 1216.25 L1079.26 1216.25 L1079.85 1216.25 L1080.44 1216.25 L1081.02 1216.25 L1081.61 1216.25 L1082.2 1216.25 L1082.78 1216.25 L1083.37 1216.25 L1083.96 1216.25 L1084.54 1216.25 L1085.13 1216.25 L1085.72 1216.25 L1086.3 1216.25 L1086.89 1216.25 L1087.47 1216.25 L1088.06 1216.25 L1088.65 1216.25 L1089.23 1216.25 L1089.82 1216.25 L1090.41 1216.25 L1090.99 1216.25 L1091.58 1216.25 L1092.17 1216.25 L1092.75 1216.25 L1093.34 1216.25 L1093.93 1216.25 L1094.51 1216.25 L1095.1 1216.25 L1095.68 1216.25 L1096.27 1216.25 L1096.86 1216.25 L1097.44 1216.25 L1098.03 1216.25 L1098.62 1216.25 L1099.2 1216.25 L1099.79 1216.25 L1100.38 1216.25 L1100.96 1216.25 L1101.55 1216.25 L1102.14 1216.25 L1102.72 1216.25 L1103.31 1216.25 L1103.89 1216.25 L1104.48 1216.25 L1105.07 1216.25 L1105.65 1216.25 L1106.24 1216.25 L1106.83 1216.25 L1107.41 1216.25 L1108 1216.25 L1108.59 1216.25 L1109.17 1216.25 L1109.76 1216.25 L1110.34 1216.25 L1110.93 1216.25 L1111.52 1216.25 L1112.1 1216.25 L1112.69 1216.25 L1113.28 1216.25 L1113.86 1216.25 L1114.45 1216.25 L1115.04 1216.25 L1115.62 1216.25 L1116.21 1216.25 L1116.8 1216.25 L1117.38 1216.25 L1117.97 1216.25 L1118.55 1216.25 L1119.14 1216.25 L1119.73 1216.25 L1120.31 1216.25 L1120.9 1216.25 L1121.49 1216.25 L1122.07 1216.25 L1122.66 1216.25 L1123.25 1216.25 L1123.83 1216.25 L1124.42 1216.25 L1125.01 1216.25 L1125.59 1216.25 L1126.18 1216.25 L1126.76 1216.25 L1127.35 1216.25 L1127.94 1216.25 L1128.52 1216.25 L1129.11 1216.25 L1129.7 1216.25 L1130.28 1216.25 L1130.87 1216.25 L1131.46 1216.25 L1132.04 1216.25 L1132.63 1216.25 L1133.21 1216.25 L1133.8 1216.25 L1134.39 1216.25 L1134.97 1216.25 L1135.56 1216.25 L1136.15 1216.25 L1136.73 1216.25 L1137.32 1216.25 L1137.91 1216.25 L1138.49 1216.25 L1139.08 1216.25 L1139.67 1216.25 L1140.25 1216.25 L1140.84 1216.25 L1141.42 1216.25 L1142.01 1216.25 L1142.6 1216.25 L1143.18 1216.25 L1143.77 1216.25 L1144.36 1216.25 L1144.94 1216.25 L1145.53 1216.25 L1146.12 1216.25 L1146.7 1216.25 L1147.29 1216.25 L1147.88 1216.25 L1148.46 1216.25 L1149.05 1216.25 L1149.63 1216.25 L1150.22 1216.25 L1150.81 1216.25 L1151.39 1216.25 L1151.98 1216.25 L1152.57 1216.25 L1153.15 1216.25 L1153.74 1216.25 L1154.33 1216.25 L1154.91 1216.25 L1155.5 1216.25 L1156.09 1216.25 L1156.67 1216.25 L1157.26 1216.25 L1157.84 1216.25 L1158.43 1216.25 L1159.02 1216.25 L1159.6 1216.25 L1160.19 1216.25 L1160.78 1216.25 L1161.36 1216.25 L1161.95 1216.25 L1162.54 1216.25 L1163.12 1216.25 L1163.71 1216.25 L1164.29 1216.25 L1164.88 1216.25 L1165.47 1216.25 L1166.05 1216.25 L1166.64 1216.25 L1167.23 1216.25 L1167.81 1216.25 L1168.4 1216.25 L1168.99 1216.25 L1169.57 1216.25 L1170.16 1216.25 L1170.75 1216.25 L1171.33 1216.25 L1171.92 1216.25 L1172.5 1216.25 L1173.09 1216.25 L1173.68 1216.25 L1174.26 1216.25 L1174.85 1216.25 L1175.44 1216.25 L1176.02 1216.25 L1176.61 1216.25 L1177.2 1216.25 L1177.78 1216.25 L1178.37 1216.25 L1178.96 1216.25 L1179.54 1216.25 L1180.13 1216.25 L1180.71 1216.25 L1181.3 1216.25 L1181.89 1216.25 L1182.47 1216.25 L1183.06 1216.25 L1183.65 1216.25 L1184.23 1216.25 L1184.82 1216.25 L1185.41 1216.25 L1185.99 1216.25 L1186.58 1216.25 L1187.16 1216.25 L1187.75 1216.25 L1188.34 1216.25 L1188.92 1216.25 L1189.51 1216.25 L1190.1 1216.25 L1190.68 1216.25 L1191.27 1216.25 L1191.86 1216.25 L1192.44 1216.25 L1193.03 1216.25 L1193.62 1216.25 L1194.2 1216.25 L1194.79 1216.25 L1195.37 1216.25 L1195.96 1216.25 L1196.55 1216.25 L1197.13 1216.25 L1197.72 1216.25 L1198.31 1216.25 L1198.89 1216.25 L1199.48 1216.25 L1200.07 1216.25 L1200.65 1216.25 L1201.24 1216.25 L1201.83 1216.25 L1202.41 1216.25 L1203 1216.25 L1203.58 1216.25 L1204.17 1216.25 L1204.76 1216.25 L1205.34 1216.25 L1205.93 1216.25 L1206.52 1216.25 L1207.1 1216.25 L1207.69 1216.25 L1208.28 1216.25 L1208.86 1216.25 L1209.45 1216.25 L1210.03 1216.25 L1210.62 1216.25 L1211.21 1216.25 L1211.79 1216.25 L1212.38 1216.25 L1212.97 1216.25 L1213.55 1216.25 L1214.14 1216.25 L1214.73 1216.25 L1215.31 1216.25 L1215.9 1216.25 L1216.49 1216.25 L1217.07 1216.25 L1217.66 1216.25 L1218.24 1216.25 L1218.83 1216.25 L1219.42 1216.25 L1220 1216.25 L1220.59 1216.25 L1221.18 1216.25 L1221.76 1216.25 L1222.35 1216.25 L1222.94 1216.25 L1223.52 1216.25 L1224.11 1216.25 L1224.7 1216.25 L1225.28 1216.25 L1225.87 1216.25 L1226.45 1216.25 L1227.04 1216.25 L1227.63 1216.25 L1228.21 1216.25 L1228.8 1216.25 L1229.39 1216.25 L1229.97 1216.25 L1230.56 1216.25 L1231.15 1216.25 L1231.73 1216.25 L1232.32 1216.25 L1232.91 1216.25 L1233.49 1216.25 L1234.08 1216.25 L1234.66 1216.25 L1235.25 1216.25 L1235.84 1216.25 L1236.42 1216.25 L1237.01 1216.25 L1237.6 1216.25 L1238.18 1216.25 L1238.77 1216.25 L1239.36 1216.25 L1239.94 1216.25 L1240.53 1216.25 L1241.11 1216.25 L1241.7 1216.25 L1242.29 1216.25 L1242.87 1216.25 L1243.46 1216.25 L1244.05 1216.25 L1244.63 1216.25 L1245.22 1216.25 L1245.81 1216.25 L1246.39 1216.25 L1246.98 1216.25 L1247.57 1216.25 L1248.15 1216.25 L1248.74 1216.25 L1249.32 1216.25 L1249.91 1216.25 L1250.5 1216.25 L1251.08 1216.25 L1251.67 1216.25 L1252.26 1216.25 L1252.84 1216.25 L1253.43 1216.25 L1254.02 1216.25 L1254.6 1216.25 L1255.19 1216.25 L1255.78 1216.25 L1256.36 1216.25 L1256.95 1216.25 L1257.53 1216.25 L1258.12 1216.25 L1258.71 1216.25 L1259.29 1216.25 L1259.88 1216.25 L1260.47 1216.25 L1261.05 1216.25 L1261.64 1216.25 L1262.23 1216.25 L1262.81 1216.25 L1263.4 1216.25 L1263.98 1216.25 L1264.57 1216.25 L1265.16 1216.25 L1265.74 1216.25 L1266.33 1216.25 L1266.92 1216.25 L1267.5 1216.25 L1268.09 1216.25 L1268.68 1216.25 L1269.26 1216.25 L1269.85 1216.25 L1270.44 1216.25 L1271.02 1216.25 L1271.61 1216.25 L1272.19 1216.25 L1272.78 1216.25 L1273.37 1216.25 L1273.95 1216.25 L1274.54 1216.25 L1275.13 1216.25 L1275.71 1216.25 L1276.3 1216.25 L1276.89 1216.25 L1277.47 1216.25 L1278.06 1216.25 L1278.65 1216.25 L1279.23 1216.25 L1279.82 1216.25 L1280.4 1216.25 L1280.99 1216.25 L1281.58 1216.25 L1282.16 1216.25 L1282.75 1216.25 L1283.34 1216.25 L1283.92 1216.25 L1284.51 1216.25 L1285.1 1216.25 L1285.68 1216.25 L1286.27 1216.25 L1286.86 1216.25 L1287.44 1216.25 L1288.03 1216.25 L1288.61 1216.25 L1289.2 1216.25 L1289.79 1216.25 L1290.37 1216.25 L1290.96 1216.25 L1291.55 1216.25 L1292.13 1216.25 L1292.72 1216.25 L1293.31 1216.25 L1293.89 1216.25 L1294.48 1216.25 L1295.06 1216.25 L1295.65 1216.25 L1296.24 1216.25 L1296.82 1216.25 L1297.41 1216.25 L1298 1216.25 L1298.58 1216.25 L1299.17 1216.25 L1299.76 1216.25 L1300.34 1216.25 L1300.93 1216.25 L1301.52 1216.25 L1302.1 1216.25 L1302.69 1216.25 L1303.27 1216.25 L1303.86 1216.25 L1304.45 1216.25 L1305.03 1216.25 L1305.62 1216.25 L1306.21 1216.25 L1306.79 1216.25 L1307.38 1216.25 L1307.97 1216.25 L1308.55 1216.25 L1309.14 1216.25 L1309.73 1216.25 L1310.31 1216.25 L1310.9 1216.25 L1311.48 1216.25 L1312.07 1216.25 L1312.66 1216.25 L1313.24 1216.25 L1313.83 1216.25 L1314.42 1216.25 L1315 1216.25 L1315.59 1216.25 L1316.18 1216.25 L1316.76 1216.25 L1317.35 1216.25 L1317.93 1216.25 L1318.52 1216.25 L1319.11 1216.25 L1319.69 1216.25 L1320.28 1216.25 L1320.87 1216.25 L1321.45 1216.25 L1322.04 1216.25 L1322.63 1216.25 L1323.21 1216.25 L1323.8 1216.25 L1324.39 1216.25 L1324.97 1216.25 L1325.56 1216.25 L1326.14 1216.25 L1326.73 1216.25 L1327.32 1216.25 L1327.9 1216.25 L1328.49 1216.25 L1329.08 1216.25 L1329.66 1216.25 L1330.25 1216.25 L1330.84 1216.25 L1331.42 1216.25 L1332.01 1216.25 L1332.6 1216.25 L1333.18 1216.25 L1333.77 1216.25 L1334.35 1216.25 L1334.94 1216.25 L1335.53 1216.25 L1336.11 1216.25 L1336.7 1216.25 L1337.29 1216.25 L1337.87 1216.25 L1338.46 1216.25 L1339.05 1216.25 L1339.63 1216.25 L1340.22 1216.25 L1340.8 1216.25 L1341.39 1216.25 L1341.98 1216.25 L1342.56 1216.25 L1343.15 1216.25 L1343.74 1216.25 L1344.32 1216.25 L1344.91 1216.25 L1345.5 1216.25 L1346.08 1216.25 L1346.67 1216.25 L1347.26 1216.25 L1347.84 1216.25 L1348.43 1216.25 L1349.01 1216.25 L1349.6 1216.25 L1350.19 1216.25 L1350.77 1216.25 L1351.36 1216.25 L1351.95 1216.25 L1352.53 1216.25 L1353.12 1216.25 L1353.71 1216.25 L1354.29 1216.25 L1354.88 1216.25 L1355.47 1216.25 L1356.05 1216.25 L1356.64 1216.25 L1357.22 1216.25 L1357.81 1216.25 L1358.4 1216.25 L1358.98 1216.25 L1359.57 1216.25 L1360.16 1216.25 L1360.74 1216.25 L1361.33 1216.25 L1361.92 1216.25 L1362.5 1216.25 L1363.09 1216.25 L1363.68 1216.25 L1364.26 1216.25 L1364.85 1216.25 L1365.43 1216.25 L1366.02 1216.25 L1366.61 1216.25 L1367.19 1216.25 L1367.78 1216.25 L1368.37 1216.25 L1368.95 1216.25 L1369.54 1216.25 L1370.13 1216.25 L1370.71 1216.25 L1371.3 1216.25 L1371.88 1216.25 L1372.47 1216.25 L1373.06 1216.25 L1373.64 1216.25 L1374.23 1216.25 L1374.82 1216.25 L1375.4 1216.25 L1375.99 1216.25 L1376.58 1216.25 L1377.16 1216.25 L1377.75 1216.25 L1378.34 1216.25 L1378.92 1216.25 L1379.51 1216.25 L1380.09 1216.25 L1380.68 1216.25 L1381.27 1216.25 L1381.85 1216.25 L1382.44 1216.25 L1383.03 1216.25 L1383.61 1216.25 L1384.2 1216.25 L1384.79 1216.25 L1385.37 1216.25 L1385.96 1216.25 L1386.55 1216.25 L1387.13 1216.25 L1387.72 1216.25 L1388.3 1216.25 L1388.89 1216.25 L1389.48 1216.25 L1390.06 1216.25 L1390.65 1216.25 L1391.24 1216.25 L1391.82 1216.25 L1392.41 1216.25 L1393 1216.25 L1393.58 1216.25 L1394.17 1216.25 L1394.75 1216.25 L1395.34 1216.25 L1395.93 1216.25 L1396.51 1216.25 L1397.1 1216.25 L1397.69 1216.25 L1398.27 1216.25 L1398.86 1216.25 L1399.45 1216.25 L1400.03 1216.25 L1400.62 1216.25 L1401.21 1216.25 L1401.79 1216.25 L1402.38 1216.25 L1402.96 1216.25 L1403.55 1216.25 L1404.14 1216.25 L1404.72 1216.25 L1405.31 1216.25 L1405.9 1216.25 L1406.48 1216.25 L1407.07 1216.25 L1407.66 1216.25 L1408.24 1216.25 L1408.83 1216.25 L1409.42 1216.25 L1410 1216.25 L1410.59 1216.25 L1411.17 1216.25 L1411.76 1216.25 L1412.35 1216.25 L1412.93 1216.25 L1413.52 1216.25 L1414.11 1216.25 L1414.69 1216.25 L1415.28 1216.25 L1415.87 1216.25 L1416.45 1216.25 L1417.04 1216.25 L1417.63 1216.25 L1418.21 1216.25 L1418.8 1216.25 L1419.38 1216.25 L1419.97 1216.25 L1420.56 1216.25 L1421.14 1216.25 L1421.73 1216.25 L1422.32 1216.25 L1422.9 1216.25 L1423.49 1216.25 L1424.08 1216.25 L1424.66 1216.25 L1425.25 1216.25 L1425.83 1216.25 L1426.42 1216.25 L1427.01 1216.25 L1427.59 1216.25 L1428.18 1216.25 L1428.77 1216.25 L1429.35 1216.25 L1429.94 1216.25 L1430.53 1216.25 L1431.11 1216.25 L1431.7 1216.25 L1432.29 1216.25 L1432.87 1216.25 L1433.46 1216.25 L1434.04 1216.25 L1434.63 1216.25 L1435.22 1216.25 L1435.8 1216.25 L1436.39 1216.25 L1436.98 1216.25 L1437.56 1216.25 L1438.15 1216.25 L1438.74 1216.25 L1439.32 1216.25 L1439.91 1216.25 L1440.5 1216.25 L1441.08 1216.25 L1441.67 1216.25 L1442.25 1216.25 L1442.84 1216.25 L1443.43 1216.25 L1444.01 1216.25 L1444.6 1216.25 L1445.19 1216.25 L1445.77 1216.25 L1446.36 1216.25 L1446.95 1216.25 L1447.53 1216.25 L1448.12 1216.25 L1448.7 1216.25 L1449.29 1216.25 L1449.88 1216.25 L1450.46 1216.25 L1451.05 1216.25 L1451.64 1216.25 L1452.22 1216.25 L1452.81 1216.25 L1453.4 1216.25 L1453.98 1216.25 L1454.57 1216.25 L1455.16 1216.25 L1455.74 1216.25 L1456.33 1216.25 L1456.91 1216.25 L1457.5 1216.25 L1458.09 1216.25 L1458.67 1216.25 L1459.26 1216.25 L1459.85 1216.25 L1460.43 1216.25 L1461.02 1216.25 L1461.61 1216.25 L1462.19 1216.25 L1462.78 1216.25 L1463.37 1216.25 L1463.95 1216.25 L1464.54 1216.25 L1465.12 1216.25 L1465.71 1216.25 L1466.3 1216.25 L1466.88 1216.25 L1467.47 1216.25 L1468.06 1216.25 L1468.64 1216.25 L1469.23 1216.25 L1469.82 1216.25 L1470.4 1216.25 L1470.99 1216.25 L1471.57 1216.25 L1472.16 1216.25 L1472.75 1216.25 L1473.33 1216.25 L1473.92 1216.25 L1474.51 1216.25 L1475.09 1216.25 L1475.68 1216.25 L1476.27 1216.25 L1476.85 1216.25 L1477.44 1216.25 L1478.03 1216.25 L1478.61 1216.25 L1479.2 1216.25 L1479.78 1216.25 L1480.37 1216.25 L1480.96 1216.25 L1481.54 1216.25 L1482.13 1216.25 L1482.72 1216.25 L1483.3 1216.25 L1483.89 1216.25 L1484.48 1216.25 L1485.06 1216.25 L1485.65 1216.25 L1486.24 1216.25 L1486.82 1216.25 L1487.41 1216.25 L1487.99 1216.25 L1488.58 1216.25 L1489.17 1216.25 L1489.75 1216.25 L1490.34 1216.25 L1490.93 1216.25 L1491.51 1216.25 L1492.1 1216.25 L1492.69 1216.25 L1493.27 1216.25 L1493.86 1216.25 L1494.45 1216.25 L1495.03 1216.25 L1495.62 1216.25 L1496.2 1216.25 L1496.79 1216.25 L1497.38 1216.25 L1497.96 1216.25 L1498.55 1216.25 L1499.14 1216.25 L1499.72 1216.25 L1500.31 1216.25 L1500.9 1216.25 L1501.48 1216.25 L1502.07 1216.25 L1502.65 1216.25 L1503.24 1216.25 L1503.83 1216.25 L1504.41 1216.25 L1505 1216.25 L1505.59 1216.25 L1506.17 1216.25 L1506.76 1216.25 L1507.35 1216.25 L1507.93 1216.25 L1508.52 1216.25 L1509.11 1216.25 L1509.69 1216.25 L1510.28 1216.25 L1510.86 1216.25 L1511.45 1216.25 L1512.04 1216.25 L1512.62 1216.25 L1513.21 1216.25 L1513.8 1216.25 L1514.38 1216.25 L1514.97 1216.25 L1515.56 1216.25 L1516.14 1216.25 L1516.73 1216.25 L1517.32 1216.25 L1517.9 1216.25 L1518.49 1216.25 L1519.07 1216.25 L1519.66 1216.25 L1520.25 1216.25 L1520.83 1216.25 L1521.42 1216.25 L1522.01 1216.25 L1522.59 1216.25 L1523.18 1216.25 L1523.77 1216.25 L1524.35 1216.25 L1524.94 1216.25 L1525.52 1216.25 L1526.11 1216.25 L1526.7 1216.25 L1527.28 1216.25 L1527.87 1216.25 L1528.46 1216.25 L1529.04 1216.25 L1529.63 1216.25 L1530.22 1216.25 L1530.8 1216.25 L1531.39 1216.25 L1531.98 1216.25 L1532.56 1216.25 L1533.15 1216.25 L1533.73 1216.25 L1534.32 1216.25 L1534.91 1216.25 L1535.49 1216.25 L1536.08 1216.25 L1536.67 1216.25 L1537.25 1216.25 L1537.84 1216.25 L1538.43 1216.25 L1539.01 1216.25 L1539.6 1216.25 L1540.19 1216.25 L1540.77 1216.25 L1541.36 1216.25 L1541.94 1216.25 L1542.53 1216.25 L1543.12 1216.25 L1543.7 1216.25 L1544.29 1216.25 L1544.88 1216.25 L1545.46 1216.25 L1546.05 1216.25 L1546.64 1216.25 L1547.22 1216.25 L1547.81 1216.25 L1548.4 1216.25 L1548.98 1216.25 L1549.57 1216.25 L1550.15 1216.25 L1550.74 1216.25 L1551.33 1216.25 L1551.91 1216.25 L1552.5 1216.25 L1553.09 1216.25 L1553.67 1216.25 L1554.26 1216.25 L1554.85 1216.25 L1555.43 1216.25 L1556.02 1216.25 L1556.6 1216.25 L1557.19 1216.25 L1557.78 1216.25 L1558.36 1216.25 L1558.95 1216.25 L1559.54 1216.25 L1560.12 1216.25 L1560.71 1216.25 L1561.3 1216.25 L1561.88 1216.25 L1562.47 1216.25 L1563.06 1216.25 L1563.64 1216.25 L1564.23 1216.25 L1564.81 1216.25 L1565.4 1216.25 L1565.99 1216.25 L1566.57 1216.25 L1567.16 1216.25 L1567.75 1216.25 L1568.33 1216.25 L1568.92 1216.25 L1569.51 1216.25 L1570.09 1216.25 L1570.68 1216.25 L1571.27 1216.25 L1571.85 1216.25 L1572.44 1216.25 L1573.02 1216.25 L1573.61 1216.25 L1574.2 1216.25 L1574.78 1216.25 L1575.37 1216.25 L1575.96 1216.25 L1576.54 1216.25 L1577.13 1216.25 L1577.72 1216.25 L1578.3 1216.25 L1578.89 1216.25 L1579.47 1216.25 L1580.06 1216.25 L1580.65 1216.25 L1581.23 1216.25 L1581.82 1216.25 L1582.41 1216.25 L1582.99 1216.25 L1583.58 1216.25 L1584.17 1216.25 L1584.75 1216.25 L1585.34 1216.25 L1585.93 1216.25 L1586.51 1216.25 L1587.1 1216.25 L1587.68 1216.25 L1588.27 1216.25 L1588.86 1216.25 L1589.44 1216.25 L1590.03 1216.25 L1590.62 1216.25 L1591.2 1216.25 L1591.79 1216.25 L1592.38 1216.25 L1592.96 1216.25 L1593.55 1216.25 L1594.14 1216.25 L1594.72 1216.25 L1595.31 1216.25 L1595.89 1216.25 L1596.48 1216.25 L1597.07 1216.25 L1597.65 1216.25 L1598.24 1216.25 L1598.83 1216.25 L1599.41 1216.25 L1600 1216.25 L1600.59 1216.25 L1601.17 1216.25 L1601.76 1216.25 L1602.34 1216.25 L1602.93 1216.25 L1603.52 1216.25 L1604.1 1216.25 L1604.69 1216.25 L1605.28 1216.25 L1605.86 1216.25 L1606.45 1216.25 L1607.04 1216.25 L1607.62 1216.25 L1608.21 1216.25 L1608.8 1216.25 L1609.38 1216.25 L1609.97 1216.25 L1610.55 1216.25 L1611.14 1216.25 L1611.73 1216.25 L1612.31 1216.25 L1612.9 1216.25 L1613.49 1216.25 L1614.07 1216.25 L1614.66 1216.25 L1615.25 1216.25 L1615.83 1216.25 L1616.42 1216.25 L1617.01 1216.25 L1617.59 1216.25 L1618.18 1216.25 L1618.76 1216.25 L1619.35 1216.25 L1619.94 1216.25 L1620.52 1216.25 L1621.11 1216.25 L1621.7 1216.25 L1622.28 1216.25 L1622.87 1216.25 L1623.46 1216.25 L1624.04 1216.25 L1624.63 1216.25 L1625.22 1216.25 L1625.8 1216.25 L1626.39 1216.25 L1626.97 1216.25 L1627.56 1216.25 L1628.15 1216.25 L1628.73 1216.25 L1629.32 1216.25 L1629.91 1216.25 L1630.49 1216.25 L1631.08 1216.25 L1631.67 1216.25 L1632.25 1216.25 L1632.84 1216.25 L1633.42 1216.25 L1634.01 1216.25 L1634.6 1216.25 L1635.18 1216.25 L1635.77 1216.25 L1636.36 1216.25 L1636.94 1216.25 L1637.53 1216.25 L1638.12 1216.25 L1638.7 1216.25 L1639.29 1216.25 L1639.88 1216.25 L1640.46 1216.25 L1641.05 1216.25 L1641.63 1216.25 L1642.22 1216.25 L1642.81 1216.25 L1643.39 1216.25 L1643.98 1216.25 L1644.57 1216.25 L1645.15 1216.25 L1645.74 1216.25 L1646.33 1216.25 L1646.91 1216.25 L1647.5 1216.25 L1648.09 1216.25 L1648.67 1216.25 L1649.26 1216.25 L1649.84 1216.25 L1650.43 1216.25 L1651.02 1216.25 L1651.6 1216.25 L1652.19 1216.25 L1652.78 1216.25 L1653.36 1216.25 L1653.95 1216.25 L1654.54 1216.25 L1655.12 1216.25 L1655.71 1216.25 L1656.29 1216.25 L1656.88 1216.25 L1657.47 1216.25 L1658.05 1216.25 L1658.64 1216.25 L1659.23 1216.25 L1659.81 1216.25 L1660.4 1216.25 L1660.99 1216.25 L1661.57 1216.25 L1662.16 1216.25 L1662.75 1216.25 L1663.33 1216.25 L1663.92 1216.25 L1664.5 1216.25 L1665.09 1216.25 L1665.68 1216.25 L1666.26 1216.25 L1666.85 1216.25 L1667.44 1216.25 L1668.02 1216.25 L1668.61 1216.25 L1669.2 1216.25 L1669.78 1216.25 L1670.37 1216.25 L1670.96 1216.25 L1671.54 1216.25 L1672.13 1216.25 L1672.71 1216.25 L1673.3 1216.25 L1673.89 1216.25 L1674.47 1216.25 L1675.06 1216.25 L1675.65 1216.25 L1676.23 1216.25 L1676.82 1216.25 L1677.41 1216.25 L1677.99 1216.25 L1678.58 1216.25 L1679.17 1216.25 L1679.75 1216.25 L1680.34 1216.25 L1680.92 1216.25 L1681.51 1216.25 L1682.1 1216.25 L1682.68 1216.25 L1683.27 1216.25 L1683.86 1216.25 L1684.44 1216.25 L1685.03 1216.25 L1685.62 1216.25 L1686.2 1216.25 L1686.79 1216.25 L1687.37 1216.25 L1687.96 1216.25 L1688.55 1216.25 L1689.13 1216.25 L1689.72 1216.25 L1690.31 1216.25 L1690.89 1216.25 L1691.48 1216.25 L1692.07 1216.25 L1692.65 1216.25 L1693.24 1216.25 L1693.83 1216.25 L1694.41 1216.25 L1695 1216.25 L1695.58 1216.25 L1696.17 1216.25 L1696.76 1216.25 L1697.34 1216.25 L1697.93 1216.25 L1698.52 1216.25 L1699.1 1216.25 L1699.69 1216.25 L1700.28 1216.25 L1700.86 1216.25 L1701.45 1216.25 L1702.04 1216.25 L1702.62 1216.25 L1703.21 1216.25 L1703.79 1216.25 L1704.38 1216.25 L1704.97 1216.25 L1705.55 1216.25 L1706.14 1216.25 L1706.73 1216.25 L1707.31 1216.25 L1707.9 1216.25 L1708.49 1216.25 L1709.07 1216.25 L1709.66 1216.25 L1710.24 1216.25 L1710.83 1216.25 L1711.42 1216.25 L1712 1216.25 L1712.59 1216.25 L1713.18 1216.25 L1713.76 1216.25 L1714.35 1216.25 L1714.94 1216.25 L1715.52 1216.25 L1716.11 1216.25 L1716.7 1216.25 L1717.28 1216.25 L1717.87 1216.25 L1718.45 1216.25 L1719.04 1216.25 L1719.63 1216.25 L1720.21 1216.25 L1720.8 1216.25 L1721.39 1216.25 L1721.97 1216.25 L1722.56 1216.25 L1723.15 1216.25 L1723.73 1216.25 L1724.32 1216.25 L1724.91 1216.25 L1725.49 1216.25 L1726.08 1216.25 L1726.66 1216.25 L1727.25 1216.25 L1727.84 1216.25 L1728.42 1216.25 L1729.01 1216.25 L1729.6 1216.25 L1730.18 1216.25 L1730.77 1216.25 L1731.36 1216.25 L1731.94 1216.25 L1732.53 1216.25 L1733.11 1216.25 L1733.7 1216.25 L1734.29 1216.25 L1734.87 1216.25 L1735.46 1216.25 L1736.05 1216.25 L1736.63 1216.25 L1737.22 1216.25 L1737.81 1216.25 L1738.39 1216.25 L1738.98 1216.25 L1739.57 1216.25 L1740.15 1216.25 L1740.74 1216.25 L1741.32 1216.25 L1741.91 1216.25 L1742.5 1216.25 L1743.08 1216.25 L1743.67 1216.25 L1744.26 1216.25 L1744.84 1216.25 L1745.43 1216.25 L1746.02 1216.25 L1746.6 1216.25 L1747.19 1216.25 L1747.78 1216.25 L1748.36 1216.25 L1748.95 1216.25 L1749.53 1216.25 L1750.12 1216.25 L1750.71 1216.25 L1751.29 1216.25 L1751.88 1216.25 L1752.47 1216.25 L1753.05 1216.25 L1753.64 1216.25 L1754.23 1216.25 L1754.81 1216.25 L1755.4 1216.25 L1755.99 1216.25 L1756.57 1216.25 L1757.16 1216.25 L1757.74 1216.25 L1758.33 1216.25 L1758.92 1216.25 L1759.5 1216.25 L1760.09 1216.25 L1760.68 1216.25 L1761.26 1216.25 L1761.85 1216.25 L1762.44 1216.25 L1763.02 1216.25 L1763.61 1216.25 L1764.19 1216.25 L1764.78 1216.25 L1765.37 1216.25 L1765.95 1216.25 L1766.54 1216.25 L1767.13 1216.25 L1767.71 1216.25 L1768.3 1216.25 L1768.89 1216.25 L1769.47 1216.25 L1770.06 1216.25 L1770.65 1216.25 L1771.23 1216.25 L1771.82 1216.25 L1772.4 1216.25 L1772.99 1216.25 L1773.58 1216.25 L1774.16 1216.25 L1774.75 1216.25 L1775.34 1216.25 L1775.92 1216.25 L1776.51 1216.25 L1777.1 1216.25 L1777.68 1216.25 L1778.27 1216.25 L1778.86 1216.25 L1779.44 1216.25 L1780.03 1216.25 L1780.61 1216.25 L1781.2 1216.25 L1781.79 1216.25 L1782.37 1216.25 L1782.96 1216.25 L1783.55 1216.25 L1784.13 1216.25 L1784.72 1216.25 L1785.31 1216.25 L1785.89 1216.25 L1786.48 1216.25 L1787.06 1216.25 L1787.65 1216.25 L1788.24 1216.25 L1788.82 1216.25 L1789.41 1216.25 L1790 1216.25 L1790.58 1216.25 L1791.17 1216.25 L1791.76 1216.25 L1792.34 1216.25 L1792.93 1216.25 L1793.52 1216.25 L1794.1 1216.25 L1794.69 1216.25 L1795.27 1216.25 L1795.86 1216.25 L1796.45 1216.25 L1797.03 1216.25 L1797.62 1216.25 L1798.21 1216.25 L1798.79 1216.25 L1799.38 1216.25 L1799.97 1216.25 L1800.55 1216.25 L1801.14 1216.25 L1801.73 1216.25 L1802.31 1216.25 L1802.9 1216.25 L1803.48 1216.25 L1804.07 1216.25 L1804.66 1216.25 L1805.24 1216.25 L1805.83 1216.25 L1806.42 1216.25 L1807 1216.25 L1807.59 1216.25 L1808.18 1216.25 L1808.76 1216.25 L1809.35 1216.25 L1809.94 1216.25 L1810.52 1216.25 L1811.11 1216.25 L1811.69 1216.25 L1812.28 1216.25 L1812.87 1216.25 L1813.45 1216.25 L1814.04 1216.25 L1814.63 1216.25 L1815.21 1216.25 L1815.8 1216.25 L1816.39 1216.25 L1816.97 1216.25 L1817.56 1216.25 L1818.14 1216.25 L1818.73 1216.25 L1819.32 1216.25 L1819.9 1216.25 L1820.49 1216.25 L1821.08 1216.25 L1821.66 1216.25 L1822.25 1216.25 L1822.84 1216.25 L1823.42 1216.25 L1824.01 1216.25 L1824.6 1216.25 L1825.18 1216.25 L1825.77 1216.25 L1826.35 1216.25 L1826.94 1216.25 L1827.53 1216.25 L1828.11 1216.25 L1828.7 1216.25 L1829.29 1216.25 L1829.87 1216.25 L1830.46 1216.25 L1831.05 1216.25 L1831.63 1216.25 L1832.22 1216.25 L1832.81 1216.25 L1833.39 1216.25 L1833.98 1216.25 L1834.56 1216.25 L1835.15 1216.25 L1835.74 1216.25 L1836.32 1216.25 L1836.91 1216.25 L1837.5 1216.25 L1838.08 1216.25 L1838.67 1216.25 L1839.26 1216.25 L1839.84 1216.25 L1840.43 1216.25 L1841.01 1216.25 L1841.6 1216.25 L1842.19 1216.25 L1842.77 1216.25 L1843.36 1216.25 L1843.95 1216.25 L1844.53 1216.25 L1845.12 1216.25 L1845.71 1216.25 L1846.29 1216.25 L1846.88 1216.25 L1847.47 1216.25 L1848.05 1216.25 L1848.64 1216.25 L1849.22 1216.25 L1849.81 1216.25 L1850.4 1216.25 L1850.98 1216.25 L1851.57 1216.25 L1852.16 1216.25 L1852.74 1216.25 L1853.33 1216.25 L1853.92 1216.25 L1854.5 1216.25 L1855.09 1216.25 L1855.68 1216.25 L1856.26 1216.25 L1856.85 1216.25 L1857.43 1216.25 L1858.02 1216.25 L1858.61 1216.25 L1859.19 1216.25 L1859.78 1216.25 L1860.37 1216.25 L1860.95 1216.25 L1861.54 1216.25 L1862.13 1216.25 L1862.71 1216.25 L1863.3 1216.25 L1863.88 1216.25 L1864.47 1216.25 L1865.06 1216.25 L1865.64 1216.25 L1866.23 1216.25 L1866.82 1216.25 L1867.4 1216.25 L1867.99 1216.25 L1868.58 1216.25 L1869.16 1216.25 L1869.75 1216.25 L1870.34 1216.25 L1870.92 1216.25 L1871.51 1216.25 L1872.09 1216.25 L1872.68 1216.25 L1873.27 1216.25 L1873.85 1216.25 L1874.44 1216.25 L1875.03 1216.25 L1875.61 1216.25 L1876.2 1216.25 L1876.79 1216.25 L1877.37 1216.25 L1877.96 1216.25 L1878.55 1216.25 L1879.13 1216.25 L1879.72 1216.25 L1880.3 1216.25 L1880.89 1216.25 L1881.48 1216.25 L1882.06 1216.25 L1882.65 1216.25 L1883.24 1216.25 L1883.82 1216.25 L1884.41 1216.25 L1885 1216.25 L1885.58 1216.25 L1886.17 1216.25 L1886.76 1216.25 L1887.34 1216.25 L1887.93 1216.25 L1888.51 1216.25 L1889.1 1216.25 L1889.69 1216.25 L1890.27 1216.25 L1890.86 1216.25 L1891.45 1216.25 L1892.03 1216.25 L1892.62 1216.25 L1893.21 1216.25 L1893.79 1216.25 L1894.38 1216.25 L1894.96 1216.25 L1895.55 1216.25 L1896.14 1216.25 L1896.72 1216.25 L1897.31 1216.25 L1897.9 1216.25 L1898.48 1216.25 L1899.07 1216.25 L1899.66 1216.25 L1900.24 1216.25 L1900.83 1216.25 L1901.42 1216.25 L1902 1216.25 L1902.59 1216.25 L1903.17 1216.25 L1903.76 1216.25 L1904.35 1216.25 L1904.93 1216.25 L1905.52 1216.25 L1906.11 1216.25 L1906.69 1216.25 L1907.28 1216.25 L1907.87 1216.25 L1908.45 1216.25 L1909.04 1216.25 L1909.63 1216.25 L1910.21 1216.25 L1910.8 1216.25 L1911.38 1216.25 L1911.97 1216.25 L1912.56 1216.25 L1913.14 1216.25 L1913.73 1216.25 L1914.32 1216.25 L1914.9 1216.25 L1915.49 1216.25 L1916.08 1216.25 L1916.66 1216.25 L1917.25 1216.25 L1917.83 1216.25 L1918.42 1216.25 L1919.01 1216.25 L1919.59 1216.25 L1920.18 1216.25 L1920.77 1216.25 L1921.35 1216.25 L1921.94 1216.25 L1922.53 1216.25 L1923.11 1216.25 L1923.7 1216.25 L1924.29 1216.25 L1924.87 1216.25 L1925.46 1216.25 L1926.04 1216.25 L1926.63 1216.25 L1927.22 1216.25 L1927.8 1216.25 L1928.39 1216.25 L1928.98 1216.25 L1929.56 1216.25 L1930.15 1216.25 L1930.74 1216.25 L1931.32 1216.25 L1931.91 1216.25 L1932.5 1216.25 L1933.08 1216.25 L1933.67 1216.25 L1934.25 1216.25 L1934.84 1216.25 L1935.43 1216.25 L1936.01 1216.25 L1936.6 1216.25 L1937.19 1216.25 L1937.77 1216.25 L1938.36 1216.25 L1938.95 1216.25 L1939.53 1216.25 L1940.12 1216.25 L1940.71 1216.25 L1941.29 1216.25 L1941.88 1216.25 L1942.46 1216.25 L1943.05 1216.25 L1943.64 1216.25 L1944.22 1216.25 L1944.81 1216.25 L1945.4 1216.25 L1945.98 1216.25 L1946.57 1216.25 L1947.16 1216.25 L1947.74 1216.25 L1948.33 1216.25 L1948.91 1216.25 L1949.5 1216.25 L1950.09 1216.25 L1950.67 1216.25 L1951.26 1216.25 L1951.85 1216.25 L1952.43 1216.25 L1953.02 1216.25 L1953.61 1216.25 L1954.19 1216.25 L1954.78 1216.25 L1955.37 1216.25 L1955.95 1216.25 L1956.54 1216.25 L1957.12 1216.25 L1957.71 1216.25 L1958.3 1216.25 L1958.88 1216.25 L1959.47 1216.25 L1960.06 1216.25 L1960.64 1216.25 L1961.23 1216.25 L1961.82 1216.25 L1962.4 1216.25 L1962.99 1216.25 L1963.58 1216.25 L1964.16 1216.25 L1964.75 1216.25 L1965.33 1216.25 L1965.92 1216.25 L1966.51 1216.25 L1967.09 1216.25 L1967.68 1216.25 L1968.27 1216.25 L1968.85 1216.25 L1969.44 1216.25 L1970.03 1216.25 L1970.61 1216.25 L1971.2 1216.25 L1971.78 1216.25 L1972.37 1216.25 L1972.96 1216.25 L1973.54 1216.25 L1974.13 1216.25 L1974.72 1216.25 L1975.3 1216.25 L1975.89 1216.25 L1976.48 1216.25 L1977.06 1216.25 L1977.65 1216.25 L1978.24 1216.25 L1978.82 1216.25 L1979.41 1216.25 L1979.99 1216.25 L1980.58 1216.25 L1981.17 1216.25 L1981.75 1216.25 L1982.34 1216.25 L1982.93 1216.25 L1983.51 1216.25 L1984.1 1216.25 L1984.69 1216.25 L1985.27 1216.25 L1985.86 1216.25 L1986.45 1216.25 L1987.03 1216.25 L1987.62 1216.25 L1988.2 1216.25 L1988.79 1216.25 L1989.38 1216.25 L1989.96 1216.25 L1990.55 1216.25 L1991.14 1216.25 L1991.72 1216.25 L1992.31 1216.25 L1992.9 1216.25 L1993.48 1216.25 L1994.07 1216.25 L1994.65 1216.25 L1995.24 1216.25 L1995.83 1216.25 L1996.41 1216.25 L1997 1216.25 L1997.59 1216.25 L1998.17 1216.25 L1998.76 1216.25 L1999.35 1216.25 L1999.93 1216.25 L2000.52 1216.25 L2001.11 1216.25 L2001.69 1216.25 L2002.28 1216.25 L2002.86 1216.25 L2003.45 1216.25 L2004.04 1216.25 L2004.62 1216.25 L2005.21 1216.25 L2005.8 1216.25 L2006.38 1216.25 L2006.97 1216.25 L2007.56 1216.25 L2008.14 1216.25 L2008.73 1216.25 L2009.32 1216.25 L2009.9 1216.25 L2010.49 1216.25 L2011.07 1216.25 L2011.66 1216.25 L2012.25 1216.25 L2012.83 1216.25 L2013.42 1216.25 L2014.01 1216.25 L2014.59 1216.25 L2015.18 1216.25 L2015.77 1216.25 L2016.35 1216.25 L2016.94 1216.25 L2017.53 1216.25 L2018.11 1216.25 L2018.7 1216.25 L2019.28 1216.25 L2019.87 1216.25 L2020.46 1216.25 L2021.04 1216.25 L2021.63 1216.25 L2022.22 1216.25 L2022.8 1216.25 L2023.39 1216.25 L2023.98 1216.25 L2024.56 1216.25 L2025.15 1216.25 L2025.73 1216.25 L2026.32 1216.25 L2026.91 1216.25 L2027.49 1216.25 L2028.08 1216.25 L2028.67 1216.25 L2029.25 1216.25 L2029.84 1216.25 L2030.43 1216.25 L2031.01 1216.25 L2031.6 1216.25 L2032.19 1216.25 L2032.77 1216.25 L2033.36 1216.25 L2033.94 1216.25 L2034.53 1216.25 L2035.12 1216.25 L2035.7 1216.25 L2036.29 1216.25 L2036.88 1216.25 L2037.46 1216.25 L2038.05 1216.25 L2038.64 1216.25 L2039.22 1216.25 L2039.81 1216.25 L2040.4 1216.25 L2040.98 1216.25 L2041.57 1216.25 L2042.15 1216.25 L2042.74 1216.25 L2043.33 1216.25 L2043.91 1216.25 L2044.5 1216.25 L2045.09 1216.25 L2045.67 1216.25 L2046.26 1216.25 L2046.85 1216.25 L2047.43 1216.25 L2048.02 1216.25 L2048.6 1216.25 L2049.19 1216.25 L2049.78 1216.25 L2050.36 1216.25 L2050.95 1216.25 L2051.54 1216.25 L2052.12 1216.25 L2052.71 1216.25 L2053.3 1216.25 L2053.88 1216.25 L2054.47 1216.25 L2055.06 1216.25 L2055.64 1216.25 L2056.23 1216.25 L2056.81 1216.25 L2057.4 1216.25 L2057.99 1216.25 L2058.57 1216.25 L2059.16 1216.25 L2059.75 1216.25 L2060.33 1216.25 L2060.92 1216.25 L2061.51 1216.25 L2062.09 1216.25 L2062.68 1216.25 L2063.27 1216.25 L2063.85 1216.25 L2064.44 1216.25 L2065.02 1216.25 L2065.61 1216.25 L2066.2 1216.25 L2066.78 1216.25 L2067.37 1216.25 L2067.96 1216.25 L2068.54 1216.25 L2069.13 1216.25 L2069.72 1216.25 L2070.3 1216.25 L2070.89 1216.25 L2071.48 1216.25 L2072.06 1216.25 L2072.65 1216.25 L2073.23 1216.25 L2073.82 1216.25 L2074.41 1216.25 L2074.99 1216.25 L2075.58 1216.25 L2076.17 1216.25 L2076.75 1216.25 L2077.34 1216.25 L2077.93 1216.25 L2078.51 1216.25 L2079.1 1216.25 L2079.68 1216.25 L2080.27 1216.25 L2080.86 1216.25 L2081.44 1216.25 L2082.03 1216.25 L2082.62 1216.25 L2083.2 1216.25 L2083.79 1216.25 L2084.38 1216.25 L2084.96 1216.25 L2085.55 1216.25 L2086.14 1216.25 L2086.72 1216.25 L2087.31 1216.25 L2087.89 1216.25 L2088.48 1216.25 L2089.07 1216.25 L2089.65 1216.25 L2090.24 1216.25 L2090.83 1216.25 L2091.41 1216.25 L2092 1216.25 L2092.59 1216.25 L2093.17 1216.25 L2093.76 1216.25 L2094.35 1216.25 L2094.93 1216.25 L2095.52 1216.25 L2096.1 1216.25 L2096.69 1216.25 L2097.28 1216.25 L2097.86 1216.25 L2098.45 1216.25 L2099.04 1216.25 L2099.62 1216.25 L2100.21 1216.25 L2100.8 1216.25 L2101.38 1216.25 L2101.97 1216.25 L2102.55 1216.25 L2103.14 1216.25 L2103.73 1216.25 L2104.31 1216.25 L2104.9 1216.25 L2105.49 1216.25 L2106.07 1216.25 L2106.66 1216.25 L2107.25 1216.25 L2107.83 1216.25 L2108.42 1216.25 L2109.01 1216.25 L2109.59 1216.25 L2110.18 1216.25 L2110.76 1216.25 L2111.35 1216.25 L2111.94 1216.25 L2112.52 1216.25 L2113.11 1216.25 L2113.7 1216.25 L2114.28 1216.25 L2114.87 1216.25 L2115.46 1216.25 L2116.04 1216.25 L2116.63 1216.25 L2117.22 1216.25 L2117.8 1216.25 L2118.39 1216.25 L2118.97 1216.25 L2119.56 1216.25 L2120.15 1216.25 L2120.73 1216.25 L2121.32 1216.25 L2121.91 1216.25 L2122.49 1216.25 L2123.08 1216.25 L2123.67 1216.25 L2124.25 1216.25 L2124.84 1216.25 L2125.42 1216.25 L2126.01 1216.25 L2126.6 1216.25 L2127.18 1216.25 L2127.77 1216.25 L2128.36 1216.25 L2128.94 1216.25 L2129.53 1216.25 L2130.12 1216.25 L2130.7 1216.25 L2131.29 1216.25 L2131.88 1216.25 L2132.46 1216.25 L2133.05 1216.25 L2133.63 1216.25 L2134.22 1216.25 L2134.81 1216.25 L2135.39 1216.25 L2135.98 1216.25 L2136.57 1216.25 L2137.15 1216.25 L2137.74 1216.25 L2138.33 1216.25 L2138.91 1216.25 L2139.5 1216.25 L2140.09 1216.25 L2140.67 1216.25 L2141.26 1216.25 L2141.84 1216.25 L2142.43 1216.25 L2143.02 1216.25 L2143.6 1216.25 L2144.19 1216.25 L2144.78 1216.25 L2145.36 1216.25 L2145.95 1216.25 L2146.54 1216.25 L2147.12 1216.25 L2147.71 1216.25 L2148.3 1216.25 L2148.88 1216.25 L2149.47 1216.25 L2150.05 1216.25 L2150.64 1216.25 L2151.23 1216.25 L2151.81 1216.25 L2152.4 1216.25 L2152.99 1216.25 L2153.57 1216.25 L2154.16 1216.25 L2154.75 1216.25 L2155.33 1216.25 L2155.92 1216.25 L2156.5 1216.25 L2157.09 1216.25 L2157.68 1216.25 L2158.26 1216.25 L2158.26 1215.57 L2157.68 1215.57 L2157.09 1215.57 L2156.5 1215.57 L2155.92 1215.57 L2155.33 1215.57 L2154.75 1215.57 L2154.16 1215.57 L2153.57 1215.57 L2152.99 1215.57 L2152.4 1215.57 L2151.81 1215.57 L2151.23 1215.57 L2150.64 1215.57 L2150.05 1215.57 L2149.47 1215.57 L2148.88 1215.57 L2148.3 1215.57 L2147.71 1215.57 L2147.12 1215.57 L2146.54 1215.57 L2145.95 1215.57 L2145.36 1215.57 L2144.78 1215.57 L2144.19 1215.57 L2143.6 1215.57 L2143.02 1215.57 L2142.43 1215.57 L2141.84 1215.57 L2141.26 1215.57 L2140.67 1215.57 L2140.09 1215.57 L2139.5 1215.57 L2138.91 1215.57 L2138.33 1215.57 L2137.74 1215.57 L2137.15 1215.57 L2136.57 1215.57 L2135.98 1215.57 L2135.39 1215.57 L2134.81 1215.57 L2134.22 1215.57 L2133.63 1215.57 L2133.05 1215.57 L2132.46 1215.57 L2131.88 1215.57 L2131.29 1215.57 L2130.7 1215.57 L2130.12 1215.57 L2129.53 1215.57 L2128.94 1215.57 L2128.36 1215.57 L2127.77 1215.57 L2127.18 1215.57 L2126.6 1215.57 L2126.01 1215.57 L2125.42 1215.57 L2124.84 1215.57 L2124.25 1215.57 L2123.67 1215.57 L2123.08 1215.57 L2122.49 1215.57 L2121.91 1215.57 L2121.32 1215.57 L2120.73 1215.57 L2120.15 1215.57 L2119.56 1215.57 L2118.97 1215.57 L2118.39 1215.57 L2117.8 1215.57 L2117.22 1215.57 L2116.63 1215.57 L2116.04 1215.57 L2115.46 1215.57 L2114.87 1215.57 L2114.28 1215.57 L2113.7 1215.57 L2113.11 1215.57 L2112.52 1215.57 L2111.94 1215.57 L2111.35 1215.57 L2110.76 1215.57 L2110.18 1215.57 L2109.59 1215.57 L2109.01 1215.57 L2108.42 1215.57 L2107.83 1215.57 L2107.25 1215.57 L2106.66 1215.57 L2106.07 1215.57 L2105.49 1215.57 L2104.9 1215.57 L2104.31 1215.57 L2103.73 1215.57 L2103.14 1215.57 L2102.55 1215.57 L2101.97 1215.57 L2101.38 1215.57 L2100.8 1215.57 L2100.21 1215.57 L2099.62 1215.57 L2099.04 1215.57 L2098.45 1215.57 L2097.86 1215.57 L2097.28 1215.57 L2096.69 1215.57 L2096.1 1215.57 L2095.52 1215.57 L2094.93 1215.57 L2094.35 1215.57 L2093.76 1215.57 L2093.17 1215.57 L2092.59 1215.57 L2092 1215.57 L2091.41 1215.57 L2090.83 1215.57 L2090.24 1215.57 L2089.65 1215.57 L2089.07 1215.57 L2088.48 1215.57 L2087.89 1215.57 L2087.31 1215.57 L2086.72 1215.57 L2086.14 1215.57 L2085.55 1215.57 L2084.96 1215.57 L2084.38 1215.57 L2083.79 1215.57 L2083.2 1215.57 L2082.62 1215.57 L2082.03 1215.57 L2081.44 1215.57 L2080.86 1215.57 L2080.27 1215.57 L2079.68 1215.57 L2079.1 1215.57 L2078.51 1215.57 L2077.93 1215.57 L2077.34 1215.57 L2076.75 1215.57 L2076.17 1215.57 L2075.58 1215.57 L2074.99 1215.57 L2074.41 1215.57 L2073.82 1215.57 L2073.23 1215.57 L2072.65 1215.57 L2072.06 1215.57 L2071.48 1215.57 L2070.89 1215.57 L2070.3 1215.57 L2069.72 1215.57 L2069.13 1215.57 L2068.54 1215.57 L2067.96 1215.57 L2067.37 1215.57 L2066.78 1215.57 L2066.2 1215.57 L2065.61 1215.57 L2065.02 1215.57 L2064.44 1215.57 L2063.85 1215.57 L2063.27 1215.57 L2062.68 1215.57 L2062.09 1215.57 L2061.51 1215.57 L2060.92 1215.57 L2060.33 1215.57 L2059.75 1215.57 L2059.16 1215.57 L2058.57 1215.57 L2057.99 1215.57 L2057.4 1215.57 L2056.81 1215.57 L2056.23 1215.57 L2055.64 1215.57 L2055.06 1215.57 L2054.47 1215.57 L2053.88 1215.57 L2053.3 1215.57 L2052.71 1215.57 L2052.12 1215.57 L2051.54 1215.57 L2050.95 1215.57 L2050.36 1215.57 L2049.78 1215.57 L2049.19 1215.57 L2048.6 1215.57 L2048.02 1215.57 L2047.43 1215.57 L2046.85 1215.57 L2046.26 1215.57 L2045.67 1215.57 L2045.09 1215.57 L2044.5 1215.57 L2043.91 1215.57 L2043.33 1215.57 L2042.74 1215.57 L2042.15 1215.57 L2041.57 1215.57 L2040.98 1215.57 L2040.4 1215.57 L2039.81 1215.57 L2039.22 1215.57 L2038.64 1215.57 L2038.05 1215.57 L2037.46 1215.57 L2036.88 1215.57 L2036.29 1215.57 L2035.7 1215.57 L2035.12 1215.57 L2034.53 1215.57 L2033.94 1215.57 L2033.36 1215.57 L2032.77 1215.57 L2032.19 1215.57 L2031.6 1215.57 L2031.01 1215.57 L2030.43 1215.57 L2029.84 1215.57 L2029.25 1215.57 L2028.67 1215.57 L2028.08 1215.57 L2027.49 1215.57 L2026.91 1215.57 L2026.32 1215.57 L2025.73 1215.57 L2025.15 1215.57 L2024.56 1215.57 L2023.98 1215.57 L2023.39 1215.57 L2022.8 1215.57 L2022.22 1215.57 L2021.63 1215.57 L2021.04 1215.57 L2020.46 1215.57 L2019.87 1215.57 L2019.28 1215.57 L2018.7 1215.57 L2018.11 1215.57 L2017.53 1215.57 L2016.94 1215.57 L2016.35 1215.57 L2015.77 1215.57 L2015.18 1215.57 L2014.59 1215.57 L2014.01 1215.57 L2013.42 1215.57 L2012.83 1215.57 L2012.25 1215.57 L2011.66 1215.57 L2011.07 1215.57 L2010.49 1215.57 L2009.9 1215.57 L2009.32 1215.57 L2008.73 1215.57 L2008.14 1215.57 L2007.56 1215.57 L2006.97 1215.57 L2006.38 1215.57 L2005.8 1215.57 L2005.21 1215.57 L2004.62 1215.57 L2004.04 1215.57 L2003.45 1215.57 L2002.86 1215.57 L2002.28 1215.57 L2001.69 1215.57 L2001.11 1215.57 L2000.52 1215.57 L1999.93 1215.57 L1999.35 1215.57 L1998.76 1215.57 L1998.17 1215.57 L1997.59 1215.57 L1997 1215.57 L1996.41 1215.57 L1995.83 1215.57 L1995.24 1215.57 L1994.65 1215.57 L1994.07 1215.57 L1993.48 1215.57 L1992.9 1215.57 L1992.31 1215.57 L1991.72 1215.57 L1991.14 1215.57 L1990.55 1215.57 L1989.96 1215.57 L1989.38 1215.57 L1988.79 1215.57 L1988.2 1215.57 L1987.62 1215.57 L1987.03 1215.57 L1986.45 1215.57 L1985.86 1215.57 L1985.27 1215.57 L1984.69 1215.57 L1984.1 1215.57 L1983.51 1215.57 L1982.93 1215.57 L1982.34 1215.57 L1981.75 1215.57 L1981.17 1215.57 L1980.58 1215.57 L1979.99 1215.57 L1979.41 1215.57 L1978.82 1215.57 L1978.24 1215.57 L1977.65 1215.57 L1977.06 1215.57 L1976.48 1215.57 L1975.89 1215.57 L1975.3 1215.57 L1974.72 1215.57 L1974.13 1215.57 L1973.54 1215.57 L1972.96 1215.57 L1972.37 1215.57 L1971.78 1215.57 L1971.2 1215.57 L1970.61 1215.57 L1970.03 1215.57 L1969.44 1215.57 L1968.85 1215.57 L1968.27 1215.57 L1967.68 1215.57 L1967.09 1215.57 L1966.51 1215.57 L1965.92 1215.57 L1965.33 1215.57 L1964.75 1215.57 L1964.16 1215.57 L1963.58 1215.57 L1962.99 1215.57 L1962.4 1215.57 L1961.82 1215.57 L1961.23 1215.57 L1960.64 1215.57 L1960.06 1215.57 L1959.47 1215.57 L1958.88 1215.57 L1958.3 1215.57 L1957.71 1215.57 L1957.12 1215.57 L1956.54 1215.57 L1955.95 1215.57 L1955.37 1215.57 L1954.78 1215.57 L1954.19 1215.57 L1953.61 1215.57 L1953.02 1215.57 L1952.43 1215.57 L1951.85 1215.57 L1951.26 1215.57 L1950.67 1215.57 L1950.09 1215.57 L1949.5 1215.57 L1948.91 1215.57 L1948.33 1215.57 L1947.74 1215.57 L1947.16 1215.57 L1946.57 1215.57 L1945.98 1215.57 L1945.4 1215.57 L1944.81 1215.57 L1944.22 1215.57 L1943.64 1215.57 L1943.05 1215.57 L1942.46 1215.57 L1941.88 1215.57 L1941.29 1215.57 L1940.71 1215.57 L1940.12 1215.57 L1939.53 1215.57 L1938.95 1215.57 L1938.36 1215.57 L1937.77 1215.57 L1937.19 1215.57 L1936.6 1215.57 L1936.01 1215.57 L1935.43 1215.57 L1934.84 1215.57 L1934.25 1215.57 L1933.67 1215.57 L1933.08 1215.57 L1932.5 1215.57 L1931.91 1215.57 L1931.32 1215.57 L1930.74 1215.57 L1930.15 1215.57 L1929.56 1215.57 L1928.98 1215.57 L1928.39 1215.57 L1927.8 1215.57 L1927.22 1215.57 L1926.63 1215.57 L1926.04 1215.57 L1925.46 1215.57 L1924.87 1215.57 L1924.29 1215.57 L1923.7 1215.57 L1923.11 1215.57 L1922.53 1215.57 L1921.94 1215.57 L1921.35 1215.57 L1920.77 1215.57 L1920.18 1215.57 L1919.59 1215.57 L1919.01 1215.57 L1918.42 1215.57 L1917.83 1215.57 L1917.25 1215.57 L1916.66 1215.57 L1916.08 1215.57 L1915.49 1215.57 L1914.9 1215.57 L1914.32 1215.57 L1913.73 1215.57 L1913.14 1215.57 L1912.56 1215.57 L1911.97 1215.57 L1911.38 1215.57 L1910.8 1215.57 L1910.21 1215.57 L1909.63 1215.57 L1909.04 1215.57 L1908.45 1215.57 L1907.87 1215.57 L1907.28 1215.57 L1906.69 1215.57 L1906.11 1215.57 L1905.52 1215.57 L1904.93 1215.57 L1904.35 1215.57 L1903.76 1215.57 L1903.17 1215.57 L1902.59 1215.57 L1902 1215.57 L1901.42 1215.57 L1900.83 1215.57 L1900.24 1215.57 L1899.66 1215.57 L1899.07 1215.57 L1898.48 1215.57 L1897.9 1215.57 L1897.31 1215.57 L1896.72 1215.57 L1896.14 1215.57 L1895.55 1215.57 L1894.96 1215.57 L1894.38 1215.57 L1893.79 1215.57 L1893.21 1215.57 L1892.62 1215.57 L1892.03 1215.57 L1891.45 1215.57 L1890.86 1215.57 L1890.27 1215.57 L1889.69 1215.57 L1889.1 1215.57 L1888.51 1215.57 L1887.93 1215.57 L1887.34 1215.57 L1886.76 1215.57 L1886.17 1215.57 L1885.58 1215.57 L1885 1215.57 L1884.41 1215.57 L1883.82 1215.57 L1883.24 1215.57 L1882.65 1215.57 L1882.06 1215.57 L1881.48 1215.57 L1880.89 1215.57 L1880.3 1215.57 L1879.72 1215.57 L1879.13 1215.57 L1878.55 1215.57 L1877.96 1215.57 L1877.37 1215.57 L1876.79 1215.57 L1876.2 1215.57 L1875.61 1215.57 L1875.03 1215.57 L1874.44 1215.57 L1873.85 1215.57 L1873.27 1215.57 L1872.68 1215.57 L1872.09 1215.57 L1871.51 1215.57 L1870.92 1215.57 L1870.34 1215.57 L1869.75 1215.57 L1869.16 1215.57 L1868.58 1215.57 L1867.99 1215.57 L1867.4 1215.57 L1866.82 1215.57 L1866.23 1215.57 L1865.64 1215.57 L1865.06 1215.57 L1864.47 1215.57 L1863.88 1215.57 L1863.3 1215.57 L1862.71 1215.57 L1862.13 1215.57 L1861.54 1215.57 L1860.95 1215.57 L1860.37 1215.57 L1859.78 1215.57 L1859.19 1215.57 L1858.61 1215.57 L1858.02 1215.57 L1857.43 1215.57 L1856.85 1215.57 L1856.26 1215.57 L1855.68 1215.57 L1855.09 1215.57 L1854.5 1215.57 L1853.92 1215.57 L1853.33 1215.57 L1852.74 1215.57 L1852.16 1215.57 L1851.57 1215.57 L1850.98 1215.57 L1850.4 1215.57 L1849.81 1215.57 L1849.22 1215.57 L1848.64 1215.57 L1848.05 1215.57 L1847.47 1215.57 L1846.88 1215.57 L1846.29 1215.57 L1845.71 1215.57 L1845.12 1215.57 L1844.53 1215.57 L1843.95 1215.57 L1843.36 1215.57 L1842.77 1215.57 L1842.19 1215.57 L1841.6 1215.57 L1841.01 1215.57 L1840.43 1215.57 L1839.84 1215.57 L1839.26 1215.57 L1838.67 1215.57 L1838.08 1215.57 L1837.5 1215.57 L1836.91 1215.57 L1836.32 1215.57 L1835.74 1215.57 L1835.15 1215.57 L1834.56 1215.57 L1833.98 1215.57 L1833.39 1215.57 L1832.81 1215.57 L1832.22 1215.57 L1831.63 1215.57 L1831.05 1215.57 L1830.46 1215.57 L1829.87 1215.57 L1829.29 1215.57 L1828.7 1215.57 L1828.11 1215.57 L1827.53 1215.57 L1826.94 1215.57 L1826.35 1215.57 L1825.77 1215.57 L1825.18 1215.57 L1824.6 1215.57 L1824.01 1215.57 L1823.42 1215.57 L1822.84 1215.57 L1822.25 1215.57 L1821.66 1215.57 L1821.08 1215.57 L1820.49 1215.57 L1819.9 1215.57 L1819.32 1215.57 L1818.73 1215.57 L1818.14 1215.57 L1817.56 1215.57 L1816.97 1215.57 L1816.39 1215.57 L1815.8 1215.57 L1815.21 1215.57 L1814.63 1215.57 L1814.04 1215.57 L1813.45 1215.57 L1812.87 1215.57 L1812.28 1215.57 L1811.69 1215.57 L1811.11 1215.57 L1810.52 1215.57 L1809.94 1215.57 L1809.35 1215.57 L1808.76 1215.57 L1808.18 1215.57 L1807.59 1215.57 L1807 1215.57 L1806.42 1215.57 L1805.83 1215.57 L1805.24 1215.57 L1804.66 1215.57 L1804.07 1215.57 L1803.48 1215.57 L1802.9 1215.57 L1802.31 1215.57 L1801.73 1215.57 L1801.14 1215.57 L1800.55 1215.57 L1799.97 1215.57 L1799.38 1215.57 L1798.79 1215.57 L1798.21 1215.57 L1797.62 1215.57 L1797.03 1215.57 L1796.45 1215.57 L1795.86 1215.57 L1795.27 1215.57 L1794.69 1215.57 L1794.1 1215.57 L1793.52 1215.57 L1792.93 1215.57 L1792.34 1215.57 L1791.76 1215.57 L1791.17 1215.57 L1790.58 1215.57 L1790 1215.57 L1789.41 1215.57 L1788.82 1215.57 L1788.24 1215.57 L1787.65 1215.57 L1787.06 1215.57 L1786.48 1215.57 L1785.89 1215.57 L1785.31 1215.57 L1784.72 1215.57 L1784.13 1215.57 L1783.55 1215.57 L1782.96 1215.57 L1782.37 1215.57 L1781.79 1215.57 L1781.2 1215.57 L1780.61 1215.57 L1780.03 1215.57 L1779.44 1215.57 L1778.86 1215.57 L1778.27 1215.57 L1777.68 1215.57 L1777.1 1215.57 L1776.51 1215.57 L1775.92 1215.57 L1775.34 1215.57 L1774.75 1215.57 L1774.16 1215.57 L1773.58 1215.57 L1772.99 1215.57 L1772.4 1215.57 L1771.82 1215.57 L1771.23 1215.57 L1770.65 1215.57 L1770.06 1215.57 L1769.47 1215.57 L1768.89 1215.57 L1768.3 1215.57 L1767.71 1215.57 L1767.13 1215.57 L1766.54 1215.57 L1765.95 1215.57 L1765.37 1215.57 L1764.78 1215.57 L1764.19 1215.57 L1763.61 1215.57 L1763.02 1215.57 L1762.44 1215.57 L1761.85 1215.57 L1761.26 1215.57 L1760.68 1215.57 L1760.09 1215.57 L1759.5 1215.57 L1758.92 1215.57 L1758.33 1215.57 L1757.74 1215.57 L1757.16 1215.57 L1756.57 1215.57 L1755.99 1215.57 L1755.4 1215.57 L1754.81 1215.57 L1754.23 1215.57 L1753.64 1215.57 L1753.05 1215.57 L1752.47 1215.57 L1751.88 1215.57 L1751.29 1215.57 L1750.71 1215.57 L1750.12 1215.57 L1749.53 1215.57 L1748.95 1215.57 L1748.36 1215.57 L1747.78 1215.57 L1747.19 1215.57 L1746.6 1215.57 L1746.02 1215.57 L1745.43 1215.57 L1744.84 1215.57 L1744.26 1215.57 L1743.67 1215.57 L1743.08 1215.57 L1742.5 1215.57 L1741.91 1215.57 L1741.32 1215.57 L1740.74 1215.57 L1740.15 1215.57 L1739.57 1215.57 L1738.98 1215.57 L1738.39 1215.57 L1737.81 1215.57 L1737.22 1215.57 L1736.63 1215.57 L1736.05 1215.57 L1735.46 1215.57 L1734.87 1215.57 L1734.29 1215.57 L1733.7 1215.57 L1733.11 1215.57 L1732.53 1215.57 L1731.94 1215.57 L1731.36 1215.57 L1730.77 1215.57 L1730.18 1215.57 L1729.6 1215.57 L1729.01 1215.57 L1728.42 1215.57 L1727.84 1215.57 L1727.25 1215.57 L1726.66 1215.57 L1726.08 1215.57 L1725.49 1215.57 L1724.91 1215.57 L1724.32 1215.57 L1723.73 1215.57 L1723.15 1215.57 L1722.56 1215.57 L1721.97 1215.57 L1721.39 1215.57 L1720.8 1215.57 L1720.21 1215.57 L1719.63 1215.57 L1719.04 1215.57 L1718.45 1215.57 L1717.87 1215.57 L1717.28 1215.57 L1716.7 1215.57 L1716.11 1215.57 L1715.52 1215.57 L1714.94 1215.57 L1714.35 1215.57 L1713.76 1215.57 L1713.18 1215.57 L1712.59 1215.57 L1712 1215.57 L1711.42 1215.57 L1710.83 1215.57 L1710.24 1215.57 L1709.66 1215.57 L1709.07 1215.57 L1708.49 1215.57 L1707.9 1215.57 L1707.31 1215.57 L1706.73 1215.57 L1706.14 1215.57 L1705.55 1215.57 L1704.97 1215.57 L1704.38 1215.57 L1703.79 1215.57 L1703.21 1215.57 L1702.62 1215.57 L1702.04 1215.57 L1701.45 1215.57 L1700.86 1215.57 L1700.28 1215.57 L1699.69 1215.57 L1699.1 1215.57 L1698.52 1215.57 L1697.93 1215.57 L1697.34 1215.57 L1696.76 1215.57 L1696.17 1215.57 L1695.58 1215.57 L1695 1215.57 L1694.41 1215.57 L1693.83 1215.57 L1693.24 1215.57 L1692.65 1215.57 L1692.07 1215.57 L1691.48 1215.57 L1690.89 1215.57 L1690.31 1215.57 L1689.72 1215.57 L1689.13 1215.57 L1688.55 1215.57 L1687.96 1215.57 L1687.37 1215.57 L1686.79 1215.57 L1686.2 1215.57 L1685.62 1215.57 L1685.03 1215.57 L1684.44 1215.57 L1683.86 1215.57 L1683.27 1215.57 L1682.68 1215.57 L1682.1 1215.57 L1681.51 1215.57 L1680.92 1215.57 L1680.34 1215.57 L1679.75 1215.57 L1679.17 1215.57 L1678.58 1215.57 L1677.99 1215.57 L1677.41 1215.57 L1676.82 1215.57 L1676.23 1215.57 L1675.65 1215.57 L1675.06 1215.57 L1674.47 1215.57 L1673.89 1215.57 L1673.3 1215.57 L1672.71 1215.57 L1672.13 1215.57 L1671.54 1215.57 L1670.96 1215.57 L1670.37 1215.57 L1669.78 1215.57 L1669.2 1215.57 L1668.61 1215.57 L1668.02 1215.57 L1667.44 1215.57 L1666.85 1215.57 L1666.26 1215.57 L1665.68 1215.57 L1665.09 1215.57 L1664.5 1215.57 L1663.92 1215.57 L1663.33 1215.57 L1662.75 1215.57 L1662.16 1215.57 L1661.57 1215.57 L1660.99 1215.57 L1660.4 1215.57 L1659.81 1215.57 L1659.23 1215.57 L1658.64 1215.57 L1658.05 1215.57 L1657.47 1215.57 L1656.88 1215.57 L1656.29 1215.57 L1655.71 1215.57 L1655.12 1215.57 L1654.54 1215.57 L1653.95 1215.57 L1653.36 1215.57 L1652.78 1215.57 L1652.19 1215.57 L1651.6 1215.57 L1651.02 1215.57 L1650.43 1215.57 L1649.84 1215.57 L1649.26 1215.57 L1648.67 1215.57 L1648.09 1215.57 L1647.5 1215.57 L1646.91 1215.57 L1646.33 1215.57 L1645.74 1215.57 L1645.15 1215.57 L1644.57 1215.57 L1643.98 1215.57 L1643.39 1215.57 L1642.81 1215.57 L1642.22 1215.57 L1641.63 1215.57 L1641.05 1215.57 L1640.46 1215.57 L1639.88 1215.57 L1639.29 1215.57 L1638.7 1215.57 L1638.12 1215.57 L1637.53 1215.57 L1636.94 1215.57 L1636.36 1215.57 L1635.77 1215.57 L1635.18 1215.57 L1634.6 1215.57 L1634.01 1215.57 L1633.42 1215.57 L1632.84 1215.57 L1632.25 1215.57 L1631.67 1215.57 L1631.08 1215.57 L1630.49 1215.57 L1629.91 1215.57 L1629.32 1215.57 L1628.73 1215.57 L1628.15 1215.57 L1627.56 1215.57 L1626.97 1215.57 L1626.39 1215.57 L1625.8 1215.57 L1625.22 1215.57 L1624.63 1215.57 L1624.04 1215.57 L1623.46 1215.57 L1622.87 1215.57 L1622.28 1215.57 L1621.7 1215.57 L1621.11 1215.57 L1620.52 1215.57 L1619.94 1215.57 L1619.35 1215.57 L1618.76 1215.57 L1618.18 1215.57 L1617.59 1215.57 L1617.01 1215.57 L1616.42 1215.57 L1615.83 1215.57 L1615.25 1215.57 L1614.66 1215.57 L1614.07 1215.57 L1613.49 1215.57 L1612.9 1215.57 L1612.31 1215.57 L1611.73 1215.57 L1611.14 1215.57 L1610.55 1215.57 L1609.97 1215.57 L1609.38 1215.57 L1608.8 1215.57 L1608.21 1215.57 L1607.62 1215.57 L1607.04 1215.57 L1606.45 1215.57 L1605.86 1215.57 L1605.28 1215.57 L1604.69 1215.57 L1604.1 1215.57 L1603.52 1215.57 L1602.93 1215.57 L1602.34 1215.57 L1601.76 1215.57 L1601.17 1215.57 L1600.59 1215.57 L1600 1215.57 L1599.41 1215.57 L1598.83 1215.57 L1598.24 1215.57 L1597.65 1215.57 L1597.07 1215.57 L1596.48 1215.57 L1595.89 1215.57 L1595.31 1215.57 L1594.72 1215.57 L1594.14 1215.57 L1593.55 1215.57 L1592.96 1215.57 L1592.38 1215.57 L1591.79 1215.57 L1591.2 1215.57 L1590.62 1215.57 L1590.03 1215.57 L1589.44 1215.57 L1588.86 1215.57 L1588.27 1215.57 L1587.68 1215.57 L1587.1 1215.57 L1586.51 1215.57 L1585.93 1215.57 L1585.34 1215.57 L1584.75 1215.57 L1584.17 1215.57 L1583.58 1215.57 L1582.99 1215.57 L1582.41 1215.57 L1581.82 1215.57 L1581.23 1215.57 L1580.65 1215.57 L1580.06 1215.57 L1579.47 1215.57 L1578.89 1215.57 L1578.3 1215.57 L1577.72 1215.57 L1577.13 1215.57 L1576.54 1215.57 L1575.96 1215.57 L1575.37 1215.57 L1574.78 1215.57 L1574.2 1215.57 L1573.61 1215.57 L1573.02 1215.57 L1572.44 1215.57 L1571.85 1215.57 L1571.27 1215.57 L1570.68 1215.57 L1570.09 1215.57 L1569.51 1215.57 L1568.92 1215.57 L1568.33 1215.57 L1567.75 1215.57 L1567.16 1215.57 L1566.57 1215.57 L1565.99 1215.57 L1565.4 1215.57 L1564.81 1215.57 L1564.23 1215.57 L1563.64 1215.57 L1563.06 1215.57 L1562.47 1215.57 L1561.88 1215.57 L1561.3 1215.57 L1560.71 1215.57 L1560.12 1215.57 L1559.54 1215.57 L1558.95 1215.57 L1558.36 1215.57 L1557.78 1215.57 L1557.19 1215.57 L1556.6 1215.57 L1556.02 1215.57 L1555.43 1215.57 L1554.85 1215.57 L1554.26 1215.57 L1553.67 1215.57 L1553.09 1215.57 L1552.5 1215.57 L1551.91 1215.57 L1551.33 1215.57 L1550.74 1215.57 L1550.15 1215.57 L1549.57 1215.57 L1548.98 1215.57 L1548.4 1215.57 L1547.81 1215.57 L1547.22 1215.57 L1546.64 1215.57 L1546.05 1215.57 L1545.46 1215.57 L1544.88 1215.57 L1544.29 1215.57 L1543.7 1215.57 L1543.12 1215.57 L1542.53 1215.57 L1541.94 1215.57 L1541.36 1215.57 L1540.77 1215.57 L1540.19 1215.57 L1539.6 1215.57 L1539.01 1215.57 L1538.43 1215.57 L1537.84 1215.57 L1537.25 1215.57 L1536.67 1215.57 L1536.08 1215.57 L1535.49 1215.57 L1534.91 1215.57 L1534.32 1215.57 L1533.73 1215.57 L1533.15 1215.57 L1532.56 1215.57 L1531.98 1215.57 L1531.39 1215.57 L1530.8 1215.57 L1530.22 1215.57 L1529.63 1215.57 L1529.04 1215.57 L1528.46 1215.57 L1527.87 1215.57 L1527.28 1215.57 L1526.7 1215.57 L1526.11 1215.57 L1525.52 1215.57 L1524.94 1215.57 L1524.35 1215.57 L1523.77 1215.57 L1523.18 1215.57 L1522.59 1215.57 L1522.01 1215.57 L1521.42 1215.57 L1520.83 1215.57 L1520.25 1215.57 L1519.66 1215.57 L1519.07 1215.57 L1518.49 1215.57 L1517.9 1215.57 L1517.32 1215.57 L1516.73 1215.57 L1516.14 1215.57 L1515.56 1215.57 L1514.97 1215.57 L1514.38 1215.57 L1513.8 1215.57 L1513.21 1215.57 L1512.62 1215.57 L1512.04 1215.57 L1511.45 1215.57 L1510.86 1215.57 L1510.28 1215.57 L1509.69 1215.57 L1509.11 1215.57 L1508.52 1215.57 L1507.93 1215.57 L1507.35 1215.57 L1506.76 1215.57 L1506.17 1215.57 L1505.59 1215.57 L1505 1215.57 L1504.41 1215.57 L1503.83 1215.57 L1503.24 1215.57 L1502.65 1215.57 L1502.07 1215.57 L1501.48 1215.57 L1500.9 1215.57 L1500.31 1215.57 L1499.72 1215.57 L1499.14 1215.57 L1498.55 1215.57 L1497.96 1215.57 L1497.38 1215.57 L1496.79 1215.57 L1496.2 1215.57 L1495.62 1215.57 L1495.03 1215.57 L1494.45 1215.57 L1493.86 1215.57 L1493.27 1215.57 L1492.69 1215.57 L1492.1 1215.57 L1491.51 1215.57 L1490.93 1215.57 L1490.34 1215.57 L1489.75 1215.57 L1489.17 1215.57 L1488.58 1215.57 L1487.99 1215.57 L1487.41 1215.57 L1486.82 1215.57 L1486.24 1215.57 L1485.65 1215.57 L1485.06 1215.57 L1484.48 1215.57 L1483.89 1215.57 L1483.3 1215.57 L1482.72 1215.57 L1482.13 1215.57 L1481.54 1215.57 L1480.96 1215.57 L1480.37 1215.57 L1479.78 1215.57 L1479.2 1215.57 L1478.61 1215.57 L1478.03 1215.57 L1477.44 1215.57 L1476.85 1215.57 L1476.27 1215.57 L1475.68 1215.57 L1475.09 1215.57 L1474.51 1215.57 L1473.92 1215.57 L1473.33 1215.57 L1472.75 1215.57 L1472.16 1215.57 L1471.57 1215.57 L1470.99 1215.57 L1470.4 1215.57 L1469.82 1215.57 L1469.23 1215.57 L1468.64 1215.57 L1468.06 1215.57 L1467.47 1215.57 L1466.88 1215.57 L1466.3 1215.57 L1465.71 1215.57 L1465.12 1215.57 L1464.54 1215.57 L1463.95 1215.57 L1463.37 1215.57 L1462.78 1215.57 L1462.19 1215.57 L1461.61 1215.57 L1461.02 1215.57 L1460.43 1215.57 L1459.85 1215.57 L1459.26 1215.57 L1458.67 1215.57 L1458.09 1215.57 L1457.5 1215.57 L1456.91 1215.57 L1456.33 1215.57 L1455.74 1215.57 L1455.16 1215.57 L1454.57 1215.57 L1453.98 1215.57 L1453.4 1215.57 L1452.81 1215.57 L1452.22 1215.57 L1451.64 1215.57 L1451.05 1215.57 L1450.46 1215.57 L1449.88 1215.57 L1449.29 1215.57 L1448.7 1215.57 L1448.12 1215.57 L1447.53 1215.57 L1446.95 1215.57 L1446.36 1215.57 L1445.77 1215.57 L1445.19 1215.57 L1444.6 1215.57 L1444.01 1215.57 L1443.43 1215.57 L1442.84 1215.57 L1442.25 1215.57 L1441.67 1215.57 L1441.08 1215.57 L1440.5 1215.57 L1439.91 1215.57 L1439.32 1215.57 L1438.74 1215.57 L1438.15 1215.57 L1437.56 1215.57 L1436.98 1215.57 L1436.39 1215.57 L1435.8 1215.57 L1435.22 1215.57 L1434.63 1215.57 L1434.04 1215.57 L1433.46 1215.57 L1432.87 1215.57 L1432.29 1215.57 L1431.7 1215.57 L1431.11 1215.57 L1430.53 1215.57 L1429.94 1215.57 L1429.35 1215.57 L1428.77 1215.57 L1428.18 1215.57 L1427.59 1215.57 L1427.01 1215.57 L1426.42 1215.57 L1425.83 1215.57 L1425.25 1215.57 L1424.66 1215.57 L1424.08 1215.57 L1423.49 1215.57 L1422.9 1215.57 L1422.32 1215.57 L1421.73 1215.57 L1421.14 1215.57 L1420.56 1215.57 L1419.97 1215.57 L1419.38 1215.57 L1418.8 1215.57 L1418.21 1215.57 L1417.63 1215.57 L1417.04 1215.57 L1416.45 1215.57 L1415.87 1215.57 L1415.28 1215.57 L1414.69 1215.57 L1414.11 1215.57 L1413.52 1215.57 L1412.93 1215.57 L1412.35 1215.57 L1411.76 1215.57 L1411.17 1215.57 L1410.59 1215.57 L1410 1215.57 L1409.42 1215.57 L1408.83 1215.57 L1408.24 1215.57 L1407.66 1215.57 L1407.07 1215.57 L1406.48 1215.57 L1405.9 1215.57 L1405.31 1215.57 L1404.72 1215.57 L1404.14 1215.57 L1403.55 1215.57 L1402.96 1215.57 L1402.38 1215.57 L1401.79 1215.57 L1401.21 1215.57 L1400.62 1215.57 L1400.03 1215.57 L1399.45 1215.57 L1398.86 1215.57 L1398.27 1215.57 L1397.69 1215.57 L1397.1 1215.57 L1396.51 1215.57 L1395.93 1215.57 L1395.34 1215.57 L1394.75 1215.57 L1394.17 1215.57 L1393.58 1215.57 L1393 1215.57 L1392.41 1215.57 L1391.82 1215.57 L1391.24 1215.57 L1390.65 1215.57 L1390.06 1215.57 L1389.48 1215.57 L1388.89 1215.57 L1388.3 1215.57 L1387.72 1215.57 L1387.13 1215.57 L1386.55 1215.57 L1385.96 1215.57 L1385.37 1215.57 L1384.79 1215.57 L1384.2 1215.57 L1383.61 1215.57 L1383.03 1215.57 L1382.44 1215.57 L1381.85 1215.57 L1381.27 1215.57 L1380.68 1215.57 L1380.09 1215.57 L1379.51 1215.57 L1378.92 1215.57 L1378.34 1215.57 L1377.75 1215.57 L1377.16 1215.57 L1376.58 1215.57 L1375.99 1215.57 L1375.4 1215.57 L1374.82 1215.57 L1374.23 1215.57 L1373.64 1215.57 L1373.06 1215.57 L1372.47 1215.57 L1371.88 1215.57 L1371.3 1215.57 L1370.71 1215.57 L1370.13 1215.57 L1369.54 1215.57 L1368.95 1215.57 L1368.37 1215.57 L1367.78 1215.57 L1367.19 1215.57 L1366.61 1215.57 L1366.02 1215.57 L1365.43 1215.57 L1364.85 1215.57 L1364.26 1215.57 L1363.68 1215.57 L1363.09 1215.57 L1362.5 1215.57 L1361.92 1215.57 L1361.33 1215.57 L1360.74 1215.57 L1360.16 1215.57 L1359.57 1215.57 L1358.98 1215.57 L1358.4 1215.57 L1357.81 1215.57 L1357.22 1215.57 L1356.64 1215.57 L1356.05 1215.57 L1355.47 1215.57 L1354.88 1215.57 L1354.29 1215.57 L1353.71 1215.57 L1353.12 1215.57 L1352.53 1215.57 L1351.95 1215.57 L1351.36 1215.57 L1350.77 1215.57 L1350.19 1215.57 L1349.6 1215.57 L1349.01 1215.57 L1348.43 1215.57 L1347.84 1215.57 L1347.26 1215.57 L1346.67 1215.57 L1346.08 1215.57 L1345.5 1215.57 L1344.91 1215.57 L1344.32 1215.57 L1343.74 1215.57 L1343.15 1215.57 L1342.56 1215.57 L1341.98 1215.57 L1341.39 1215.57 L1340.8 1215.57 L1340.22 1215.57 L1339.63 1215.57 L1339.05 1215.57 L1338.46 1215.57 L1337.87 1215.57 L1337.29 1215.57 L1336.7 1215.57 L1336.11 1215.57 L1335.53 1215.57 L1334.94 1215.57 L1334.35 1215.57 L1333.77 1215.57 L1333.18 1215.57 L1332.6 1215.57 L1332.01 1215.57 L1331.42 1215.57 L1330.84 1215.57 L1330.25 1215.57 L1329.66 1215.57 L1329.08 1215.57 L1328.49 1215.57 L1327.9 1215.57 L1327.32 1215.57 L1326.73 1215.57 L1326.14 1215.57 L1325.56 1215.57 L1324.97 1215.57 L1324.39 1215.57 L1323.8 1215.57 L1323.21 1215.57 L1322.63 1215.57 L1322.04 1215.57 L1321.45 1215.57 L1320.87 1215.57 L1320.28 1215.57 L1319.69 1215.57 L1319.11 1215.57 L1318.52 1215.57 L1317.93 1215.57 L1317.35 1215.57 L1316.76 1215.57 L1316.18 1215.57 L1315.59 1215.57 L1315 1215.57 L1314.42 1215.57 L1313.83 1215.57 L1313.24 1215.57 L1312.66 1215.57 L1312.07 1215.57 L1311.48 1215.57 L1310.9 1215.57 L1310.31 1215.57 L1309.73 1215.57 L1309.14 1215.57 L1308.55 1215.57 L1307.97 1215.57 L1307.38 1215.57 L1306.79 1215.57 L1306.21 1215.57 L1305.62 1215.57 L1305.03 1215.57 L1304.45 1215.57 L1303.86 1215.57 L1303.27 1215.57 L1302.69 1215.57 L1302.1 1215.57 L1301.52 1215.57 L1300.93 1215.57 L1300.34 1215.57 L1299.76 1215.57 L1299.17 1215.57 L1298.58 1215.57 L1298 1215.57 L1297.41 1215.57 L1296.82 1215.57 L1296.24 1215.57 L1295.65 1215.57 L1295.06 1215.57 L1294.48 1215.57 L1293.89 1215.57 L1293.31 1215.57 L1292.72 1215.57 L1292.13 1215.57 L1291.55 1215.57 L1290.96 1215.57 L1290.37 1215.57 L1289.79 1215.57 L1289.2 1215.57 L1288.61 1215.57 L1288.03 1215.57 L1287.44 1215.57 L1286.86 1215.57 L1286.27 1215.57 L1285.68 1215.57 L1285.1 1215.57 L1284.51 1215.57 L1283.92 1215.57 L1283.34 1215.57 L1282.75 1215.57 L1282.16 1215.57 L1281.58 1215.57 L1280.99 1215.57 L1280.4 1215.57 L1279.82 1215.57 L1279.23 1215.57 L1278.65 1215.57 L1278.06 1215.57 L1277.47 1215.57 L1276.89 1215.57 L1276.3 1215.57 L1275.71 1215.57 L1275.13 1215.57 L1274.54 1215.57 L1273.95 1215.57 L1273.37 1215.57 L1272.78 1215.57 L1272.19 1215.57 L1271.61 1215.57 L1271.02 1215.57 L1270.44 1215.57 L1269.85 1215.57 L1269.26 1215.57 L1268.68 1215.57 L1268.09 1215.57 L1267.5 1215.57 L1266.92 1215.57 L1266.33 1215.57 L1265.74 1215.57 L1265.16 1215.57 L1264.57 1215.57 L1263.98 1215.57 L1263.4 1215.57 L1262.81 1215.57 L1262.23 1215.57 L1261.64 1215.57 L1261.05 1215.57 L1260.47 1215.57 L1259.88 1215.57 L1259.29 1215.57 L1258.71 1215.57 L1258.12 1215.57 L1257.53 1215.57 L1256.95 1215.57 L1256.36 1215.57 L1255.78 1215.57 L1255.19 1215.57 L1254.6 1215.57 L1254.02 1215.57 L1253.43 1215.57 L1252.84 1215.57 L1252.26 1215.57 L1251.67 1215.57 L1251.08 1215.57 L1250.5 1215.57 L1249.91 1215.57 L1249.32 1215.57 L1248.74 1215.57 L1248.15 1215.57 L1247.57 1215.57 L1246.98 1215.57 L1246.39 1215.57 L1245.81 1215.57 L1245.22 1215.57 L1244.63 1215.57 L1244.05 1215.57 L1243.46 1215.57 L1242.87 1215.57 L1242.29 1215.57 L1241.7 1215.57 L1241.11 1215.57 L1240.53 1215.57 L1239.94 1215.57 L1239.36 1215.57 L1238.77 1215.57 L1238.18 1215.57 L1237.6 1215.57 L1237.01 1215.57 L1236.42 1215.57 L1235.84 1215.57 L1235.25 1215.57 L1234.66 1215.57 L1234.08 1215.57 L1233.49 1215.57 L1232.91 1215.57 L1232.32 1215.57 L1231.73 1215.57 L1231.15 1215.57 L1230.56 1215.57 L1229.97 1215.57 L1229.39 1215.57 L1228.8 1215.57 L1228.21 1215.57 L1227.63 1215.57 L1227.04 1215.57 L1226.45 1215.57 L1225.87 1215.57 L1225.28 1215.57 L1224.7 1215.57 L1224.11 1215.57 L1223.52 1215.57 L1222.94 1215.57 L1222.35 1215.57 L1221.76 1215.57 L1221.18 1215.57 L1220.59 1215.57 L1220 1215.57 L1219.42 1215.57 L1218.83 1215.57 L1218.24 1215.57 L1217.66 1215.57 L1217.07 1215.57 L1216.49 1215.57 L1215.9 1215.57 L1215.31 1215.57 L1214.73 1215.57 L1214.14 1215.57 L1213.55 1215.57 L1212.97 1215.57 L1212.38 1215.57 L1211.79 1215.57 L1211.21 1215.57 L1210.62 1215.57 L1210.03 1215.57 L1209.45 1215.57 L1208.86 1215.57 L1208.28 1215.57 L1207.69 1215.57 L1207.1 1215.57 L1206.52 1215.57 L1205.93 1215.57 L1205.34 1215.57 L1204.76 1215.57 L1204.17 1215.57 L1203.58 1215.57 L1203 1215.57 L1202.41 1215.57 L1201.83 1215.57 L1201.24 1215.57 L1200.65 1215.57 L1200.07 1215.57 L1199.48 1215.57 L1198.89 1215.57 L1198.31 1215.57 L1197.72 1215.57 L1197.13 1215.57 L1196.55 1215.57 L1195.96 1215.57 L1195.37 1215.57 L1194.79 1215.57 L1194.2 1215.57 L1193.62 1215.57 L1193.03 1215.57 L1192.44 1215.57 L1191.86 1215.57 L1191.27 1215.57 L1190.68 1215.57 L1190.1 1215.57 L1189.51 1215.57 L1188.92 1215.57 L1188.34 1215.57 L1187.75 1215.57 L1187.16 1215.57 L1186.58 1215.57 L1185.99 1215.57 L1185.41 1215.57 L1184.82 1215.57 L1184.23 1215.57 L1183.65 1215.57 L1183.06 1215.57 L1182.47 1215.57 L1181.89 1215.57 L1181.3 1215.57 L1180.71 1215.57 L1180.13 1215.57 L1179.54 1215.57 L1178.96 1215.57 L1178.37 1215.57 L1177.78 1215.57 L1177.2 1215.57 L1176.61 1215.57 L1176.02 1215.57 L1175.44 1215.57 L1174.85 1215.57 L1174.26 1215.57 L1173.68 1215.57 L1173.09 1215.57 L1172.5 1215.57 L1171.92 1215.57 L1171.33 1215.57 L1170.75 1215.57 L1170.16 1215.57 L1169.57 1215.57 L1168.99 1215.57 L1168.4 1215.57 L1167.81 1215.57 L1167.23 1215.57 L1166.64 1215.57 L1166.05 1215.57 L1165.47 1215.57 L1164.88 1215.57 L1164.29 1215.57 L1163.71 1215.57 L1163.12 1215.57 L1162.54 1215.57 L1161.95 1215.57 L1161.36 1215.57 L1160.78 1215.57 L1160.19 1215.57 L1159.6 1215.57 L1159.02 1215.57 L1158.43 1215.57 L1157.84 1215.57 L1157.26 1215.57 L1156.67 1215.57 L1156.09 1215.57 L1155.5 1215.57 L1154.91 1215.57 L1154.33 1215.57 L1153.74 1215.57 L1153.15 1215.57 L1152.57 1215.57 L1151.98 1215.57 L1151.39 1215.57 L1150.81 1215.57 L1150.22 1215.57 L1149.63 1215.57 L1149.05 1215.57 L1148.46 1215.57 L1147.88 1215.57 L1147.29 1215.57 L1146.7 1215.57 L1146.12 1215.57 L1145.53 1215.57 L1144.94 1215.57 L1144.36 1215.57 L1143.77 1215.57 L1143.18 1215.57 L1142.6 1215.57 L1142.01 1215.57 L1141.42 1215.57 L1140.84 1215.57 L1140.25 1215.57 L1139.67 1215.57 L1139.08 1215.57 L1138.49 1215.57 L1137.91 1215.57 L1137.32 1215.57 L1136.73 1215.57 L1136.15 1215.57 L1135.56 1215.57 L1134.97 1215.57 L1134.39 1215.57 L1133.8 1215.57 L1133.21 1215.57 L1132.63 1215.57 L1132.04 1215.57 L1131.46 1215.57 L1130.87 1215.57 L1130.28 1215.57 L1129.7 1215.57 L1129.11 1215.57 L1128.52 1215.57 L1127.94 1215.57 L1127.35 1215.57 L1126.76 1215.57 L1126.18 1215.57 L1125.59 1215.57 L1125.01 1215.57 L1124.42 1215.57 L1123.83 1215.57 L1123.25 1215.57 L1122.66 1215.57 L1122.07 1215.57 L1121.49 1215.57 L1120.9 1215.57 L1120.31 1215.57 L1119.73 1215.57 L1119.14 1215.57 L1118.55 1215.57 L1117.97 1215.57 L1117.38 1215.57 L1116.8 1215.57 L1116.21 1215.57 L1115.62 1215.57 L1115.04 1215.57 L1114.45 1215.57 L1113.86 1215.57 L1113.28 1215.57 L1112.69 1215.57 L1112.1 1215.57 L1111.52 1215.57 L1110.93 1215.57 L1110.34 1215.57 L1109.76 1215.57 L1109.17 1215.57 L1108.59 1215.57 L1108 1215.57 L1107.41 1215.57 L1106.83 1215.57 L1106.24 1215.57 L1105.65 1215.57 L1105.07 1215.57 L1104.48 1215.57 L1103.89 1215.57 L1103.31 1215.57 L1102.72 1215.57 L1102.14 1215.57 L1101.55 1215.57 L1100.96 1215.57 L1100.38 1215.57 L1099.79 1215.57 L1099.2 1215.57 L1098.62 1215.57 L1098.03 1215.57 L1097.44 1215.57 L1096.86 1215.57 L1096.27 1215.57 L1095.68 1215.57 L1095.1 1215.57 L1094.51 1215.57 L1093.93 1215.57 L1093.34 1215.57 L1092.75 1215.57 L1092.17 1215.57 L1091.58 1215.57 L1090.99 1215.57 L1090.41 1215.57 L1089.82 1215.57 L1089.23 1215.57 L1088.65 1215.57 L1088.06 1215.57 L1087.47 1215.57 L1086.89 1215.57 L1086.3 1215.57 L1085.72 1215.57 L1085.13 1215.57 L1084.54 1215.57 L1083.96 1215.57 L1083.37 1215.57 L1082.78 1215.57 L1082.2 1215.57 L1081.61 1215.57 L1081.02 1215.57 L1080.44 1215.57 L1079.85 1215.57 L1079.26 1215.57 L1078.68 1215.57 L1078.09 1215.57 L1077.51 1215.57 L1076.92 1215.57 L1076.33 1215.57 L1075.75 1215.57 L1075.16 1215.57 L1074.57 1215.57 L1073.99 1215.57 L1073.4 1215.57 L1072.81 1215.57 L1072.23 1215.57 L1071.64 1215.57 L1071.06 1215.57 L1070.47 1215.57 L1069.88 1215.57 L1069.3 1215.57 L1068.71 1215.57 L1068.12 1215.57 L1067.54 1215.57 L1066.95 1215.57 L1066.36 1215.57 L1065.78 1215.57 L1065.19 1215.57 L1064.6 1215.57 L1064.02 1215.57 L1063.43 1215.57 L1062.85 1215.57 L1062.26 1215.57 L1061.67 1215.57 L1061.09 1215.57 L1060.5 1215.57 L1059.91 1215.57 L1059.33 1215.57 L1058.74 1215.57 L1058.15 1215.57 L1057.57 1215.57 L1056.98 1215.57 L1056.39 1215.57 L1055.81 1215.57 L1055.22 1215.57 L1054.64 1215.57 L1054.05 1215.57 L1053.46 1215.57 L1052.88 1215.57 L1052.29 1215.57 L1051.7 1215.57 L1051.12 1215.57 L1050.53 1215.57 L1049.94 1215.57 L1049.36 1215.57 L1048.77 1215.57 L1048.19 1215.57 L1047.6 1215.57 L1047.01 1215.57 L1046.43 1215.57 L1045.84 1215.57 L1045.25 1215.57 L1044.67 1215.57 L1044.08 1215.57 L1043.49 1215.57 L1042.91 1215.57 L1042.32 1215.57 L1041.73 1215.57 L1041.15 1215.57 L1040.56 1215.57 L1039.98 1215.57 L1039.39 1215.57 L1038.8 1215.57 L1038.22 1215.57 L1037.63 1215.57 L1037.04 1215.57 L1036.46 1215.57 L1035.87 1215.57 L1035.28 1215.57 L1034.7 1215.57 L1034.11 1215.57 L1033.52 1215.57 L1032.94 1215.57 L1032.35 1215.57 L1031.77 1215.57 L1031.18 1215.57 L1030.59 1215.57 L1030.01 1215.57 L1029.42 1215.57 L1028.83 1215.57 L1028.25 1215.57 L1027.66 1215.57 L1027.07 1215.57 L1026.49 1215.57 L1025.9 1215.57 L1025.32 1215.57 L1024.73 1215.57 L1024.14 1215.57 L1023.56 1215.57 L1022.97 1215.57 L1022.38 1215.57 L1021.8 1215.57 L1021.21 1215.57 L1020.62 1215.57 L1020.04 1215.57 L1019.45 1215.57 L1018.86 1215.57 L1018.28 1215.57 L1017.69 1215.57 L1017.11 1215.57 L1016.52 1215.57 L1015.93 1215.57 L1015.35 1215.57 L1014.76 1215.57 L1014.17 1215.57 L1013.59 1215.57 L1013 1215.57 L1012.41 1215.57 L1011.83 1215.57 L1011.24 1215.57 L1010.65 1215.57 L1010.07 1215.57 L1009.48 1215.57 L1008.9 1215.57 L1008.31 1215.57 L1007.72 1215.57 L1007.14 1215.57 L1006.55 1215.57 L1005.96 1215.57 L1005.38 1215.57 L1004.79 1215.57 L1004.2 1215.57 L1003.62 1215.57 L1003.03 1215.57 L1002.44 1215.57 L1001.86 1215.57 L1001.27 1215.57 L1000.69 1215.57 L1000.1 1215.57 L999.513 1215.57 L998.926 1215.57 L998.34 1215.57 L997.754 1215.57 L997.167 1215.57 L996.581 1215.57 L995.994 1215.57 L995.408 1215.57 L994.822 1215.57 L994.235 1215.57 L993.649 1215.57 L993.062 1215.57 L992.476 1215.57 L991.889 1215.57 L991.303 1215.57 L990.717 1215.57 L990.13 1215.57 L989.544 1215.57 L988.957 1215.57 L988.371 1215.57 L987.785 1215.57 L987.198 1215.57 L986.612 1215.57 L986.025 1215.57  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1215.91 986.612,1215.91 987.198,1215.91 987.785,1215.91 988.371,1215.91 988.957,1215.91 989.544,1215.91 990.13,1215.91 990.717,1215.91 991.303,1215.91 991.889,1215.91 992.476,1215.91 993.062,1215.91 993.649,1215.91 994.235,1215.91 994.822,1215.91 995.408,1215.91 995.994,1215.91 996.581,1215.91 997.167,1215.91 997.754,1215.91 998.34,1215.91 998.926,1215.91 999.513,1215.91 1000.1,1215.91 1000.69,1215.91 1001.27,1215.91 1001.86,1215.91 1002.44,1215.91 1003.03,1215.91 1003.62,1215.91 1004.2,1215.91 1004.79,1215.91 1005.38,1215.91 1005.96,1215.91 1006.55,1215.91 1007.14,1215.91 1007.72,1215.91 1008.31,1215.91 1008.9,1215.91 1009.48,1215.91 1010.07,1215.91 1010.65,1215.91 1011.24,1215.91 1011.83,1215.91 1012.41,1215.91 1013,1215.91 1013.59,1215.91 1014.17,1215.91 1014.76,1215.91 1015.35,1215.91 1015.93,1215.91 1016.52,1215.91 1017.11,1215.91 1017.69,1215.91 1018.28,1215.91 1018.86,1215.91 1019.45,1215.91 1020.04,1215.91 1020.62,1215.91 1021.21,1215.91 1021.8,1215.91 1022.38,1215.91 1022.97,1215.91 1023.56,1215.91 1024.14,1215.91 1024.73,1215.91 1025.32,1215.91 1025.9,1215.91 1026.49,1215.91 1027.07,1215.91 1027.66,1215.91 1028.25,1215.91 1028.83,1215.91 1029.42,1215.91 1030.01,1215.91 1030.59,1215.91 1031.18,1215.91 1031.77,1215.91 1032.35,1215.91 1032.94,1215.91 1033.52,1215.91 1034.11,1215.91 1034.7,1215.91 1035.28,1215.91 1035.87,1215.91 1036.46,1215.91 1037.04,1215.91 1037.63,1215.91 1038.22,1215.91 1038.8,1215.91 1039.39,1215.91 1039.98,1215.91 1040.56,1215.91 1041.15,1215.91 1041.73,1215.91 1042.32,1215.91 1042.91,1215.91 1043.49,1215.91 1044.08,1215.91 1044.67,1215.91 1045.25,1215.91 1045.84,1215.91 1046.43,1215.91 1047.01,1215.91 1047.6,1215.91 1048.19,1215.91 1048.77,1215.91 1049.36,1215.91 1049.94,1215.91 1050.53,1215.91 1051.12,1215.91 1051.7,1215.91 1052.29,1215.91 1052.88,1215.91 1053.46,1215.91 1054.05,1215.91 1054.64,1215.91 1055.22,1215.91 1055.81,1215.91 1056.39,1215.91 1056.98,1215.91 1057.57,1215.91 1058.15,1215.91 1058.74,1215.91 1059.33,1215.91 1059.91,1215.91 1060.5,1215.91 1061.09,1215.91 1061.67,1215.91 1062.26,1215.91 1062.85,1215.91 1063.43,1215.91 1064.02,1215.91 1064.6,1215.91 1065.19,1215.91 1065.78,1215.91 1066.36,1215.91 1066.95,1215.91 1067.54,1215.91 1068.12,1215.91 1068.71,1215.91 1069.3,1215.91 1069.88,1215.91 1070.47,1215.91 1071.06,1215.91 1071.64,1215.91 1072.23,1215.91 1072.81,1215.91 1073.4,1215.91 1073.99,1215.91 1074.57,1215.91 1075.16,1215.91 1075.75,1215.91 1076.33,1215.91 1076.92,1215.91 1077.51,1215.91 1078.09,1215.91 1078.68,1215.91 1079.26,1215.91 1079.85,1215.91 1080.44,1215.91 1081.02,1215.91 1081.61,1215.91 1082.2,1215.91 1082.78,1215.91 1083.37,1215.91 1083.96,1215.91 1084.54,1215.91 1085.13,1215.91 1085.72,1215.91 1086.3,1215.91 1086.89,1215.91 1087.47,1215.91 1088.06,1215.91 1088.65,1215.91 1089.23,1215.91 1089.82,1215.91 1090.41,1215.91 1090.99,1215.91 1091.58,1215.91 1092.17,1215.91 1092.75,1215.91 1093.34,1215.91 1093.93,1215.91 1094.51,1215.91 1095.1,1215.91 1095.68,1215.91 1096.27,1215.91 1096.86,1215.91 1097.44,1215.91 1098.03,1215.91 1098.62,1215.91 1099.2,1215.91 1099.79,1215.91 1100.38,1215.91 1100.96,1215.91 1101.55,1215.91 1102.14,1215.91 1102.72,1215.91 1103.31,1215.91 1103.89,1215.91 1104.48,1215.91 1105.07,1215.91 1105.65,1215.91 1106.24,1215.91 1106.83,1215.91 1107.41,1215.91 1108,1215.91 1108.59,1215.91 1109.17,1215.91 1109.76,1215.91 1110.34,1215.91 1110.93,1215.91 1111.52,1215.91 1112.1,1215.91 1112.69,1215.91 1113.28,1215.91 1113.86,1215.91 1114.45,1215.91 1115.04,1215.91 1115.62,1215.91 1116.21,1215.91 1116.8,1215.91 1117.38,1215.91 1117.97,1215.91 1118.55,1215.91 1119.14,1215.91 1119.73,1215.91 1120.31,1215.91 1120.9,1215.91 1121.49,1215.91 1122.07,1215.91 1122.66,1215.91 1123.25,1215.91 1123.83,1215.91 1124.42,1215.91 1125.01,1215.91 1125.59,1215.91 1126.18,1215.91 1126.76,1215.91 1127.35,1215.91 1127.94,1215.91 1128.52,1215.91 1129.11,1215.91 1129.7,1215.91 1130.28,1215.91 1130.87,1215.91 1131.46,1215.91 1132.04,1215.91 1132.63,1215.91 1133.21,1215.91 1133.8,1215.91 1134.39,1215.91 1134.97,1215.91 1135.56,1215.91 1136.15,1215.91 1136.73,1215.91 1137.32,1215.91 1137.91,1215.91 1138.49,1215.91 1139.08,1215.91 1139.67,1215.91 1140.25,1215.91 1140.84,1215.91 1141.42,1215.91 1142.01,1215.91 1142.6,1215.91 1143.18,1215.91 1143.77,1215.91 1144.36,1215.91 1144.94,1215.91 1145.53,1215.91 1146.12,1215.91 1146.7,1215.91 1147.29,1215.91 1147.88,1215.91 1148.46,1215.91 1149.05,1215.91 1149.63,1215.91 1150.22,1215.91 1150.81,1215.91 1151.39,1215.91 1151.98,1215.91 1152.57,1215.91 1153.15,1215.91 1153.74,1215.91 1154.33,1215.91 1154.91,1215.91 1155.5,1215.91 1156.09,1215.91 1156.67,1215.91 1157.26,1215.91 1157.84,1215.91 1158.43,1215.91 1159.02,1215.91 1159.6,1215.91 1160.19,1215.91 1160.78,1215.91 1161.36,1215.91 1161.95,1215.91 1162.54,1215.91 1163.12,1215.91 1163.71,1215.91 1164.29,1215.91 1164.88,1215.91 1165.47,1215.91 1166.05,1215.91 1166.64,1215.91 1167.23,1215.91 1167.81,1215.91 1168.4,1215.91 1168.99,1215.91 1169.57,1215.91 1170.16,1215.91 1170.75,1215.91 1171.33,1215.91 1171.92,1215.91 1172.5,1215.91 1173.09,1215.91 1173.68,1215.91 1174.26,1215.91 1174.85,1215.91 1175.44,1215.91 1176.02,1215.91 1176.61,1215.91 1177.2,1215.91 1177.78,1215.91 1178.37,1215.91 1178.96,1215.91 1179.54,1215.91 1180.13,1215.91 1180.71,1215.91 1181.3,1215.91 1181.89,1215.91 1182.47,1215.91 1183.06,1215.91 1183.65,1215.91 1184.23,1215.91 1184.82,1215.91 1185.41,1215.91 1185.99,1215.91 1186.58,1215.91 1187.16,1215.91 1187.75,1215.91 1188.34,1215.91 1188.92,1215.91 1189.51,1215.91 1190.1,1215.91 1190.68,1215.91 1191.27,1215.91 1191.86,1215.91 1192.44,1215.91 1193.03,1215.91 1193.62,1215.91 1194.2,1215.91 1194.79,1215.91 1195.37,1215.91 1195.96,1215.91 1196.55,1215.91 1197.13,1215.91 1197.72,1215.91 1198.31,1215.91 1198.89,1215.91 1199.48,1215.91 1200.07,1215.91 1200.65,1215.91 1201.24,1215.91 1201.83,1215.91 1202.41,1215.91 1203,1215.91 1203.58,1215.91 1204.17,1215.91 1204.76,1215.91 1205.34,1215.91 1205.93,1215.91 1206.52,1215.91 1207.1,1215.91 1207.69,1215.91 1208.28,1215.91 1208.86,1215.91 1209.45,1215.91 1210.03,1215.91 1210.62,1215.91 1211.21,1215.91 1211.79,1215.91 1212.38,1215.91 1212.97,1215.91 1213.55,1215.91 1214.14,1215.91 1214.73,1215.91 1215.31,1215.91 1215.9,1215.91 1216.49,1215.91 1217.07,1215.91 1217.66,1215.91 1218.24,1215.91 1218.83,1215.91 1219.42,1215.91 1220,1215.91 1220.59,1215.91 1221.18,1215.91 1221.76,1215.91 1222.35,1215.91 1222.94,1215.91 1223.52,1215.91 1224.11,1215.91 1224.7,1215.91 1225.28,1215.91 1225.87,1215.91 1226.45,1215.91 1227.04,1215.91 1227.63,1215.91 1228.21,1215.91 1228.8,1215.91 1229.39,1215.91 1229.97,1215.91 1230.56,1215.91 1231.15,1215.91 1231.73,1215.91 1232.32,1215.91 1232.91,1215.91 1233.49,1215.91 1234.08,1215.91 1234.66,1215.91 1235.25,1215.91 1235.84,1215.91 1236.42,1215.91 1237.01,1215.91 1237.6,1215.91 1238.18,1215.91 1238.77,1215.91 1239.36,1215.91 1239.94,1215.91 1240.53,1215.91 1241.11,1215.91 1241.7,1215.91 1242.29,1215.91 1242.87,1215.91 1243.46,1215.91 1244.05,1215.91 1244.63,1215.91 1245.22,1215.91 1245.81,1215.91 1246.39,1215.91 1246.98,1215.91 1247.57,1215.91 1248.15,1215.91 1248.74,1215.91 1249.32,1215.91 1249.91,1215.91 1250.5,1215.91 1251.08,1215.91 1251.67,1215.91 1252.26,1215.91 1252.84,1215.91 1253.43,1215.91 1254.02,1215.91 1254.6,1215.91 1255.19,1215.91 1255.78,1215.91 1256.36,1215.91 1256.95,1215.91 1257.53,1215.91 1258.12,1215.91 1258.71,1215.91 1259.29,1215.91 1259.88,1215.91 1260.47,1215.91 1261.05,1215.91 1261.64,1215.91 1262.23,1215.91 1262.81,1215.91 1263.4,1215.91 1263.98,1215.91 1264.57,1215.91 1265.16,1215.91 1265.74,1215.91 1266.33,1215.91 1266.92,1215.91 1267.5,1215.91 1268.09,1215.91 1268.68,1215.91 1269.26,1215.91 1269.85,1215.91 1270.44,1215.91 1271.02,1215.91 1271.61,1215.91 1272.19,1215.91 1272.78,1215.91 1273.37,1215.91 1273.95,1215.91 1274.54,1215.91 1275.13,1215.91 1275.71,1215.91 1276.3,1215.91 1276.89,1215.91 1277.47,1215.91 1278.06,1215.91 1278.65,1215.91 1279.23,1215.91 1279.82,1215.91 1280.4,1215.91 1280.99,1215.91 1281.58,1215.91 1282.16,1215.91 1282.75,1215.91 1283.34,1215.91 1283.92,1215.91 1284.51,1215.91 1285.1,1215.91 1285.68,1215.91 1286.27,1215.91 1286.86,1215.91 1287.44,1215.91 1288.03,1215.91 1288.61,1215.91 1289.2,1215.91 1289.79,1215.91 1290.37,1215.91 1290.96,1215.91 1291.55,1215.91 1292.13,1215.91 1292.72,1215.91 1293.31,1215.91 1293.89,1215.91 1294.48,1215.91 1295.06,1215.91 1295.65,1215.91 1296.24,1215.91 1296.82,1215.91 1297.41,1215.91 1298,1215.91 1298.58,1215.91 1299.17,1215.91 1299.76,1215.91 1300.34,1215.91 1300.93,1215.91 1301.52,1215.91 1302.1,1215.91 1302.69,1215.91 1303.27,1215.91 1303.86,1215.91 1304.45,1215.91 1305.03,1215.91 1305.62,1215.91 1306.21,1215.91 1306.79,1215.91 1307.38,1215.91 1307.97,1215.91 1308.55,1215.91 1309.14,1215.91 1309.73,1215.91 1310.31,1215.91 1310.9,1215.91 1311.48,1215.91 1312.07,1215.91 1312.66,1215.91 1313.24,1215.91 1313.83,1215.91 1314.42,1215.91 1315,1215.91 1315.59,1215.91 1316.18,1215.91 1316.76,1215.91 1317.35,1215.91 1317.93,1215.91 1318.52,1215.91 1319.11,1215.91 1319.69,1215.91 1320.28,1215.91 1320.87,1215.91 1321.45,1215.91 1322.04,1215.91 1322.63,1215.91 1323.21,1215.91 1323.8,1215.91 1324.39,1215.91 1324.97,1215.91 1325.56,1215.91 1326.14,1215.91 1326.73,1215.91 1327.32,1215.91 1327.9,1215.91 1328.49,1215.91 1329.08,1215.91 1329.66,1215.91 1330.25,1215.91 1330.84,1215.91 1331.42,1215.91 1332.01,1215.91 1332.6,1215.91 1333.18,1215.91 1333.77,1215.91 1334.35,1215.91 1334.94,1215.91 1335.53,1215.91 1336.11,1215.91 1336.7,1215.91 1337.29,1215.91 1337.87,1215.91 1338.46,1215.91 1339.05,1215.91 1339.63,1215.91 1340.22,1215.91 1340.8,1215.91 1341.39,1215.91 1341.98,1215.91 1342.56,1215.91 1343.15,1215.91 1343.74,1215.91 1344.32,1215.91 1344.91,1215.91 1345.5,1215.91 1346.08,1215.91 1346.67,1215.91 1347.26,1215.91 1347.84,1215.91 1348.43,1215.91 1349.01,1215.91 1349.6,1215.91 1350.19,1215.91 1350.77,1215.91 1351.36,1215.91 1351.95,1215.91 1352.53,1215.91 1353.12,1215.91 1353.71,1215.91 1354.29,1215.91 1354.88,1215.91 1355.47,1215.91 1356.05,1215.91 1356.64,1215.91 1357.22,1215.91 1357.81,1215.91 1358.4,1215.91 1358.98,1215.91 1359.57,1215.91 1360.16,1215.91 1360.74,1215.91 1361.33,1215.91 1361.92,1215.91 1362.5,1215.91 1363.09,1215.91 1363.68,1215.91 1364.26,1215.91 1364.85,1215.91 1365.43,1215.91 1366.02,1215.91 1366.61,1215.91 1367.19,1215.91 1367.78,1215.91 1368.37,1215.91 1368.95,1215.91 1369.54,1215.91 1370.13,1215.91 1370.71,1215.91 1371.3,1215.91 1371.88,1215.91 1372.47,1215.91 1373.06,1215.91 1373.64,1215.91 1374.23,1215.91 1374.82,1215.91 1375.4,1215.91 1375.99,1215.91 1376.58,1215.91 1377.16,1215.91 1377.75,1215.91 1378.34,1215.91 1378.92,1215.91 1379.51,1215.91 1380.09,1215.91 1380.68,1215.91 1381.27,1215.91 1381.85,1215.91 1382.44,1215.91 1383.03,1215.91 1383.61,1215.91 1384.2,1215.91 1384.79,1215.91 1385.37,1215.91 1385.96,1215.91 1386.55,1215.91 1387.13,1215.91 1387.72,1215.91 1388.3,1215.91 1388.89,1215.91 1389.48,1215.91 1390.06,1215.91 1390.65,1215.91 1391.24,1215.91 1391.82,1215.91 1392.41,1215.91 1393,1215.91 1393.58,1215.91 1394.17,1215.91 1394.75,1215.91 1395.34,1215.91 1395.93,1215.91 1396.51,1215.91 1397.1,1215.91 1397.69,1215.91 1398.27,1215.91 1398.86,1215.91 1399.45,1215.91 1400.03,1215.91 1400.62,1215.91 1401.21,1215.91 1401.79,1215.91 1402.38,1215.91 1402.96,1215.91 1403.55,1215.91 1404.14,1215.91 1404.72,1215.91 1405.31,1215.91 1405.9,1215.91 1406.48,1215.91 1407.07,1215.91 1407.66,1215.91 1408.24,1215.91 1408.83,1215.91 1409.42,1215.91 1410,1215.91 1410.59,1215.91 1411.17,1215.91 1411.76,1215.91 1412.35,1215.91 1412.93,1215.91 1413.52,1215.91 1414.11,1215.91 1414.69,1215.91 1415.28,1215.91 1415.87,1215.91 1416.45,1215.91 1417.04,1215.91 1417.63,1215.91 1418.21,1215.91 1418.8,1215.91 1419.38,1215.91 1419.97,1215.91 1420.56,1215.91 1421.14,1215.91 1421.73,1215.91 1422.32,1215.91 1422.9,1215.91 1423.49,1215.91 1424.08,1215.91 1424.66,1215.91 1425.25,1215.91 1425.83,1215.91 1426.42,1215.91 1427.01,1215.91 1427.59,1215.91 1428.18,1215.91 1428.77,1215.91 1429.35,1215.91 1429.94,1215.91 1430.53,1215.91 1431.11,1215.91 1431.7,1215.91 1432.29,1215.91 1432.87,1215.91 1433.46,1215.91 1434.04,1215.91 1434.63,1215.91 1435.22,1215.91 1435.8,1215.91 1436.39,1215.91 1436.98,1215.91 1437.56,1215.91 1438.15,1215.91 1438.74,1215.91 1439.32,1215.91 1439.91,1215.91 1440.5,1215.91 1441.08,1215.91 1441.67,1215.91 1442.25,1215.91 1442.84,1215.91 1443.43,1215.91 1444.01,1215.91 1444.6,1215.91 1445.19,1215.91 1445.77,1215.91 1446.36,1215.91 1446.95,1215.91 1447.53,1215.91 1448.12,1215.91 1448.7,1215.91 1449.29,1215.91 1449.88,1215.91 1450.46,1215.91 1451.05,1215.91 1451.64,1215.91 1452.22,1215.91 1452.81,1215.91 1453.4,1215.91 1453.98,1215.91 1454.57,1215.91 1455.16,1215.91 1455.74,1215.91 1456.33,1215.91 1456.91,1215.91 1457.5,1215.91 1458.09,1215.91 1458.67,1215.91 1459.26,1215.91 1459.85,1215.91 1460.43,1215.91 1461.02,1215.91 1461.61,1215.91 1462.19,1215.91 1462.78,1215.91 1463.37,1215.91 1463.95,1215.91 1464.54,1215.91 1465.12,1215.91 1465.71,1215.91 1466.3,1215.91 1466.88,1215.91 1467.47,1215.91 1468.06,1215.91 1468.64,1215.91 1469.23,1215.91 1469.82,1215.91 1470.4,1215.91 1470.99,1215.91 1471.57,1215.91 1472.16,1215.91 1472.75,1215.91 1473.33,1215.91 1473.92,1215.91 1474.51,1215.91 1475.09,1215.91 1475.68,1215.91 1476.27,1215.91 1476.85,1215.91 1477.44,1215.91 1478.03,1215.91 1478.61,1215.91 1479.2,1215.91 1479.78,1215.91 1480.37,1215.91 1480.96,1215.91 1481.54,1215.91 1482.13,1215.91 1482.72,1215.91 1483.3,1215.91 1483.89,1215.91 1484.48,1215.91 1485.06,1215.91 1485.65,1215.91 1486.24,1215.91 1486.82,1215.91 1487.41,1215.91 1487.99,1215.91 1488.58,1215.91 1489.17,1215.91 1489.75,1215.91 1490.34,1215.91 1490.93,1215.91 1491.51,1215.91 1492.1,1215.91 1492.69,1215.91 1493.27,1215.91 1493.86,1215.91 1494.45,1215.91 1495.03,1215.91 1495.62,1215.91 1496.2,1215.91 1496.79,1215.91 1497.38,1215.91 1497.96,1215.91 1498.55,1215.91 1499.14,1215.91 1499.72,1215.91 1500.31,1215.91 1500.9,1215.91 1501.48,1215.91 1502.07,1215.91 1502.65,1215.91 1503.24,1215.91 1503.83,1215.91 1504.41,1215.91 1505,1215.91 1505.59,1215.91 1506.17,1215.91 1506.76,1215.91 1507.35,1215.91 1507.93,1215.91 1508.52,1215.91 1509.11,1215.91 1509.69,1215.91 1510.28,1215.91 1510.86,1215.91 1511.45,1215.91 1512.04,1215.91 1512.62,1215.91 1513.21,1215.91 1513.8,1215.91 1514.38,1215.91 1514.97,1215.91 1515.56,1215.91 1516.14,1215.91 1516.73,1215.91 1517.32,1215.91 1517.9,1215.91 1518.49,1215.91 1519.07,1215.91 1519.66,1215.91 1520.25,1215.91 1520.83,1215.91 1521.42,1215.91 1522.01,1215.91 1522.59,1215.91 1523.18,1215.91 1523.77,1215.91 1524.35,1215.91 1524.94,1215.91 1525.52,1215.91 1526.11,1215.91 1526.7,1215.91 1527.28,1215.91 1527.87,1215.91 1528.46,1215.91 1529.04,1215.91 1529.63,1215.91 1530.22,1215.91 1530.8,1215.91 1531.39,1215.91 1531.98,1215.91 1532.56,1215.91 1533.15,1215.91 1533.73,1215.91 1534.32,1215.91 1534.91,1215.91 1535.49,1215.91 1536.08,1215.91 1536.67,1215.91 1537.25,1215.91 1537.84,1215.91 1538.43,1215.91 1539.01,1215.91 1539.6,1215.91 1540.19,1215.91 1540.77,1215.91 1541.36,1215.91 1541.94,1215.91 1542.53,1215.91 1543.12,1215.91 1543.7,1215.91 1544.29,1215.91 1544.88,1215.91 1545.46,1215.91 1546.05,1215.91 1546.64,1215.91 1547.22,1215.91 1547.81,1215.91 1548.4,1215.91 1548.98,1215.91 1549.57,1215.91 1550.15,1215.91 1550.74,1215.91 1551.33,1215.91 1551.91,1215.91 1552.5,1215.91 1553.09,1215.91 1553.67,1215.91 1554.26,1215.91 1554.85,1215.91 1555.43,1215.91 1556.02,1215.91 1556.6,1215.91 1557.19,1215.91 1557.78,1215.91 1558.36,1215.91 1558.95,1215.91 1559.54,1215.91 1560.12,1215.91 1560.71,1215.91 1561.3,1215.91 1561.88,1215.91 1562.47,1215.91 1563.06,1215.91 1563.64,1215.91 1564.23,1215.91 1564.81,1215.91 1565.4,1215.91 1565.99,1215.91 1566.57,1215.91 1567.16,1215.91 1567.75,1215.91 1568.33,1215.91 1568.92,1215.91 1569.51,1215.91 1570.09,1215.91 1570.68,1215.91 1571.27,1215.91 1571.85,1215.91 1572.44,1215.91 1573.02,1215.91 1573.61,1215.91 1574.2,1215.91 1574.78,1215.91 1575.37,1215.91 1575.96,1215.91 1576.54,1215.91 1577.13,1215.91 1577.72,1215.91 1578.3,1215.91 1578.89,1215.91 1579.47,1215.91 1580.06,1215.91 1580.65,1215.91 1581.23,1215.91 1581.82,1215.91 1582.41,1215.91 1582.99,1215.91 1583.58,1215.91 1584.17,1215.91 1584.75,1215.91 1585.34,1215.91 1585.93,1215.91 1586.51,1215.91 1587.1,1215.91 1587.68,1215.91 1588.27,1215.91 1588.86,1215.91 1589.44,1215.91 1590.03,1215.91 1590.62,1215.91 1591.2,1215.91 1591.79,1215.91 1592.38,1215.91 1592.96,1215.91 1593.55,1215.91 1594.14,1215.91 1594.72,1215.91 1595.31,1215.91 1595.89,1215.91 1596.48,1215.91 1597.07,1215.91 1597.65,1215.91 1598.24,1215.91 1598.83,1215.91 1599.41,1215.91 1600,1215.91 1600.59,1215.91 1601.17,1215.91 1601.76,1215.91 1602.34,1215.91 1602.93,1215.91 1603.52,1215.91 1604.1,1215.91 1604.69,1215.91 1605.28,1215.91 1605.86,1215.91 1606.45,1215.91 1607.04,1215.91 1607.62,1215.91 1608.21,1215.91 1608.8,1215.91 1609.38,1215.91 1609.97,1215.91 1610.55,1215.91 1611.14,1215.91 1611.73,1215.91 1612.31,1215.91 1612.9,1215.91 1613.49,1215.91 1614.07,1215.91 1614.66,1215.91 1615.25,1215.91 1615.83,1215.91 1616.42,1215.91 1617.01,1215.91 1617.59,1215.91 1618.18,1215.91 1618.76,1215.91 1619.35,1215.91 1619.94,1215.91 1620.52,1215.91 1621.11,1215.91 1621.7,1215.91 1622.28,1215.91 1622.87,1215.91 1623.46,1215.91 1624.04,1215.91 1624.63,1215.91 1625.22,1215.91 1625.8,1215.91 1626.39,1215.91 1626.97,1215.91 1627.56,1215.91 1628.15,1215.91 1628.73,1215.91 1629.32,1215.91 1629.91,1215.91 1630.49,1215.91 1631.08,1215.91 1631.67,1215.91 1632.25,1215.91 1632.84,1215.91 1633.42,1215.91 1634.01,1215.91 1634.6,1215.91 1635.18,1215.91 1635.77,1215.91 1636.36,1215.91 1636.94,1215.91 1637.53,1215.91 1638.12,1215.91 1638.7,1215.91 1639.29,1215.91 1639.88,1215.91 1640.46,1215.91 1641.05,1215.91 1641.63,1215.91 1642.22,1215.91 1642.81,1215.91 1643.39,1215.91 1643.98,1215.91 1644.57,1215.91 1645.15,1215.91 1645.74,1215.91 1646.33,1215.91 1646.91,1215.91 1647.5,1215.91 1648.09,1215.91 1648.67,1215.91 1649.26,1215.91 1649.84,1215.91 1650.43,1215.91 1651.02,1215.91 1651.6,1215.91 1652.19,1215.91 1652.78,1215.91 1653.36,1215.91 1653.95,1215.91 1654.54,1215.91 1655.12,1215.91 1655.71,1215.91 1656.29,1215.91 1656.88,1215.91 1657.47,1215.91 1658.05,1215.91 1658.64,1215.91 1659.23,1215.91 1659.81,1215.91 1660.4,1215.91 1660.99,1215.91 1661.57,1215.91 1662.16,1215.91 1662.75,1215.91 1663.33,1215.91 1663.92,1215.91 1664.5,1215.91 1665.09,1215.91 1665.68,1215.91 1666.26,1215.91 1666.85,1215.91 1667.44,1215.91 1668.02,1215.91 1668.61,1215.91 1669.2,1215.91 1669.78,1215.91 1670.37,1215.91 1670.96,1215.91 1671.54,1215.91 1672.13,1215.91 1672.71,1215.91 1673.3,1215.91 1673.89,1215.91 1674.47,1215.91 1675.06,1215.91 1675.65,1215.91 1676.23,1215.91 1676.82,1215.91 1677.41,1215.91 1677.99,1215.91 1678.58,1215.91 1679.17,1215.91 1679.75,1215.91 1680.34,1215.91 1680.92,1215.91 1681.51,1215.91 1682.1,1215.91 1682.68,1215.91 1683.27,1215.91 1683.86,1215.91 1684.44,1215.91 1685.03,1215.91 1685.62,1215.91 1686.2,1215.91 1686.79,1215.91 1687.37,1215.91 1687.96,1215.91 1688.55,1215.91 1689.13,1215.91 1689.72,1215.91 1690.31,1215.91 1690.89,1215.91 1691.48,1215.91 1692.07,1215.91 1692.65,1215.91 1693.24,1215.91 1693.83,1215.91 1694.41,1215.91 1695,1215.91 1695.58,1215.91 1696.17,1215.91 1696.76,1215.91 1697.34,1215.91 1697.93,1215.91 1698.52,1215.91 1699.1,1215.91 1699.69,1215.91 1700.28,1215.91 1700.86,1215.91 1701.45,1215.91 1702.04,1215.91 1702.62,1215.91 1703.21,1215.91 1703.79,1215.91 1704.38,1215.91 1704.97,1215.91 1705.55,1215.91 1706.14,1215.91 1706.73,1215.91 1707.31,1215.91 1707.9,1215.91 1708.49,1215.91 1709.07,1215.91 1709.66,1215.91 1710.24,1215.91 1710.83,1215.91 1711.42,1215.91 1712,1215.91 1712.59,1215.91 1713.18,1215.91 1713.76,1215.91 1714.35,1215.91 1714.94,1215.91 1715.52,1215.91 1716.11,1215.91 1716.7,1215.91 1717.28,1215.91 1717.87,1215.91 1718.45,1215.91 1719.04,1215.91 1719.63,1215.91 1720.21,1215.91 1720.8,1215.91 1721.39,1215.91 1721.97,1215.91 1722.56,1215.91 1723.15,1215.91 1723.73,1215.91 1724.32,1215.91 1724.91,1215.91 1725.49,1215.91 1726.08,1215.91 1726.66,1215.91 1727.25,1215.91 1727.84,1215.91 1728.42,1215.91 1729.01,1215.91 1729.6,1215.91 1730.18,1215.91 1730.77,1215.91 1731.36,1215.91 1731.94,1215.91 1732.53,1215.91 1733.11,1215.91 1733.7,1215.91 1734.29,1215.91 1734.87,1215.91 1735.46,1215.91 1736.05,1215.91 1736.63,1215.91 1737.22,1215.91 1737.81,1215.91 1738.39,1215.91 1738.98,1215.91 1739.57,1215.91 1740.15,1215.91 1740.74,1215.91 1741.32,1215.91 1741.91,1215.91 1742.5,1215.91 1743.08,1215.91 1743.67,1215.91 1744.26,1215.91 1744.84,1215.91 1745.43,1215.91 1746.02,1215.91 1746.6,1215.91 1747.19,1215.91 1747.78,1215.91 1748.36,1215.91 1748.95,1215.91 1749.53,1215.91 1750.12,1215.91 1750.71,1215.91 1751.29,1215.91 1751.88,1215.91 1752.47,1215.91 1753.05,1215.91 1753.64,1215.91 1754.23,1215.91 1754.81,1215.91 1755.4,1215.91 1755.99,1215.91 1756.57,1215.91 1757.16,1215.91 1757.74,1215.91 1758.33,1215.91 1758.92,1215.91 1759.5,1215.91 1760.09,1215.91 1760.68,1215.91 1761.26,1215.91 1761.85,1215.91 1762.44,1215.91 1763.02,1215.91 1763.61,1215.91 1764.19,1215.91 1764.78,1215.91 1765.37,1215.91 1765.95,1215.91 1766.54,1215.91 1767.13,1215.91 1767.71,1215.91 1768.3,1215.91 1768.89,1215.91 1769.47,1215.91 1770.06,1215.91 1770.65,1215.91 1771.23,1215.91 1771.82,1215.91 1772.4,1215.91 1772.99,1215.91 1773.58,1215.91 1774.16,1215.91 1774.75,1215.91 1775.34,1215.91 1775.92,1215.91 1776.51,1215.91 1777.1,1215.91 1777.68,1215.91 1778.27,1215.91 1778.86,1215.91 1779.44,1215.91 1780.03,1215.91 1780.61,1215.91 1781.2,1215.91 1781.79,1215.91 1782.37,1215.91 1782.96,1215.91 1783.55,1215.91 1784.13,1215.91 1784.72,1215.91 1785.31,1215.91 1785.89,1215.91 1786.48,1215.91 1787.06,1215.91 1787.65,1215.91 1788.24,1215.91 1788.82,1215.91 1789.41,1215.91 1790,1215.91 1790.58,1215.91 1791.17,1215.91 1791.76,1215.91 1792.34,1215.91 1792.93,1215.91 1793.52,1215.91 1794.1,1215.91 1794.69,1215.91 1795.27,1215.91 1795.86,1215.91 1796.45,1215.91 1797.03,1215.91 1797.62,1215.91 1798.21,1215.91 1798.79,1215.91 1799.38,1215.91 1799.97,1215.91 1800.55,1215.91 1801.14,1215.91 1801.73,1215.91 1802.31,1215.91 1802.9,1215.91 1803.48,1215.91 1804.07,1215.91 1804.66,1215.91 1805.24,1215.91 1805.83,1215.91 1806.42,1215.91 1807,1215.91 1807.59,1215.91 1808.18,1215.91 1808.76,1215.91 1809.35,1215.91 1809.94,1215.91 1810.52,1215.91 1811.11,1215.91 1811.69,1215.91 1812.28,1215.91 1812.87,1215.91 1813.45,1215.91 1814.04,1215.91 1814.63,1215.91 1815.21,1215.91 1815.8,1215.91 1816.39,1215.91 1816.97,1215.91 1817.56,1215.91 1818.14,1215.91 1818.73,1215.91 1819.32,1215.91 1819.9,1215.91 1820.49,1215.91 1821.08,1215.91 1821.66,1215.91 1822.25,1215.91 1822.84,1215.91 1823.42,1215.91 1824.01,1215.91 1824.6,1215.91 1825.18,1215.91 1825.77,1215.91 1826.35,1215.91 1826.94,1215.91 1827.53,1215.91 1828.11,1215.91 1828.7,1215.91 1829.29,1215.91 1829.87,1215.91 1830.46,1215.91 1831.05,1215.91 1831.63,1215.91 1832.22,1215.91 1832.81,1215.91 1833.39,1215.91 1833.98,1215.91 1834.56,1215.91 1835.15,1215.91 1835.74,1215.91 1836.32,1215.91 1836.91,1215.91 1837.5,1215.91 1838.08,1215.91 1838.67,1215.91 1839.26,1215.91 1839.84,1215.91 1840.43,1215.91 1841.01,1215.91 1841.6,1215.91 1842.19,1215.91 1842.77,1215.91 1843.36,1215.91 1843.95,1215.91 1844.53,1215.91 1845.12,1215.91 1845.71,1215.91 1846.29,1215.91 1846.88,1215.91 1847.47,1215.91 1848.05,1215.91 1848.64,1215.91 1849.22,1215.91 1849.81,1215.91 1850.4,1215.91 1850.98,1215.91 1851.57,1215.91 1852.16,1215.91 1852.74,1215.91 1853.33,1215.91 1853.92,1215.91 1854.5,1215.91 1855.09,1215.91 1855.68,1215.91 1856.26,1215.91 1856.85,1215.91 1857.43,1215.91 1858.02,1215.91 1858.61,1215.91 1859.19,1215.91 1859.78,1215.91 1860.37,1215.91 1860.95,1215.91 1861.54,1215.91 1862.13,1215.91 1862.71,1215.91 1863.3,1215.91 1863.88,1215.91 1864.47,1215.91 1865.06,1215.91 1865.64,1215.91 1866.23,1215.91 1866.82,1215.91 1867.4,1215.91 1867.99,1215.91 1868.58,1215.91 1869.16,1215.91 1869.75,1215.91 1870.34,1215.91 1870.92,1215.91 1871.51,1215.91 1872.09,1215.91 1872.68,1215.91 1873.27,1215.91 1873.85,1215.91 1874.44,1215.91 1875.03,1215.91 1875.61,1215.91 1876.2,1215.91 1876.79,1215.91 1877.37,1215.91 1877.96,1215.91 1878.55,1215.91 1879.13,1215.91 1879.72,1215.91 1880.3,1215.91 1880.89,1215.91 1881.48,1215.91 1882.06,1215.91 1882.65,1215.91 1883.24,1215.91 1883.82,1215.91 1884.41,1215.91 1885,1215.91 1885.58,1215.91 1886.17,1215.91 1886.76,1215.91 1887.34,1215.91 1887.93,1215.91 1888.51,1215.91 1889.1,1215.91 1889.69,1215.91 1890.27,1215.91 1890.86,1215.91 1891.45,1215.91 1892.03,1215.91 1892.62,1215.91 1893.21,1215.91 1893.79,1215.91 1894.38,1215.91 1894.96,1215.91 1895.55,1215.91 1896.14,1215.91 1896.72,1215.91 1897.31,1215.91 1897.9,1215.91 1898.48,1215.91 1899.07,1215.91 1899.66,1215.91 1900.24,1215.91 1900.83,1215.91 1901.42,1215.91 1902,1215.91 1902.59,1215.91 1903.17,1215.91 1903.76,1215.91 1904.35,1215.91 1904.93,1215.91 1905.52,1215.91 1906.11,1215.91 1906.69,1215.91 1907.28,1215.91 1907.87,1215.91 1908.45,1215.91 1909.04,1215.91 1909.63,1215.91 1910.21,1215.91 1910.8,1215.91 1911.38,1215.91 1911.97,1215.91 1912.56,1215.91 1913.14,1215.91 1913.73,1215.91 1914.32,1215.91 1914.9,1215.91 1915.49,1215.91 1916.08,1215.91 1916.66,1215.91 1917.25,1215.91 1917.83,1215.91 1918.42,1215.91 1919.01,1215.91 1919.59,1215.91 1920.18,1215.91 1920.77,1215.91 1921.35,1215.91 1921.94,1215.91 1922.53,1215.91 1923.11,1215.91 1923.7,1215.91 1924.29,1215.91 1924.87,1215.91 1925.46,1215.91 1926.04,1215.91 1926.63,1215.91 1927.22,1215.91 1927.8,1215.91 1928.39,1215.91 1928.98,1215.91 1929.56,1215.91 1930.15,1215.91 1930.74,1215.91 1931.32,1215.91 1931.91,1215.91 1932.5,1215.91 1933.08,1215.91 1933.67,1215.91 1934.25,1215.91 1934.84,1215.91 1935.43,1215.91 1936.01,1215.91 1936.6,1215.91 1937.19,1215.91 1937.77,1215.91 1938.36,1215.91 1938.95,1215.91 1939.53,1215.91 1940.12,1215.91 1940.71,1215.91 1941.29,1215.91 1941.88,1215.91 1942.46,1215.91 1943.05,1215.91 1943.64,1215.91 1944.22,1215.91 1944.81,1215.91 1945.4,1215.91 1945.98,1215.91 1946.57,1215.91 1947.16,1215.91 1947.74,1215.91 1948.33,1215.91 1948.91,1215.91 1949.5,1215.91 1950.09,1215.91 1950.67,1215.91 1951.26,1215.91 1951.85,1215.91 1952.43,1215.91 1953.02,1215.91 1953.61,1215.91 1954.19,1215.91 1954.78,1215.91 1955.37,1215.91 1955.95,1215.91 1956.54,1215.91 1957.12,1215.91 1957.71,1215.91 1958.3,1215.91 1958.88,1215.91 1959.47,1215.91 1960.06,1215.91 1960.64,1215.91 1961.23,1215.91 1961.82,1215.91 1962.4,1215.91 1962.99,1215.91 1963.58,1215.91 1964.16,1215.91 1964.75,1215.91 1965.33,1215.91 1965.92,1215.91 1966.51,1215.91 1967.09,1215.91 1967.68,1215.91 1968.27,1215.91 1968.85,1215.91 1969.44,1215.91 1970.03,1215.91 1970.61,1215.91 1971.2,1215.91 1971.78,1215.91 1972.37,1215.91 1972.96,1215.91 1973.54,1215.91 1974.13,1215.91 1974.72,1215.91 1975.3,1215.91 1975.89,1215.91 1976.48,1215.91 1977.06,1215.91 1977.65,1215.91 1978.24,1215.91 1978.82,1215.91 1979.41,1215.91 1979.99,1215.91 1980.58,1215.91 1981.17,1215.91 1981.75,1215.91 1982.34,1215.91 1982.93,1215.91 1983.51,1215.91 1984.1,1215.91 1984.69,1215.91 1985.27,1215.91 1985.86,1215.91 1986.45,1215.91 1987.03,1215.91 1987.62,1215.91 1988.2,1215.91 1988.79,1215.91 1989.38,1215.91 1989.96,1215.91 1990.55,1215.91 1991.14,1215.91 1991.72,1215.91 1992.31,1215.91 1992.9,1215.91 1993.48,1215.91 1994.07,1215.91 1994.65,1215.91 1995.24,1215.91 1995.83,1215.91 1996.41,1215.91 1997,1215.91 1997.59,1215.91 1998.17,1215.91 1998.76,1215.91 1999.35,1215.91 1999.93,1215.91 2000.52,1215.91 2001.11,1215.91 2001.69,1215.91 2002.28,1215.91 2002.86,1215.91 2003.45,1215.91 2004.04,1215.91 2004.62,1215.91 2005.21,1215.91 2005.8,1215.91 2006.38,1215.91 2006.97,1215.91 2007.56,1215.91 2008.14,1215.91 2008.73,1215.91 2009.32,1215.91 2009.9,1215.91 2010.49,1215.91 2011.07,1215.91 2011.66,1215.91 2012.25,1215.91 2012.83,1215.91 2013.42,1215.91 2014.01,1215.91 2014.59,1215.91 2015.18,1215.91 2015.77,1215.91 2016.35,1215.91 2016.94,1215.91 2017.53,1215.91 2018.11,1215.91 2018.7,1215.91 2019.28,1215.91 2019.87,1215.91 2020.46,1215.91 2021.04,1215.91 2021.63,1215.91 2022.22,1215.91 2022.8,1215.91 2023.39,1215.91 2023.98,1215.91 2024.56,1215.91 2025.15,1215.91 2025.73,1215.91 2026.32,1215.91 2026.91,1215.91 2027.49,1215.91 2028.08,1215.91 2028.67,1215.91 2029.25,1215.91 2029.84,1215.91 2030.43,1215.91 2031.01,1215.91 2031.6,1215.91 2032.19,1215.91 2032.77,1215.91 2033.36,1215.91 2033.94,1215.91 2034.53,1215.91 2035.12,1215.91 2035.7,1215.91 2036.29,1215.91 2036.88,1215.91 2037.46,1215.91 2038.05,1215.91 2038.64,1215.91 2039.22,1215.91 2039.81,1215.91 2040.4,1215.91 2040.98,1215.91 2041.57,1215.91 2042.15,1215.91 2042.74,1215.91 2043.33,1215.91 2043.91,1215.91 2044.5,1215.91 2045.09,1215.91 2045.67,1215.91 2046.26,1215.91 2046.85,1215.91 2047.43,1215.91 2048.02,1215.91 2048.6,1215.91 2049.19,1215.91 2049.78,1215.91 2050.36,1215.91 2050.95,1215.91 2051.54,1215.91 2052.12,1215.91 2052.71,1215.91 2053.3,1215.91 2053.88,1215.91 2054.47,1215.91 2055.06,1215.91 2055.64,1215.91 2056.23,1215.91 2056.81,1215.91 2057.4,1215.91 2057.99,1215.91 2058.57,1215.91 2059.16,1215.91 2059.75,1215.91 2060.33,1215.91 2060.92,1215.91 2061.51,1215.91 2062.09,1215.91 2062.68,1215.91 2063.27,1215.91 2063.85,1215.91 2064.44,1215.91 2065.02,1215.91 2065.61,1215.91 2066.2,1215.91 2066.78,1215.91 2067.37,1215.91 2067.96,1215.91 2068.54,1215.91 2069.13,1215.91 2069.72,1215.91 2070.3,1215.91 2070.89,1215.91 2071.48,1215.91 2072.06,1215.91 2072.65,1215.91 2073.23,1215.91 2073.82,1215.91 2074.41,1215.91 2074.99,1215.91 2075.58,1215.91 2076.17,1215.91 2076.75,1215.91 2077.34,1215.91 2077.93,1215.91 2078.51,1215.91 2079.1,1215.91 2079.68,1215.91 2080.27,1215.91 2080.86,1215.91 2081.44,1215.91 2082.03,1215.91 2082.62,1215.91 2083.2,1215.91 2083.79,1215.91 2084.38,1215.91 2084.96,1215.91 2085.55,1215.91 2086.14,1215.91 2086.72,1215.91 2087.31,1215.91 2087.89,1215.91 2088.48,1215.91 2089.07,1215.91 2089.65,1215.91 2090.24,1215.91 2090.83,1215.91 2091.41,1215.91 2092,1215.91 2092.59,1215.91 2093.17,1215.91 2093.76,1215.91 2094.35,1215.91 2094.93,1215.91 2095.52,1215.91 2096.1,1215.91 2096.69,1215.91 2097.28,1215.91 2097.86,1215.91 2098.45,1215.91 2099.04,1215.91 2099.62,1215.91 2100.21,1215.91 2100.8,1215.91 2101.38,1215.91 2101.97,1215.91 2102.55,1215.91 2103.14,1215.91 2103.73,1215.91 2104.31,1215.91 2104.9,1215.91 2105.49,1215.91 2106.07,1215.91 2106.66,1215.91 2107.25,1215.91 2107.83,1215.91 2108.42,1215.91 2109.01,1215.91 2109.59,1215.91 2110.18,1215.91 2110.76,1215.91 2111.35,1215.91 2111.94,1215.91 2112.52,1215.91 2113.11,1215.91 2113.7,1215.91 2114.28,1215.91 2114.87,1215.91 2115.46,1215.91 2116.04,1215.91 2116.63,1215.91 2117.22,1215.91 2117.8,1215.91 2118.39,1215.91 2118.97,1215.91 2119.56,1215.91 2120.15,1215.91 2120.73,1215.91 2121.32,1215.91 2121.91,1215.91 2122.49,1215.91 2123.08,1215.91 2123.67,1215.91 2124.25,1215.91 2124.84,1215.91 2125.42,1215.91 2126.01,1215.91 2126.6,1215.91 2127.18,1215.91 2127.77,1215.91 2128.36,1215.91 2128.94,1215.91 2129.53,1215.91 2130.12,1215.91 2130.7,1215.91 2131.29,1215.91 2131.88,1215.91 2132.46,1215.91 2133.05,1215.91 2133.63,1215.91 2134.22,1215.91 2134.81,1215.91 2135.39,1215.91 2135.98,1215.91 2136.57,1215.91 2137.15,1215.91 2137.74,1215.91 2138.33,1215.91 2138.91,1215.91 2139.5,1215.91 2140.09,1215.91 2140.67,1215.91 2141.26,1215.91 2141.84,1215.91 2142.43,1215.91 2143.02,1215.91 2143.6,1215.91 2144.19,1215.91 2144.78,1215.91 2145.36,1215.91 2145.95,1215.91 2146.54,1215.91 2147.12,1215.91 2147.71,1215.91 2148.3,1215.91 2148.88,1215.91 2149.47,1215.91 2150.05,1215.91 2150.64,1215.91 2151.23,1215.91 2151.81,1215.91 2152.4,1215.91 2152.99,1215.91 2153.57,1215.91 2154.16,1215.91 2154.75,1215.91 2155.33,1215.91 2155.92,1215.91 2156.5,1215.91 2157.09,1215.91 2157.68,1215.91 2158.26,1215.91 \"/>\n<path clip-path=\"url(#clip122)\" d=\"M986.025 1215.69 L986.612 1215.69 L987.198 1215.69 L987.785 1215.69 L988.371 1215.69 L988.957 1215.69 L989.544 1215.69 L990.13 1215.69 L990.717 1215.69 L991.303 1215.69 L991.889 1215.69 L992.476 1215.69 L993.062 1215.69 L993.649 1215.69 L994.235 1215.69 L994.822 1215.69 L995.408 1215.69 L995.994 1215.69 L996.581 1215.69 L997.167 1215.69 L997.754 1215.69 L998.34 1215.69 L998.926 1215.69 L999.513 1215.69 L1000.1 1215.69 L1000.69 1215.69 L1001.27 1215.69 L1001.86 1215.69 L1002.44 1215.69 L1003.03 1215.69 L1003.62 1215.69 L1004.2 1215.69 L1004.79 1215.69 L1005.38 1215.69 L1005.96 1215.69 L1006.55 1215.69 L1007.14 1215.69 L1007.72 1215.69 L1008.31 1215.69 L1008.9 1215.69 L1009.48 1215.69 L1010.07 1215.69 L1010.65 1215.69 L1011.24 1215.69 L1011.83 1215.69 L1012.41 1215.69 L1013 1215.69 L1013.59 1215.69 L1014.17 1215.69 L1014.76 1215.69 L1015.35 1215.69 L1015.93 1215.69 L1016.52 1215.69 L1017.11 1215.69 L1017.69 1215.69 L1018.28 1215.69 L1018.86 1215.69 L1019.45 1215.69 L1020.04 1215.69 L1020.62 1215.69 L1021.21 1215.69 L1021.8 1215.69 L1022.38 1215.69 L1022.97 1215.69 L1023.56 1215.69 L1024.14 1215.69 L1024.73 1215.69 L1025.32 1215.69 L1025.9 1215.69 L1026.49 1215.69 L1027.07 1215.69 L1027.66 1215.69 L1028.25 1215.69 L1028.83 1215.69 L1029.42 1215.69 L1030.01 1215.69 L1030.59 1215.69 L1031.18 1215.69 L1031.77 1215.69 L1032.35 1215.69 L1032.94 1215.69 L1033.52 1215.69 L1034.11 1215.69 L1034.7 1215.69 L1035.28 1215.69 L1035.87 1215.69 L1036.46 1215.69 L1037.04 1215.69 L1037.63 1215.69 L1038.22 1215.69 L1038.8 1215.69 L1039.39 1215.69 L1039.98 1215.69 L1040.56 1215.69 L1041.15 1215.69 L1041.73 1215.69 L1042.32 1215.69 L1042.91 1215.69 L1043.49 1215.69 L1044.08 1215.69 L1044.67 1215.69 L1045.25 1215.69 L1045.84 1215.69 L1046.43 1215.69 L1047.01 1215.69 L1047.6 1215.69 L1048.19 1215.69 L1048.77 1215.69 L1049.36 1215.69 L1049.94 1215.69 L1050.53 1215.69 L1051.12 1215.69 L1051.7 1215.69 L1052.29 1215.69 L1052.88 1215.69 L1053.46 1215.69 L1054.05 1215.69 L1054.64 1215.69 L1055.22 1215.69 L1055.81 1215.69 L1056.39 1215.69 L1056.98 1215.69 L1057.57 1215.69 L1058.15 1215.69 L1058.74 1215.69 L1059.33 1215.69 L1059.91 1215.69 L1060.5 1215.69 L1061.09 1215.69 L1061.67 1215.69 L1062.26 1215.69 L1062.85 1215.69 L1063.43 1215.69 L1064.02 1215.69 L1064.6 1215.69 L1065.19 1215.69 L1065.78 1215.69 L1066.36 1215.69 L1066.95 1215.69 L1067.54 1215.69 L1068.12 1215.69 L1068.71 1215.69 L1069.3 1215.69 L1069.88 1215.69 L1070.47 1215.69 L1071.06 1215.69 L1071.64 1215.69 L1072.23 1215.69 L1072.81 1215.69 L1073.4 1215.69 L1073.99 1215.69 L1074.57 1215.69 L1075.16 1215.69 L1075.75 1215.69 L1076.33 1215.69 L1076.92 1215.69 L1077.51 1215.69 L1078.09 1215.69 L1078.68 1215.69 L1079.26 1215.69 L1079.85 1215.69 L1080.44 1215.69 L1081.02 1215.69 L1081.61 1215.69 L1082.2 1215.69 L1082.78 1215.69 L1083.37 1215.69 L1083.96 1215.69 L1084.54 1215.69 L1085.13 1215.69 L1085.72 1215.69 L1086.3 1215.69 L1086.89 1215.69 L1087.47 1215.69 L1088.06 1215.69 L1088.65 1215.69 L1089.23 1215.69 L1089.82 1215.69 L1090.41 1215.69 L1090.99 1215.69 L1091.58 1215.69 L1092.17 1215.69 L1092.75 1215.69 L1093.34 1215.69 L1093.93 1215.69 L1094.51 1215.69 L1095.1 1215.69 L1095.68 1215.69 L1096.27 1215.69 L1096.86 1215.69 L1097.44 1215.69 L1098.03 1215.69 L1098.62 1215.69 L1099.2 1215.69 L1099.79 1215.69 L1100.38 1215.69 L1100.96 1215.69 L1101.55 1215.69 L1102.14 1215.69 L1102.72 1215.69 L1103.31 1215.69 L1103.89 1215.69 L1104.48 1215.69 L1105.07 1215.69 L1105.65 1215.69 L1106.24 1215.69 L1106.83 1215.69 L1107.41 1215.69 L1108 1215.69 L1108.59 1215.69 L1109.17 1215.69 L1109.76 1215.69 L1110.34 1215.69 L1110.93 1215.69 L1111.52 1215.69 L1112.1 1215.69 L1112.69 1215.69 L1113.28 1215.69 L1113.86 1215.69 L1114.45 1215.69 L1115.04 1215.69 L1115.62 1215.69 L1116.21 1215.69 L1116.8 1215.69 L1117.38 1215.69 L1117.97 1215.69 L1118.55 1215.69 L1119.14 1215.69 L1119.73 1215.69 L1120.31 1215.69 L1120.9 1215.69 L1121.49 1215.69 L1122.07 1215.69 L1122.66 1215.69 L1123.25 1215.69 L1123.83 1215.69 L1124.42 1215.69 L1125.01 1215.69 L1125.59 1215.69 L1126.18 1215.69 L1126.76 1215.69 L1127.35 1215.69 L1127.94 1215.69 L1128.52 1215.69 L1129.11 1215.69 L1129.7 1215.69 L1130.28 1215.69 L1130.87 1215.69 L1131.46 1215.69 L1132.04 1215.69 L1132.63 1215.69 L1133.21 1215.69 L1133.8 1215.69 L1134.39 1215.69 L1134.97 1215.69 L1135.56 1215.69 L1136.15 1215.69 L1136.73 1215.69 L1137.32 1215.69 L1137.91 1215.69 L1138.49 1215.69 L1139.08 1215.69 L1139.67 1215.69 L1140.25 1215.69 L1140.84 1215.69 L1141.42 1215.69 L1142.01 1215.69 L1142.6 1215.69 L1143.18 1215.69 L1143.77 1215.69 L1144.36 1215.69 L1144.94 1215.69 L1145.53 1215.69 L1146.12 1215.69 L1146.7 1215.69 L1147.29 1215.69 L1147.88 1215.69 L1148.46 1215.69 L1149.05 1215.69 L1149.63 1215.69 L1150.22 1215.69 L1150.81 1215.69 L1151.39 1215.69 L1151.98 1215.69 L1152.57 1215.69 L1153.15 1215.69 L1153.74 1215.69 L1154.33 1215.69 L1154.91 1215.69 L1155.5 1215.69 L1156.09 1215.69 L1156.67 1215.69 L1157.26 1215.69 L1157.84 1215.69 L1158.43 1215.69 L1159.02 1215.69 L1159.6 1215.69 L1160.19 1215.69 L1160.78 1215.69 L1161.36 1215.69 L1161.95 1215.69 L1162.54 1215.69 L1163.12 1215.69 L1163.71 1215.69 L1164.29 1215.69 L1164.88 1215.69 L1165.47 1215.69 L1166.05 1215.69 L1166.64 1215.69 L1167.23 1215.69 L1167.81 1215.69 L1168.4 1215.69 L1168.99 1215.69 L1169.57 1215.69 L1170.16 1215.69 L1170.75 1215.69 L1171.33 1215.69 L1171.92 1215.69 L1172.5 1215.69 L1173.09 1215.69 L1173.68 1215.69 L1174.26 1215.69 L1174.85 1215.69 L1175.44 1215.69 L1176.02 1215.69 L1176.61 1215.69 L1177.2 1215.69 L1177.78 1215.69 L1178.37 1215.69 L1178.96 1215.69 L1179.54 1215.69 L1180.13 1215.69 L1180.71 1215.69 L1181.3 1215.69 L1181.89 1215.69 L1182.47 1215.69 L1183.06 1215.69 L1183.65 1215.69 L1184.23 1215.69 L1184.82 1215.69 L1185.41 1215.69 L1185.99 1215.69 L1186.58 1215.69 L1187.16 1215.69 L1187.75 1215.69 L1188.34 1215.69 L1188.92 1215.69 L1189.51 1215.69 L1190.1 1215.69 L1190.68 1215.69 L1191.27 1215.69 L1191.86 1215.69 L1192.44 1215.69 L1193.03 1215.69 L1193.62 1215.69 L1194.2 1215.69 L1194.79 1215.69 L1195.37 1215.69 L1195.96 1215.69 L1196.55 1215.69 L1197.13 1215.69 L1197.72 1215.69 L1198.31 1215.69 L1198.89 1215.69 L1199.48 1215.69 L1200.07 1215.69 L1200.65 1215.69 L1201.24 1215.69 L1201.83 1215.69 L1202.41 1215.69 L1203 1215.69 L1203.58 1215.69 L1204.17 1215.69 L1204.76 1215.69 L1205.34 1215.69 L1205.93 1215.69 L1206.52 1215.69 L1207.1 1215.69 L1207.69 1215.69 L1208.28 1215.69 L1208.86 1215.69 L1209.45 1215.69 L1210.03 1215.69 L1210.62 1215.69 L1211.21 1215.69 L1211.79 1215.69 L1212.38 1215.69 L1212.97 1215.69 L1213.55 1215.69 L1214.14 1215.69 L1214.73 1215.69 L1215.31 1215.69 L1215.9 1215.69 L1216.49 1215.69 L1217.07 1215.69 L1217.66 1215.69 L1218.24 1215.69 L1218.83 1215.69 L1219.42 1215.69 L1220 1215.69 L1220.59 1215.69 L1221.18 1215.69 L1221.76 1215.69 L1222.35 1215.69 L1222.94 1215.69 L1223.52 1215.69 L1224.11 1215.69 L1224.7 1215.69 L1225.28 1215.69 L1225.87 1215.69 L1226.45 1215.69 L1227.04 1215.69 L1227.63 1215.69 L1228.21 1215.69 L1228.8 1215.69 L1229.39 1215.69 L1229.97 1215.69 L1230.56 1215.69 L1231.15 1215.69 L1231.73 1215.69 L1232.32 1215.69 L1232.91 1215.69 L1233.49 1215.69 L1234.08 1215.69 L1234.66 1215.69 L1235.25 1215.69 L1235.84 1215.69 L1236.42 1215.69 L1237.01 1215.69 L1237.6 1215.69 L1238.18 1215.69 L1238.77 1215.69 L1239.36 1215.69 L1239.94 1215.69 L1240.53 1215.69 L1241.11 1215.69 L1241.7 1215.69 L1242.29 1215.69 L1242.87 1215.69 L1243.46 1215.69 L1244.05 1215.69 L1244.63 1215.69 L1245.22 1215.69 L1245.81 1215.69 L1246.39 1215.69 L1246.98 1215.69 L1247.57 1215.69 L1248.15 1215.69 L1248.74 1215.69 L1249.32 1215.69 L1249.91 1215.69 L1250.5 1215.69 L1251.08 1215.69 L1251.67 1215.69 L1252.26 1215.69 L1252.84 1215.69 L1253.43 1215.69 L1254.02 1215.69 L1254.6 1215.69 L1255.19 1215.69 L1255.78 1215.69 L1256.36 1215.69 L1256.95 1215.69 L1257.53 1215.69 L1258.12 1215.69 L1258.71 1215.69 L1259.29 1215.69 L1259.88 1215.69 L1260.47 1215.69 L1261.05 1215.69 L1261.64 1215.69 L1262.23 1215.69 L1262.81 1215.69 L1263.4 1215.69 L1263.98 1215.69 L1264.57 1215.69 L1265.16 1215.69 L1265.74 1215.69 L1266.33 1215.69 L1266.92 1215.69 L1267.5 1215.69 L1268.09 1215.69 L1268.68 1215.69 L1269.26 1215.69 L1269.85 1215.69 L1270.44 1215.69 L1271.02 1215.69 L1271.61 1215.69 L1272.19 1215.69 L1272.78 1215.69 L1273.37 1215.69 L1273.95 1215.69 L1274.54 1215.69 L1275.13 1215.69 L1275.71 1215.69 L1276.3 1215.69 L1276.89 1215.69 L1277.47 1215.69 L1278.06 1215.69 L1278.65 1215.69 L1279.23 1215.69 L1279.82 1215.69 L1280.4 1215.69 L1280.99 1215.69 L1281.58 1215.69 L1282.16 1215.69 L1282.75 1215.69 L1283.34 1215.69 L1283.92 1215.69 L1284.51 1215.69 L1285.1 1215.69 L1285.68 1215.69 L1286.27 1215.69 L1286.86 1215.69 L1287.44 1215.69 L1288.03 1215.69 L1288.61 1215.69 L1289.2 1215.69 L1289.79 1215.69 L1290.37 1215.69 L1290.96 1215.69 L1291.55 1215.69 L1292.13 1215.69 L1292.72 1215.69 L1293.31 1215.69 L1293.89 1215.69 L1294.48 1215.69 L1295.06 1215.69 L1295.65 1215.69 L1296.24 1215.69 L1296.82 1215.69 L1297.41 1215.69 L1298 1215.69 L1298.58 1215.69 L1299.17 1215.69 L1299.76 1215.69 L1300.34 1215.69 L1300.93 1215.69 L1301.52 1215.69 L1302.1 1215.69 L1302.69 1215.69 L1303.27 1215.69 L1303.86 1215.69 L1304.45 1215.69 L1305.03 1215.69 L1305.62 1215.69 L1306.21 1215.69 L1306.79 1215.69 L1307.38 1215.69 L1307.97 1215.69 L1308.55 1215.69 L1309.14 1215.69 L1309.73 1215.69 L1310.31 1215.69 L1310.9 1215.69 L1311.48 1215.69 L1312.07 1215.69 L1312.66 1215.69 L1313.24 1215.69 L1313.83 1215.69 L1314.42 1215.69 L1315 1215.69 L1315.59 1215.69 L1316.18 1215.69 L1316.76 1215.69 L1317.35 1215.69 L1317.93 1215.69 L1318.52 1215.69 L1319.11 1215.69 L1319.69 1215.69 L1320.28 1215.69 L1320.87 1215.69 L1321.45 1215.69 L1322.04 1215.69 L1322.63 1215.69 L1323.21 1215.69 L1323.8 1215.69 L1324.39 1215.69 L1324.97 1215.69 L1325.56 1215.69 L1326.14 1215.69 L1326.73 1215.69 L1327.32 1215.69 L1327.9 1215.69 L1328.49 1215.69 L1329.08 1215.69 L1329.66 1215.69 L1330.25 1215.69 L1330.84 1215.69 L1331.42 1215.69 L1332.01 1215.69 L1332.6 1215.69 L1333.18 1215.69 L1333.77 1215.69 L1334.35 1215.69 L1334.94 1215.69 L1335.53 1215.69 L1336.11 1215.69 L1336.7 1215.69 L1337.29 1215.69 L1337.87 1215.69 L1338.46 1215.69 L1339.05 1215.69 L1339.63 1215.69 L1340.22 1215.69 L1340.8 1215.69 L1341.39 1215.69 L1341.98 1215.69 L1342.56 1215.69 L1343.15 1215.69 L1343.74 1215.69 L1344.32 1215.69 L1344.91 1215.69 L1345.5 1215.69 L1346.08 1215.69 L1346.67 1215.69 L1347.26 1215.69 L1347.84 1215.69 L1348.43 1215.69 L1349.01 1215.69 L1349.6 1215.69 L1350.19 1215.69 L1350.77 1215.69 L1351.36 1215.69 L1351.95 1215.69 L1352.53 1215.69 L1353.12 1215.69 L1353.71 1215.69 L1354.29 1215.69 L1354.88 1215.69 L1355.47 1215.69 L1356.05 1215.69 L1356.64 1215.69 L1357.22 1215.69 L1357.81 1215.69 L1358.4 1215.69 L1358.98 1215.69 L1359.57 1215.69 L1360.16 1215.69 L1360.74 1215.69 L1361.33 1215.69 L1361.92 1215.69 L1362.5 1215.69 L1363.09 1215.69 L1363.68 1215.69 L1364.26 1215.69 L1364.85 1215.69 L1365.43 1215.69 L1366.02 1215.69 L1366.61 1215.69 L1367.19 1215.69 L1367.78 1215.69 L1368.37 1215.69 L1368.95 1215.69 L1369.54 1215.69 L1370.13 1215.69 L1370.71 1215.69 L1371.3 1215.69 L1371.88 1215.69 L1372.47 1215.69 L1373.06 1215.69 L1373.64 1215.69 L1374.23 1215.69 L1374.82 1215.69 L1375.4 1215.69 L1375.99 1215.69 L1376.58 1215.69 L1377.16 1215.69 L1377.75 1215.69 L1378.34 1215.69 L1378.92 1215.69 L1379.51 1215.69 L1380.09 1215.69 L1380.68 1215.69 L1381.27 1215.69 L1381.85 1215.69 L1382.44 1215.69 L1383.03 1215.69 L1383.61 1215.69 L1384.2 1215.69 L1384.79 1215.69 L1385.37 1215.69 L1385.96 1215.69 L1386.55 1215.69 L1387.13 1215.69 L1387.72 1215.69 L1388.3 1215.69 L1388.89 1215.69 L1389.48 1215.69 L1390.06 1215.69 L1390.65 1215.69 L1391.24 1215.69 L1391.82 1215.69 L1392.41 1215.69 L1393 1215.69 L1393.58 1215.69 L1394.17 1215.69 L1394.75 1215.69 L1395.34 1215.69 L1395.93 1215.69 L1396.51 1215.69 L1397.1 1215.69 L1397.69 1215.69 L1398.27 1215.69 L1398.86 1215.69 L1399.45 1215.69 L1400.03 1215.69 L1400.62 1215.69 L1401.21 1215.69 L1401.79 1215.69 L1402.38 1215.69 L1402.96 1215.69 L1403.55 1215.69 L1404.14 1215.69 L1404.72 1215.69 L1405.31 1215.69 L1405.9 1215.69 L1406.48 1215.69 L1407.07 1215.69 L1407.66 1215.69 L1408.24 1215.69 L1408.83 1215.69 L1409.42 1215.69 L1410 1215.69 L1410.59 1215.69 L1411.17 1215.69 L1411.76 1215.69 L1412.35 1215.69 L1412.93 1215.69 L1413.52 1215.69 L1414.11 1215.69 L1414.69 1215.69 L1415.28 1215.69 L1415.87 1215.69 L1416.45 1215.69 L1417.04 1215.69 L1417.63 1215.69 L1418.21 1215.69 L1418.8 1215.69 L1419.38 1215.69 L1419.97 1215.69 L1420.56 1215.69 L1421.14 1215.69 L1421.73 1215.69 L1422.32 1215.69 L1422.9 1215.69 L1423.49 1215.69 L1424.08 1215.69 L1424.66 1215.69 L1425.25 1215.69 L1425.83 1215.69 L1426.42 1215.69 L1427.01 1215.69 L1427.59 1215.69 L1428.18 1215.69 L1428.77 1215.69 L1429.35 1215.69 L1429.94 1215.69 L1430.53 1215.69 L1431.11 1215.69 L1431.7 1215.69 L1432.29 1215.69 L1432.87 1215.69 L1433.46 1215.69 L1434.04 1215.69 L1434.63 1215.69 L1435.22 1215.69 L1435.8 1215.69 L1436.39 1215.69 L1436.98 1215.69 L1437.56 1215.69 L1438.15 1215.69 L1438.74 1215.69 L1439.32 1215.69 L1439.91 1215.69 L1440.5 1215.69 L1441.08 1215.69 L1441.67 1215.69 L1442.25 1215.69 L1442.84 1215.69 L1443.43 1215.69 L1444.01 1215.69 L1444.6 1215.69 L1445.19 1215.69 L1445.77 1215.69 L1446.36 1215.69 L1446.95 1215.69 L1447.53 1215.69 L1448.12 1215.69 L1448.7 1215.69 L1449.29 1215.69 L1449.88 1215.69 L1450.46 1215.69 L1451.05 1215.69 L1451.64 1215.69 L1452.22 1215.69 L1452.81 1215.69 L1453.4 1215.69 L1453.98 1215.69 L1454.57 1215.69 L1455.16 1215.69 L1455.74 1215.69 L1456.33 1215.69 L1456.91 1215.69 L1457.5 1215.69 L1458.09 1215.69 L1458.67 1215.69 L1459.26 1215.69 L1459.85 1215.69 L1460.43 1215.69 L1461.02 1215.69 L1461.61 1215.69 L1462.19 1215.69 L1462.78 1215.69 L1463.37 1215.69 L1463.95 1215.69 L1464.54 1215.69 L1465.12 1215.69 L1465.71 1215.69 L1466.3 1215.69 L1466.88 1215.69 L1467.47 1215.69 L1468.06 1215.69 L1468.64 1215.69 L1469.23 1215.69 L1469.82 1215.69 L1470.4 1215.69 L1470.99 1215.69 L1471.57 1215.69 L1472.16 1215.69 L1472.75 1215.69 L1473.33 1215.69 L1473.92 1215.69 L1474.51 1215.69 L1475.09 1215.69 L1475.68 1215.69 L1476.27 1215.69 L1476.85 1215.69 L1477.44 1215.69 L1478.03 1215.69 L1478.61 1215.69 L1479.2 1215.69 L1479.78 1215.69 L1480.37 1215.69 L1480.96 1215.69 L1481.54 1215.69 L1482.13 1215.69 L1482.72 1215.69 L1483.3 1215.69 L1483.89 1215.69 L1484.48 1215.69 L1485.06 1215.69 L1485.65 1215.69 L1486.24 1215.69 L1486.82 1215.69 L1487.41 1215.69 L1487.99 1215.69 L1488.58 1215.69 L1489.17 1215.69 L1489.75 1215.69 L1490.34 1215.69 L1490.93 1215.69 L1491.51 1215.69 L1492.1 1215.69 L1492.69 1215.69 L1493.27 1215.69 L1493.86 1215.69 L1494.45 1215.69 L1495.03 1215.69 L1495.62 1215.69 L1496.2 1215.69 L1496.79 1215.69 L1497.38 1215.69 L1497.96 1215.69 L1498.55 1215.69 L1499.14 1215.69 L1499.72 1215.69 L1500.31 1215.69 L1500.9 1215.69 L1501.48 1215.69 L1502.07 1215.69 L1502.65 1215.69 L1503.24 1215.69 L1503.83 1215.69 L1504.41 1215.69 L1505 1215.69 L1505.59 1215.69 L1506.17 1215.69 L1506.76 1215.69 L1507.35 1215.69 L1507.93 1215.69 L1508.52 1215.69 L1509.11 1215.69 L1509.69 1215.69 L1510.28 1215.69 L1510.86 1215.69 L1511.45 1215.69 L1512.04 1215.69 L1512.62 1215.69 L1513.21 1215.69 L1513.8 1215.69 L1514.38 1215.69 L1514.97 1215.69 L1515.56 1215.69 L1516.14 1215.69 L1516.73 1215.69 L1517.32 1215.69 L1517.9 1215.69 L1518.49 1215.69 L1519.07 1215.69 L1519.66 1215.69 L1520.25 1215.69 L1520.83 1215.69 L1521.42 1215.69 L1522.01 1215.69 L1522.59 1215.69 L1523.18 1215.69 L1523.77 1215.69 L1524.35 1215.69 L1524.94 1215.69 L1525.52 1215.69 L1526.11 1215.69 L1526.7 1215.69 L1527.28 1215.69 L1527.87 1215.69 L1528.46 1215.69 L1529.04 1215.69 L1529.63 1215.69 L1530.22 1215.69 L1530.8 1215.69 L1531.39 1215.69 L1531.98 1215.69 L1532.56 1215.69 L1533.15 1215.69 L1533.73 1215.69 L1534.32 1215.69 L1534.91 1215.69 L1535.49 1215.69 L1536.08 1215.69 L1536.67 1215.69 L1537.25 1215.69 L1537.84 1215.69 L1538.43 1215.69 L1539.01 1215.69 L1539.6 1215.69 L1540.19 1215.69 L1540.77 1215.69 L1541.36 1215.69 L1541.94 1215.69 L1542.53 1215.69 L1543.12 1215.69 L1543.7 1215.69 L1544.29 1215.69 L1544.88 1215.69 L1545.46 1215.69 L1546.05 1215.69 L1546.64 1215.69 L1547.22 1215.69 L1547.81 1215.69 L1548.4 1215.69 L1548.98 1215.69 L1549.57 1215.69 L1550.15 1215.69 L1550.74 1215.69 L1551.33 1215.69 L1551.91 1215.69 L1552.5 1215.69 L1553.09 1215.69 L1553.67 1215.69 L1554.26 1215.69 L1554.85 1215.69 L1555.43 1215.69 L1556.02 1215.69 L1556.6 1215.69 L1557.19 1215.69 L1557.78 1215.69 L1558.36 1215.69 L1558.95 1215.69 L1559.54 1215.69 L1560.12 1215.69 L1560.71 1215.69 L1561.3 1215.69 L1561.88 1215.69 L1562.47 1215.69 L1563.06 1215.69 L1563.64 1215.69 L1564.23 1215.69 L1564.81 1215.69 L1565.4 1215.69 L1565.99 1215.69 L1566.57 1215.69 L1567.16 1215.69 L1567.75 1215.69 L1568.33 1215.69 L1568.92 1215.69 L1569.51 1215.69 L1570.09 1215.69 L1570.68 1215.69 L1571.27 1215.69 L1571.85 1215.69 L1572.44 1215.69 L1573.02 1215.69 L1573.61 1215.69 L1574.2 1215.69 L1574.78 1215.69 L1575.37 1215.69 L1575.96 1215.69 L1576.54 1215.69 L1577.13 1215.69 L1577.72 1215.69 L1578.3 1215.69 L1578.89 1215.69 L1579.47 1215.69 L1580.06 1215.69 L1580.65 1215.69 L1581.23 1215.69 L1581.82 1215.69 L1582.41 1215.69 L1582.99 1215.69 L1583.58 1215.69 L1584.17 1215.69 L1584.75 1215.69 L1585.34 1215.69 L1585.93 1215.69 L1586.51 1215.69 L1587.1 1215.69 L1587.68 1215.69 L1588.27 1215.69 L1588.86 1215.69 L1589.44 1215.69 L1590.03 1215.69 L1590.62 1215.69 L1591.2 1215.69 L1591.79 1215.69 L1592.38 1215.69 L1592.96 1215.69 L1593.55 1215.69 L1594.14 1215.69 L1594.72 1215.69 L1595.31 1215.69 L1595.89 1215.69 L1596.48 1215.69 L1597.07 1215.69 L1597.65 1215.69 L1598.24 1215.69 L1598.83 1215.69 L1599.41 1215.69 L1600 1215.69 L1600.59 1215.69 L1601.17 1215.69 L1601.76 1215.69 L1602.34 1215.69 L1602.93 1215.69 L1603.52 1215.69 L1604.1 1215.69 L1604.69 1215.69 L1605.28 1215.69 L1605.86 1215.69 L1606.45 1215.69 L1607.04 1215.69 L1607.62 1215.69 L1608.21 1215.69 L1608.8 1215.69 L1609.38 1215.69 L1609.97 1215.69 L1610.55 1215.69 L1611.14 1215.69 L1611.73 1215.69 L1612.31 1215.69 L1612.9 1215.69 L1613.49 1215.69 L1614.07 1215.69 L1614.66 1215.69 L1615.25 1215.69 L1615.83 1215.69 L1616.42 1215.69 L1617.01 1215.69 L1617.59 1215.69 L1618.18 1215.69 L1618.76 1215.69 L1619.35 1215.69 L1619.94 1215.69 L1620.52 1215.69 L1621.11 1215.69 L1621.7 1215.69 L1622.28 1215.69 L1622.87 1215.69 L1623.46 1215.69 L1624.04 1215.69 L1624.63 1215.69 L1625.22 1215.69 L1625.8 1215.69 L1626.39 1215.69 L1626.97 1215.69 L1627.56 1215.69 L1628.15 1215.69 L1628.73 1215.69 L1629.32 1215.69 L1629.91 1215.69 L1630.49 1215.69 L1631.08 1215.69 L1631.67 1215.69 L1632.25 1215.69 L1632.84 1215.69 L1633.42 1215.69 L1634.01 1215.69 L1634.6 1215.69 L1635.18 1215.69 L1635.77 1215.69 L1636.36 1215.69 L1636.94 1215.69 L1637.53 1215.69 L1638.12 1215.69 L1638.7 1215.69 L1639.29 1215.69 L1639.88 1215.69 L1640.46 1215.69 L1641.05 1215.69 L1641.63 1215.69 L1642.22 1215.69 L1642.81 1215.69 L1643.39 1215.69 L1643.98 1215.69 L1644.57 1215.69 L1645.15 1215.69 L1645.74 1215.69 L1646.33 1215.69 L1646.91 1215.69 L1647.5 1215.69 L1648.09 1215.69 L1648.67 1215.69 L1649.26 1215.69 L1649.84 1215.69 L1650.43 1215.69 L1651.02 1215.69 L1651.6 1215.69 L1652.19 1215.69 L1652.78 1215.69 L1653.36 1215.69 L1653.95 1215.69 L1654.54 1215.69 L1655.12 1215.69 L1655.71 1215.69 L1656.29 1215.69 L1656.88 1215.69 L1657.47 1215.69 L1658.05 1215.69 L1658.64 1215.69 L1659.23 1215.69 L1659.81 1215.69 L1660.4 1215.69 L1660.99 1215.69 L1661.57 1215.69 L1662.16 1215.69 L1662.75 1215.69 L1663.33 1215.69 L1663.92 1215.69 L1664.5 1215.69 L1665.09 1215.69 L1665.68 1215.69 L1666.26 1215.69 L1666.85 1215.69 L1667.44 1215.69 L1668.02 1215.69 L1668.61 1215.69 L1669.2 1215.69 L1669.78 1215.69 L1670.37 1215.69 L1670.96 1215.69 L1671.54 1215.69 L1672.13 1215.69 L1672.71 1215.69 L1673.3 1215.69 L1673.89 1215.69 L1674.47 1215.69 L1675.06 1215.69 L1675.65 1215.69 L1676.23 1215.69 L1676.82 1215.69 L1677.41 1215.69 L1677.99 1215.69 L1678.58 1215.69 L1679.17 1215.69 L1679.75 1215.69 L1680.34 1215.69 L1680.92 1215.69 L1681.51 1215.69 L1682.1 1215.69 L1682.68 1215.69 L1683.27 1215.69 L1683.86 1215.69 L1684.44 1215.69 L1685.03 1215.69 L1685.62 1215.69 L1686.2 1215.69 L1686.79 1215.69 L1687.37 1215.69 L1687.96 1215.69 L1688.55 1215.69 L1689.13 1215.69 L1689.72 1215.69 L1690.31 1215.69 L1690.89 1215.69 L1691.48 1215.69 L1692.07 1215.69 L1692.65 1215.69 L1693.24 1215.69 L1693.83 1215.69 L1694.41 1215.69 L1695 1215.69 L1695.58 1215.69 L1696.17 1215.69 L1696.76 1215.69 L1697.34 1215.69 L1697.93 1215.69 L1698.52 1215.69 L1699.1 1215.69 L1699.69 1215.69 L1700.28 1215.69 L1700.86 1215.69 L1701.45 1215.69 L1702.04 1215.69 L1702.62 1215.69 L1703.21 1215.69 L1703.79 1215.69 L1704.38 1215.69 L1704.97 1215.69 L1705.55 1215.69 L1706.14 1215.69 L1706.73 1215.69 L1707.31 1215.69 L1707.9 1215.69 L1708.49 1215.69 L1709.07 1215.69 L1709.66 1215.69 L1710.24 1215.69 L1710.83 1215.69 L1711.42 1215.69 L1712 1215.69 L1712.59 1215.69 L1713.18 1215.69 L1713.76 1215.69 L1714.35 1215.69 L1714.94 1215.69 L1715.52 1215.69 L1716.11 1215.69 L1716.7 1215.69 L1717.28 1215.69 L1717.87 1215.69 L1718.45 1215.69 L1719.04 1215.69 L1719.63 1215.69 L1720.21 1215.69 L1720.8 1215.69 L1721.39 1215.69 L1721.97 1215.69 L1722.56 1215.69 L1723.15 1215.69 L1723.73 1215.69 L1724.32 1215.69 L1724.91 1215.69 L1725.49 1215.69 L1726.08 1215.69 L1726.66 1215.69 L1727.25 1215.69 L1727.84 1215.69 L1728.42 1215.69 L1729.01 1215.69 L1729.6 1215.69 L1730.18 1215.69 L1730.77 1215.69 L1731.36 1215.69 L1731.94 1215.69 L1732.53 1215.69 L1733.11 1215.69 L1733.7 1215.69 L1734.29 1215.69 L1734.87 1215.69 L1735.46 1215.69 L1736.05 1215.69 L1736.63 1215.69 L1737.22 1215.69 L1737.81 1215.69 L1738.39 1215.69 L1738.98 1215.69 L1739.57 1215.69 L1740.15 1215.69 L1740.74 1215.69 L1741.32 1215.69 L1741.91 1215.69 L1742.5 1215.69 L1743.08 1215.69 L1743.67 1215.69 L1744.26 1215.69 L1744.84 1215.69 L1745.43 1215.69 L1746.02 1215.69 L1746.6 1215.69 L1747.19 1215.69 L1747.78 1215.69 L1748.36 1215.69 L1748.95 1215.69 L1749.53 1215.69 L1750.12 1215.69 L1750.71 1215.69 L1751.29 1215.69 L1751.88 1215.69 L1752.47 1215.69 L1753.05 1215.69 L1753.64 1215.69 L1754.23 1215.69 L1754.81 1215.69 L1755.4 1215.69 L1755.99 1215.69 L1756.57 1215.69 L1757.16 1215.69 L1757.74 1215.69 L1758.33 1215.69 L1758.92 1215.69 L1759.5 1215.69 L1760.09 1215.69 L1760.68 1215.69 L1761.26 1215.69 L1761.85 1215.69 L1762.44 1215.69 L1763.02 1215.69 L1763.61 1215.69 L1764.19 1215.69 L1764.78 1215.69 L1765.37 1215.69 L1765.95 1215.69 L1766.54 1215.69 L1767.13 1215.69 L1767.71 1215.69 L1768.3 1215.69 L1768.89 1215.69 L1769.47 1215.69 L1770.06 1215.69 L1770.65 1215.69 L1771.23 1215.69 L1771.82 1215.69 L1772.4 1215.69 L1772.99 1215.69 L1773.58 1215.69 L1774.16 1215.69 L1774.75 1215.69 L1775.34 1215.69 L1775.92 1215.69 L1776.51 1215.69 L1777.1 1215.69 L1777.68 1215.69 L1778.27 1215.69 L1778.86 1215.69 L1779.44 1215.69 L1780.03 1215.69 L1780.61 1215.69 L1781.2 1215.69 L1781.79 1215.69 L1782.37 1215.69 L1782.96 1215.69 L1783.55 1215.69 L1784.13 1215.69 L1784.72 1215.69 L1785.31 1215.69 L1785.89 1215.69 L1786.48 1215.69 L1787.06 1215.69 L1787.65 1215.69 L1788.24 1215.69 L1788.82 1215.69 L1789.41 1215.69 L1790 1215.69 L1790.58 1215.69 L1791.17 1215.69 L1791.76 1215.69 L1792.34 1215.69 L1792.93 1215.69 L1793.52 1215.69 L1794.1 1215.69 L1794.69 1215.69 L1795.27 1215.69 L1795.86 1215.69 L1796.45 1215.69 L1797.03 1215.69 L1797.62 1215.69 L1798.21 1215.69 L1798.79 1215.69 L1799.38 1215.69 L1799.97 1215.69 L1800.55 1215.69 L1801.14 1215.69 L1801.73 1215.69 L1802.31 1215.69 L1802.9 1215.69 L1803.48 1215.69 L1804.07 1215.69 L1804.66 1215.69 L1805.24 1215.69 L1805.83 1215.69 L1806.42 1215.69 L1807 1215.69 L1807.59 1215.69 L1808.18 1215.69 L1808.76 1215.69 L1809.35 1215.69 L1809.94 1215.69 L1810.52 1215.69 L1811.11 1215.69 L1811.69 1215.69 L1812.28 1215.69 L1812.87 1215.69 L1813.45 1215.69 L1814.04 1215.69 L1814.63 1215.69 L1815.21 1215.69 L1815.8 1215.69 L1816.39 1215.69 L1816.97 1215.69 L1817.56 1215.69 L1818.14 1215.69 L1818.73 1215.69 L1819.32 1215.69 L1819.9 1215.69 L1820.49 1215.69 L1821.08 1215.69 L1821.66 1215.69 L1822.25 1215.69 L1822.84 1215.69 L1823.42 1215.69 L1824.01 1215.69 L1824.6 1215.69 L1825.18 1215.69 L1825.77 1215.69 L1826.35 1215.69 L1826.94 1215.69 L1827.53 1215.69 L1828.11 1215.69 L1828.7 1215.69 L1829.29 1215.69 L1829.87 1215.69 L1830.46 1215.69 L1831.05 1215.69 L1831.63 1215.69 L1832.22 1215.69 L1832.81 1215.69 L1833.39 1215.69 L1833.98 1215.69 L1834.56 1215.69 L1835.15 1215.69 L1835.74 1215.69 L1836.32 1215.69 L1836.91 1215.69 L1837.5 1215.69 L1838.08 1215.69 L1838.67 1215.69 L1839.26 1215.69 L1839.84 1215.69 L1840.43 1215.69 L1841.01 1215.69 L1841.6 1215.69 L1842.19 1215.69 L1842.77 1215.69 L1843.36 1215.69 L1843.95 1215.69 L1844.53 1215.69 L1845.12 1215.69 L1845.71 1215.69 L1846.29 1215.69 L1846.88 1215.69 L1847.47 1215.69 L1848.05 1215.69 L1848.64 1215.69 L1849.22 1215.69 L1849.81 1215.69 L1850.4 1215.69 L1850.98 1215.69 L1851.57 1215.69 L1852.16 1215.69 L1852.74 1215.69 L1853.33 1215.69 L1853.92 1215.69 L1854.5 1215.69 L1855.09 1215.69 L1855.68 1215.69 L1856.26 1215.69 L1856.85 1215.69 L1857.43 1215.69 L1858.02 1215.69 L1858.61 1215.69 L1859.19 1215.69 L1859.78 1215.69 L1860.37 1215.69 L1860.95 1215.69 L1861.54 1215.69 L1862.13 1215.69 L1862.71 1215.69 L1863.3 1215.69 L1863.88 1215.69 L1864.47 1215.69 L1865.06 1215.69 L1865.64 1215.69 L1866.23 1215.69 L1866.82 1215.69 L1867.4 1215.69 L1867.99 1215.69 L1868.58 1215.69 L1869.16 1215.69 L1869.75 1215.69 L1870.34 1215.69 L1870.92 1215.69 L1871.51 1215.69 L1872.09 1215.69 L1872.68 1215.69 L1873.27 1215.69 L1873.85 1215.69 L1874.44 1215.69 L1875.03 1215.69 L1875.61 1215.69 L1876.2 1215.69 L1876.79 1215.69 L1877.37 1215.69 L1877.96 1215.69 L1878.55 1215.69 L1879.13 1215.69 L1879.72 1215.69 L1880.3 1215.69 L1880.89 1215.69 L1881.48 1215.69 L1882.06 1215.69 L1882.65 1215.69 L1883.24 1215.69 L1883.82 1215.69 L1884.41 1215.69 L1885 1215.69 L1885.58 1215.69 L1886.17 1215.69 L1886.76 1215.69 L1887.34 1215.69 L1887.93 1215.69 L1888.51 1215.69 L1889.1 1215.69 L1889.69 1215.69 L1890.27 1215.69 L1890.86 1215.69 L1891.45 1215.69 L1892.03 1215.69 L1892.62 1215.69 L1893.21 1215.69 L1893.79 1215.69 L1894.38 1215.69 L1894.96 1215.69 L1895.55 1215.69 L1896.14 1215.69 L1896.72 1215.69 L1897.31 1215.69 L1897.9 1215.69 L1898.48 1215.69 L1899.07 1215.69 L1899.66 1215.69 L1900.24 1215.69 L1900.83 1215.69 L1901.42 1215.69 L1902 1215.69 L1902.59 1215.69 L1903.17 1215.69 L1903.76 1215.69 L1904.35 1215.69 L1904.93 1215.69 L1905.52 1215.69 L1906.11 1215.69 L1906.69 1215.69 L1907.28 1215.69 L1907.87 1215.69 L1908.45 1215.69 L1909.04 1215.69 L1909.63 1215.69 L1910.21 1215.69 L1910.8 1215.69 L1911.38 1215.69 L1911.97 1215.69 L1912.56 1215.69 L1913.14 1215.69 L1913.73 1215.69 L1914.32 1215.69 L1914.9 1215.69 L1915.49 1215.69 L1916.08 1215.69 L1916.66 1215.69 L1917.25 1215.69 L1917.83 1215.69 L1918.42 1215.69 L1919.01 1215.69 L1919.59 1215.69 L1920.18 1215.69 L1920.77 1215.69 L1921.35 1215.69 L1921.94 1215.69 L1922.53 1215.69 L1923.11 1215.69 L1923.7 1215.69 L1924.29 1215.69 L1924.87 1215.69 L1925.46 1215.69 L1926.04 1215.69 L1926.63 1215.69 L1927.22 1215.69 L1927.8 1215.69 L1928.39 1215.69 L1928.98 1215.69 L1929.56 1215.69 L1930.15 1215.69 L1930.74 1215.69 L1931.32 1215.69 L1931.91 1215.69 L1932.5 1215.69 L1933.08 1215.69 L1933.67 1215.69 L1934.25 1215.69 L1934.84 1215.69 L1935.43 1215.69 L1936.01 1215.69 L1936.6 1215.69 L1937.19 1215.69 L1937.77 1215.69 L1938.36 1215.69 L1938.95 1215.69 L1939.53 1215.69 L1940.12 1215.69 L1940.71 1215.69 L1941.29 1215.69 L1941.88 1215.69 L1942.46 1215.69 L1943.05 1215.69 L1943.64 1215.69 L1944.22 1215.69 L1944.81 1215.69 L1945.4 1215.69 L1945.98 1215.69 L1946.57 1215.69 L1947.16 1215.69 L1947.74 1215.69 L1948.33 1215.69 L1948.91 1215.69 L1949.5 1215.69 L1950.09 1215.69 L1950.67 1215.69 L1951.26 1215.69 L1951.85 1215.69 L1952.43 1215.69 L1953.02 1215.69 L1953.61 1215.69 L1954.19 1215.69 L1954.78 1215.69 L1955.37 1215.69 L1955.95 1215.69 L1956.54 1215.69 L1957.12 1215.69 L1957.71 1215.69 L1958.3 1215.69 L1958.88 1215.69 L1959.47 1215.69 L1960.06 1215.69 L1960.64 1215.69 L1961.23 1215.69 L1961.82 1215.69 L1962.4 1215.69 L1962.99 1215.69 L1963.58 1215.69 L1964.16 1215.69 L1964.75 1215.69 L1965.33 1215.69 L1965.92 1215.69 L1966.51 1215.69 L1967.09 1215.69 L1967.68 1215.69 L1968.27 1215.69 L1968.85 1215.69 L1969.44 1215.69 L1970.03 1215.69 L1970.61 1215.69 L1971.2 1215.69 L1971.78 1215.69 L1972.37 1215.69 L1972.96 1215.69 L1973.54 1215.69 L1974.13 1215.69 L1974.72 1215.69 L1975.3 1215.69 L1975.89 1215.69 L1976.48 1215.69 L1977.06 1215.69 L1977.65 1215.69 L1978.24 1215.69 L1978.82 1215.69 L1979.41 1215.69 L1979.99 1215.69 L1980.58 1215.69 L1981.17 1215.69 L1981.75 1215.69 L1982.34 1215.69 L1982.93 1215.69 L1983.51 1215.69 L1984.1 1215.69 L1984.69 1215.69 L1985.27 1215.69 L1985.86 1215.69 L1986.45 1215.69 L1987.03 1215.69 L1987.62 1215.69 L1988.2 1215.69 L1988.79 1215.69 L1989.38 1215.69 L1989.96 1215.69 L1990.55 1215.69 L1991.14 1215.69 L1991.72 1215.69 L1992.31 1215.69 L1992.9 1215.69 L1993.48 1215.69 L1994.07 1215.69 L1994.65 1215.69 L1995.24 1215.69 L1995.83 1215.69 L1996.41 1215.69 L1997 1215.69 L1997.59 1215.69 L1998.17 1215.69 L1998.76 1215.69 L1999.35 1215.69 L1999.93 1215.69 L2000.52 1215.69 L2001.11 1215.69 L2001.69 1215.69 L2002.28 1215.69 L2002.86 1215.69 L2003.45 1215.69 L2004.04 1215.69 L2004.62 1215.69 L2005.21 1215.69 L2005.8 1215.69 L2006.38 1215.69 L2006.97 1215.69 L2007.56 1215.69 L2008.14 1215.69 L2008.73 1215.69 L2009.32 1215.69 L2009.9 1215.69 L2010.49 1215.69 L2011.07 1215.69 L2011.66 1215.69 L2012.25 1215.69 L2012.83 1215.69 L2013.42 1215.69 L2014.01 1215.69 L2014.59 1215.69 L2015.18 1215.69 L2015.77 1215.69 L2016.35 1215.69 L2016.94 1215.69 L2017.53 1215.69 L2018.11 1215.69 L2018.7 1215.69 L2019.28 1215.69 L2019.87 1215.69 L2020.46 1215.69 L2021.04 1215.69 L2021.63 1215.69 L2022.22 1215.69 L2022.8 1215.69 L2023.39 1215.69 L2023.98 1215.69 L2024.56 1215.69 L2025.15 1215.69 L2025.73 1215.69 L2026.32 1215.69 L2026.91 1215.69 L2027.49 1215.69 L2028.08 1215.69 L2028.67 1215.69 L2029.25 1215.69 L2029.84 1215.69 L2030.43 1215.69 L2031.01 1215.69 L2031.6 1215.69 L2032.19 1215.69 L2032.77 1215.69 L2033.36 1215.69 L2033.94 1215.69 L2034.53 1215.69 L2035.12 1215.69 L2035.7 1215.69 L2036.29 1215.69 L2036.88 1215.69 L2037.46 1215.69 L2038.05 1215.69 L2038.64 1215.69 L2039.22 1215.69 L2039.81 1215.69 L2040.4 1215.69 L2040.98 1215.69 L2041.57 1215.69 L2042.15 1215.69 L2042.74 1215.69 L2043.33 1215.69 L2043.91 1215.69 L2044.5 1215.69 L2045.09 1215.69 L2045.67 1215.69 L2046.26 1215.69 L2046.85 1215.69 L2047.43 1215.69 L2048.02 1215.69 L2048.6 1215.69 L2049.19 1215.69 L2049.78 1215.69 L2050.36 1215.69 L2050.95 1215.69 L2051.54 1215.69 L2052.12 1215.69 L2052.71 1215.69 L2053.3 1215.69 L2053.88 1215.69 L2054.47 1215.69 L2055.06 1215.69 L2055.64 1215.69 L2056.23 1215.69 L2056.81 1215.69 L2057.4 1215.69 L2057.99 1215.69 L2058.57 1215.69 L2059.16 1215.69 L2059.75 1215.69 L2060.33 1215.69 L2060.92 1215.69 L2061.51 1215.69 L2062.09 1215.69 L2062.68 1215.69 L2063.27 1215.69 L2063.85 1215.69 L2064.44 1215.69 L2065.02 1215.69 L2065.61 1215.69 L2066.2 1215.69 L2066.78 1215.69 L2067.37 1215.69 L2067.96 1215.69 L2068.54 1215.69 L2069.13 1215.69 L2069.72 1215.69 L2070.3 1215.69 L2070.89 1215.69 L2071.48 1215.69 L2072.06 1215.69 L2072.65 1215.69 L2073.23 1215.69 L2073.82 1215.69 L2074.41 1215.69 L2074.99 1215.69 L2075.58 1215.69 L2076.17 1215.69 L2076.75 1215.69 L2077.34 1215.69 L2077.93 1215.69 L2078.51 1215.69 L2079.1 1215.69 L2079.68 1215.69 L2080.27 1215.69 L2080.86 1215.69 L2081.44 1215.69 L2082.03 1215.69 L2082.62 1215.69 L2083.2 1215.69 L2083.79 1215.69 L2084.38 1215.69 L2084.96 1215.69 L2085.55 1215.69 L2086.14 1215.69 L2086.72 1215.69 L2087.31 1215.69 L2087.89 1215.69 L2088.48 1215.69 L2089.07 1215.69 L2089.65 1215.69 L2090.24 1215.69 L2090.83 1215.69 L2091.41 1215.69 L2092 1215.69 L2092.59 1215.69 L2093.17 1215.69 L2093.76 1215.69 L2094.35 1215.69 L2094.93 1215.69 L2095.52 1215.69 L2096.1 1215.69 L2096.69 1215.69 L2097.28 1215.69 L2097.86 1215.69 L2098.45 1215.69 L2099.04 1215.69 L2099.62 1215.69 L2100.21 1215.69 L2100.8 1215.69 L2101.38 1215.69 L2101.97 1215.69 L2102.55 1215.69 L2103.14 1215.69 L2103.73 1215.69 L2104.31 1215.69 L2104.9 1215.69 L2105.49 1215.69 L2106.07 1215.69 L2106.66 1215.69 L2107.25 1215.69 L2107.83 1215.69 L2108.42 1215.69 L2109.01 1215.69 L2109.59 1215.69 L2110.18 1215.69 L2110.76 1215.69 L2111.35 1215.69 L2111.94 1215.69 L2112.52 1215.69 L2113.11 1215.69 L2113.7 1215.69 L2114.28 1215.69 L2114.87 1215.69 L2115.46 1215.69 L2116.04 1215.69 L2116.63 1215.69 L2117.22 1215.69 L2117.8 1215.69 L2118.39 1215.69 L2118.97 1215.69 L2119.56 1215.69 L2120.15 1215.69 L2120.73 1215.69 L2121.32 1215.69 L2121.91 1215.69 L2122.49 1215.69 L2123.08 1215.69 L2123.67 1215.69 L2124.25 1215.69 L2124.84 1215.69 L2125.42 1215.69 L2126.01 1215.69 L2126.6 1215.69 L2127.18 1215.69 L2127.77 1215.69 L2128.36 1215.69 L2128.94 1215.69 L2129.53 1215.69 L2130.12 1215.69 L2130.7 1215.69 L2131.29 1215.69 L2131.88 1215.69 L2132.46 1215.69 L2133.05 1215.69 L2133.63 1215.69 L2134.22 1215.69 L2134.81 1215.69 L2135.39 1215.69 L2135.98 1215.69 L2136.57 1215.69 L2137.15 1215.69 L2137.74 1215.69 L2138.33 1215.69 L2138.91 1215.69 L2139.5 1215.69 L2140.09 1215.69 L2140.67 1215.69 L2141.26 1215.69 L2141.84 1215.69 L2142.43 1215.69 L2143.02 1215.69 L2143.6 1215.69 L2144.19 1215.69 L2144.78 1215.69 L2145.36 1215.69 L2145.95 1215.69 L2146.54 1215.69 L2147.12 1215.69 L2147.71 1215.69 L2148.3 1215.69 L2148.88 1215.69 L2149.47 1215.69 L2150.05 1215.69 L2150.64 1215.69 L2151.23 1215.69 L2151.81 1215.69 L2152.4 1215.69 L2152.99 1215.69 L2153.57 1215.69 L2154.16 1215.69 L2154.75 1215.69 L2155.33 1215.69 L2155.92 1215.69 L2156.5 1215.69 L2157.09 1215.69 L2157.68 1215.69 L2158.26 1215.69 L2158.26 1215.56 L2157.68 1215.56 L2157.09 1215.56 L2156.5 1215.56 L2155.92 1215.56 L2155.33 1215.56 L2154.75 1215.56 L2154.16 1215.56 L2153.57 1215.56 L2152.99 1215.56 L2152.4 1215.56 L2151.81 1215.56 L2151.23 1215.56 L2150.64 1215.56 L2150.05 1215.56 L2149.47 1215.56 L2148.88 1215.56 L2148.3 1215.56 L2147.71 1215.56 L2147.12 1215.56 L2146.54 1215.56 L2145.95 1215.56 L2145.36 1215.56 L2144.78 1215.56 L2144.19 1215.56 L2143.6 1215.56 L2143.02 1215.56 L2142.43 1215.56 L2141.84 1215.56 L2141.26 1215.56 L2140.67 1215.56 L2140.09 1215.56 L2139.5 1215.56 L2138.91 1215.56 L2138.33 1215.56 L2137.74 1215.56 L2137.15 1215.56 L2136.57 1215.56 L2135.98 1215.56 L2135.39 1215.56 L2134.81 1215.56 L2134.22 1215.56 L2133.63 1215.56 L2133.05 1215.56 L2132.46 1215.56 L2131.88 1215.56 L2131.29 1215.56 L2130.7 1215.56 L2130.12 1215.56 L2129.53 1215.56 L2128.94 1215.56 L2128.36 1215.56 L2127.77 1215.56 L2127.18 1215.56 L2126.6 1215.56 L2126.01 1215.56 L2125.42 1215.56 L2124.84 1215.56 L2124.25 1215.56 L2123.67 1215.56 L2123.08 1215.56 L2122.49 1215.56 L2121.91 1215.56 L2121.32 1215.56 L2120.73 1215.56 L2120.15 1215.56 L2119.56 1215.56 L2118.97 1215.56 L2118.39 1215.56 L2117.8 1215.56 L2117.22 1215.56 L2116.63 1215.56 L2116.04 1215.56 L2115.46 1215.56 L2114.87 1215.56 L2114.28 1215.56 L2113.7 1215.56 L2113.11 1215.56 L2112.52 1215.56 L2111.94 1215.56 L2111.35 1215.56 L2110.76 1215.56 L2110.18 1215.56 L2109.59 1215.56 L2109.01 1215.56 L2108.42 1215.56 L2107.83 1215.56 L2107.25 1215.56 L2106.66 1215.56 L2106.07 1215.56 L2105.49 1215.56 L2104.9 1215.56 L2104.31 1215.56 L2103.73 1215.56 L2103.14 1215.56 L2102.55 1215.56 L2101.97 1215.56 L2101.38 1215.56 L2100.8 1215.56 L2100.21 1215.56 L2099.62 1215.56 L2099.04 1215.56 L2098.45 1215.56 L2097.86 1215.56 L2097.28 1215.56 L2096.69 1215.56 L2096.1 1215.56 L2095.52 1215.56 L2094.93 1215.56 L2094.35 1215.56 L2093.76 1215.56 L2093.17 1215.56 L2092.59 1215.56 L2092 1215.56 L2091.41 1215.56 L2090.83 1215.56 L2090.24 1215.56 L2089.65 1215.56 L2089.07 1215.56 L2088.48 1215.56 L2087.89 1215.56 L2087.31 1215.56 L2086.72 1215.56 L2086.14 1215.56 L2085.55 1215.56 L2084.96 1215.56 L2084.38 1215.56 L2083.79 1215.56 L2083.2 1215.56 L2082.62 1215.56 L2082.03 1215.56 L2081.44 1215.56 L2080.86 1215.56 L2080.27 1215.56 L2079.68 1215.56 L2079.1 1215.56 L2078.51 1215.56 L2077.93 1215.56 L2077.34 1215.56 L2076.75 1215.56 L2076.17 1215.56 L2075.58 1215.56 L2074.99 1215.56 L2074.41 1215.56 L2073.82 1215.56 L2073.23 1215.56 L2072.65 1215.56 L2072.06 1215.56 L2071.48 1215.56 L2070.89 1215.56 L2070.3 1215.56 L2069.72 1215.56 L2069.13 1215.56 L2068.54 1215.56 L2067.96 1215.56 L2067.37 1215.56 L2066.78 1215.56 L2066.2 1215.56 L2065.61 1215.56 L2065.02 1215.56 L2064.44 1215.56 L2063.85 1215.56 L2063.27 1215.56 L2062.68 1215.56 L2062.09 1215.56 L2061.51 1215.56 L2060.92 1215.56 L2060.33 1215.56 L2059.75 1215.56 L2059.16 1215.56 L2058.57 1215.56 L2057.99 1215.56 L2057.4 1215.56 L2056.81 1215.56 L2056.23 1215.56 L2055.64 1215.56 L2055.06 1215.56 L2054.47 1215.56 L2053.88 1215.56 L2053.3 1215.56 L2052.71 1215.56 L2052.12 1215.56 L2051.54 1215.56 L2050.95 1215.56 L2050.36 1215.56 L2049.78 1215.56 L2049.19 1215.56 L2048.6 1215.56 L2048.02 1215.56 L2047.43 1215.56 L2046.85 1215.56 L2046.26 1215.56 L2045.67 1215.56 L2045.09 1215.56 L2044.5 1215.56 L2043.91 1215.56 L2043.33 1215.56 L2042.74 1215.56 L2042.15 1215.56 L2041.57 1215.56 L2040.98 1215.56 L2040.4 1215.56 L2039.81 1215.56 L2039.22 1215.56 L2038.64 1215.56 L2038.05 1215.56 L2037.46 1215.56 L2036.88 1215.56 L2036.29 1215.56 L2035.7 1215.56 L2035.12 1215.56 L2034.53 1215.56 L2033.94 1215.56 L2033.36 1215.56 L2032.77 1215.56 L2032.19 1215.56 L2031.6 1215.56 L2031.01 1215.56 L2030.43 1215.56 L2029.84 1215.56 L2029.25 1215.56 L2028.67 1215.56 L2028.08 1215.56 L2027.49 1215.56 L2026.91 1215.56 L2026.32 1215.56 L2025.73 1215.56 L2025.15 1215.56 L2024.56 1215.56 L2023.98 1215.56 L2023.39 1215.56 L2022.8 1215.56 L2022.22 1215.56 L2021.63 1215.56 L2021.04 1215.56 L2020.46 1215.56 L2019.87 1215.56 L2019.28 1215.56 L2018.7 1215.56 L2018.11 1215.56 L2017.53 1215.56 L2016.94 1215.56 L2016.35 1215.56 L2015.77 1215.56 L2015.18 1215.56 L2014.59 1215.56 L2014.01 1215.56 L2013.42 1215.56 L2012.83 1215.56 L2012.25 1215.56 L2011.66 1215.56 L2011.07 1215.56 L2010.49 1215.56 L2009.9 1215.56 L2009.32 1215.56 L2008.73 1215.56 L2008.14 1215.56 L2007.56 1215.56 L2006.97 1215.56 L2006.38 1215.56 L2005.8 1215.56 L2005.21 1215.56 L2004.62 1215.56 L2004.04 1215.56 L2003.45 1215.56 L2002.86 1215.56 L2002.28 1215.56 L2001.69 1215.56 L2001.11 1215.56 L2000.52 1215.56 L1999.93 1215.56 L1999.35 1215.56 L1998.76 1215.56 L1998.17 1215.56 L1997.59 1215.56 L1997 1215.56 L1996.41 1215.56 L1995.83 1215.56 L1995.24 1215.56 L1994.65 1215.56 L1994.07 1215.56 L1993.48 1215.56 L1992.9 1215.56 L1992.31 1215.56 L1991.72 1215.56 L1991.14 1215.56 L1990.55 1215.56 L1989.96 1215.56 L1989.38 1215.56 L1988.79 1215.56 L1988.2 1215.56 L1987.62 1215.56 L1987.03 1215.56 L1986.45 1215.56 L1985.86 1215.56 L1985.27 1215.56 L1984.69 1215.56 L1984.1 1215.56 L1983.51 1215.56 L1982.93 1215.56 L1982.34 1215.56 L1981.75 1215.56 L1981.17 1215.56 L1980.58 1215.56 L1979.99 1215.56 L1979.41 1215.56 L1978.82 1215.56 L1978.24 1215.56 L1977.65 1215.56 L1977.06 1215.56 L1976.48 1215.56 L1975.89 1215.56 L1975.3 1215.56 L1974.72 1215.56 L1974.13 1215.56 L1973.54 1215.56 L1972.96 1215.56 L1972.37 1215.56 L1971.78 1215.56 L1971.2 1215.56 L1970.61 1215.56 L1970.03 1215.56 L1969.44 1215.56 L1968.85 1215.56 L1968.27 1215.56 L1967.68 1215.56 L1967.09 1215.56 L1966.51 1215.56 L1965.92 1215.56 L1965.33 1215.56 L1964.75 1215.56 L1964.16 1215.56 L1963.58 1215.56 L1962.99 1215.56 L1962.4 1215.56 L1961.82 1215.56 L1961.23 1215.56 L1960.64 1215.56 L1960.06 1215.56 L1959.47 1215.56 L1958.88 1215.56 L1958.3 1215.56 L1957.71 1215.56 L1957.12 1215.56 L1956.54 1215.56 L1955.95 1215.56 L1955.37 1215.56 L1954.78 1215.56 L1954.19 1215.56 L1953.61 1215.56 L1953.02 1215.56 L1952.43 1215.56 L1951.85 1215.56 L1951.26 1215.56 L1950.67 1215.56 L1950.09 1215.56 L1949.5 1215.56 L1948.91 1215.56 L1948.33 1215.56 L1947.74 1215.56 L1947.16 1215.56 L1946.57 1215.56 L1945.98 1215.56 L1945.4 1215.56 L1944.81 1215.56 L1944.22 1215.56 L1943.64 1215.56 L1943.05 1215.56 L1942.46 1215.56 L1941.88 1215.56 L1941.29 1215.56 L1940.71 1215.56 L1940.12 1215.56 L1939.53 1215.56 L1938.95 1215.56 L1938.36 1215.56 L1937.77 1215.56 L1937.19 1215.56 L1936.6 1215.56 L1936.01 1215.56 L1935.43 1215.56 L1934.84 1215.56 L1934.25 1215.56 L1933.67 1215.56 L1933.08 1215.56 L1932.5 1215.56 L1931.91 1215.56 L1931.32 1215.56 L1930.74 1215.56 L1930.15 1215.56 L1929.56 1215.56 L1928.98 1215.56 L1928.39 1215.56 L1927.8 1215.56 L1927.22 1215.56 L1926.63 1215.56 L1926.04 1215.56 L1925.46 1215.56 L1924.87 1215.56 L1924.29 1215.56 L1923.7 1215.56 L1923.11 1215.56 L1922.53 1215.56 L1921.94 1215.56 L1921.35 1215.56 L1920.77 1215.56 L1920.18 1215.56 L1919.59 1215.56 L1919.01 1215.56 L1918.42 1215.56 L1917.83 1215.56 L1917.25 1215.56 L1916.66 1215.56 L1916.08 1215.56 L1915.49 1215.56 L1914.9 1215.56 L1914.32 1215.56 L1913.73 1215.56 L1913.14 1215.56 L1912.56 1215.56 L1911.97 1215.56 L1911.38 1215.56 L1910.8 1215.56 L1910.21 1215.56 L1909.63 1215.56 L1909.04 1215.56 L1908.45 1215.56 L1907.87 1215.56 L1907.28 1215.56 L1906.69 1215.56 L1906.11 1215.56 L1905.52 1215.56 L1904.93 1215.56 L1904.35 1215.56 L1903.76 1215.56 L1903.17 1215.56 L1902.59 1215.56 L1902 1215.56 L1901.42 1215.56 L1900.83 1215.56 L1900.24 1215.56 L1899.66 1215.56 L1899.07 1215.56 L1898.48 1215.56 L1897.9 1215.56 L1897.31 1215.56 L1896.72 1215.56 L1896.14 1215.56 L1895.55 1215.56 L1894.96 1215.56 L1894.38 1215.56 L1893.79 1215.56 L1893.21 1215.56 L1892.62 1215.56 L1892.03 1215.56 L1891.45 1215.56 L1890.86 1215.56 L1890.27 1215.56 L1889.69 1215.56 L1889.1 1215.56 L1888.51 1215.56 L1887.93 1215.56 L1887.34 1215.56 L1886.76 1215.56 L1886.17 1215.56 L1885.58 1215.56 L1885 1215.56 L1884.41 1215.56 L1883.82 1215.56 L1883.24 1215.56 L1882.65 1215.56 L1882.06 1215.56 L1881.48 1215.56 L1880.89 1215.56 L1880.3 1215.56 L1879.72 1215.56 L1879.13 1215.56 L1878.55 1215.56 L1877.96 1215.56 L1877.37 1215.56 L1876.79 1215.56 L1876.2 1215.56 L1875.61 1215.56 L1875.03 1215.56 L1874.44 1215.56 L1873.85 1215.56 L1873.27 1215.56 L1872.68 1215.56 L1872.09 1215.56 L1871.51 1215.56 L1870.92 1215.56 L1870.34 1215.56 L1869.75 1215.56 L1869.16 1215.56 L1868.58 1215.56 L1867.99 1215.56 L1867.4 1215.56 L1866.82 1215.56 L1866.23 1215.56 L1865.64 1215.56 L1865.06 1215.56 L1864.47 1215.56 L1863.88 1215.56 L1863.3 1215.56 L1862.71 1215.56 L1862.13 1215.56 L1861.54 1215.56 L1860.95 1215.56 L1860.37 1215.56 L1859.78 1215.56 L1859.19 1215.56 L1858.61 1215.56 L1858.02 1215.56 L1857.43 1215.56 L1856.85 1215.56 L1856.26 1215.56 L1855.68 1215.56 L1855.09 1215.56 L1854.5 1215.56 L1853.92 1215.56 L1853.33 1215.56 L1852.74 1215.56 L1852.16 1215.56 L1851.57 1215.56 L1850.98 1215.56 L1850.4 1215.56 L1849.81 1215.56 L1849.22 1215.56 L1848.64 1215.56 L1848.05 1215.56 L1847.47 1215.56 L1846.88 1215.56 L1846.29 1215.56 L1845.71 1215.56 L1845.12 1215.56 L1844.53 1215.56 L1843.95 1215.56 L1843.36 1215.56 L1842.77 1215.56 L1842.19 1215.56 L1841.6 1215.56 L1841.01 1215.56 L1840.43 1215.56 L1839.84 1215.56 L1839.26 1215.56 L1838.67 1215.56 L1838.08 1215.56 L1837.5 1215.56 L1836.91 1215.56 L1836.32 1215.56 L1835.74 1215.56 L1835.15 1215.56 L1834.56 1215.56 L1833.98 1215.56 L1833.39 1215.56 L1832.81 1215.56 L1832.22 1215.56 L1831.63 1215.56 L1831.05 1215.56 L1830.46 1215.56 L1829.87 1215.56 L1829.29 1215.56 L1828.7 1215.56 L1828.11 1215.56 L1827.53 1215.56 L1826.94 1215.56 L1826.35 1215.56 L1825.77 1215.56 L1825.18 1215.56 L1824.6 1215.56 L1824.01 1215.56 L1823.42 1215.56 L1822.84 1215.56 L1822.25 1215.56 L1821.66 1215.56 L1821.08 1215.56 L1820.49 1215.56 L1819.9 1215.56 L1819.32 1215.56 L1818.73 1215.56 L1818.14 1215.56 L1817.56 1215.56 L1816.97 1215.56 L1816.39 1215.56 L1815.8 1215.56 L1815.21 1215.56 L1814.63 1215.56 L1814.04 1215.56 L1813.45 1215.56 L1812.87 1215.56 L1812.28 1215.56 L1811.69 1215.56 L1811.11 1215.56 L1810.52 1215.56 L1809.94 1215.56 L1809.35 1215.56 L1808.76 1215.56 L1808.18 1215.56 L1807.59 1215.56 L1807 1215.56 L1806.42 1215.56 L1805.83 1215.56 L1805.24 1215.56 L1804.66 1215.56 L1804.07 1215.56 L1803.48 1215.56 L1802.9 1215.56 L1802.31 1215.56 L1801.73 1215.56 L1801.14 1215.56 L1800.55 1215.56 L1799.97 1215.56 L1799.38 1215.56 L1798.79 1215.56 L1798.21 1215.56 L1797.62 1215.56 L1797.03 1215.56 L1796.45 1215.56 L1795.86 1215.56 L1795.27 1215.56 L1794.69 1215.56 L1794.1 1215.56 L1793.52 1215.56 L1792.93 1215.56 L1792.34 1215.56 L1791.76 1215.56 L1791.17 1215.56 L1790.58 1215.56 L1790 1215.56 L1789.41 1215.56 L1788.82 1215.56 L1788.24 1215.56 L1787.65 1215.56 L1787.06 1215.56 L1786.48 1215.56 L1785.89 1215.56 L1785.31 1215.56 L1784.72 1215.56 L1784.13 1215.56 L1783.55 1215.56 L1782.96 1215.56 L1782.37 1215.56 L1781.79 1215.56 L1781.2 1215.56 L1780.61 1215.56 L1780.03 1215.56 L1779.44 1215.56 L1778.86 1215.56 L1778.27 1215.56 L1777.68 1215.56 L1777.1 1215.56 L1776.51 1215.56 L1775.92 1215.56 L1775.34 1215.56 L1774.75 1215.56 L1774.16 1215.56 L1773.58 1215.56 L1772.99 1215.56 L1772.4 1215.56 L1771.82 1215.56 L1771.23 1215.56 L1770.65 1215.56 L1770.06 1215.56 L1769.47 1215.56 L1768.89 1215.56 L1768.3 1215.56 L1767.71 1215.56 L1767.13 1215.56 L1766.54 1215.56 L1765.95 1215.56 L1765.37 1215.56 L1764.78 1215.56 L1764.19 1215.56 L1763.61 1215.56 L1763.02 1215.56 L1762.44 1215.56 L1761.85 1215.56 L1761.26 1215.56 L1760.68 1215.56 L1760.09 1215.56 L1759.5 1215.56 L1758.92 1215.56 L1758.33 1215.56 L1757.74 1215.56 L1757.16 1215.56 L1756.57 1215.56 L1755.99 1215.56 L1755.4 1215.56 L1754.81 1215.56 L1754.23 1215.56 L1753.64 1215.56 L1753.05 1215.56 L1752.47 1215.56 L1751.88 1215.56 L1751.29 1215.56 L1750.71 1215.56 L1750.12 1215.56 L1749.53 1215.56 L1748.95 1215.56 L1748.36 1215.56 L1747.78 1215.56 L1747.19 1215.56 L1746.6 1215.56 L1746.02 1215.56 L1745.43 1215.56 L1744.84 1215.56 L1744.26 1215.56 L1743.67 1215.56 L1743.08 1215.56 L1742.5 1215.56 L1741.91 1215.56 L1741.32 1215.56 L1740.74 1215.56 L1740.15 1215.56 L1739.57 1215.56 L1738.98 1215.56 L1738.39 1215.56 L1737.81 1215.56 L1737.22 1215.56 L1736.63 1215.56 L1736.05 1215.56 L1735.46 1215.56 L1734.87 1215.56 L1734.29 1215.56 L1733.7 1215.56 L1733.11 1215.56 L1732.53 1215.56 L1731.94 1215.56 L1731.36 1215.56 L1730.77 1215.56 L1730.18 1215.56 L1729.6 1215.56 L1729.01 1215.56 L1728.42 1215.56 L1727.84 1215.56 L1727.25 1215.56 L1726.66 1215.56 L1726.08 1215.56 L1725.49 1215.56 L1724.91 1215.56 L1724.32 1215.56 L1723.73 1215.56 L1723.15 1215.56 L1722.56 1215.56 L1721.97 1215.56 L1721.39 1215.56 L1720.8 1215.56 L1720.21 1215.56 L1719.63 1215.56 L1719.04 1215.56 L1718.45 1215.56 L1717.87 1215.56 L1717.28 1215.56 L1716.7 1215.56 L1716.11 1215.56 L1715.52 1215.56 L1714.94 1215.56 L1714.35 1215.56 L1713.76 1215.56 L1713.18 1215.56 L1712.59 1215.56 L1712 1215.56 L1711.42 1215.56 L1710.83 1215.56 L1710.24 1215.56 L1709.66 1215.56 L1709.07 1215.56 L1708.49 1215.56 L1707.9 1215.56 L1707.31 1215.56 L1706.73 1215.56 L1706.14 1215.56 L1705.55 1215.56 L1704.97 1215.56 L1704.38 1215.56 L1703.79 1215.56 L1703.21 1215.56 L1702.62 1215.56 L1702.04 1215.56 L1701.45 1215.56 L1700.86 1215.56 L1700.28 1215.56 L1699.69 1215.56 L1699.1 1215.56 L1698.52 1215.56 L1697.93 1215.56 L1697.34 1215.56 L1696.76 1215.56 L1696.17 1215.56 L1695.58 1215.56 L1695 1215.56 L1694.41 1215.56 L1693.83 1215.56 L1693.24 1215.56 L1692.65 1215.56 L1692.07 1215.56 L1691.48 1215.56 L1690.89 1215.56 L1690.31 1215.56 L1689.72 1215.56 L1689.13 1215.56 L1688.55 1215.56 L1687.96 1215.56 L1687.37 1215.56 L1686.79 1215.56 L1686.2 1215.56 L1685.62 1215.56 L1685.03 1215.56 L1684.44 1215.56 L1683.86 1215.56 L1683.27 1215.56 L1682.68 1215.56 L1682.1 1215.56 L1681.51 1215.56 L1680.92 1215.56 L1680.34 1215.56 L1679.75 1215.56 L1679.17 1215.56 L1678.58 1215.56 L1677.99 1215.56 L1677.41 1215.56 L1676.82 1215.56 L1676.23 1215.56 L1675.65 1215.56 L1675.06 1215.56 L1674.47 1215.56 L1673.89 1215.56 L1673.3 1215.56 L1672.71 1215.56 L1672.13 1215.56 L1671.54 1215.56 L1670.96 1215.56 L1670.37 1215.56 L1669.78 1215.56 L1669.2 1215.56 L1668.61 1215.56 L1668.02 1215.56 L1667.44 1215.56 L1666.85 1215.56 L1666.26 1215.56 L1665.68 1215.56 L1665.09 1215.56 L1664.5 1215.56 L1663.92 1215.56 L1663.33 1215.56 L1662.75 1215.56 L1662.16 1215.56 L1661.57 1215.56 L1660.99 1215.56 L1660.4 1215.56 L1659.81 1215.56 L1659.23 1215.56 L1658.64 1215.56 L1658.05 1215.56 L1657.47 1215.56 L1656.88 1215.56 L1656.29 1215.56 L1655.71 1215.56 L1655.12 1215.56 L1654.54 1215.56 L1653.95 1215.56 L1653.36 1215.56 L1652.78 1215.56 L1652.19 1215.56 L1651.6 1215.56 L1651.02 1215.56 L1650.43 1215.56 L1649.84 1215.56 L1649.26 1215.56 L1648.67 1215.56 L1648.09 1215.56 L1647.5 1215.56 L1646.91 1215.56 L1646.33 1215.56 L1645.74 1215.56 L1645.15 1215.56 L1644.57 1215.56 L1643.98 1215.56 L1643.39 1215.56 L1642.81 1215.56 L1642.22 1215.56 L1641.63 1215.56 L1641.05 1215.56 L1640.46 1215.56 L1639.88 1215.56 L1639.29 1215.56 L1638.7 1215.56 L1638.12 1215.56 L1637.53 1215.56 L1636.94 1215.56 L1636.36 1215.56 L1635.77 1215.56 L1635.18 1215.56 L1634.6 1215.56 L1634.01 1215.56 L1633.42 1215.56 L1632.84 1215.56 L1632.25 1215.56 L1631.67 1215.56 L1631.08 1215.56 L1630.49 1215.56 L1629.91 1215.56 L1629.32 1215.56 L1628.73 1215.56 L1628.15 1215.56 L1627.56 1215.56 L1626.97 1215.56 L1626.39 1215.56 L1625.8 1215.56 L1625.22 1215.56 L1624.63 1215.56 L1624.04 1215.56 L1623.46 1215.56 L1622.87 1215.56 L1622.28 1215.56 L1621.7 1215.56 L1621.11 1215.56 L1620.52 1215.56 L1619.94 1215.56 L1619.35 1215.56 L1618.76 1215.56 L1618.18 1215.56 L1617.59 1215.56 L1617.01 1215.56 L1616.42 1215.56 L1615.83 1215.56 L1615.25 1215.56 L1614.66 1215.56 L1614.07 1215.56 L1613.49 1215.56 L1612.9 1215.56 L1612.31 1215.56 L1611.73 1215.56 L1611.14 1215.56 L1610.55 1215.56 L1609.97 1215.56 L1609.38 1215.56 L1608.8 1215.56 L1608.21 1215.56 L1607.62 1215.56 L1607.04 1215.56 L1606.45 1215.56 L1605.86 1215.56 L1605.28 1215.56 L1604.69 1215.56 L1604.1 1215.56 L1603.52 1215.56 L1602.93 1215.56 L1602.34 1215.56 L1601.76 1215.56 L1601.17 1215.56 L1600.59 1215.56 L1600 1215.56 L1599.41 1215.56 L1598.83 1215.56 L1598.24 1215.56 L1597.65 1215.56 L1597.07 1215.56 L1596.48 1215.56 L1595.89 1215.56 L1595.31 1215.56 L1594.72 1215.56 L1594.14 1215.56 L1593.55 1215.56 L1592.96 1215.56 L1592.38 1215.56 L1591.79 1215.56 L1591.2 1215.56 L1590.62 1215.56 L1590.03 1215.56 L1589.44 1215.56 L1588.86 1215.56 L1588.27 1215.56 L1587.68 1215.56 L1587.1 1215.56 L1586.51 1215.56 L1585.93 1215.56 L1585.34 1215.56 L1584.75 1215.56 L1584.17 1215.56 L1583.58 1215.56 L1582.99 1215.56 L1582.41 1215.56 L1581.82 1215.56 L1581.23 1215.56 L1580.65 1215.56 L1580.06 1215.56 L1579.47 1215.56 L1578.89 1215.56 L1578.3 1215.56 L1577.72 1215.56 L1577.13 1215.56 L1576.54 1215.56 L1575.96 1215.56 L1575.37 1215.56 L1574.78 1215.56 L1574.2 1215.56 L1573.61 1215.56 L1573.02 1215.56 L1572.44 1215.56 L1571.85 1215.56 L1571.27 1215.56 L1570.68 1215.56 L1570.09 1215.56 L1569.51 1215.56 L1568.92 1215.56 L1568.33 1215.56 L1567.75 1215.56 L1567.16 1215.56 L1566.57 1215.56 L1565.99 1215.56 L1565.4 1215.56 L1564.81 1215.56 L1564.23 1215.56 L1563.64 1215.56 L1563.06 1215.56 L1562.47 1215.56 L1561.88 1215.56 L1561.3 1215.56 L1560.71 1215.56 L1560.12 1215.56 L1559.54 1215.56 L1558.95 1215.56 L1558.36 1215.56 L1557.78 1215.56 L1557.19 1215.56 L1556.6 1215.56 L1556.02 1215.56 L1555.43 1215.56 L1554.85 1215.56 L1554.26 1215.56 L1553.67 1215.56 L1553.09 1215.56 L1552.5 1215.56 L1551.91 1215.56 L1551.33 1215.56 L1550.74 1215.56 L1550.15 1215.56 L1549.57 1215.56 L1548.98 1215.56 L1548.4 1215.56 L1547.81 1215.56 L1547.22 1215.56 L1546.64 1215.56 L1546.05 1215.56 L1545.46 1215.56 L1544.88 1215.56 L1544.29 1215.56 L1543.7 1215.56 L1543.12 1215.56 L1542.53 1215.56 L1541.94 1215.56 L1541.36 1215.56 L1540.77 1215.56 L1540.19 1215.56 L1539.6 1215.56 L1539.01 1215.56 L1538.43 1215.56 L1537.84 1215.56 L1537.25 1215.56 L1536.67 1215.56 L1536.08 1215.56 L1535.49 1215.56 L1534.91 1215.56 L1534.32 1215.56 L1533.73 1215.56 L1533.15 1215.56 L1532.56 1215.56 L1531.98 1215.56 L1531.39 1215.56 L1530.8 1215.56 L1530.22 1215.56 L1529.63 1215.56 L1529.04 1215.56 L1528.46 1215.56 L1527.87 1215.56 L1527.28 1215.56 L1526.7 1215.56 L1526.11 1215.56 L1525.52 1215.56 L1524.94 1215.56 L1524.35 1215.56 L1523.77 1215.56 L1523.18 1215.56 L1522.59 1215.56 L1522.01 1215.56 L1521.42 1215.56 L1520.83 1215.56 L1520.25 1215.56 L1519.66 1215.56 L1519.07 1215.56 L1518.49 1215.56 L1517.9 1215.56 L1517.32 1215.56 L1516.73 1215.56 L1516.14 1215.56 L1515.56 1215.56 L1514.97 1215.56 L1514.38 1215.56 L1513.8 1215.56 L1513.21 1215.56 L1512.62 1215.56 L1512.04 1215.56 L1511.45 1215.56 L1510.86 1215.56 L1510.28 1215.56 L1509.69 1215.56 L1509.11 1215.56 L1508.52 1215.56 L1507.93 1215.56 L1507.35 1215.56 L1506.76 1215.56 L1506.17 1215.56 L1505.59 1215.56 L1505 1215.56 L1504.41 1215.56 L1503.83 1215.56 L1503.24 1215.56 L1502.65 1215.56 L1502.07 1215.56 L1501.48 1215.56 L1500.9 1215.56 L1500.31 1215.56 L1499.72 1215.56 L1499.14 1215.56 L1498.55 1215.56 L1497.96 1215.56 L1497.38 1215.56 L1496.79 1215.56 L1496.2 1215.56 L1495.62 1215.56 L1495.03 1215.56 L1494.45 1215.56 L1493.86 1215.56 L1493.27 1215.56 L1492.69 1215.56 L1492.1 1215.56 L1491.51 1215.56 L1490.93 1215.56 L1490.34 1215.56 L1489.75 1215.56 L1489.17 1215.56 L1488.58 1215.56 L1487.99 1215.56 L1487.41 1215.56 L1486.82 1215.56 L1486.24 1215.56 L1485.65 1215.56 L1485.06 1215.56 L1484.48 1215.56 L1483.89 1215.56 L1483.3 1215.56 L1482.72 1215.56 L1482.13 1215.56 L1481.54 1215.56 L1480.96 1215.56 L1480.37 1215.56 L1479.78 1215.56 L1479.2 1215.56 L1478.61 1215.56 L1478.03 1215.56 L1477.44 1215.56 L1476.85 1215.56 L1476.27 1215.56 L1475.68 1215.56 L1475.09 1215.56 L1474.51 1215.56 L1473.92 1215.56 L1473.33 1215.56 L1472.75 1215.56 L1472.16 1215.56 L1471.57 1215.56 L1470.99 1215.56 L1470.4 1215.56 L1469.82 1215.56 L1469.23 1215.56 L1468.64 1215.56 L1468.06 1215.56 L1467.47 1215.56 L1466.88 1215.56 L1466.3 1215.56 L1465.71 1215.56 L1465.12 1215.56 L1464.54 1215.56 L1463.95 1215.56 L1463.37 1215.56 L1462.78 1215.56 L1462.19 1215.56 L1461.61 1215.56 L1461.02 1215.56 L1460.43 1215.56 L1459.85 1215.56 L1459.26 1215.56 L1458.67 1215.56 L1458.09 1215.56 L1457.5 1215.56 L1456.91 1215.56 L1456.33 1215.56 L1455.74 1215.56 L1455.16 1215.56 L1454.57 1215.56 L1453.98 1215.56 L1453.4 1215.56 L1452.81 1215.56 L1452.22 1215.56 L1451.64 1215.56 L1451.05 1215.56 L1450.46 1215.56 L1449.88 1215.56 L1449.29 1215.56 L1448.7 1215.56 L1448.12 1215.56 L1447.53 1215.56 L1446.95 1215.56 L1446.36 1215.56 L1445.77 1215.56 L1445.19 1215.56 L1444.6 1215.56 L1444.01 1215.56 L1443.43 1215.56 L1442.84 1215.56 L1442.25 1215.56 L1441.67 1215.56 L1441.08 1215.56 L1440.5 1215.56 L1439.91 1215.56 L1439.32 1215.56 L1438.74 1215.56 L1438.15 1215.56 L1437.56 1215.56 L1436.98 1215.56 L1436.39 1215.56 L1435.8 1215.56 L1435.22 1215.56 L1434.63 1215.56 L1434.04 1215.56 L1433.46 1215.56 L1432.87 1215.56 L1432.29 1215.56 L1431.7 1215.56 L1431.11 1215.56 L1430.53 1215.56 L1429.94 1215.56 L1429.35 1215.56 L1428.77 1215.56 L1428.18 1215.56 L1427.59 1215.56 L1427.01 1215.56 L1426.42 1215.56 L1425.83 1215.56 L1425.25 1215.56 L1424.66 1215.56 L1424.08 1215.56 L1423.49 1215.56 L1422.9 1215.56 L1422.32 1215.56 L1421.73 1215.56 L1421.14 1215.56 L1420.56 1215.56 L1419.97 1215.56 L1419.38 1215.56 L1418.8 1215.56 L1418.21 1215.56 L1417.63 1215.56 L1417.04 1215.56 L1416.45 1215.56 L1415.87 1215.56 L1415.28 1215.56 L1414.69 1215.56 L1414.11 1215.56 L1413.52 1215.56 L1412.93 1215.56 L1412.35 1215.56 L1411.76 1215.56 L1411.17 1215.56 L1410.59 1215.56 L1410 1215.56 L1409.42 1215.56 L1408.83 1215.56 L1408.24 1215.56 L1407.66 1215.56 L1407.07 1215.56 L1406.48 1215.56 L1405.9 1215.56 L1405.31 1215.56 L1404.72 1215.56 L1404.14 1215.56 L1403.55 1215.56 L1402.96 1215.56 L1402.38 1215.56 L1401.79 1215.56 L1401.21 1215.56 L1400.62 1215.56 L1400.03 1215.56 L1399.45 1215.56 L1398.86 1215.56 L1398.27 1215.56 L1397.69 1215.56 L1397.1 1215.56 L1396.51 1215.56 L1395.93 1215.56 L1395.34 1215.56 L1394.75 1215.56 L1394.17 1215.56 L1393.58 1215.56 L1393 1215.56 L1392.41 1215.56 L1391.82 1215.56 L1391.24 1215.56 L1390.65 1215.56 L1390.06 1215.56 L1389.48 1215.56 L1388.89 1215.56 L1388.3 1215.56 L1387.72 1215.56 L1387.13 1215.56 L1386.55 1215.56 L1385.96 1215.56 L1385.37 1215.56 L1384.79 1215.56 L1384.2 1215.56 L1383.61 1215.56 L1383.03 1215.56 L1382.44 1215.56 L1381.85 1215.56 L1381.27 1215.56 L1380.68 1215.56 L1380.09 1215.56 L1379.51 1215.56 L1378.92 1215.56 L1378.34 1215.56 L1377.75 1215.56 L1377.16 1215.56 L1376.58 1215.56 L1375.99 1215.56 L1375.4 1215.56 L1374.82 1215.56 L1374.23 1215.56 L1373.64 1215.56 L1373.06 1215.56 L1372.47 1215.56 L1371.88 1215.56 L1371.3 1215.56 L1370.71 1215.56 L1370.13 1215.56 L1369.54 1215.56 L1368.95 1215.56 L1368.37 1215.56 L1367.78 1215.56 L1367.19 1215.56 L1366.61 1215.56 L1366.02 1215.56 L1365.43 1215.56 L1364.85 1215.56 L1364.26 1215.56 L1363.68 1215.56 L1363.09 1215.56 L1362.5 1215.56 L1361.92 1215.56 L1361.33 1215.56 L1360.74 1215.56 L1360.16 1215.56 L1359.57 1215.56 L1358.98 1215.56 L1358.4 1215.56 L1357.81 1215.56 L1357.22 1215.56 L1356.64 1215.56 L1356.05 1215.56 L1355.47 1215.56 L1354.88 1215.56 L1354.29 1215.56 L1353.71 1215.56 L1353.12 1215.56 L1352.53 1215.56 L1351.95 1215.56 L1351.36 1215.56 L1350.77 1215.56 L1350.19 1215.56 L1349.6 1215.56 L1349.01 1215.56 L1348.43 1215.56 L1347.84 1215.56 L1347.26 1215.56 L1346.67 1215.56 L1346.08 1215.56 L1345.5 1215.56 L1344.91 1215.56 L1344.32 1215.56 L1343.74 1215.56 L1343.15 1215.56 L1342.56 1215.56 L1341.98 1215.56 L1341.39 1215.56 L1340.8 1215.56 L1340.22 1215.56 L1339.63 1215.56 L1339.05 1215.56 L1338.46 1215.56 L1337.87 1215.56 L1337.29 1215.56 L1336.7 1215.56 L1336.11 1215.56 L1335.53 1215.56 L1334.94 1215.56 L1334.35 1215.56 L1333.77 1215.56 L1333.18 1215.56 L1332.6 1215.56 L1332.01 1215.56 L1331.42 1215.56 L1330.84 1215.56 L1330.25 1215.56 L1329.66 1215.56 L1329.08 1215.56 L1328.49 1215.56 L1327.9 1215.56 L1327.32 1215.56 L1326.73 1215.56 L1326.14 1215.56 L1325.56 1215.56 L1324.97 1215.56 L1324.39 1215.56 L1323.8 1215.56 L1323.21 1215.56 L1322.63 1215.56 L1322.04 1215.56 L1321.45 1215.56 L1320.87 1215.56 L1320.28 1215.56 L1319.69 1215.56 L1319.11 1215.56 L1318.52 1215.56 L1317.93 1215.56 L1317.35 1215.56 L1316.76 1215.56 L1316.18 1215.56 L1315.59 1215.56 L1315 1215.56 L1314.42 1215.56 L1313.83 1215.56 L1313.24 1215.56 L1312.66 1215.56 L1312.07 1215.56 L1311.48 1215.56 L1310.9 1215.56 L1310.31 1215.56 L1309.73 1215.56 L1309.14 1215.56 L1308.55 1215.56 L1307.97 1215.56 L1307.38 1215.56 L1306.79 1215.56 L1306.21 1215.56 L1305.62 1215.56 L1305.03 1215.56 L1304.45 1215.56 L1303.86 1215.56 L1303.27 1215.56 L1302.69 1215.56 L1302.1 1215.56 L1301.52 1215.56 L1300.93 1215.56 L1300.34 1215.56 L1299.76 1215.56 L1299.17 1215.56 L1298.58 1215.56 L1298 1215.56 L1297.41 1215.56 L1296.82 1215.56 L1296.24 1215.56 L1295.65 1215.56 L1295.06 1215.56 L1294.48 1215.56 L1293.89 1215.56 L1293.31 1215.56 L1292.72 1215.56 L1292.13 1215.56 L1291.55 1215.56 L1290.96 1215.56 L1290.37 1215.56 L1289.79 1215.56 L1289.2 1215.56 L1288.61 1215.56 L1288.03 1215.56 L1287.44 1215.56 L1286.86 1215.56 L1286.27 1215.56 L1285.68 1215.56 L1285.1 1215.56 L1284.51 1215.56 L1283.92 1215.56 L1283.34 1215.56 L1282.75 1215.56 L1282.16 1215.56 L1281.58 1215.56 L1280.99 1215.56 L1280.4 1215.56 L1279.82 1215.56 L1279.23 1215.56 L1278.65 1215.56 L1278.06 1215.56 L1277.47 1215.56 L1276.89 1215.56 L1276.3 1215.56 L1275.71 1215.56 L1275.13 1215.56 L1274.54 1215.56 L1273.95 1215.56 L1273.37 1215.56 L1272.78 1215.56 L1272.19 1215.56 L1271.61 1215.56 L1271.02 1215.56 L1270.44 1215.56 L1269.85 1215.56 L1269.26 1215.56 L1268.68 1215.56 L1268.09 1215.56 L1267.5 1215.56 L1266.92 1215.56 L1266.33 1215.56 L1265.74 1215.56 L1265.16 1215.56 L1264.57 1215.56 L1263.98 1215.56 L1263.4 1215.56 L1262.81 1215.56 L1262.23 1215.56 L1261.64 1215.56 L1261.05 1215.56 L1260.47 1215.56 L1259.88 1215.56 L1259.29 1215.56 L1258.71 1215.56 L1258.12 1215.56 L1257.53 1215.56 L1256.95 1215.56 L1256.36 1215.56 L1255.78 1215.56 L1255.19 1215.56 L1254.6 1215.56 L1254.02 1215.56 L1253.43 1215.56 L1252.84 1215.56 L1252.26 1215.56 L1251.67 1215.56 L1251.08 1215.56 L1250.5 1215.56 L1249.91 1215.56 L1249.32 1215.56 L1248.74 1215.56 L1248.15 1215.56 L1247.57 1215.56 L1246.98 1215.56 L1246.39 1215.56 L1245.81 1215.56 L1245.22 1215.56 L1244.63 1215.56 L1244.05 1215.56 L1243.46 1215.56 L1242.87 1215.56 L1242.29 1215.56 L1241.7 1215.56 L1241.11 1215.56 L1240.53 1215.56 L1239.94 1215.56 L1239.36 1215.56 L1238.77 1215.56 L1238.18 1215.56 L1237.6 1215.56 L1237.01 1215.56 L1236.42 1215.56 L1235.84 1215.56 L1235.25 1215.56 L1234.66 1215.56 L1234.08 1215.56 L1233.49 1215.56 L1232.91 1215.56 L1232.32 1215.56 L1231.73 1215.56 L1231.15 1215.56 L1230.56 1215.56 L1229.97 1215.56 L1229.39 1215.56 L1228.8 1215.56 L1228.21 1215.56 L1227.63 1215.56 L1227.04 1215.56 L1226.45 1215.56 L1225.87 1215.56 L1225.28 1215.56 L1224.7 1215.56 L1224.11 1215.56 L1223.52 1215.56 L1222.94 1215.56 L1222.35 1215.56 L1221.76 1215.56 L1221.18 1215.56 L1220.59 1215.56 L1220 1215.56 L1219.42 1215.56 L1218.83 1215.56 L1218.24 1215.56 L1217.66 1215.56 L1217.07 1215.56 L1216.49 1215.56 L1215.9 1215.56 L1215.31 1215.56 L1214.73 1215.56 L1214.14 1215.56 L1213.55 1215.56 L1212.97 1215.56 L1212.38 1215.56 L1211.79 1215.56 L1211.21 1215.56 L1210.62 1215.56 L1210.03 1215.56 L1209.45 1215.56 L1208.86 1215.56 L1208.28 1215.56 L1207.69 1215.56 L1207.1 1215.56 L1206.52 1215.56 L1205.93 1215.56 L1205.34 1215.56 L1204.76 1215.56 L1204.17 1215.56 L1203.58 1215.56 L1203 1215.56 L1202.41 1215.56 L1201.83 1215.56 L1201.24 1215.56 L1200.65 1215.56 L1200.07 1215.56 L1199.48 1215.56 L1198.89 1215.56 L1198.31 1215.56 L1197.72 1215.56 L1197.13 1215.56 L1196.55 1215.56 L1195.96 1215.56 L1195.37 1215.56 L1194.79 1215.56 L1194.2 1215.56 L1193.62 1215.56 L1193.03 1215.56 L1192.44 1215.56 L1191.86 1215.56 L1191.27 1215.56 L1190.68 1215.56 L1190.1 1215.56 L1189.51 1215.56 L1188.92 1215.56 L1188.34 1215.56 L1187.75 1215.56 L1187.16 1215.56 L1186.58 1215.56 L1185.99 1215.56 L1185.41 1215.56 L1184.82 1215.56 L1184.23 1215.56 L1183.65 1215.56 L1183.06 1215.56 L1182.47 1215.56 L1181.89 1215.56 L1181.3 1215.56 L1180.71 1215.56 L1180.13 1215.56 L1179.54 1215.56 L1178.96 1215.56 L1178.37 1215.56 L1177.78 1215.56 L1177.2 1215.56 L1176.61 1215.56 L1176.02 1215.56 L1175.44 1215.56 L1174.85 1215.56 L1174.26 1215.56 L1173.68 1215.56 L1173.09 1215.56 L1172.5 1215.56 L1171.92 1215.56 L1171.33 1215.56 L1170.75 1215.56 L1170.16 1215.56 L1169.57 1215.56 L1168.99 1215.56 L1168.4 1215.56 L1167.81 1215.56 L1167.23 1215.56 L1166.64 1215.56 L1166.05 1215.56 L1165.47 1215.56 L1164.88 1215.56 L1164.29 1215.56 L1163.71 1215.56 L1163.12 1215.56 L1162.54 1215.56 L1161.95 1215.56 L1161.36 1215.56 L1160.78 1215.56 L1160.19 1215.56 L1159.6 1215.56 L1159.02 1215.56 L1158.43 1215.56 L1157.84 1215.56 L1157.26 1215.56 L1156.67 1215.56 L1156.09 1215.56 L1155.5 1215.56 L1154.91 1215.56 L1154.33 1215.56 L1153.74 1215.56 L1153.15 1215.56 L1152.57 1215.56 L1151.98 1215.56 L1151.39 1215.56 L1150.81 1215.56 L1150.22 1215.56 L1149.63 1215.56 L1149.05 1215.56 L1148.46 1215.56 L1147.88 1215.56 L1147.29 1215.56 L1146.7 1215.56 L1146.12 1215.56 L1145.53 1215.56 L1144.94 1215.56 L1144.36 1215.56 L1143.77 1215.56 L1143.18 1215.56 L1142.6 1215.56 L1142.01 1215.56 L1141.42 1215.56 L1140.84 1215.56 L1140.25 1215.56 L1139.67 1215.56 L1139.08 1215.56 L1138.49 1215.56 L1137.91 1215.56 L1137.32 1215.56 L1136.73 1215.56 L1136.15 1215.56 L1135.56 1215.56 L1134.97 1215.56 L1134.39 1215.56 L1133.8 1215.56 L1133.21 1215.56 L1132.63 1215.56 L1132.04 1215.56 L1131.46 1215.56 L1130.87 1215.56 L1130.28 1215.56 L1129.7 1215.56 L1129.11 1215.56 L1128.52 1215.56 L1127.94 1215.56 L1127.35 1215.56 L1126.76 1215.56 L1126.18 1215.56 L1125.59 1215.56 L1125.01 1215.56 L1124.42 1215.56 L1123.83 1215.56 L1123.25 1215.56 L1122.66 1215.56 L1122.07 1215.56 L1121.49 1215.56 L1120.9 1215.56 L1120.31 1215.56 L1119.73 1215.56 L1119.14 1215.56 L1118.55 1215.56 L1117.97 1215.56 L1117.38 1215.56 L1116.8 1215.56 L1116.21 1215.56 L1115.62 1215.56 L1115.04 1215.56 L1114.45 1215.56 L1113.86 1215.56 L1113.28 1215.56 L1112.69 1215.56 L1112.1 1215.56 L1111.52 1215.56 L1110.93 1215.56 L1110.34 1215.56 L1109.76 1215.56 L1109.17 1215.56 L1108.59 1215.56 L1108 1215.56 L1107.41 1215.56 L1106.83 1215.56 L1106.24 1215.56 L1105.65 1215.56 L1105.07 1215.56 L1104.48 1215.56 L1103.89 1215.56 L1103.31 1215.56 L1102.72 1215.56 L1102.14 1215.56 L1101.55 1215.56 L1100.96 1215.56 L1100.38 1215.56 L1099.79 1215.56 L1099.2 1215.56 L1098.62 1215.56 L1098.03 1215.56 L1097.44 1215.56 L1096.86 1215.56 L1096.27 1215.56 L1095.68 1215.56 L1095.1 1215.56 L1094.51 1215.56 L1093.93 1215.56 L1093.34 1215.56 L1092.75 1215.56 L1092.17 1215.56 L1091.58 1215.56 L1090.99 1215.56 L1090.41 1215.56 L1089.82 1215.56 L1089.23 1215.56 L1088.65 1215.56 L1088.06 1215.56 L1087.47 1215.56 L1086.89 1215.56 L1086.3 1215.56 L1085.72 1215.56 L1085.13 1215.56 L1084.54 1215.56 L1083.96 1215.56 L1083.37 1215.56 L1082.78 1215.56 L1082.2 1215.56 L1081.61 1215.56 L1081.02 1215.56 L1080.44 1215.56 L1079.85 1215.56 L1079.26 1215.56 L1078.68 1215.56 L1078.09 1215.56 L1077.51 1215.56 L1076.92 1215.56 L1076.33 1215.56 L1075.75 1215.56 L1075.16 1215.56 L1074.57 1215.56 L1073.99 1215.56 L1073.4 1215.56 L1072.81 1215.56 L1072.23 1215.56 L1071.64 1215.56 L1071.06 1215.56 L1070.47 1215.56 L1069.88 1215.56 L1069.3 1215.56 L1068.71 1215.56 L1068.12 1215.56 L1067.54 1215.56 L1066.95 1215.56 L1066.36 1215.56 L1065.78 1215.56 L1065.19 1215.56 L1064.6 1215.56 L1064.02 1215.56 L1063.43 1215.56 L1062.85 1215.56 L1062.26 1215.56 L1061.67 1215.56 L1061.09 1215.56 L1060.5 1215.56 L1059.91 1215.56 L1059.33 1215.56 L1058.74 1215.56 L1058.15 1215.56 L1057.57 1215.56 L1056.98 1215.56 L1056.39 1215.56 L1055.81 1215.56 L1055.22 1215.56 L1054.64 1215.56 L1054.05 1215.56 L1053.46 1215.56 L1052.88 1215.56 L1052.29 1215.56 L1051.7 1215.56 L1051.12 1215.56 L1050.53 1215.56 L1049.94 1215.56 L1049.36 1215.56 L1048.77 1215.56 L1048.19 1215.56 L1047.6 1215.56 L1047.01 1215.56 L1046.43 1215.56 L1045.84 1215.56 L1045.25 1215.56 L1044.67 1215.56 L1044.08 1215.56 L1043.49 1215.56 L1042.91 1215.56 L1042.32 1215.56 L1041.73 1215.56 L1041.15 1215.56 L1040.56 1215.56 L1039.98 1215.56 L1039.39 1215.56 L1038.8 1215.56 L1038.22 1215.56 L1037.63 1215.56 L1037.04 1215.56 L1036.46 1215.56 L1035.87 1215.56 L1035.28 1215.56 L1034.7 1215.56 L1034.11 1215.56 L1033.52 1215.56 L1032.94 1215.56 L1032.35 1215.56 L1031.77 1215.56 L1031.18 1215.56 L1030.59 1215.56 L1030.01 1215.56 L1029.42 1215.56 L1028.83 1215.56 L1028.25 1215.56 L1027.66 1215.56 L1027.07 1215.56 L1026.49 1215.56 L1025.9 1215.56 L1025.32 1215.56 L1024.73 1215.56 L1024.14 1215.56 L1023.56 1215.56 L1022.97 1215.56 L1022.38 1215.56 L1021.8 1215.56 L1021.21 1215.56 L1020.62 1215.56 L1020.04 1215.56 L1019.45 1215.56 L1018.86 1215.56 L1018.28 1215.56 L1017.69 1215.56 L1017.11 1215.56 L1016.52 1215.56 L1015.93 1215.56 L1015.35 1215.56 L1014.76 1215.56 L1014.17 1215.56 L1013.59 1215.56 L1013 1215.56 L1012.41 1215.56 L1011.83 1215.56 L1011.24 1215.56 L1010.65 1215.56 L1010.07 1215.56 L1009.48 1215.56 L1008.9 1215.56 L1008.31 1215.56 L1007.72 1215.56 L1007.14 1215.56 L1006.55 1215.56 L1005.96 1215.56 L1005.38 1215.56 L1004.79 1215.56 L1004.2 1215.56 L1003.62 1215.56 L1003.03 1215.56 L1002.44 1215.56 L1001.86 1215.56 L1001.27 1215.56 L1000.69 1215.56 L1000.1 1215.56 L999.513 1215.56 L998.926 1215.56 L998.34 1215.56 L997.754 1215.56 L997.167 1215.56 L996.581 1215.56 L995.994 1215.56 L995.408 1215.56 L994.822 1215.56 L994.235 1215.56 L993.649 1215.56 L993.062 1215.56 L992.476 1215.56 L991.889 1215.56 L991.303 1215.56 L990.717 1215.56 L990.13 1215.56 L989.544 1215.56 L988.957 1215.56 L988.371 1215.56 L987.785 1215.56 L987.198 1215.56 L986.612 1215.56 L986.025 1215.56  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1215.62 986.612,1215.62 987.198,1215.62 987.785,1215.62 988.371,1215.62 988.957,1215.62 989.544,1215.62 990.13,1215.62 990.717,1215.62 991.303,1215.62 991.889,1215.62 992.476,1215.62 993.062,1215.62 993.649,1215.62 994.235,1215.62 994.822,1215.62 995.408,1215.62 995.994,1215.62 996.581,1215.62 997.167,1215.62 997.754,1215.62 998.34,1215.62 998.926,1215.62 999.513,1215.62 1000.1,1215.62 1000.69,1215.62 1001.27,1215.62 1001.86,1215.62 1002.44,1215.62 1003.03,1215.62 1003.62,1215.62 1004.2,1215.62 1004.79,1215.62 1005.38,1215.62 1005.96,1215.62 1006.55,1215.62 1007.14,1215.62 1007.72,1215.62 1008.31,1215.62 1008.9,1215.62 1009.48,1215.62 1010.07,1215.62 1010.65,1215.62 1011.24,1215.62 1011.83,1215.62 1012.41,1215.62 1013,1215.62 1013.59,1215.62 1014.17,1215.62 1014.76,1215.62 1015.35,1215.62 1015.93,1215.62 1016.52,1215.62 1017.11,1215.62 1017.69,1215.62 1018.28,1215.62 1018.86,1215.62 1019.45,1215.62 1020.04,1215.62 1020.62,1215.62 1021.21,1215.62 1021.8,1215.62 1022.38,1215.62 1022.97,1215.62 1023.56,1215.62 1024.14,1215.62 1024.73,1215.62 1025.32,1215.62 1025.9,1215.62 1026.49,1215.62 1027.07,1215.62 1027.66,1215.62 1028.25,1215.62 1028.83,1215.62 1029.42,1215.62 1030.01,1215.62 1030.59,1215.62 1031.18,1215.62 1031.77,1215.62 1032.35,1215.62 1032.94,1215.62 1033.52,1215.62 1034.11,1215.62 1034.7,1215.62 1035.28,1215.62 1035.87,1215.62 1036.46,1215.62 1037.04,1215.62 1037.63,1215.62 1038.22,1215.62 1038.8,1215.62 1039.39,1215.62 1039.98,1215.62 1040.56,1215.62 1041.15,1215.62 1041.73,1215.62 1042.32,1215.62 1042.91,1215.62 1043.49,1215.62 1044.08,1215.62 1044.67,1215.62 1045.25,1215.62 1045.84,1215.62 1046.43,1215.62 1047.01,1215.62 1047.6,1215.62 1048.19,1215.62 1048.77,1215.62 1049.36,1215.62 1049.94,1215.62 1050.53,1215.62 1051.12,1215.62 1051.7,1215.62 1052.29,1215.62 1052.88,1215.62 1053.46,1215.62 1054.05,1215.62 1054.64,1215.62 1055.22,1215.62 1055.81,1215.62 1056.39,1215.62 1056.98,1215.62 1057.57,1215.62 1058.15,1215.62 1058.74,1215.62 1059.33,1215.62 1059.91,1215.62 1060.5,1215.62 1061.09,1215.62 1061.67,1215.62 1062.26,1215.62 1062.85,1215.62 1063.43,1215.62 1064.02,1215.62 1064.6,1215.62 1065.19,1215.62 1065.78,1215.62 1066.36,1215.62 1066.95,1215.62 1067.54,1215.62 1068.12,1215.62 1068.71,1215.62 1069.3,1215.62 1069.88,1215.62 1070.47,1215.62 1071.06,1215.62 1071.64,1215.62 1072.23,1215.62 1072.81,1215.62 1073.4,1215.62 1073.99,1215.62 1074.57,1215.62 1075.16,1215.62 1075.75,1215.62 1076.33,1215.62 1076.92,1215.62 1077.51,1215.62 1078.09,1215.62 1078.68,1215.62 1079.26,1215.62 1079.85,1215.62 1080.44,1215.62 1081.02,1215.62 1081.61,1215.62 1082.2,1215.62 1082.78,1215.62 1083.37,1215.62 1083.96,1215.62 1084.54,1215.62 1085.13,1215.62 1085.72,1215.62 1086.3,1215.62 1086.89,1215.62 1087.47,1215.62 1088.06,1215.62 1088.65,1215.62 1089.23,1215.62 1089.82,1215.62 1090.41,1215.62 1090.99,1215.62 1091.58,1215.62 1092.17,1215.62 1092.75,1215.62 1093.34,1215.62 1093.93,1215.62 1094.51,1215.62 1095.1,1215.62 1095.68,1215.62 1096.27,1215.62 1096.86,1215.62 1097.44,1215.62 1098.03,1215.62 1098.62,1215.62 1099.2,1215.62 1099.79,1215.62 1100.38,1215.62 1100.96,1215.62 1101.55,1215.62 1102.14,1215.62 1102.72,1215.62 1103.31,1215.62 1103.89,1215.62 1104.48,1215.62 1105.07,1215.62 1105.65,1215.62 1106.24,1215.62 1106.83,1215.62 1107.41,1215.62 1108,1215.62 1108.59,1215.62 1109.17,1215.62 1109.76,1215.62 1110.34,1215.62 1110.93,1215.62 1111.52,1215.62 1112.1,1215.62 1112.69,1215.62 1113.28,1215.62 1113.86,1215.62 1114.45,1215.62 1115.04,1215.62 1115.62,1215.62 1116.21,1215.62 1116.8,1215.62 1117.38,1215.62 1117.97,1215.62 1118.55,1215.62 1119.14,1215.62 1119.73,1215.62 1120.31,1215.62 1120.9,1215.62 1121.49,1215.62 1122.07,1215.62 1122.66,1215.62 1123.25,1215.62 1123.83,1215.62 1124.42,1215.62 1125.01,1215.62 1125.59,1215.62 1126.18,1215.62 1126.76,1215.62 1127.35,1215.62 1127.94,1215.62 1128.52,1215.62 1129.11,1215.62 1129.7,1215.62 1130.28,1215.62 1130.87,1215.62 1131.46,1215.62 1132.04,1215.62 1132.63,1215.62 1133.21,1215.62 1133.8,1215.62 1134.39,1215.62 1134.97,1215.62 1135.56,1215.62 1136.15,1215.62 1136.73,1215.62 1137.32,1215.62 1137.91,1215.62 1138.49,1215.62 1139.08,1215.62 1139.67,1215.62 1140.25,1215.62 1140.84,1215.62 1141.42,1215.62 1142.01,1215.62 1142.6,1215.62 1143.18,1215.62 1143.77,1215.62 1144.36,1215.62 1144.94,1215.62 1145.53,1215.62 1146.12,1215.62 1146.7,1215.62 1147.29,1215.62 1147.88,1215.62 1148.46,1215.62 1149.05,1215.62 1149.63,1215.62 1150.22,1215.62 1150.81,1215.62 1151.39,1215.62 1151.98,1215.62 1152.57,1215.62 1153.15,1215.62 1153.74,1215.62 1154.33,1215.62 1154.91,1215.62 1155.5,1215.62 1156.09,1215.62 1156.67,1215.62 1157.26,1215.62 1157.84,1215.62 1158.43,1215.62 1159.02,1215.62 1159.6,1215.62 1160.19,1215.62 1160.78,1215.62 1161.36,1215.62 1161.95,1215.62 1162.54,1215.62 1163.12,1215.62 1163.71,1215.62 1164.29,1215.62 1164.88,1215.62 1165.47,1215.62 1166.05,1215.62 1166.64,1215.62 1167.23,1215.62 1167.81,1215.62 1168.4,1215.62 1168.99,1215.62 1169.57,1215.62 1170.16,1215.62 1170.75,1215.62 1171.33,1215.62 1171.92,1215.62 1172.5,1215.62 1173.09,1215.62 1173.68,1215.62 1174.26,1215.62 1174.85,1215.62 1175.44,1215.62 1176.02,1215.62 1176.61,1215.62 1177.2,1215.62 1177.78,1215.62 1178.37,1215.62 1178.96,1215.62 1179.54,1215.62 1180.13,1215.62 1180.71,1215.62 1181.3,1215.62 1181.89,1215.62 1182.47,1215.62 1183.06,1215.62 1183.65,1215.62 1184.23,1215.62 1184.82,1215.62 1185.41,1215.62 1185.99,1215.62 1186.58,1215.62 1187.16,1215.62 1187.75,1215.62 1188.34,1215.62 1188.92,1215.62 1189.51,1215.62 1190.1,1215.62 1190.68,1215.62 1191.27,1215.62 1191.86,1215.62 1192.44,1215.62 1193.03,1215.62 1193.62,1215.62 1194.2,1215.62 1194.79,1215.62 1195.37,1215.62 1195.96,1215.62 1196.55,1215.62 1197.13,1215.62 1197.72,1215.62 1198.31,1215.62 1198.89,1215.62 1199.48,1215.62 1200.07,1215.62 1200.65,1215.62 1201.24,1215.62 1201.83,1215.62 1202.41,1215.62 1203,1215.62 1203.58,1215.62 1204.17,1215.62 1204.76,1215.62 1205.34,1215.62 1205.93,1215.62 1206.52,1215.62 1207.1,1215.62 1207.69,1215.62 1208.28,1215.62 1208.86,1215.62 1209.45,1215.62 1210.03,1215.62 1210.62,1215.62 1211.21,1215.62 1211.79,1215.62 1212.38,1215.62 1212.97,1215.62 1213.55,1215.62 1214.14,1215.62 1214.73,1215.62 1215.31,1215.62 1215.9,1215.62 1216.49,1215.62 1217.07,1215.62 1217.66,1215.62 1218.24,1215.62 1218.83,1215.62 1219.42,1215.62 1220,1215.62 1220.59,1215.62 1221.18,1215.62 1221.76,1215.62 1222.35,1215.62 1222.94,1215.62 1223.52,1215.62 1224.11,1215.62 1224.7,1215.62 1225.28,1215.62 1225.87,1215.62 1226.45,1215.62 1227.04,1215.62 1227.63,1215.62 1228.21,1215.62 1228.8,1215.62 1229.39,1215.62 1229.97,1215.62 1230.56,1215.62 1231.15,1215.62 1231.73,1215.62 1232.32,1215.62 1232.91,1215.62 1233.49,1215.62 1234.08,1215.62 1234.66,1215.62 1235.25,1215.62 1235.84,1215.62 1236.42,1215.62 1237.01,1215.62 1237.6,1215.62 1238.18,1215.62 1238.77,1215.62 1239.36,1215.62 1239.94,1215.62 1240.53,1215.62 1241.11,1215.62 1241.7,1215.62 1242.29,1215.62 1242.87,1215.62 1243.46,1215.62 1244.05,1215.62 1244.63,1215.62 1245.22,1215.62 1245.81,1215.62 1246.39,1215.62 1246.98,1215.62 1247.57,1215.62 1248.15,1215.62 1248.74,1215.62 1249.32,1215.62 1249.91,1215.62 1250.5,1215.62 1251.08,1215.62 1251.67,1215.62 1252.26,1215.62 1252.84,1215.62 1253.43,1215.62 1254.02,1215.62 1254.6,1215.62 1255.19,1215.62 1255.78,1215.62 1256.36,1215.62 1256.95,1215.62 1257.53,1215.62 1258.12,1215.62 1258.71,1215.62 1259.29,1215.62 1259.88,1215.62 1260.47,1215.62 1261.05,1215.62 1261.64,1215.62 1262.23,1215.62 1262.81,1215.62 1263.4,1215.62 1263.98,1215.62 1264.57,1215.62 1265.16,1215.62 1265.74,1215.62 1266.33,1215.62 1266.92,1215.62 1267.5,1215.62 1268.09,1215.62 1268.68,1215.62 1269.26,1215.62 1269.85,1215.62 1270.44,1215.62 1271.02,1215.62 1271.61,1215.62 1272.19,1215.62 1272.78,1215.62 1273.37,1215.62 1273.95,1215.62 1274.54,1215.62 1275.13,1215.62 1275.71,1215.62 1276.3,1215.62 1276.89,1215.62 1277.47,1215.62 1278.06,1215.62 1278.65,1215.62 1279.23,1215.62 1279.82,1215.62 1280.4,1215.62 1280.99,1215.62 1281.58,1215.62 1282.16,1215.62 1282.75,1215.62 1283.34,1215.62 1283.92,1215.62 1284.51,1215.62 1285.1,1215.62 1285.68,1215.62 1286.27,1215.62 1286.86,1215.62 1287.44,1215.62 1288.03,1215.62 1288.61,1215.62 1289.2,1215.62 1289.79,1215.62 1290.37,1215.62 1290.96,1215.62 1291.55,1215.62 1292.13,1215.62 1292.72,1215.62 1293.31,1215.62 1293.89,1215.62 1294.48,1215.62 1295.06,1215.62 1295.65,1215.62 1296.24,1215.62 1296.82,1215.62 1297.41,1215.62 1298,1215.62 1298.58,1215.62 1299.17,1215.62 1299.76,1215.62 1300.34,1215.62 1300.93,1215.62 1301.52,1215.62 1302.1,1215.62 1302.69,1215.62 1303.27,1215.62 1303.86,1215.62 1304.45,1215.62 1305.03,1215.62 1305.62,1215.62 1306.21,1215.62 1306.79,1215.62 1307.38,1215.62 1307.97,1215.62 1308.55,1215.62 1309.14,1215.62 1309.73,1215.62 1310.31,1215.62 1310.9,1215.62 1311.48,1215.62 1312.07,1215.62 1312.66,1215.62 1313.24,1215.62 1313.83,1215.62 1314.42,1215.62 1315,1215.62 1315.59,1215.62 1316.18,1215.62 1316.76,1215.62 1317.35,1215.62 1317.93,1215.62 1318.52,1215.62 1319.11,1215.62 1319.69,1215.62 1320.28,1215.62 1320.87,1215.62 1321.45,1215.62 1322.04,1215.62 1322.63,1215.62 1323.21,1215.62 1323.8,1215.62 1324.39,1215.62 1324.97,1215.62 1325.56,1215.62 1326.14,1215.62 1326.73,1215.62 1327.32,1215.62 1327.9,1215.62 1328.49,1215.62 1329.08,1215.62 1329.66,1215.62 1330.25,1215.62 1330.84,1215.62 1331.42,1215.62 1332.01,1215.62 1332.6,1215.62 1333.18,1215.62 1333.77,1215.62 1334.35,1215.62 1334.94,1215.62 1335.53,1215.62 1336.11,1215.62 1336.7,1215.62 1337.29,1215.62 1337.87,1215.62 1338.46,1215.62 1339.05,1215.62 1339.63,1215.62 1340.22,1215.62 1340.8,1215.62 1341.39,1215.62 1341.98,1215.62 1342.56,1215.62 1343.15,1215.62 1343.74,1215.62 1344.32,1215.62 1344.91,1215.62 1345.5,1215.62 1346.08,1215.62 1346.67,1215.62 1347.26,1215.62 1347.84,1215.62 1348.43,1215.62 1349.01,1215.62 1349.6,1215.62 1350.19,1215.62 1350.77,1215.62 1351.36,1215.62 1351.95,1215.62 1352.53,1215.62 1353.12,1215.62 1353.71,1215.62 1354.29,1215.62 1354.88,1215.62 1355.47,1215.62 1356.05,1215.62 1356.64,1215.62 1357.22,1215.62 1357.81,1215.62 1358.4,1215.62 1358.98,1215.62 1359.57,1215.62 1360.16,1215.62 1360.74,1215.62 1361.33,1215.62 1361.92,1215.62 1362.5,1215.62 1363.09,1215.62 1363.68,1215.62 1364.26,1215.62 1364.85,1215.62 1365.43,1215.62 1366.02,1215.62 1366.61,1215.62 1367.19,1215.62 1367.78,1215.62 1368.37,1215.62 1368.95,1215.62 1369.54,1215.62 1370.13,1215.62 1370.71,1215.62 1371.3,1215.62 1371.88,1215.62 1372.47,1215.62 1373.06,1215.62 1373.64,1215.62 1374.23,1215.62 1374.82,1215.62 1375.4,1215.62 1375.99,1215.62 1376.58,1215.62 1377.16,1215.62 1377.75,1215.62 1378.34,1215.62 1378.92,1215.62 1379.51,1215.62 1380.09,1215.62 1380.68,1215.62 1381.27,1215.62 1381.85,1215.62 1382.44,1215.62 1383.03,1215.62 1383.61,1215.62 1384.2,1215.62 1384.79,1215.62 1385.37,1215.62 1385.96,1215.62 1386.55,1215.62 1387.13,1215.62 1387.72,1215.62 1388.3,1215.62 1388.89,1215.62 1389.48,1215.62 1390.06,1215.62 1390.65,1215.62 1391.24,1215.62 1391.82,1215.62 1392.41,1215.62 1393,1215.62 1393.58,1215.62 1394.17,1215.62 1394.75,1215.62 1395.34,1215.62 1395.93,1215.62 1396.51,1215.62 1397.1,1215.62 1397.69,1215.62 1398.27,1215.62 1398.86,1215.62 1399.45,1215.62 1400.03,1215.62 1400.62,1215.62 1401.21,1215.62 1401.79,1215.62 1402.38,1215.62 1402.96,1215.62 1403.55,1215.62 1404.14,1215.62 1404.72,1215.62 1405.31,1215.62 1405.9,1215.62 1406.48,1215.62 1407.07,1215.62 1407.66,1215.62 1408.24,1215.62 1408.83,1215.62 1409.42,1215.62 1410,1215.62 1410.59,1215.62 1411.17,1215.62 1411.76,1215.62 1412.35,1215.62 1412.93,1215.62 1413.52,1215.62 1414.11,1215.62 1414.69,1215.62 1415.28,1215.62 1415.87,1215.62 1416.45,1215.62 1417.04,1215.62 1417.63,1215.62 1418.21,1215.62 1418.8,1215.62 1419.38,1215.62 1419.97,1215.62 1420.56,1215.62 1421.14,1215.62 1421.73,1215.62 1422.32,1215.62 1422.9,1215.62 1423.49,1215.62 1424.08,1215.62 1424.66,1215.62 1425.25,1215.62 1425.83,1215.62 1426.42,1215.62 1427.01,1215.62 1427.59,1215.62 1428.18,1215.62 1428.77,1215.62 1429.35,1215.62 1429.94,1215.62 1430.53,1215.62 1431.11,1215.62 1431.7,1215.62 1432.29,1215.62 1432.87,1215.62 1433.46,1215.62 1434.04,1215.62 1434.63,1215.62 1435.22,1215.62 1435.8,1215.62 1436.39,1215.62 1436.98,1215.62 1437.56,1215.62 1438.15,1215.62 1438.74,1215.62 1439.32,1215.62 1439.91,1215.62 1440.5,1215.62 1441.08,1215.62 1441.67,1215.62 1442.25,1215.62 1442.84,1215.62 1443.43,1215.62 1444.01,1215.62 1444.6,1215.62 1445.19,1215.62 1445.77,1215.62 1446.36,1215.62 1446.95,1215.62 1447.53,1215.62 1448.12,1215.62 1448.7,1215.62 1449.29,1215.62 1449.88,1215.62 1450.46,1215.62 1451.05,1215.62 1451.64,1215.62 1452.22,1215.62 1452.81,1215.62 1453.4,1215.62 1453.98,1215.62 1454.57,1215.62 1455.16,1215.62 1455.74,1215.62 1456.33,1215.62 1456.91,1215.62 1457.5,1215.62 1458.09,1215.62 1458.67,1215.62 1459.26,1215.62 1459.85,1215.62 1460.43,1215.62 1461.02,1215.62 1461.61,1215.62 1462.19,1215.62 1462.78,1215.62 1463.37,1215.62 1463.95,1215.62 1464.54,1215.62 1465.12,1215.62 1465.71,1215.62 1466.3,1215.62 1466.88,1215.62 1467.47,1215.62 1468.06,1215.62 1468.64,1215.62 1469.23,1215.62 1469.82,1215.62 1470.4,1215.62 1470.99,1215.62 1471.57,1215.62 1472.16,1215.62 1472.75,1215.62 1473.33,1215.62 1473.92,1215.62 1474.51,1215.62 1475.09,1215.62 1475.68,1215.62 1476.27,1215.62 1476.85,1215.62 1477.44,1215.62 1478.03,1215.62 1478.61,1215.62 1479.2,1215.62 1479.78,1215.62 1480.37,1215.62 1480.96,1215.62 1481.54,1215.62 1482.13,1215.62 1482.72,1215.62 1483.3,1215.62 1483.89,1215.62 1484.48,1215.62 1485.06,1215.62 1485.65,1215.62 1486.24,1215.62 1486.82,1215.62 1487.41,1215.62 1487.99,1215.62 1488.58,1215.62 1489.17,1215.62 1489.75,1215.62 1490.34,1215.62 1490.93,1215.62 1491.51,1215.62 1492.1,1215.62 1492.69,1215.62 1493.27,1215.62 1493.86,1215.62 1494.45,1215.62 1495.03,1215.62 1495.62,1215.62 1496.2,1215.62 1496.79,1215.62 1497.38,1215.62 1497.96,1215.62 1498.55,1215.62 1499.14,1215.62 1499.72,1215.62 1500.31,1215.62 1500.9,1215.62 1501.48,1215.62 1502.07,1215.62 1502.65,1215.62 1503.24,1215.62 1503.83,1215.62 1504.41,1215.62 1505,1215.62 1505.59,1215.62 1506.17,1215.62 1506.76,1215.62 1507.35,1215.62 1507.93,1215.62 1508.52,1215.62 1509.11,1215.62 1509.69,1215.62 1510.28,1215.62 1510.86,1215.62 1511.45,1215.62 1512.04,1215.62 1512.62,1215.62 1513.21,1215.62 1513.8,1215.62 1514.38,1215.62 1514.97,1215.62 1515.56,1215.62 1516.14,1215.62 1516.73,1215.62 1517.32,1215.62 1517.9,1215.62 1518.49,1215.62 1519.07,1215.62 1519.66,1215.62 1520.25,1215.62 1520.83,1215.62 1521.42,1215.62 1522.01,1215.62 1522.59,1215.62 1523.18,1215.62 1523.77,1215.62 1524.35,1215.62 1524.94,1215.62 1525.52,1215.62 1526.11,1215.62 1526.7,1215.62 1527.28,1215.62 1527.87,1215.62 1528.46,1215.62 1529.04,1215.62 1529.63,1215.62 1530.22,1215.62 1530.8,1215.62 1531.39,1215.62 1531.98,1215.62 1532.56,1215.62 1533.15,1215.62 1533.73,1215.62 1534.32,1215.62 1534.91,1215.62 1535.49,1215.62 1536.08,1215.62 1536.67,1215.62 1537.25,1215.62 1537.84,1215.62 1538.43,1215.62 1539.01,1215.62 1539.6,1215.62 1540.19,1215.62 1540.77,1215.62 1541.36,1215.62 1541.94,1215.62 1542.53,1215.62 1543.12,1215.62 1543.7,1215.62 1544.29,1215.62 1544.88,1215.62 1545.46,1215.62 1546.05,1215.62 1546.64,1215.62 1547.22,1215.62 1547.81,1215.62 1548.4,1215.62 1548.98,1215.62 1549.57,1215.62 1550.15,1215.62 1550.74,1215.62 1551.33,1215.62 1551.91,1215.62 1552.5,1215.62 1553.09,1215.62 1553.67,1215.62 1554.26,1215.62 1554.85,1215.62 1555.43,1215.62 1556.02,1215.62 1556.6,1215.62 1557.19,1215.62 1557.78,1215.62 1558.36,1215.62 1558.95,1215.62 1559.54,1215.62 1560.12,1215.62 1560.71,1215.62 1561.3,1215.62 1561.88,1215.62 1562.47,1215.62 1563.06,1215.62 1563.64,1215.62 1564.23,1215.62 1564.81,1215.62 1565.4,1215.62 1565.99,1215.62 1566.57,1215.62 1567.16,1215.62 1567.75,1215.62 1568.33,1215.62 1568.92,1215.62 1569.51,1215.62 1570.09,1215.62 1570.68,1215.62 1571.27,1215.62 1571.85,1215.62 1572.44,1215.62 1573.02,1215.62 1573.61,1215.62 1574.2,1215.62 1574.78,1215.62 1575.37,1215.62 1575.96,1215.62 1576.54,1215.62 1577.13,1215.62 1577.72,1215.62 1578.3,1215.62 1578.89,1215.62 1579.47,1215.62 1580.06,1215.62 1580.65,1215.62 1581.23,1215.62 1581.82,1215.62 1582.41,1215.62 1582.99,1215.62 1583.58,1215.62 1584.17,1215.62 1584.75,1215.62 1585.34,1215.62 1585.93,1215.62 1586.51,1215.62 1587.1,1215.62 1587.68,1215.62 1588.27,1215.62 1588.86,1215.62 1589.44,1215.62 1590.03,1215.62 1590.62,1215.62 1591.2,1215.62 1591.79,1215.62 1592.38,1215.62 1592.96,1215.62 1593.55,1215.62 1594.14,1215.62 1594.72,1215.62 1595.31,1215.62 1595.89,1215.62 1596.48,1215.62 1597.07,1215.62 1597.65,1215.62 1598.24,1215.62 1598.83,1215.62 1599.41,1215.62 1600,1215.62 1600.59,1215.62 1601.17,1215.62 1601.76,1215.62 1602.34,1215.62 1602.93,1215.62 1603.52,1215.62 1604.1,1215.62 1604.69,1215.62 1605.28,1215.62 1605.86,1215.62 1606.45,1215.62 1607.04,1215.62 1607.62,1215.62 1608.21,1215.62 1608.8,1215.62 1609.38,1215.62 1609.97,1215.62 1610.55,1215.62 1611.14,1215.62 1611.73,1215.62 1612.31,1215.62 1612.9,1215.62 1613.49,1215.62 1614.07,1215.62 1614.66,1215.62 1615.25,1215.62 1615.83,1215.62 1616.42,1215.62 1617.01,1215.62 1617.59,1215.62 1618.18,1215.62 1618.76,1215.62 1619.35,1215.62 1619.94,1215.62 1620.52,1215.62 1621.11,1215.62 1621.7,1215.62 1622.28,1215.62 1622.87,1215.62 1623.46,1215.62 1624.04,1215.62 1624.63,1215.62 1625.22,1215.62 1625.8,1215.62 1626.39,1215.62 1626.97,1215.62 1627.56,1215.62 1628.15,1215.62 1628.73,1215.62 1629.32,1215.62 1629.91,1215.62 1630.49,1215.62 1631.08,1215.62 1631.67,1215.62 1632.25,1215.62 1632.84,1215.62 1633.42,1215.62 1634.01,1215.62 1634.6,1215.62 1635.18,1215.62 1635.77,1215.62 1636.36,1215.62 1636.94,1215.62 1637.53,1215.62 1638.12,1215.62 1638.7,1215.62 1639.29,1215.62 1639.88,1215.62 1640.46,1215.62 1641.05,1215.62 1641.63,1215.62 1642.22,1215.62 1642.81,1215.62 1643.39,1215.62 1643.98,1215.62 1644.57,1215.62 1645.15,1215.62 1645.74,1215.62 1646.33,1215.62 1646.91,1215.62 1647.5,1215.62 1648.09,1215.62 1648.67,1215.62 1649.26,1215.62 1649.84,1215.62 1650.43,1215.62 1651.02,1215.62 1651.6,1215.62 1652.19,1215.62 1652.78,1215.62 1653.36,1215.62 1653.95,1215.62 1654.54,1215.62 1655.12,1215.62 1655.71,1215.62 1656.29,1215.62 1656.88,1215.62 1657.47,1215.62 1658.05,1215.62 1658.64,1215.62 1659.23,1215.62 1659.81,1215.62 1660.4,1215.62 1660.99,1215.62 1661.57,1215.62 1662.16,1215.62 1662.75,1215.62 1663.33,1215.62 1663.92,1215.62 1664.5,1215.62 1665.09,1215.62 1665.68,1215.62 1666.26,1215.62 1666.85,1215.62 1667.44,1215.62 1668.02,1215.62 1668.61,1215.62 1669.2,1215.62 1669.78,1215.62 1670.37,1215.62 1670.96,1215.62 1671.54,1215.62 1672.13,1215.62 1672.71,1215.62 1673.3,1215.62 1673.89,1215.62 1674.47,1215.62 1675.06,1215.62 1675.65,1215.62 1676.23,1215.62 1676.82,1215.62 1677.41,1215.62 1677.99,1215.62 1678.58,1215.62 1679.17,1215.62 1679.75,1215.62 1680.34,1215.62 1680.92,1215.62 1681.51,1215.62 1682.1,1215.62 1682.68,1215.62 1683.27,1215.62 1683.86,1215.62 1684.44,1215.62 1685.03,1215.62 1685.62,1215.62 1686.2,1215.62 1686.79,1215.62 1687.37,1215.62 1687.96,1215.62 1688.55,1215.62 1689.13,1215.62 1689.72,1215.62 1690.31,1215.62 1690.89,1215.62 1691.48,1215.62 1692.07,1215.62 1692.65,1215.62 1693.24,1215.62 1693.83,1215.62 1694.41,1215.62 1695,1215.62 1695.58,1215.62 1696.17,1215.62 1696.76,1215.62 1697.34,1215.62 1697.93,1215.62 1698.52,1215.62 1699.1,1215.62 1699.69,1215.62 1700.28,1215.62 1700.86,1215.62 1701.45,1215.62 1702.04,1215.62 1702.62,1215.62 1703.21,1215.62 1703.79,1215.62 1704.38,1215.62 1704.97,1215.62 1705.55,1215.62 1706.14,1215.62 1706.73,1215.62 1707.31,1215.62 1707.9,1215.62 1708.49,1215.62 1709.07,1215.62 1709.66,1215.62 1710.24,1215.62 1710.83,1215.62 1711.42,1215.62 1712,1215.62 1712.59,1215.62 1713.18,1215.62 1713.76,1215.62 1714.35,1215.62 1714.94,1215.62 1715.52,1215.62 1716.11,1215.62 1716.7,1215.62 1717.28,1215.62 1717.87,1215.62 1718.45,1215.62 1719.04,1215.62 1719.63,1215.62 1720.21,1215.62 1720.8,1215.62 1721.39,1215.62 1721.97,1215.62 1722.56,1215.62 1723.15,1215.62 1723.73,1215.62 1724.32,1215.62 1724.91,1215.62 1725.49,1215.62 1726.08,1215.62 1726.66,1215.62 1727.25,1215.62 1727.84,1215.62 1728.42,1215.62 1729.01,1215.62 1729.6,1215.62 1730.18,1215.62 1730.77,1215.62 1731.36,1215.62 1731.94,1215.62 1732.53,1215.62 1733.11,1215.62 1733.7,1215.62 1734.29,1215.62 1734.87,1215.62 1735.46,1215.62 1736.05,1215.62 1736.63,1215.62 1737.22,1215.62 1737.81,1215.62 1738.39,1215.62 1738.98,1215.62 1739.57,1215.62 1740.15,1215.62 1740.74,1215.62 1741.32,1215.62 1741.91,1215.62 1742.5,1215.62 1743.08,1215.62 1743.67,1215.62 1744.26,1215.62 1744.84,1215.62 1745.43,1215.62 1746.02,1215.62 1746.6,1215.62 1747.19,1215.62 1747.78,1215.62 1748.36,1215.62 1748.95,1215.62 1749.53,1215.62 1750.12,1215.62 1750.71,1215.62 1751.29,1215.62 1751.88,1215.62 1752.47,1215.62 1753.05,1215.62 1753.64,1215.62 1754.23,1215.62 1754.81,1215.62 1755.4,1215.62 1755.99,1215.62 1756.57,1215.62 1757.16,1215.62 1757.74,1215.62 1758.33,1215.62 1758.92,1215.62 1759.5,1215.62 1760.09,1215.62 1760.68,1215.62 1761.26,1215.62 1761.85,1215.62 1762.44,1215.62 1763.02,1215.62 1763.61,1215.62 1764.19,1215.62 1764.78,1215.62 1765.37,1215.62 1765.95,1215.62 1766.54,1215.62 1767.13,1215.62 1767.71,1215.62 1768.3,1215.62 1768.89,1215.62 1769.47,1215.62 1770.06,1215.62 1770.65,1215.62 1771.23,1215.62 1771.82,1215.62 1772.4,1215.62 1772.99,1215.62 1773.58,1215.62 1774.16,1215.62 1774.75,1215.62 1775.34,1215.62 1775.92,1215.62 1776.51,1215.62 1777.1,1215.62 1777.68,1215.62 1778.27,1215.62 1778.86,1215.62 1779.44,1215.62 1780.03,1215.62 1780.61,1215.62 1781.2,1215.62 1781.79,1215.62 1782.37,1215.62 1782.96,1215.62 1783.55,1215.62 1784.13,1215.62 1784.72,1215.62 1785.31,1215.62 1785.89,1215.62 1786.48,1215.62 1787.06,1215.62 1787.65,1215.62 1788.24,1215.62 1788.82,1215.62 1789.41,1215.62 1790,1215.62 1790.58,1215.62 1791.17,1215.62 1791.76,1215.62 1792.34,1215.62 1792.93,1215.62 1793.52,1215.62 1794.1,1215.62 1794.69,1215.62 1795.27,1215.62 1795.86,1215.62 1796.45,1215.62 1797.03,1215.62 1797.62,1215.62 1798.21,1215.62 1798.79,1215.62 1799.38,1215.62 1799.97,1215.62 1800.55,1215.62 1801.14,1215.62 1801.73,1215.62 1802.31,1215.62 1802.9,1215.62 1803.48,1215.62 1804.07,1215.62 1804.66,1215.62 1805.24,1215.62 1805.83,1215.62 1806.42,1215.62 1807,1215.62 1807.59,1215.62 1808.18,1215.62 1808.76,1215.62 1809.35,1215.62 1809.94,1215.62 1810.52,1215.62 1811.11,1215.62 1811.69,1215.62 1812.28,1215.62 1812.87,1215.62 1813.45,1215.62 1814.04,1215.62 1814.63,1215.62 1815.21,1215.62 1815.8,1215.62 1816.39,1215.62 1816.97,1215.62 1817.56,1215.62 1818.14,1215.62 1818.73,1215.62 1819.32,1215.62 1819.9,1215.62 1820.49,1215.62 1821.08,1215.62 1821.66,1215.62 1822.25,1215.62 1822.84,1215.62 1823.42,1215.62 1824.01,1215.62 1824.6,1215.62 1825.18,1215.62 1825.77,1215.62 1826.35,1215.62 1826.94,1215.62 1827.53,1215.62 1828.11,1215.62 1828.7,1215.62 1829.29,1215.62 1829.87,1215.62 1830.46,1215.62 1831.05,1215.62 1831.63,1215.62 1832.22,1215.62 1832.81,1215.62 1833.39,1215.62 1833.98,1215.62 1834.56,1215.62 1835.15,1215.62 1835.74,1215.62 1836.32,1215.62 1836.91,1215.62 1837.5,1215.62 1838.08,1215.62 1838.67,1215.62 1839.26,1215.62 1839.84,1215.62 1840.43,1215.62 1841.01,1215.62 1841.6,1215.62 1842.19,1215.62 1842.77,1215.62 1843.36,1215.62 1843.95,1215.62 1844.53,1215.62 1845.12,1215.62 1845.71,1215.62 1846.29,1215.62 1846.88,1215.62 1847.47,1215.62 1848.05,1215.62 1848.64,1215.62 1849.22,1215.62 1849.81,1215.62 1850.4,1215.62 1850.98,1215.62 1851.57,1215.62 1852.16,1215.62 1852.74,1215.62 1853.33,1215.62 1853.92,1215.62 1854.5,1215.62 1855.09,1215.62 1855.68,1215.62 1856.26,1215.62 1856.85,1215.62 1857.43,1215.62 1858.02,1215.62 1858.61,1215.62 1859.19,1215.62 1859.78,1215.62 1860.37,1215.62 1860.95,1215.62 1861.54,1215.62 1862.13,1215.62 1862.71,1215.62 1863.3,1215.62 1863.88,1215.62 1864.47,1215.62 1865.06,1215.62 1865.64,1215.62 1866.23,1215.62 1866.82,1215.62 1867.4,1215.62 1867.99,1215.62 1868.58,1215.62 1869.16,1215.62 1869.75,1215.62 1870.34,1215.62 1870.92,1215.62 1871.51,1215.62 1872.09,1215.62 1872.68,1215.62 1873.27,1215.62 1873.85,1215.62 1874.44,1215.62 1875.03,1215.62 1875.61,1215.62 1876.2,1215.62 1876.79,1215.62 1877.37,1215.62 1877.96,1215.62 1878.55,1215.62 1879.13,1215.62 1879.72,1215.62 1880.3,1215.62 1880.89,1215.62 1881.48,1215.62 1882.06,1215.62 1882.65,1215.62 1883.24,1215.62 1883.82,1215.62 1884.41,1215.62 1885,1215.62 1885.58,1215.62 1886.17,1215.62 1886.76,1215.62 1887.34,1215.62 1887.93,1215.62 1888.51,1215.62 1889.1,1215.62 1889.69,1215.62 1890.27,1215.62 1890.86,1215.62 1891.45,1215.62 1892.03,1215.62 1892.62,1215.62 1893.21,1215.62 1893.79,1215.62 1894.38,1215.62 1894.96,1215.62 1895.55,1215.62 1896.14,1215.62 1896.72,1215.62 1897.31,1215.62 1897.9,1215.62 1898.48,1215.62 1899.07,1215.62 1899.66,1215.62 1900.24,1215.62 1900.83,1215.62 1901.42,1215.62 1902,1215.62 1902.59,1215.62 1903.17,1215.62 1903.76,1215.62 1904.35,1215.62 1904.93,1215.62 1905.52,1215.62 1906.11,1215.62 1906.69,1215.62 1907.28,1215.62 1907.87,1215.62 1908.45,1215.62 1909.04,1215.62 1909.63,1215.62 1910.21,1215.62 1910.8,1215.62 1911.38,1215.62 1911.97,1215.62 1912.56,1215.62 1913.14,1215.62 1913.73,1215.62 1914.32,1215.62 1914.9,1215.62 1915.49,1215.62 1916.08,1215.62 1916.66,1215.62 1917.25,1215.62 1917.83,1215.62 1918.42,1215.62 1919.01,1215.62 1919.59,1215.62 1920.18,1215.62 1920.77,1215.62 1921.35,1215.62 1921.94,1215.62 1922.53,1215.62 1923.11,1215.62 1923.7,1215.62 1924.29,1215.62 1924.87,1215.62 1925.46,1215.62 1926.04,1215.62 1926.63,1215.62 1927.22,1215.62 1927.8,1215.62 1928.39,1215.62 1928.98,1215.62 1929.56,1215.62 1930.15,1215.62 1930.74,1215.62 1931.32,1215.62 1931.91,1215.62 1932.5,1215.62 1933.08,1215.62 1933.67,1215.62 1934.25,1215.62 1934.84,1215.62 1935.43,1215.62 1936.01,1215.62 1936.6,1215.62 1937.19,1215.62 1937.77,1215.62 1938.36,1215.62 1938.95,1215.62 1939.53,1215.62 1940.12,1215.62 1940.71,1215.62 1941.29,1215.62 1941.88,1215.62 1942.46,1215.62 1943.05,1215.62 1943.64,1215.62 1944.22,1215.62 1944.81,1215.62 1945.4,1215.62 1945.98,1215.62 1946.57,1215.62 1947.16,1215.62 1947.74,1215.62 1948.33,1215.62 1948.91,1215.62 1949.5,1215.62 1950.09,1215.62 1950.67,1215.62 1951.26,1215.62 1951.85,1215.62 1952.43,1215.62 1953.02,1215.62 1953.61,1215.62 1954.19,1215.62 1954.78,1215.62 1955.37,1215.62 1955.95,1215.62 1956.54,1215.62 1957.12,1215.62 1957.71,1215.62 1958.3,1215.62 1958.88,1215.62 1959.47,1215.62 1960.06,1215.62 1960.64,1215.62 1961.23,1215.62 1961.82,1215.62 1962.4,1215.62 1962.99,1215.62 1963.58,1215.62 1964.16,1215.62 1964.75,1215.62 1965.33,1215.62 1965.92,1215.62 1966.51,1215.62 1967.09,1215.62 1967.68,1215.62 1968.27,1215.62 1968.85,1215.62 1969.44,1215.62 1970.03,1215.62 1970.61,1215.62 1971.2,1215.62 1971.78,1215.62 1972.37,1215.62 1972.96,1215.62 1973.54,1215.62 1974.13,1215.62 1974.72,1215.62 1975.3,1215.62 1975.89,1215.62 1976.48,1215.62 1977.06,1215.62 1977.65,1215.62 1978.24,1215.62 1978.82,1215.62 1979.41,1215.62 1979.99,1215.62 1980.58,1215.62 1981.17,1215.62 1981.75,1215.62 1982.34,1215.62 1982.93,1215.62 1983.51,1215.62 1984.1,1215.62 1984.69,1215.62 1985.27,1215.62 1985.86,1215.62 1986.45,1215.62 1987.03,1215.62 1987.62,1215.62 1988.2,1215.62 1988.79,1215.62 1989.38,1215.62 1989.96,1215.62 1990.55,1215.62 1991.14,1215.62 1991.72,1215.62 1992.31,1215.62 1992.9,1215.62 1993.48,1215.62 1994.07,1215.62 1994.65,1215.62 1995.24,1215.62 1995.83,1215.62 1996.41,1215.62 1997,1215.62 1997.59,1215.62 1998.17,1215.62 1998.76,1215.62 1999.35,1215.62 1999.93,1215.62 2000.52,1215.62 2001.11,1215.62 2001.69,1215.62 2002.28,1215.62 2002.86,1215.62 2003.45,1215.62 2004.04,1215.62 2004.62,1215.62 2005.21,1215.62 2005.8,1215.62 2006.38,1215.62 2006.97,1215.62 2007.56,1215.62 2008.14,1215.62 2008.73,1215.62 2009.32,1215.62 2009.9,1215.62 2010.49,1215.62 2011.07,1215.62 2011.66,1215.62 2012.25,1215.62 2012.83,1215.62 2013.42,1215.62 2014.01,1215.62 2014.59,1215.62 2015.18,1215.62 2015.77,1215.62 2016.35,1215.62 2016.94,1215.62 2017.53,1215.62 2018.11,1215.62 2018.7,1215.62 2019.28,1215.62 2019.87,1215.62 2020.46,1215.62 2021.04,1215.62 2021.63,1215.62 2022.22,1215.62 2022.8,1215.62 2023.39,1215.62 2023.98,1215.62 2024.56,1215.62 2025.15,1215.62 2025.73,1215.62 2026.32,1215.62 2026.91,1215.62 2027.49,1215.62 2028.08,1215.62 2028.67,1215.62 2029.25,1215.62 2029.84,1215.62 2030.43,1215.62 2031.01,1215.62 2031.6,1215.62 2032.19,1215.62 2032.77,1215.62 2033.36,1215.62 2033.94,1215.62 2034.53,1215.62 2035.12,1215.62 2035.7,1215.62 2036.29,1215.62 2036.88,1215.62 2037.46,1215.62 2038.05,1215.62 2038.64,1215.62 2039.22,1215.62 2039.81,1215.62 2040.4,1215.62 2040.98,1215.62 2041.57,1215.62 2042.15,1215.62 2042.74,1215.62 2043.33,1215.62 2043.91,1215.62 2044.5,1215.62 2045.09,1215.62 2045.67,1215.62 2046.26,1215.62 2046.85,1215.62 2047.43,1215.62 2048.02,1215.62 2048.6,1215.62 2049.19,1215.62 2049.78,1215.62 2050.36,1215.62 2050.95,1215.62 2051.54,1215.62 2052.12,1215.62 2052.71,1215.62 2053.3,1215.62 2053.88,1215.62 2054.47,1215.62 2055.06,1215.62 2055.64,1215.62 2056.23,1215.62 2056.81,1215.62 2057.4,1215.62 2057.99,1215.62 2058.57,1215.62 2059.16,1215.62 2059.75,1215.62 2060.33,1215.62 2060.92,1215.62 2061.51,1215.62 2062.09,1215.62 2062.68,1215.62 2063.27,1215.62 2063.85,1215.62 2064.44,1215.62 2065.02,1215.62 2065.61,1215.62 2066.2,1215.62 2066.78,1215.62 2067.37,1215.62 2067.96,1215.62 2068.54,1215.62 2069.13,1215.62 2069.72,1215.62 2070.3,1215.62 2070.89,1215.62 2071.48,1215.62 2072.06,1215.62 2072.65,1215.62 2073.23,1215.62 2073.82,1215.62 2074.41,1215.62 2074.99,1215.62 2075.58,1215.62 2076.17,1215.62 2076.75,1215.62 2077.34,1215.62 2077.93,1215.62 2078.51,1215.62 2079.1,1215.62 2079.68,1215.62 2080.27,1215.62 2080.86,1215.62 2081.44,1215.62 2082.03,1215.62 2082.62,1215.62 2083.2,1215.62 2083.79,1215.62 2084.38,1215.62 2084.96,1215.62 2085.55,1215.62 2086.14,1215.62 2086.72,1215.62 2087.31,1215.62 2087.89,1215.62 2088.48,1215.62 2089.07,1215.62 2089.65,1215.62 2090.24,1215.62 2090.83,1215.62 2091.41,1215.62 2092,1215.62 2092.59,1215.62 2093.17,1215.62 2093.76,1215.62 2094.35,1215.62 2094.93,1215.62 2095.52,1215.62 2096.1,1215.62 2096.69,1215.62 2097.28,1215.62 2097.86,1215.62 2098.45,1215.62 2099.04,1215.62 2099.62,1215.62 2100.21,1215.62 2100.8,1215.62 2101.38,1215.62 2101.97,1215.62 2102.55,1215.62 2103.14,1215.62 2103.73,1215.62 2104.31,1215.62 2104.9,1215.62 2105.49,1215.62 2106.07,1215.62 2106.66,1215.62 2107.25,1215.62 2107.83,1215.62 2108.42,1215.62 2109.01,1215.62 2109.59,1215.62 2110.18,1215.62 2110.76,1215.62 2111.35,1215.62 2111.94,1215.62 2112.52,1215.62 2113.11,1215.62 2113.7,1215.62 2114.28,1215.62 2114.87,1215.62 2115.46,1215.62 2116.04,1215.62 2116.63,1215.62 2117.22,1215.62 2117.8,1215.62 2118.39,1215.62 2118.97,1215.62 2119.56,1215.62 2120.15,1215.62 2120.73,1215.62 2121.32,1215.62 2121.91,1215.62 2122.49,1215.62 2123.08,1215.62 2123.67,1215.62 2124.25,1215.62 2124.84,1215.62 2125.42,1215.62 2126.01,1215.62 2126.6,1215.62 2127.18,1215.62 2127.77,1215.62 2128.36,1215.62 2128.94,1215.62 2129.53,1215.62 2130.12,1215.62 2130.7,1215.62 2131.29,1215.62 2131.88,1215.62 2132.46,1215.62 2133.05,1215.62 2133.63,1215.62 2134.22,1215.62 2134.81,1215.62 2135.39,1215.62 2135.98,1215.62 2136.57,1215.62 2137.15,1215.62 2137.74,1215.62 2138.33,1215.62 2138.91,1215.62 2139.5,1215.62 2140.09,1215.62 2140.67,1215.62 2141.26,1215.62 2141.84,1215.62 2142.43,1215.62 2143.02,1215.62 2143.6,1215.62 2144.19,1215.62 2144.78,1215.62 2145.36,1215.62 2145.95,1215.62 2146.54,1215.62 2147.12,1215.62 2147.71,1215.62 2148.3,1215.62 2148.88,1215.62 2149.47,1215.62 2150.05,1215.62 2150.64,1215.62 2151.23,1215.62 2151.81,1215.62 2152.4,1215.62 2152.99,1215.62 2153.57,1215.62 2154.16,1215.62 2154.75,1215.62 2155.33,1215.62 2155.92,1215.62 2156.5,1215.62 2157.09,1215.62 2157.68,1215.62 2158.26,1215.62 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.09,1197.58 1398.61,899.083 \"/>\n<polyline clip-path=\"url(#clip122)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1233.23 985.439,1197.58 2158.26,1197.58 2158.26,1233.23 985.439,1233.23 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip120)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip120)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip123\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip120)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip120)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip120)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip123)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-2441.17 163.232,-3662.45 163.792,-3517.85 164.351,-4624.8 164.91,-5512.68 165.469,-6392 166.029,-6152.31 166.588,-6993.7 167.147,-7712.18 167.706,-8378.82 168.266,-8980.91 168.825,-9522.65 169.384,-10007.9 169.943,-10440.5 170.503,-10131.5 171.062,-10497.9 171.621,-10793.2 172.18,-11075.2 172.74,-11318.2 173.299,-11525 173.858,-11216.6 174.417,-11374.6 174.977,-11086.1 175.536,-11206.3 176.095,-11304 176.655,-11359.7 177.214,-11394.6 177.773,-11398.2 178.332,-11113.8 178.892,-10837.3 179.451,-10572.6 180.01,-10085.1 180.569,-9846.63 181.129,-9608.71 181.688,-9559.24 182.247,-9134.96 182.806,-8908.22 183.366,-8693.56 183.925,-8624.79 184.484,-8547.73 185.043,-8328.27 185.603,-8244.57 186.162,-8036.38 186.721,-7713.05 187.28,-7627.79 187.84,-7208.39 188.399,-7015.27 188.958,-6825.48 189.517,-6643.39 190.077,-6473.51 190.636,-6388.97 191.195,-6300.26 191.754,-6127.57 192.314,-5963.68 192.873,-5801.28 193.432,-5572.26 193.991,-5361.66 194.551,-5214.23 195.11,-5073 195.669,-4927.96 196.228,-4736.26 196.788,-4603.28 197.347,-4528.02 197.906,-4395.06 198.465,-4269.6 199.025,-4048.73 199.584,-3927.09 200.143,-3710.52 200.702,-3509.44 201.262,-3401.91 201.821,-3215.88 202.38,-3120.1 202.939,-3058.59 203.499,-2998.02 204.058,-2891.03 204.617,-2796.36 205.176,-2665.42 205.736,-2536.81 206.295,-2442.84 206.854,-2319.05 207.413,-2267.95 207.973,-2214.36 208.532,-2156.38 209.091,-2071.84 209.65,-1985.54 210.21,-1931.19 210.769,-1819.75 211.328,-1736.3 211.887,-1687.73 212.447,-1610.85 213.006,-1505.63 213.565,-1352.37 214.124,-1278.4 214.684,-1179.03 215.243,-1111.65 215.802,-993.56 216.361,-929.508 216.921,-794.22 217.48,-716.178 218.039,-712.458 218.598,-651.252 219.158,-592.577 219.717,-517.158 220.276,-419.096 220.835,-373.018 221.395,-234.289 221.954,-218.679 222.513,-178.278 223.072,-160.636 223.632,-122.261 224.191,-58.9857 224.75,-24.0248 225.309,-5.37921 225.869,29.3701 226.428,87.5223 226.987,204.146 227.546,254.272 228.106,301.282 228.665,304.576 229.224,353.57 229.783,376.663 230.343,403.015 230.902,407.72 231.461,411.855 232.02,434.899 232.58,424.611 233.139,413.412 233.698,420.892 234.257,409.951 234.817,403.672 235.376,430.704 235.935,440.972 236.494,470.977 237.054,516.4 237.613,616.205 238.172,637.521 238.731,640.514 239.291,675.374 239.85,693.255 240.409,697.513 240.968,732.315 241.528,731.376 242.087,731.649 242.646,788.375 243.205,838.543 243.765,868.064 244.324,863.56 244.883,840.526 245.442,873.52 246.002,869.784 246.561,898.575 247.12,927.696 247.679,940.794 248.239,935.903 248.798,910.871 249.357,907.497 249.916,886.803 250.476,882.8 251.035,916.7 251.594,931.789 252.153,957.787 252.713,964.589 253.272,978.739 253.831,986.102 254.39,963.633 254.95,975.093 255.509,1006.71 256.068,981.548 256.627,991.792 257.187,1000.88 257.746,1029.87 258.305,1020.7 258.864,994.31 259.424,1022.05 259.983,1059.28 260.542,1061.35 261.101,1065.57 261.661,1055.04 262.22,1062.44 262.779,1102.12 263.338,1072.66 263.898,1082.31 264.457,1070.1 265.016,1058.56 265.575,1068.59 266.135,1058.44 266.694,1082.37 267.253,1110.41 267.812,1099.06 268.372,1074.34 268.931,1048.14 269.49,1027.5 270.049,1040.19 270.609,1029.43 271.168,1044.4 271.727,1105.87 272.286,1111.22 272.846,1083.53 273.405,1074.39 273.964,1050.27 274.523,1062.28 275.083,1072.63 275.642,1080.83 276.201,1059.6 276.76,1053.73 277.32,1078.55 277.879,1066.83 278.438,1076.72 278.997,1067.16 279.557,1059.13 280.116,1065.22 280.675,1027.55 281.234,1018.75 281.794,991.295 282.353,1017.13 282.912,1028.16 283.471,1037.67 284.031,1029.5 284.59,986.715 285.149,949.988 285.708,965.725 286.268,962.821 286.827,978.113 287.386,993.96 287.945,985.906 288.505,978.679 289.064,973.948 289.623,969.604 290.182,998.355 290.742,991.482 291.301,984.093 291.86,1030.86 292.419,1043.65 292.979,1040.2 293.538,1004.58 294.097,998.519 294.656,1011.29 295.216,1025.65 295.775,1023.5 296.334,1034.22 296.893,1028.09 297.453,1004.06 298.012,1014.16 298.571,1026.75 299.13,989.211 299.69,953.013 300.249,950.206 300.808,948.353 301.368,931.301 301.927,930.519 302.486,914.887 303.045,913.252 303.605,930.771 304.164,930.79 304.723,977.857 305.282,1020.57 305.842,1013.3 306.401,1038.42 306.96,1077.89 307.519,1085.17 308.079,1072.87 308.638,1080.86 309.197,1021.27 309.756,1078.17 310.316,1062.72 310.875,1052.58 311.434,1056.29 311.993,1048.27 312.553,1056.52 313.112,1032.79 313.671,1011.07 314.23,1001.3 314.79,993.373 315.349,989.373 315.908,999.142 316.467,977.506 317.027,991.626 317.586,952.072 318.145,912.445 318.704,889.547 319.264,925.425 319.823,936.542 320.382,930.751 320.941,910.071 321.501,958.911 322.06,918.062 322.619,931.025 323.178,946.135 323.738,973.502 324.297,936.26 324.856,929.283 325.415,929.491 325.975,909.962 326.534,858.921 327.093,845.439 327.652,866.245 328.212,867.738 328.771,883.554 329.33,899.092 329.889,879.984 330.449,876.466 331.008,893.931 331.567,925.766 332.126,908.344 332.686,841.303 333.245,857.49 333.804,857.95 334.363,890.272 334.923,922.81 335.482,885.87 336.041,887.248 336.6,887.164 337.16,901.138 337.719,911.588 338.278,911.109 338.837,891.309 339.397,838.594 339.956,824.5 340.515,857.996 341.074,859.689 341.634,858.048 342.193,890.478 342.752,919.682 343.311,899.479 343.871,864.503 344.43,861.542 344.989,875.989 345.548,887.637 346.108,902.691 346.667,930.261 347.226,938.739 347.785,950.783 348.345,916.163 348.904,932.3 349.463,900.217 350.022,909.891 350.582,874.899 351.141,857.14 351.7,871.45 352.259,870.973 352.819,899.012 353.378,894.149 353.937,886.943 354.496,880.825 355.056,879.705 355.615,910.237 356.174,921.872 356.733,933.146 357.293,914.508 357.852,908.521 358.411,934.838 358.97,912.392 359.53,951.873 360.089,944.19 360.648,916.54 361.207,910.528 361.767,935.606 362.326,946.375 362.885,939.416 363.444,949.558 364.004,959.078 364.563,951.012 365.122,939.853 365.681,950.431 366.241,974.449 366.8,960.748 367.359,937.014 367.918,929.295 368.478,907.225 369.037,902.564 369.596,914.347 370.155,926.185 370.715,908.002 371.274,890.04 371.833,885.64 372.392,864.238 372.952,892.046 373.511,902.222 374.07,914.471 374.629,909.543 375.189,885.492 375.748,898.6 376.307,891.852 376.866,900.836 377.426,911.326 377.985,923.351 378.544,895.404 379.103,888.333 379.663,864.773 380.222,860.045 380.781,841.669 381.34,858.935 381.9,873.688 382.459,852.288 383.018,804.918 383.577,785.884 384.137,787.412 384.696,820.309 385.255,850.853 385.814,846.967 386.374,848.036 386.933,863.775 387.492,831.039 388.051,829.726 388.611,811.947 389.17,827.068 389.729,839.417 390.288,833.247 390.848,831.093 391.407,829.862 391.966,828.438 392.525,812.861 393.085,797.985 393.644,782.827 394.203,802.162 394.762,850.095 395.322,832.991 395.881,828.114 396.44,841.006 396.999,852.443 397.559,831.987 398.118,842.641 398.677,867.937 399.236,845.649 399.796,842.604 400.355,870.855 400.914,882.129 401.473,893.364 402.033,886.365 402.592,881.696 403.151,876.815 403.71,888.538 404.27,882.939 404.829,895.037 405.388,869.018 405.947,880.48 406.507,891.692 407.066,903.169 407.625,899.77 408.184,844.284 408.744,825.752 409.303,887.983 409.862,898.78 410.421,887.691 410.981,893.656 411.54,887.431 412.099,910.946 412.658,901.388 413.218,895.966 413.777,890.645 414.336,865.566 414.895,861.625 415.455,857.467 416.014,852.555 416.573,850.822 417.132,846.192 417.692,842.93 418.251,870.517 418.81,912.267 419.369,854.705 419.929,837.559 420.488,817.388 421.047,798.048 421.606,794.638 422.166,794.262 422.725,760.523 423.284,776.527 423.843,758.071 424.403,778.617 424.962,825.045 425.521,819.671 426.08,850.584 426.64,831.567 427.199,863.22 427.758,840.781 428.318,835.811 428.877,898.339 429.436,892.059 429.995,852.172 430.555,848.825 431.114,826.488 431.673,806.672 432.232,803.386 432.792,799.099 433.351,831.887 433.91,861.386 434.469,802.607 435.029,796.147 435.588,790.352 436.147,820.874 436.706,832.549 437.266,795.045 437.825,745.882 438.384,781.808 438.943,764.069 439.503,781.637 440.062,797.505 440.621,796.752 441.18,798.168 441.74,809.508 442.299,808.456 442.858,789.723 443.417,783.897 443.977,782.8 444.536,795.598 445.095,758.743 445.654,757.363 446.214,772.219 446.773,785.963 447.332,803.86 447.891,821.775 448.451,769.081 449.01,781.049 449.569,745.622 450.128,763.751 450.688,745.597 451.247,793.072 451.806,792.52 452.365,789.261 452.925,817.604 453.484,797.821 454.043,778.601 454.602,741.428 455.162,758.13 455.721,754.246 456.28,770.556 456.839,769.581 457.399,803.039 457.958,800.191 458.517,797.185 459.076,760.634 459.636,792.643 460.195,771.843 460.754,774.727 461.313,805.859 461.873,834.141 462.432,784.312 462.991,783.122 463.55,730.95 464.11,715.614 464.669,732.4 465.228,715.31 465.787,703.033 466.347,738.376 466.906,724.281 467.465,709.778 468.024,711.661 468.584,745.554 469.143,743.03 469.702,729.579 470.261,731.605 470.821,749.56 471.38,733.613 471.939,689.359 472.498,695.885 473.058,696.996 473.617,714.05 474.176,730.131 474.735,731.411 475.295,731.764 475.854,730.281 476.413,763.806 476.972,761.139 477.532,775.706 478.091,773.822 478.65,728.42 479.209,710.211 479.769,693.578 480.328,695.883 480.887,698.181 481.446,683.18 482.006,700.305 482.565,683.879 483.124,721.263 483.683,735.084 484.243,733.731 484.802,750.957 485.361,762.582 485.92,747.238 486.48,746.963 487.039,766.448 487.598,747.476 488.157,749.933 488.717,749.309 489.276,781.202 489.835,780.608 490.394,810.891 490.954,820.116 491.513,782.954 492.072,780.89 492.631,780.305 493.191,741.209 493.75,789.792 494.309,772.112 494.868,771.701 495.428,781.74 495.987,825.786 496.546,801.311 497.105,766.527 497.665,780.741 498.224,779.065 498.783,759.571 499.342,724.745 499.902,744.809 500.461,708.558 501.02,725.934 501.579,744.363 502.139,745.043 502.698,714.662 503.257,732.725 503.816,736.066 504.376,753.199 504.935,732.924 505.494,716.36 506.053,713.182 506.613,698.192 507.172,667.715 507.731,672.162 508.29,673.016 508.85,705.179 509.409,704.141 509.968,738.767 510.527,722.111 511.087,754.654 511.646,767.484 512.205,749.761 512.764,763.981 513.324,712.809 513.883,728.209 514.442,729.784 515.001,745.53 515.561,713.576 516.12,696.631 516.679,716.246 517.238,715.343 517.798,733.4 518.357,698.614 518.916,701.008 519.475,706.74 520.035,693.441 520.594,745.211 521.153,731.049 521.712,728.351 522.272,745.555 522.831,712.817 523.39,729.307 523.949,729.902 524.509,710.634 525.068,698.153 525.627,715.934 526.186,716.603 526.746,731.981 527.305,782.798 527.864,778.473 528.423,759.96 528.983,741.426 529.542,741.786 530.101,739.61 530.66,771.534 531.22,786.58 531.779,795.505 532.338,790.268 532.897,772.905 533.457,740.441 534.016,757.362 534.575,755.53 535.134,755.55 535.694,739.343 536.253,720.53 536.812,689.024 537.371,672.205 537.931,676.148 538.49,664.517 539.049,687.089 539.608,689.394 540.168,676.058 540.727,660.948 541.286,646.369 541.845,615.896 542.405,605.544 542.964,611.838 543.523,618.643 544.082,628.24 544.642,629.543 545.201,620.103 545.76,626.173 546.319,617.334 546.879,622.993 547.438,578.443 547.997,582.524 548.556,620.423 549.116,630.104 549.675,632.637 550.234,652.888 550.793,671.944 551.353,689.818 551.912,673.787 552.471,675.266 553.031,711.13 553.59,709.849 554.149,696.235 554.708,712.327 555.268,730.943 555.827,731.239 556.386,729.043 556.945,710.796 557.505,711.765 558.064,715.166 558.623,730.59 559.182,713.604 559.742,774.366 560.301,756.029 560.86,752.716 561.419,754.054 561.979,721.531 562.538,723.618 563.097,707.539 563.656,708.908 564.216,711.212 564.775,728.306 565.334,728.377 565.893,712.689 566.453,747.165 567.012,778.862 567.571,744.225 568.13,755.911 568.69,725.553 569.249,743.215 569.808,738.426 570.367,768.947 570.927,782.825 571.486,730.509 572.045,713.032 572.604,726.437 573.164,709.906 573.723,708.584 574.282,723.101 574.841,737.93 575.401,721.706 575.96,687.819 576.519,656.932 577.078,643.588 577.638,632.381 578.197,635.966 578.756,657.423 579.315,722.098 579.875,721.635 580.434,719.235 580.993,702.41 581.552,652.805 582.112,656.683 582.671,644.48 583.23,629.178 583.789,651.158 584.349,684.232 584.908,685.438 585.467,638.619 586.026,659.381 586.586,661.829 587.145,679.879 587.704,678.683 588.263,665.361 588.823,652.344 589.382,656.001 589.941,692.85 590.5,677.281 591.06,679.837 591.619,696.809 592.178,665.587 592.737,635.254 593.297,673.383 593.856,675.678 594.415,676.081 594.974,677.201 595.534,679.331 596.093,680.112 596.652,683.936 597.211,685.1 597.771,704.775 598.33,689.701 598.889,675.259 599.448,660.804 600.008,692.308 600.567,712.922 601.126,711.414 601.685,729.549 602.245,712.39 602.804,649.327 603.363,687.497 603.922,721.233 604.482,736.45 605.041,769.899 605.6,749.404 606.159,697.642 606.719,664.039 607.278,682.657 607.837,652.454 608.396,658.006 608.956,660.031 609.515,611.674 610.074,649.419 610.633,687.076 611.193,667.891 611.752,686.444 612.311,701.862 612.87,685.653 613.43,689.871 613.989,722.112 614.548,735.81 615.107,734.249 615.667,717.443 616.226,718.654 616.785,734.73 617.344,765.471 617.904,791.788 618.463,803.131 619.022,815.917 619.581,824.564 620.141,786.558 620.7,798.992 621.259,794.694 621.818,771.986 622.378,767.549 622.937,766.518 623.496,743.199 624.055,758.87 624.615,740.784 625.174,706.703 625.733,656.602 626.292,643.569 626.852,679.54 627.411,712.53 627.97,712.997 628.529,727.582 629.089,726.45 629.648,723.67 630.207,723.559 630.766,704.555 631.326,751.158 631.885,744.155 632.444,725.671 633.003,710.289 633.563,727.185 634.122,724.481 634.681,705.282 635.24,705.433 635.8,705.293 636.359,671.877 636.918,692.053 637.477,692.085 638.037,677.606 638.596,665.526 639.155,669.22 639.714,690.745 640.274,705.274 640.833,719.612 641.392,717.25 641.951,699.048 642.511,679.778 643.07,679.658 643.629,683.11 644.188,685.397 644.748,683.536 645.307,670.331 645.866,676.59 646.425,663.392 646.985,698.704 647.544,700.216 648.103,716.459 648.662,702.022 649.222,717.119 649.781,744.745 650.34,736.861 650.899,750.379 651.459,763.866 652.018,762.845 652.577,742.312 653.136,756.517 653.696,735.819 654.255,748.466 654.814,744.819 655.373,728.429 655.933,725.951 656.492,706.779 657.051,703.084 657.61,704.544 658.17,688.326 658.729,688.949 659.288,719.784 659.847,721.899 660.407,719.413 660.966,700.338 661.525,699.168 662.084,681.85 662.644,633.727 663.203,638.335 663.762,640.949 664.321,627.603 664.881,632.371 665.44,634.549 665.999,641 666.558,642.674 667.118,645.796 667.677,632.912 668.236,637.441 668.795,643.334 669.355,662.292 669.914,649.124 670.473,649.579 671.032,667.699 671.592,666.569 672.151,682.712 672.71,650.674 673.269,686.111 673.829,685.551 674.388,686.659 674.947,653.597 675.506,688.996 676.066,689.649 676.625,704.907 677.184,720.72 677.743,719.757 678.303,702.094 678.862,715.065 679.421,712.38 679.981,680.011 680.54,680.616 681.099,664.933 681.658,683.8 682.218,685.539 682.777,687.575 683.336,626.061 683.895,628.971 684.455,614.81 685.014,617.712 685.573,623.054 686.132,643.257 686.692,663.412 687.251,682.609 687.81,684.564 688.369,701.442 688.929,749.815 689.488,764.521 690.047,788.861 690.606,782.804 691.166,793.671 691.725,786.442 692.284,781.569 692.843,778.656 693.403,806.69 693.962,802.834 694.521,797.794 695.08,776.042 695.64,741.365 696.199,758.117 696.758,737.175 697.317,767.566 697.877,745.707 698.436,727.793 698.995,710.344 699.554,676.004 700.114,663.794 700.673,711.743 701.232,721.684 701.791,685.294 702.351,637.378 702.91,661.669 703.469,666.085 704.028,681.983 704.588,650.202 705.147,670.232 705.706,704.684 706.265,691.147 706.825,676.155 707.384,678.169 707.943,697.49 708.502,745.737 709.062,729.908 709.621,711.937 710.18,711.206 710.739,727.805 711.299,742.462 711.858,725.834 712.417,740.322 712.976,720.466 713.536,731.26 714.095,731.231 714.654,729.951 715.213,729.362 715.773,727.249 716.332,710.71 716.891,693.402 717.45,712.786 718.01,711.451 718.569,724.553 719.128,688.991 719.687,688.955 720.247,656.396 720.806,644.169 721.365,646.069 721.924,629.38 722.484,685.93 723.043,654.479 723.602,719.647 724.161,738.547 724.721,751.82 725.28,747.353 725.839,728.311 726.398,725.279 726.958,737.617 727.517,734.506 728.076,734.075 728.635,747.634 729.195,743.854 729.754,745.143 730.313,728.415 730.872,724.271 731.432,721.657 731.991,735.739 732.55,750.15 733.109,765.335 733.669,760.952 734.228,758.983 734.787,755.422 735.346,707.577 735.906,674.095 736.465,628.498 737.024,614.772 737.583,684.316 738.143,669.206 738.702,652.061 739.261,655.08 739.82,651.373 740.38,653.548 740.939,642.45 741.498,641.668 742.057,641.94 742.617,643.9 743.176,633.879 743.735,635.916 744.294,654.732 744.854,659.1 745.413,678.117 745.972,674.329 746.531,642.616 747.091,594.241 747.65,616.278 748.209,621.194 748.768,674.616 749.328,695.188 749.887,693.876 750.446,679.373 751.005,695.829 751.565,694.169 752.124,709.569 752.683,708.073 753.242,756.046 753.802,768.497 754.361,747.5 754.92,744.855 755.479,790.991 756.039,788.156 756.598,819.728 757.157,779.454 757.716,777.323 758.276,772.801 758.835,723.772 759.394,703.516 759.953,702.93 760.513,717.623 761.072,734.964 761.631,735.647 762.19,747.955 762.75,727.799 763.309,709.608 763.868,709.383 764.427,691.182 764.987,705.677 765.546,672.985 766.105,674.084 766.664,672.954 767.224,690.092 767.783,720.503 768.342,687.117 768.901,688.058 769.461,717.413 770.02,716.565 770.579,712.151 771.138,712.952 771.698,712.56 772.257,695.036 772.816,693.056 773.375,757.161 773.935,785.449 774.494,784.318 775.053,795.155 775.612,774.303 776.172,769.206 776.731,730.369 777.29,760.298 777.849,725.761 778.409,685.352 778.968,669.527 779.527,699.341 780.086,698.776 780.646,699.624 781.205,732.518 781.764,717.584 782.323,748.275 782.883,745.253 783.442,755.613 784.001,752.206 784.56,747.305 785.12,698.027 785.679,710.005 786.238,673.144 786.797,690.246 787.357,752.73 787.916,747.504 788.475,714.154 789.034,715.62 789.594,698.588 790.153,697.557 790.712,713.94 791.271,713.322 791.831,681.444 792.39,679.952 792.949,710.64 793.508,676.697 794.068,645.109 794.627,631.189 795.186,635.644 795.745,634.467 796.305,622.088 796.864,591.035 797.423,596.218 797.982,587.106 798.542,574.275 799.101,582.653 799.66,587.455 800.219,608.9 800.779,612.596 801.338,617.566 801.897,623.171 802.456,626.331 803.016,611.354 803.575,610.535 804.134,629.963 804.693,617.289 805.253,670.843 805.812,670.409 806.371,657.449 806.931,707.633 807.49,705.791 808.049,687.679 808.608,687.279 809.168,668.486 809.727,718.304 810.286,730.637 810.845,697.505 811.405,708.04 811.964,735.637 812.523,734.567 813.082,762.833 813.642,743.82 814.201,724.808 814.76,720.969 815.319,701.832 815.879,687.823 816.438,681.508 816.997,682.968 817.556,681.958 818.116,697.26 818.675,662.398 819.234,677.923 819.793,663.722 820.353,666.545 820.912,667.986 821.471,687.855 822.03,687.041 822.59,673.92 823.149,676.025 823.708,693.417 824.267,712.996 824.827,697.269 825.386,712.238 825.945,726.812 826.504,674.452 827.064,657.133 827.623,675.089 828.182,694.298 828.741,696.17 829.301,714.717 829.86,697.173 830.419,677.288 830.978,661.361 831.538,648.394 832.097,652.663 832.656,637.886 833.215,626.385 833.775,629.86 834.334,666.486 834.893,652.61 835.452,652.412 836.012,621.387 836.571,593.167 837.13,616.594 837.689,639.808 838.249,672.16 838.808,689.419 839.367,676.974 839.926,660.759 840.486,664.814 841.045,680.737 841.604,698.311 842.163,682.2 842.723,685.446 843.282,700.285 843.841,682.726 844.4,696.068 844.96,697.755 845.519,678.123 846.078,645.439 846.637,681.267 847.197,700.056 847.756,713.696 848.315,773.49 848.874,770.401 849.434,766.042 849.993,776.778 850.552,789.336 851.111,814.519 851.671,790.681 852.23,786.964 852.789,797.557 853.348,791.713 853.908,815.226 854.467,793.109 855.026,772.07 855.585,749.76 856.145,777.808 856.704,774.351 857.263,752.606 857.822,718.458 858.382,715.372 858.941,713.718 859.5,728.575 860.059,739.147 860.619,749.758 861.178,730.719 861.737,743.734 862.296,774.38 862.856,771.051 863.415,767.587 863.974,746.473 864.533,726.45 865.093,742.394 865.652,740.365 866.211,752.767 866.77,751.093 867.33,763.786 867.889,773.731 868.448,753.023 869.007,667.33 869.567,637.704 870.126,722.671 870.685,720.941 871.244,705.817 871.804,701.172 872.363,700.749 872.922,700.068 873.481,686.872 874.041,702.885 874.6,749.924 875.159,775.233 875.718,770.685 876.278,751.444 876.837,764.179 877.396,760.149 877.955,769.85 878.515,762.486 879.074,742.164 879.633,718.159 880.192,665.684 880.752,667.403 881.311,664.712 881.87,692.802 882.429,693.562 882.989,679.19 883.548,724.927 884.107,722.091 884.666,718.736 885.226,698.739 885.785,697.473 886.344,677.754 886.903,661.599 887.463,673.8 888.022,640.203 888.581,675.304 889.14,645.949 889.7,615.092 890.259,570.295 890.818,557.239 891.377,529.944 891.937,522.513 892.496,548.506 893.055,555.932 893.614,543.564 894.174,550.986 894.733,572.369 895.292,550.025 895.851,543.462 896.411,551.238 896.97,577.784 897.529,566.804 898.088,571.391 898.648,559.625 899.207,598.896 899.766,638.383 900.325,628.255 900.885,628.748 901.444,614.471 902.003,654.767 902.562,653.467 903.122,687.266 903.681,653.925 904.24,655.219 904.799,640.069 905.359,640.58 905.918,643.897 906.477,628.091 907.036,633.239 907.596,654.85 908.155,670.581 908.714,653.454 909.273,673.05 909.833,707.02 910.392,708.227 910.951,722.43 911.51,722.011 912.07,707.275 912.629,721.624 913.188,706.694 913.747,705.343 914.307,705.235 914.866,706.656 915.425,689.788 915.984,693.411 916.544,694.628 917.103,679.445 917.662,681.313 918.221,653.439 918.781,637.253 919.34,685.278 919.899,686.34 920.458,701.821 921.018,685.602 921.577,687.663 922.136,673.505 922.695,689.311 923.255,656.952 923.814,640.92 924.373,642.955 924.932,674.583 925.492,655.815 926.051,621.851 926.61,610.81 927.169,615.476 927.729,617.927 928.288,622.798 928.847,660.279 929.406,646.903 929.966,631.628 930.525,585.225 931.084,574.386 931.644,581.388 932.203,559.378 932.762,616.364 933.321,621.503 933.881,625.757 934.44,613.958 934.999,615.076 935.558,667.538 936.118,687.543 936.677,656.406 937.236,643.159 937.795,629.763 938.355,647.333 938.914,660.756 939.473,643.79 940.032,614.492 940.592,617.465 941.151,638.07 941.71,641.087 942.269,656.308 942.829,627.647 943.388,600.669 943.947,640.933 944.506,627.192 945.066,644.389 945.625,660.429 946.184,632.851 946.743,635.779 947.303,658.191 947.862,659.597 948.421,691.339 948.98,658.882 949.54,673.914 950.099,674.247 950.658,678.416 951.217,680.92 951.777,668.189 952.336,685.939 952.895,681.786 953.454,680.667 954.014,662.358 954.573,647.323 955.132,648.578 955.691,664.229 956.251,683.554 956.81,685.675 957.369,684.228 957.928,701.29 958.488,702.759 959.047,683.33 959.606,685.369 960.165,697.85 960.725,663.219 961.284,662.776 961.843,700.078 962.402,683.959 962.962,702.105 963.521,700.371 964.08,698.933 964.639,698.247 965.199,695.438 965.758,649.306 966.317,633.852 966.876,637.734 967.436,622.755 967.995,674.98 968.554,675.224 969.113,608.202 969.673,642.412 970.232,643.077 970.791,658.973 971.35,658.324 971.91,643.175 972.469,677.33 973.028,737.814 973.587,720.543 974.147,732.213 974.706,717.196 975.265,699.298 975.824,700.591 976.384,716.806 976.943,714.71 977.502,694.73 978.061,675.03 978.621,660.004 979.18,677.433 979.739,662.557 980.298,666.429 980.858,669.162 981.417,655.003 981.976,654.055 982.535,674.695 983.095,660.857 983.654,694.207 984.213,693.032 984.772,662.086 985.332,679.409 985.891,682.282 986.45,734.309 987.009,716.823 987.569,731.827 988.128,777.934 988.687,758.294 989.246,722.023 989.806,734.08 990.365,727.892 990.924,736.661 991.483,750.471 992.043,732.254 992.602,760.214 993.161,787.955 993.72,796.109 994.28,806.978 994.839,753.776 995.398,781.471 995.957,790.529 996.517,787.651 997.076,748.391 997.635,722.894 998.194,705.534 998.754,736.338 999.313,732.761 999.872,698.125 1000.43,699.142 1000.99,712.676 1001.55,711.633 1002.11,710.323 1002.67,725.502 1003.23,727.213 1003.79,708.993 1004.35,742.069 1004.91,772.612 1005.46,750.457 1006.02,729.66 1006.58,741.236 1007.14,738.22 1007.7,734.729 1008.26,715.965 1008.82,701.274 1009.38,700.678 1009.94,684.66 1010.5,668.486 1011.06,653.683 1011.62,655.017 1012.18,672.308 1012.73,623.071 1013.29,643.185 1013.85,663.755 1014.41,669.624 1014.97,684.591 1015.53,702.266 1016.09,684.53 1016.65,695.157 1017.21,678.479 1017.77,673.999 1018.33,690.023 1018.89,691.493 1019.45,687.922 1020.01,656.695 1020.56,660.516 1021.12,644.638 1021.68,648.335 1022.24,652.971 1022.8,653.476 1023.36,655.03 1023.92,688.232 1024.48,686.354 1025.04,686.135 1025.6,688.393 1026.16,687.605 1026.72,658.588 1027.28,657.821 1027.83,659.689 1028.39,642.904 1028.95,661.496 1029.51,630.562 1030.07,633.654 1030.63,636.324 1031.19,656.724 1031.75,655.778 1032.31,686.055 1032.87,652.346 1033.43,719.871 1033.99,734.069 1034.55,731.482 1035.1,749.115 1035.66,678.112 1036.22,681.108 1036.78,629.751 1037.34,681.528 1037.9,697.888 1038.46,679.452 1039.02,694.664 1039.58,743.241 1040.14,774.506 1040.7,782.146 1041.26,761.257 1041.82,773.84 1042.38,767.703 1042.93,747.816 1043.49,761.418 1044.05,756.103 1044.61,753.363 1045.17,749.948 1045.73,746.655 1046.29,742.531 1046.85,788.804 1047.41,768.242 1047.97,777.836 1048.53,775.424 1049.09,801.041 1049.65,810.517 1050.2,788.8 1050.76,750.592 1051.32,731.86 1051.88,712.621 1052.44,713.386 1053,711.604 1053.56,727.829 1054.12,758.788 1054.68,706.962 1055.24,689.933 1055.8,657.203 1056.36,676.328 1056.92,658.976 1057.48,644.026 1058.03,629.333 1058.59,630.437 1059.15,634.622 1059.71,574.669 1060.27,563.836 1060.83,569.534 1061.39,540.988 1061.95,533.758 1062.51,540.692 1063.07,598.326 1063.63,586.072 1064.19,590.594 1064.75,613.631 1065.3,601.615 1065.86,620.48 1066.42,610.37 1066.98,648.843 1067.54,650.426 1068.1,651.988 1068.66,663.801 1069.22,663.5 1069.78,648.224 1070.34,681.863 1070.9,653.262 1071.46,670.976 1072.02,657.419 1072.57,661.093 1073.13,678.065 1073.69,658.993 1074.25,727.062 1074.81,724.061 1075.37,722.199 1075.93,719.133 1076.49,699.006 1077.05,732.678 1077.61,719.635 1078.17,718.551 1078.73,700.956 1079.29,701.522 1079.85,683.597 1080.4,683.974 1080.96,697.2 1081.52,711.636 1082.08,710.128 1082.64,677.001 1083.2,677.395 1083.76,646.102 1084.32,680.982 1084.88,683.014 1085.44,702.965 1086,697.508 1086.56,713.887 1087.12,727.836 1087.67,690.792 1088.23,703.059 1088.79,717.625 1089.35,731.242 1089.91,712.442 1090.47,710.472 1091.03,723.245 1091.59,739.088 1092.15,722.315 1092.71,718.235 1093.27,686.071 1093.83,700.103 1094.39,716.482 1094.94,700.586 1095.5,715.705 1096.06,698.616 1096.62,680.939 1097.18,680.694 1097.74,677.988 1098.3,724.496 1098.86,754.98 1099.42,750.229 1099.98,745.086 1100.54,710.286 1101.1,692.506 1101.66,705.608 1102.22,691.092 1102.77,707.376 1103.33,704.363 1103.89,703.069 1104.45,703.438 1105.01,686.632 1105.57,686.051 1106.13,697.591 1106.69,695.898 1107.25,697.948 1107.81,679.826 1108.37,690.486 1108.93,688.571 1109.49,691.203 1110.04,673.747 1110.6,677.559 1111.16,725.064 1111.72,659.577 1112.28,689.813 1112.84,706.609 1113.4,686.018 1113.96,684.033 1114.52,648.366 1115.08,667.12 1115.64,703.631 1116.2,722.099 1116.76,771.635 1117.31,770.256 1117.87,748.395 1118.43,729.758 1118.99,775.65 1119.55,789.781 1120.11,772.058 1120.67,769.321 1121.23,778.905 1121.79,773.678 1122.35,751.407 1122.91,747.254 1123.47,762.536 1124.03,759.984 1124.59,738.472 1125.14,731.527 1125.7,746.927 1126.26,743.193 1126.82,726.986 1127.38,723.004 1127.94,689.025 1128.5,675.401 1129.06,657.98 1129.62,644.593 1130.18,628.531 1130.74,599.95 1131.3,604.118 1131.86,591.705 1132.41,614.779 1132.97,586.994 1133.53,593.635 1134.09,583.879 1134.65,589.478 1135.21,577.21 1135.77,598.171 1136.33,619.292 1136.89,624.565 1137.45,647.315 1138.01,680.895 1138.57,712.493 1139.13,710.644 1139.68,708.397 1140.24,694.962 1140.8,724.989 1141.36,690.165 1141.92,705.435 1142.48,739.155 1143.04,721.187 1143.6,733.742 1144.16,731.681 1144.72,675.862 1145.28,661.511 1145.84,680.783 1146.4,663.952 1146.96,680.001 1147.51,681.301 1148.07,681.461 1148.63,698.237 1149.19,680.522 1149.75,680.43 1150.31,696.405 1150.87,726.356 1151.43,723.584 1151.99,719.12 1152.55,717.139 1153.11,701.701 1153.67,685.728 1154.23,685.784 1154.78,700.992 1155.34,746.852 1155.9,731.47 1156.46,764.307 1157.02,746.18 1157.58,757.397 1158.14,768.945 1158.7,763.331 1159.26,740.7 1159.82,742.485 1160.38,756.092 1160.94,703.355 1161.5,716.311 1162.05,730.799 1162.61,729.704 1163.17,726.929 1163.73,706.197 1164.29,656.701 1164.85,643.429 1165.41,643.519 1165.97,712.797 1166.53,708.283 1167.09,706.59 1167.65,723.108 1168.21,676.181 1168.77,659.982 1169.33,645.786 1169.88,664.019 1170.44,676.613 1171,694.419 1171.56,699.811 1172.12,686.325 1172.68,649.098 1173.24,615.082 1173.8,647.009 1174.36,633.138 1174.92,668.013 1175.48,667.776 1176.04,654.025 1176.6,655.606 1177.15,656.884 1177.71,673.477 1178.27,694.441 1178.83,694.992 1179.39,693.141 1179.95,679.558 1180.51,664.591 1181.07,634.012 1181.63,621.915 1182.19,593.474 1182.75,633.252 1183.31,618.965 1183.87,622.295 1184.43,659.226 1184.98,657.823 1185.54,660.409 1186.1,645.719 1186.66,648.921 1187.22,651.717 1187.78,665.36 1188.34,621.354 1188.9,627.54 1189.46,629.397 1190.02,634.028 1190.58,603.846 1191.14,611.445 1191.7,631.111 1192.25,668.124 1192.81,669.717 1193.37,670.922 1193.93,654.516 1194.49,655.937 1195.05,657.435 1195.61,660.41 1196.17,631.533 1196.73,650.044 1197.29,628.458 1197.85,647.642 1198.41,646.366 1198.97,631.635 1199.52,619.991 1200.08,623.711 1200.64,642.072 1201.2,628.744 1201.76,614.622 1202.32,635.978 1202.88,623.887 1203.44,610.637 1204,581.355 1204.56,584.603 1205.12,589.256 1205.68,560.95 1206.24,570.995 1206.8,595.032 1207.35,601.465 1207.91,624.632 1208.47,611.237 1209.03,631.817 1209.59,652.251 1210.15,606.482 1210.71,644.535 1211.27,648.066 1211.83,667.844 1212.39,684.936 1212.95,689.188 1213.51,689.323 1214.07,689.865 1214.62,706.751 1215.18,674.474 1215.74,693.462 1216.3,693.791 1216.86,677.366 1217.42,657.363 1217.98,693.026 1218.54,675.912 1219.1,708.126 1219.66,772.042 1220.22,785.908 1220.78,763.45 1221.34,762.339 1221.89,697.841 1222.45,697.463 1223.01,747.357 1223.57,757.055 1224.13,766.895 1224.69,779.084 1225.25,786.617 1225.81,777.271 1226.37,789.5 1226.93,798.021 1227.49,774.229 1228.05,753.149 1228.61,729.548 1229.17,727.52 1229.72,727.533 1230.28,707.945 1230.84,725.538 1231.4,728.16 1231.96,727.203 1232.52,723.668 1233.08,722.598 1233.64,703.841 1234.2,671.341 1234.76,688.236 1235.32,669.953 1235.88,672.394 1236.44,671.618 1236.99,703.391 1237.55,751.951 1238.11,732.266 1238.67,696.863 1239.23,665.412 1239.79,668.536 1240.35,667.949 1240.91,686.587 1241.47,688.243 1242.03,690.013 1242.59,656.826 1243.15,641.357 1243.71,678.027 1244.26,645.046 1244.82,615.165 1245.38,622.216 1245.94,612.719 1246.5,614.583 1247.06,603.002 1247.62,624.646 1248.18,600.747 1248.74,619.765 1249.3,654.789 1249.86,719.085 1250.42,715.606 1250.98,733.444 1251.54,698.497 1252.09,716.077 1252.65,714.492 1253.21,678.758 1253.77,692.569 1254.33,659.67 1254.89,663.453 1255.45,684.735 1256.01,685.914 1256.57,687.301 1257.13,702.162 1257.69,685.445 1258.25,686.864 1258.81,687.05 1259.36,668.408 1259.92,633.69 1260.48,586.845 1261.04,611.049 1261.6,629.177 1262.16,633.627 1262.72,651.031 1263.28,671.303 1263.84,672.502 1264.4,706.403 1264.96,717.603 1265.52,714.716 1266.08,739.67 1266.63,719.963 1267.19,699.119 1267.75,730.405 1268.31,746.426 1268.87,742.806 1269.43,772.369 1269.99,736.142 1270.55,718.512 1271.11,766.542 1271.67,795.024 1272.23,804.785 1272.79,750.048 1273.35,728.236 1273.91,742.099 1274.46,755.752 1275.02,749.251 1275.58,732.7 1276.14,731.928 1276.7,732.483 1277.26,727.017 1277.82,725.255 1278.38,722.948 1278.94,704.38 1279.5,722.628 1280.06,720.145 1280.62,719.707 1281.18,703.5 1281.73,700.436 1282.29,702.303 1282.85,700.69 1283.41,716.024 1283.97,742.438 1284.53,755.816 1285.09,755.696 1285.65,751.08 1286.21,795.834 1286.77,790.221 1287.33,782.458 1287.89,778.186 1288.45,776.225 1289,770.956 1289.56,733.912 1290.12,762.773 1290.68,773.746 1291.24,782.465 1291.8,778.145 1292.36,757.082 1292.92,754.894 1293.48,750.322 1294.04,731.331 1294.6,729.759 1295.16,693.481 1295.72,695.98 1296.28,677.16 1296.83,648.297 1297.39,669.39 1297.95,670.346 1298.51,652.796 1299.07,655.046 1299.63,658.419 1300.19,695.34 1300.75,680.37 1301.31,712.985 1301.87,714.315 1302.43,726.879 1302.99,745.154 1303.55,777.745 1304.1,737.565 1304.66,718.882 1305.22,702.305 1305.78,716.037 1306.34,635.563 1306.9,637.977 1307.46,654.675 1308.02,675.543 1308.58,676.352 1309.14,676.971 1309.7,677.852 1310.26,678.554 1310.82,676.719 1311.38,689.909 1311.93,674.347 1312.49,640.4 1313.05,640.451 1313.61,627.179 1314.17,580.805 1314.73,569.822 1315.29,578.293 1315.85,552.347 1316.41,528.568 1316.97,501.347 1317.53,509.988 1318.09,520.749 1318.65,529.519 1319.2,538.215 1319.76,560.836 1320.32,552.243 1320.88,560.749 1321.44,585.403 1322,559.406 1322.56,564.946 1323.12,589.713 1323.68,611.939 1324.24,645.94 1324.8,643.608 1325.36,659.997 1325.92,659.67 1326.47,661.095 1327.03,646.593 1327.59,663.866 1328.15,713.718 1328.71,708.242 1329.27,705.549 1329.83,703.425 1330.39,653.888 1330.95,671.16 1331.51,671.895 1332.07,689.391 1332.63,685.73 1333.19,701.319 1333.75,699.966 1334.3,715.348 1334.86,746.181 1335.42,790.11 1335.98,787.193 1336.54,751.706 1337.1,779.467 1337.66,746.122 1338.22,745.026 1338.78,743.391 1339.34,722.88 1339.9,705.202 1340.46,685.618 1341.02,671.867 1341.57,670.19 1342.13,657.035 1342.69,675.657 1343.25,660.883 1343.81,680.857 1344.37,680.312 1344.93,715.239 1345.49,732.128 1346.05,681.939 1346.61,698.882 1347.17,713.453 1347.73,698.231 1348.29,697.525 1348.84,698.182 1349.4,682.125 1349.96,636.136 1350.52,654.066 1351.08,655.39 1351.64,656.588 1352.2,655.415 1352.76,657.575 1353.32,644.249 1353.88,664.06 1354.44,647.755 1355,663.963 1355.56,632.375 1356.12,651.865 1356.67,653.585 1357.23,635.154 1357.79,639.663 1358.35,626.037 1358.91,644.955 1359.47,644.421 1360.03,647.396 1360.59,681.43 1361.15,682.883 1361.71,667.197 1362.27,667.634 1362.83,637.984 1363.39,658.044 1363.94,662.61 1364.5,659.857 1365.06,662.73 1365.62,668.321 1366.18,688.688 1366.74,702.06 1367.3,701.579 1367.86,714.058 1368.42,679.25 1368.98,680.736 1369.54,700.197 1370.1,679.619 1370.66,663.6 1371.21,696.299 1371.77,678.456 1372.33,714.937 1372.89,678.742 1373.45,710.258 1374.01,724.35 1374.57,725.177 1375.13,706.42 1375.69,726.418 1376.25,743.176 1376.81,691.675 1377.37,702.944 1377.93,705.14 1378.49,719.977 1379.04,734.016 1379.6,711.82 1380.16,694.808 1380.72,692.617 1381.28,706.841 1381.84,755.619 1382.4,750.717 1382.96,791.229 1383.52,767.985 1384.08,777.358 1384.64,770.229 1385.2,811.67 1385.76,803.877 1386.31,812.644 1386.87,776.564 1387.43,756.816 1387.99,722.744 1388.55,688.035 1389.11,655.034 1389.67,644.026 1390.23,646.072 1390.79,647.329 1391.35,633.171 1391.91,669.027 1392.47,668.254 1393.03,666.843 1393.58,652.959 1394.14,607.456 1394.7,610.764 1395.26,613.158 1395.82,598.192 1396.38,565.538 1396.94,538.48 1397.5,546.701 1398.06,553.998 1398.62,559.911 1399.18,630.864 1399.74,631.386 1400.3,635.721 1400.86,652.917 1401.41,671.455 1401.97,690.723 1402.53,693.157 1403.09,677.609 1403.65,696.538 1404.21,708.932 1404.77,691.303 1405.33,672.047 1405.89,690.92 1406.45,674.352 1407.01,659.572 1407.57,661.793 1408.13,631.28 1408.68,631.559 1409.24,647.013 1409.8,631.467 1410.36,633.192 1410.92,651.949 1411.48,684.617 1412.04,734.267 1412.6,729.611 1413.16,727.549 1413.72,723.465 1414.28,720.863 1414.84,721.568 1415.4,735.633 1415.95,767.846 1416.51,748.606 1417.07,728.902 1417.63,730.326 1418.19,696.34 1418.75,708.625 1419.31,708.359 1419.87,720.739 1420.43,734.934 1420.99,714.743 1421.55,712.926 1422.11,731.263 1422.67,713.747 1423.23,710.487 1423.78,677.556 1424.34,682.024 1424.9,651.072 1425.46,618.532 1426.02,609.236 1426.58,643.322 1427.14,644.418 1427.7,648.545 1428.26,617.503 1428.82,621.201 1429.38,624.504 1429.94,626.534 1430.5,646.834 1431.05,664.664 1431.61,649.921 1432.17,667.421 1432.73,699.917 1433.29,717.71 1433.85,686.115 1434.41,702.622 1434.97,702.186 1435.53,705.892 1436.09,703.368 1436.65,703.213 1437.21,685.074 1437.77,666.477 1438.33,695.984 1438.88,695.646 1439.44,697.934 1440,715.56 1440.56,701.403 1441.12,700.886 1441.68,699.544 1442.24,731.948 1442.8,732.925 1443.36,713.245 1443.92,710.745 1444.48,660.564 1445.04,693.514 1445.6,692.651 1446.15,692.786 1446.71,676.852 1447.27,694.368 1447.83,694.195 1448.39,690.848 1448.95,721.259 1449.51,719.793 1450.07,669.335 1450.63,685.159 1451.19,714.043 1451.75,742.214 1452.31,734.332 1452.87,714.984 1453.42,662.344 1453.98,664.581 1454.54,662.975 1455.1,663.969 1455.66,666.846 1456.22,669.321 1456.78,686.586 1457.34,684.529 1457.9,635.162 1458.46,636.315 1459.02,654.689 1459.58,640.058 1460.14,640.294 1460.7,657.456 1461.25,624.285 1461.81,658.24 1462.37,676.639 1462.93,676.264 1463.49,691.416 1464.05,689.306 1464.61,737.045 1465.17,732.409 1465.73,699.016 1466.29,680.629 1466.85,682.275 1467.41,682.357 1467.97,680.393 1468.52,695.948 1469.08,696.707 1469.64,695.902 1470.2,710.412 1470.76,689.896 1471.32,671.228 1471.88,704.743 1472.44,699.574 1473,698.339 1473.56,681.867 1474.12,680.144 1474.68,660.651 1475.24,677.359 1475.79,705.771 1476.35,688.807 1476.91,690.558 1477.47,706.81 1478.03,722.177 1478.59,735.244 1479.15,714.634 1479.71,676.804 1480.27,711.626 1480.83,709.263 1481.39,707.215 1481.95,708.827 1482.51,711.161 1483.07,714.2 1483.62,729.658 1484.18,741.141 1484.74,735.247 1485.3,748.745 1485.86,744.818 1486.42,722.566 1486.98,719.714 1487.54,718.107 1488.1,716.11 1488.66,714.473 1489.22,726.714 1489.78,723.355 1490.34,717.32 1490.89,700.949 1491.45,665.409 1492.01,666.358 1492.57,665.412 1493.13,712.553 1493.69,698.325 1494.25,696.213 1494.81,694.824 1495.37,694.502 1495.93,679.05 1496.49,681.447 1497.05,695.956 1497.61,678.615 1498.16,710.743 1498.72,711.04 1499.28,710.063 1499.84,671.66 1500.4,671.982 1500.96,639.357 1501.52,641.095 1502.08,691.765 1502.64,690.547 1503.2,657.208 1503.76,674.617 1504.32,671.629 1504.88,671.853 1505.44,673.016 1505.99,657.753 1506.55,657.509 1507.11,658.771 1507.67,656.651 1508.23,675.428 1508.79,691.13 1509.35,709.093 1509.91,709.203 1510.47,673.518 1511.03,687.982 1511.59,686.918 1512.15,684.582 1512.71,667.335 1513.26,665.252 1513.82,680.892 1514.38,662.66 1514.94,678.964 1515.5,695.275 1516.06,710.004 1516.62,711.181 1517.18,756.597 1517.74,716.991 1518.3,711.978 1518.86,646.381 1519.42,632.238 1519.98,617.157 1520.53,590.295 1521.09,590.326 1521.65,613.428 1522.21,634.097 1522.77,652.879 1523.33,605.619 1523.89,645.872 1524.45,649.13 1525.01,649.339 1525.57,652.263 1526.13,639.29 1526.69,656.816 1527.25,670.456 1527.81,686.354 1528.36,701.93 1528.92,666.094 1529.48,632.351 1530.04,636.89 1530.6,640.109 1531.16,625.406 1531.72,643.786 1532.28,647.397 1532.84,664.243 1533.4,683.14 1533.96,665.119 1534.52,669.132 1535.08,656.374 1535.63,643.061 1536.19,615.215 1536.75,554.783 1537.31,564.731 1537.87,552.264 1538.43,576.457 1538.99,631.102 1539.55,634.184 1540.11,652.117 1540.67,668.402 1541.23,652.372 1541.79,654.172 1542.35,652.92 1542.9,655.149 1543.46,669.51 1544.02,656.41 1544.58,675.008 1545.14,659.821 1545.7,661.972 1546.26,664.294 1546.82,717.621 1547.38,699.36 1547.94,696.799 1548.5,682.082 1549.06,683.65 1549.62,702.569 1550.18,703.014 1550.73,700.782 1551.29,720.191 1551.85,703.358 1552.41,718.311 1552.97,683.341 1553.53,699.5 1554.09,716.476 1554.65,747.643 1555.21,744.522 1555.77,756.824 1556.33,724.639 1556.89,689.312 1557.45,657.859 1558,676.168 1558.56,662.157 1559.12,645.413 1559.68,658.51 1560.24,639.94 1560.8,627.792 1561.36,629.037 1561.92,680.257 1562.48,695.972 1563.04,725.342 1563.6,734.57 1564.16,745.934 1564.72,745.855 1565.28,740.838 1565.83,723.556 1566.39,732.512 1566.95,728.393 1567.51,742.213 1568.07,740.754 1568.63,675.419 1569.19,707.701 1569.75,691.837 1570.31,676.071 1570.87,672.408 1571.43,656.006 1571.99,691.157 1572.55,692.303 1573.1,727.262 1573.66,726.342 1574.22,692.713 1574.78,674.75 1575.34,691.069 1575.9,692.108 1576.46,706.614 1577.02,654.611 1577.58,670.997 1578.14,670.271 1578.7,688.11 1579.26,687.208 1579.82,701.626 1580.37,686.812 1580.93,670.265 1581.49,670.373 1582.05,703.361 1582.61,719.554 1583.17,716.338 1583.73,714.456 1584.29,728.142 1584.85,724.836 1585.41,724.837 1585.97,705.253 1586.53,706.419 1587.09,706.881 1587.65,691.846 1588.2,694.3 1588.76,692.312 1589.32,708.898 1589.88,721.851 1590.44,737.404 1591,717.826 1591.56,683.569 1592.12,683.636 1592.68,682.014 1593.24,666.23 1593.8,633.464 1594.36,604.412 1594.92,607.839 1595.47,631.286 1596.03,666.761 1596.59,682.855 1597.15,684.899 1597.71,685.353 1598.27,686.728 1598.83,702.817 1599.39,680.764 1599.95,680.708 1600.51,732.469 1601.07,716.157 1601.63,732.63 1602.19,763.462 1602.74,758.97 1603.3,767.715 1603.86,763.784 1604.42,712.427 1604.98,710.898 1605.54,709.11 1606.1,726.922 1606.66,691.206 1607.22,689.286 1607.78,670.546 1608.34,669.947 1608.9,671.248 1609.46,669.424 1610.02,685.526 1610.57,703.493 1611.13,716.422 1611.69,758.476 1612.25,689.097 1612.81,655.105 1613.37,673.929 1613.93,672.882 1614.49,692.863 1615.05,679.458 1615.61,680.185 1616.17,663.174 1616.73,664.54 1617.29,650.862 1617.84,654.191 1618.4,671.528 1618.96,701.848 1619.52,714.066 1620.08,714.798 1620.64,695.277 1621.2,696.825 1621.76,694.807 1622.32,713.847 1622.88,717.392 1623.44,686.372 1624,702.186 1624.56,701.918 1625.11,651.937 1625.67,649.651 1626.23,649.778 1626.79,685.507 1627.35,699.346 1627.91,712.03 1628.47,678.865 1629.03,680.183 1629.59,698.78 1630.15,713.884 1630.71,727.589 1631.27,692.58 1631.83,689.158 1632.39,701.937 1632.94,701.895 1633.5,699.281 1634.06,731.705 1634.62,743.167 1635.18,755.05 1635.74,752.532 1636.3,764.933 1636.86,761.402 1637.42,753.462 1637.98,733.77 1638.54,748.338 1639.1,714.064 1639.66,694.454 1640.21,679.02 1640.77,664.308 1641.33,649.325 1641.89,632.506 1642.45,634.593 1643.01,635.658 1643.57,654.996 1644.13,640.58 1644.69,643.619 1645.25,694.193 1645.81,708.468 1646.37,657.089 1646.93,644.256 1647.48,610.07 1648.04,602.604 1648.6,573.065 1649.16,573.927 1649.72,582.933 1650.28,575.024 1650.84,614.53 1651.4,587.71 1651.96,576.363 1652.52,595.467 1653.08,582.942 1653.64,586.603 1654.2,591.375 1654.76,630.289 1655.31,668.35 1655.87,717.589 1656.43,718.145 1656.99,718.821 1657.55,702.459 1658.11,668.779 1658.67,654.652 1659.23,670.439 1659.79,689.068 1660.35,690.519 1660.91,706.433 1661.47,704.014 1662.03,722.723 1662.58,721.801 1663.14,735.554 1663.7,704.379 1664.26,723.017 1664.82,718.692 1665.38,702.616 1665.94,690.32 1666.5,705.901 1667.06,691.604 1667.62,675.743 1668.18,678.522 1668.74,645.478 1669.3,633.067 1669.85,653.397 1670.41,655.133 1670.97,657.067 1671.53,707.974 1672.09,689.905 1672.65,689.128 1673.21,706.57 1673.77,705.167 1674.33,721.44 1674.89,716.254 1675.45,695.253 1676.01,693.776 1676.57,710.296 1677.13,693.099 1677.68,674.604 1678.24,690.095 1678.8,743.776 1679.36,758.167 1679.92,722.706 1680.48,720.606 1681.04,734.095 1681.6,700.068 1682.16,697.943 1682.72,682.544 1683.28,681.76 1683.84,666.357 1684.4,683.149 1684.95,651.463 1685.51,637.843 1686.07,658.801 1686.63,648.149 1687.19,681.89 1687.75,695.356 1688.31,758.314 1688.87,755.296 1689.43,734.281 1689.99,766.251 1690.55,743.96 1691.11,736.983 1691.67,732.221 1692.23,762.326 1692.78,739.662 1693.34,737.669 1693.9,720.367 1694.46,718.369 1695.02,749.966 1695.58,731.137 1696.14,728.697 1696.7,679.117 1697.26,648.984 1697.82,652.367 1698.38,670.319 1698.94,737.008 1699.5,753.043 1700.05,734.498 1700.61,716.349 1701.17,732.808 1701.73,726.904 1702.29,759.167 1702.85,690.476 1703.41,708.298 1703.97,704.791 1704.53,637.326 1705.09,656.711 1705.65,611.618 1706.21,613.764 1706.77,616.355 1707.32,635.326 1707.88,671.703 1708.44,675.599 1709,679.118 1709.56,700.292 1710.12,716.361 1710.68,698.721 1711.24,712.795 1711.8,722.735 1712.36,739.593 1712.92,749.811 1713.48,743.674 1714.04,742.226 1714.6,743.406 1715.15,756.08 1715.71,784.289 1716.27,798.644 1716.83,760.605 1717.39,789.137 1717.95,767.411 1718.51,764.343 1719.07,759.126 1719.63,739.467 1720.19,733.554 1720.75,714.626 1721.31,761.288 1721.87,762.336 1722.42,726.786 1722.98,773.979 1723.54,844.236 1724.1,805.156 1724.66,781.37 1725.22,744.937 1725.78,711.115 1726.34,690.106 1726.9,689.903 1727.46,676.62 1728.02,692.869 1728.58,693.419 1729.14,677.465 1729.69,677.201 1730.25,677.054 1730.81,641.773 1731.37,679.299 1731.93,695.247 1732.49,677.664 1733.05,709.96 1733.61,675.47 1734.17,672.197 1734.73,640.43 1735.29,625.325 1735.85,612.896 1736.41,600.135 1736.97,573.2 1737.52,596.703 1738.08,638.155 1738.64,627.004 1739.2,650.23 1739.76,600.511 1740.32,607.638 1740.88,613.062 1741.44,600.949 1742,624.188 1742.56,640.975 1743.12,642.71 1743.68,641.56 1744.24,598.67 1744.79,583.981 1745.35,622.969 1745.91,614.487 1746.47,587.38 1747.03,592.322 1747.59,598.889 1748.15,597.471 1748.71,569.183 1749.27,557.267 1749.83,567.01 1750.39,573.776 1750.95,578.689 1751.51,583.185 1752.06,571.636 1752.62,582.813 1753.18,541.905 1753.74,568.232 1754.3,572.369 1754.86,581.268 1755.42,586.203 1755.98,591.615 1756.54,631.72 1757.1,670.71 1757.66,702.988 1758.22,702.113 1758.78,703.192 1759.34,702.314 1759.89,702.714 1760.45,705.023 1761.01,722.299 1761.57,708.629 1762.13,723.622 1762.69,720.574 1763.25,716.282 1763.81,746.407 1764.37,696.411 1764.93,711.257 1765.49,694.127 1766.05,678.095 1766.61,664.048 1767.16,667.014 1767.72,653.647 1768.28,672.645 1768.84,676.211 1769.4,693.683 1769.96,691.433 1770.52,709.023 1771.08,725.93 1771.64,726.054 1772.2,739.565 1772.76,733.937 1773.32,732.38 1773.88,664.073 1774.43,698.407 1774.99,701.653 1775.55,685.172 1776.11,699.564 1776.67,713.445 1777.23,681.644 1777.79,680.228 1778.35,679.645 1778.91,677.115 1779.47,664.756 1780.03,663.453 1780.59,664.933 1781.15,684.58 1781.71,717.611 1782.26,730.046 1782.82,742.873 1783.38,738.364 1783.94,785.958 1784.5,761.839 1785.06,776.127 1785.62,757.854 1786.18,755.193 1786.74,736.936 1787.3,749.847 1787.86,763.488 1788.42,772.766 1788.98,761.111 1789.53,690.811 1790.09,688.606 1790.65,706.281 1791.21,688.946 1791.77,707.141 1792.33,723.822 1792.89,722.245 1793.45,736.755 1794.01,733.955 1794.57,697.829 1795.13,680.788 1795.69,697.146 1796.25,711.362 1796.8,726.164 1797.36,724.364 1797.92,726.416 1798.48,675.302 1799.04,662.897 1799.6,645.552 1800.16,677.73 1800.72,674.314 1801.28,660.367 1801.84,662.313 1802.4,630.908 1802.96,600.438 1803.52,590.387 1804.08,580.113 1804.63,569.783 1805.19,607.769 1805.75,613.104 1806.31,617.138 1806.87,638.395 1807.43,656.181 1807.99,658.965 1808.55,645.377 1809.11,635.199 1809.67,640.387 1810.23,660.955 1810.79,698.871 1811.35,698.422 1811.9,665.712 1812.46,683.096 1813.02,665.413 1813.58,663.814 1814.14,667.533 1814.7,683.262 1815.26,700.501 1815.82,731.499 1816.38,696.623 1816.94,697.731 1817.5,715.05 1818.06,697.215 1818.62,710.509 1819.18,707.217 1819.73,707.467 1820.29,739.917 1820.85,735.681 1821.41,736.636 1821.97,721.788 1822.53,719.674 1823.09,716.808 1823.65,720.555 1824.21,717.981 1824.77,715.282 1825.33,712.688 1825.89,773.409 1826.45,801.05 1827,777.022 1827.56,785.902 1828.12,749.322 1828.68,748.52 1829.24,750.096 1829.8,746.542 1830.36,761.017 1830.92,737.425 1831.48,702.87 1832.04,674.921 1832.6,678.613 1833.16,680.906 1833.72,679.876 1834.27,712.305 1834.83,726.539 1835.39,773.362 1835.95,720.887 1836.51,735.458 1837.07,715.125 1837.63,711.719 1838.19,706.353 \"/>\n<path clip-path=\"url(#clip123)\" d=\"M720.247 690.95 L720.806 690.95 L721.365 690.95 L721.924 690.95 L722.484 690.95 L723.043 690.95 L723.602 690.95 L724.161 690.95 L724.721 690.95 L725.28 690.95 L725.839 690.95 L726.398 690.95 L726.958 690.95 L727.517 690.95 L728.076 690.95 L728.635 690.95 L729.195 690.95 L729.754 690.95 L730.313 690.95 L730.872 690.95 L731.432 690.95 L731.991 690.95 L732.55 690.95 L733.109 690.95 L733.669 690.95 L734.228 690.95 L734.787 690.95 L735.346 690.95 L735.906 690.95 L736.465 690.95 L737.024 690.95 L737.583 690.95 L738.143 690.95 L738.702 690.95 L739.261 690.95 L739.82 690.95 L740.38 690.95 L740.939 690.95 L741.498 690.95 L742.057 690.95 L742.617 690.95 L743.176 690.95 L743.735 690.95 L744.294 690.95 L744.854 690.95 L745.413 690.95 L745.972 690.95 L746.531 690.95 L747.091 690.95 L747.65 690.95 L748.209 690.95 L748.768 690.95 L749.328 690.95 L749.887 690.95 L750.446 690.95 L751.005 690.95 L751.565 690.95 L752.124 690.95 L752.683 690.95 L753.242 690.95 L753.802 690.95 L754.361 690.95 L754.92 690.95 L755.479 690.95 L756.039 690.95 L756.598 690.95 L757.157 690.95 L757.716 690.95 L758.276 690.95 L758.835 690.95 L759.394 690.95 L759.953 690.95 L760.513 690.95 L761.072 690.95 L761.631 690.95 L762.19 690.95 L762.75 690.95 L763.309 690.95 L763.868 690.95 L764.427 690.95 L764.987 690.95 L765.546 690.95 L766.105 690.95 L766.664 690.95 L767.224 690.95 L767.783 690.95 L768.342 690.95 L768.901 690.95 L769.461 690.95 L770.02 690.95 L770.579 690.95 L771.138 690.95 L771.698 690.95 L772.257 690.95 L772.816 690.95 L773.375 690.95 L773.935 690.95 L774.494 690.95 L775.053 690.95 L775.612 690.95 L776.172 690.95 L776.731 690.95 L777.29 690.95 L777.849 690.95 L778.409 690.95 L778.968 690.95 L779.527 690.95 L780.086 690.95 L780.646 690.95 L781.205 690.95 L781.764 690.95 L782.323 690.95 L782.883 690.95 L783.442 690.95 L784.001 690.95 L784.56 690.95 L785.12 690.95 L785.679 690.95 L786.238 690.95 L786.797 690.95 L787.357 690.95 L787.916 690.95 L788.475 690.95 L789.034 690.95 L789.594 690.95 L790.153 690.95 L790.712 690.95 L791.271 690.95 L791.831 690.95 L792.39 690.95 L792.949 690.95 L793.508 690.95 L794.068 690.95 L794.627 690.95 L795.186 690.95 L795.745 690.95 L796.305 690.95 L796.864 690.95 L797.423 690.95 L797.982 690.95 L798.542 690.95 L799.101 690.95 L799.66 690.95 L800.219 690.95 L800.779 690.95 L801.338 690.95 L801.897 690.95 L802.456 690.95 L803.016 690.95 L803.575 690.95 L804.134 690.95 L804.693 690.95 L805.253 690.95 L805.812 690.95 L806.371 690.95 L806.931 690.95 L807.49 690.95 L808.049 690.95 L808.608 690.95 L809.168 690.95 L809.727 690.95 L810.286 690.95 L810.845 690.95 L811.405 690.95 L811.964 690.95 L812.523 690.95 L813.082 690.95 L813.642 690.95 L814.201 690.95 L814.76 690.95 L815.319 690.95 L815.879 690.95 L816.438 690.95 L816.997 690.95 L817.556 690.95 L818.116 690.95 L818.675 690.95 L819.234 690.95 L819.793 690.95 L820.353 690.95 L820.912 690.95 L821.471 690.95 L822.03 690.95 L822.59 690.95 L823.149 690.95 L823.708 690.95 L824.267 690.95 L824.827 690.95 L825.386 690.95 L825.945 690.95 L826.504 690.95 L827.064 690.95 L827.623 690.95 L828.182 690.95 L828.741 690.95 L829.301 690.95 L829.86 690.95 L830.419 690.95 L830.978 690.95 L831.538 690.95 L832.097 690.95 L832.656 690.95 L833.215 690.95 L833.775 690.95 L834.334 690.95 L834.893 690.95 L835.452 690.95 L836.012 690.95 L836.571 690.95 L837.13 690.95 L837.689 690.95 L838.249 690.95 L838.808 690.95 L839.367 690.95 L839.926 690.95 L840.486 690.95 L841.045 690.95 L841.604 690.95 L842.163 690.95 L842.723 690.95 L843.282 690.95 L843.841 690.95 L844.4 690.95 L844.96 690.95 L845.519 690.95 L846.078 690.95 L846.637 690.95 L847.197 690.95 L847.756 690.95 L848.315 690.95 L848.874 690.95 L849.434 690.95 L849.993 690.95 L850.552 690.95 L851.111 690.95 L851.671 690.95 L852.23 690.95 L852.789 690.95 L853.348 690.95 L853.908 690.95 L854.467 690.95 L855.026 690.95 L855.585 690.95 L856.145 690.95 L856.704 690.95 L857.263 690.95 L857.822 690.95 L858.382 690.95 L858.941 690.95 L859.5 690.95 L860.059 690.95 L860.619 690.95 L861.178 690.95 L861.737 690.95 L862.296 690.95 L862.856 690.95 L863.415 690.95 L863.974 690.95 L864.533 690.95 L865.093 690.95 L865.652 690.95 L866.211 690.95 L866.77 690.95 L867.33 690.95 L867.889 690.95 L868.448 690.95 L869.007 690.95 L869.567 690.95 L870.126 690.95 L870.685 690.95 L871.244 690.95 L871.804 690.95 L872.363 690.95 L872.922 690.95 L873.481 690.95 L874.041 690.95 L874.6 690.95 L875.159 690.95 L875.718 690.95 L876.278 690.95 L876.837 690.95 L877.396 690.95 L877.955 690.95 L878.515 690.95 L879.074 690.95 L879.633 690.95 L880.192 690.95 L880.752 690.95 L881.311 690.95 L881.87 690.95 L882.429 690.95 L882.989 690.95 L883.548 690.95 L884.107 690.95 L884.666 690.95 L885.226 690.95 L885.785 690.95 L886.344 690.95 L886.903 690.95 L887.463 690.95 L888.022 690.95 L888.581 690.95 L889.14 690.95 L889.7 690.95 L890.259 690.95 L890.818 690.95 L891.377 690.95 L891.937 690.95 L892.496 690.95 L893.055 690.95 L893.614 690.95 L894.174 690.95 L894.733 690.95 L895.292 690.95 L895.851 690.95 L896.411 690.95 L896.97 690.95 L897.529 690.95 L898.088 690.95 L898.648 690.95 L899.207 690.95 L899.766 690.95 L900.325 690.95 L900.885 690.95 L901.444 690.95 L902.003 690.95 L902.562 690.95 L903.122 690.95 L903.681 690.95 L904.24 690.95 L904.799 690.95 L905.359 690.95 L905.918 690.95 L906.477 690.95 L907.036 690.95 L907.596 690.95 L908.155 690.95 L908.714 690.95 L909.273 690.95 L909.833 690.95 L910.392 690.95 L910.951 690.95 L911.51 690.95 L912.07 690.95 L912.629 690.95 L913.188 690.95 L913.747 690.95 L914.307 690.95 L914.866 690.95 L915.425 690.95 L915.984 690.95 L916.544 690.95 L917.103 690.95 L917.662 690.95 L918.221 690.95 L918.781 690.95 L919.34 690.95 L919.899 690.95 L920.458 690.95 L921.018 690.95 L921.577 690.95 L922.136 690.95 L922.695 690.95 L923.255 690.95 L923.814 690.95 L924.373 690.95 L924.932 690.95 L925.492 690.95 L926.051 690.95 L926.61 690.95 L927.169 690.95 L927.729 690.95 L928.288 690.95 L928.847 690.95 L929.406 690.95 L929.966 690.95 L930.525 690.95 L931.084 690.95 L931.644 690.95 L932.203 690.95 L932.762 690.95 L933.321 690.95 L933.881 690.95 L934.44 690.95 L934.999 690.95 L935.558 690.95 L936.118 690.95 L936.677 690.95 L937.236 690.95 L937.795 690.95 L938.355 690.95 L938.914 690.95 L939.473 690.95 L940.032 690.95 L940.592 690.95 L941.151 690.95 L941.71 690.95 L942.269 690.95 L942.829 690.95 L943.388 690.95 L943.947 690.95 L944.506 690.95 L945.066 690.95 L945.625 690.95 L946.184 690.95 L946.743 690.95 L947.303 690.95 L947.862 690.95 L948.421 690.95 L948.98 690.95 L949.54 690.95 L950.099 690.95 L950.658 690.95 L951.217 690.95 L951.777 690.95 L952.336 690.95 L952.895 690.95 L953.454 690.95 L954.014 690.95 L954.573 690.95 L955.132 690.95 L955.691 690.95 L956.251 690.95 L956.81 690.95 L957.369 690.95 L957.928 690.95 L958.488 690.95 L959.047 690.95 L959.606 690.95 L960.165 690.95 L960.725 690.95 L961.284 690.95 L961.843 690.95 L962.402 690.95 L962.962 690.95 L963.521 690.95 L964.08 690.95 L964.639 690.95 L965.199 690.95 L965.758 690.95 L966.317 690.95 L966.876 690.95 L967.436 690.95 L967.995 690.95 L968.554 690.95 L969.113 690.95 L969.673 690.95 L970.232 690.95 L970.791 690.95 L971.35 690.95 L971.91 690.95 L972.469 690.95 L973.028 690.95 L973.587 690.95 L974.147 690.95 L974.706 690.95 L975.265 690.95 L975.824 690.95 L976.384 690.95 L976.943 690.95 L977.502 690.95 L978.061 690.95 L978.621 690.95 L979.18 690.95 L979.739 690.95 L980.298 690.95 L980.858 690.95 L981.417 690.95 L981.976 690.95 L982.535 690.95 L983.095 690.95 L983.654 690.95 L984.213 690.95 L984.772 690.95 L985.332 690.95 L985.891 690.95 L986.45 690.95 L987.009 690.95 L987.569 690.95 L988.128 690.95 L988.687 690.95 L989.246 690.95 L989.806 690.95 L990.365 690.95 L990.924 690.95 L991.483 690.95 L992.043 690.95 L992.602 690.95 L993.161 690.95 L993.72 690.95 L994.28 690.95 L994.839 690.95 L995.398 690.95 L995.957 690.95 L996.517 690.95 L997.076 690.95 L997.635 690.95 L998.194 690.95 L998.754 690.95 L999.313 690.95 L999.872 690.95 L1000.43 690.95 L1000.99 690.95 L1001.55 690.95 L1002.11 690.95 L1002.67 690.95 L1003.23 690.95 L1003.79 690.95 L1004.35 690.95 L1004.91 690.95 L1005.46 690.95 L1006.02 690.95 L1006.58 690.95 L1007.14 690.95 L1007.7 690.95 L1008.26 690.95 L1008.82 690.95 L1009.38 690.95 L1009.94 690.95 L1010.5 690.95 L1011.06 690.95 L1011.62 690.95 L1012.18 690.95 L1012.73 690.95 L1013.29 690.95 L1013.85 690.95 L1014.41 690.95 L1014.97 690.95 L1015.53 690.95 L1016.09 690.95 L1016.65 690.95 L1017.21 690.95 L1017.77 690.95 L1018.33 690.95 L1018.89 690.95 L1019.45 690.95 L1020.01 690.95 L1020.56 690.95 L1021.12 690.95 L1021.68 690.95 L1022.24 690.95 L1022.8 690.95 L1023.36 690.95 L1023.92 690.95 L1024.48 690.95 L1025.04 690.95 L1025.6 690.95 L1026.16 690.95 L1026.72 690.95 L1027.28 690.95 L1027.83 690.95 L1028.39 690.95 L1028.95 690.95 L1029.51 690.95 L1030.07 690.95 L1030.63 690.95 L1031.19 690.95 L1031.75 690.95 L1032.31 690.95 L1032.87 690.95 L1033.43 690.95 L1033.99 690.95 L1034.55 690.95 L1035.1 690.95 L1035.66 690.95 L1036.22 690.95 L1036.78 690.95 L1037.34 690.95 L1037.9 690.95 L1038.46 690.95 L1039.02 690.95 L1039.58 690.95 L1040.14 690.95 L1040.7 690.95 L1041.26 690.95 L1041.82 690.95 L1042.38 690.95 L1042.93 690.95 L1043.49 690.95 L1044.05 690.95 L1044.61 690.95 L1045.17 690.95 L1045.73 690.95 L1046.29 690.95 L1046.85 690.95 L1047.41 690.95 L1047.97 690.95 L1048.53 690.95 L1049.09 690.95 L1049.65 690.95 L1050.2 690.95 L1050.76 690.95 L1051.32 690.95 L1051.88 690.95 L1052.44 690.95 L1053 690.95 L1053.56 690.95 L1054.12 690.95 L1054.68 690.95 L1055.24 690.95 L1055.8 690.95 L1056.36 690.95 L1056.92 690.95 L1057.48 690.95 L1058.03 690.95 L1058.59 690.95 L1059.15 690.95 L1059.71 690.95 L1060.27 690.95 L1060.83 690.95 L1061.39 690.95 L1061.95 690.95 L1062.51 690.95 L1063.07 690.95 L1063.63 690.95 L1064.19 690.95 L1064.75 690.95 L1065.3 690.95 L1065.86 690.95 L1066.42 690.95 L1066.98 690.95 L1067.54 690.95 L1068.1 690.95 L1068.66 690.95 L1069.22 690.95 L1069.78 690.95 L1070.34 690.95 L1070.9 690.95 L1071.46 690.95 L1072.02 690.95 L1072.57 690.95 L1073.13 690.95 L1073.69 690.95 L1074.25 690.95 L1074.81 690.95 L1075.37 690.95 L1075.93 690.95 L1076.49 690.95 L1077.05 690.95 L1077.61 690.95 L1078.17 690.95 L1078.73 690.95 L1079.29 690.95 L1079.85 690.95 L1080.4 690.95 L1080.96 690.95 L1081.52 690.95 L1082.08 690.95 L1082.64 690.95 L1083.2 690.95 L1083.76 690.95 L1084.32 690.95 L1084.88 690.95 L1085.44 690.95 L1086 690.95 L1086.56 690.95 L1087.12 690.95 L1087.67 690.95 L1088.23 690.95 L1088.79 690.95 L1089.35 690.95 L1089.91 690.95 L1090.47 690.95 L1091.03 690.95 L1091.59 690.95 L1092.15 690.95 L1092.71 690.95 L1093.27 690.95 L1093.83 690.95 L1094.39 690.95 L1094.94 690.95 L1095.5 690.95 L1096.06 690.95 L1096.62 690.95 L1097.18 690.95 L1097.74 690.95 L1098.3 690.95 L1098.86 690.95 L1099.42 690.95 L1099.98 690.95 L1100.54 690.95 L1101.1 690.95 L1101.66 690.95 L1102.22 690.95 L1102.77 690.95 L1103.33 690.95 L1103.89 690.95 L1104.45 690.95 L1105.01 690.95 L1105.57 690.95 L1106.13 690.95 L1106.69 690.95 L1107.25 690.95 L1107.81 690.95 L1108.37 690.95 L1108.93 690.95 L1109.49 690.95 L1110.04 690.95 L1110.6 690.95 L1111.16 690.95 L1111.72 690.95 L1112.28 690.95 L1112.84 690.95 L1113.4 690.95 L1113.96 690.95 L1114.52 690.95 L1115.08 690.95 L1115.64 690.95 L1116.2 690.95 L1116.76 690.95 L1117.31 690.95 L1117.87 690.95 L1118.43 690.95 L1118.99 690.95 L1119.55 690.95 L1120.11 690.95 L1120.67 690.95 L1121.23 690.95 L1121.79 690.95 L1122.35 690.95 L1122.91 690.95 L1123.47 690.95 L1124.03 690.95 L1124.59 690.95 L1125.14 690.95 L1125.7 690.95 L1126.26 690.95 L1126.82 690.95 L1127.38 690.95 L1127.94 690.95 L1128.5 690.95 L1129.06 690.95 L1129.62 690.95 L1130.18 690.95 L1130.74 690.95 L1131.3 690.95 L1131.86 690.95 L1132.41 690.95 L1132.97 690.95 L1133.53 690.95 L1134.09 690.95 L1134.65 690.95 L1135.21 690.95 L1135.77 690.95 L1136.33 690.95 L1136.89 690.95 L1137.45 690.95 L1138.01 690.95 L1138.57 690.95 L1139.13 690.95 L1139.68 690.95 L1140.24 690.95 L1140.8 690.95 L1141.36 690.95 L1141.92 690.95 L1142.48 690.95 L1143.04 690.95 L1143.6 690.95 L1144.16 690.95 L1144.72 690.95 L1145.28 690.95 L1145.84 690.95 L1146.4 690.95 L1146.96 690.95 L1147.51 690.95 L1148.07 690.95 L1148.63 690.95 L1149.19 690.95 L1149.75 690.95 L1150.31 690.95 L1150.87 690.95 L1151.43 690.95 L1151.99 690.95 L1152.55 690.95 L1153.11 690.95 L1153.67 690.95 L1154.23 690.95 L1154.78 690.95 L1155.34 690.95 L1155.9 690.95 L1156.46 690.95 L1157.02 690.95 L1157.58 690.95 L1158.14 690.95 L1158.7 690.95 L1159.26 690.95 L1159.82 690.95 L1160.38 690.95 L1160.94 690.95 L1161.5 690.95 L1162.05 690.95 L1162.61 690.95 L1163.17 690.95 L1163.73 690.95 L1164.29 690.95 L1164.85 690.95 L1165.41 690.95 L1165.97 690.95 L1166.53 690.95 L1167.09 690.95 L1167.65 690.95 L1168.21 690.95 L1168.77 690.95 L1169.33 690.95 L1169.88 690.95 L1170.44 690.95 L1171 690.95 L1171.56 690.95 L1172.12 690.95 L1172.68 690.95 L1173.24 690.95 L1173.8 690.95 L1174.36 690.95 L1174.92 690.95 L1175.48 690.95 L1176.04 690.95 L1176.6 690.95 L1177.15 690.95 L1177.71 690.95 L1178.27 690.95 L1178.83 690.95 L1179.39 690.95 L1179.95 690.95 L1180.51 690.95 L1181.07 690.95 L1181.63 690.95 L1182.19 690.95 L1182.75 690.95 L1183.31 690.95 L1183.87 690.95 L1184.43 690.95 L1184.98 690.95 L1185.54 690.95 L1186.1 690.95 L1186.66 690.95 L1187.22 690.95 L1187.78 690.95 L1188.34 690.95 L1188.9 690.95 L1189.46 690.95 L1190.02 690.95 L1190.58 690.95 L1191.14 690.95 L1191.7 690.95 L1192.25 690.95 L1192.81 690.95 L1193.37 690.95 L1193.93 690.95 L1194.49 690.95 L1195.05 690.95 L1195.61 690.95 L1196.17 690.95 L1196.73 690.95 L1197.29 690.95 L1197.85 690.95 L1198.41 690.95 L1198.97 690.95 L1199.52 690.95 L1200.08 690.95 L1200.64 690.95 L1201.2 690.95 L1201.76 690.95 L1202.32 690.95 L1202.88 690.95 L1203.44 690.95 L1204 690.95 L1204.56 690.95 L1205.12 690.95 L1205.68 690.95 L1206.24 690.95 L1206.8 690.95 L1207.35 690.95 L1207.91 690.95 L1208.47 690.95 L1209.03 690.95 L1209.59 690.95 L1210.15 690.95 L1210.71 690.95 L1211.27 690.95 L1211.83 690.95 L1212.39 690.95 L1212.95 690.95 L1213.51 690.95 L1214.07 690.95 L1214.62 690.95 L1215.18 690.95 L1215.74 690.95 L1216.3 690.95 L1216.86 690.95 L1217.42 690.95 L1217.98 690.95 L1218.54 690.95 L1219.1 690.95 L1219.66 690.95 L1220.22 690.95 L1220.78 690.95 L1221.34 690.95 L1221.89 690.95 L1222.45 690.95 L1223.01 690.95 L1223.57 690.95 L1224.13 690.95 L1224.69 690.95 L1225.25 690.95 L1225.81 690.95 L1226.37 690.95 L1226.93 690.95 L1227.49 690.95 L1228.05 690.95 L1228.61 690.95 L1229.17 690.95 L1229.72 690.95 L1230.28 690.95 L1230.84 690.95 L1231.4 690.95 L1231.96 690.95 L1232.52 690.95 L1233.08 690.95 L1233.64 690.95 L1234.2 690.95 L1234.76 690.95 L1235.32 690.95 L1235.88 690.95 L1236.44 690.95 L1236.99 690.95 L1237.55 690.95 L1238.11 690.95 L1238.67 690.95 L1239.23 690.95 L1239.79 690.95 L1240.35 690.95 L1240.91 690.95 L1241.47 690.95 L1242.03 690.95 L1242.59 690.95 L1243.15 690.95 L1243.71 690.95 L1244.26 690.95 L1244.82 690.95 L1245.38 690.95 L1245.94 690.95 L1246.5 690.95 L1247.06 690.95 L1247.62 690.95 L1248.18 690.95 L1248.74 690.95 L1249.3 690.95 L1249.86 690.95 L1250.42 690.95 L1250.98 690.95 L1251.54 690.95 L1252.09 690.95 L1252.65 690.95 L1253.21 690.95 L1253.77 690.95 L1254.33 690.95 L1254.89 690.95 L1255.45 690.95 L1256.01 690.95 L1256.57 690.95 L1257.13 690.95 L1257.69 690.95 L1258.25 690.95 L1258.81 690.95 L1259.36 690.95 L1259.92 690.95 L1260.48 690.95 L1261.04 690.95 L1261.6 690.95 L1262.16 690.95 L1262.72 690.95 L1263.28 690.95 L1263.84 690.95 L1264.4 690.95 L1264.96 690.95 L1265.52 690.95 L1266.08 690.95 L1266.63 690.95 L1267.19 690.95 L1267.75 690.95 L1268.31 690.95 L1268.87 690.95 L1269.43 690.95 L1269.99 690.95 L1270.55 690.95 L1271.11 690.95 L1271.67 690.95 L1272.23 690.95 L1272.79 690.95 L1273.35 690.95 L1273.91 690.95 L1274.46 690.95 L1275.02 690.95 L1275.58 690.95 L1276.14 690.95 L1276.7 690.95 L1277.26 690.95 L1277.82 690.95 L1278.38 690.95 L1278.94 690.95 L1279.5 690.95 L1280.06 690.95 L1280.62 690.95 L1281.18 690.95 L1281.73 690.95 L1282.29 690.95 L1282.85 690.95 L1283.41 690.95 L1283.97 690.95 L1284.53 690.95 L1285.09 690.95 L1285.65 690.95 L1286.21 690.95 L1286.77 690.95 L1287.33 690.95 L1287.89 690.95 L1288.45 690.95 L1289 690.95 L1289.56 690.95 L1290.12 690.95 L1290.68 690.95 L1291.24 690.95 L1291.8 690.95 L1292.36 690.95 L1292.92 690.95 L1293.48 690.95 L1294.04 690.95 L1294.6 690.95 L1295.16 690.95 L1295.72 690.95 L1296.28 690.95 L1296.83 690.95 L1297.39 690.95 L1297.95 690.95 L1298.51 690.95 L1299.07 690.95 L1299.63 690.95 L1300.19 690.95 L1300.75 690.95 L1301.31 690.95 L1301.87 690.95 L1302.43 690.95 L1302.99 690.95 L1303.55 690.95 L1304.1 690.95 L1304.66 690.95 L1305.22 690.95 L1305.78 690.95 L1306.34 690.95 L1306.9 690.95 L1307.46 690.95 L1308.02 690.95 L1308.58 690.95 L1309.14 690.95 L1309.7 690.95 L1310.26 690.95 L1310.82 690.95 L1311.38 690.95 L1311.93 690.95 L1312.49 690.95 L1313.05 690.95 L1313.61 690.95 L1314.17 690.95 L1314.73 690.95 L1315.29 690.95 L1315.85 690.95 L1316.41 690.95 L1316.97 690.95 L1317.53 690.95 L1318.09 690.95 L1318.65 690.95 L1319.2 690.95 L1319.76 690.95 L1320.32 690.95 L1320.88 690.95 L1321.44 690.95 L1322 690.95 L1322.56 690.95 L1323.12 690.95 L1323.68 690.95 L1324.24 690.95 L1324.8 690.95 L1325.36 690.95 L1325.92 690.95 L1326.47 690.95 L1327.03 690.95 L1327.59 690.95 L1328.15 690.95 L1328.71 690.95 L1329.27 690.95 L1329.83 690.95 L1330.39 690.95 L1330.95 690.95 L1331.51 690.95 L1332.07 690.95 L1332.63 690.95 L1333.19 690.95 L1333.75 690.95 L1334.3 690.95 L1334.86 690.95 L1335.42 690.95 L1335.98 690.95 L1336.54 690.95 L1337.1 690.95 L1337.66 690.95 L1338.22 690.95 L1338.78 690.95 L1339.34 690.95 L1339.9 690.95 L1340.46 690.95 L1341.02 690.95 L1341.57 690.95 L1342.13 690.95 L1342.69 690.95 L1343.25 690.95 L1343.81 690.95 L1344.37 690.95 L1344.93 690.95 L1345.49 690.95 L1346.05 690.95 L1346.61 690.95 L1347.17 690.95 L1347.73 690.95 L1348.29 690.95 L1348.84 690.95 L1349.4 690.95 L1349.96 690.95 L1350.52 690.95 L1351.08 690.95 L1351.64 690.95 L1352.2 690.95 L1352.76 690.95 L1353.32 690.95 L1353.88 690.95 L1354.44 690.95 L1355 690.95 L1355.56 690.95 L1356.12 690.95 L1356.67 690.95 L1357.23 690.95 L1357.79 690.95 L1358.35 690.95 L1358.91 690.95 L1359.47 690.95 L1360.03 690.95 L1360.59 690.95 L1361.15 690.95 L1361.71 690.95 L1362.27 690.95 L1362.83 690.95 L1363.39 690.95 L1363.94 690.95 L1364.5 690.95 L1365.06 690.95 L1365.62 690.95 L1366.18 690.95 L1366.74 690.95 L1367.3 690.95 L1367.86 690.95 L1368.42 690.95 L1368.98 690.95 L1369.54 690.95 L1370.1 690.95 L1370.66 690.95 L1371.21 690.95 L1371.77 690.95 L1372.33 690.95 L1372.89 690.95 L1373.45 690.95 L1374.01 690.95 L1374.57 690.95 L1375.13 690.95 L1375.69 690.95 L1376.25 690.95 L1376.81 690.95 L1377.37 690.95 L1377.93 690.95 L1378.49 690.95 L1379.04 690.95 L1379.6 690.95 L1380.16 690.95 L1380.72 690.95 L1381.28 690.95 L1381.84 690.95 L1382.4 690.95 L1382.96 690.95 L1383.52 690.95 L1384.08 690.95 L1384.64 690.95 L1385.2 690.95 L1385.76 690.95 L1386.31 690.95 L1386.87 690.95 L1387.43 690.95 L1387.99 690.95 L1388.55 690.95 L1389.11 690.95 L1389.67 690.95 L1390.23 690.95 L1390.79 690.95 L1391.35 690.95 L1391.91 690.95 L1392.47 690.95 L1393.03 690.95 L1393.58 690.95 L1394.14 690.95 L1394.7 690.95 L1395.26 690.95 L1395.82 690.95 L1396.38 690.95 L1396.94 690.95 L1397.5 690.95 L1398.06 690.95 L1398.62 690.95 L1399.18 690.95 L1399.74 690.95 L1400.3 690.95 L1400.86 690.95 L1401.41 690.95 L1401.97 690.95 L1402.53 690.95 L1403.09 690.95 L1403.65 690.95 L1404.21 690.95 L1404.77 690.95 L1405.33 690.95 L1405.89 690.95 L1406.45 690.95 L1407.01 690.95 L1407.57 690.95 L1408.13 690.95 L1408.68 690.95 L1409.24 690.95 L1409.8 690.95 L1410.36 690.95 L1410.92 690.95 L1411.48 690.95 L1412.04 690.95 L1412.6 690.95 L1413.16 690.95 L1413.72 690.95 L1414.28 690.95 L1414.84 690.95 L1415.4 690.95 L1415.95 690.95 L1416.51 690.95 L1417.07 690.95 L1417.63 690.95 L1418.19 690.95 L1418.75 690.95 L1419.31 690.95 L1419.87 690.95 L1420.43 690.95 L1420.99 690.95 L1421.55 690.95 L1422.11 690.95 L1422.67 690.95 L1423.23 690.95 L1423.78 690.95 L1424.34 690.95 L1424.9 690.95 L1425.46 690.95 L1426.02 690.95 L1426.58 690.95 L1427.14 690.95 L1427.7 690.95 L1428.26 690.95 L1428.82 690.95 L1429.38 690.95 L1429.94 690.95 L1430.5 690.95 L1431.05 690.95 L1431.61 690.95 L1432.17 690.95 L1432.73 690.95 L1433.29 690.95 L1433.85 690.95 L1434.41 690.95 L1434.97 690.95 L1435.53 690.95 L1436.09 690.95 L1436.65 690.95 L1437.21 690.95 L1437.77 690.95 L1438.33 690.95 L1438.88 690.95 L1439.44 690.95 L1440 690.95 L1440.56 690.95 L1441.12 690.95 L1441.68 690.95 L1442.24 690.95 L1442.8 690.95 L1443.36 690.95 L1443.92 690.95 L1444.48 690.95 L1445.04 690.95 L1445.6 690.95 L1446.15 690.95 L1446.71 690.95 L1447.27 690.95 L1447.83 690.95 L1448.39 690.95 L1448.95 690.95 L1449.51 690.95 L1450.07 690.95 L1450.63 690.95 L1451.19 690.95 L1451.75 690.95 L1452.31 690.95 L1452.87 690.95 L1453.42 690.95 L1453.98 690.95 L1454.54 690.95 L1455.1 690.95 L1455.66 690.95 L1456.22 690.95 L1456.78 690.95 L1457.34 690.95 L1457.9 690.95 L1458.46 690.95 L1459.02 690.95 L1459.58 690.95 L1460.14 690.95 L1460.7 690.95 L1461.25 690.95 L1461.81 690.95 L1462.37 690.95 L1462.93 690.95 L1463.49 690.95 L1464.05 690.95 L1464.61 690.95 L1465.17 690.95 L1465.73 690.95 L1466.29 690.95 L1466.85 690.95 L1467.41 690.95 L1467.97 690.95 L1468.52 690.95 L1469.08 690.95 L1469.64 690.95 L1470.2 690.95 L1470.76 690.95 L1471.32 690.95 L1471.88 690.95 L1472.44 690.95 L1473 690.95 L1473.56 690.95 L1474.12 690.95 L1474.68 690.95 L1475.24 690.95 L1475.79 690.95 L1476.35 690.95 L1476.91 690.95 L1477.47 690.95 L1478.03 690.95 L1478.59 690.95 L1479.15 690.95 L1479.71 690.95 L1480.27 690.95 L1480.83 690.95 L1481.39 690.95 L1481.95 690.95 L1482.51 690.95 L1483.07 690.95 L1483.62 690.95 L1484.18 690.95 L1484.74 690.95 L1485.3 690.95 L1485.86 690.95 L1486.42 690.95 L1486.98 690.95 L1487.54 690.95 L1488.1 690.95 L1488.66 690.95 L1489.22 690.95 L1489.78 690.95 L1490.34 690.95 L1490.89 690.95 L1491.45 690.95 L1492.01 690.95 L1492.57 690.95 L1493.13 690.95 L1493.69 690.95 L1494.25 690.95 L1494.81 690.95 L1495.37 690.95 L1495.93 690.95 L1496.49 690.95 L1497.05 690.95 L1497.61 690.95 L1498.16 690.95 L1498.72 690.95 L1499.28 690.95 L1499.84 690.95 L1500.4 690.95 L1500.96 690.95 L1501.52 690.95 L1502.08 690.95 L1502.64 690.95 L1503.2 690.95 L1503.76 690.95 L1504.32 690.95 L1504.88 690.95 L1505.44 690.95 L1505.99 690.95 L1506.55 690.95 L1507.11 690.95 L1507.67 690.95 L1508.23 690.95 L1508.79 690.95 L1509.35 690.95 L1509.91 690.95 L1510.47 690.95 L1511.03 690.95 L1511.59 690.95 L1512.15 690.95 L1512.71 690.95 L1513.26 690.95 L1513.82 690.95 L1514.38 690.95 L1514.94 690.95 L1515.5 690.95 L1516.06 690.95 L1516.62 690.95 L1517.18 690.95 L1517.74 690.95 L1518.3 690.95 L1518.86 690.95 L1519.42 690.95 L1519.98 690.95 L1520.53 690.95 L1521.09 690.95 L1521.65 690.95 L1522.21 690.95 L1522.77 690.95 L1523.33 690.95 L1523.89 690.95 L1524.45 690.95 L1525.01 690.95 L1525.57 690.95 L1526.13 690.95 L1526.69 690.95 L1527.25 690.95 L1527.81 690.95 L1528.36 690.95 L1528.92 690.95 L1529.48 690.95 L1530.04 690.95 L1530.6 690.95 L1531.16 690.95 L1531.72 690.95 L1532.28 690.95 L1532.84 690.95 L1533.4 690.95 L1533.96 690.95 L1534.52 690.95 L1535.08 690.95 L1535.63 690.95 L1536.19 690.95 L1536.75 690.95 L1537.31 690.95 L1537.87 690.95 L1538.43 690.95 L1538.99 690.95 L1539.55 690.95 L1540.11 690.95 L1540.67 690.95 L1541.23 690.95 L1541.79 690.95 L1542.35 690.95 L1542.9 690.95 L1543.46 690.95 L1544.02 690.95 L1544.58 690.95 L1545.14 690.95 L1545.7 690.95 L1546.26 690.95 L1546.82 690.95 L1547.38 690.95 L1547.94 690.95 L1548.5 690.95 L1549.06 690.95 L1549.62 690.95 L1550.18 690.95 L1550.73 690.95 L1551.29 690.95 L1551.85 690.95 L1552.41 690.95 L1552.97 690.95 L1553.53 690.95 L1554.09 690.95 L1554.65 690.95 L1555.21 690.95 L1555.77 690.95 L1556.33 690.95 L1556.89 690.95 L1557.45 690.95 L1558 690.95 L1558.56 690.95 L1559.12 690.95 L1559.68 690.95 L1560.24 690.95 L1560.8 690.95 L1561.36 690.95 L1561.92 690.95 L1562.48 690.95 L1563.04 690.95 L1563.6 690.95 L1564.16 690.95 L1564.72 690.95 L1565.28 690.95 L1565.83 690.95 L1566.39 690.95 L1566.95 690.95 L1567.51 690.95 L1568.07 690.95 L1568.63 690.95 L1569.19 690.95 L1569.75 690.95 L1570.31 690.95 L1570.87 690.95 L1571.43 690.95 L1571.99 690.95 L1572.55 690.95 L1573.1 690.95 L1573.66 690.95 L1574.22 690.95 L1574.78 690.95 L1575.34 690.95 L1575.9 690.95 L1576.46 690.95 L1577.02 690.95 L1577.58 690.95 L1578.14 690.95 L1578.7 690.95 L1579.26 690.95 L1579.82 690.95 L1580.37 690.95 L1580.93 690.95 L1581.49 690.95 L1582.05 690.95 L1582.61 690.95 L1583.17 690.95 L1583.73 690.95 L1584.29 690.95 L1584.85 690.95 L1585.41 690.95 L1585.97 690.95 L1586.53 690.95 L1587.09 690.95 L1587.65 690.95 L1588.2 690.95 L1588.76 690.95 L1589.32 690.95 L1589.88 690.95 L1590.44 690.95 L1591 690.95 L1591.56 690.95 L1592.12 690.95 L1592.68 690.95 L1593.24 690.95 L1593.8 690.95 L1594.36 690.95 L1594.92 690.95 L1595.47 690.95 L1596.03 690.95 L1596.59 690.95 L1597.15 690.95 L1597.71 690.95 L1598.27 690.95 L1598.83 690.95 L1599.39 690.95 L1599.95 690.95 L1600.51 690.95 L1601.07 690.95 L1601.63 690.95 L1602.19 690.95 L1602.74 690.95 L1603.3 690.95 L1603.86 690.95 L1604.42 690.95 L1604.98 690.95 L1605.54 690.95 L1606.1 690.95 L1606.66 690.95 L1607.22 690.95 L1607.78 690.95 L1608.34 690.95 L1608.9 690.95 L1609.46 690.95 L1610.02 690.95 L1610.57 690.95 L1611.13 690.95 L1611.69 690.95 L1612.25 690.95 L1612.81 690.95 L1613.37 690.95 L1613.93 690.95 L1614.49 690.95 L1615.05 690.95 L1615.61 690.95 L1616.17 690.95 L1616.73 690.95 L1617.29 690.95 L1617.84 690.95 L1618.4 690.95 L1618.96 690.95 L1619.52 690.95 L1620.08 690.95 L1620.64 690.95 L1621.2 690.95 L1621.76 690.95 L1622.32 690.95 L1622.88 690.95 L1623.44 690.95 L1624 690.95 L1624.56 690.95 L1625.11 690.95 L1625.67 690.95 L1626.23 690.95 L1626.79 690.95 L1627.35 690.95 L1627.91 690.95 L1628.47 690.95 L1629.03 690.95 L1629.59 690.95 L1630.15 690.95 L1630.71 690.95 L1631.27 690.95 L1631.83 690.95 L1632.39 690.95 L1632.94 690.95 L1633.5 690.95 L1634.06 690.95 L1634.62 690.95 L1635.18 690.95 L1635.74 690.95 L1636.3 690.95 L1636.86 690.95 L1637.42 690.95 L1637.98 690.95 L1638.54 690.95 L1639.1 690.95 L1639.66 690.95 L1640.21 690.95 L1640.77 690.95 L1641.33 690.95 L1641.89 690.95 L1642.45 690.95 L1643.01 690.95 L1643.57 690.95 L1644.13 690.95 L1644.69 690.95 L1645.25 690.95 L1645.81 690.95 L1646.37 690.95 L1646.93 690.95 L1647.48 690.95 L1648.04 690.95 L1648.6 690.95 L1649.16 690.95 L1649.72 690.95 L1650.28 690.95 L1650.84 690.95 L1651.4 690.95 L1651.96 690.95 L1652.52 690.95 L1653.08 690.95 L1653.64 690.95 L1654.2 690.95 L1654.76 690.95 L1655.31 690.95 L1655.87 690.95 L1656.43 690.95 L1656.99 690.95 L1657.55 690.95 L1658.11 690.95 L1658.67 690.95 L1659.23 690.95 L1659.79 690.95 L1660.35 690.95 L1660.91 690.95 L1661.47 690.95 L1662.03 690.95 L1662.58 690.95 L1663.14 690.95 L1663.7 690.95 L1664.26 690.95 L1664.82 690.95 L1665.38 690.95 L1665.94 690.95 L1666.5 690.95 L1667.06 690.95 L1667.62 690.95 L1668.18 690.95 L1668.74 690.95 L1669.3 690.95 L1669.85 690.95 L1670.41 690.95 L1670.97 690.95 L1671.53 690.95 L1672.09 690.95 L1672.65 690.95 L1673.21 690.95 L1673.77 690.95 L1674.33 690.95 L1674.89 690.95 L1675.45 690.95 L1676.01 690.95 L1676.57 690.95 L1677.13 690.95 L1677.68 690.95 L1678.24 690.95 L1678.8 690.95 L1679.36 690.95 L1679.92 690.95 L1680.48 690.95 L1681.04 690.95 L1681.6 690.95 L1682.16 690.95 L1682.72 690.95 L1683.28 690.95 L1683.84 690.95 L1684.4 690.95 L1684.95 690.95 L1685.51 690.95 L1686.07 690.95 L1686.63 690.95 L1687.19 690.95 L1687.75 690.95 L1688.31 690.95 L1688.87 690.95 L1689.43 690.95 L1689.99 690.95 L1690.55 690.95 L1691.11 690.95 L1691.67 690.95 L1692.23 690.95 L1692.78 690.95 L1693.34 690.95 L1693.9 690.95 L1694.46 690.95 L1695.02 690.95 L1695.58 690.95 L1696.14 690.95 L1696.7 690.95 L1697.26 690.95 L1697.82 690.95 L1698.38 690.95 L1698.94 690.95 L1699.5 690.95 L1700.05 690.95 L1700.61 690.95 L1701.17 690.95 L1701.73 690.95 L1702.29 690.95 L1702.85 690.95 L1703.41 690.95 L1703.97 690.95 L1704.53 690.95 L1705.09 690.95 L1705.65 690.95 L1706.21 690.95 L1706.77 690.95 L1707.32 690.95 L1707.88 690.95 L1708.44 690.95 L1709 690.95 L1709.56 690.95 L1710.12 690.95 L1710.68 690.95 L1711.24 690.95 L1711.8 690.95 L1712.36 690.95 L1712.92 690.95 L1713.48 690.95 L1714.04 690.95 L1714.6 690.95 L1715.15 690.95 L1715.71 690.95 L1716.27 690.95 L1716.83 690.95 L1717.39 690.95 L1717.95 690.95 L1718.51 690.95 L1719.07 690.95 L1719.63 690.95 L1720.19 690.95 L1720.75 690.95 L1721.31 690.95 L1721.87 690.95 L1722.42 690.95 L1722.98 690.95 L1723.54 690.95 L1724.1 690.95 L1724.66 690.95 L1725.22 690.95 L1725.78 690.95 L1726.34 690.95 L1726.9 690.95 L1727.46 690.95 L1728.02 690.95 L1728.58 690.95 L1729.14 690.95 L1729.69 690.95 L1730.25 690.95 L1730.81 690.95 L1731.37 690.95 L1731.93 690.95 L1732.49 690.95 L1733.05 690.95 L1733.61 690.95 L1734.17 690.95 L1734.73 690.95 L1735.29 690.95 L1735.85 690.95 L1736.41 690.95 L1736.97 690.95 L1737.52 690.95 L1738.08 690.95 L1738.64 690.95 L1739.2 690.95 L1739.76 690.95 L1740.32 690.95 L1740.88 690.95 L1741.44 690.95 L1742 690.95 L1742.56 690.95 L1743.12 690.95 L1743.68 690.95 L1744.24 690.95 L1744.79 690.95 L1745.35 690.95 L1745.91 690.95 L1746.47 690.95 L1747.03 690.95 L1747.59 690.95 L1748.15 690.95 L1748.71 690.95 L1749.27 690.95 L1749.83 690.95 L1750.39 690.95 L1750.95 690.95 L1751.51 690.95 L1752.06 690.95 L1752.62 690.95 L1753.18 690.95 L1753.74 690.95 L1754.3 690.95 L1754.86 690.95 L1755.42 690.95 L1755.98 690.95 L1756.54 690.95 L1757.1 690.95 L1757.66 690.95 L1758.22 690.95 L1758.78 690.95 L1759.34 690.95 L1759.89 690.95 L1760.45 690.95 L1761.01 690.95 L1761.57 690.95 L1762.13 690.95 L1762.69 690.95 L1763.25 690.95 L1763.81 690.95 L1764.37 690.95 L1764.93 690.95 L1765.49 690.95 L1766.05 690.95 L1766.61 690.95 L1767.16 690.95 L1767.72 690.95 L1768.28 690.95 L1768.84 690.95 L1769.4 690.95 L1769.96 690.95 L1770.52 690.95 L1771.08 690.95 L1771.64 690.95 L1772.2 690.95 L1772.76 690.95 L1773.32 690.95 L1773.88 690.95 L1774.43 690.95 L1774.99 690.95 L1775.55 690.95 L1776.11 690.95 L1776.67 690.95 L1777.23 690.95 L1777.79 690.95 L1778.35 690.95 L1778.91 690.95 L1779.47 690.95 L1780.03 690.95 L1780.59 690.95 L1781.15 690.95 L1781.71 690.95 L1782.26 690.95 L1782.82 690.95 L1783.38 690.95 L1783.94 690.95 L1784.5 690.95 L1785.06 690.95 L1785.62 690.95 L1786.18 690.95 L1786.74 690.95 L1787.3 690.95 L1787.86 690.95 L1788.42 690.95 L1788.98 690.95 L1789.53 690.95 L1790.09 690.95 L1790.65 690.95 L1791.21 690.95 L1791.77 690.95 L1792.33 690.95 L1792.89 690.95 L1793.45 690.95 L1794.01 690.95 L1794.57 690.95 L1795.13 690.95 L1795.69 690.95 L1796.25 690.95 L1796.8 690.95 L1797.36 690.95 L1797.92 690.95 L1798.48 690.95 L1799.04 690.95 L1799.6 690.95 L1800.16 690.95 L1800.72 690.95 L1801.28 690.95 L1801.84 690.95 L1802.4 690.95 L1802.96 690.95 L1803.52 690.95 L1804.08 690.95 L1804.63 690.95 L1805.19 690.95 L1805.75 690.95 L1806.31 690.95 L1806.87 690.95 L1807.43 690.95 L1807.99 690.95 L1808.55 690.95 L1809.11 690.95 L1809.67 690.95 L1810.23 690.95 L1810.79 690.95 L1811.35 690.95 L1811.9 690.95 L1812.46 690.95 L1813.02 690.95 L1813.58 690.95 L1814.14 690.95 L1814.7 690.95 L1815.26 690.95 L1815.82 690.95 L1816.38 690.95 L1816.94 690.95 L1817.5 690.95 L1818.06 690.95 L1818.62 690.95 L1819.18 690.95 L1819.73 690.95 L1820.29 690.95 L1820.85 690.95 L1821.41 690.95 L1821.97 690.95 L1822.53 690.95 L1823.09 690.95 L1823.65 690.95 L1824.21 690.95 L1824.77 690.95 L1825.33 690.95 L1825.89 690.95 L1826.45 690.95 L1827 690.95 L1827.56 690.95 L1828.12 690.95 L1828.68 690.95 L1829.24 690.95 L1829.8 690.95 L1830.36 690.95 L1830.92 690.95 L1831.48 690.95 L1832.04 690.95 L1832.6 690.95 L1833.16 690.95 L1833.72 690.95 L1834.27 690.95 L1834.83 690.95 L1835.39 690.95 L1835.95 690.95 L1836.51 690.95 L1837.07 690.95 L1837.63 690.95 L1838.19 690.95 L1838.19 682.589 L1837.63 682.589 L1837.07 682.589 L1836.51 682.589 L1835.95 682.589 L1835.39 682.589 L1834.83 682.589 L1834.27 682.589 L1833.72 682.589 L1833.16 682.589 L1832.6 682.589 L1832.04 682.589 L1831.48 682.589 L1830.92 682.589 L1830.36 682.589 L1829.8 682.589 L1829.24 682.589 L1828.68 682.589 L1828.12 682.589 L1827.56 682.589 L1827 682.589 L1826.45 682.589 L1825.89 682.589 L1825.33 682.589 L1824.77 682.589 L1824.21 682.589 L1823.65 682.589 L1823.09 682.589 L1822.53 682.589 L1821.97 682.589 L1821.41 682.589 L1820.85 682.589 L1820.29 682.589 L1819.73 682.589 L1819.18 682.589 L1818.62 682.589 L1818.06 682.589 L1817.5 682.589 L1816.94 682.589 L1816.38 682.589 L1815.82 682.589 L1815.26 682.589 L1814.7 682.589 L1814.14 682.589 L1813.58 682.589 L1813.02 682.589 L1812.46 682.589 L1811.9 682.589 L1811.35 682.589 L1810.79 682.589 L1810.23 682.589 L1809.67 682.589 L1809.11 682.589 L1808.55 682.589 L1807.99 682.589 L1807.43 682.589 L1806.87 682.589 L1806.31 682.589 L1805.75 682.589 L1805.19 682.589 L1804.63 682.589 L1804.08 682.589 L1803.52 682.589 L1802.96 682.589 L1802.4 682.589 L1801.84 682.589 L1801.28 682.589 L1800.72 682.589 L1800.16 682.589 L1799.6 682.589 L1799.04 682.589 L1798.48 682.589 L1797.92 682.589 L1797.36 682.589 L1796.8 682.589 L1796.25 682.589 L1795.69 682.589 L1795.13 682.589 L1794.57 682.589 L1794.01 682.589 L1793.45 682.589 L1792.89 682.589 L1792.33 682.589 L1791.77 682.589 L1791.21 682.589 L1790.65 682.589 L1790.09 682.589 L1789.53 682.589 L1788.98 682.589 L1788.42 682.589 L1787.86 682.589 L1787.3 682.589 L1786.74 682.589 L1786.18 682.589 L1785.62 682.589 L1785.06 682.589 L1784.5 682.589 L1783.94 682.589 L1783.38 682.589 L1782.82 682.589 L1782.26 682.589 L1781.71 682.589 L1781.15 682.589 L1780.59 682.589 L1780.03 682.589 L1779.47 682.589 L1778.91 682.589 L1778.35 682.589 L1777.79 682.589 L1777.23 682.589 L1776.67 682.589 L1776.11 682.589 L1775.55 682.589 L1774.99 682.589 L1774.43 682.589 L1773.88 682.589 L1773.32 682.589 L1772.76 682.589 L1772.2 682.589 L1771.64 682.589 L1771.08 682.589 L1770.52 682.589 L1769.96 682.589 L1769.4 682.589 L1768.84 682.589 L1768.28 682.589 L1767.72 682.589 L1767.16 682.589 L1766.61 682.589 L1766.05 682.589 L1765.49 682.589 L1764.93 682.589 L1764.37 682.589 L1763.81 682.589 L1763.25 682.589 L1762.69 682.589 L1762.13 682.589 L1761.57 682.589 L1761.01 682.589 L1760.45 682.589 L1759.89 682.589 L1759.34 682.589 L1758.78 682.589 L1758.22 682.589 L1757.66 682.589 L1757.1 682.589 L1756.54 682.589 L1755.98 682.589 L1755.42 682.589 L1754.86 682.589 L1754.3 682.589 L1753.74 682.589 L1753.18 682.589 L1752.62 682.589 L1752.06 682.589 L1751.51 682.589 L1750.95 682.589 L1750.39 682.589 L1749.83 682.589 L1749.27 682.589 L1748.71 682.589 L1748.15 682.589 L1747.59 682.589 L1747.03 682.589 L1746.47 682.589 L1745.91 682.589 L1745.35 682.589 L1744.79 682.589 L1744.24 682.589 L1743.68 682.589 L1743.12 682.589 L1742.56 682.589 L1742 682.589 L1741.44 682.589 L1740.88 682.589 L1740.32 682.589 L1739.76 682.589 L1739.2 682.589 L1738.64 682.589 L1738.08 682.589 L1737.52 682.589 L1736.97 682.589 L1736.41 682.589 L1735.85 682.589 L1735.29 682.589 L1734.73 682.589 L1734.17 682.589 L1733.61 682.589 L1733.05 682.589 L1732.49 682.589 L1731.93 682.589 L1731.37 682.589 L1730.81 682.589 L1730.25 682.589 L1729.69 682.589 L1729.14 682.589 L1728.58 682.589 L1728.02 682.589 L1727.46 682.589 L1726.9 682.589 L1726.34 682.589 L1725.78 682.589 L1725.22 682.589 L1724.66 682.589 L1724.1 682.589 L1723.54 682.589 L1722.98 682.589 L1722.42 682.589 L1721.87 682.589 L1721.31 682.589 L1720.75 682.589 L1720.19 682.589 L1719.63 682.589 L1719.07 682.589 L1718.51 682.589 L1717.95 682.589 L1717.39 682.589 L1716.83 682.589 L1716.27 682.589 L1715.71 682.589 L1715.15 682.589 L1714.6 682.589 L1714.04 682.589 L1713.48 682.589 L1712.92 682.589 L1712.36 682.589 L1711.8 682.589 L1711.24 682.589 L1710.68 682.589 L1710.12 682.589 L1709.56 682.589 L1709 682.589 L1708.44 682.589 L1707.88 682.589 L1707.32 682.589 L1706.77 682.589 L1706.21 682.589 L1705.65 682.589 L1705.09 682.589 L1704.53 682.589 L1703.97 682.589 L1703.41 682.589 L1702.85 682.589 L1702.29 682.589 L1701.73 682.589 L1701.17 682.589 L1700.61 682.589 L1700.05 682.589 L1699.5 682.589 L1698.94 682.589 L1698.38 682.589 L1697.82 682.589 L1697.26 682.589 L1696.7 682.589 L1696.14 682.589 L1695.58 682.589 L1695.02 682.589 L1694.46 682.589 L1693.9 682.589 L1693.34 682.589 L1692.78 682.589 L1692.23 682.589 L1691.67 682.589 L1691.11 682.589 L1690.55 682.589 L1689.99 682.589 L1689.43 682.589 L1688.87 682.589 L1688.31 682.589 L1687.75 682.589 L1687.19 682.589 L1686.63 682.589 L1686.07 682.589 L1685.51 682.589 L1684.95 682.589 L1684.4 682.589 L1683.84 682.589 L1683.28 682.589 L1682.72 682.589 L1682.16 682.589 L1681.6 682.589 L1681.04 682.589 L1680.48 682.589 L1679.92 682.589 L1679.36 682.589 L1678.8 682.589 L1678.24 682.589 L1677.68 682.589 L1677.13 682.589 L1676.57 682.589 L1676.01 682.589 L1675.45 682.589 L1674.89 682.589 L1674.33 682.589 L1673.77 682.589 L1673.21 682.589 L1672.65 682.589 L1672.09 682.589 L1671.53 682.589 L1670.97 682.589 L1670.41 682.589 L1669.85 682.589 L1669.3 682.589 L1668.74 682.589 L1668.18 682.589 L1667.62 682.589 L1667.06 682.589 L1666.5 682.589 L1665.94 682.589 L1665.38 682.589 L1664.82 682.589 L1664.26 682.589 L1663.7 682.589 L1663.14 682.589 L1662.58 682.589 L1662.03 682.589 L1661.47 682.589 L1660.91 682.589 L1660.35 682.589 L1659.79 682.589 L1659.23 682.589 L1658.67 682.589 L1658.11 682.589 L1657.55 682.589 L1656.99 682.589 L1656.43 682.589 L1655.87 682.589 L1655.31 682.589 L1654.76 682.589 L1654.2 682.589 L1653.64 682.589 L1653.08 682.589 L1652.52 682.589 L1651.96 682.589 L1651.4 682.589 L1650.84 682.589 L1650.28 682.589 L1649.72 682.589 L1649.16 682.589 L1648.6 682.589 L1648.04 682.589 L1647.48 682.589 L1646.93 682.589 L1646.37 682.589 L1645.81 682.589 L1645.25 682.589 L1644.69 682.589 L1644.13 682.589 L1643.57 682.589 L1643.01 682.589 L1642.45 682.589 L1641.89 682.589 L1641.33 682.589 L1640.77 682.589 L1640.21 682.589 L1639.66 682.589 L1639.1 682.589 L1638.54 682.589 L1637.98 682.589 L1637.42 682.589 L1636.86 682.589 L1636.3 682.589 L1635.74 682.589 L1635.18 682.589 L1634.62 682.589 L1634.06 682.589 L1633.5 682.589 L1632.94 682.589 L1632.39 682.589 L1631.83 682.589 L1631.27 682.589 L1630.71 682.589 L1630.15 682.589 L1629.59 682.589 L1629.03 682.589 L1628.47 682.589 L1627.91 682.589 L1627.35 682.589 L1626.79 682.589 L1626.23 682.589 L1625.67 682.589 L1625.11 682.589 L1624.56 682.589 L1624 682.589 L1623.44 682.589 L1622.88 682.589 L1622.32 682.589 L1621.76 682.589 L1621.2 682.589 L1620.64 682.589 L1620.08 682.589 L1619.52 682.589 L1618.96 682.589 L1618.4 682.589 L1617.84 682.589 L1617.29 682.589 L1616.73 682.589 L1616.17 682.589 L1615.61 682.589 L1615.05 682.589 L1614.49 682.589 L1613.93 682.589 L1613.37 682.589 L1612.81 682.589 L1612.25 682.589 L1611.69 682.589 L1611.13 682.589 L1610.57 682.589 L1610.02 682.589 L1609.46 682.589 L1608.9 682.589 L1608.34 682.589 L1607.78 682.589 L1607.22 682.589 L1606.66 682.589 L1606.1 682.589 L1605.54 682.589 L1604.98 682.589 L1604.42 682.589 L1603.86 682.589 L1603.3 682.589 L1602.74 682.589 L1602.19 682.589 L1601.63 682.589 L1601.07 682.589 L1600.51 682.589 L1599.95 682.589 L1599.39 682.589 L1598.83 682.589 L1598.27 682.589 L1597.71 682.589 L1597.15 682.589 L1596.59 682.589 L1596.03 682.589 L1595.47 682.589 L1594.92 682.589 L1594.36 682.589 L1593.8 682.589 L1593.24 682.589 L1592.68 682.589 L1592.12 682.589 L1591.56 682.589 L1591 682.589 L1590.44 682.589 L1589.88 682.589 L1589.32 682.589 L1588.76 682.589 L1588.2 682.589 L1587.65 682.589 L1587.09 682.589 L1586.53 682.589 L1585.97 682.589 L1585.41 682.589 L1584.85 682.589 L1584.29 682.589 L1583.73 682.589 L1583.17 682.589 L1582.61 682.589 L1582.05 682.589 L1581.49 682.589 L1580.93 682.589 L1580.37 682.589 L1579.82 682.589 L1579.26 682.589 L1578.7 682.589 L1578.14 682.589 L1577.58 682.589 L1577.02 682.589 L1576.46 682.589 L1575.9 682.589 L1575.34 682.589 L1574.78 682.589 L1574.22 682.589 L1573.66 682.589 L1573.1 682.589 L1572.55 682.589 L1571.99 682.589 L1571.43 682.589 L1570.87 682.589 L1570.31 682.589 L1569.75 682.589 L1569.19 682.589 L1568.63 682.589 L1568.07 682.589 L1567.51 682.589 L1566.95 682.589 L1566.39 682.589 L1565.83 682.589 L1565.28 682.589 L1564.72 682.589 L1564.16 682.589 L1563.6 682.589 L1563.04 682.589 L1562.48 682.589 L1561.92 682.589 L1561.36 682.589 L1560.8 682.589 L1560.24 682.589 L1559.68 682.589 L1559.12 682.589 L1558.56 682.589 L1558 682.589 L1557.45 682.589 L1556.89 682.589 L1556.33 682.589 L1555.77 682.589 L1555.21 682.589 L1554.65 682.589 L1554.09 682.589 L1553.53 682.589 L1552.97 682.589 L1552.41 682.589 L1551.85 682.589 L1551.29 682.589 L1550.73 682.589 L1550.18 682.589 L1549.62 682.589 L1549.06 682.589 L1548.5 682.589 L1547.94 682.589 L1547.38 682.589 L1546.82 682.589 L1546.26 682.589 L1545.7 682.589 L1545.14 682.589 L1544.58 682.589 L1544.02 682.589 L1543.46 682.589 L1542.9 682.589 L1542.35 682.589 L1541.79 682.589 L1541.23 682.589 L1540.67 682.589 L1540.11 682.589 L1539.55 682.589 L1538.99 682.589 L1538.43 682.589 L1537.87 682.589 L1537.31 682.589 L1536.75 682.589 L1536.19 682.589 L1535.63 682.589 L1535.08 682.589 L1534.52 682.589 L1533.96 682.589 L1533.4 682.589 L1532.84 682.589 L1532.28 682.589 L1531.72 682.589 L1531.16 682.589 L1530.6 682.589 L1530.04 682.589 L1529.48 682.589 L1528.92 682.589 L1528.36 682.589 L1527.81 682.589 L1527.25 682.589 L1526.69 682.589 L1526.13 682.589 L1525.57 682.589 L1525.01 682.589 L1524.45 682.589 L1523.89 682.589 L1523.33 682.589 L1522.77 682.589 L1522.21 682.589 L1521.65 682.589 L1521.09 682.589 L1520.53 682.589 L1519.98 682.589 L1519.42 682.589 L1518.86 682.589 L1518.3 682.589 L1517.74 682.589 L1517.18 682.589 L1516.62 682.589 L1516.06 682.589 L1515.5 682.589 L1514.94 682.589 L1514.38 682.589 L1513.82 682.589 L1513.26 682.589 L1512.71 682.589 L1512.15 682.589 L1511.59 682.589 L1511.03 682.589 L1510.47 682.589 L1509.91 682.589 L1509.35 682.589 L1508.79 682.589 L1508.23 682.589 L1507.67 682.589 L1507.11 682.589 L1506.55 682.589 L1505.99 682.589 L1505.44 682.589 L1504.88 682.589 L1504.32 682.589 L1503.76 682.589 L1503.2 682.589 L1502.64 682.589 L1502.08 682.589 L1501.52 682.589 L1500.96 682.589 L1500.4 682.589 L1499.84 682.589 L1499.28 682.589 L1498.72 682.589 L1498.16 682.589 L1497.61 682.589 L1497.05 682.589 L1496.49 682.589 L1495.93 682.589 L1495.37 682.589 L1494.81 682.589 L1494.25 682.589 L1493.69 682.589 L1493.13 682.589 L1492.57 682.589 L1492.01 682.589 L1491.45 682.589 L1490.89 682.589 L1490.34 682.589 L1489.78 682.589 L1489.22 682.589 L1488.66 682.589 L1488.1 682.589 L1487.54 682.589 L1486.98 682.589 L1486.42 682.589 L1485.86 682.589 L1485.3 682.589 L1484.74 682.589 L1484.18 682.589 L1483.62 682.589 L1483.07 682.589 L1482.51 682.589 L1481.95 682.589 L1481.39 682.589 L1480.83 682.589 L1480.27 682.589 L1479.71 682.589 L1479.15 682.589 L1478.59 682.589 L1478.03 682.589 L1477.47 682.589 L1476.91 682.589 L1476.35 682.589 L1475.79 682.589 L1475.24 682.589 L1474.68 682.589 L1474.12 682.589 L1473.56 682.589 L1473 682.589 L1472.44 682.589 L1471.88 682.589 L1471.32 682.589 L1470.76 682.589 L1470.2 682.589 L1469.64 682.589 L1469.08 682.589 L1468.52 682.589 L1467.97 682.589 L1467.41 682.589 L1466.85 682.589 L1466.29 682.589 L1465.73 682.589 L1465.17 682.589 L1464.61 682.589 L1464.05 682.589 L1463.49 682.589 L1462.93 682.589 L1462.37 682.589 L1461.81 682.589 L1461.25 682.589 L1460.7 682.589 L1460.14 682.589 L1459.58 682.589 L1459.02 682.589 L1458.46 682.589 L1457.9 682.589 L1457.34 682.589 L1456.78 682.589 L1456.22 682.589 L1455.66 682.589 L1455.1 682.589 L1454.54 682.589 L1453.98 682.589 L1453.42 682.589 L1452.87 682.589 L1452.31 682.589 L1451.75 682.589 L1451.19 682.589 L1450.63 682.589 L1450.07 682.589 L1449.51 682.589 L1448.95 682.589 L1448.39 682.589 L1447.83 682.589 L1447.27 682.589 L1446.71 682.589 L1446.15 682.589 L1445.6 682.589 L1445.04 682.589 L1444.48 682.589 L1443.92 682.589 L1443.36 682.589 L1442.8 682.589 L1442.24 682.589 L1441.68 682.589 L1441.12 682.589 L1440.56 682.589 L1440 682.589 L1439.44 682.589 L1438.88 682.589 L1438.33 682.589 L1437.77 682.589 L1437.21 682.589 L1436.65 682.589 L1436.09 682.589 L1435.53 682.589 L1434.97 682.589 L1434.41 682.589 L1433.85 682.589 L1433.29 682.589 L1432.73 682.589 L1432.17 682.589 L1431.61 682.589 L1431.05 682.589 L1430.5 682.589 L1429.94 682.589 L1429.38 682.589 L1428.82 682.589 L1428.26 682.589 L1427.7 682.589 L1427.14 682.589 L1426.58 682.589 L1426.02 682.589 L1425.46 682.589 L1424.9 682.589 L1424.34 682.589 L1423.78 682.589 L1423.23 682.589 L1422.67 682.589 L1422.11 682.589 L1421.55 682.589 L1420.99 682.589 L1420.43 682.589 L1419.87 682.589 L1419.31 682.589 L1418.75 682.589 L1418.19 682.589 L1417.63 682.589 L1417.07 682.589 L1416.51 682.589 L1415.95 682.589 L1415.4 682.589 L1414.84 682.589 L1414.28 682.589 L1413.72 682.589 L1413.16 682.589 L1412.6 682.589 L1412.04 682.589 L1411.48 682.589 L1410.92 682.589 L1410.36 682.589 L1409.8 682.589 L1409.24 682.589 L1408.68 682.589 L1408.13 682.589 L1407.57 682.589 L1407.01 682.589 L1406.45 682.589 L1405.89 682.589 L1405.33 682.589 L1404.77 682.589 L1404.21 682.589 L1403.65 682.589 L1403.09 682.589 L1402.53 682.589 L1401.97 682.589 L1401.41 682.589 L1400.86 682.589 L1400.3 682.589 L1399.74 682.589 L1399.18 682.589 L1398.62 682.589 L1398.06 682.589 L1397.5 682.589 L1396.94 682.589 L1396.38 682.589 L1395.82 682.589 L1395.26 682.589 L1394.7 682.589 L1394.14 682.589 L1393.58 682.589 L1393.03 682.589 L1392.47 682.589 L1391.91 682.589 L1391.35 682.589 L1390.79 682.589 L1390.23 682.589 L1389.67 682.589 L1389.11 682.589 L1388.55 682.589 L1387.99 682.589 L1387.43 682.589 L1386.87 682.589 L1386.31 682.589 L1385.76 682.589 L1385.2 682.589 L1384.64 682.589 L1384.08 682.589 L1383.52 682.589 L1382.96 682.589 L1382.4 682.589 L1381.84 682.589 L1381.28 682.589 L1380.72 682.589 L1380.16 682.589 L1379.6 682.589 L1379.04 682.589 L1378.49 682.589 L1377.93 682.589 L1377.37 682.589 L1376.81 682.589 L1376.25 682.589 L1375.69 682.589 L1375.13 682.589 L1374.57 682.589 L1374.01 682.589 L1373.45 682.589 L1372.89 682.589 L1372.33 682.589 L1371.77 682.589 L1371.21 682.589 L1370.66 682.589 L1370.1 682.589 L1369.54 682.589 L1368.98 682.589 L1368.42 682.589 L1367.86 682.589 L1367.3 682.589 L1366.74 682.589 L1366.18 682.589 L1365.62 682.589 L1365.06 682.589 L1364.5 682.589 L1363.94 682.589 L1363.39 682.589 L1362.83 682.589 L1362.27 682.589 L1361.71 682.589 L1361.15 682.589 L1360.59 682.589 L1360.03 682.589 L1359.47 682.589 L1358.91 682.589 L1358.35 682.589 L1357.79 682.589 L1357.23 682.589 L1356.67 682.589 L1356.12 682.589 L1355.56 682.589 L1355 682.589 L1354.44 682.589 L1353.88 682.589 L1353.32 682.589 L1352.76 682.589 L1352.2 682.589 L1351.64 682.589 L1351.08 682.589 L1350.52 682.589 L1349.96 682.589 L1349.4 682.589 L1348.84 682.589 L1348.29 682.589 L1347.73 682.589 L1347.17 682.589 L1346.61 682.589 L1346.05 682.589 L1345.49 682.589 L1344.93 682.589 L1344.37 682.589 L1343.81 682.589 L1343.25 682.589 L1342.69 682.589 L1342.13 682.589 L1341.57 682.589 L1341.02 682.589 L1340.46 682.589 L1339.9 682.589 L1339.34 682.589 L1338.78 682.589 L1338.22 682.589 L1337.66 682.589 L1337.1 682.589 L1336.54 682.589 L1335.98 682.589 L1335.42 682.589 L1334.86 682.589 L1334.3 682.589 L1333.75 682.589 L1333.19 682.589 L1332.63 682.589 L1332.07 682.589 L1331.51 682.589 L1330.95 682.589 L1330.39 682.589 L1329.83 682.589 L1329.27 682.589 L1328.71 682.589 L1328.15 682.589 L1327.59 682.589 L1327.03 682.589 L1326.47 682.589 L1325.92 682.589 L1325.36 682.589 L1324.8 682.589 L1324.24 682.589 L1323.68 682.589 L1323.12 682.589 L1322.56 682.589 L1322 682.589 L1321.44 682.589 L1320.88 682.589 L1320.32 682.589 L1319.76 682.589 L1319.2 682.589 L1318.65 682.589 L1318.09 682.589 L1317.53 682.589 L1316.97 682.589 L1316.41 682.589 L1315.85 682.589 L1315.29 682.589 L1314.73 682.589 L1314.17 682.589 L1313.61 682.589 L1313.05 682.589 L1312.49 682.589 L1311.93 682.589 L1311.38 682.589 L1310.82 682.589 L1310.26 682.589 L1309.7 682.589 L1309.14 682.589 L1308.58 682.589 L1308.02 682.589 L1307.46 682.589 L1306.9 682.589 L1306.34 682.589 L1305.78 682.589 L1305.22 682.589 L1304.66 682.589 L1304.1 682.589 L1303.55 682.589 L1302.99 682.589 L1302.43 682.589 L1301.87 682.589 L1301.31 682.589 L1300.75 682.589 L1300.19 682.589 L1299.63 682.589 L1299.07 682.589 L1298.51 682.589 L1297.95 682.589 L1297.39 682.589 L1296.83 682.589 L1296.28 682.589 L1295.72 682.589 L1295.16 682.589 L1294.6 682.589 L1294.04 682.589 L1293.48 682.589 L1292.92 682.589 L1292.36 682.589 L1291.8 682.589 L1291.24 682.589 L1290.68 682.589 L1290.12 682.589 L1289.56 682.589 L1289 682.589 L1288.45 682.589 L1287.89 682.589 L1287.33 682.589 L1286.77 682.589 L1286.21 682.589 L1285.65 682.589 L1285.09 682.589 L1284.53 682.589 L1283.97 682.589 L1283.41 682.589 L1282.85 682.589 L1282.29 682.589 L1281.73 682.589 L1281.18 682.589 L1280.62 682.589 L1280.06 682.589 L1279.5 682.589 L1278.94 682.589 L1278.38 682.589 L1277.82 682.589 L1277.26 682.589 L1276.7 682.589 L1276.14 682.589 L1275.58 682.589 L1275.02 682.589 L1274.46 682.589 L1273.91 682.589 L1273.35 682.589 L1272.79 682.589 L1272.23 682.589 L1271.67 682.589 L1271.11 682.589 L1270.55 682.589 L1269.99 682.589 L1269.43 682.589 L1268.87 682.589 L1268.31 682.589 L1267.75 682.589 L1267.19 682.589 L1266.63 682.589 L1266.08 682.589 L1265.52 682.589 L1264.96 682.589 L1264.4 682.589 L1263.84 682.589 L1263.28 682.589 L1262.72 682.589 L1262.16 682.589 L1261.6 682.589 L1261.04 682.589 L1260.48 682.589 L1259.92 682.589 L1259.36 682.589 L1258.81 682.589 L1258.25 682.589 L1257.69 682.589 L1257.13 682.589 L1256.57 682.589 L1256.01 682.589 L1255.45 682.589 L1254.89 682.589 L1254.33 682.589 L1253.77 682.589 L1253.21 682.589 L1252.65 682.589 L1252.09 682.589 L1251.54 682.589 L1250.98 682.589 L1250.42 682.589 L1249.86 682.589 L1249.3 682.589 L1248.74 682.589 L1248.18 682.589 L1247.62 682.589 L1247.06 682.589 L1246.5 682.589 L1245.94 682.589 L1245.38 682.589 L1244.82 682.589 L1244.26 682.589 L1243.71 682.589 L1243.15 682.589 L1242.59 682.589 L1242.03 682.589 L1241.47 682.589 L1240.91 682.589 L1240.35 682.589 L1239.79 682.589 L1239.23 682.589 L1238.67 682.589 L1238.11 682.589 L1237.55 682.589 L1236.99 682.589 L1236.44 682.589 L1235.88 682.589 L1235.32 682.589 L1234.76 682.589 L1234.2 682.589 L1233.64 682.589 L1233.08 682.589 L1232.52 682.589 L1231.96 682.589 L1231.4 682.589 L1230.84 682.589 L1230.28 682.589 L1229.72 682.589 L1229.17 682.589 L1228.61 682.589 L1228.05 682.589 L1227.49 682.589 L1226.93 682.589 L1226.37 682.589 L1225.81 682.589 L1225.25 682.589 L1224.69 682.589 L1224.13 682.589 L1223.57 682.589 L1223.01 682.589 L1222.45 682.589 L1221.89 682.589 L1221.34 682.589 L1220.78 682.589 L1220.22 682.589 L1219.66 682.589 L1219.1 682.589 L1218.54 682.589 L1217.98 682.589 L1217.42 682.589 L1216.86 682.589 L1216.3 682.589 L1215.74 682.589 L1215.18 682.589 L1214.62 682.589 L1214.07 682.589 L1213.51 682.589 L1212.95 682.589 L1212.39 682.589 L1211.83 682.589 L1211.27 682.589 L1210.71 682.589 L1210.15 682.589 L1209.59 682.589 L1209.03 682.589 L1208.47 682.589 L1207.91 682.589 L1207.35 682.589 L1206.8 682.589 L1206.24 682.589 L1205.68 682.589 L1205.12 682.589 L1204.56 682.589 L1204 682.589 L1203.44 682.589 L1202.88 682.589 L1202.32 682.589 L1201.76 682.589 L1201.2 682.589 L1200.64 682.589 L1200.08 682.589 L1199.52 682.589 L1198.97 682.589 L1198.41 682.589 L1197.85 682.589 L1197.29 682.589 L1196.73 682.589 L1196.17 682.589 L1195.61 682.589 L1195.05 682.589 L1194.49 682.589 L1193.93 682.589 L1193.37 682.589 L1192.81 682.589 L1192.25 682.589 L1191.7 682.589 L1191.14 682.589 L1190.58 682.589 L1190.02 682.589 L1189.46 682.589 L1188.9 682.589 L1188.34 682.589 L1187.78 682.589 L1187.22 682.589 L1186.66 682.589 L1186.1 682.589 L1185.54 682.589 L1184.98 682.589 L1184.43 682.589 L1183.87 682.589 L1183.31 682.589 L1182.75 682.589 L1182.19 682.589 L1181.63 682.589 L1181.07 682.589 L1180.51 682.589 L1179.95 682.589 L1179.39 682.589 L1178.83 682.589 L1178.27 682.589 L1177.71 682.589 L1177.15 682.589 L1176.6 682.589 L1176.04 682.589 L1175.48 682.589 L1174.92 682.589 L1174.36 682.589 L1173.8 682.589 L1173.24 682.589 L1172.68 682.589 L1172.12 682.589 L1171.56 682.589 L1171 682.589 L1170.44 682.589 L1169.88 682.589 L1169.33 682.589 L1168.77 682.589 L1168.21 682.589 L1167.65 682.589 L1167.09 682.589 L1166.53 682.589 L1165.97 682.589 L1165.41 682.589 L1164.85 682.589 L1164.29 682.589 L1163.73 682.589 L1163.17 682.589 L1162.61 682.589 L1162.05 682.589 L1161.5 682.589 L1160.94 682.589 L1160.38 682.589 L1159.82 682.589 L1159.26 682.589 L1158.7 682.589 L1158.14 682.589 L1157.58 682.589 L1157.02 682.589 L1156.46 682.589 L1155.9 682.589 L1155.34 682.589 L1154.78 682.589 L1154.23 682.589 L1153.67 682.589 L1153.11 682.589 L1152.55 682.589 L1151.99 682.589 L1151.43 682.589 L1150.87 682.589 L1150.31 682.589 L1149.75 682.589 L1149.19 682.589 L1148.63 682.589 L1148.07 682.589 L1147.51 682.589 L1146.96 682.589 L1146.4 682.589 L1145.84 682.589 L1145.28 682.589 L1144.72 682.589 L1144.16 682.589 L1143.6 682.589 L1143.04 682.589 L1142.48 682.589 L1141.92 682.589 L1141.36 682.589 L1140.8 682.589 L1140.24 682.589 L1139.68 682.589 L1139.13 682.589 L1138.57 682.589 L1138.01 682.589 L1137.45 682.589 L1136.89 682.589 L1136.33 682.589 L1135.77 682.589 L1135.21 682.589 L1134.65 682.589 L1134.09 682.589 L1133.53 682.589 L1132.97 682.589 L1132.41 682.589 L1131.86 682.589 L1131.3 682.589 L1130.74 682.589 L1130.18 682.589 L1129.62 682.589 L1129.06 682.589 L1128.5 682.589 L1127.94 682.589 L1127.38 682.589 L1126.82 682.589 L1126.26 682.589 L1125.7 682.589 L1125.14 682.589 L1124.59 682.589 L1124.03 682.589 L1123.47 682.589 L1122.91 682.589 L1122.35 682.589 L1121.79 682.589 L1121.23 682.589 L1120.67 682.589 L1120.11 682.589 L1119.55 682.589 L1118.99 682.589 L1118.43 682.589 L1117.87 682.589 L1117.31 682.589 L1116.76 682.589 L1116.2 682.589 L1115.64 682.589 L1115.08 682.589 L1114.52 682.589 L1113.96 682.589 L1113.4 682.589 L1112.84 682.589 L1112.28 682.589 L1111.72 682.589 L1111.16 682.589 L1110.6 682.589 L1110.04 682.589 L1109.49 682.589 L1108.93 682.589 L1108.37 682.589 L1107.81 682.589 L1107.25 682.589 L1106.69 682.589 L1106.13 682.589 L1105.57 682.589 L1105.01 682.589 L1104.45 682.589 L1103.89 682.589 L1103.33 682.589 L1102.77 682.589 L1102.22 682.589 L1101.66 682.589 L1101.1 682.589 L1100.54 682.589 L1099.98 682.589 L1099.42 682.589 L1098.86 682.589 L1098.3 682.589 L1097.74 682.589 L1097.18 682.589 L1096.62 682.589 L1096.06 682.589 L1095.5 682.589 L1094.94 682.589 L1094.39 682.589 L1093.83 682.589 L1093.27 682.589 L1092.71 682.589 L1092.15 682.589 L1091.59 682.589 L1091.03 682.589 L1090.47 682.589 L1089.91 682.589 L1089.35 682.589 L1088.79 682.589 L1088.23 682.589 L1087.67 682.589 L1087.12 682.589 L1086.56 682.589 L1086 682.589 L1085.44 682.589 L1084.88 682.589 L1084.32 682.589 L1083.76 682.589 L1083.2 682.589 L1082.64 682.589 L1082.08 682.589 L1081.52 682.589 L1080.96 682.589 L1080.4 682.589 L1079.85 682.589 L1079.29 682.589 L1078.73 682.589 L1078.17 682.589 L1077.61 682.589 L1077.05 682.589 L1076.49 682.589 L1075.93 682.589 L1075.37 682.589 L1074.81 682.589 L1074.25 682.589 L1073.69 682.589 L1073.13 682.589 L1072.57 682.589 L1072.02 682.589 L1071.46 682.589 L1070.9 682.589 L1070.34 682.589 L1069.78 682.589 L1069.22 682.589 L1068.66 682.589 L1068.1 682.589 L1067.54 682.589 L1066.98 682.589 L1066.42 682.589 L1065.86 682.589 L1065.3 682.589 L1064.75 682.589 L1064.19 682.589 L1063.63 682.589 L1063.07 682.589 L1062.51 682.589 L1061.95 682.589 L1061.39 682.589 L1060.83 682.589 L1060.27 682.589 L1059.71 682.589 L1059.15 682.589 L1058.59 682.589 L1058.03 682.589 L1057.48 682.589 L1056.92 682.589 L1056.36 682.589 L1055.8 682.589 L1055.24 682.589 L1054.68 682.589 L1054.12 682.589 L1053.56 682.589 L1053 682.589 L1052.44 682.589 L1051.88 682.589 L1051.32 682.589 L1050.76 682.589 L1050.2 682.589 L1049.65 682.589 L1049.09 682.589 L1048.53 682.589 L1047.97 682.589 L1047.41 682.589 L1046.85 682.589 L1046.29 682.589 L1045.73 682.589 L1045.17 682.589 L1044.61 682.589 L1044.05 682.589 L1043.49 682.589 L1042.93 682.589 L1042.38 682.589 L1041.82 682.589 L1041.26 682.589 L1040.7 682.589 L1040.14 682.589 L1039.58 682.589 L1039.02 682.589 L1038.46 682.589 L1037.9 682.589 L1037.34 682.589 L1036.78 682.589 L1036.22 682.589 L1035.66 682.589 L1035.1 682.589 L1034.55 682.589 L1033.99 682.589 L1033.43 682.589 L1032.87 682.589 L1032.31 682.589 L1031.75 682.589 L1031.19 682.589 L1030.63 682.589 L1030.07 682.589 L1029.51 682.589 L1028.95 682.589 L1028.39 682.589 L1027.83 682.589 L1027.28 682.589 L1026.72 682.589 L1026.16 682.589 L1025.6 682.589 L1025.04 682.589 L1024.48 682.589 L1023.92 682.589 L1023.36 682.589 L1022.8 682.589 L1022.24 682.589 L1021.68 682.589 L1021.12 682.589 L1020.56 682.589 L1020.01 682.589 L1019.45 682.589 L1018.89 682.589 L1018.33 682.589 L1017.77 682.589 L1017.21 682.589 L1016.65 682.589 L1016.09 682.589 L1015.53 682.589 L1014.97 682.589 L1014.41 682.589 L1013.85 682.589 L1013.29 682.589 L1012.73 682.589 L1012.18 682.589 L1011.62 682.589 L1011.06 682.589 L1010.5 682.589 L1009.94 682.589 L1009.38 682.589 L1008.82 682.589 L1008.26 682.589 L1007.7 682.589 L1007.14 682.589 L1006.58 682.589 L1006.02 682.589 L1005.46 682.589 L1004.91 682.589 L1004.35 682.589 L1003.79 682.589 L1003.23 682.589 L1002.67 682.589 L1002.11 682.589 L1001.55 682.589 L1000.99 682.589 L1000.43 682.589 L999.872 682.589 L999.313 682.589 L998.754 682.589 L998.194 682.589 L997.635 682.589 L997.076 682.589 L996.517 682.589 L995.957 682.589 L995.398 682.589 L994.839 682.589 L994.28 682.589 L993.72 682.589 L993.161 682.589 L992.602 682.589 L992.043 682.589 L991.483 682.589 L990.924 682.589 L990.365 682.589 L989.806 682.589 L989.246 682.589 L988.687 682.589 L988.128 682.589 L987.569 682.589 L987.009 682.589 L986.45 682.589 L985.891 682.589 L985.332 682.589 L984.772 682.589 L984.213 682.589 L983.654 682.589 L983.095 682.589 L982.535 682.589 L981.976 682.589 L981.417 682.589 L980.858 682.589 L980.298 682.589 L979.739 682.589 L979.18 682.589 L978.621 682.589 L978.061 682.589 L977.502 682.589 L976.943 682.589 L976.384 682.589 L975.824 682.589 L975.265 682.589 L974.706 682.589 L974.147 682.589 L973.587 682.589 L973.028 682.589 L972.469 682.589 L971.91 682.589 L971.35 682.589 L970.791 682.589 L970.232 682.589 L969.673 682.589 L969.113 682.589 L968.554 682.589 L967.995 682.589 L967.436 682.589 L966.876 682.589 L966.317 682.589 L965.758 682.589 L965.199 682.589 L964.639 682.589 L964.08 682.589 L963.521 682.589 L962.962 682.589 L962.402 682.589 L961.843 682.589 L961.284 682.589 L960.725 682.589 L960.165 682.589 L959.606 682.589 L959.047 682.589 L958.488 682.589 L957.928 682.589 L957.369 682.589 L956.81 682.589 L956.251 682.589 L955.691 682.589 L955.132 682.589 L954.573 682.589 L954.014 682.589 L953.454 682.589 L952.895 682.589 L952.336 682.589 L951.777 682.589 L951.217 682.589 L950.658 682.589 L950.099 682.589 L949.54 682.589 L948.98 682.589 L948.421 682.589 L947.862 682.589 L947.303 682.589 L946.743 682.589 L946.184 682.589 L945.625 682.589 L945.066 682.589 L944.506 682.589 L943.947 682.589 L943.388 682.589 L942.829 682.589 L942.269 682.589 L941.71 682.589 L941.151 682.589 L940.592 682.589 L940.032 682.589 L939.473 682.589 L938.914 682.589 L938.355 682.589 L937.795 682.589 L937.236 682.589 L936.677 682.589 L936.118 682.589 L935.558 682.589 L934.999 682.589 L934.44 682.589 L933.881 682.589 L933.321 682.589 L932.762 682.589 L932.203 682.589 L931.644 682.589 L931.084 682.589 L930.525 682.589 L929.966 682.589 L929.406 682.589 L928.847 682.589 L928.288 682.589 L927.729 682.589 L927.169 682.589 L926.61 682.589 L926.051 682.589 L925.492 682.589 L924.932 682.589 L924.373 682.589 L923.814 682.589 L923.255 682.589 L922.695 682.589 L922.136 682.589 L921.577 682.589 L921.018 682.589 L920.458 682.589 L919.899 682.589 L919.34 682.589 L918.781 682.589 L918.221 682.589 L917.662 682.589 L917.103 682.589 L916.544 682.589 L915.984 682.589 L915.425 682.589 L914.866 682.589 L914.307 682.589 L913.747 682.589 L913.188 682.589 L912.629 682.589 L912.07 682.589 L911.51 682.589 L910.951 682.589 L910.392 682.589 L909.833 682.589 L909.273 682.589 L908.714 682.589 L908.155 682.589 L907.596 682.589 L907.036 682.589 L906.477 682.589 L905.918 682.589 L905.359 682.589 L904.799 682.589 L904.24 682.589 L903.681 682.589 L903.122 682.589 L902.562 682.589 L902.003 682.589 L901.444 682.589 L900.885 682.589 L900.325 682.589 L899.766 682.589 L899.207 682.589 L898.648 682.589 L898.088 682.589 L897.529 682.589 L896.97 682.589 L896.411 682.589 L895.851 682.589 L895.292 682.589 L894.733 682.589 L894.174 682.589 L893.614 682.589 L893.055 682.589 L892.496 682.589 L891.937 682.589 L891.377 682.589 L890.818 682.589 L890.259 682.589 L889.7 682.589 L889.14 682.589 L888.581 682.589 L888.022 682.589 L887.463 682.589 L886.903 682.589 L886.344 682.589 L885.785 682.589 L885.226 682.589 L884.666 682.589 L884.107 682.589 L883.548 682.589 L882.989 682.589 L882.429 682.589 L881.87 682.589 L881.311 682.589 L880.752 682.589 L880.192 682.589 L879.633 682.589 L879.074 682.589 L878.515 682.589 L877.955 682.589 L877.396 682.589 L876.837 682.589 L876.278 682.589 L875.718 682.589 L875.159 682.589 L874.6 682.589 L874.041 682.589 L873.481 682.589 L872.922 682.589 L872.363 682.589 L871.804 682.589 L871.244 682.589 L870.685 682.589 L870.126 682.589 L869.567 682.589 L869.007 682.589 L868.448 682.589 L867.889 682.589 L867.33 682.589 L866.77 682.589 L866.211 682.589 L865.652 682.589 L865.093 682.589 L864.533 682.589 L863.974 682.589 L863.415 682.589 L862.856 682.589 L862.296 682.589 L861.737 682.589 L861.178 682.589 L860.619 682.589 L860.059 682.589 L859.5 682.589 L858.941 682.589 L858.382 682.589 L857.822 682.589 L857.263 682.589 L856.704 682.589 L856.145 682.589 L855.585 682.589 L855.026 682.589 L854.467 682.589 L853.908 682.589 L853.348 682.589 L852.789 682.589 L852.23 682.589 L851.671 682.589 L851.111 682.589 L850.552 682.589 L849.993 682.589 L849.434 682.589 L848.874 682.589 L848.315 682.589 L847.756 682.589 L847.197 682.589 L846.637 682.589 L846.078 682.589 L845.519 682.589 L844.96 682.589 L844.4 682.589 L843.841 682.589 L843.282 682.589 L842.723 682.589 L842.163 682.589 L841.604 682.589 L841.045 682.589 L840.486 682.589 L839.926 682.589 L839.367 682.589 L838.808 682.589 L838.249 682.589 L837.689 682.589 L837.13 682.589 L836.571 682.589 L836.012 682.589 L835.452 682.589 L834.893 682.589 L834.334 682.589 L833.775 682.589 L833.215 682.589 L832.656 682.589 L832.097 682.589 L831.538 682.589 L830.978 682.589 L830.419 682.589 L829.86 682.589 L829.301 682.589 L828.741 682.589 L828.182 682.589 L827.623 682.589 L827.064 682.589 L826.504 682.589 L825.945 682.589 L825.386 682.589 L824.827 682.589 L824.267 682.589 L823.708 682.589 L823.149 682.589 L822.59 682.589 L822.03 682.589 L821.471 682.589 L820.912 682.589 L820.353 682.589 L819.793 682.589 L819.234 682.589 L818.675 682.589 L818.116 682.589 L817.556 682.589 L816.997 682.589 L816.438 682.589 L815.879 682.589 L815.319 682.589 L814.76 682.589 L814.201 682.589 L813.642 682.589 L813.082 682.589 L812.523 682.589 L811.964 682.589 L811.405 682.589 L810.845 682.589 L810.286 682.589 L809.727 682.589 L809.168 682.589 L808.608 682.589 L808.049 682.589 L807.49 682.589 L806.931 682.589 L806.371 682.589 L805.812 682.589 L805.253 682.589 L804.693 682.589 L804.134 682.589 L803.575 682.589 L803.016 682.589 L802.456 682.589 L801.897 682.589 L801.338 682.589 L800.779 682.589 L800.219 682.589 L799.66 682.589 L799.101 682.589 L798.542 682.589 L797.982 682.589 L797.423 682.589 L796.864 682.589 L796.305 682.589 L795.745 682.589 L795.186 682.589 L794.627 682.589 L794.068 682.589 L793.508 682.589 L792.949 682.589 L792.39 682.589 L791.831 682.589 L791.271 682.589 L790.712 682.589 L790.153 682.589 L789.594 682.589 L789.034 682.589 L788.475 682.589 L787.916 682.589 L787.357 682.589 L786.797 682.589 L786.238 682.589 L785.679 682.589 L785.12 682.589 L784.56 682.589 L784.001 682.589 L783.442 682.589 L782.883 682.589 L782.323 682.589 L781.764 682.589 L781.205 682.589 L780.646 682.589 L780.086 682.589 L779.527 682.589 L778.968 682.589 L778.409 682.589 L777.849 682.589 L777.29 682.589 L776.731 682.589 L776.172 682.589 L775.612 682.589 L775.053 682.589 L774.494 682.589 L773.935 682.589 L773.375 682.589 L772.816 682.589 L772.257 682.589 L771.698 682.589 L771.138 682.589 L770.579 682.589 L770.02 682.589 L769.461 682.589 L768.901 682.589 L768.342 682.589 L767.783 682.589 L767.224 682.589 L766.664 682.589 L766.105 682.589 L765.546 682.589 L764.987 682.589 L764.427 682.589 L763.868 682.589 L763.309 682.589 L762.75 682.589 L762.19 682.589 L761.631 682.589 L761.072 682.589 L760.513 682.589 L759.953 682.589 L759.394 682.589 L758.835 682.589 L758.276 682.589 L757.716 682.589 L757.157 682.589 L756.598 682.589 L756.039 682.589 L755.479 682.589 L754.92 682.589 L754.361 682.589 L753.802 682.589 L753.242 682.589 L752.683 682.589 L752.124 682.589 L751.565 682.589 L751.005 682.589 L750.446 682.589 L749.887 682.589 L749.328 682.589 L748.768 682.589 L748.209 682.589 L747.65 682.589 L747.091 682.589 L746.531 682.589 L745.972 682.589 L745.413 682.589 L744.854 682.589 L744.294 682.589 L743.735 682.589 L743.176 682.589 L742.617 682.589 L742.057 682.589 L741.498 682.589 L740.939 682.589 L740.38 682.589 L739.82 682.589 L739.261 682.589 L738.702 682.589 L738.143 682.589 L737.583 682.589 L737.024 682.589 L736.465 682.589 L735.906 682.589 L735.346 682.589 L734.787 682.589 L734.228 682.589 L733.669 682.589 L733.109 682.589 L732.55 682.589 L731.991 682.589 L731.432 682.589 L730.872 682.589 L730.313 682.589 L729.754 682.589 L729.195 682.589 L728.635 682.589 L728.076 682.589 L727.517 682.589 L726.958 682.589 L726.398 682.589 L725.839 682.589 L725.28 682.589 L724.721 682.589 L724.161 682.589 L723.602 682.589 L723.043 682.589 L722.484 682.589 L721.924 682.589 L721.365 682.589 L720.806 682.589 L720.247 682.589  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.77 720.806,686.77 721.365,686.77 721.924,686.77 722.484,686.77 723.043,686.77 723.602,686.77 724.161,686.77 724.721,686.77 725.28,686.77 725.839,686.77 726.398,686.77 726.958,686.77 727.517,686.77 728.076,686.77 728.635,686.77 729.195,686.77 729.754,686.77 730.313,686.77 730.872,686.77 731.432,686.77 731.991,686.77 732.55,686.77 733.109,686.77 733.669,686.77 734.228,686.77 734.787,686.77 735.346,686.77 735.906,686.77 736.465,686.77 737.024,686.77 737.583,686.77 738.143,686.77 738.702,686.77 739.261,686.77 739.82,686.77 740.38,686.77 740.939,686.77 741.498,686.77 742.057,686.77 742.617,686.77 743.176,686.77 743.735,686.77 744.294,686.77 744.854,686.77 745.413,686.77 745.972,686.77 746.531,686.77 747.091,686.77 747.65,686.77 748.209,686.77 748.768,686.77 749.328,686.77 749.887,686.77 750.446,686.77 751.005,686.77 751.565,686.77 752.124,686.77 752.683,686.77 753.242,686.77 753.802,686.77 754.361,686.77 754.92,686.77 755.479,686.77 756.039,686.77 756.598,686.77 757.157,686.77 757.716,686.77 758.276,686.77 758.835,686.77 759.394,686.77 759.953,686.77 760.513,686.77 761.072,686.77 761.631,686.77 762.19,686.77 762.75,686.77 763.309,686.77 763.868,686.77 764.427,686.77 764.987,686.77 765.546,686.77 766.105,686.77 766.664,686.77 767.224,686.77 767.783,686.77 768.342,686.77 768.901,686.77 769.461,686.77 770.02,686.77 770.579,686.77 771.138,686.77 771.698,686.77 772.257,686.77 772.816,686.77 773.375,686.77 773.935,686.77 774.494,686.77 775.053,686.77 775.612,686.77 776.172,686.77 776.731,686.77 777.29,686.77 777.849,686.77 778.409,686.77 778.968,686.77 779.527,686.77 780.086,686.77 780.646,686.77 781.205,686.77 781.764,686.77 782.323,686.77 782.883,686.77 783.442,686.77 784.001,686.77 784.56,686.77 785.12,686.77 785.679,686.77 786.238,686.77 786.797,686.77 787.357,686.77 787.916,686.77 788.475,686.77 789.034,686.77 789.594,686.77 790.153,686.77 790.712,686.77 791.271,686.77 791.831,686.77 792.39,686.77 792.949,686.77 793.508,686.77 794.068,686.77 794.627,686.77 795.186,686.77 795.745,686.77 796.305,686.77 796.864,686.77 797.423,686.77 797.982,686.77 798.542,686.77 799.101,686.77 799.66,686.77 800.219,686.77 800.779,686.77 801.338,686.77 801.897,686.77 802.456,686.77 803.016,686.77 803.575,686.77 804.134,686.77 804.693,686.77 805.253,686.77 805.812,686.77 806.371,686.77 806.931,686.77 807.49,686.77 808.049,686.77 808.608,686.77 809.168,686.77 809.727,686.77 810.286,686.77 810.845,686.77 811.405,686.77 811.964,686.77 812.523,686.77 813.082,686.77 813.642,686.77 814.201,686.77 814.76,686.77 815.319,686.77 815.879,686.77 816.438,686.77 816.997,686.77 817.556,686.77 818.116,686.77 818.675,686.77 819.234,686.77 819.793,686.77 820.353,686.77 820.912,686.77 821.471,686.77 822.03,686.77 822.59,686.77 823.149,686.77 823.708,686.77 824.267,686.77 824.827,686.77 825.386,686.77 825.945,686.77 826.504,686.77 827.064,686.77 827.623,686.77 828.182,686.77 828.741,686.77 829.301,686.77 829.86,686.77 830.419,686.77 830.978,686.77 831.538,686.77 832.097,686.77 832.656,686.77 833.215,686.77 833.775,686.77 834.334,686.77 834.893,686.77 835.452,686.77 836.012,686.77 836.571,686.77 837.13,686.77 837.689,686.77 838.249,686.77 838.808,686.77 839.367,686.77 839.926,686.77 840.486,686.77 841.045,686.77 841.604,686.77 842.163,686.77 842.723,686.77 843.282,686.77 843.841,686.77 844.4,686.77 844.96,686.77 845.519,686.77 846.078,686.77 846.637,686.77 847.197,686.77 847.756,686.77 848.315,686.77 848.874,686.77 849.434,686.77 849.993,686.77 850.552,686.77 851.111,686.77 851.671,686.77 852.23,686.77 852.789,686.77 853.348,686.77 853.908,686.77 854.467,686.77 855.026,686.77 855.585,686.77 856.145,686.77 856.704,686.77 857.263,686.77 857.822,686.77 858.382,686.77 858.941,686.77 859.5,686.77 860.059,686.77 860.619,686.77 861.178,686.77 861.737,686.77 862.296,686.77 862.856,686.77 863.415,686.77 863.974,686.77 864.533,686.77 865.093,686.77 865.652,686.77 866.211,686.77 866.77,686.77 867.33,686.77 867.889,686.77 868.448,686.77 869.007,686.77 869.567,686.77 870.126,686.77 870.685,686.77 871.244,686.77 871.804,686.77 872.363,686.77 872.922,686.77 873.481,686.77 874.041,686.77 874.6,686.77 875.159,686.77 875.718,686.77 876.278,686.77 876.837,686.77 877.396,686.77 877.955,686.77 878.515,686.77 879.074,686.77 879.633,686.77 880.192,686.77 880.752,686.77 881.311,686.77 881.87,686.77 882.429,686.77 882.989,686.77 883.548,686.77 884.107,686.77 884.666,686.77 885.226,686.77 885.785,686.77 886.344,686.77 886.903,686.77 887.463,686.77 888.022,686.77 888.581,686.77 889.14,686.77 889.7,686.77 890.259,686.77 890.818,686.77 891.377,686.77 891.937,686.77 892.496,686.77 893.055,686.77 893.614,686.77 894.174,686.77 894.733,686.77 895.292,686.77 895.851,686.77 896.411,686.77 896.97,686.77 897.529,686.77 898.088,686.77 898.648,686.77 899.207,686.77 899.766,686.77 900.325,686.77 900.885,686.77 901.444,686.77 902.003,686.77 902.562,686.77 903.122,686.77 903.681,686.77 904.24,686.77 904.799,686.77 905.359,686.77 905.918,686.77 906.477,686.77 907.036,686.77 907.596,686.77 908.155,686.77 908.714,686.77 909.273,686.77 909.833,686.77 910.392,686.77 910.951,686.77 911.51,686.77 912.07,686.77 912.629,686.77 913.188,686.77 913.747,686.77 914.307,686.77 914.866,686.77 915.425,686.77 915.984,686.77 916.544,686.77 917.103,686.77 917.662,686.77 918.221,686.77 918.781,686.77 919.34,686.77 919.899,686.77 920.458,686.77 921.018,686.77 921.577,686.77 922.136,686.77 922.695,686.77 923.255,686.77 923.814,686.77 924.373,686.77 924.932,686.77 925.492,686.77 926.051,686.77 926.61,686.77 927.169,686.77 927.729,686.77 928.288,686.77 928.847,686.77 929.406,686.77 929.966,686.77 930.525,686.77 931.084,686.77 931.644,686.77 932.203,686.77 932.762,686.77 933.321,686.77 933.881,686.77 934.44,686.77 934.999,686.77 935.558,686.77 936.118,686.77 936.677,686.77 937.236,686.77 937.795,686.77 938.355,686.77 938.914,686.77 939.473,686.77 940.032,686.77 940.592,686.77 941.151,686.77 941.71,686.77 942.269,686.77 942.829,686.77 943.388,686.77 943.947,686.77 944.506,686.77 945.066,686.77 945.625,686.77 946.184,686.77 946.743,686.77 947.303,686.77 947.862,686.77 948.421,686.77 948.98,686.77 949.54,686.77 950.099,686.77 950.658,686.77 951.217,686.77 951.777,686.77 952.336,686.77 952.895,686.77 953.454,686.77 954.014,686.77 954.573,686.77 955.132,686.77 955.691,686.77 956.251,686.77 956.81,686.77 957.369,686.77 957.928,686.77 958.488,686.77 959.047,686.77 959.606,686.77 960.165,686.77 960.725,686.77 961.284,686.77 961.843,686.77 962.402,686.77 962.962,686.77 963.521,686.77 964.08,686.77 964.639,686.77 965.199,686.77 965.758,686.77 966.317,686.77 966.876,686.77 967.436,686.77 967.995,686.77 968.554,686.77 969.113,686.77 969.673,686.77 970.232,686.77 970.791,686.77 971.35,686.77 971.91,686.77 972.469,686.77 973.028,686.77 973.587,686.77 974.147,686.77 974.706,686.77 975.265,686.77 975.824,686.77 976.384,686.77 976.943,686.77 977.502,686.77 978.061,686.77 978.621,686.77 979.18,686.77 979.739,686.77 980.298,686.77 980.858,686.77 981.417,686.77 981.976,686.77 982.535,686.77 983.095,686.77 983.654,686.77 984.213,686.77 984.772,686.77 985.332,686.77 985.891,686.77 986.45,686.77 987.009,686.77 987.569,686.77 988.128,686.77 988.687,686.77 989.246,686.77 989.806,686.77 990.365,686.77 990.924,686.77 991.483,686.77 992.043,686.77 992.602,686.77 993.161,686.77 993.72,686.77 994.28,686.77 994.839,686.77 995.398,686.77 995.957,686.77 996.517,686.77 997.076,686.77 997.635,686.77 998.194,686.77 998.754,686.77 999.313,686.77 999.872,686.77 1000.43,686.77 1000.99,686.77 1001.55,686.77 1002.11,686.77 1002.67,686.77 1003.23,686.77 1003.79,686.77 1004.35,686.77 1004.91,686.77 1005.46,686.77 1006.02,686.77 1006.58,686.77 1007.14,686.77 1007.7,686.77 1008.26,686.77 1008.82,686.77 1009.38,686.77 1009.94,686.77 1010.5,686.77 1011.06,686.77 1011.62,686.77 1012.18,686.77 1012.73,686.77 1013.29,686.77 1013.85,686.77 1014.41,686.77 1014.97,686.77 1015.53,686.77 1016.09,686.77 1016.65,686.77 1017.21,686.77 1017.77,686.77 1018.33,686.77 1018.89,686.77 1019.45,686.77 1020.01,686.77 1020.56,686.77 1021.12,686.77 1021.68,686.77 1022.24,686.77 1022.8,686.77 1023.36,686.77 1023.92,686.77 1024.48,686.77 1025.04,686.77 1025.6,686.77 1026.16,686.77 1026.72,686.77 1027.28,686.77 1027.83,686.77 1028.39,686.77 1028.95,686.77 1029.51,686.77 1030.07,686.77 1030.63,686.77 1031.19,686.77 1031.75,686.77 1032.31,686.77 1032.87,686.77 1033.43,686.77 1033.99,686.77 1034.55,686.77 1035.1,686.77 1035.66,686.77 1036.22,686.77 1036.78,686.77 1037.34,686.77 1037.9,686.77 1038.46,686.77 1039.02,686.77 1039.58,686.77 1040.14,686.77 1040.7,686.77 1041.26,686.77 1041.82,686.77 1042.38,686.77 1042.93,686.77 1043.49,686.77 1044.05,686.77 1044.61,686.77 1045.17,686.77 1045.73,686.77 1046.29,686.77 1046.85,686.77 1047.41,686.77 1047.97,686.77 1048.53,686.77 1049.09,686.77 1049.65,686.77 1050.2,686.77 1050.76,686.77 1051.32,686.77 1051.88,686.77 1052.44,686.77 1053,686.77 1053.56,686.77 1054.12,686.77 1054.68,686.77 1055.24,686.77 1055.8,686.77 1056.36,686.77 1056.92,686.77 1057.48,686.77 1058.03,686.77 1058.59,686.77 1059.15,686.77 1059.71,686.77 1060.27,686.77 1060.83,686.77 1061.39,686.77 1061.95,686.77 1062.51,686.77 1063.07,686.77 1063.63,686.77 1064.19,686.77 1064.75,686.77 1065.3,686.77 1065.86,686.77 1066.42,686.77 1066.98,686.77 1067.54,686.77 1068.1,686.77 1068.66,686.77 1069.22,686.77 1069.78,686.77 1070.34,686.77 1070.9,686.77 1071.46,686.77 1072.02,686.77 1072.57,686.77 1073.13,686.77 1073.69,686.77 1074.25,686.77 1074.81,686.77 1075.37,686.77 1075.93,686.77 1076.49,686.77 1077.05,686.77 1077.61,686.77 1078.17,686.77 1078.73,686.77 1079.29,686.77 1079.85,686.77 1080.4,686.77 1080.96,686.77 1081.52,686.77 1082.08,686.77 1082.64,686.77 1083.2,686.77 1083.76,686.77 1084.32,686.77 1084.88,686.77 1085.44,686.77 1086,686.77 1086.56,686.77 1087.12,686.77 1087.67,686.77 1088.23,686.77 1088.79,686.77 1089.35,686.77 1089.91,686.77 1090.47,686.77 1091.03,686.77 1091.59,686.77 1092.15,686.77 1092.71,686.77 1093.27,686.77 1093.83,686.77 1094.39,686.77 1094.94,686.77 1095.5,686.77 1096.06,686.77 1096.62,686.77 1097.18,686.77 1097.74,686.77 1098.3,686.77 1098.86,686.77 1099.42,686.77 1099.98,686.77 1100.54,686.77 1101.1,686.77 1101.66,686.77 1102.22,686.77 1102.77,686.77 1103.33,686.77 1103.89,686.77 1104.45,686.77 1105.01,686.77 1105.57,686.77 1106.13,686.77 1106.69,686.77 1107.25,686.77 1107.81,686.77 1108.37,686.77 1108.93,686.77 1109.49,686.77 1110.04,686.77 1110.6,686.77 1111.16,686.77 1111.72,686.77 1112.28,686.77 1112.84,686.77 1113.4,686.77 1113.96,686.77 1114.52,686.77 1115.08,686.77 1115.64,686.77 1116.2,686.77 1116.76,686.77 1117.31,686.77 1117.87,686.77 1118.43,686.77 1118.99,686.77 1119.55,686.77 1120.11,686.77 1120.67,686.77 1121.23,686.77 1121.79,686.77 1122.35,686.77 1122.91,686.77 1123.47,686.77 1124.03,686.77 1124.59,686.77 1125.14,686.77 1125.7,686.77 1126.26,686.77 1126.82,686.77 1127.38,686.77 1127.94,686.77 1128.5,686.77 1129.06,686.77 1129.62,686.77 1130.18,686.77 1130.74,686.77 1131.3,686.77 1131.86,686.77 1132.41,686.77 1132.97,686.77 1133.53,686.77 1134.09,686.77 1134.65,686.77 1135.21,686.77 1135.77,686.77 1136.33,686.77 1136.89,686.77 1137.45,686.77 1138.01,686.77 1138.57,686.77 1139.13,686.77 1139.68,686.77 1140.24,686.77 1140.8,686.77 1141.36,686.77 1141.92,686.77 1142.48,686.77 1143.04,686.77 1143.6,686.77 1144.16,686.77 1144.72,686.77 1145.28,686.77 1145.84,686.77 1146.4,686.77 1146.96,686.77 1147.51,686.77 1148.07,686.77 1148.63,686.77 1149.19,686.77 1149.75,686.77 1150.31,686.77 1150.87,686.77 1151.43,686.77 1151.99,686.77 1152.55,686.77 1153.11,686.77 1153.67,686.77 1154.23,686.77 1154.78,686.77 1155.34,686.77 1155.9,686.77 1156.46,686.77 1157.02,686.77 1157.58,686.77 1158.14,686.77 1158.7,686.77 1159.26,686.77 1159.82,686.77 1160.38,686.77 1160.94,686.77 1161.5,686.77 1162.05,686.77 1162.61,686.77 1163.17,686.77 1163.73,686.77 1164.29,686.77 1164.85,686.77 1165.41,686.77 1165.97,686.77 1166.53,686.77 1167.09,686.77 1167.65,686.77 1168.21,686.77 1168.77,686.77 1169.33,686.77 1169.88,686.77 1170.44,686.77 1171,686.77 1171.56,686.77 1172.12,686.77 1172.68,686.77 1173.24,686.77 1173.8,686.77 1174.36,686.77 1174.92,686.77 1175.48,686.77 1176.04,686.77 1176.6,686.77 1177.15,686.77 1177.71,686.77 1178.27,686.77 1178.83,686.77 1179.39,686.77 1179.95,686.77 1180.51,686.77 1181.07,686.77 1181.63,686.77 1182.19,686.77 1182.75,686.77 1183.31,686.77 1183.87,686.77 1184.43,686.77 1184.98,686.77 1185.54,686.77 1186.1,686.77 1186.66,686.77 1187.22,686.77 1187.78,686.77 1188.34,686.77 1188.9,686.77 1189.46,686.77 1190.02,686.77 1190.58,686.77 1191.14,686.77 1191.7,686.77 1192.25,686.77 1192.81,686.77 1193.37,686.77 1193.93,686.77 1194.49,686.77 1195.05,686.77 1195.61,686.77 1196.17,686.77 1196.73,686.77 1197.29,686.77 1197.85,686.77 1198.41,686.77 1198.97,686.77 1199.52,686.77 1200.08,686.77 1200.64,686.77 1201.2,686.77 1201.76,686.77 1202.32,686.77 1202.88,686.77 1203.44,686.77 1204,686.77 1204.56,686.77 1205.12,686.77 1205.68,686.77 1206.24,686.77 1206.8,686.77 1207.35,686.77 1207.91,686.77 1208.47,686.77 1209.03,686.77 1209.59,686.77 1210.15,686.77 1210.71,686.77 1211.27,686.77 1211.83,686.77 1212.39,686.77 1212.95,686.77 1213.51,686.77 1214.07,686.77 1214.62,686.77 1215.18,686.77 1215.74,686.77 1216.3,686.77 1216.86,686.77 1217.42,686.77 1217.98,686.77 1218.54,686.77 1219.1,686.77 1219.66,686.77 1220.22,686.77 1220.78,686.77 1221.34,686.77 1221.89,686.77 1222.45,686.77 1223.01,686.77 1223.57,686.77 1224.13,686.77 1224.69,686.77 1225.25,686.77 1225.81,686.77 1226.37,686.77 1226.93,686.77 1227.49,686.77 1228.05,686.77 1228.61,686.77 1229.17,686.77 1229.72,686.77 1230.28,686.77 1230.84,686.77 1231.4,686.77 1231.96,686.77 1232.52,686.77 1233.08,686.77 1233.64,686.77 1234.2,686.77 1234.76,686.77 1235.32,686.77 1235.88,686.77 1236.44,686.77 1236.99,686.77 1237.55,686.77 1238.11,686.77 1238.67,686.77 1239.23,686.77 1239.79,686.77 1240.35,686.77 1240.91,686.77 1241.47,686.77 1242.03,686.77 1242.59,686.77 1243.15,686.77 1243.71,686.77 1244.26,686.77 1244.82,686.77 1245.38,686.77 1245.94,686.77 1246.5,686.77 1247.06,686.77 1247.62,686.77 1248.18,686.77 1248.74,686.77 1249.3,686.77 1249.86,686.77 1250.42,686.77 1250.98,686.77 1251.54,686.77 1252.09,686.77 1252.65,686.77 1253.21,686.77 1253.77,686.77 1254.33,686.77 1254.89,686.77 1255.45,686.77 1256.01,686.77 1256.57,686.77 1257.13,686.77 1257.69,686.77 1258.25,686.77 1258.81,686.77 1259.36,686.77 1259.92,686.77 1260.48,686.77 1261.04,686.77 1261.6,686.77 1262.16,686.77 1262.72,686.77 1263.28,686.77 1263.84,686.77 1264.4,686.77 1264.96,686.77 1265.52,686.77 1266.08,686.77 1266.63,686.77 1267.19,686.77 1267.75,686.77 1268.31,686.77 1268.87,686.77 1269.43,686.77 1269.99,686.77 1270.55,686.77 1271.11,686.77 1271.67,686.77 1272.23,686.77 1272.79,686.77 1273.35,686.77 1273.91,686.77 1274.46,686.77 1275.02,686.77 1275.58,686.77 1276.14,686.77 1276.7,686.77 1277.26,686.77 1277.82,686.77 1278.38,686.77 1278.94,686.77 1279.5,686.77 1280.06,686.77 1280.62,686.77 1281.18,686.77 1281.73,686.77 1282.29,686.77 1282.85,686.77 1283.41,686.77 1283.97,686.77 1284.53,686.77 1285.09,686.77 1285.65,686.77 1286.21,686.77 1286.77,686.77 1287.33,686.77 1287.89,686.77 1288.45,686.77 1289,686.77 1289.56,686.77 1290.12,686.77 1290.68,686.77 1291.24,686.77 1291.8,686.77 1292.36,686.77 1292.92,686.77 1293.48,686.77 1294.04,686.77 1294.6,686.77 1295.16,686.77 1295.72,686.77 1296.28,686.77 1296.83,686.77 1297.39,686.77 1297.95,686.77 1298.51,686.77 1299.07,686.77 1299.63,686.77 1300.19,686.77 1300.75,686.77 1301.31,686.77 1301.87,686.77 1302.43,686.77 1302.99,686.77 1303.55,686.77 1304.1,686.77 1304.66,686.77 1305.22,686.77 1305.78,686.77 1306.34,686.77 1306.9,686.77 1307.46,686.77 1308.02,686.77 1308.58,686.77 1309.14,686.77 1309.7,686.77 1310.26,686.77 1310.82,686.77 1311.38,686.77 1311.93,686.77 1312.49,686.77 1313.05,686.77 1313.61,686.77 1314.17,686.77 1314.73,686.77 1315.29,686.77 1315.85,686.77 1316.41,686.77 1316.97,686.77 1317.53,686.77 1318.09,686.77 1318.65,686.77 1319.2,686.77 1319.76,686.77 1320.32,686.77 1320.88,686.77 1321.44,686.77 1322,686.77 1322.56,686.77 1323.12,686.77 1323.68,686.77 1324.24,686.77 1324.8,686.77 1325.36,686.77 1325.92,686.77 1326.47,686.77 1327.03,686.77 1327.59,686.77 1328.15,686.77 1328.71,686.77 1329.27,686.77 1329.83,686.77 1330.39,686.77 1330.95,686.77 1331.51,686.77 1332.07,686.77 1332.63,686.77 1333.19,686.77 1333.75,686.77 1334.3,686.77 1334.86,686.77 1335.42,686.77 1335.98,686.77 1336.54,686.77 1337.1,686.77 1337.66,686.77 1338.22,686.77 1338.78,686.77 1339.34,686.77 1339.9,686.77 1340.46,686.77 1341.02,686.77 1341.57,686.77 1342.13,686.77 1342.69,686.77 1343.25,686.77 1343.81,686.77 1344.37,686.77 1344.93,686.77 1345.49,686.77 1346.05,686.77 1346.61,686.77 1347.17,686.77 1347.73,686.77 1348.29,686.77 1348.84,686.77 1349.4,686.77 1349.96,686.77 1350.52,686.77 1351.08,686.77 1351.64,686.77 1352.2,686.77 1352.76,686.77 1353.32,686.77 1353.88,686.77 1354.44,686.77 1355,686.77 1355.56,686.77 1356.12,686.77 1356.67,686.77 1357.23,686.77 1357.79,686.77 1358.35,686.77 1358.91,686.77 1359.47,686.77 1360.03,686.77 1360.59,686.77 1361.15,686.77 1361.71,686.77 1362.27,686.77 1362.83,686.77 1363.39,686.77 1363.94,686.77 1364.5,686.77 1365.06,686.77 1365.62,686.77 1366.18,686.77 1366.74,686.77 1367.3,686.77 1367.86,686.77 1368.42,686.77 1368.98,686.77 1369.54,686.77 1370.1,686.77 1370.66,686.77 1371.21,686.77 1371.77,686.77 1372.33,686.77 1372.89,686.77 1373.45,686.77 1374.01,686.77 1374.57,686.77 1375.13,686.77 1375.69,686.77 1376.25,686.77 1376.81,686.77 1377.37,686.77 1377.93,686.77 1378.49,686.77 1379.04,686.77 1379.6,686.77 1380.16,686.77 1380.72,686.77 1381.28,686.77 1381.84,686.77 1382.4,686.77 1382.96,686.77 1383.52,686.77 1384.08,686.77 1384.64,686.77 1385.2,686.77 1385.76,686.77 1386.31,686.77 1386.87,686.77 1387.43,686.77 1387.99,686.77 1388.55,686.77 1389.11,686.77 1389.67,686.77 1390.23,686.77 1390.79,686.77 1391.35,686.77 1391.91,686.77 1392.47,686.77 1393.03,686.77 1393.58,686.77 1394.14,686.77 1394.7,686.77 1395.26,686.77 1395.82,686.77 1396.38,686.77 1396.94,686.77 1397.5,686.77 1398.06,686.77 1398.62,686.77 1399.18,686.77 1399.74,686.77 1400.3,686.77 1400.86,686.77 1401.41,686.77 1401.97,686.77 1402.53,686.77 1403.09,686.77 1403.65,686.77 1404.21,686.77 1404.77,686.77 1405.33,686.77 1405.89,686.77 1406.45,686.77 1407.01,686.77 1407.57,686.77 1408.13,686.77 1408.68,686.77 1409.24,686.77 1409.8,686.77 1410.36,686.77 1410.92,686.77 1411.48,686.77 1412.04,686.77 1412.6,686.77 1413.16,686.77 1413.72,686.77 1414.28,686.77 1414.84,686.77 1415.4,686.77 1415.95,686.77 1416.51,686.77 1417.07,686.77 1417.63,686.77 1418.19,686.77 1418.75,686.77 1419.31,686.77 1419.87,686.77 1420.43,686.77 1420.99,686.77 1421.55,686.77 1422.11,686.77 1422.67,686.77 1423.23,686.77 1423.78,686.77 1424.34,686.77 1424.9,686.77 1425.46,686.77 1426.02,686.77 1426.58,686.77 1427.14,686.77 1427.7,686.77 1428.26,686.77 1428.82,686.77 1429.38,686.77 1429.94,686.77 1430.5,686.77 1431.05,686.77 1431.61,686.77 1432.17,686.77 1432.73,686.77 1433.29,686.77 1433.85,686.77 1434.41,686.77 1434.97,686.77 1435.53,686.77 1436.09,686.77 1436.65,686.77 1437.21,686.77 1437.77,686.77 1438.33,686.77 1438.88,686.77 1439.44,686.77 1440,686.77 1440.56,686.77 1441.12,686.77 1441.68,686.77 1442.24,686.77 1442.8,686.77 1443.36,686.77 1443.92,686.77 1444.48,686.77 1445.04,686.77 1445.6,686.77 1446.15,686.77 1446.71,686.77 1447.27,686.77 1447.83,686.77 1448.39,686.77 1448.95,686.77 1449.51,686.77 1450.07,686.77 1450.63,686.77 1451.19,686.77 1451.75,686.77 1452.31,686.77 1452.87,686.77 1453.42,686.77 1453.98,686.77 1454.54,686.77 1455.1,686.77 1455.66,686.77 1456.22,686.77 1456.78,686.77 1457.34,686.77 1457.9,686.77 1458.46,686.77 1459.02,686.77 1459.58,686.77 1460.14,686.77 1460.7,686.77 1461.25,686.77 1461.81,686.77 1462.37,686.77 1462.93,686.77 1463.49,686.77 1464.05,686.77 1464.61,686.77 1465.17,686.77 1465.73,686.77 1466.29,686.77 1466.85,686.77 1467.41,686.77 1467.97,686.77 1468.52,686.77 1469.08,686.77 1469.64,686.77 1470.2,686.77 1470.76,686.77 1471.32,686.77 1471.88,686.77 1472.44,686.77 1473,686.77 1473.56,686.77 1474.12,686.77 1474.68,686.77 1475.24,686.77 1475.79,686.77 1476.35,686.77 1476.91,686.77 1477.47,686.77 1478.03,686.77 1478.59,686.77 1479.15,686.77 1479.71,686.77 1480.27,686.77 1480.83,686.77 1481.39,686.77 1481.95,686.77 1482.51,686.77 1483.07,686.77 1483.62,686.77 1484.18,686.77 1484.74,686.77 1485.3,686.77 1485.86,686.77 1486.42,686.77 1486.98,686.77 1487.54,686.77 1488.1,686.77 1488.66,686.77 1489.22,686.77 1489.78,686.77 1490.34,686.77 1490.89,686.77 1491.45,686.77 1492.01,686.77 1492.57,686.77 1493.13,686.77 1493.69,686.77 1494.25,686.77 1494.81,686.77 1495.37,686.77 1495.93,686.77 1496.49,686.77 1497.05,686.77 1497.61,686.77 1498.16,686.77 1498.72,686.77 1499.28,686.77 1499.84,686.77 1500.4,686.77 1500.96,686.77 1501.52,686.77 1502.08,686.77 1502.64,686.77 1503.2,686.77 1503.76,686.77 1504.32,686.77 1504.88,686.77 1505.44,686.77 1505.99,686.77 1506.55,686.77 1507.11,686.77 1507.67,686.77 1508.23,686.77 1508.79,686.77 1509.35,686.77 1509.91,686.77 1510.47,686.77 1511.03,686.77 1511.59,686.77 1512.15,686.77 1512.71,686.77 1513.26,686.77 1513.82,686.77 1514.38,686.77 1514.94,686.77 1515.5,686.77 1516.06,686.77 1516.62,686.77 1517.18,686.77 1517.74,686.77 1518.3,686.77 1518.86,686.77 1519.42,686.77 1519.98,686.77 1520.53,686.77 1521.09,686.77 1521.65,686.77 1522.21,686.77 1522.77,686.77 1523.33,686.77 1523.89,686.77 1524.45,686.77 1525.01,686.77 1525.57,686.77 1526.13,686.77 1526.69,686.77 1527.25,686.77 1527.81,686.77 1528.36,686.77 1528.92,686.77 1529.48,686.77 1530.04,686.77 1530.6,686.77 1531.16,686.77 1531.72,686.77 1532.28,686.77 1532.84,686.77 1533.4,686.77 1533.96,686.77 1534.52,686.77 1535.08,686.77 1535.63,686.77 1536.19,686.77 1536.75,686.77 1537.31,686.77 1537.87,686.77 1538.43,686.77 1538.99,686.77 1539.55,686.77 1540.11,686.77 1540.67,686.77 1541.23,686.77 1541.79,686.77 1542.35,686.77 1542.9,686.77 1543.46,686.77 1544.02,686.77 1544.58,686.77 1545.14,686.77 1545.7,686.77 1546.26,686.77 1546.82,686.77 1547.38,686.77 1547.94,686.77 1548.5,686.77 1549.06,686.77 1549.62,686.77 1550.18,686.77 1550.73,686.77 1551.29,686.77 1551.85,686.77 1552.41,686.77 1552.97,686.77 1553.53,686.77 1554.09,686.77 1554.65,686.77 1555.21,686.77 1555.77,686.77 1556.33,686.77 1556.89,686.77 1557.45,686.77 1558,686.77 1558.56,686.77 1559.12,686.77 1559.68,686.77 1560.24,686.77 1560.8,686.77 1561.36,686.77 1561.92,686.77 1562.48,686.77 1563.04,686.77 1563.6,686.77 1564.16,686.77 1564.72,686.77 1565.28,686.77 1565.83,686.77 1566.39,686.77 1566.95,686.77 1567.51,686.77 1568.07,686.77 1568.63,686.77 1569.19,686.77 1569.75,686.77 1570.31,686.77 1570.87,686.77 1571.43,686.77 1571.99,686.77 1572.55,686.77 1573.1,686.77 1573.66,686.77 1574.22,686.77 1574.78,686.77 1575.34,686.77 1575.9,686.77 1576.46,686.77 1577.02,686.77 1577.58,686.77 1578.14,686.77 1578.7,686.77 1579.26,686.77 1579.82,686.77 1580.37,686.77 1580.93,686.77 1581.49,686.77 1582.05,686.77 1582.61,686.77 1583.17,686.77 1583.73,686.77 1584.29,686.77 1584.85,686.77 1585.41,686.77 1585.97,686.77 1586.53,686.77 1587.09,686.77 1587.65,686.77 1588.2,686.77 1588.76,686.77 1589.32,686.77 1589.88,686.77 1590.44,686.77 1591,686.77 1591.56,686.77 1592.12,686.77 1592.68,686.77 1593.24,686.77 1593.8,686.77 1594.36,686.77 1594.92,686.77 1595.47,686.77 1596.03,686.77 1596.59,686.77 1597.15,686.77 1597.71,686.77 1598.27,686.77 1598.83,686.77 1599.39,686.77 1599.95,686.77 1600.51,686.77 1601.07,686.77 1601.63,686.77 1602.19,686.77 1602.74,686.77 1603.3,686.77 1603.86,686.77 1604.42,686.77 1604.98,686.77 1605.54,686.77 1606.1,686.77 1606.66,686.77 1607.22,686.77 1607.78,686.77 1608.34,686.77 1608.9,686.77 1609.46,686.77 1610.02,686.77 1610.57,686.77 1611.13,686.77 1611.69,686.77 1612.25,686.77 1612.81,686.77 1613.37,686.77 1613.93,686.77 1614.49,686.77 1615.05,686.77 1615.61,686.77 1616.17,686.77 1616.73,686.77 1617.29,686.77 1617.84,686.77 1618.4,686.77 1618.96,686.77 1619.52,686.77 1620.08,686.77 1620.64,686.77 1621.2,686.77 1621.76,686.77 1622.32,686.77 1622.88,686.77 1623.44,686.77 1624,686.77 1624.56,686.77 1625.11,686.77 1625.67,686.77 1626.23,686.77 1626.79,686.77 1627.35,686.77 1627.91,686.77 1628.47,686.77 1629.03,686.77 1629.59,686.77 1630.15,686.77 1630.71,686.77 1631.27,686.77 1631.83,686.77 1632.39,686.77 1632.94,686.77 1633.5,686.77 1634.06,686.77 1634.62,686.77 1635.18,686.77 1635.74,686.77 1636.3,686.77 1636.86,686.77 1637.42,686.77 1637.98,686.77 1638.54,686.77 1639.1,686.77 1639.66,686.77 1640.21,686.77 1640.77,686.77 1641.33,686.77 1641.89,686.77 1642.45,686.77 1643.01,686.77 1643.57,686.77 1644.13,686.77 1644.69,686.77 1645.25,686.77 1645.81,686.77 1646.37,686.77 1646.93,686.77 1647.48,686.77 1648.04,686.77 1648.6,686.77 1649.16,686.77 1649.72,686.77 1650.28,686.77 1650.84,686.77 1651.4,686.77 1651.96,686.77 1652.52,686.77 1653.08,686.77 1653.64,686.77 1654.2,686.77 1654.76,686.77 1655.31,686.77 1655.87,686.77 1656.43,686.77 1656.99,686.77 1657.55,686.77 1658.11,686.77 1658.67,686.77 1659.23,686.77 1659.79,686.77 1660.35,686.77 1660.91,686.77 1661.47,686.77 1662.03,686.77 1662.58,686.77 1663.14,686.77 1663.7,686.77 1664.26,686.77 1664.82,686.77 1665.38,686.77 1665.94,686.77 1666.5,686.77 1667.06,686.77 1667.62,686.77 1668.18,686.77 1668.74,686.77 1669.3,686.77 1669.85,686.77 1670.41,686.77 1670.97,686.77 1671.53,686.77 1672.09,686.77 1672.65,686.77 1673.21,686.77 1673.77,686.77 1674.33,686.77 1674.89,686.77 1675.45,686.77 1676.01,686.77 1676.57,686.77 1677.13,686.77 1677.68,686.77 1678.24,686.77 1678.8,686.77 1679.36,686.77 1679.92,686.77 1680.48,686.77 1681.04,686.77 1681.6,686.77 1682.16,686.77 1682.72,686.77 1683.28,686.77 1683.84,686.77 1684.4,686.77 1684.95,686.77 1685.51,686.77 1686.07,686.77 1686.63,686.77 1687.19,686.77 1687.75,686.77 1688.31,686.77 1688.87,686.77 1689.43,686.77 1689.99,686.77 1690.55,686.77 1691.11,686.77 1691.67,686.77 1692.23,686.77 1692.78,686.77 1693.34,686.77 1693.9,686.77 1694.46,686.77 1695.02,686.77 1695.58,686.77 1696.14,686.77 1696.7,686.77 1697.26,686.77 1697.82,686.77 1698.38,686.77 1698.94,686.77 1699.5,686.77 1700.05,686.77 1700.61,686.77 1701.17,686.77 1701.73,686.77 1702.29,686.77 1702.85,686.77 1703.41,686.77 1703.97,686.77 1704.53,686.77 1705.09,686.77 1705.65,686.77 1706.21,686.77 1706.77,686.77 1707.32,686.77 1707.88,686.77 1708.44,686.77 1709,686.77 1709.56,686.77 1710.12,686.77 1710.68,686.77 1711.24,686.77 1711.8,686.77 1712.36,686.77 1712.92,686.77 1713.48,686.77 1714.04,686.77 1714.6,686.77 1715.15,686.77 1715.71,686.77 1716.27,686.77 1716.83,686.77 1717.39,686.77 1717.95,686.77 1718.51,686.77 1719.07,686.77 1719.63,686.77 1720.19,686.77 1720.75,686.77 1721.31,686.77 1721.87,686.77 1722.42,686.77 1722.98,686.77 1723.54,686.77 1724.1,686.77 1724.66,686.77 1725.22,686.77 1725.78,686.77 1726.34,686.77 1726.9,686.77 1727.46,686.77 1728.02,686.77 1728.58,686.77 1729.14,686.77 1729.69,686.77 1730.25,686.77 1730.81,686.77 1731.37,686.77 1731.93,686.77 1732.49,686.77 1733.05,686.77 1733.61,686.77 1734.17,686.77 1734.73,686.77 1735.29,686.77 1735.85,686.77 1736.41,686.77 1736.97,686.77 1737.52,686.77 1738.08,686.77 1738.64,686.77 1739.2,686.77 1739.76,686.77 1740.32,686.77 1740.88,686.77 1741.44,686.77 1742,686.77 1742.56,686.77 1743.12,686.77 1743.68,686.77 1744.24,686.77 1744.79,686.77 1745.35,686.77 1745.91,686.77 1746.47,686.77 1747.03,686.77 1747.59,686.77 1748.15,686.77 1748.71,686.77 1749.27,686.77 1749.83,686.77 1750.39,686.77 1750.95,686.77 1751.51,686.77 1752.06,686.77 1752.62,686.77 1753.18,686.77 1753.74,686.77 1754.3,686.77 1754.86,686.77 1755.42,686.77 1755.98,686.77 1756.54,686.77 1757.1,686.77 1757.66,686.77 1758.22,686.77 1758.78,686.77 1759.34,686.77 1759.89,686.77 1760.45,686.77 1761.01,686.77 1761.57,686.77 1762.13,686.77 1762.69,686.77 1763.25,686.77 1763.81,686.77 1764.37,686.77 1764.93,686.77 1765.49,686.77 1766.05,686.77 1766.61,686.77 1767.16,686.77 1767.72,686.77 1768.28,686.77 1768.84,686.77 1769.4,686.77 1769.96,686.77 1770.52,686.77 1771.08,686.77 1771.64,686.77 1772.2,686.77 1772.76,686.77 1773.32,686.77 1773.88,686.77 1774.43,686.77 1774.99,686.77 1775.55,686.77 1776.11,686.77 1776.67,686.77 1777.23,686.77 1777.79,686.77 1778.35,686.77 1778.91,686.77 1779.47,686.77 1780.03,686.77 1780.59,686.77 1781.15,686.77 1781.71,686.77 1782.26,686.77 1782.82,686.77 1783.38,686.77 1783.94,686.77 1784.5,686.77 1785.06,686.77 1785.62,686.77 1786.18,686.77 1786.74,686.77 1787.3,686.77 1787.86,686.77 1788.42,686.77 1788.98,686.77 1789.53,686.77 1790.09,686.77 1790.65,686.77 1791.21,686.77 1791.77,686.77 1792.33,686.77 1792.89,686.77 1793.45,686.77 1794.01,686.77 1794.57,686.77 1795.13,686.77 1795.69,686.77 1796.25,686.77 1796.8,686.77 1797.36,686.77 1797.92,686.77 1798.48,686.77 1799.04,686.77 1799.6,686.77 1800.16,686.77 1800.72,686.77 1801.28,686.77 1801.84,686.77 1802.4,686.77 1802.96,686.77 1803.52,686.77 1804.08,686.77 1804.63,686.77 1805.19,686.77 1805.75,686.77 1806.31,686.77 1806.87,686.77 1807.43,686.77 1807.99,686.77 1808.55,686.77 1809.11,686.77 1809.67,686.77 1810.23,686.77 1810.79,686.77 1811.35,686.77 1811.9,686.77 1812.46,686.77 1813.02,686.77 1813.58,686.77 1814.14,686.77 1814.7,686.77 1815.26,686.77 1815.82,686.77 1816.38,686.77 1816.94,686.77 1817.5,686.77 1818.06,686.77 1818.62,686.77 1819.18,686.77 1819.73,686.77 1820.29,686.77 1820.85,686.77 1821.41,686.77 1821.97,686.77 1822.53,686.77 1823.09,686.77 1823.65,686.77 1824.21,686.77 1824.77,686.77 1825.33,686.77 1825.89,686.77 1826.45,686.77 1827,686.77 1827.56,686.77 1828.12,686.77 1828.68,686.77 1829.24,686.77 1829.8,686.77 1830.36,686.77 1830.92,686.77 1831.48,686.77 1832.04,686.77 1832.6,686.77 1833.16,686.77 1833.72,686.77 1834.27,686.77 1834.83,686.77 1835.39,686.77 1835.95,686.77 1836.51,686.77 1837.07,686.77 1837.63,686.77 1838.19,686.77 \"/>\n<path clip-path=\"url(#clip123)\" d=\"M720.247 684.097 L720.806 684.097 L721.365 684.097 L721.924 684.097 L722.484 684.097 L723.043 684.097 L723.602 684.097 L724.161 684.097 L724.721 684.097 L725.28 684.097 L725.839 684.097 L726.398 684.097 L726.958 684.097 L727.517 684.097 L728.076 684.097 L728.635 684.097 L729.195 684.097 L729.754 684.097 L730.313 684.097 L730.872 684.097 L731.432 684.097 L731.991 684.097 L732.55 684.097 L733.109 684.097 L733.669 684.097 L734.228 684.097 L734.787 684.097 L735.346 684.097 L735.906 684.097 L736.465 684.097 L737.024 684.097 L737.583 684.097 L738.143 684.097 L738.702 684.097 L739.261 684.097 L739.82 684.097 L740.38 684.097 L740.939 684.097 L741.498 684.097 L742.057 684.097 L742.617 684.097 L743.176 684.097 L743.735 684.097 L744.294 684.097 L744.854 684.097 L745.413 684.097 L745.972 684.097 L746.531 684.097 L747.091 684.097 L747.65 684.097 L748.209 684.097 L748.768 684.097 L749.328 684.097 L749.887 684.097 L750.446 684.097 L751.005 684.097 L751.565 684.097 L752.124 684.097 L752.683 684.097 L753.242 684.097 L753.802 684.097 L754.361 684.097 L754.92 684.097 L755.479 684.097 L756.039 684.097 L756.598 684.097 L757.157 684.097 L757.716 684.097 L758.276 684.097 L758.835 684.097 L759.394 684.097 L759.953 684.097 L760.513 684.097 L761.072 684.097 L761.631 684.097 L762.19 684.097 L762.75 684.097 L763.309 684.097 L763.868 684.097 L764.427 684.097 L764.987 684.097 L765.546 684.097 L766.105 684.097 L766.664 684.097 L767.224 684.097 L767.783 684.097 L768.342 684.097 L768.901 684.097 L769.461 684.097 L770.02 684.097 L770.579 684.097 L771.138 684.097 L771.698 684.097 L772.257 684.097 L772.816 684.097 L773.375 684.097 L773.935 684.097 L774.494 684.097 L775.053 684.097 L775.612 684.097 L776.172 684.097 L776.731 684.097 L777.29 684.097 L777.849 684.097 L778.409 684.097 L778.968 684.097 L779.527 684.097 L780.086 684.097 L780.646 684.097 L781.205 684.097 L781.764 684.097 L782.323 684.097 L782.883 684.097 L783.442 684.097 L784.001 684.097 L784.56 684.097 L785.12 684.097 L785.679 684.097 L786.238 684.097 L786.797 684.097 L787.357 684.097 L787.916 684.097 L788.475 684.097 L789.034 684.097 L789.594 684.097 L790.153 684.097 L790.712 684.097 L791.271 684.097 L791.831 684.097 L792.39 684.097 L792.949 684.097 L793.508 684.097 L794.068 684.097 L794.627 684.097 L795.186 684.097 L795.745 684.097 L796.305 684.097 L796.864 684.097 L797.423 684.097 L797.982 684.097 L798.542 684.097 L799.101 684.097 L799.66 684.097 L800.219 684.097 L800.779 684.097 L801.338 684.097 L801.897 684.097 L802.456 684.097 L803.016 684.097 L803.575 684.097 L804.134 684.097 L804.693 684.097 L805.253 684.097 L805.812 684.097 L806.371 684.097 L806.931 684.097 L807.49 684.097 L808.049 684.097 L808.608 684.097 L809.168 684.097 L809.727 684.097 L810.286 684.097 L810.845 684.097 L811.405 684.097 L811.964 684.097 L812.523 684.097 L813.082 684.097 L813.642 684.097 L814.201 684.097 L814.76 684.097 L815.319 684.097 L815.879 684.097 L816.438 684.097 L816.997 684.097 L817.556 684.097 L818.116 684.097 L818.675 684.097 L819.234 684.097 L819.793 684.097 L820.353 684.097 L820.912 684.097 L821.471 684.097 L822.03 684.097 L822.59 684.097 L823.149 684.097 L823.708 684.097 L824.267 684.097 L824.827 684.097 L825.386 684.097 L825.945 684.097 L826.504 684.097 L827.064 684.097 L827.623 684.097 L828.182 684.097 L828.741 684.097 L829.301 684.097 L829.86 684.097 L830.419 684.097 L830.978 684.097 L831.538 684.097 L832.097 684.097 L832.656 684.097 L833.215 684.097 L833.775 684.097 L834.334 684.097 L834.893 684.097 L835.452 684.097 L836.012 684.097 L836.571 684.097 L837.13 684.097 L837.689 684.097 L838.249 684.097 L838.808 684.097 L839.367 684.097 L839.926 684.097 L840.486 684.097 L841.045 684.097 L841.604 684.097 L842.163 684.097 L842.723 684.097 L843.282 684.097 L843.841 684.097 L844.4 684.097 L844.96 684.097 L845.519 684.097 L846.078 684.097 L846.637 684.097 L847.197 684.097 L847.756 684.097 L848.315 684.097 L848.874 684.097 L849.434 684.097 L849.993 684.097 L850.552 684.097 L851.111 684.097 L851.671 684.097 L852.23 684.097 L852.789 684.097 L853.348 684.097 L853.908 684.097 L854.467 684.097 L855.026 684.097 L855.585 684.097 L856.145 684.097 L856.704 684.097 L857.263 684.097 L857.822 684.097 L858.382 684.097 L858.941 684.097 L859.5 684.097 L860.059 684.097 L860.619 684.097 L861.178 684.097 L861.737 684.097 L862.296 684.097 L862.856 684.097 L863.415 684.097 L863.974 684.097 L864.533 684.097 L865.093 684.097 L865.652 684.097 L866.211 684.097 L866.77 684.097 L867.33 684.097 L867.889 684.097 L868.448 684.097 L869.007 684.097 L869.567 684.097 L870.126 684.097 L870.685 684.097 L871.244 684.097 L871.804 684.097 L872.363 684.097 L872.922 684.097 L873.481 684.097 L874.041 684.097 L874.6 684.097 L875.159 684.097 L875.718 684.097 L876.278 684.097 L876.837 684.097 L877.396 684.097 L877.955 684.097 L878.515 684.097 L879.074 684.097 L879.633 684.097 L880.192 684.097 L880.752 684.097 L881.311 684.097 L881.87 684.097 L882.429 684.097 L882.989 684.097 L883.548 684.097 L884.107 684.097 L884.666 684.097 L885.226 684.097 L885.785 684.097 L886.344 684.097 L886.903 684.097 L887.463 684.097 L888.022 684.097 L888.581 684.097 L889.14 684.097 L889.7 684.097 L890.259 684.097 L890.818 684.097 L891.377 684.097 L891.937 684.097 L892.496 684.097 L893.055 684.097 L893.614 684.097 L894.174 684.097 L894.733 684.097 L895.292 684.097 L895.851 684.097 L896.411 684.097 L896.97 684.097 L897.529 684.097 L898.088 684.097 L898.648 684.097 L899.207 684.097 L899.766 684.097 L900.325 684.097 L900.885 684.097 L901.444 684.097 L902.003 684.097 L902.562 684.097 L903.122 684.097 L903.681 684.097 L904.24 684.097 L904.799 684.097 L905.359 684.097 L905.918 684.097 L906.477 684.097 L907.036 684.097 L907.596 684.097 L908.155 684.097 L908.714 684.097 L909.273 684.097 L909.833 684.097 L910.392 684.097 L910.951 684.097 L911.51 684.097 L912.07 684.097 L912.629 684.097 L913.188 684.097 L913.747 684.097 L914.307 684.097 L914.866 684.097 L915.425 684.097 L915.984 684.097 L916.544 684.097 L917.103 684.097 L917.662 684.097 L918.221 684.097 L918.781 684.097 L919.34 684.097 L919.899 684.097 L920.458 684.097 L921.018 684.097 L921.577 684.097 L922.136 684.097 L922.695 684.097 L923.255 684.097 L923.814 684.097 L924.373 684.097 L924.932 684.097 L925.492 684.097 L926.051 684.097 L926.61 684.097 L927.169 684.097 L927.729 684.097 L928.288 684.097 L928.847 684.097 L929.406 684.097 L929.966 684.097 L930.525 684.097 L931.084 684.097 L931.644 684.097 L932.203 684.097 L932.762 684.097 L933.321 684.097 L933.881 684.097 L934.44 684.097 L934.999 684.097 L935.558 684.097 L936.118 684.097 L936.677 684.097 L937.236 684.097 L937.795 684.097 L938.355 684.097 L938.914 684.097 L939.473 684.097 L940.032 684.097 L940.592 684.097 L941.151 684.097 L941.71 684.097 L942.269 684.097 L942.829 684.097 L943.388 684.097 L943.947 684.097 L944.506 684.097 L945.066 684.097 L945.625 684.097 L946.184 684.097 L946.743 684.097 L947.303 684.097 L947.862 684.097 L948.421 684.097 L948.98 684.097 L949.54 684.097 L950.099 684.097 L950.658 684.097 L951.217 684.097 L951.777 684.097 L952.336 684.097 L952.895 684.097 L953.454 684.097 L954.014 684.097 L954.573 684.097 L955.132 684.097 L955.691 684.097 L956.251 684.097 L956.81 684.097 L957.369 684.097 L957.928 684.097 L958.488 684.097 L959.047 684.097 L959.606 684.097 L960.165 684.097 L960.725 684.097 L961.284 684.097 L961.843 684.097 L962.402 684.097 L962.962 684.097 L963.521 684.097 L964.08 684.097 L964.639 684.097 L965.199 684.097 L965.758 684.097 L966.317 684.097 L966.876 684.097 L967.436 684.097 L967.995 684.097 L968.554 684.097 L969.113 684.097 L969.673 684.097 L970.232 684.097 L970.791 684.097 L971.35 684.097 L971.91 684.097 L972.469 684.097 L973.028 684.097 L973.587 684.097 L974.147 684.097 L974.706 684.097 L975.265 684.097 L975.824 684.097 L976.384 684.097 L976.943 684.097 L977.502 684.097 L978.061 684.097 L978.621 684.097 L979.18 684.097 L979.739 684.097 L980.298 684.097 L980.858 684.097 L981.417 684.097 L981.976 684.097 L982.535 684.097 L983.095 684.097 L983.654 684.097 L984.213 684.097 L984.772 684.097 L985.332 684.097 L985.891 684.097 L986.45 684.097 L987.009 684.097 L987.569 684.097 L988.128 684.097 L988.687 684.097 L989.246 684.097 L989.806 684.097 L990.365 684.097 L990.924 684.097 L991.483 684.097 L992.043 684.097 L992.602 684.097 L993.161 684.097 L993.72 684.097 L994.28 684.097 L994.839 684.097 L995.398 684.097 L995.957 684.097 L996.517 684.097 L997.076 684.097 L997.635 684.097 L998.194 684.097 L998.754 684.097 L999.313 684.097 L999.872 684.097 L1000.43 684.097 L1000.99 684.097 L1001.55 684.097 L1002.11 684.097 L1002.67 684.097 L1003.23 684.097 L1003.79 684.097 L1004.35 684.097 L1004.91 684.097 L1005.46 684.097 L1006.02 684.097 L1006.58 684.097 L1007.14 684.097 L1007.7 684.097 L1008.26 684.097 L1008.82 684.097 L1009.38 684.097 L1009.94 684.097 L1010.5 684.097 L1011.06 684.097 L1011.62 684.097 L1012.18 684.097 L1012.73 684.097 L1013.29 684.097 L1013.85 684.097 L1014.41 684.097 L1014.97 684.097 L1015.53 684.097 L1016.09 684.097 L1016.65 684.097 L1017.21 684.097 L1017.77 684.097 L1018.33 684.097 L1018.89 684.097 L1019.45 684.097 L1020.01 684.097 L1020.56 684.097 L1021.12 684.097 L1021.68 684.097 L1022.24 684.097 L1022.8 684.097 L1023.36 684.097 L1023.92 684.097 L1024.48 684.097 L1025.04 684.097 L1025.6 684.097 L1026.16 684.097 L1026.72 684.097 L1027.28 684.097 L1027.83 684.097 L1028.39 684.097 L1028.95 684.097 L1029.51 684.097 L1030.07 684.097 L1030.63 684.097 L1031.19 684.097 L1031.75 684.097 L1032.31 684.097 L1032.87 684.097 L1033.43 684.097 L1033.99 684.097 L1034.55 684.097 L1035.1 684.097 L1035.66 684.097 L1036.22 684.097 L1036.78 684.097 L1037.34 684.097 L1037.9 684.097 L1038.46 684.097 L1039.02 684.097 L1039.58 684.097 L1040.14 684.097 L1040.7 684.097 L1041.26 684.097 L1041.82 684.097 L1042.38 684.097 L1042.93 684.097 L1043.49 684.097 L1044.05 684.097 L1044.61 684.097 L1045.17 684.097 L1045.73 684.097 L1046.29 684.097 L1046.85 684.097 L1047.41 684.097 L1047.97 684.097 L1048.53 684.097 L1049.09 684.097 L1049.65 684.097 L1050.2 684.097 L1050.76 684.097 L1051.32 684.097 L1051.88 684.097 L1052.44 684.097 L1053 684.097 L1053.56 684.097 L1054.12 684.097 L1054.68 684.097 L1055.24 684.097 L1055.8 684.097 L1056.36 684.097 L1056.92 684.097 L1057.48 684.097 L1058.03 684.097 L1058.59 684.097 L1059.15 684.097 L1059.71 684.097 L1060.27 684.097 L1060.83 684.097 L1061.39 684.097 L1061.95 684.097 L1062.51 684.097 L1063.07 684.097 L1063.63 684.097 L1064.19 684.097 L1064.75 684.097 L1065.3 684.097 L1065.86 684.097 L1066.42 684.097 L1066.98 684.097 L1067.54 684.097 L1068.1 684.097 L1068.66 684.097 L1069.22 684.097 L1069.78 684.097 L1070.34 684.097 L1070.9 684.097 L1071.46 684.097 L1072.02 684.097 L1072.57 684.097 L1073.13 684.097 L1073.69 684.097 L1074.25 684.097 L1074.81 684.097 L1075.37 684.097 L1075.93 684.097 L1076.49 684.097 L1077.05 684.097 L1077.61 684.097 L1078.17 684.097 L1078.73 684.097 L1079.29 684.097 L1079.85 684.097 L1080.4 684.097 L1080.96 684.097 L1081.52 684.097 L1082.08 684.097 L1082.64 684.097 L1083.2 684.097 L1083.76 684.097 L1084.32 684.097 L1084.88 684.097 L1085.44 684.097 L1086 684.097 L1086.56 684.097 L1087.12 684.097 L1087.67 684.097 L1088.23 684.097 L1088.79 684.097 L1089.35 684.097 L1089.91 684.097 L1090.47 684.097 L1091.03 684.097 L1091.59 684.097 L1092.15 684.097 L1092.71 684.097 L1093.27 684.097 L1093.83 684.097 L1094.39 684.097 L1094.94 684.097 L1095.5 684.097 L1096.06 684.097 L1096.62 684.097 L1097.18 684.097 L1097.74 684.097 L1098.3 684.097 L1098.86 684.097 L1099.42 684.097 L1099.98 684.097 L1100.54 684.097 L1101.1 684.097 L1101.66 684.097 L1102.22 684.097 L1102.77 684.097 L1103.33 684.097 L1103.89 684.097 L1104.45 684.097 L1105.01 684.097 L1105.57 684.097 L1106.13 684.097 L1106.69 684.097 L1107.25 684.097 L1107.81 684.097 L1108.37 684.097 L1108.93 684.097 L1109.49 684.097 L1110.04 684.097 L1110.6 684.097 L1111.16 684.097 L1111.72 684.097 L1112.28 684.097 L1112.84 684.097 L1113.4 684.097 L1113.96 684.097 L1114.52 684.097 L1115.08 684.097 L1115.64 684.097 L1116.2 684.097 L1116.76 684.097 L1117.31 684.097 L1117.87 684.097 L1118.43 684.097 L1118.99 684.097 L1119.55 684.097 L1120.11 684.097 L1120.67 684.097 L1121.23 684.097 L1121.79 684.097 L1122.35 684.097 L1122.91 684.097 L1123.47 684.097 L1124.03 684.097 L1124.59 684.097 L1125.14 684.097 L1125.7 684.097 L1126.26 684.097 L1126.82 684.097 L1127.38 684.097 L1127.94 684.097 L1128.5 684.097 L1129.06 684.097 L1129.62 684.097 L1130.18 684.097 L1130.74 684.097 L1131.3 684.097 L1131.86 684.097 L1132.41 684.097 L1132.97 684.097 L1133.53 684.097 L1134.09 684.097 L1134.65 684.097 L1135.21 684.097 L1135.77 684.097 L1136.33 684.097 L1136.89 684.097 L1137.45 684.097 L1138.01 684.097 L1138.57 684.097 L1139.13 684.097 L1139.68 684.097 L1140.24 684.097 L1140.8 684.097 L1141.36 684.097 L1141.92 684.097 L1142.48 684.097 L1143.04 684.097 L1143.6 684.097 L1144.16 684.097 L1144.72 684.097 L1145.28 684.097 L1145.84 684.097 L1146.4 684.097 L1146.96 684.097 L1147.51 684.097 L1148.07 684.097 L1148.63 684.097 L1149.19 684.097 L1149.75 684.097 L1150.31 684.097 L1150.87 684.097 L1151.43 684.097 L1151.99 684.097 L1152.55 684.097 L1153.11 684.097 L1153.67 684.097 L1154.23 684.097 L1154.78 684.097 L1155.34 684.097 L1155.9 684.097 L1156.46 684.097 L1157.02 684.097 L1157.58 684.097 L1158.14 684.097 L1158.7 684.097 L1159.26 684.097 L1159.82 684.097 L1160.38 684.097 L1160.94 684.097 L1161.5 684.097 L1162.05 684.097 L1162.61 684.097 L1163.17 684.097 L1163.73 684.097 L1164.29 684.097 L1164.85 684.097 L1165.41 684.097 L1165.97 684.097 L1166.53 684.097 L1167.09 684.097 L1167.65 684.097 L1168.21 684.097 L1168.77 684.097 L1169.33 684.097 L1169.88 684.097 L1170.44 684.097 L1171 684.097 L1171.56 684.097 L1172.12 684.097 L1172.68 684.097 L1173.24 684.097 L1173.8 684.097 L1174.36 684.097 L1174.92 684.097 L1175.48 684.097 L1176.04 684.097 L1176.6 684.097 L1177.15 684.097 L1177.71 684.097 L1178.27 684.097 L1178.83 684.097 L1179.39 684.097 L1179.95 684.097 L1180.51 684.097 L1181.07 684.097 L1181.63 684.097 L1182.19 684.097 L1182.75 684.097 L1183.31 684.097 L1183.87 684.097 L1184.43 684.097 L1184.98 684.097 L1185.54 684.097 L1186.1 684.097 L1186.66 684.097 L1187.22 684.097 L1187.78 684.097 L1188.34 684.097 L1188.9 684.097 L1189.46 684.097 L1190.02 684.097 L1190.58 684.097 L1191.14 684.097 L1191.7 684.097 L1192.25 684.097 L1192.81 684.097 L1193.37 684.097 L1193.93 684.097 L1194.49 684.097 L1195.05 684.097 L1195.61 684.097 L1196.17 684.097 L1196.73 684.097 L1197.29 684.097 L1197.85 684.097 L1198.41 684.097 L1198.97 684.097 L1199.52 684.097 L1200.08 684.097 L1200.64 684.097 L1201.2 684.097 L1201.76 684.097 L1202.32 684.097 L1202.88 684.097 L1203.44 684.097 L1204 684.097 L1204.56 684.097 L1205.12 684.097 L1205.68 684.097 L1206.24 684.097 L1206.8 684.097 L1207.35 684.097 L1207.91 684.097 L1208.47 684.097 L1209.03 684.097 L1209.59 684.097 L1210.15 684.097 L1210.71 684.097 L1211.27 684.097 L1211.83 684.097 L1212.39 684.097 L1212.95 684.097 L1213.51 684.097 L1214.07 684.097 L1214.62 684.097 L1215.18 684.097 L1215.74 684.097 L1216.3 684.097 L1216.86 684.097 L1217.42 684.097 L1217.98 684.097 L1218.54 684.097 L1219.1 684.097 L1219.66 684.097 L1220.22 684.097 L1220.78 684.097 L1221.34 684.097 L1221.89 684.097 L1222.45 684.097 L1223.01 684.097 L1223.57 684.097 L1224.13 684.097 L1224.69 684.097 L1225.25 684.097 L1225.81 684.097 L1226.37 684.097 L1226.93 684.097 L1227.49 684.097 L1228.05 684.097 L1228.61 684.097 L1229.17 684.097 L1229.72 684.097 L1230.28 684.097 L1230.84 684.097 L1231.4 684.097 L1231.96 684.097 L1232.52 684.097 L1233.08 684.097 L1233.64 684.097 L1234.2 684.097 L1234.76 684.097 L1235.32 684.097 L1235.88 684.097 L1236.44 684.097 L1236.99 684.097 L1237.55 684.097 L1238.11 684.097 L1238.67 684.097 L1239.23 684.097 L1239.79 684.097 L1240.35 684.097 L1240.91 684.097 L1241.47 684.097 L1242.03 684.097 L1242.59 684.097 L1243.15 684.097 L1243.71 684.097 L1244.26 684.097 L1244.82 684.097 L1245.38 684.097 L1245.94 684.097 L1246.5 684.097 L1247.06 684.097 L1247.62 684.097 L1248.18 684.097 L1248.74 684.097 L1249.3 684.097 L1249.86 684.097 L1250.42 684.097 L1250.98 684.097 L1251.54 684.097 L1252.09 684.097 L1252.65 684.097 L1253.21 684.097 L1253.77 684.097 L1254.33 684.097 L1254.89 684.097 L1255.45 684.097 L1256.01 684.097 L1256.57 684.097 L1257.13 684.097 L1257.69 684.097 L1258.25 684.097 L1258.81 684.097 L1259.36 684.097 L1259.92 684.097 L1260.48 684.097 L1261.04 684.097 L1261.6 684.097 L1262.16 684.097 L1262.72 684.097 L1263.28 684.097 L1263.84 684.097 L1264.4 684.097 L1264.96 684.097 L1265.52 684.097 L1266.08 684.097 L1266.63 684.097 L1267.19 684.097 L1267.75 684.097 L1268.31 684.097 L1268.87 684.097 L1269.43 684.097 L1269.99 684.097 L1270.55 684.097 L1271.11 684.097 L1271.67 684.097 L1272.23 684.097 L1272.79 684.097 L1273.35 684.097 L1273.91 684.097 L1274.46 684.097 L1275.02 684.097 L1275.58 684.097 L1276.14 684.097 L1276.7 684.097 L1277.26 684.097 L1277.82 684.097 L1278.38 684.097 L1278.94 684.097 L1279.5 684.097 L1280.06 684.097 L1280.62 684.097 L1281.18 684.097 L1281.73 684.097 L1282.29 684.097 L1282.85 684.097 L1283.41 684.097 L1283.97 684.097 L1284.53 684.097 L1285.09 684.097 L1285.65 684.097 L1286.21 684.097 L1286.77 684.097 L1287.33 684.097 L1287.89 684.097 L1288.45 684.097 L1289 684.097 L1289.56 684.097 L1290.12 684.097 L1290.68 684.097 L1291.24 684.097 L1291.8 684.097 L1292.36 684.097 L1292.92 684.097 L1293.48 684.097 L1294.04 684.097 L1294.6 684.097 L1295.16 684.097 L1295.72 684.097 L1296.28 684.097 L1296.83 684.097 L1297.39 684.097 L1297.95 684.097 L1298.51 684.097 L1299.07 684.097 L1299.63 684.097 L1300.19 684.097 L1300.75 684.097 L1301.31 684.097 L1301.87 684.097 L1302.43 684.097 L1302.99 684.097 L1303.55 684.097 L1304.1 684.097 L1304.66 684.097 L1305.22 684.097 L1305.78 684.097 L1306.34 684.097 L1306.9 684.097 L1307.46 684.097 L1308.02 684.097 L1308.58 684.097 L1309.14 684.097 L1309.7 684.097 L1310.26 684.097 L1310.82 684.097 L1311.38 684.097 L1311.93 684.097 L1312.49 684.097 L1313.05 684.097 L1313.61 684.097 L1314.17 684.097 L1314.73 684.097 L1315.29 684.097 L1315.85 684.097 L1316.41 684.097 L1316.97 684.097 L1317.53 684.097 L1318.09 684.097 L1318.65 684.097 L1319.2 684.097 L1319.76 684.097 L1320.32 684.097 L1320.88 684.097 L1321.44 684.097 L1322 684.097 L1322.56 684.097 L1323.12 684.097 L1323.68 684.097 L1324.24 684.097 L1324.8 684.097 L1325.36 684.097 L1325.92 684.097 L1326.47 684.097 L1327.03 684.097 L1327.59 684.097 L1328.15 684.097 L1328.71 684.097 L1329.27 684.097 L1329.83 684.097 L1330.39 684.097 L1330.95 684.097 L1331.51 684.097 L1332.07 684.097 L1332.63 684.097 L1333.19 684.097 L1333.75 684.097 L1334.3 684.097 L1334.86 684.097 L1335.42 684.097 L1335.98 684.097 L1336.54 684.097 L1337.1 684.097 L1337.66 684.097 L1338.22 684.097 L1338.78 684.097 L1339.34 684.097 L1339.9 684.097 L1340.46 684.097 L1341.02 684.097 L1341.57 684.097 L1342.13 684.097 L1342.69 684.097 L1343.25 684.097 L1343.81 684.097 L1344.37 684.097 L1344.93 684.097 L1345.49 684.097 L1346.05 684.097 L1346.61 684.097 L1347.17 684.097 L1347.73 684.097 L1348.29 684.097 L1348.84 684.097 L1349.4 684.097 L1349.96 684.097 L1350.52 684.097 L1351.08 684.097 L1351.64 684.097 L1352.2 684.097 L1352.76 684.097 L1353.32 684.097 L1353.88 684.097 L1354.44 684.097 L1355 684.097 L1355.56 684.097 L1356.12 684.097 L1356.67 684.097 L1357.23 684.097 L1357.79 684.097 L1358.35 684.097 L1358.91 684.097 L1359.47 684.097 L1360.03 684.097 L1360.59 684.097 L1361.15 684.097 L1361.71 684.097 L1362.27 684.097 L1362.83 684.097 L1363.39 684.097 L1363.94 684.097 L1364.5 684.097 L1365.06 684.097 L1365.62 684.097 L1366.18 684.097 L1366.74 684.097 L1367.3 684.097 L1367.86 684.097 L1368.42 684.097 L1368.98 684.097 L1369.54 684.097 L1370.1 684.097 L1370.66 684.097 L1371.21 684.097 L1371.77 684.097 L1372.33 684.097 L1372.89 684.097 L1373.45 684.097 L1374.01 684.097 L1374.57 684.097 L1375.13 684.097 L1375.69 684.097 L1376.25 684.097 L1376.81 684.097 L1377.37 684.097 L1377.93 684.097 L1378.49 684.097 L1379.04 684.097 L1379.6 684.097 L1380.16 684.097 L1380.72 684.097 L1381.28 684.097 L1381.84 684.097 L1382.4 684.097 L1382.96 684.097 L1383.52 684.097 L1384.08 684.097 L1384.64 684.097 L1385.2 684.097 L1385.76 684.097 L1386.31 684.097 L1386.87 684.097 L1387.43 684.097 L1387.99 684.097 L1388.55 684.097 L1389.11 684.097 L1389.67 684.097 L1390.23 684.097 L1390.79 684.097 L1391.35 684.097 L1391.91 684.097 L1392.47 684.097 L1393.03 684.097 L1393.58 684.097 L1394.14 684.097 L1394.7 684.097 L1395.26 684.097 L1395.82 684.097 L1396.38 684.097 L1396.94 684.097 L1397.5 684.097 L1398.06 684.097 L1398.62 684.097 L1399.18 684.097 L1399.74 684.097 L1400.3 684.097 L1400.86 684.097 L1401.41 684.097 L1401.97 684.097 L1402.53 684.097 L1403.09 684.097 L1403.65 684.097 L1404.21 684.097 L1404.77 684.097 L1405.33 684.097 L1405.89 684.097 L1406.45 684.097 L1407.01 684.097 L1407.57 684.097 L1408.13 684.097 L1408.68 684.097 L1409.24 684.097 L1409.8 684.097 L1410.36 684.097 L1410.92 684.097 L1411.48 684.097 L1412.04 684.097 L1412.6 684.097 L1413.16 684.097 L1413.72 684.097 L1414.28 684.097 L1414.84 684.097 L1415.4 684.097 L1415.95 684.097 L1416.51 684.097 L1417.07 684.097 L1417.63 684.097 L1418.19 684.097 L1418.75 684.097 L1419.31 684.097 L1419.87 684.097 L1420.43 684.097 L1420.99 684.097 L1421.55 684.097 L1422.11 684.097 L1422.67 684.097 L1423.23 684.097 L1423.78 684.097 L1424.34 684.097 L1424.9 684.097 L1425.46 684.097 L1426.02 684.097 L1426.58 684.097 L1427.14 684.097 L1427.7 684.097 L1428.26 684.097 L1428.82 684.097 L1429.38 684.097 L1429.94 684.097 L1430.5 684.097 L1431.05 684.097 L1431.61 684.097 L1432.17 684.097 L1432.73 684.097 L1433.29 684.097 L1433.85 684.097 L1434.41 684.097 L1434.97 684.097 L1435.53 684.097 L1436.09 684.097 L1436.65 684.097 L1437.21 684.097 L1437.77 684.097 L1438.33 684.097 L1438.88 684.097 L1439.44 684.097 L1440 684.097 L1440.56 684.097 L1441.12 684.097 L1441.68 684.097 L1442.24 684.097 L1442.8 684.097 L1443.36 684.097 L1443.92 684.097 L1444.48 684.097 L1445.04 684.097 L1445.6 684.097 L1446.15 684.097 L1446.71 684.097 L1447.27 684.097 L1447.83 684.097 L1448.39 684.097 L1448.95 684.097 L1449.51 684.097 L1450.07 684.097 L1450.63 684.097 L1451.19 684.097 L1451.75 684.097 L1452.31 684.097 L1452.87 684.097 L1453.42 684.097 L1453.98 684.097 L1454.54 684.097 L1455.1 684.097 L1455.66 684.097 L1456.22 684.097 L1456.78 684.097 L1457.34 684.097 L1457.9 684.097 L1458.46 684.097 L1459.02 684.097 L1459.58 684.097 L1460.14 684.097 L1460.7 684.097 L1461.25 684.097 L1461.81 684.097 L1462.37 684.097 L1462.93 684.097 L1463.49 684.097 L1464.05 684.097 L1464.61 684.097 L1465.17 684.097 L1465.73 684.097 L1466.29 684.097 L1466.85 684.097 L1467.41 684.097 L1467.97 684.097 L1468.52 684.097 L1469.08 684.097 L1469.64 684.097 L1470.2 684.097 L1470.76 684.097 L1471.32 684.097 L1471.88 684.097 L1472.44 684.097 L1473 684.097 L1473.56 684.097 L1474.12 684.097 L1474.68 684.097 L1475.24 684.097 L1475.79 684.097 L1476.35 684.097 L1476.91 684.097 L1477.47 684.097 L1478.03 684.097 L1478.59 684.097 L1479.15 684.097 L1479.71 684.097 L1480.27 684.097 L1480.83 684.097 L1481.39 684.097 L1481.95 684.097 L1482.51 684.097 L1483.07 684.097 L1483.62 684.097 L1484.18 684.097 L1484.74 684.097 L1485.3 684.097 L1485.86 684.097 L1486.42 684.097 L1486.98 684.097 L1487.54 684.097 L1488.1 684.097 L1488.66 684.097 L1489.22 684.097 L1489.78 684.097 L1490.34 684.097 L1490.89 684.097 L1491.45 684.097 L1492.01 684.097 L1492.57 684.097 L1493.13 684.097 L1493.69 684.097 L1494.25 684.097 L1494.81 684.097 L1495.37 684.097 L1495.93 684.097 L1496.49 684.097 L1497.05 684.097 L1497.61 684.097 L1498.16 684.097 L1498.72 684.097 L1499.28 684.097 L1499.84 684.097 L1500.4 684.097 L1500.96 684.097 L1501.52 684.097 L1502.08 684.097 L1502.64 684.097 L1503.2 684.097 L1503.76 684.097 L1504.32 684.097 L1504.88 684.097 L1505.44 684.097 L1505.99 684.097 L1506.55 684.097 L1507.11 684.097 L1507.67 684.097 L1508.23 684.097 L1508.79 684.097 L1509.35 684.097 L1509.91 684.097 L1510.47 684.097 L1511.03 684.097 L1511.59 684.097 L1512.15 684.097 L1512.71 684.097 L1513.26 684.097 L1513.82 684.097 L1514.38 684.097 L1514.94 684.097 L1515.5 684.097 L1516.06 684.097 L1516.62 684.097 L1517.18 684.097 L1517.74 684.097 L1518.3 684.097 L1518.86 684.097 L1519.42 684.097 L1519.98 684.097 L1520.53 684.097 L1521.09 684.097 L1521.65 684.097 L1522.21 684.097 L1522.77 684.097 L1523.33 684.097 L1523.89 684.097 L1524.45 684.097 L1525.01 684.097 L1525.57 684.097 L1526.13 684.097 L1526.69 684.097 L1527.25 684.097 L1527.81 684.097 L1528.36 684.097 L1528.92 684.097 L1529.48 684.097 L1530.04 684.097 L1530.6 684.097 L1531.16 684.097 L1531.72 684.097 L1532.28 684.097 L1532.84 684.097 L1533.4 684.097 L1533.96 684.097 L1534.52 684.097 L1535.08 684.097 L1535.63 684.097 L1536.19 684.097 L1536.75 684.097 L1537.31 684.097 L1537.87 684.097 L1538.43 684.097 L1538.99 684.097 L1539.55 684.097 L1540.11 684.097 L1540.67 684.097 L1541.23 684.097 L1541.79 684.097 L1542.35 684.097 L1542.9 684.097 L1543.46 684.097 L1544.02 684.097 L1544.58 684.097 L1545.14 684.097 L1545.7 684.097 L1546.26 684.097 L1546.82 684.097 L1547.38 684.097 L1547.94 684.097 L1548.5 684.097 L1549.06 684.097 L1549.62 684.097 L1550.18 684.097 L1550.73 684.097 L1551.29 684.097 L1551.85 684.097 L1552.41 684.097 L1552.97 684.097 L1553.53 684.097 L1554.09 684.097 L1554.65 684.097 L1555.21 684.097 L1555.77 684.097 L1556.33 684.097 L1556.89 684.097 L1557.45 684.097 L1558 684.097 L1558.56 684.097 L1559.12 684.097 L1559.68 684.097 L1560.24 684.097 L1560.8 684.097 L1561.36 684.097 L1561.92 684.097 L1562.48 684.097 L1563.04 684.097 L1563.6 684.097 L1564.16 684.097 L1564.72 684.097 L1565.28 684.097 L1565.83 684.097 L1566.39 684.097 L1566.95 684.097 L1567.51 684.097 L1568.07 684.097 L1568.63 684.097 L1569.19 684.097 L1569.75 684.097 L1570.31 684.097 L1570.87 684.097 L1571.43 684.097 L1571.99 684.097 L1572.55 684.097 L1573.1 684.097 L1573.66 684.097 L1574.22 684.097 L1574.78 684.097 L1575.34 684.097 L1575.9 684.097 L1576.46 684.097 L1577.02 684.097 L1577.58 684.097 L1578.14 684.097 L1578.7 684.097 L1579.26 684.097 L1579.82 684.097 L1580.37 684.097 L1580.93 684.097 L1581.49 684.097 L1582.05 684.097 L1582.61 684.097 L1583.17 684.097 L1583.73 684.097 L1584.29 684.097 L1584.85 684.097 L1585.41 684.097 L1585.97 684.097 L1586.53 684.097 L1587.09 684.097 L1587.65 684.097 L1588.2 684.097 L1588.76 684.097 L1589.32 684.097 L1589.88 684.097 L1590.44 684.097 L1591 684.097 L1591.56 684.097 L1592.12 684.097 L1592.68 684.097 L1593.24 684.097 L1593.8 684.097 L1594.36 684.097 L1594.92 684.097 L1595.47 684.097 L1596.03 684.097 L1596.59 684.097 L1597.15 684.097 L1597.71 684.097 L1598.27 684.097 L1598.83 684.097 L1599.39 684.097 L1599.95 684.097 L1600.51 684.097 L1601.07 684.097 L1601.63 684.097 L1602.19 684.097 L1602.74 684.097 L1603.3 684.097 L1603.86 684.097 L1604.42 684.097 L1604.98 684.097 L1605.54 684.097 L1606.1 684.097 L1606.66 684.097 L1607.22 684.097 L1607.78 684.097 L1608.34 684.097 L1608.9 684.097 L1609.46 684.097 L1610.02 684.097 L1610.57 684.097 L1611.13 684.097 L1611.69 684.097 L1612.25 684.097 L1612.81 684.097 L1613.37 684.097 L1613.93 684.097 L1614.49 684.097 L1615.05 684.097 L1615.61 684.097 L1616.17 684.097 L1616.73 684.097 L1617.29 684.097 L1617.84 684.097 L1618.4 684.097 L1618.96 684.097 L1619.52 684.097 L1620.08 684.097 L1620.64 684.097 L1621.2 684.097 L1621.76 684.097 L1622.32 684.097 L1622.88 684.097 L1623.44 684.097 L1624 684.097 L1624.56 684.097 L1625.11 684.097 L1625.67 684.097 L1626.23 684.097 L1626.79 684.097 L1627.35 684.097 L1627.91 684.097 L1628.47 684.097 L1629.03 684.097 L1629.59 684.097 L1630.15 684.097 L1630.71 684.097 L1631.27 684.097 L1631.83 684.097 L1632.39 684.097 L1632.94 684.097 L1633.5 684.097 L1634.06 684.097 L1634.62 684.097 L1635.18 684.097 L1635.74 684.097 L1636.3 684.097 L1636.86 684.097 L1637.42 684.097 L1637.98 684.097 L1638.54 684.097 L1639.1 684.097 L1639.66 684.097 L1640.21 684.097 L1640.77 684.097 L1641.33 684.097 L1641.89 684.097 L1642.45 684.097 L1643.01 684.097 L1643.57 684.097 L1644.13 684.097 L1644.69 684.097 L1645.25 684.097 L1645.81 684.097 L1646.37 684.097 L1646.93 684.097 L1647.48 684.097 L1648.04 684.097 L1648.6 684.097 L1649.16 684.097 L1649.72 684.097 L1650.28 684.097 L1650.84 684.097 L1651.4 684.097 L1651.96 684.097 L1652.52 684.097 L1653.08 684.097 L1653.64 684.097 L1654.2 684.097 L1654.76 684.097 L1655.31 684.097 L1655.87 684.097 L1656.43 684.097 L1656.99 684.097 L1657.55 684.097 L1658.11 684.097 L1658.67 684.097 L1659.23 684.097 L1659.79 684.097 L1660.35 684.097 L1660.91 684.097 L1661.47 684.097 L1662.03 684.097 L1662.58 684.097 L1663.14 684.097 L1663.7 684.097 L1664.26 684.097 L1664.82 684.097 L1665.38 684.097 L1665.94 684.097 L1666.5 684.097 L1667.06 684.097 L1667.62 684.097 L1668.18 684.097 L1668.74 684.097 L1669.3 684.097 L1669.85 684.097 L1670.41 684.097 L1670.97 684.097 L1671.53 684.097 L1672.09 684.097 L1672.65 684.097 L1673.21 684.097 L1673.77 684.097 L1674.33 684.097 L1674.89 684.097 L1675.45 684.097 L1676.01 684.097 L1676.57 684.097 L1677.13 684.097 L1677.68 684.097 L1678.24 684.097 L1678.8 684.097 L1679.36 684.097 L1679.92 684.097 L1680.48 684.097 L1681.04 684.097 L1681.6 684.097 L1682.16 684.097 L1682.72 684.097 L1683.28 684.097 L1683.84 684.097 L1684.4 684.097 L1684.95 684.097 L1685.51 684.097 L1686.07 684.097 L1686.63 684.097 L1687.19 684.097 L1687.75 684.097 L1688.31 684.097 L1688.87 684.097 L1689.43 684.097 L1689.99 684.097 L1690.55 684.097 L1691.11 684.097 L1691.67 684.097 L1692.23 684.097 L1692.78 684.097 L1693.34 684.097 L1693.9 684.097 L1694.46 684.097 L1695.02 684.097 L1695.58 684.097 L1696.14 684.097 L1696.7 684.097 L1697.26 684.097 L1697.82 684.097 L1698.38 684.097 L1698.94 684.097 L1699.5 684.097 L1700.05 684.097 L1700.61 684.097 L1701.17 684.097 L1701.73 684.097 L1702.29 684.097 L1702.85 684.097 L1703.41 684.097 L1703.97 684.097 L1704.53 684.097 L1705.09 684.097 L1705.65 684.097 L1706.21 684.097 L1706.77 684.097 L1707.32 684.097 L1707.88 684.097 L1708.44 684.097 L1709 684.097 L1709.56 684.097 L1710.12 684.097 L1710.68 684.097 L1711.24 684.097 L1711.8 684.097 L1712.36 684.097 L1712.92 684.097 L1713.48 684.097 L1714.04 684.097 L1714.6 684.097 L1715.15 684.097 L1715.71 684.097 L1716.27 684.097 L1716.83 684.097 L1717.39 684.097 L1717.95 684.097 L1718.51 684.097 L1719.07 684.097 L1719.63 684.097 L1720.19 684.097 L1720.75 684.097 L1721.31 684.097 L1721.87 684.097 L1722.42 684.097 L1722.98 684.097 L1723.54 684.097 L1724.1 684.097 L1724.66 684.097 L1725.22 684.097 L1725.78 684.097 L1726.34 684.097 L1726.9 684.097 L1727.46 684.097 L1728.02 684.097 L1728.58 684.097 L1729.14 684.097 L1729.69 684.097 L1730.25 684.097 L1730.81 684.097 L1731.37 684.097 L1731.93 684.097 L1732.49 684.097 L1733.05 684.097 L1733.61 684.097 L1734.17 684.097 L1734.73 684.097 L1735.29 684.097 L1735.85 684.097 L1736.41 684.097 L1736.97 684.097 L1737.52 684.097 L1738.08 684.097 L1738.64 684.097 L1739.2 684.097 L1739.76 684.097 L1740.32 684.097 L1740.88 684.097 L1741.44 684.097 L1742 684.097 L1742.56 684.097 L1743.12 684.097 L1743.68 684.097 L1744.24 684.097 L1744.79 684.097 L1745.35 684.097 L1745.91 684.097 L1746.47 684.097 L1747.03 684.097 L1747.59 684.097 L1748.15 684.097 L1748.71 684.097 L1749.27 684.097 L1749.83 684.097 L1750.39 684.097 L1750.95 684.097 L1751.51 684.097 L1752.06 684.097 L1752.62 684.097 L1753.18 684.097 L1753.74 684.097 L1754.3 684.097 L1754.86 684.097 L1755.42 684.097 L1755.98 684.097 L1756.54 684.097 L1757.1 684.097 L1757.66 684.097 L1758.22 684.097 L1758.78 684.097 L1759.34 684.097 L1759.89 684.097 L1760.45 684.097 L1761.01 684.097 L1761.57 684.097 L1762.13 684.097 L1762.69 684.097 L1763.25 684.097 L1763.81 684.097 L1764.37 684.097 L1764.93 684.097 L1765.49 684.097 L1766.05 684.097 L1766.61 684.097 L1767.16 684.097 L1767.72 684.097 L1768.28 684.097 L1768.84 684.097 L1769.4 684.097 L1769.96 684.097 L1770.52 684.097 L1771.08 684.097 L1771.64 684.097 L1772.2 684.097 L1772.76 684.097 L1773.32 684.097 L1773.88 684.097 L1774.43 684.097 L1774.99 684.097 L1775.55 684.097 L1776.11 684.097 L1776.67 684.097 L1777.23 684.097 L1777.79 684.097 L1778.35 684.097 L1778.91 684.097 L1779.47 684.097 L1780.03 684.097 L1780.59 684.097 L1781.15 684.097 L1781.71 684.097 L1782.26 684.097 L1782.82 684.097 L1783.38 684.097 L1783.94 684.097 L1784.5 684.097 L1785.06 684.097 L1785.62 684.097 L1786.18 684.097 L1786.74 684.097 L1787.3 684.097 L1787.86 684.097 L1788.42 684.097 L1788.98 684.097 L1789.53 684.097 L1790.09 684.097 L1790.65 684.097 L1791.21 684.097 L1791.77 684.097 L1792.33 684.097 L1792.89 684.097 L1793.45 684.097 L1794.01 684.097 L1794.57 684.097 L1795.13 684.097 L1795.69 684.097 L1796.25 684.097 L1796.8 684.097 L1797.36 684.097 L1797.92 684.097 L1798.48 684.097 L1799.04 684.097 L1799.6 684.097 L1800.16 684.097 L1800.72 684.097 L1801.28 684.097 L1801.84 684.097 L1802.4 684.097 L1802.96 684.097 L1803.52 684.097 L1804.08 684.097 L1804.63 684.097 L1805.19 684.097 L1805.75 684.097 L1806.31 684.097 L1806.87 684.097 L1807.43 684.097 L1807.99 684.097 L1808.55 684.097 L1809.11 684.097 L1809.67 684.097 L1810.23 684.097 L1810.79 684.097 L1811.35 684.097 L1811.9 684.097 L1812.46 684.097 L1813.02 684.097 L1813.58 684.097 L1814.14 684.097 L1814.7 684.097 L1815.26 684.097 L1815.82 684.097 L1816.38 684.097 L1816.94 684.097 L1817.5 684.097 L1818.06 684.097 L1818.62 684.097 L1819.18 684.097 L1819.73 684.097 L1820.29 684.097 L1820.85 684.097 L1821.41 684.097 L1821.97 684.097 L1822.53 684.097 L1823.09 684.097 L1823.65 684.097 L1824.21 684.097 L1824.77 684.097 L1825.33 684.097 L1825.89 684.097 L1826.45 684.097 L1827 684.097 L1827.56 684.097 L1828.12 684.097 L1828.68 684.097 L1829.24 684.097 L1829.8 684.097 L1830.36 684.097 L1830.92 684.097 L1831.48 684.097 L1832.04 684.097 L1832.6 684.097 L1833.16 684.097 L1833.72 684.097 L1834.27 684.097 L1834.83 684.097 L1835.39 684.097 L1835.95 684.097 L1836.51 684.097 L1837.07 684.097 L1837.63 684.097 L1838.19 684.097 L1838.19 682.449 L1837.63 682.449 L1837.07 682.449 L1836.51 682.449 L1835.95 682.449 L1835.39 682.449 L1834.83 682.449 L1834.27 682.449 L1833.72 682.449 L1833.16 682.449 L1832.6 682.449 L1832.04 682.449 L1831.48 682.449 L1830.92 682.449 L1830.36 682.449 L1829.8 682.449 L1829.24 682.449 L1828.68 682.449 L1828.12 682.449 L1827.56 682.449 L1827 682.449 L1826.45 682.449 L1825.89 682.449 L1825.33 682.449 L1824.77 682.449 L1824.21 682.449 L1823.65 682.449 L1823.09 682.449 L1822.53 682.449 L1821.97 682.449 L1821.41 682.449 L1820.85 682.449 L1820.29 682.449 L1819.73 682.449 L1819.18 682.449 L1818.62 682.449 L1818.06 682.449 L1817.5 682.449 L1816.94 682.449 L1816.38 682.449 L1815.82 682.449 L1815.26 682.449 L1814.7 682.449 L1814.14 682.449 L1813.58 682.449 L1813.02 682.449 L1812.46 682.449 L1811.9 682.449 L1811.35 682.449 L1810.79 682.449 L1810.23 682.449 L1809.67 682.449 L1809.11 682.449 L1808.55 682.449 L1807.99 682.449 L1807.43 682.449 L1806.87 682.449 L1806.31 682.449 L1805.75 682.449 L1805.19 682.449 L1804.63 682.449 L1804.08 682.449 L1803.52 682.449 L1802.96 682.449 L1802.4 682.449 L1801.84 682.449 L1801.28 682.449 L1800.72 682.449 L1800.16 682.449 L1799.6 682.449 L1799.04 682.449 L1798.48 682.449 L1797.92 682.449 L1797.36 682.449 L1796.8 682.449 L1796.25 682.449 L1795.69 682.449 L1795.13 682.449 L1794.57 682.449 L1794.01 682.449 L1793.45 682.449 L1792.89 682.449 L1792.33 682.449 L1791.77 682.449 L1791.21 682.449 L1790.65 682.449 L1790.09 682.449 L1789.53 682.449 L1788.98 682.449 L1788.42 682.449 L1787.86 682.449 L1787.3 682.449 L1786.74 682.449 L1786.18 682.449 L1785.62 682.449 L1785.06 682.449 L1784.5 682.449 L1783.94 682.449 L1783.38 682.449 L1782.82 682.449 L1782.26 682.449 L1781.71 682.449 L1781.15 682.449 L1780.59 682.449 L1780.03 682.449 L1779.47 682.449 L1778.91 682.449 L1778.35 682.449 L1777.79 682.449 L1777.23 682.449 L1776.67 682.449 L1776.11 682.449 L1775.55 682.449 L1774.99 682.449 L1774.43 682.449 L1773.88 682.449 L1773.32 682.449 L1772.76 682.449 L1772.2 682.449 L1771.64 682.449 L1771.08 682.449 L1770.52 682.449 L1769.96 682.449 L1769.4 682.449 L1768.84 682.449 L1768.28 682.449 L1767.72 682.449 L1767.16 682.449 L1766.61 682.449 L1766.05 682.449 L1765.49 682.449 L1764.93 682.449 L1764.37 682.449 L1763.81 682.449 L1763.25 682.449 L1762.69 682.449 L1762.13 682.449 L1761.57 682.449 L1761.01 682.449 L1760.45 682.449 L1759.89 682.449 L1759.34 682.449 L1758.78 682.449 L1758.22 682.449 L1757.66 682.449 L1757.1 682.449 L1756.54 682.449 L1755.98 682.449 L1755.42 682.449 L1754.86 682.449 L1754.3 682.449 L1753.74 682.449 L1753.18 682.449 L1752.62 682.449 L1752.06 682.449 L1751.51 682.449 L1750.95 682.449 L1750.39 682.449 L1749.83 682.449 L1749.27 682.449 L1748.71 682.449 L1748.15 682.449 L1747.59 682.449 L1747.03 682.449 L1746.47 682.449 L1745.91 682.449 L1745.35 682.449 L1744.79 682.449 L1744.24 682.449 L1743.68 682.449 L1743.12 682.449 L1742.56 682.449 L1742 682.449 L1741.44 682.449 L1740.88 682.449 L1740.32 682.449 L1739.76 682.449 L1739.2 682.449 L1738.64 682.449 L1738.08 682.449 L1737.52 682.449 L1736.97 682.449 L1736.41 682.449 L1735.85 682.449 L1735.29 682.449 L1734.73 682.449 L1734.17 682.449 L1733.61 682.449 L1733.05 682.449 L1732.49 682.449 L1731.93 682.449 L1731.37 682.449 L1730.81 682.449 L1730.25 682.449 L1729.69 682.449 L1729.14 682.449 L1728.58 682.449 L1728.02 682.449 L1727.46 682.449 L1726.9 682.449 L1726.34 682.449 L1725.78 682.449 L1725.22 682.449 L1724.66 682.449 L1724.1 682.449 L1723.54 682.449 L1722.98 682.449 L1722.42 682.449 L1721.87 682.449 L1721.31 682.449 L1720.75 682.449 L1720.19 682.449 L1719.63 682.449 L1719.07 682.449 L1718.51 682.449 L1717.95 682.449 L1717.39 682.449 L1716.83 682.449 L1716.27 682.449 L1715.71 682.449 L1715.15 682.449 L1714.6 682.449 L1714.04 682.449 L1713.48 682.449 L1712.92 682.449 L1712.36 682.449 L1711.8 682.449 L1711.24 682.449 L1710.68 682.449 L1710.12 682.449 L1709.56 682.449 L1709 682.449 L1708.44 682.449 L1707.88 682.449 L1707.32 682.449 L1706.77 682.449 L1706.21 682.449 L1705.65 682.449 L1705.09 682.449 L1704.53 682.449 L1703.97 682.449 L1703.41 682.449 L1702.85 682.449 L1702.29 682.449 L1701.73 682.449 L1701.17 682.449 L1700.61 682.449 L1700.05 682.449 L1699.5 682.449 L1698.94 682.449 L1698.38 682.449 L1697.82 682.449 L1697.26 682.449 L1696.7 682.449 L1696.14 682.449 L1695.58 682.449 L1695.02 682.449 L1694.46 682.449 L1693.9 682.449 L1693.34 682.449 L1692.78 682.449 L1692.23 682.449 L1691.67 682.449 L1691.11 682.449 L1690.55 682.449 L1689.99 682.449 L1689.43 682.449 L1688.87 682.449 L1688.31 682.449 L1687.75 682.449 L1687.19 682.449 L1686.63 682.449 L1686.07 682.449 L1685.51 682.449 L1684.95 682.449 L1684.4 682.449 L1683.84 682.449 L1683.28 682.449 L1682.72 682.449 L1682.16 682.449 L1681.6 682.449 L1681.04 682.449 L1680.48 682.449 L1679.92 682.449 L1679.36 682.449 L1678.8 682.449 L1678.24 682.449 L1677.68 682.449 L1677.13 682.449 L1676.57 682.449 L1676.01 682.449 L1675.45 682.449 L1674.89 682.449 L1674.33 682.449 L1673.77 682.449 L1673.21 682.449 L1672.65 682.449 L1672.09 682.449 L1671.53 682.449 L1670.97 682.449 L1670.41 682.449 L1669.85 682.449 L1669.3 682.449 L1668.74 682.449 L1668.18 682.449 L1667.62 682.449 L1667.06 682.449 L1666.5 682.449 L1665.94 682.449 L1665.38 682.449 L1664.82 682.449 L1664.26 682.449 L1663.7 682.449 L1663.14 682.449 L1662.58 682.449 L1662.03 682.449 L1661.47 682.449 L1660.91 682.449 L1660.35 682.449 L1659.79 682.449 L1659.23 682.449 L1658.67 682.449 L1658.11 682.449 L1657.55 682.449 L1656.99 682.449 L1656.43 682.449 L1655.87 682.449 L1655.31 682.449 L1654.76 682.449 L1654.2 682.449 L1653.64 682.449 L1653.08 682.449 L1652.52 682.449 L1651.96 682.449 L1651.4 682.449 L1650.84 682.449 L1650.28 682.449 L1649.72 682.449 L1649.16 682.449 L1648.6 682.449 L1648.04 682.449 L1647.48 682.449 L1646.93 682.449 L1646.37 682.449 L1645.81 682.449 L1645.25 682.449 L1644.69 682.449 L1644.13 682.449 L1643.57 682.449 L1643.01 682.449 L1642.45 682.449 L1641.89 682.449 L1641.33 682.449 L1640.77 682.449 L1640.21 682.449 L1639.66 682.449 L1639.1 682.449 L1638.54 682.449 L1637.98 682.449 L1637.42 682.449 L1636.86 682.449 L1636.3 682.449 L1635.74 682.449 L1635.18 682.449 L1634.62 682.449 L1634.06 682.449 L1633.5 682.449 L1632.94 682.449 L1632.39 682.449 L1631.83 682.449 L1631.27 682.449 L1630.71 682.449 L1630.15 682.449 L1629.59 682.449 L1629.03 682.449 L1628.47 682.449 L1627.91 682.449 L1627.35 682.449 L1626.79 682.449 L1626.23 682.449 L1625.67 682.449 L1625.11 682.449 L1624.56 682.449 L1624 682.449 L1623.44 682.449 L1622.88 682.449 L1622.32 682.449 L1621.76 682.449 L1621.2 682.449 L1620.64 682.449 L1620.08 682.449 L1619.52 682.449 L1618.96 682.449 L1618.4 682.449 L1617.84 682.449 L1617.29 682.449 L1616.73 682.449 L1616.17 682.449 L1615.61 682.449 L1615.05 682.449 L1614.49 682.449 L1613.93 682.449 L1613.37 682.449 L1612.81 682.449 L1612.25 682.449 L1611.69 682.449 L1611.13 682.449 L1610.57 682.449 L1610.02 682.449 L1609.46 682.449 L1608.9 682.449 L1608.34 682.449 L1607.78 682.449 L1607.22 682.449 L1606.66 682.449 L1606.1 682.449 L1605.54 682.449 L1604.98 682.449 L1604.42 682.449 L1603.86 682.449 L1603.3 682.449 L1602.74 682.449 L1602.19 682.449 L1601.63 682.449 L1601.07 682.449 L1600.51 682.449 L1599.95 682.449 L1599.39 682.449 L1598.83 682.449 L1598.27 682.449 L1597.71 682.449 L1597.15 682.449 L1596.59 682.449 L1596.03 682.449 L1595.47 682.449 L1594.92 682.449 L1594.36 682.449 L1593.8 682.449 L1593.24 682.449 L1592.68 682.449 L1592.12 682.449 L1591.56 682.449 L1591 682.449 L1590.44 682.449 L1589.88 682.449 L1589.32 682.449 L1588.76 682.449 L1588.2 682.449 L1587.65 682.449 L1587.09 682.449 L1586.53 682.449 L1585.97 682.449 L1585.41 682.449 L1584.85 682.449 L1584.29 682.449 L1583.73 682.449 L1583.17 682.449 L1582.61 682.449 L1582.05 682.449 L1581.49 682.449 L1580.93 682.449 L1580.37 682.449 L1579.82 682.449 L1579.26 682.449 L1578.7 682.449 L1578.14 682.449 L1577.58 682.449 L1577.02 682.449 L1576.46 682.449 L1575.9 682.449 L1575.34 682.449 L1574.78 682.449 L1574.22 682.449 L1573.66 682.449 L1573.1 682.449 L1572.55 682.449 L1571.99 682.449 L1571.43 682.449 L1570.87 682.449 L1570.31 682.449 L1569.75 682.449 L1569.19 682.449 L1568.63 682.449 L1568.07 682.449 L1567.51 682.449 L1566.95 682.449 L1566.39 682.449 L1565.83 682.449 L1565.28 682.449 L1564.72 682.449 L1564.16 682.449 L1563.6 682.449 L1563.04 682.449 L1562.48 682.449 L1561.92 682.449 L1561.36 682.449 L1560.8 682.449 L1560.24 682.449 L1559.68 682.449 L1559.12 682.449 L1558.56 682.449 L1558 682.449 L1557.45 682.449 L1556.89 682.449 L1556.33 682.449 L1555.77 682.449 L1555.21 682.449 L1554.65 682.449 L1554.09 682.449 L1553.53 682.449 L1552.97 682.449 L1552.41 682.449 L1551.85 682.449 L1551.29 682.449 L1550.73 682.449 L1550.18 682.449 L1549.62 682.449 L1549.06 682.449 L1548.5 682.449 L1547.94 682.449 L1547.38 682.449 L1546.82 682.449 L1546.26 682.449 L1545.7 682.449 L1545.14 682.449 L1544.58 682.449 L1544.02 682.449 L1543.46 682.449 L1542.9 682.449 L1542.35 682.449 L1541.79 682.449 L1541.23 682.449 L1540.67 682.449 L1540.11 682.449 L1539.55 682.449 L1538.99 682.449 L1538.43 682.449 L1537.87 682.449 L1537.31 682.449 L1536.75 682.449 L1536.19 682.449 L1535.63 682.449 L1535.08 682.449 L1534.52 682.449 L1533.96 682.449 L1533.4 682.449 L1532.84 682.449 L1532.28 682.449 L1531.72 682.449 L1531.16 682.449 L1530.6 682.449 L1530.04 682.449 L1529.48 682.449 L1528.92 682.449 L1528.36 682.449 L1527.81 682.449 L1527.25 682.449 L1526.69 682.449 L1526.13 682.449 L1525.57 682.449 L1525.01 682.449 L1524.45 682.449 L1523.89 682.449 L1523.33 682.449 L1522.77 682.449 L1522.21 682.449 L1521.65 682.449 L1521.09 682.449 L1520.53 682.449 L1519.98 682.449 L1519.42 682.449 L1518.86 682.449 L1518.3 682.449 L1517.74 682.449 L1517.18 682.449 L1516.62 682.449 L1516.06 682.449 L1515.5 682.449 L1514.94 682.449 L1514.38 682.449 L1513.82 682.449 L1513.26 682.449 L1512.71 682.449 L1512.15 682.449 L1511.59 682.449 L1511.03 682.449 L1510.47 682.449 L1509.91 682.449 L1509.35 682.449 L1508.79 682.449 L1508.23 682.449 L1507.67 682.449 L1507.11 682.449 L1506.55 682.449 L1505.99 682.449 L1505.44 682.449 L1504.88 682.449 L1504.32 682.449 L1503.76 682.449 L1503.2 682.449 L1502.64 682.449 L1502.08 682.449 L1501.52 682.449 L1500.96 682.449 L1500.4 682.449 L1499.84 682.449 L1499.28 682.449 L1498.72 682.449 L1498.16 682.449 L1497.61 682.449 L1497.05 682.449 L1496.49 682.449 L1495.93 682.449 L1495.37 682.449 L1494.81 682.449 L1494.25 682.449 L1493.69 682.449 L1493.13 682.449 L1492.57 682.449 L1492.01 682.449 L1491.45 682.449 L1490.89 682.449 L1490.34 682.449 L1489.78 682.449 L1489.22 682.449 L1488.66 682.449 L1488.1 682.449 L1487.54 682.449 L1486.98 682.449 L1486.42 682.449 L1485.86 682.449 L1485.3 682.449 L1484.74 682.449 L1484.18 682.449 L1483.62 682.449 L1483.07 682.449 L1482.51 682.449 L1481.95 682.449 L1481.39 682.449 L1480.83 682.449 L1480.27 682.449 L1479.71 682.449 L1479.15 682.449 L1478.59 682.449 L1478.03 682.449 L1477.47 682.449 L1476.91 682.449 L1476.35 682.449 L1475.79 682.449 L1475.24 682.449 L1474.68 682.449 L1474.12 682.449 L1473.56 682.449 L1473 682.449 L1472.44 682.449 L1471.88 682.449 L1471.32 682.449 L1470.76 682.449 L1470.2 682.449 L1469.64 682.449 L1469.08 682.449 L1468.52 682.449 L1467.97 682.449 L1467.41 682.449 L1466.85 682.449 L1466.29 682.449 L1465.73 682.449 L1465.17 682.449 L1464.61 682.449 L1464.05 682.449 L1463.49 682.449 L1462.93 682.449 L1462.37 682.449 L1461.81 682.449 L1461.25 682.449 L1460.7 682.449 L1460.14 682.449 L1459.58 682.449 L1459.02 682.449 L1458.46 682.449 L1457.9 682.449 L1457.34 682.449 L1456.78 682.449 L1456.22 682.449 L1455.66 682.449 L1455.1 682.449 L1454.54 682.449 L1453.98 682.449 L1453.42 682.449 L1452.87 682.449 L1452.31 682.449 L1451.75 682.449 L1451.19 682.449 L1450.63 682.449 L1450.07 682.449 L1449.51 682.449 L1448.95 682.449 L1448.39 682.449 L1447.83 682.449 L1447.27 682.449 L1446.71 682.449 L1446.15 682.449 L1445.6 682.449 L1445.04 682.449 L1444.48 682.449 L1443.92 682.449 L1443.36 682.449 L1442.8 682.449 L1442.24 682.449 L1441.68 682.449 L1441.12 682.449 L1440.56 682.449 L1440 682.449 L1439.44 682.449 L1438.88 682.449 L1438.33 682.449 L1437.77 682.449 L1437.21 682.449 L1436.65 682.449 L1436.09 682.449 L1435.53 682.449 L1434.97 682.449 L1434.41 682.449 L1433.85 682.449 L1433.29 682.449 L1432.73 682.449 L1432.17 682.449 L1431.61 682.449 L1431.05 682.449 L1430.5 682.449 L1429.94 682.449 L1429.38 682.449 L1428.82 682.449 L1428.26 682.449 L1427.7 682.449 L1427.14 682.449 L1426.58 682.449 L1426.02 682.449 L1425.46 682.449 L1424.9 682.449 L1424.34 682.449 L1423.78 682.449 L1423.23 682.449 L1422.67 682.449 L1422.11 682.449 L1421.55 682.449 L1420.99 682.449 L1420.43 682.449 L1419.87 682.449 L1419.31 682.449 L1418.75 682.449 L1418.19 682.449 L1417.63 682.449 L1417.07 682.449 L1416.51 682.449 L1415.95 682.449 L1415.4 682.449 L1414.84 682.449 L1414.28 682.449 L1413.72 682.449 L1413.16 682.449 L1412.6 682.449 L1412.04 682.449 L1411.48 682.449 L1410.92 682.449 L1410.36 682.449 L1409.8 682.449 L1409.24 682.449 L1408.68 682.449 L1408.13 682.449 L1407.57 682.449 L1407.01 682.449 L1406.45 682.449 L1405.89 682.449 L1405.33 682.449 L1404.77 682.449 L1404.21 682.449 L1403.65 682.449 L1403.09 682.449 L1402.53 682.449 L1401.97 682.449 L1401.41 682.449 L1400.86 682.449 L1400.3 682.449 L1399.74 682.449 L1399.18 682.449 L1398.62 682.449 L1398.06 682.449 L1397.5 682.449 L1396.94 682.449 L1396.38 682.449 L1395.82 682.449 L1395.26 682.449 L1394.7 682.449 L1394.14 682.449 L1393.58 682.449 L1393.03 682.449 L1392.47 682.449 L1391.91 682.449 L1391.35 682.449 L1390.79 682.449 L1390.23 682.449 L1389.67 682.449 L1389.11 682.449 L1388.55 682.449 L1387.99 682.449 L1387.43 682.449 L1386.87 682.449 L1386.31 682.449 L1385.76 682.449 L1385.2 682.449 L1384.64 682.449 L1384.08 682.449 L1383.52 682.449 L1382.96 682.449 L1382.4 682.449 L1381.84 682.449 L1381.28 682.449 L1380.72 682.449 L1380.16 682.449 L1379.6 682.449 L1379.04 682.449 L1378.49 682.449 L1377.93 682.449 L1377.37 682.449 L1376.81 682.449 L1376.25 682.449 L1375.69 682.449 L1375.13 682.449 L1374.57 682.449 L1374.01 682.449 L1373.45 682.449 L1372.89 682.449 L1372.33 682.449 L1371.77 682.449 L1371.21 682.449 L1370.66 682.449 L1370.1 682.449 L1369.54 682.449 L1368.98 682.449 L1368.42 682.449 L1367.86 682.449 L1367.3 682.449 L1366.74 682.449 L1366.18 682.449 L1365.62 682.449 L1365.06 682.449 L1364.5 682.449 L1363.94 682.449 L1363.39 682.449 L1362.83 682.449 L1362.27 682.449 L1361.71 682.449 L1361.15 682.449 L1360.59 682.449 L1360.03 682.449 L1359.47 682.449 L1358.91 682.449 L1358.35 682.449 L1357.79 682.449 L1357.23 682.449 L1356.67 682.449 L1356.12 682.449 L1355.56 682.449 L1355 682.449 L1354.44 682.449 L1353.88 682.449 L1353.32 682.449 L1352.76 682.449 L1352.2 682.449 L1351.64 682.449 L1351.08 682.449 L1350.52 682.449 L1349.96 682.449 L1349.4 682.449 L1348.84 682.449 L1348.29 682.449 L1347.73 682.449 L1347.17 682.449 L1346.61 682.449 L1346.05 682.449 L1345.49 682.449 L1344.93 682.449 L1344.37 682.449 L1343.81 682.449 L1343.25 682.449 L1342.69 682.449 L1342.13 682.449 L1341.57 682.449 L1341.02 682.449 L1340.46 682.449 L1339.9 682.449 L1339.34 682.449 L1338.78 682.449 L1338.22 682.449 L1337.66 682.449 L1337.1 682.449 L1336.54 682.449 L1335.98 682.449 L1335.42 682.449 L1334.86 682.449 L1334.3 682.449 L1333.75 682.449 L1333.19 682.449 L1332.63 682.449 L1332.07 682.449 L1331.51 682.449 L1330.95 682.449 L1330.39 682.449 L1329.83 682.449 L1329.27 682.449 L1328.71 682.449 L1328.15 682.449 L1327.59 682.449 L1327.03 682.449 L1326.47 682.449 L1325.92 682.449 L1325.36 682.449 L1324.8 682.449 L1324.24 682.449 L1323.68 682.449 L1323.12 682.449 L1322.56 682.449 L1322 682.449 L1321.44 682.449 L1320.88 682.449 L1320.32 682.449 L1319.76 682.449 L1319.2 682.449 L1318.65 682.449 L1318.09 682.449 L1317.53 682.449 L1316.97 682.449 L1316.41 682.449 L1315.85 682.449 L1315.29 682.449 L1314.73 682.449 L1314.17 682.449 L1313.61 682.449 L1313.05 682.449 L1312.49 682.449 L1311.93 682.449 L1311.38 682.449 L1310.82 682.449 L1310.26 682.449 L1309.7 682.449 L1309.14 682.449 L1308.58 682.449 L1308.02 682.449 L1307.46 682.449 L1306.9 682.449 L1306.34 682.449 L1305.78 682.449 L1305.22 682.449 L1304.66 682.449 L1304.1 682.449 L1303.55 682.449 L1302.99 682.449 L1302.43 682.449 L1301.87 682.449 L1301.31 682.449 L1300.75 682.449 L1300.19 682.449 L1299.63 682.449 L1299.07 682.449 L1298.51 682.449 L1297.95 682.449 L1297.39 682.449 L1296.83 682.449 L1296.28 682.449 L1295.72 682.449 L1295.16 682.449 L1294.6 682.449 L1294.04 682.449 L1293.48 682.449 L1292.92 682.449 L1292.36 682.449 L1291.8 682.449 L1291.24 682.449 L1290.68 682.449 L1290.12 682.449 L1289.56 682.449 L1289 682.449 L1288.45 682.449 L1287.89 682.449 L1287.33 682.449 L1286.77 682.449 L1286.21 682.449 L1285.65 682.449 L1285.09 682.449 L1284.53 682.449 L1283.97 682.449 L1283.41 682.449 L1282.85 682.449 L1282.29 682.449 L1281.73 682.449 L1281.18 682.449 L1280.62 682.449 L1280.06 682.449 L1279.5 682.449 L1278.94 682.449 L1278.38 682.449 L1277.82 682.449 L1277.26 682.449 L1276.7 682.449 L1276.14 682.449 L1275.58 682.449 L1275.02 682.449 L1274.46 682.449 L1273.91 682.449 L1273.35 682.449 L1272.79 682.449 L1272.23 682.449 L1271.67 682.449 L1271.11 682.449 L1270.55 682.449 L1269.99 682.449 L1269.43 682.449 L1268.87 682.449 L1268.31 682.449 L1267.75 682.449 L1267.19 682.449 L1266.63 682.449 L1266.08 682.449 L1265.52 682.449 L1264.96 682.449 L1264.4 682.449 L1263.84 682.449 L1263.28 682.449 L1262.72 682.449 L1262.16 682.449 L1261.6 682.449 L1261.04 682.449 L1260.48 682.449 L1259.92 682.449 L1259.36 682.449 L1258.81 682.449 L1258.25 682.449 L1257.69 682.449 L1257.13 682.449 L1256.57 682.449 L1256.01 682.449 L1255.45 682.449 L1254.89 682.449 L1254.33 682.449 L1253.77 682.449 L1253.21 682.449 L1252.65 682.449 L1252.09 682.449 L1251.54 682.449 L1250.98 682.449 L1250.42 682.449 L1249.86 682.449 L1249.3 682.449 L1248.74 682.449 L1248.18 682.449 L1247.62 682.449 L1247.06 682.449 L1246.5 682.449 L1245.94 682.449 L1245.38 682.449 L1244.82 682.449 L1244.26 682.449 L1243.71 682.449 L1243.15 682.449 L1242.59 682.449 L1242.03 682.449 L1241.47 682.449 L1240.91 682.449 L1240.35 682.449 L1239.79 682.449 L1239.23 682.449 L1238.67 682.449 L1238.11 682.449 L1237.55 682.449 L1236.99 682.449 L1236.44 682.449 L1235.88 682.449 L1235.32 682.449 L1234.76 682.449 L1234.2 682.449 L1233.64 682.449 L1233.08 682.449 L1232.52 682.449 L1231.96 682.449 L1231.4 682.449 L1230.84 682.449 L1230.28 682.449 L1229.72 682.449 L1229.17 682.449 L1228.61 682.449 L1228.05 682.449 L1227.49 682.449 L1226.93 682.449 L1226.37 682.449 L1225.81 682.449 L1225.25 682.449 L1224.69 682.449 L1224.13 682.449 L1223.57 682.449 L1223.01 682.449 L1222.45 682.449 L1221.89 682.449 L1221.34 682.449 L1220.78 682.449 L1220.22 682.449 L1219.66 682.449 L1219.1 682.449 L1218.54 682.449 L1217.98 682.449 L1217.42 682.449 L1216.86 682.449 L1216.3 682.449 L1215.74 682.449 L1215.18 682.449 L1214.62 682.449 L1214.07 682.449 L1213.51 682.449 L1212.95 682.449 L1212.39 682.449 L1211.83 682.449 L1211.27 682.449 L1210.71 682.449 L1210.15 682.449 L1209.59 682.449 L1209.03 682.449 L1208.47 682.449 L1207.91 682.449 L1207.35 682.449 L1206.8 682.449 L1206.24 682.449 L1205.68 682.449 L1205.12 682.449 L1204.56 682.449 L1204 682.449 L1203.44 682.449 L1202.88 682.449 L1202.32 682.449 L1201.76 682.449 L1201.2 682.449 L1200.64 682.449 L1200.08 682.449 L1199.52 682.449 L1198.97 682.449 L1198.41 682.449 L1197.85 682.449 L1197.29 682.449 L1196.73 682.449 L1196.17 682.449 L1195.61 682.449 L1195.05 682.449 L1194.49 682.449 L1193.93 682.449 L1193.37 682.449 L1192.81 682.449 L1192.25 682.449 L1191.7 682.449 L1191.14 682.449 L1190.58 682.449 L1190.02 682.449 L1189.46 682.449 L1188.9 682.449 L1188.34 682.449 L1187.78 682.449 L1187.22 682.449 L1186.66 682.449 L1186.1 682.449 L1185.54 682.449 L1184.98 682.449 L1184.43 682.449 L1183.87 682.449 L1183.31 682.449 L1182.75 682.449 L1182.19 682.449 L1181.63 682.449 L1181.07 682.449 L1180.51 682.449 L1179.95 682.449 L1179.39 682.449 L1178.83 682.449 L1178.27 682.449 L1177.71 682.449 L1177.15 682.449 L1176.6 682.449 L1176.04 682.449 L1175.48 682.449 L1174.92 682.449 L1174.36 682.449 L1173.8 682.449 L1173.24 682.449 L1172.68 682.449 L1172.12 682.449 L1171.56 682.449 L1171 682.449 L1170.44 682.449 L1169.88 682.449 L1169.33 682.449 L1168.77 682.449 L1168.21 682.449 L1167.65 682.449 L1167.09 682.449 L1166.53 682.449 L1165.97 682.449 L1165.41 682.449 L1164.85 682.449 L1164.29 682.449 L1163.73 682.449 L1163.17 682.449 L1162.61 682.449 L1162.05 682.449 L1161.5 682.449 L1160.94 682.449 L1160.38 682.449 L1159.82 682.449 L1159.26 682.449 L1158.7 682.449 L1158.14 682.449 L1157.58 682.449 L1157.02 682.449 L1156.46 682.449 L1155.9 682.449 L1155.34 682.449 L1154.78 682.449 L1154.23 682.449 L1153.67 682.449 L1153.11 682.449 L1152.55 682.449 L1151.99 682.449 L1151.43 682.449 L1150.87 682.449 L1150.31 682.449 L1149.75 682.449 L1149.19 682.449 L1148.63 682.449 L1148.07 682.449 L1147.51 682.449 L1146.96 682.449 L1146.4 682.449 L1145.84 682.449 L1145.28 682.449 L1144.72 682.449 L1144.16 682.449 L1143.6 682.449 L1143.04 682.449 L1142.48 682.449 L1141.92 682.449 L1141.36 682.449 L1140.8 682.449 L1140.24 682.449 L1139.68 682.449 L1139.13 682.449 L1138.57 682.449 L1138.01 682.449 L1137.45 682.449 L1136.89 682.449 L1136.33 682.449 L1135.77 682.449 L1135.21 682.449 L1134.65 682.449 L1134.09 682.449 L1133.53 682.449 L1132.97 682.449 L1132.41 682.449 L1131.86 682.449 L1131.3 682.449 L1130.74 682.449 L1130.18 682.449 L1129.62 682.449 L1129.06 682.449 L1128.5 682.449 L1127.94 682.449 L1127.38 682.449 L1126.82 682.449 L1126.26 682.449 L1125.7 682.449 L1125.14 682.449 L1124.59 682.449 L1124.03 682.449 L1123.47 682.449 L1122.91 682.449 L1122.35 682.449 L1121.79 682.449 L1121.23 682.449 L1120.67 682.449 L1120.11 682.449 L1119.55 682.449 L1118.99 682.449 L1118.43 682.449 L1117.87 682.449 L1117.31 682.449 L1116.76 682.449 L1116.2 682.449 L1115.64 682.449 L1115.08 682.449 L1114.52 682.449 L1113.96 682.449 L1113.4 682.449 L1112.84 682.449 L1112.28 682.449 L1111.72 682.449 L1111.16 682.449 L1110.6 682.449 L1110.04 682.449 L1109.49 682.449 L1108.93 682.449 L1108.37 682.449 L1107.81 682.449 L1107.25 682.449 L1106.69 682.449 L1106.13 682.449 L1105.57 682.449 L1105.01 682.449 L1104.45 682.449 L1103.89 682.449 L1103.33 682.449 L1102.77 682.449 L1102.22 682.449 L1101.66 682.449 L1101.1 682.449 L1100.54 682.449 L1099.98 682.449 L1099.42 682.449 L1098.86 682.449 L1098.3 682.449 L1097.74 682.449 L1097.18 682.449 L1096.62 682.449 L1096.06 682.449 L1095.5 682.449 L1094.94 682.449 L1094.39 682.449 L1093.83 682.449 L1093.27 682.449 L1092.71 682.449 L1092.15 682.449 L1091.59 682.449 L1091.03 682.449 L1090.47 682.449 L1089.91 682.449 L1089.35 682.449 L1088.79 682.449 L1088.23 682.449 L1087.67 682.449 L1087.12 682.449 L1086.56 682.449 L1086 682.449 L1085.44 682.449 L1084.88 682.449 L1084.32 682.449 L1083.76 682.449 L1083.2 682.449 L1082.64 682.449 L1082.08 682.449 L1081.52 682.449 L1080.96 682.449 L1080.4 682.449 L1079.85 682.449 L1079.29 682.449 L1078.73 682.449 L1078.17 682.449 L1077.61 682.449 L1077.05 682.449 L1076.49 682.449 L1075.93 682.449 L1075.37 682.449 L1074.81 682.449 L1074.25 682.449 L1073.69 682.449 L1073.13 682.449 L1072.57 682.449 L1072.02 682.449 L1071.46 682.449 L1070.9 682.449 L1070.34 682.449 L1069.78 682.449 L1069.22 682.449 L1068.66 682.449 L1068.1 682.449 L1067.54 682.449 L1066.98 682.449 L1066.42 682.449 L1065.86 682.449 L1065.3 682.449 L1064.75 682.449 L1064.19 682.449 L1063.63 682.449 L1063.07 682.449 L1062.51 682.449 L1061.95 682.449 L1061.39 682.449 L1060.83 682.449 L1060.27 682.449 L1059.71 682.449 L1059.15 682.449 L1058.59 682.449 L1058.03 682.449 L1057.48 682.449 L1056.92 682.449 L1056.36 682.449 L1055.8 682.449 L1055.24 682.449 L1054.68 682.449 L1054.12 682.449 L1053.56 682.449 L1053 682.449 L1052.44 682.449 L1051.88 682.449 L1051.32 682.449 L1050.76 682.449 L1050.2 682.449 L1049.65 682.449 L1049.09 682.449 L1048.53 682.449 L1047.97 682.449 L1047.41 682.449 L1046.85 682.449 L1046.29 682.449 L1045.73 682.449 L1045.17 682.449 L1044.61 682.449 L1044.05 682.449 L1043.49 682.449 L1042.93 682.449 L1042.38 682.449 L1041.82 682.449 L1041.26 682.449 L1040.7 682.449 L1040.14 682.449 L1039.58 682.449 L1039.02 682.449 L1038.46 682.449 L1037.9 682.449 L1037.34 682.449 L1036.78 682.449 L1036.22 682.449 L1035.66 682.449 L1035.1 682.449 L1034.55 682.449 L1033.99 682.449 L1033.43 682.449 L1032.87 682.449 L1032.31 682.449 L1031.75 682.449 L1031.19 682.449 L1030.63 682.449 L1030.07 682.449 L1029.51 682.449 L1028.95 682.449 L1028.39 682.449 L1027.83 682.449 L1027.28 682.449 L1026.72 682.449 L1026.16 682.449 L1025.6 682.449 L1025.04 682.449 L1024.48 682.449 L1023.92 682.449 L1023.36 682.449 L1022.8 682.449 L1022.24 682.449 L1021.68 682.449 L1021.12 682.449 L1020.56 682.449 L1020.01 682.449 L1019.45 682.449 L1018.89 682.449 L1018.33 682.449 L1017.77 682.449 L1017.21 682.449 L1016.65 682.449 L1016.09 682.449 L1015.53 682.449 L1014.97 682.449 L1014.41 682.449 L1013.85 682.449 L1013.29 682.449 L1012.73 682.449 L1012.18 682.449 L1011.62 682.449 L1011.06 682.449 L1010.5 682.449 L1009.94 682.449 L1009.38 682.449 L1008.82 682.449 L1008.26 682.449 L1007.7 682.449 L1007.14 682.449 L1006.58 682.449 L1006.02 682.449 L1005.46 682.449 L1004.91 682.449 L1004.35 682.449 L1003.79 682.449 L1003.23 682.449 L1002.67 682.449 L1002.11 682.449 L1001.55 682.449 L1000.99 682.449 L1000.43 682.449 L999.872 682.449 L999.313 682.449 L998.754 682.449 L998.194 682.449 L997.635 682.449 L997.076 682.449 L996.517 682.449 L995.957 682.449 L995.398 682.449 L994.839 682.449 L994.28 682.449 L993.72 682.449 L993.161 682.449 L992.602 682.449 L992.043 682.449 L991.483 682.449 L990.924 682.449 L990.365 682.449 L989.806 682.449 L989.246 682.449 L988.687 682.449 L988.128 682.449 L987.569 682.449 L987.009 682.449 L986.45 682.449 L985.891 682.449 L985.332 682.449 L984.772 682.449 L984.213 682.449 L983.654 682.449 L983.095 682.449 L982.535 682.449 L981.976 682.449 L981.417 682.449 L980.858 682.449 L980.298 682.449 L979.739 682.449 L979.18 682.449 L978.621 682.449 L978.061 682.449 L977.502 682.449 L976.943 682.449 L976.384 682.449 L975.824 682.449 L975.265 682.449 L974.706 682.449 L974.147 682.449 L973.587 682.449 L973.028 682.449 L972.469 682.449 L971.91 682.449 L971.35 682.449 L970.791 682.449 L970.232 682.449 L969.673 682.449 L969.113 682.449 L968.554 682.449 L967.995 682.449 L967.436 682.449 L966.876 682.449 L966.317 682.449 L965.758 682.449 L965.199 682.449 L964.639 682.449 L964.08 682.449 L963.521 682.449 L962.962 682.449 L962.402 682.449 L961.843 682.449 L961.284 682.449 L960.725 682.449 L960.165 682.449 L959.606 682.449 L959.047 682.449 L958.488 682.449 L957.928 682.449 L957.369 682.449 L956.81 682.449 L956.251 682.449 L955.691 682.449 L955.132 682.449 L954.573 682.449 L954.014 682.449 L953.454 682.449 L952.895 682.449 L952.336 682.449 L951.777 682.449 L951.217 682.449 L950.658 682.449 L950.099 682.449 L949.54 682.449 L948.98 682.449 L948.421 682.449 L947.862 682.449 L947.303 682.449 L946.743 682.449 L946.184 682.449 L945.625 682.449 L945.066 682.449 L944.506 682.449 L943.947 682.449 L943.388 682.449 L942.829 682.449 L942.269 682.449 L941.71 682.449 L941.151 682.449 L940.592 682.449 L940.032 682.449 L939.473 682.449 L938.914 682.449 L938.355 682.449 L937.795 682.449 L937.236 682.449 L936.677 682.449 L936.118 682.449 L935.558 682.449 L934.999 682.449 L934.44 682.449 L933.881 682.449 L933.321 682.449 L932.762 682.449 L932.203 682.449 L931.644 682.449 L931.084 682.449 L930.525 682.449 L929.966 682.449 L929.406 682.449 L928.847 682.449 L928.288 682.449 L927.729 682.449 L927.169 682.449 L926.61 682.449 L926.051 682.449 L925.492 682.449 L924.932 682.449 L924.373 682.449 L923.814 682.449 L923.255 682.449 L922.695 682.449 L922.136 682.449 L921.577 682.449 L921.018 682.449 L920.458 682.449 L919.899 682.449 L919.34 682.449 L918.781 682.449 L918.221 682.449 L917.662 682.449 L917.103 682.449 L916.544 682.449 L915.984 682.449 L915.425 682.449 L914.866 682.449 L914.307 682.449 L913.747 682.449 L913.188 682.449 L912.629 682.449 L912.07 682.449 L911.51 682.449 L910.951 682.449 L910.392 682.449 L909.833 682.449 L909.273 682.449 L908.714 682.449 L908.155 682.449 L907.596 682.449 L907.036 682.449 L906.477 682.449 L905.918 682.449 L905.359 682.449 L904.799 682.449 L904.24 682.449 L903.681 682.449 L903.122 682.449 L902.562 682.449 L902.003 682.449 L901.444 682.449 L900.885 682.449 L900.325 682.449 L899.766 682.449 L899.207 682.449 L898.648 682.449 L898.088 682.449 L897.529 682.449 L896.97 682.449 L896.411 682.449 L895.851 682.449 L895.292 682.449 L894.733 682.449 L894.174 682.449 L893.614 682.449 L893.055 682.449 L892.496 682.449 L891.937 682.449 L891.377 682.449 L890.818 682.449 L890.259 682.449 L889.7 682.449 L889.14 682.449 L888.581 682.449 L888.022 682.449 L887.463 682.449 L886.903 682.449 L886.344 682.449 L885.785 682.449 L885.226 682.449 L884.666 682.449 L884.107 682.449 L883.548 682.449 L882.989 682.449 L882.429 682.449 L881.87 682.449 L881.311 682.449 L880.752 682.449 L880.192 682.449 L879.633 682.449 L879.074 682.449 L878.515 682.449 L877.955 682.449 L877.396 682.449 L876.837 682.449 L876.278 682.449 L875.718 682.449 L875.159 682.449 L874.6 682.449 L874.041 682.449 L873.481 682.449 L872.922 682.449 L872.363 682.449 L871.804 682.449 L871.244 682.449 L870.685 682.449 L870.126 682.449 L869.567 682.449 L869.007 682.449 L868.448 682.449 L867.889 682.449 L867.33 682.449 L866.77 682.449 L866.211 682.449 L865.652 682.449 L865.093 682.449 L864.533 682.449 L863.974 682.449 L863.415 682.449 L862.856 682.449 L862.296 682.449 L861.737 682.449 L861.178 682.449 L860.619 682.449 L860.059 682.449 L859.5 682.449 L858.941 682.449 L858.382 682.449 L857.822 682.449 L857.263 682.449 L856.704 682.449 L856.145 682.449 L855.585 682.449 L855.026 682.449 L854.467 682.449 L853.908 682.449 L853.348 682.449 L852.789 682.449 L852.23 682.449 L851.671 682.449 L851.111 682.449 L850.552 682.449 L849.993 682.449 L849.434 682.449 L848.874 682.449 L848.315 682.449 L847.756 682.449 L847.197 682.449 L846.637 682.449 L846.078 682.449 L845.519 682.449 L844.96 682.449 L844.4 682.449 L843.841 682.449 L843.282 682.449 L842.723 682.449 L842.163 682.449 L841.604 682.449 L841.045 682.449 L840.486 682.449 L839.926 682.449 L839.367 682.449 L838.808 682.449 L838.249 682.449 L837.689 682.449 L837.13 682.449 L836.571 682.449 L836.012 682.449 L835.452 682.449 L834.893 682.449 L834.334 682.449 L833.775 682.449 L833.215 682.449 L832.656 682.449 L832.097 682.449 L831.538 682.449 L830.978 682.449 L830.419 682.449 L829.86 682.449 L829.301 682.449 L828.741 682.449 L828.182 682.449 L827.623 682.449 L827.064 682.449 L826.504 682.449 L825.945 682.449 L825.386 682.449 L824.827 682.449 L824.267 682.449 L823.708 682.449 L823.149 682.449 L822.59 682.449 L822.03 682.449 L821.471 682.449 L820.912 682.449 L820.353 682.449 L819.793 682.449 L819.234 682.449 L818.675 682.449 L818.116 682.449 L817.556 682.449 L816.997 682.449 L816.438 682.449 L815.879 682.449 L815.319 682.449 L814.76 682.449 L814.201 682.449 L813.642 682.449 L813.082 682.449 L812.523 682.449 L811.964 682.449 L811.405 682.449 L810.845 682.449 L810.286 682.449 L809.727 682.449 L809.168 682.449 L808.608 682.449 L808.049 682.449 L807.49 682.449 L806.931 682.449 L806.371 682.449 L805.812 682.449 L805.253 682.449 L804.693 682.449 L804.134 682.449 L803.575 682.449 L803.016 682.449 L802.456 682.449 L801.897 682.449 L801.338 682.449 L800.779 682.449 L800.219 682.449 L799.66 682.449 L799.101 682.449 L798.542 682.449 L797.982 682.449 L797.423 682.449 L796.864 682.449 L796.305 682.449 L795.745 682.449 L795.186 682.449 L794.627 682.449 L794.068 682.449 L793.508 682.449 L792.949 682.449 L792.39 682.449 L791.831 682.449 L791.271 682.449 L790.712 682.449 L790.153 682.449 L789.594 682.449 L789.034 682.449 L788.475 682.449 L787.916 682.449 L787.357 682.449 L786.797 682.449 L786.238 682.449 L785.679 682.449 L785.12 682.449 L784.56 682.449 L784.001 682.449 L783.442 682.449 L782.883 682.449 L782.323 682.449 L781.764 682.449 L781.205 682.449 L780.646 682.449 L780.086 682.449 L779.527 682.449 L778.968 682.449 L778.409 682.449 L777.849 682.449 L777.29 682.449 L776.731 682.449 L776.172 682.449 L775.612 682.449 L775.053 682.449 L774.494 682.449 L773.935 682.449 L773.375 682.449 L772.816 682.449 L772.257 682.449 L771.698 682.449 L771.138 682.449 L770.579 682.449 L770.02 682.449 L769.461 682.449 L768.901 682.449 L768.342 682.449 L767.783 682.449 L767.224 682.449 L766.664 682.449 L766.105 682.449 L765.546 682.449 L764.987 682.449 L764.427 682.449 L763.868 682.449 L763.309 682.449 L762.75 682.449 L762.19 682.449 L761.631 682.449 L761.072 682.449 L760.513 682.449 L759.953 682.449 L759.394 682.449 L758.835 682.449 L758.276 682.449 L757.716 682.449 L757.157 682.449 L756.598 682.449 L756.039 682.449 L755.479 682.449 L754.92 682.449 L754.361 682.449 L753.802 682.449 L753.242 682.449 L752.683 682.449 L752.124 682.449 L751.565 682.449 L751.005 682.449 L750.446 682.449 L749.887 682.449 L749.328 682.449 L748.768 682.449 L748.209 682.449 L747.65 682.449 L747.091 682.449 L746.531 682.449 L745.972 682.449 L745.413 682.449 L744.854 682.449 L744.294 682.449 L743.735 682.449 L743.176 682.449 L742.617 682.449 L742.057 682.449 L741.498 682.449 L740.939 682.449 L740.38 682.449 L739.82 682.449 L739.261 682.449 L738.702 682.449 L738.143 682.449 L737.583 682.449 L737.024 682.449 L736.465 682.449 L735.906 682.449 L735.346 682.449 L734.787 682.449 L734.228 682.449 L733.669 682.449 L733.109 682.449 L732.55 682.449 L731.991 682.449 L731.432 682.449 L730.872 682.449 L730.313 682.449 L729.754 682.449 L729.195 682.449 L728.635 682.449 L728.076 682.449 L727.517 682.449 L726.958 682.449 L726.398 682.449 L725.839 682.449 L725.28 682.449 L724.721 682.449 L724.161 682.449 L723.602 682.449 L723.043 682.449 L722.484 682.449 L721.924 682.449 L721.365 682.449 L720.806 682.449 L720.247 682.449  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip123)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.267 720.806,683.267 721.365,683.267 721.924,683.267 722.484,683.267 723.043,683.267 723.602,683.267 724.161,683.267 724.721,683.267 725.28,683.267 725.839,683.267 726.398,683.267 726.958,683.267 727.517,683.267 728.076,683.267 728.635,683.267 729.195,683.267 729.754,683.267 730.313,683.267 730.872,683.267 731.432,683.267 731.991,683.267 732.55,683.267 733.109,683.267 733.669,683.267 734.228,683.267 734.787,683.267 735.346,683.267 735.906,683.267 736.465,683.267 737.024,683.267 737.583,683.267 738.143,683.267 738.702,683.267 739.261,683.267 739.82,683.267 740.38,683.267 740.939,683.267 741.498,683.267 742.057,683.267 742.617,683.267 743.176,683.267 743.735,683.267 744.294,683.267 744.854,683.267 745.413,683.267 745.972,683.267 746.531,683.267 747.091,683.267 747.65,683.267 748.209,683.267 748.768,683.267 749.328,683.267 749.887,683.267 750.446,683.267 751.005,683.267 751.565,683.267 752.124,683.267 752.683,683.267 753.242,683.267 753.802,683.267 754.361,683.267 754.92,683.267 755.479,683.267 756.039,683.267 756.598,683.267 757.157,683.267 757.716,683.267 758.276,683.267 758.835,683.267 759.394,683.267 759.953,683.267 760.513,683.267 761.072,683.267 761.631,683.267 762.19,683.267 762.75,683.267 763.309,683.267 763.868,683.267 764.427,683.267 764.987,683.267 765.546,683.267 766.105,683.267 766.664,683.267 767.224,683.267 767.783,683.267 768.342,683.267 768.901,683.267 769.461,683.267 770.02,683.267 770.579,683.267 771.138,683.267 771.698,683.267 772.257,683.267 772.816,683.267 773.375,683.267 773.935,683.267 774.494,683.267 775.053,683.267 775.612,683.267 776.172,683.267 776.731,683.267 777.29,683.267 777.849,683.267 778.409,683.267 778.968,683.267 779.527,683.267 780.086,683.267 780.646,683.267 781.205,683.267 781.764,683.267 782.323,683.267 782.883,683.267 783.442,683.267 784.001,683.267 784.56,683.267 785.12,683.267 785.679,683.267 786.238,683.267 786.797,683.267 787.357,683.267 787.916,683.267 788.475,683.267 789.034,683.267 789.594,683.267 790.153,683.267 790.712,683.267 791.271,683.267 791.831,683.267 792.39,683.267 792.949,683.267 793.508,683.267 794.068,683.267 794.627,683.267 795.186,683.267 795.745,683.267 796.305,683.267 796.864,683.267 797.423,683.267 797.982,683.267 798.542,683.267 799.101,683.267 799.66,683.267 800.219,683.267 800.779,683.267 801.338,683.267 801.897,683.267 802.456,683.267 803.016,683.267 803.575,683.267 804.134,683.267 804.693,683.267 805.253,683.267 805.812,683.267 806.371,683.267 806.931,683.267 807.49,683.267 808.049,683.267 808.608,683.267 809.168,683.267 809.727,683.267 810.286,683.267 810.845,683.267 811.405,683.267 811.964,683.267 812.523,683.267 813.082,683.267 813.642,683.267 814.201,683.267 814.76,683.267 815.319,683.267 815.879,683.267 816.438,683.267 816.997,683.267 817.556,683.267 818.116,683.267 818.675,683.267 819.234,683.267 819.793,683.267 820.353,683.267 820.912,683.267 821.471,683.267 822.03,683.267 822.59,683.267 823.149,683.267 823.708,683.267 824.267,683.267 824.827,683.267 825.386,683.267 825.945,683.267 826.504,683.267 827.064,683.267 827.623,683.267 828.182,683.267 828.741,683.267 829.301,683.267 829.86,683.267 830.419,683.267 830.978,683.267 831.538,683.267 832.097,683.267 832.656,683.267 833.215,683.267 833.775,683.267 834.334,683.267 834.893,683.267 835.452,683.267 836.012,683.267 836.571,683.267 837.13,683.267 837.689,683.267 838.249,683.267 838.808,683.267 839.367,683.267 839.926,683.267 840.486,683.267 841.045,683.267 841.604,683.267 842.163,683.267 842.723,683.267 843.282,683.267 843.841,683.267 844.4,683.267 844.96,683.267 845.519,683.267 846.078,683.267 846.637,683.267 847.197,683.267 847.756,683.267 848.315,683.267 848.874,683.267 849.434,683.267 849.993,683.267 850.552,683.267 851.111,683.267 851.671,683.267 852.23,683.267 852.789,683.267 853.348,683.267 853.908,683.267 854.467,683.267 855.026,683.267 855.585,683.267 856.145,683.267 856.704,683.267 857.263,683.267 857.822,683.267 858.382,683.267 858.941,683.267 859.5,683.267 860.059,683.267 860.619,683.267 861.178,683.267 861.737,683.267 862.296,683.267 862.856,683.267 863.415,683.267 863.974,683.267 864.533,683.267 865.093,683.267 865.652,683.267 866.211,683.267 866.77,683.267 867.33,683.267 867.889,683.267 868.448,683.267 869.007,683.267 869.567,683.267 870.126,683.267 870.685,683.267 871.244,683.267 871.804,683.267 872.363,683.267 872.922,683.267 873.481,683.267 874.041,683.267 874.6,683.267 875.159,683.267 875.718,683.267 876.278,683.267 876.837,683.267 877.396,683.267 877.955,683.267 878.515,683.267 879.074,683.267 879.633,683.267 880.192,683.267 880.752,683.267 881.311,683.267 881.87,683.267 882.429,683.267 882.989,683.267 883.548,683.267 884.107,683.267 884.666,683.267 885.226,683.267 885.785,683.267 886.344,683.267 886.903,683.267 887.463,683.267 888.022,683.267 888.581,683.267 889.14,683.267 889.7,683.267 890.259,683.267 890.818,683.267 891.377,683.267 891.937,683.267 892.496,683.267 893.055,683.267 893.614,683.267 894.174,683.267 894.733,683.267 895.292,683.267 895.851,683.267 896.411,683.267 896.97,683.267 897.529,683.267 898.088,683.267 898.648,683.267 899.207,683.267 899.766,683.267 900.325,683.267 900.885,683.267 901.444,683.267 902.003,683.267 902.562,683.267 903.122,683.267 903.681,683.267 904.24,683.267 904.799,683.267 905.359,683.267 905.918,683.267 906.477,683.267 907.036,683.267 907.596,683.267 908.155,683.267 908.714,683.267 909.273,683.267 909.833,683.267 910.392,683.267 910.951,683.267 911.51,683.267 912.07,683.267 912.629,683.267 913.188,683.267 913.747,683.267 914.307,683.267 914.866,683.267 915.425,683.267 915.984,683.267 916.544,683.267 917.103,683.267 917.662,683.267 918.221,683.267 918.781,683.267 919.34,683.267 919.899,683.267 920.458,683.267 921.018,683.267 921.577,683.267 922.136,683.267 922.695,683.267 923.255,683.267 923.814,683.267 924.373,683.267 924.932,683.267 925.492,683.267 926.051,683.267 926.61,683.267 927.169,683.267 927.729,683.267 928.288,683.267 928.847,683.267 929.406,683.267 929.966,683.267 930.525,683.267 931.084,683.267 931.644,683.267 932.203,683.267 932.762,683.267 933.321,683.267 933.881,683.267 934.44,683.267 934.999,683.267 935.558,683.267 936.118,683.267 936.677,683.267 937.236,683.267 937.795,683.267 938.355,683.267 938.914,683.267 939.473,683.267 940.032,683.267 940.592,683.267 941.151,683.267 941.71,683.267 942.269,683.267 942.829,683.267 943.388,683.267 943.947,683.267 944.506,683.267 945.066,683.267 945.625,683.267 946.184,683.267 946.743,683.267 947.303,683.267 947.862,683.267 948.421,683.267 948.98,683.267 949.54,683.267 950.099,683.267 950.658,683.267 951.217,683.267 951.777,683.267 952.336,683.267 952.895,683.267 953.454,683.267 954.014,683.267 954.573,683.267 955.132,683.267 955.691,683.267 956.251,683.267 956.81,683.267 957.369,683.267 957.928,683.267 958.488,683.267 959.047,683.267 959.606,683.267 960.165,683.267 960.725,683.267 961.284,683.267 961.843,683.267 962.402,683.267 962.962,683.267 963.521,683.267 964.08,683.267 964.639,683.267 965.199,683.267 965.758,683.267 966.317,683.267 966.876,683.267 967.436,683.267 967.995,683.267 968.554,683.267 969.113,683.267 969.673,683.267 970.232,683.267 970.791,683.267 971.35,683.267 971.91,683.267 972.469,683.267 973.028,683.267 973.587,683.267 974.147,683.267 974.706,683.267 975.265,683.267 975.824,683.267 976.384,683.267 976.943,683.267 977.502,683.267 978.061,683.267 978.621,683.267 979.18,683.267 979.739,683.267 980.298,683.267 980.858,683.267 981.417,683.267 981.976,683.267 982.535,683.267 983.095,683.267 983.654,683.267 984.213,683.267 984.772,683.267 985.332,683.267 985.891,683.267 986.45,683.267 987.009,683.267 987.569,683.267 988.128,683.267 988.687,683.267 989.246,683.267 989.806,683.267 990.365,683.267 990.924,683.267 991.483,683.267 992.043,683.267 992.602,683.267 993.161,683.267 993.72,683.267 994.28,683.267 994.839,683.267 995.398,683.267 995.957,683.267 996.517,683.267 997.076,683.267 997.635,683.267 998.194,683.267 998.754,683.267 999.313,683.267 999.872,683.267 1000.43,683.267 1000.99,683.267 1001.55,683.267 1002.11,683.267 1002.67,683.267 1003.23,683.267 1003.79,683.267 1004.35,683.267 1004.91,683.267 1005.46,683.267 1006.02,683.267 1006.58,683.267 1007.14,683.267 1007.7,683.267 1008.26,683.267 1008.82,683.267 1009.38,683.267 1009.94,683.267 1010.5,683.267 1011.06,683.267 1011.62,683.267 1012.18,683.267 1012.73,683.267 1013.29,683.267 1013.85,683.267 1014.41,683.267 1014.97,683.267 1015.53,683.267 1016.09,683.267 1016.65,683.267 1017.21,683.267 1017.77,683.267 1018.33,683.267 1018.89,683.267 1019.45,683.267 1020.01,683.267 1020.56,683.267 1021.12,683.267 1021.68,683.267 1022.24,683.267 1022.8,683.267 1023.36,683.267 1023.92,683.267 1024.48,683.267 1025.04,683.267 1025.6,683.267 1026.16,683.267 1026.72,683.267 1027.28,683.267 1027.83,683.267 1028.39,683.267 1028.95,683.267 1029.51,683.267 1030.07,683.267 1030.63,683.267 1031.19,683.267 1031.75,683.267 1032.31,683.267 1032.87,683.267 1033.43,683.267 1033.99,683.267 1034.55,683.267 1035.1,683.267 1035.66,683.267 1036.22,683.267 1036.78,683.267 1037.34,683.267 1037.9,683.267 1038.46,683.267 1039.02,683.267 1039.58,683.267 1040.14,683.267 1040.7,683.267 1041.26,683.267 1041.82,683.267 1042.38,683.267 1042.93,683.267 1043.49,683.267 1044.05,683.267 1044.61,683.267 1045.17,683.267 1045.73,683.267 1046.29,683.267 1046.85,683.267 1047.41,683.267 1047.97,683.267 1048.53,683.267 1049.09,683.267 1049.65,683.267 1050.2,683.267 1050.76,683.267 1051.32,683.267 1051.88,683.267 1052.44,683.267 1053,683.267 1053.56,683.267 1054.12,683.267 1054.68,683.267 1055.24,683.267 1055.8,683.267 1056.36,683.267 1056.92,683.267 1057.48,683.267 1058.03,683.267 1058.59,683.267 1059.15,683.267 1059.71,683.267 1060.27,683.267 1060.83,683.267 1061.39,683.267 1061.95,683.267 1062.51,683.267 1063.07,683.267 1063.63,683.267 1064.19,683.267 1064.75,683.267 1065.3,683.267 1065.86,683.267 1066.42,683.267 1066.98,683.267 1067.54,683.267 1068.1,683.267 1068.66,683.267 1069.22,683.267 1069.78,683.267 1070.34,683.267 1070.9,683.267 1071.46,683.267 1072.02,683.267 1072.57,683.267 1073.13,683.267 1073.69,683.267 1074.25,683.267 1074.81,683.267 1075.37,683.267 1075.93,683.267 1076.49,683.267 1077.05,683.267 1077.61,683.267 1078.17,683.267 1078.73,683.267 1079.29,683.267 1079.85,683.267 1080.4,683.267 1080.96,683.267 1081.52,683.267 1082.08,683.267 1082.64,683.267 1083.2,683.267 1083.76,683.267 1084.32,683.267 1084.88,683.267 1085.44,683.267 1086,683.267 1086.56,683.267 1087.12,683.267 1087.67,683.267 1088.23,683.267 1088.79,683.267 1089.35,683.267 1089.91,683.267 1090.47,683.267 1091.03,683.267 1091.59,683.267 1092.15,683.267 1092.71,683.267 1093.27,683.267 1093.83,683.267 1094.39,683.267 1094.94,683.267 1095.5,683.267 1096.06,683.267 1096.62,683.267 1097.18,683.267 1097.74,683.267 1098.3,683.267 1098.86,683.267 1099.42,683.267 1099.98,683.267 1100.54,683.267 1101.1,683.267 1101.66,683.267 1102.22,683.267 1102.77,683.267 1103.33,683.267 1103.89,683.267 1104.45,683.267 1105.01,683.267 1105.57,683.267 1106.13,683.267 1106.69,683.267 1107.25,683.267 1107.81,683.267 1108.37,683.267 1108.93,683.267 1109.49,683.267 1110.04,683.267 1110.6,683.267 1111.16,683.267 1111.72,683.267 1112.28,683.267 1112.84,683.267 1113.4,683.267 1113.96,683.267 1114.52,683.267 1115.08,683.267 1115.64,683.267 1116.2,683.267 1116.76,683.267 1117.31,683.267 1117.87,683.267 1118.43,683.267 1118.99,683.267 1119.55,683.267 1120.11,683.267 1120.67,683.267 1121.23,683.267 1121.79,683.267 1122.35,683.267 1122.91,683.267 1123.47,683.267 1124.03,683.267 1124.59,683.267 1125.14,683.267 1125.7,683.267 1126.26,683.267 1126.82,683.267 1127.38,683.267 1127.94,683.267 1128.5,683.267 1129.06,683.267 1129.62,683.267 1130.18,683.267 1130.74,683.267 1131.3,683.267 1131.86,683.267 1132.41,683.267 1132.97,683.267 1133.53,683.267 1134.09,683.267 1134.65,683.267 1135.21,683.267 1135.77,683.267 1136.33,683.267 1136.89,683.267 1137.45,683.267 1138.01,683.267 1138.57,683.267 1139.13,683.267 1139.68,683.267 1140.24,683.267 1140.8,683.267 1141.36,683.267 1141.92,683.267 1142.48,683.267 1143.04,683.267 1143.6,683.267 1144.16,683.267 1144.72,683.267 1145.28,683.267 1145.84,683.267 1146.4,683.267 1146.96,683.267 1147.51,683.267 1148.07,683.267 1148.63,683.267 1149.19,683.267 1149.75,683.267 1150.31,683.267 1150.87,683.267 1151.43,683.267 1151.99,683.267 1152.55,683.267 1153.11,683.267 1153.67,683.267 1154.23,683.267 1154.78,683.267 1155.34,683.267 1155.9,683.267 1156.46,683.267 1157.02,683.267 1157.58,683.267 1158.14,683.267 1158.7,683.267 1159.26,683.267 1159.82,683.267 1160.38,683.267 1160.94,683.267 1161.5,683.267 1162.05,683.267 1162.61,683.267 1163.17,683.267 1163.73,683.267 1164.29,683.267 1164.85,683.267 1165.41,683.267 1165.97,683.267 1166.53,683.267 1167.09,683.267 1167.65,683.267 1168.21,683.267 1168.77,683.267 1169.33,683.267 1169.88,683.267 1170.44,683.267 1171,683.267 1171.56,683.267 1172.12,683.267 1172.68,683.267 1173.24,683.267 1173.8,683.267 1174.36,683.267 1174.92,683.267 1175.48,683.267 1176.04,683.267 1176.6,683.267 1177.15,683.267 1177.71,683.267 1178.27,683.267 1178.83,683.267 1179.39,683.267 1179.95,683.267 1180.51,683.267 1181.07,683.267 1181.63,683.267 1182.19,683.267 1182.75,683.267 1183.31,683.267 1183.87,683.267 1184.43,683.267 1184.98,683.267 1185.54,683.267 1186.1,683.267 1186.66,683.267 1187.22,683.267 1187.78,683.267 1188.34,683.267 1188.9,683.267 1189.46,683.267 1190.02,683.267 1190.58,683.267 1191.14,683.267 1191.7,683.267 1192.25,683.267 1192.81,683.267 1193.37,683.267 1193.93,683.267 1194.49,683.267 1195.05,683.267 1195.61,683.267 1196.17,683.267 1196.73,683.267 1197.29,683.267 1197.85,683.267 1198.41,683.267 1198.97,683.267 1199.52,683.267 1200.08,683.267 1200.64,683.267 1201.2,683.267 1201.76,683.267 1202.32,683.267 1202.88,683.267 1203.44,683.267 1204,683.267 1204.56,683.267 1205.12,683.267 1205.68,683.267 1206.24,683.267 1206.8,683.267 1207.35,683.267 1207.91,683.267 1208.47,683.267 1209.03,683.267 1209.59,683.267 1210.15,683.267 1210.71,683.267 1211.27,683.267 1211.83,683.267 1212.39,683.267 1212.95,683.267 1213.51,683.267 1214.07,683.267 1214.62,683.267 1215.18,683.267 1215.74,683.267 1216.3,683.267 1216.86,683.267 1217.42,683.267 1217.98,683.267 1218.54,683.267 1219.1,683.267 1219.66,683.267 1220.22,683.267 1220.78,683.267 1221.34,683.267 1221.89,683.267 1222.45,683.267 1223.01,683.267 1223.57,683.267 1224.13,683.267 1224.69,683.267 1225.25,683.267 1225.81,683.267 1226.37,683.267 1226.93,683.267 1227.49,683.267 1228.05,683.267 1228.61,683.267 1229.17,683.267 1229.72,683.267 1230.28,683.267 1230.84,683.267 1231.4,683.267 1231.96,683.267 1232.52,683.267 1233.08,683.267 1233.64,683.267 1234.2,683.267 1234.76,683.267 1235.32,683.267 1235.88,683.267 1236.44,683.267 1236.99,683.267 1237.55,683.267 1238.11,683.267 1238.67,683.267 1239.23,683.267 1239.79,683.267 1240.35,683.267 1240.91,683.267 1241.47,683.267 1242.03,683.267 1242.59,683.267 1243.15,683.267 1243.71,683.267 1244.26,683.267 1244.82,683.267 1245.38,683.267 1245.94,683.267 1246.5,683.267 1247.06,683.267 1247.62,683.267 1248.18,683.267 1248.74,683.267 1249.3,683.267 1249.86,683.267 1250.42,683.267 1250.98,683.267 1251.54,683.267 1252.09,683.267 1252.65,683.267 1253.21,683.267 1253.77,683.267 1254.33,683.267 1254.89,683.267 1255.45,683.267 1256.01,683.267 1256.57,683.267 1257.13,683.267 1257.69,683.267 1258.25,683.267 1258.81,683.267 1259.36,683.267 1259.92,683.267 1260.48,683.267 1261.04,683.267 1261.6,683.267 1262.16,683.267 1262.72,683.267 1263.28,683.267 1263.84,683.267 1264.4,683.267 1264.96,683.267 1265.52,683.267 1266.08,683.267 1266.63,683.267 1267.19,683.267 1267.75,683.267 1268.31,683.267 1268.87,683.267 1269.43,683.267 1269.99,683.267 1270.55,683.267 1271.11,683.267 1271.67,683.267 1272.23,683.267 1272.79,683.267 1273.35,683.267 1273.91,683.267 1274.46,683.267 1275.02,683.267 1275.58,683.267 1276.14,683.267 1276.7,683.267 1277.26,683.267 1277.82,683.267 1278.38,683.267 1278.94,683.267 1279.5,683.267 1280.06,683.267 1280.62,683.267 1281.18,683.267 1281.73,683.267 1282.29,683.267 1282.85,683.267 1283.41,683.267 1283.97,683.267 1284.53,683.267 1285.09,683.267 1285.65,683.267 1286.21,683.267 1286.77,683.267 1287.33,683.267 1287.89,683.267 1288.45,683.267 1289,683.267 1289.56,683.267 1290.12,683.267 1290.68,683.267 1291.24,683.267 1291.8,683.267 1292.36,683.267 1292.92,683.267 1293.48,683.267 1294.04,683.267 1294.6,683.267 1295.16,683.267 1295.72,683.267 1296.28,683.267 1296.83,683.267 1297.39,683.267 1297.95,683.267 1298.51,683.267 1299.07,683.267 1299.63,683.267 1300.19,683.267 1300.75,683.267 1301.31,683.267 1301.87,683.267 1302.43,683.267 1302.99,683.267 1303.55,683.267 1304.1,683.267 1304.66,683.267 1305.22,683.267 1305.78,683.267 1306.34,683.267 1306.9,683.267 1307.46,683.267 1308.02,683.267 1308.58,683.267 1309.14,683.267 1309.7,683.267 1310.26,683.267 1310.82,683.267 1311.38,683.267 1311.93,683.267 1312.49,683.267 1313.05,683.267 1313.61,683.267 1314.17,683.267 1314.73,683.267 1315.29,683.267 1315.85,683.267 1316.41,683.267 1316.97,683.267 1317.53,683.267 1318.09,683.267 1318.65,683.267 1319.2,683.267 1319.76,683.267 1320.32,683.267 1320.88,683.267 1321.44,683.267 1322,683.267 1322.56,683.267 1323.12,683.267 1323.68,683.267 1324.24,683.267 1324.8,683.267 1325.36,683.267 1325.92,683.267 1326.47,683.267 1327.03,683.267 1327.59,683.267 1328.15,683.267 1328.71,683.267 1329.27,683.267 1329.83,683.267 1330.39,683.267 1330.95,683.267 1331.51,683.267 1332.07,683.267 1332.63,683.267 1333.19,683.267 1333.75,683.267 1334.3,683.267 1334.86,683.267 1335.42,683.267 1335.98,683.267 1336.54,683.267 1337.1,683.267 1337.66,683.267 1338.22,683.267 1338.78,683.267 1339.34,683.267 1339.9,683.267 1340.46,683.267 1341.02,683.267 1341.57,683.267 1342.13,683.267 1342.69,683.267 1343.25,683.267 1343.81,683.267 1344.37,683.267 1344.93,683.267 1345.49,683.267 1346.05,683.267 1346.61,683.267 1347.17,683.267 1347.73,683.267 1348.29,683.267 1348.84,683.267 1349.4,683.267 1349.96,683.267 1350.52,683.267 1351.08,683.267 1351.64,683.267 1352.2,683.267 1352.76,683.267 1353.32,683.267 1353.88,683.267 1354.44,683.267 1355,683.267 1355.56,683.267 1356.12,683.267 1356.67,683.267 1357.23,683.267 1357.79,683.267 1358.35,683.267 1358.91,683.267 1359.47,683.267 1360.03,683.267 1360.59,683.267 1361.15,683.267 1361.71,683.267 1362.27,683.267 1362.83,683.267 1363.39,683.267 1363.94,683.267 1364.5,683.267 1365.06,683.267 1365.62,683.267 1366.18,683.267 1366.74,683.267 1367.3,683.267 1367.86,683.267 1368.42,683.267 1368.98,683.267 1369.54,683.267 1370.1,683.267 1370.66,683.267 1371.21,683.267 1371.77,683.267 1372.33,683.267 1372.89,683.267 1373.45,683.267 1374.01,683.267 1374.57,683.267 1375.13,683.267 1375.69,683.267 1376.25,683.267 1376.81,683.267 1377.37,683.267 1377.93,683.267 1378.49,683.267 1379.04,683.267 1379.6,683.267 1380.16,683.267 1380.72,683.267 1381.28,683.267 1381.84,683.267 1382.4,683.267 1382.96,683.267 1383.52,683.267 1384.08,683.267 1384.64,683.267 1385.2,683.267 1385.76,683.267 1386.31,683.267 1386.87,683.267 1387.43,683.267 1387.99,683.267 1388.55,683.267 1389.11,683.267 1389.67,683.267 1390.23,683.267 1390.79,683.267 1391.35,683.267 1391.91,683.267 1392.47,683.267 1393.03,683.267 1393.58,683.267 1394.14,683.267 1394.7,683.267 1395.26,683.267 1395.82,683.267 1396.38,683.267 1396.94,683.267 1397.5,683.267 1398.06,683.267 1398.62,683.267 1399.18,683.267 1399.74,683.267 1400.3,683.267 1400.86,683.267 1401.41,683.267 1401.97,683.267 1402.53,683.267 1403.09,683.267 1403.65,683.267 1404.21,683.267 1404.77,683.267 1405.33,683.267 1405.89,683.267 1406.45,683.267 1407.01,683.267 1407.57,683.267 1408.13,683.267 1408.68,683.267 1409.24,683.267 1409.8,683.267 1410.36,683.267 1410.92,683.267 1411.48,683.267 1412.04,683.267 1412.6,683.267 1413.16,683.267 1413.72,683.267 1414.28,683.267 1414.84,683.267 1415.4,683.267 1415.95,683.267 1416.51,683.267 1417.07,683.267 1417.63,683.267 1418.19,683.267 1418.75,683.267 1419.31,683.267 1419.87,683.267 1420.43,683.267 1420.99,683.267 1421.55,683.267 1422.11,683.267 1422.67,683.267 1423.23,683.267 1423.78,683.267 1424.34,683.267 1424.9,683.267 1425.46,683.267 1426.02,683.267 1426.58,683.267 1427.14,683.267 1427.7,683.267 1428.26,683.267 1428.82,683.267 1429.38,683.267 1429.94,683.267 1430.5,683.267 1431.05,683.267 1431.61,683.267 1432.17,683.267 1432.73,683.267 1433.29,683.267 1433.85,683.267 1434.41,683.267 1434.97,683.267 1435.53,683.267 1436.09,683.267 1436.65,683.267 1437.21,683.267 1437.77,683.267 1438.33,683.267 1438.88,683.267 1439.44,683.267 1440,683.267 1440.56,683.267 1441.12,683.267 1441.68,683.267 1442.24,683.267 1442.8,683.267 1443.36,683.267 1443.92,683.267 1444.48,683.267 1445.04,683.267 1445.6,683.267 1446.15,683.267 1446.71,683.267 1447.27,683.267 1447.83,683.267 1448.39,683.267 1448.95,683.267 1449.51,683.267 1450.07,683.267 1450.63,683.267 1451.19,683.267 1451.75,683.267 1452.31,683.267 1452.87,683.267 1453.42,683.267 1453.98,683.267 1454.54,683.267 1455.1,683.267 1455.66,683.267 1456.22,683.267 1456.78,683.267 1457.34,683.267 1457.9,683.267 1458.46,683.267 1459.02,683.267 1459.58,683.267 1460.14,683.267 1460.7,683.267 1461.25,683.267 1461.81,683.267 1462.37,683.267 1462.93,683.267 1463.49,683.267 1464.05,683.267 1464.61,683.267 1465.17,683.267 1465.73,683.267 1466.29,683.267 1466.85,683.267 1467.41,683.267 1467.97,683.267 1468.52,683.267 1469.08,683.267 1469.64,683.267 1470.2,683.267 1470.76,683.267 1471.32,683.267 1471.88,683.267 1472.44,683.267 1473,683.267 1473.56,683.267 1474.12,683.267 1474.68,683.267 1475.24,683.267 1475.79,683.267 1476.35,683.267 1476.91,683.267 1477.47,683.267 1478.03,683.267 1478.59,683.267 1479.15,683.267 1479.71,683.267 1480.27,683.267 1480.83,683.267 1481.39,683.267 1481.95,683.267 1482.51,683.267 1483.07,683.267 1483.62,683.267 1484.18,683.267 1484.74,683.267 1485.3,683.267 1485.86,683.267 1486.42,683.267 1486.98,683.267 1487.54,683.267 1488.1,683.267 1488.66,683.267 1489.22,683.267 1489.78,683.267 1490.34,683.267 1490.89,683.267 1491.45,683.267 1492.01,683.267 1492.57,683.267 1493.13,683.267 1493.69,683.267 1494.25,683.267 1494.81,683.267 1495.37,683.267 1495.93,683.267 1496.49,683.267 1497.05,683.267 1497.61,683.267 1498.16,683.267 1498.72,683.267 1499.28,683.267 1499.84,683.267 1500.4,683.267 1500.96,683.267 1501.52,683.267 1502.08,683.267 1502.64,683.267 1503.2,683.267 1503.76,683.267 1504.32,683.267 1504.88,683.267 1505.44,683.267 1505.99,683.267 1506.55,683.267 1507.11,683.267 1507.67,683.267 1508.23,683.267 1508.79,683.267 1509.35,683.267 1509.91,683.267 1510.47,683.267 1511.03,683.267 1511.59,683.267 1512.15,683.267 1512.71,683.267 1513.26,683.267 1513.82,683.267 1514.38,683.267 1514.94,683.267 1515.5,683.267 1516.06,683.267 1516.62,683.267 1517.18,683.267 1517.74,683.267 1518.3,683.267 1518.86,683.267 1519.42,683.267 1519.98,683.267 1520.53,683.267 1521.09,683.267 1521.65,683.267 1522.21,683.267 1522.77,683.267 1523.33,683.267 1523.89,683.267 1524.45,683.267 1525.01,683.267 1525.57,683.267 1526.13,683.267 1526.69,683.267 1527.25,683.267 1527.81,683.267 1528.36,683.267 1528.92,683.267 1529.48,683.267 1530.04,683.267 1530.6,683.267 1531.16,683.267 1531.72,683.267 1532.28,683.267 1532.84,683.267 1533.4,683.267 1533.96,683.267 1534.52,683.267 1535.08,683.267 1535.63,683.267 1536.19,683.267 1536.75,683.267 1537.31,683.267 1537.87,683.267 1538.43,683.267 1538.99,683.267 1539.55,683.267 1540.11,683.267 1540.67,683.267 1541.23,683.267 1541.79,683.267 1542.35,683.267 1542.9,683.267 1543.46,683.267 1544.02,683.267 1544.58,683.267 1545.14,683.267 1545.7,683.267 1546.26,683.267 1546.82,683.267 1547.38,683.267 1547.94,683.267 1548.5,683.267 1549.06,683.267 1549.62,683.267 1550.18,683.267 1550.73,683.267 1551.29,683.267 1551.85,683.267 1552.41,683.267 1552.97,683.267 1553.53,683.267 1554.09,683.267 1554.65,683.267 1555.21,683.267 1555.77,683.267 1556.33,683.267 1556.89,683.267 1557.45,683.267 1558,683.267 1558.56,683.267 1559.12,683.267 1559.68,683.267 1560.24,683.267 1560.8,683.267 1561.36,683.267 1561.92,683.267 1562.48,683.267 1563.04,683.267 1563.6,683.267 1564.16,683.267 1564.72,683.267 1565.28,683.267 1565.83,683.267 1566.39,683.267 1566.95,683.267 1567.51,683.267 1568.07,683.267 1568.63,683.267 1569.19,683.267 1569.75,683.267 1570.31,683.267 1570.87,683.267 1571.43,683.267 1571.99,683.267 1572.55,683.267 1573.1,683.267 1573.66,683.267 1574.22,683.267 1574.78,683.267 1575.34,683.267 1575.9,683.267 1576.46,683.267 1577.02,683.267 1577.58,683.267 1578.14,683.267 1578.7,683.267 1579.26,683.267 1579.82,683.267 1580.37,683.267 1580.93,683.267 1581.49,683.267 1582.05,683.267 1582.61,683.267 1583.17,683.267 1583.73,683.267 1584.29,683.267 1584.85,683.267 1585.41,683.267 1585.97,683.267 1586.53,683.267 1587.09,683.267 1587.65,683.267 1588.2,683.267 1588.76,683.267 1589.32,683.267 1589.88,683.267 1590.44,683.267 1591,683.267 1591.56,683.267 1592.12,683.267 1592.68,683.267 1593.24,683.267 1593.8,683.267 1594.36,683.267 1594.92,683.267 1595.47,683.267 1596.03,683.267 1596.59,683.267 1597.15,683.267 1597.71,683.267 1598.27,683.267 1598.83,683.267 1599.39,683.267 1599.95,683.267 1600.51,683.267 1601.07,683.267 1601.63,683.267 1602.19,683.267 1602.74,683.267 1603.3,683.267 1603.86,683.267 1604.42,683.267 1604.98,683.267 1605.54,683.267 1606.1,683.267 1606.66,683.267 1607.22,683.267 1607.78,683.267 1608.34,683.267 1608.9,683.267 1609.46,683.267 1610.02,683.267 1610.57,683.267 1611.13,683.267 1611.69,683.267 1612.25,683.267 1612.81,683.267 1613.37,683.267 1613.93,683.267 1614.49,683.267 1615.05,683.267 1615.61,683.267 1616.17,683.267 1616.73,683.267 1617.29,683.267 1617.84,683.267 1618.4,683.267 1618.96,683.267 1619.52,683.267 1620.08,683.267 1620.64,683.267 1621.2,683.267 1621.76,683.267 1622.32,683.267 1622.88,683.267 1623.44,683.267 1624,683.267 1624.56,683.267 1625.11,683.267 1625.67,683.267 1626.23,683.267 1626.79,683.267 1627.35,683.267 1627.91,683.267 1628.47,683.267 1629.03,683.267 1629.59,683.267 1630.15,683.267 1630.71,683.267 1631.27,683.267 1631.83,683.267 1632.39,683.267 1632.94,683.267 1633.5,683.267 1634.06,683.267 1634.62,683.267 1635.18,683.267 1635.74,683.267 1636.3,683.267 1636.86,683.267 1637.42,683.267 1637.98,683.267 1638.54,683.267 1639.1,683.267 1639.66,683.267 1640.21,683.267 1640.77,683.267 1641.33,683.267 1641.89,683.267 1642.45,683.267 1643.01,683.267 1643.57,683.267 1644.13,683.267 1644.69,683.267 1645.25,683.267 1645.81,683.267 1646.37,683.267 1646.93,683.267 1647.48,683.267 1648.04,683.267 1648.6,683.267 1649.16,683.267 1649.72,683.267 1650.28,683.267 1650.84,683.267 1651.4,683.267 1651.96,683.267 1652.52,683.267 1653.08,683.267 1653.64,683.267 1654.2,683.267 1654.76,683.267 1655.31,683.267 1655.87,683.267 1656.43,683.267 1656.99,683.267 1657.55,683.267 1658.11,683.267 1658.67,683.267 1659.23,683.267 1659.79,683.267 1660.35,683.267 1660.91,683.267 1661.47,683.267 1662.03,683.267 1662.58,683.267 1663.14,683.267 1663.7,683.267 1664.26,683.267 1664.82,683.267 1665.38,683.267 1665.94,683.267 1666.5,683.267 1667.06,683.267 1667.62,683.267 1668.18,683.267 1668.74,683.267 1669.3,683.267 1669.85,683.267 1670.41,683.267 1670.97,683.267 1671.53,683.267 1672.09,683.267 1672.65,683.267 1673.21,683.267 1673.77,683.267 1674.33,683.267 1674.89,683.267 1675.45,683.267 1676.01,683.267 1676.57,683.267 1677.13,683.267 1677.68,683.267 1678.24,683.267 1678.8,683.267 1679.36,683.267 1679.92,683.267 1680.48,683.267 1681.04,683.267 1681.6,683.267 1682.16,683.267 1682.72,683.267 1683.28,683.267 1683.84,683.267 1684.4,683.267 1684.95,683.267 1685.51,683.267 1686.07,683.267 1686.63,683.267 1687.19,683.267 1687.75,683.267 1688.31,683.267 1688.87,683.267 1689.43,683.267 1689.99,683.267 1690.55,683.267 1691.11,683.267 1691.67,683.267 1692.23,683.267 1692.78,683.267 1693.34,683.267 1693.9,683.267 1694.46,683.267 1695.02,683.267 1695.58,683.267 1696.14,683.267 1696.7,683.267 1697.26,683.267 1697.82,683.267 1698.38,683.267 1698.94,683.267 1699.5,683.267 1700.05,683.267 1700.61,683.267 1701.17,683.267 1701.73,683.267 1702.29,683.267 1702.85,683.267 1703.41,683.267 1703.97,683.267 1704.53,683.267 1705.09,683.267 1705.65,683.267 1706.21,683.267 1706.77,683.267 1707.32,683.267 1707.88,683.267 1708.44,683.267 1709,683.267 1709.56,683.267 1710.12,683.267 1710.68,683.267 1711.24,683.267 1711.8,683.267 1712.36,683.267 1712.92,683.267 1713.48,683.267 1714.04,683.267 1714.6,683.267 1715.15,683.267 1715.71,683.267 1716.27,683.267 1716.83,683.267 1717.39,683.267 1717.95,683.267 1718.51,683.267 1719.07,683.267 1719.63,683.267 1720.19,683.267 1720.75,683.267 1721.31,683.267 1721.87,683.267 1722.42,683.267 1722.98,683.267 1723.54,683.267 1724.1,683.267 1724.66,683.267 1725.22,683.267 1725.78,683.267 1726.34,683.267 1726.9,683.267 1727.46,683.267 1728.02,683.267 1728.58,683.267 1729.14,683.267 1729.69,683.267 1730.25,683.267 1730.81,683.267 1731.37,683.267 1731.93,683.267 1732.49,683.267 1733.05,683.267 1733.61,683.267 1734.17,683.267 1734.73,683.267 1735.29,683.267 1735.85,683.267 1736.41,683.267 1736.97,683.267 1737.52,683.267 1738.08,683.267 1738.64,683.267 1739.2,683.267 1739.76,683.267 1740.32,683.267 1740.88,683.267 1741.44,683.267 1742,683.267 1742.56,683.267 1743.12,683.267 1743.68,683.267 1744.24,683.267 1744.79,683.267 1745.35,683.267 1745.91,683.267 1746.47,683.267 1747.03,683.267 1747.59,683.267 1748.15,683.267 1748.71,683.267 1749.27,683.267 1749.83,683.267 1750.39,683.267 1750.95,683.267 1751.51,683.267 1752.06,683.267 1752.62,683.267 1753.18,683.267 1753.74,683.267 1754.3,683.267 1754.86,683.267 1755.42,683.267 1755.98,683.267 1756.54,683.267 1757.1,683.267 1757.66,683.267 1758.22,683.267 1758.78,683.267 1759.34,683.267 1759.89,683.267 1760.45,683.267 1761.01,683.267 1761.57,683.267 1762.13,683.267 1762.69,683.267 1763.25,683.267 1763.81,683.267 1764.37,683.267 1764.93,683.267 1765.49,683.267 1766.05,683.267 1766.61,683.267 1767.16,683.267 1767.72,683.267 1768.28,683.267 1768.84,683.267 1769.4,683.267 1769.96,683.267 1770.52,683.267 1771.08,683.267 1771.64,683.267 1772.2,683.267 1772.76,683.267 1773.32,683.267 1773.88,683.267 1774.43,683.267 1774.99,683.267 1775.55,683.267 1776.11,683.267 1776.67,683.267 1777.23,683.267 1777.79,683.267 1778.35,683.267 1778.91,683.267 1779.47,683.267 1780.03,683.267 1780.59,683.267 1781.15,683.267 1781.71,683.267 1782.26,683.267 1782.82,683.267 1783.38,683.267 1783.94,683.267 1784.5,683.267 1785.06,683.267 1785.62,683.267 1786.18,683.267 1786.74,683.267 1787.3,683.267 1787.86,683.267 1788.42,683.267 1788.98,683.267 1789.53,683.267 1790.09,683.267 1790.65,683.267 1791.21,683.267 1791.77,683.267 1792.33,683.267 1792.89,683.267 1793.45,683.267 1794.01,683.267 1794.57,683.267 1795.13,683.267 1795.69,683.267 1796.25,683.267 1796.8,683.267 1797.36,683.267 1797.92,683.267 1798.48,683.267 1799.04,683.267 1799.6,683.267 1800.16,683.267 1800.72,683.267 1801.28,683.267 1801.84,683.267 1802.4,683.267 1802.96,683.267 1803.52,683.267 1804.08,683.267 1804.63,683.267 1805.19,683.267 1805.75,683.267 1806.31,683.267 1806.87,683.267 1807.43,683.267 1807.99,683.267 1808.55,683.267 1809.11,683.267 1809.67,683.267 1810.23,683.267 1810.79,683.267 1811.35,683.267 1811.9,683.267 1812.46,683.267 1813.02,683.267 1813.58,683.267 1814.14,683.267 1814.7,683.267 1815.26,683.267 1815.82,683.267 1816.38,683.267 1816.94,683.267 1817.5,683.267 1818.06,683.267 1818.62,683.267 1819.18,683.267 1819.73,683.267 1820.29,683.267 1820.85,683.267 1821.41,683.267 1821.97,683.267 1822.53,683.267 1823.09,683.267 1823.65,683.267 1824.21,683.267 1824.77,683.267 1825.33,683.267 1825.89,683.267 1826.45,683.267 1827,683.267 1827.56,683.267 1828.12,683.267 1828.68,683.267 1829.24,683.267 1829.8,683.267 1830.36,683.267 1830.92,683.267 1831.48,683.267 1832.04,683.267 1832.6,683.267 1833.16,683.267 1833.72,683.267 1834.27,683.267 1834.83,683.267 1835.39,683.267 1835.95,683.267 1836.51,683.267 1837.07,683.267 1837.63,683.267 1838.19,683.267 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ¬± $(se.err)\n    Projected Energy: $(v.val) ¬± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.031118834446428 ¬± 0.021044506100624437\nProjected Energy: -4.01348701027864 ¬± (0.004176046015821555, 0.004118520632469647)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from solve as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; Œ± = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-Œ±.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ¬± 0.0029\n  with uncertainty of ¬± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13√ó6 DataFrame\n Row ‚îÇ blocks  mean      std_err      std_err_err  p_cov       mj\n     ‚îÇ Int64   Float64   Float64      Float64      Float64     Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 ‚îÇ   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 ‚îÇ   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 ‚îÇ   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 ‚îÇ    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 ‚îÇ    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 ‚îÇ    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 ‚îÇ     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 ‚îÇ     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 ‚îÇ     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 ‚îÇ      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 ‚îÇ      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 ‚îÇ      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ästd err vs blocking steps‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n    0.00423501 ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ m test\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ std err\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°†‚¢∫‚†í‚†í‚¢∫‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚°Ü‚£Ä‚†§‚°ó‚†â‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ß‚†§‚†î‚°ó‚†ä‚†â‚°è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚¢£‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚°á‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†∏‚°Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†Å‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚°á‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£¶‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†î‚†í‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n   -0.00012335 ‚îÇ‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†ß‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚îÇ\n               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n               ‚†Ä0.64‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äk‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä13.36‚†Ä\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; Œ± = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; Œ±=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.œÉ_f using x_by_y_linear. The standard error estimate r.œÉ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.Œ¥_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ¬± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*œÉ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3√ó3 DataFrame\n Row ‚îÇ res      res_l    res_u\n     ‚îÇ Float64  Float64  Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282\n   2 ‚îÇ    13.0  1.7282   1.7282\n   3 ‚îÇ    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dœÑ=df.dœÑ[end], skip=0)\ngrowth_witness(sim::PMCSimulation, [b]; kwargs...)\n\nCalculate the growth witness directly from the result (DataFrame or PMCSimulation) of solveing a ProjectorMonteCarloProblem. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0)\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ‚â• 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n)\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dœÑ=determine_constant_time_step(df),\n    kwargs...\n)\ngrowth_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively.  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin.\n\nE_gr = E_r - frac1dœÑln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the (biased) shift estimator.  Error propagation is done with MonteCarloMeasurements. Propagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a PMCSimulation or DataFrame returned by solve. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\ngrowth_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df or PMCSimulation sim. repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-Tuple{AbstractVector, AbstractVector, AbstractVector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dœÑ=df.dœÑ[end],\n    kwargs...\n)\nmixed_estimator(sim::PMCSimulation, h; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up).  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin.  Additional keyword arguments are passed on to ratio_of_means.\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the unweighted ratio.  Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\nmixed_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(df::DataFrame; skip=0, hproj=:hproj, vproj=:vproj, kwargs...)\nprojected_energy(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy(...) to set these up in ProjectorMonteCarloProblem). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n)\nrayleigh_replica_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin. Additional keyword arguments are passed on to ratio_of_means.\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\nrayleigh_replica_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...)\nshift_estimator(sim::PMCSimulation; kwargs...)\n-> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\nreplica_fidelity(sim::PMCSimulation; kwargs...)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the PMCSimulation or DataFrame returned by solve, using replicas _1 and _2. Calls ratio_of_means to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |œà‚ü© and |œï‚ü© is defined as\n\nF(œàœï) = fracœàœï^2œàœàœïœï \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v‚ãÖv == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\nvariational_energy_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame and PMCSimulation versions can extract the relevant information from the result of solve. Set up the ProjectorMonteCarloProblem with the keyword argument replica_strategy = AllOverlaps(R) and R ‚â• 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:¬±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ¬± 0.029\n  with uncertainty of ¬± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; Œ± = 0.01) -> k\nmtest(table::NamedTuple; Œ± = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-Œ± after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, œÉ_f, Œ¥_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nœÉ_f::T: std from linear propagation\nŒ¥_y::T: coefficient of variation for denominator (‚â§ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, Œº, œÉ)\nparticles(samples, Œº::AbstractVector, Œ£::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, œÉ_f, Œ¥_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nœÉ_f standard deviation of f from linear error propagation (normal approximation)\nŒ¥_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(Œº_x,Œº_y,œÉ_x,œÉ_y,œÅ) -> f, œÉ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013).\n\nœÉ_f = sqrtfracœÉ_xŒº_y^2 + fracŒº_x œÉ_yŒº_y^2^2 - frac2 œÅ Œº_xŒº_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3√ó7 DataFrame\n Row ‚îÇ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     ‚îÇ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 ‚îÇ    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 ‚îÇ    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1√ó9 DataFrame\n Row ‚îÇ val       val_l      val_u      val_f     val_œÉ_f    val_Œ¥_y    val_k  val_blocks  val_success\n     ‚îÇ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.determine_constant_time_step-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.determine_constant_time_step","text":"determine_constant_time_step(df) -> dœÑ\n\nGiven a DataFrame df, determine the time step that was used to compute it. Throw an error if time step is not constant.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7√ó6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS‚Ä¶</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple‚Ä¶</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.474493</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3245e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.558e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">8.665e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.333e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.665e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.724e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ‚â† basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10√ó10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10√ó10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nŒîE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ŒîE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0‚ü©\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0‚ü©\"\n fs\"|0 1 2 1 0‚ü©\"\n fs\"|1 0 2 0 1‚ü©\"\n fs\"|1 0 1 2 0‚ü©\"\n fs\"|0 0 1 1 2‚ü©\"\n fs\"|0 2 1 0 1‚ü©\"\n fs\"|2 1 1 0 0‚ü©\"\n fs\"|0 2 0 2 0‚ü©\"\n fs\"|1 1 0 1 1‚ü©\"\n fs\"|2 0 0 0 2‚ü©\"\n fs\"|0 0 0 3 1‚ü©\"\n fs\"|3 0 0 1 0‚ü©\"\n fs\"|0 1 0 0 3‚ü©\"\n fs\"|1 3 0 0 0‚ü©\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ‚âà all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0‚ü©\" => -0.0214153\n  fs\"|2 0 0 0 2‚ü©\" => -0.00237613\n  fs\"|0 0 4 0 0‚ü©\" => -0.980348\n  fs\"|0 0 0 3 1‚ü©\" => 0.00363555\n  fs\"|2 1 1 0 0‚ü©\" => -0.0119687\n  fs\"|1 0 2 0 1‚ü©\" => 0.0768085\n  fs\"|1 3 0 0 0‚ü©\" => 0.00363555\n  fs\"|0 1 2 1 0‚ü©\" => 0.177701\n  fs\"|0 0 1 1 2‚ü©\" => -0.0119687\n  fs\"|3 0 0 1 0‚ü©\" => 0.00195478\n  fs\"|0 2 0 2 0‚ü©\" => -0.0138439\n  fs\"|1 1 0 1 1‚ü©\" => -0.00234782\n  fs\"|0 1 0 0 3‚ü©\" => 0.00195478\n  fs\"|0 2 1 0 1‚ü©\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i œµ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential œµ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleœÉ t_œÉ a^_iœÉ a_jœÉ +\n  frac12sum_iœÉ u_œÉœÉ n_iœÉ (n_iœÉ - 1) +\n  sum_iœÉœÑu_œÉœÑ n_iœÉ n_iœÑ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iœÉd v_œÉd x_di^2 n_iœÉ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C √ó D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, Œ∑, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, Œ∑, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i œµ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi œµ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nŒ∑s = (): a tuple of aspect ratios for the remaining dimensions (Œ∑_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/Œ∑_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kœÉk^2 n_kœÉ \n    quad + sum_pqkœÉœÉ T_pqk a^_p-kœÉ a^_q+kœÉ a_qœÉ a_pœÉ \n    quad + sum_pqskkœÉœÉ Q_kka^_p-kœÉ a^_q+kœÉ a^_s+k-kœÉ\n                                       a_sœÉ a_qœÉ a_pœÉ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + œâN - v Œ£‚Çñ(a‚Çñ^ + a‚Çñ)\n\nwhere p is the total momentum, p_f = Œ£_k k a‚Çñ^ a‚Çñ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2œÄl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons œâ.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0‚ü©{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M√∑2, M√∑2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M√∑2, M√∑2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address Œ± is replaced by frac12(Œ±  Œ±) for even and odd parity, respectively, where Œ±ÃÑ == reverse(Œ±).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1‚ü©\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ‚âà eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ‚âà eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ‚â§ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0‚ü©{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ‚â§ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, œÉ=1, œÑ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_œÉœÑ(d) = frac1M _i n_œÉi (n_œÑi+d - Œ¥_0dŒ¥_œÉœÑ)\n\nFor multicomponent addresses, œÉ and œÑ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s b^_p  b_q a_r Œ¥_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s a^_p  a_q a_r Œ¥_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ‚â§ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ‚â§ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iœÉ = hat a^_iœÉ hat a_iœÉ\n\nwhere i is the mode and œÉ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0‚ü©\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0‚ü©\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x‚ãÖ(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1‚ü©\", -3.0)\n (fs\"|2 2 2‚ü©\", -2.449489742783178)\n (fs\"|3 1 2‚ü©\", -2.0)\n (fs\"|4 1 1‚ü©\", -2.8284271247461903)\n (fs\"|4 2 0‚ü©\", -2.0)\n (fs\"|3 3 0‚ü©\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ‚Ä¶.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb‚ãÖ(1:7) == onr(b)‚ãÖ(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w‚ãÖop(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ‚ãÖ A ‚ãÖ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1‚ü©\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ‚âà values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3√ó3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2√ó2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1‚ü©\" => -0.57735   fs\"|0 1 0‚ü©\" => -0.57735   fs\"|1 0 0‚ü©\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nŒ±mathrmnaddrrangle\n\nReturns the new address naddr and the factor Œ±. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0‚ü©\" => 1\n\njulia> fs\"|0 1 2 0‚ü©\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3‚ü©‚äó|0 1 0‚ü©\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üë‚ü©\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0‚ü©{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0‚ü©{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ‚â§ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Œ£_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) √∑ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ‚â§ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|‚ãÖ‚Üë‚Üë‚Üë‚ãÖ‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üì‚ü©\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3‚ü©{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n‚Üí (nadd, Œ±)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3‚ü©{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, Œ± = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dœÑ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ after projecting onto projector.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracPŒ®^(n+1)PŒ®^(n)right)-fracŒædœÑlnleft(fracPŒ®^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4, Œ± = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracŒædœÑlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-Œ±)*walkernumber() + Œ±*UniformProjector()‚ãÖœà computed with walkernumber() and UniformProjector(). When Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)-fracŒædœÑlnleft(fracŒ®_1^n+1Œ®_1^texttargetright)\n\nWhen Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08, Œæ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, Œ∂ = 0.08,   Œæ = Œ∂^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dœÑ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\nùêì = 1 + dœÑ(S - ùêá)\n\nwhere ùêá is the hamiltonian and S is the shift.\n\nùêì represents the first order expansion of the exponential evolution operator of the imaginary-time Schr√∂dinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation, and they are orthogonalised every orthogonalisation_interval steps.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nŒ∂ = 0.08: Damping parameter for the shift update.\nŒæ = Œ∂^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, Œ∂, Œæ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dœÑ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(‚ãÖ,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dœÑ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndœÑ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3‚ü©\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nœÑ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, Œ∂ = 0.08, Œæ = Œ∂^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ‚âà num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0, fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5\n  fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dœÑ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dœÑ","text":"update_dœÑ(s<:TimeStepStrategy, dœÑ, tnorm) -> new dœÑ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    targetwalkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schr√∂dinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Bl√∂te PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schr√∂dinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija ƒåufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. ProjectorMonteCarloProblem, ExactDiagonalizationProblem.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. ƒåufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelm√ºller, D. Huber, M. ƒåufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/œÄ^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => -1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -2.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 3.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 3.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()‚ãÖv == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
