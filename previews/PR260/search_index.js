var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip080\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip080)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip081\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip080)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip082\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip080)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.82 2211.02,1260.82 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.54 2211.02,1003.54 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.252 2211.02,746.252 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.968 2211.02,488.968 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,231.685 2211.02,231.685 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.82 423.181,1260.82 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.54 423.181,1003.54 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.252 423.181,746.252 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.968 423.181,488.968 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,231.685 423.181,231.685 \"/>\n<path clip-path=\"url(#clip080)\" d=\"M356.339 1246.62 Q352.728 1246.62 350.899 1250.18 Q349.094 1253.73 349.094 1260.85 Q349.094 1267.96 350.899 1271.53 Q352.728 1275.07 356.339 1275.07 Q359.973 1275.07 361.779 1271.53 Q363.608 1267.96 363.608 1260.85 Q363.608 1253.73 361.779 1250.18 Q359.973 1246.62 356.339 1246.62 M356.339 1242.91 Q362.149 1242.91 365.205 1247.52 Q368.284 1252.1 368.284 1260.85 Q368.284 1269.58 365.205 1274.19 Q362.149 1278.77 356.339 1278.77 Q350.529 1278.77 347.45 1274.19 Q344.395 1269.58 344.395 1260.85 Q344.395 1252.1 347.45 1247.52 Q350.529 1242.91 356.339 1242.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M290.043 1016.88 L306.363 1016.88 L306.363 1020.82 L284.418 1020.82 L284.418 1016.88 Q287.08 1014.13 291.664 1009.5 Q296.27 1004.84 297.451 1003.5 Q299.696 1000.98 300.576 999.242 Q301.478 997.483 301.478 995.793 Q301.478 993.038 299.534 991.302 Q297.613 989.566 294.511 989.566 Q292.312 989.566 289.858 990.33 Q287.427 991.094 284.65 992.645 L284.65 987.923 Q287.474 986.788 289.927 986.21 Q292.381 985.631 294.418 985.631 Q299.789 985.631 302.983 988.316 Q306.177 991.001 306.177 995.492 Q306.177 997.622 305.367 999.543 Q304.58 1001.44 302.474 1004.03 Q301.895 1004.71 298.793 1007.92 Q295.691 1011.12 290.043 1016.88 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M316.224 986.256 L334.58 986.256 L334.58 990.191 L320.506 990.191 L320.506 998.663 Q321.524 998.316 322.543 998.154 Q323.562 997.969 324.58 997.969 Q330.367 997.969 333.747 1001.14 Q337.126 1004.31 337.126 1009.73 Q337.126 1015.31 333.654 1018.41 Q330.182 1021.49 323.862 1021.49 Q321.687 1021.49 319.418 1021.12 Q317.173 1020.75 314.765 1020.01 L314.765 1015.31 Q316.849 1016.44 319.071 1017 Q321.293 1017.55 323.77 1017.55 Q327.774 1017.55 330.112 1015.45 Q332.45 1013.34 332.45 1009.73 Q332.45 1006.12 330.112 1004.01 Q327.774 1001.9 323.77 1001.9 Q321.895 1001.9 320.02 1002.32 Q318.168 1002.74 316.224 1003.62 L316.224 986.256 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M356.339 989.335 Q352.728 989.335 350.899 992.9 Q349.094 996.441 349.094 1003.57 Q349.094 1010.68 350.899 1014.24 Q352.728 1017.78 356.339 1017.78 Q359.973 1017.78 361.779 1014.24 Q363.608 1010.68 363.608 1003.57 Q363.608 996.441 361.779 992.9 Q359.973 989.335 356.339 989.335 M356.339 985.631 Q362.149 985.631 365.205 990.238 Q368.284 994.821 368.284 1003.57 Q368.284 1012.3 365.205 1016.9 Q362.149 1021.49 356.339 1021.49 Q350.529 1021.49 347.45 1016.9 Q344.395 1012.3 344.395 1003.57 Q344.395 994.821 347.45 990.238 Q350.529 985.631 356.339 985.631 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M286.062 728.972 L304.418 728.972 L304.418 732.907 L290.344 732.907 L290.344 741.38 Q291.363 741.032 292.381 740.87 Q293.4 740.685 294.418 740.685 Q300.205 740.685 303.585 743.856 Q306.964 747.028 306.964 752.444 Q306.964 758.023 303.492 761.125 Q300.02 764.204 293.701 764.204 Q291.525 764.204 289.256 763.833 Q287.011 763.463 284.603 762.722 L284.603 758.023 Q286.687 759.157 288.909 759.713 Q291.131 760.268 293.608 760.268 Q297.613 760.268 299.951 758.162 Q302.288 756.055 302.288 752.444 Q302.288 748.833 299.951 746.727 Q297.613 744.62 293.608 744.62 Q291.733 744.62 289.858 745.037 Q288.006 745.454 286.062 746.333 L286.062 728.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M326.177 732.051 Q322.566 732.051 320.737 735.616 Q318.932 739.157 318.932 746.287 Q318.932 753.393 320.737 756.958 Q322.566 760.5 326.177 760.5 Q329.811 760.5 331.617 756.958 Q333.446 753.393 333.446 746.287 Q333.446 739.157 331.617 735.616 Q329.811 732.051 326.177 732.051 M326.177 728.347 Q331.987 728.347 335.043 732.954 Q338.122 737.537 338.122 746.287 Q338.122 755.014 335.043 759.62 Q331.987 764.204 326.177 764.204 Q320.367 764.204 317.288 759.62 Q314.233 755.014 314.233 746.287 Q314.233 737.537 317.288 732.954 Q320.367 728.347 326.177 728.347 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M356.339 732.051 Q352.728 732.051 350.899 735.616 Q349.094 739.157 349.094 746.287 Q349.094 753.393 350.899 756.958 Q352.728 760.5 356.339 760.5 Q359.973 760.5 361.779 756.958 Q363.608 753.393 363.608 746.287 Q363.608 739.157 361.779 735.616 Q359.973 732.051 356.339 732.051 M356.339 728.347 Q362.149 728.347 365.205 732.954 Q368.284 737.537 368.284 746.287 Q368.284 755.014 365.205 759.62 Q362.149 764.204 356.339 764.204 Q350.529 764.204 347.45 759.62 Q344.395 755.014 344.395 746.287 Q344.395 737.537 347.45 732.954 Q350.529 728.347 356.339 728.347 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M284.835 471.688 L307.057 471.688 L307.057 473.679 L294.511 506.248 L289.627 506.248 L301.432 475.624 L284.835 475.624 L284.835 471.688 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M316.224 471.688 L334.58 471.688 L334.58 475.624 L320.506 475.624 L320.506 484.096 Q321.524 483.749 322.543 483.587 Q323.562 483.401 324.58 483.401 Q330.367 483.401 333.747 486.573 Q337.126 489.744 337.126 495.161 Q337.126 500.739 333.654 503.841 Q330.182 506.92 323.862 506.92 Q321.687 506.92 319.418 506.549 Q317.173 506.179 314.765 505.438 L314.765 500.739 Q316.849 501.873 319.071 502.429 Q321.293 502.985 323.77 502.985 Q327.774 502.985 330.112 500.878 Q332.45 498.772 332.45 495.161 Q332.45 491.549 330.112 489.443 Q327.774 487.336 323.77 487.336 Q321.895 487.336 320.02 487.753 Q318.168 488.17 316.224 489.049 L316.224 471.688 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M356.339 474.767 Q352.728 474.767 350.899 478.332 Q349.094 481.874 349.094 489.003 Q349.094 496.11 350.899 499.674 Q352.728 503.216 356.339 503.216 Q359.973 503.216 361.779 499.674 Q363.608 496.11 363.608 489.003 Q363.608 481.874 361.779 478.332 Q359.973 474.767 356.339 474.767 M356.339 471.063 Q362.149 471.063 365.205 475.67 Q368.284 480.253 368.284 489.003 Q368.284 497.73 365.205 502.336 Q362.149 506.92 356.339 506.92 Q350.529 506.92 347.45 502.336 Q344.395 497.73 344.395 489.003 Q344.395 480.253 347.45 475.67 Q350.529 471.063 356.339 471.063 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M256.664 245.029 L264.303 245.029 L264.303 218.664 L255.992 220.33 L255.992 216.071 L264.256 214.405 L268.932 214.405 L268.932 245.029 L276.571 245.029 L276.571 248.965 L256.664 248.965 L256.664 245.029 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M296.015 217.483 Q292.404 217.483 290.576 221.048 Q288.77 224.59 288.77 231.719 Q288.77 238.826 290.576 242.391 Q292.404 245.932 296.015 245.932 Q299.65 245.932 301.455 242.391 Q303.284 238.826 303.284 231.719 Q303.284 224.59 301.455 221.048 Q299.65 217.483 296.015 217.483 M296.015 213.78 Q301.826 213.78 304.881 218.386 Q307.96 222.969 307.96 231.719 Q307.96 240.446 304.881 245.053 Q301.826 249.636 296.015 249.636 Q290.205 249.636 287.127 245.053 Q284.071 240.446 284.071 231.719 Q284.071 222.969 287.127 218.386 Q290.205 213.78 296.015 213.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M326.177 217.483 Q322.566 217.483 320.737 221.048 Q318.932 224.59 318.932 231.719 Q318.932 238.826 320.737 242.391 Q322.566 245.932 326.177 245.932 Q329.811 245.932 331.617 242.391 Q333.446 238.826 333.446 231.719 Q333.446 224.59 331.617 221.048 Q329.811 217.483 326.177 217.483 M326.177 213.78 Q331.987 213.78 335.043 218.386 Q338.122 222.969 338.122 231.719 Q338.122 240.446 335.043 245.053 Q331.987 249.636 326.177 249.636 Q320.367 249.636 317.288 245.053 Q314.233 240.446 314.233 231.719 Q314.233 222.969 317.288 218.386 Q320.367 213.78 326.177 213.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M356.339 217.483 Q352.728 217.483 350.899 221.048 Q349.094 224.59 349.094 231.719 Q349.094 238.826 350.899 242.391 Q352.728 245.932 356.339 245.932 Q359.973 245.932 361.779 242.391 Q363.608 238.826 363.608 231.719 Q363.608 224.59 361.779 221.048 Q359.973 217.483 356.339 217.483 M356.339 213.78 Q362.149 213.78 365.205 218.386 Q368.284 222.969 368.284 231.719 Q368.284 240.446 365.205 245.053 Q362.149 249.636 356.339 249.636 Q350.529 249.636 347.45 245.053 Q344.395 240.446 344.395 231.719 Q344.395 222.969 347.45 218.386 Q350.529 213.78 356.339 213.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip082)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,231.685 4017.76,231.685 \"/>\n<polyline clip-path=\"url(#clip082)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1248.78 458.259,1248.48 458.828,1248.11 459.396,1246.64 459.964,1245.12 460.533,1243.55 461.101,1242.99 461.669,1242.33 462.238,1241.61 462.806,1239.74 463.375,1238.83 463.943,1237.85 464.511,1236.74 465.08,1235.55 465.648,1233.2 466.216,1231.79 466.785,1230.24 467.353,1228.57 467.921,1224.71 468.49,1222.79 469.058,1220.74 469.626,1217.55 470.195,1215.26 470.763,1212.79 471.331,1210.19 471.9,1207.39 472.468,1204.42 473.036,1201.23 473.605,1195.83 474.173,1192.37 474.741,1187.66 475.31,1182.79 475.878,1178.79 476.446,1174.49 477.015,1168.99 477.583,1164.36 478.152,1158.44 478.72,1152.31 479.288,1146.99 479.857,1140.4 480.425,1133.64 480.993,1127.64 481.562,1121.44 482.13,1115.2 482.698,1108.62 483.267,1100.77 483.835,1092.64 484.403,1084.36 484.972,1077.04 485.54,1069.4 486.108,1060.63 486.677,1051.65 487.245,1042.53 487.813,1033.29 488.382,1021.68 488.95,1012.02 489.518,1002.17 490.087,993.316 490.655,981.187 491.224,970.977 491.792,960.621 492.36,949.217 492.929,939.678 493.497,928.045 494.065,916.442 494.634,903.712 495.202,892.093 495.77,880.536 496.339,867.76 496.907,857.175 497.475,845.605 498.044,836.286 498.612,826.819 499.18,816.351 499.749,805.793 500.317,794.373 500.885,782.982 501.454,771.671 502.022,762.465 502.59,749.242 503.159,739.257 503.727,729.338 504.295,720.408 504.864,710.474 505.432,699.588 506.001,689.896 506.569,680.396 507.137,670.914 507.706,661.473 508.274,653.382 508.842,643.298 509.411,634.24 509.979,623.345 510.547,614.452 511.116,605.796 511.684,597.033 512.252,588.679 512.821,578.365 513.389,571.384 513.957,563.306 514.526,556.581 515.094,548.872 515.662,540.207 516.231,531.885 516.799,525.516 517.367,518.508 517.936,512.596 518.504,503.714 519.072,494.843 519.641,488.365 520.209,482.995 520.778,476.73 521.346,471.578 521.914,464.401 522.483,458.466 523.051,451.467 523.619,444.88 524.188,436.464 524.756,430.541 525.324,426.758 525.893,419.819 526.461,415.275 527.029,409.686 527.598,405.548 528.166,401.306 528.734,398.453 529.303,395.396 529.871,390.279 530.439,384.27 531.008,381.62 531.576,374.976 532.144,371.637 532.713,366.529 533.281,363.392 533.85,360.362 534.418,357.56 534.986,354.779 535.555,353.079 536.123,351.351 536.691,349.445 537.26,346.452 537.828,345.638 538.396,343.788 538.965,341.035 539.533,340.433 540.101,340.521 540.67,338.606 541.238,336.488 541.806,333.438 542.375,332.53 542.943,329.828 543.511,324.983 544.08,324.265 544.648,321.507 545.216,317.788 545.785,314.208 546.353,311.801 546.921,309.72 547.49,304.301 548.058,302.466 548.627,302.548 549.195,300.551 549.763,299.669 550.332,297.923 550.9,296.03 551.468,294.339 552.037,292.763 552.605,291.896 553.173,292.584 553.742,290.7 554.31,289.935 554.878,285.195 555.447,282.533 556.015,283.241 556.583,280.597 557.152,281.383 557.72,279.878 558.288,279.652 558.857,278.98 559.425,279.468 559.993,279.903 560.562,279.249 561.13,277.674 561.698,277.01 562.267,275.391 562.835,274.974 563.404,274.484 563.972,273.901 564.54,270.444 565.109,267.861 565.677,265.637 566.245,265.583 566.814,263.514 567.382,263.515 567.95,258.382 568.519,258.761 569.087,260.065 569.655,260.136 570.224,260.406 570.792,260.261 571.36,257.449 571.929,257.774 572.497,256.957 573.065,258.281 573.634,257.277 574.202,255.317 574.77,256.574 575.339,253.705 575.907,252.754 576.476,252.116 577.044,250.251 577.612,248.494 578.181,249.162 578.749,250.505 579.317,250.857 579.886,252.119 580.454,252.469 581.022,253.528 581.591,254.539 582.159,255.54 582.727,254.562 583.296,254.324 583.864,253.151 584.432,251.959 585.001,251.837 585.569,253.041 586.137,250.029 586.706,248.16 587.274,249.355 587.842,249.485 588.411,248.782 588.979,251.206 589.547,250.347 590.116,249.604 590.684,248.622 591.253,247.87 591.821,247.057 592.389,246.109 592.958,246.429 593.526,248.713 594.094,248.692 594.663,248.627 595.231,247.631 595.799,247.912 596.368,247.996 596.936,246.146 597.504,247.524 598.073,249.533 598.641,250.334 599.209,249.98 599.778,248.635 600.346,246.54 600.914,246.276 601.483,246.39 602.051,245.235 602.619,245.257 603.188,243.132 603.756,244.103 604.325,245.285 604.893,243.348 605.461,244.732 606.03,246.818 606.598,243.74 607.166,242.75 607.735,241.747 608.303,243.023 608.871,243.178 609.44,244.375 610.008,241.009 610.576,242.192 611.145,242.195 611.713,242.137 612.281,242.135 612.85,243.56 613.418,242.275 613.986,241.052 614.555,241.169 615.123,240.138 615.691,238.268 616.26,236.642 616.828,236.889 617.396,236.576 617.965,240.037 618.533,240.582 619.102,240.756 619.67,240.906 620.238,241.162 620.807,241.318 621.375,242.294 621.943,241.201 622.512,239.442 623.08,238.538 623.648,238.807 624.217,238.175 624.785,236.398 625.353,237.114 625.922,233.256 626.49,231.782 627.058,234.473 627.627,235.874 628.195,236.251 628.763,235.502 629.332,235.834 629.9,234.105 630.468,234.619 631.037,234.902 631.605,235.699 632.173,234.904 632.742,235.455 633.31,234.919 633.879,235.097 634.447,235.629 635.015,234.184 635.584,232.854 636.152,235.539 636.72,238.179 637.289,241.426 637.857,239.307 638.425,239.314 638.994,241.546 639.562,242.461 640.13,242.273 640.699,242.268 641.267,242.268 641.835,242.225 642.404,240.035 642.972,244.043 643.54,241.783 644.109,241.453 644.677,240.638 645.245,241.683 645.814,242.405 646.382,244.052 646.951,243.735 647.519,242.455 648.087,241.277 648.656,239.969 649.224,237.784 649.792,239.793 650.361,237.639 650.929,240.865 651.497,242.645 652.066,243.535 652.634,243.309 653.202,241.043 653.771,241.617 654.339,239.477 654.907,238.371 655.476,237.218 656.044,235.986 656.612,238.03 657.181,238.137 657.749,238.406 658.317,238.501 658.886,240.433 659.454,240.362 660.022,240.431 660.591,241.312 661.159,242.188 661.728,241.863 662.296,241.353 662.864,239.909 663.433,239.536 664.001,239.134 664.569,238.806 665.138,237.858 665.706,237.801 666.274,236.703 666.843,237.506 667.411,237.479 667.979,237.236 668.548,236.489 669.116,234.356 669.684,235.306 670.253,234.348 670.821,233.334 671.389,233.582 671.958,231.631 672.526,231.662 673.094,233.047 673.663,232.581 674.231,231.882 674.799,232.277 675.368,230.565 675.936,229.876 676.505,231.408 677.073,230.088 677.641,230.497 678.21,233.916 678.778,236.146 679.346,235.17 679.915,235.456 680.483,235.531 681.051,237.8 681.62,237.808 682.188,239.734 682.756,237.338 683.325,234.965 683.893,234.013 684.461,232.109 685.03,231.412 685.598,230.749 686.166,230.15 686.735,231.429 687.303,231.713 687.871,230.9 688.44,229.531 689.008,230.133 689.577,230.807 690.145,232.345 690.713,228.819 691.282,229.27 691.85,227.639 692.418,231.226 692.987,232.346 693.555,232.769 694.123,232.865 694.692,234.202 695.26,233.162 695.828,233.462 696.397,232.544 696.965,234.822 697.533,234.889 698.102,235.1 698.67,236.102 699.238,236.338 699.807,237.495 700.375,238.83 700.943,238.623 701.512,239.564 702.08,239.499 702.648,240.464 703.217,238.101 703.785,238.926 704.354,237.845 704.922,238.724 705.49,239.608 706.059,239.417 706.627,239.299 707.195,240.191 707.764,239.95 708.332,236.598 708.9,235.51 709.469,235.446 710.037,234.454 710.605,237.742 711.174,239.629 711.742,239.342 712.31,240.207 712.879,239.831 713.447,237.122 714.015,236.973 714.584,234.893 715.152,236.727 715.72,234.447 716.289,234.498 716.857,235.691 717.425,234.564 717.994,235.604 718.562,236.469 719.131,235.484 719.699,233.302 720.267,235.754 720.836,238.575 721.404,239.107 721.972,238.659 722.541,237.293 723.109,237.148 723.677,236.775 724.246,235.589 724.814,235.466 725.382,237.316 725.951,236.912 726.519,236.779 727.087,236.723 727.656,235.376 728.224,235.356 728.792,235.166 729.361,233.829 729.929,234.592 730.497,234.449 731.066,233.257 731.634,234.392 732.203,235.313 732.771,236.245 733.339,238.148 733.908,234.791 734.476,233.621 735.044,229.599 735.613,228.717 736.181,228.92 736.749,230.239 737.318,231.37 737.886,231.324 738.454,232.359 739.023,232.399 739.591,232.456 740.159,233.674 740.728,234.545 741.296,235.426 741.864,235.177 742.433,236.004 743.001,236.828 743.569,235.549 744.138,234.276 744.706,235.342 745.274,235.122 745.843,235.886 746.411,233.439 746.98,230.154 747.548,230.265 748.116,230.396 748.685,229.355 749.253,231.472 749.821,230.506 750.39,229.524 750.958,228.625 751.526,228.708 752.095,228.044 752.663,229.317 753.231,230.506 753.8,230.702 754.368,230.864 754.936,231.012 755.505,231.212 756.073,229.503 756.641,229.764 757.21,233.064 757.778,231.838 758.346,230.756 758.915,231.882 759.483,232.058 760.052,229.274 760.62,229.427 761.188,229.781 761.757,231.161 762.325,229.346 762.893,228.77 763.462,230.221 764.03,230.501 764.598,233.833 765.167,232.769 765.735,230.783 766.303,232.122 766.872,233.21 767.44,234.146 768.008,233.329 768.577,234.411 769.145,232.127 769.713,232.119 770.282,232.132 770.85,231.112 771.418,231.29 771.987,230.299 772.555,232.5 773.123,233.609 773.692,233.755 774.26,232.56 774.829,228.397 775.397,225.893 775.965,227.381 776.534,231.079 777.102,230.144 777.67,231.522 778.239,233.736 778.807,230.777 779.375,229.934 779.944,230.233 780.512,231.44 781.08,233.51 781.649,229.583 782.217,229.039 782.785,230.512 783.354,232.939 783.922,232.092 784.49,234.449 785.059,232.27 785.627,233.459 786.195,231.653 786.764,230.031 787.332,230.415 787.9,229.639 788.469,231.061 789.037,230.274 789.606,229.536 790.174,229.959 790.742,231.244 791.311,232.491 791.879,233.52 792.447,233.692 793.016,235.855 793.584,236.794 794.152,234.513 794.721,232.402 795.289,233.532 795.857,235.676 796.426,237.693 796.994,237.506 797.562,238.336 798.131,236.027 798.699,237.829 799.267,240.564 799.836,238.09 800.404,236.615 800.972,236.4 801.541,234.112 802.109,235.182 802.678,234.112 803.246,235.089 803.814,236.077 804.383,236.024 804.951,234.894 805.519,234.95 806.088,233.999 806.656,232.862 807.224,231.64 807.793,230.534 808.361,231.695 808.929,229.508 809.498,228.562 810.066,228.777 810.634,228.992 811.203,229.21 811.771,231.294 812.339,231.398 812.908,228.678 813.476,231.267 814.044,231.491 814.613,228.541 815.181,228.915 815.749,229.072 816.318,229.401 816.886,228.748 817.455,230.092 818.023,230.131 818.591,231.385 819.16,231.574 819.728,231.021 820.296,231.037 820.865,230.1 821.433,231.636 822.001,231.827 822.57,229.922 823.138,230.059 823.706,233.551 824.275,233.689 824.843,230.393 825.411,230.544 825.98,230.985 826.548,231.231 827.116,231.087 827.685,231.444 828.253,229.482 828.821,228.672 829.39,229.132 829.958,229.74 830.526,230.237 831.095,231.519 831.663,230.935 832.232,230.2 832.8,231.467 833.368,233.837 833.937,231.881 834.505,230.817 835.073,230.1 835.642,227.293 836.21,228.868 836.778,229.338 837.347,232.918 837.915,235.053 838.483,233 839.052,234.028 839.62,232.809 840.188,231.682 840.757,232.862 841.325,233.042 841.893,233.136 842.462,234.245 843.03,234.334 843.598,237.36 844.167,237.099 844.735,238.053 845.304,238.977 845.872,239.723 846.44,239.294 847.009,239.067 847.577,237.598 848.145,237.369 848.714,235.904 849.282,238.013 849.85,237.863 850.419,237.665 850.987,236.465 851.555,235.172 852.124,235.215 852.692,234.26 853.26,233.139 853.829,232.99 854.397,234.023 854.965,233.764 855.534,233.887 856.102,234.96 856.67,234.525 857.239,234.246 857.807,232.155 858.375,233.081 858.944,234.237 859.512,232.959 860.081,233 860.649,232.926 861.217,232.031 861.786,233.887 862.354,234.663 862.922,235.657 863.491,237.507 864.059,237.18 864.627,237.85 865.196,238.562 865.764,239.023 866.332,239.651 866.901,239.063 867.469,238.869 868.037,234.977 868.606,236.731 869.174,235.56 869.742,238.247 870.311,236.703 870.879,236.488 871.447,235.968 872.016,237.53 872.584,236.936 873.152,237.646 873.721,237.095 874.289,236.515 874.858,238.108 875.426,236.547 875.994,234.896 876.563,234.547 877.131,234.317 877.699,233.058 878.268,232.992 878.836,230.752 879.404,233.751 879.973,230.656 880.541,230.663 881.109,231.676 881.678,234.594 882.246,236.283 882.814,236.882 883.383,236.197 883.951,234.757 884.519,235.317 885.088,233.062 885.656,232.913 886.224,231.803 886.793,230.832 887.361,228.62 887.93,228.68 888.498,229.989 889.066,229.005 889.635,231.11 890.203,232.013 890.771,231.815 891.34,232.831 891.908,230.842 892.476,229.821 893.045,229.603 893.613,231.725 894.181,231.655 894.75,231.537 895.318,232.43 895.886,233.287 896.455,232.109 897.023,232.072 897.591,230.921 898.16,229.777 898.728,227.757 899.296,226.868 899.865,227.355 900.433,226.644 901.001,226.891 901.57,226.338 902.138,226.966 902.707,228.34 903.275,231.492 903.843,231.645 904.412,230.674 904.98,231.977 905.548,232.027 906.117,231.944 906.685,231.01 907.253,231.041 907.822,231.187 908.39,231.325 908.958,231.487 909.527,231.409 910.095,232.622 910.663,234.761 911.232,232.449 911.8,231.246 912.368,231.317 912.937,229.437 913.505,229.598 914.073,229.861 914.642,230.057 915.21,230.167 915.779,231.275 916.347,231.204 916.915,230.165 917.484,229.228 918.052,228.161 918.62,227.465 919.189,227.716 919.757,226.836 920.325,226.114 920.894,226.688 921.462,230.024 922.03,230.207 922.599,230.311 923.167,231.463 923.735,231.496 924.304,230.476 924.872,228.683 925.44,229.117 926.009,231.322 926.577,233.334 927.145,233.347 927.714,235.272 928.282,235.907 928.85,235.58 929.419,234.223 929.987,233.215 930.556,233.055 931.124,231.088 931.692,229.121 932.261,230.559 932.829,230.618 933.397,230.694 933.966,229.867 934.534,229.232 935.102,228.674 935.671,230.819 936.239,231.021 936.807,229.988 937.376,229.25 937.944,228.419 938.512,230.713 939.081,232.784 939.649,233.962 940.217,233.731 940.786,233.512 941.354,235.378 941.922,234.23 942.491,234.215 943.059,233.131 943.627,233.089 944.196,233.269 944.764,234.205 945.333,230.868 945.901,229.701 946.469,229.85 947.038,229.041 947.606,230.238 948.174,228.415 948.743,228.817 949.311,230.922 949.879,231.051 950.448,230.245 951.016,232.476 951.584,230.348 952.153,232.353 952.721,233.44 953.289,232.319 953.858,231.393 954.426,229.507 954.994,229.83 955.563,230.06 956.131,229.414 956.699,229.616 957.268,229.92 957.836,231.294 958.405,231.369 958.973,233.51 959.541,234.353 960.11,235.208 960.678,232.763 961.246,233.895 961.815,231.866 962.383,231.985 962.951,233.253 963.52,233.232 964.088,233.193 964.656,231.269 965.225,231.504 965.793,229.725 966.361,230.952 966.93,231.2 967.498,232.452 968.066,231.387 968.635,230.499 969.203,232.456 969.771,230.44 970.34,229.61 970.908,230.792 971.476,230.976 972.045,233.13 972.613,234.06 973.182,232.901 973.75,233.083 974.318,232.958 974.887,232.04 975.455,232.044 976.023,231.076 976.592,231.13 977.16,231.14 977.728,231.373 978.297,230.178 978.865,230.487 979.433,231.815 980.002,229.766 980.57,231.104 981.138,232.513 981.707,231.627 982.275,232.647 982.843,230.689 983.412,231.526 983.98,231.654 984.548,231.844 985.117,234.011 985.685,232.808 986.253,229.818 986.822,232.138 987.39,232.267 987.959,233.401 988.527,233.166 989.095,231.739 989.664,230.69 990.232,230.696 990.8,230.609 991.369,228.849 991.937,230.059 992.505,231.098 993.074,232.275 993.642,232.376 994.21,232.526 994.779,233.627 995.347,234.416 995.915,234.344 996.484,234.048 997.052,234.635 997.62,232.303 998.189,232.282 998.757,231.287 999.325,229.185 999.894,227.517 1000.46,228.997 1001.03,229.364 1001.6,229.592 1002.17,229.984 1002.74,230.17 1003.3,230.381 1003.87,231.596 1004.44,233.877 1005.01,235.015 1005.58,235.904 1006.15,234.738 1006.71,234.517 1007.28,235.331 1007.85,234.249 1008.42,234.165 1008.99,235.056 1009.56,234.783 1010.12,235.679 1010.69,236.509 1011.26,235.238 1011.83,235.074 1012.4,233.923 1012.97,233.601 1013.53,231.483 1014.1,230.519 1014.67,230.398 1015.24,229.406 1015.81,230.64 1016.38,232.981 1016.94,233.095 1017.51,233.025 1018.08,229.7 1018.65,231.693 1019.22,231.727 1019.79,231.778 1020.35,231.977 1020.92,232.213 1021.49,231.091 1022.06,229 1022.63,229.393 1023.2,230.62 1023.76,230.681 1024.33,228.925 1024.9,228.828 1025.47,228.904 1026.04,229.013 1026.61,229.351 1027.17,227.483 1027.74,228.938 1028.31,230.217 1028.88,229.223 1029.45,229.279 1030.02,228.551 1030.58,227.979 1031.15,231.113 1031.72,231.274 1032.29,231.424 1032.86,233.736 1033.43,232.694 1033.99,231.554 1034.56,232.854 1035.13,232.001 1035.7,232.95 1036.27,235.155 1036.84,235.002 1037.4,236.827 1037.97,235.227 1038.54,234.826 1039.11,233.596 1039.68,233.267 1040.25,235.231 1040.81,233.811 1041.38,235.633 1041.95,236.166 1042.52,235.773 1043.09,238.523 1043.66,236.855 1044.22,235.433 1044.79,236.197 1045.36,236.859 1045.93,235.458 1046.5,234.163 1047.07,232.76 1047.63,232.67 1048.2,234.801 1048.77,233.381 1049.34,230.988 1049.91,229.896 1050.48,229.862 1051.05,230.575 1051.61,230.499 1052.18,232.79 1052.75,231.653 1053.32,230.36 1053.89,233.476 1054.46,233.16 1055.02,230.959 1055.59,231.777 1056.16,231.834 1056.73,233.006 1057.3,231.655 1057.87,233.798 1058.43,234.679 1059,232.435 1059.57,232.392 1060.14,232.195 1060.71,234.15 1061.28,232.979 1061.84,234.894 1062.41,233.631 1062.98,233.373 1063.55,231.933 1064.12,229.714 1064.69,227.741 1065.25,226.913 1065.82,226.039 1066.39,225.536 1066.96,227.846 1067.53,228.145 1068.1,228.277 1068.66,227.555 1069.23,229.027 1069.8,228.136 1070.37,228.289 1070.94,228.528 1071.51,226.749 1072.07,226.209 1072.64,226.677 1073.21,227.191 1073.78,226.31 1074.35,226.431 1074.92,229.087 1075.48,228.226 1076.05,229.697 1076.62,231.072 1077.19,230.93 1077.76,229.759 1078.33,230.056 1078.89,231.294 1079.46,232.42 1080.03,232.503 1080.6,232.631 1081.17,233.62 1081.74,234.481 1082.3,234.173 1082.87,234.959 1083.44,235.742 1084.01,235.483 1084.58,236.223 1085.15,235.961 1085.71,236.679 1086.28,234.328 1086.85,235.153 1087.42,234.097 1087.99,229.965 1088.56,232.341 1089.12,233.419 1089.69,233.469 1090.26,234.297 1090.83,234.1 1091.4,232.868 1091.97,231.769 1092.53,232.832 1093.1,233.649 1093.67,231.387 1094.24,233.654 1094.81,233.599 1095.38,234.572 1095.94,234.45 1096.51,233.302 1097.08,233.131 1097.65,233.061 1098.22,229.955 1098.79,230.962 1099.35,231.957 1099.92,229.982 1100.49,228.033 1101.06,226.38 1101.63,227.669 1102.2,227.009 1102.76,227.504 1103.33,228.846 1103.9,229.036 1104.47,229.094 1105.04,229.091 1105.61,229.275 1106.17,228.476 1106.74,231.007 1107.31,233.07 1107.88,236.092 1108.45,236.843 1109.02,236.535 1109.58,235.982 1110.15,235.566 1110.72,236.524 1111.29,235.233 1111.86,235.125 1112.43,234.625 1112.99,234.323 1113.56,236.034 1114.13,233.628 1114.7,231.444 1115.27,231.305 1115.84,233.589 1116.4,231.548 1116.97,230.55 1117.54,230.645 1118.11,228.601 1118.68,227.86 1119.25,229.057 1119.81,229.241 1120.38,229.535 1120.95,230.81 1121.52,229.909 1122.09,229.127 1122.66,228.341 1123.23,230.66 1123.79,231.757 1124.36,229.727 1124.93,232.659 1125.5,231.483 1126.07,232.679 1126.64,234.662 1127.2,232.583 1127.77,232.552 1128.34,233.481 1128.91,233.154 1129.48,231.892 1130.05,231.732 1130.61,232.741 1131.18,231.659 1131.75,232.652 1132.32,231.753 1132.89,232.791 1133.46,232.69 1134.02,232.59 1134.59,231.631 1135.16,231.567 1135.73,230.433 1136.3,230.446 1136.87,231.589 1137.43,231.569 1138,232.6 1138.57,231.47 1139.14,231.526 1139.71,233.302 1140.28,231.33 1140.84,229.282 1141.41,228.405 1141.98,228.626 1142.55,229.98 1143.12,229.065 1143.69,230.227 1144.25,231.219 1144.82,232.087 1145.39,234.196 1145.96,233.036 1146.53,232.172 1147.1,232.115 1147.66,231.931 1148.23,231.942 1148.8,230.619 1149.37,230.534 1149.94,230.831 1150.51,230.912 1151.07,232.966 1151.64,233.698 1152.21,232.609 1152.78,231.583 1153.35,232.601 1153.92,232.64 1154.48,232.53 1155.05,232.585 1155.62,232.529 1156.19,233.414 1156.76,234.149 1157.33,235.747 1157.89,236.624 1158.46,234.141 1159.03,235.056 1159.6,234.713 1160.17,235.672 1160.74,235.631 1161.3,233.196 1161.87,228.271 1162.44,228.433 1163.01,228.554 1163.58,230.749 1164.15,229.821 1164.71,227.924 1165.28,225.148 1165.85,224.802 1166.42,224.361 1166.99,224.927 1167.56,227.345 1168.12,227.836 1168.69,229.959 1169.26,231.233 1169.83,231.168 1170.4,232.319 1170.97,232.517 1171.53,232.665 1172.1,233.498 1172.67,233.424 1173.24,236.367 1173.81,234.156 1174.38,235.021 1174.94,233.785 1175.51,234.777 1176.08,234.73 1176.65,232.518 1177.22,230.482 1177.79,230.809 1178.35,229.815 1178.92,228.829 1179.49,231.059 1180.06,231.198 1180.63,229.159 1181.2,229.379 1181.76,228.585 1182.33,228.639 1182.9,229.789 1183.47,231.075 1184.04,232.085 1184.61,234.017 1185.17,234.978 1185.74,235.792 1186.31,233.319 1186.88,233.594 1187.45,233.665 1188.02,232.441 1188.58,232.352 1189.15,231.454 1189.72,232.539 1190.29,230.57 1190.86,228.662 1191.43,230.935 1192,230.124 1192.56,231.221 1193.13,233.153 1193.7,232.036 1194.27,235.109 1194.84,236.062 1195.41,238.833 1195.97,235.218 1196.54,234.842 1197.11,234.42 1197.68,232.012 1198.25,233.088 1198.82,232.964 1199.38,233.755 1199.95,232.54 1200.52,231.463 1201.09,231.298 1201.66,229.542 1202.23,229.913 1202.79,230.113 1203.36,229.315 1203.93,228.588 1204.5,227.811 1205.07,225.934 1205.64,225.137 1206.2,225.434 1206.77,228.082 1207.34,227.173 1207.91,228.625 1208.48,225.765 1209.05,226.328 1209.61,226.529 1210.18,226.947 1210.75,227.33 1211.32,227.76 1211.89,228.239 1212.46,225.51 1213.02,228.085 1213.59,226.526 1214.16,228.109 1214.73,228.581 1215.3,228.194 1215.87,228.871 1216.43,227.244 1217,227.497 1217.57,227.994 1218.14,229.466 1218.71,226.843 1219.28,227.479 1219.84,226.944 1220.41,230.595 1220.98,233.724 1221.55,231.619 1222.12,231.865 1222.69,234.077 1223.25,234.989 1223.82,236.978 1224.39,235.764 1224.96,234.562 1225.53,235.623 1226.1,235.381 1226.66,233.186 1227.23,232.147 1227.8,231.215 1228.37,231.173 1228.94,233.236 1229.51,234.504 1230.07,234.402 1230.64,235.268 1231.21,238.097 1231.78,235.652 1232.35,235.601 1232.92,235.277 1233.48,234.973 1234.05,234.953 1234.62,234.827 1235.19,233.552 1235.76,234.626 1236.33,234.442 1236.89,234.324 1237.46,233.153 1238.03,232.056 1238.6,232.176 1239.17,231.071 1239.74,230.065 1240.3,230.207 1240.87,230.339 1241.44,231.555 1242.01,231.967 1242.58,232.004 1243.15,233.105 1243.71,233.042 1244.28,233.091 1244.85,232.807 1245.42,231.801 1245.99,231.689 1246.56,227.721 1247.12,227.121 1247.69,227.64 1248.26,229.02 1248.83,228.282 1249.4,229.51 1249.97,231.892 1250.53,232.027 1251.1,235.324 1251.67,235.034 1252.24,233.865 1252.81,234.959 1253.38,234.898 1253.94,235.719 1254.51,235.409 1255.08,235.292 1255.65,233.001 1256.22,234.029 1256.79,232.86 1257.35,232.918 1257.92,234.063 1258.49,234.211 1259.06,233.993 1259.63,232.742 1260.2,232.706 1260.76,231.603 1261.33,229.552 1261.9,228.713 1262.47,227.733 1263.04,229.815 1263.61,235.139 1264.18,237.95 1264.74,237.439 1265.31,237.062 1265.88,237.795 1266.45,237.15 1267.02,237.966 1267.59,238.523 1268.15,236.028 1268.72,234.576 1269.29,237.441 1269.86,236.889 1270.43,236.513 1271,236.139 1271.56,235.686 1272.13,234.446 1272.7,233.318 1273.27,233.3 1273.84,229.125 1274.41,230.151 1274.97,229.141 1275.54,228.322 1276.11,227.536 1276.68,228.868 1277.25,228.139 1277.82,228.295 1278.38,229.48 1278.95,230.562 1279.52,230.731 1280.09,230.778 1280.66,229.751 1281.23,229.698 1281.79,229.788 1282.36,231.984 1282.93,234.005 1283.5,233.935 1284.07,235.855 1284.64,236.407 1285.2,234.899 1285.77,234.931 1286.34,236.601 1286.91,237.151 1287.48,237.667 1288.05,236.278 1288.61,234.833 1289.18,234.507 1289.75,236.16 1290.32,235.864 1290.89,237.727 1291.46,237.147 1292.02,236.696 1292.59,239.307 1293.16,239.78 1293.73,237.032 1294.3,236.338 1294.87,236.038 1295.43,234.703 1296,232.123 1296.57,230.907 1297.14,231.85 1297.71,231.568 1298.28,230.219 1298.84,228.259 1299.41,228.333 1299.98,225.559 1300.55,225.931 1301.12,227.227 1301.69,227.308 1302.25,225.443 1302.82,226.893 1303.39,228.332 1303.96,225.431 1304.53,225.728 1305.1,227.324 1305.66,229.444 1306.23,230.517 1306.8,230.42 1307.37,230.227 1307.94,230.255 1308.51,231.23 1309.07,229.871 1309.64,227.941 1310.21,227.995 1310.78,227.444 1311.35,227.565 1311.92,230.869 1312.48,231.078 1313.05,231.268 1313.62,233.422 1314.19,232.173 1314.76,233.037 1315.33,231.769 1315.89,231.823 1316.46,232.79 1317.03,230.656 1317.6,230.597 1318.17,231.781 1318.74,230.735 1319.3,231.851 1319.87,232.755 1320.44,231.458 1321.01,233.317 1321.58,234.242 1322.15,236.086 1322.71,234.675 1323.28,235.508 1323.85,235.07 1324.42,234.688 1324.99,235.349 1325.56,234.881 1326.12,235.41 1326.69,235.002 1327.26,234.682 1327.83,234.222 1328.4,232.94 1328.97,232.878 1329.53,231.687 1330.1,232.739 1330.67,232.35 1331.24,231.186 1331.81,229.099 1332.38,228.28 1332.94,228.441 1333.51,228.523 1334.08,228.746 1334.65,228.929 1335.22,225.999 1335.79,228.276 1336.36,226.509 1336.92,227.011 1337.49,227.259 1338.06,228.272 1338.63,227.507 1339.2,229.666 1339.77,230.799 1340.33,229.866 1340.9,230.12 1341.47,230.184 1342.04,229.273 1342.61,232.62 1343.18,232.454 1343.74,233.303 1344.31,233.155 1344.88,230.963 1345.45,229.096 1346.02,229.124 1346.59,231.373 1347.15,231.372 1347.72,232.289 1348.29,233.232 1348.86,230.969 1349.43,231.02 1350,229.982 1350.56,228.082 1351.13,226.334 1351.7,227.665 1352.27,227.967 1352.84,227.259 1353.41,226.806 1353.97,225.113 1354.54,225.525 1355.11,228.032 1355.68,231.433 1356.25,231.515 1356.82,230.433 1357.38,230.641 1357.95,231.631 1358.52,231.799 1359.09,232.989 1359.66,231.953 1360.23,231.952 1360.79,233.093 1361.36,232.965 1361.93,234.219 1362.5,232.105 1363.07,233.153 1363.64,233.146 1364.2,231.002 1364.77,230.149 1365.34,231.511 1365.91,229.548 1366.48,229.848 1367.05,230.061 1367.61,231.352 1368.18,230.387 1368.75,231.391 1369.32,231.381 1369.89,233.458 1370.46,234.386 1371.02,233.18 1371.59,230.211 1372.16,231.365 1372.73,231.175 1373.3,231.277 1373.87,231.493 1374.43,231.621 1375,233.766 1375.57,234.62 1376.14,233.262 1376.71,233.268 1377.28,233.292 1377.84,235.336 1378.41,233.983 1378.98,232.801 1379.55,233.848 1380.12,234.96 1380.69,234.506 1381.25,234.235 1381.82,232.949 1382.39,231.882 1382.96,231.829 1383.53,230.887 1384.1,232.834 1384.66,232.666 1385.23,231.676 1385.8,229.951 1386.37,226.968 1386.94,229.47 1387.51,230.801 1388.07,230.93 1388.64,230.252 1389.21,229.105 1389.78,227.35 1390.35,228.622 1390.92,227.724 1391.48,229.28 1392.05,229.495 1392.62,229.668 1393.19,230.859 1393.76,233.14 1394.33,233.099 1394.89,237.153 1395.46,237.912 1396.03,236.402 1396.6,236.257 1397.17,234.98 1397.74,234.471 1398.3,236.143 1398.87,235.028 1399.44,233.9 1400.01,234.715 1400.58,235.447 1401.15,235.981 1401.71,235.543 1402.28,237.296 1402.85,237.901 1403.42,236.493 1403.99,236.29 1404.56,234.901 1405.13,235.475 1405.69,233.025 1406.26,233.013 1406.83,232.891 1407.4,231.739 1407.97,231.845 1408.54,229.808 1409.1,231.001 1409.67,229.81 1410.24,228.815 1410.81,228.757 1411.38,229.021 1411.95,228.96 1412.51,227.905 1413.08,228.185 1413.65,227.208 1414.22,226.461 1414.79,224.896 1415.36,224.586 1415.92,223.868 1416.49,225.292 1417.06,225.737 1417.63,225.337 1418.2,223.565 1418.77,219.895 1419.33,223.032 1419.9,225.917 1420.47,224.173 1421.04,224.686 1421.61,226.08 1422.18,229.388 1422.74,230.771 1423.31,232.995 1423.88,233.059 1424.45,233.29 1425.02,231.208 1425.59,231.602 1426.15,231.61 1426.72,233.921 1427.29,234.868 1427.86,235.9 1428.43,236.887 1429,235.8 1429.56,236.58 1430.13,233.003 1430.7,235.1 1431.27,237.088 1431.84,236.758 1432.41,236.383 1432.97,234.904 1433.54,234.464 1434.11,234.265 1434.68,236.273 1435.25,235.91 1435.82,237.438 1436.38,234.078 1436.95,234.948 1437.52,232.405 1438.09,230.406 1438.66,228.578 1439.23,229.981 1439.79,236.242 1440.36,236.913 1440.93,237.706 1441.5,237.531 1442.07,236.202 1442.64,236.089 1443.2,236.81 1443.77,234.245 1444.34,232.996 1444.91,232.891 1445.48,232.924 1446.05,232.933 1446.61,233.032 1447.18,230.764 1447.75,230.628 1448.32,229.684 1448.89,230.648 1449.46,229.6 1450.02,230.822 1450.59,231.588 1451.16,232.292 1451.73,232.077 1452.3,230.968 1452.87,232.974 1453.43,234.977 1454,232.765 1454.57,231.58 1455.14,233.657 1455.71,236.597 1456.28,234.135 1456.84,232.77 1457.41,231.372 1457.98,230.464 1458.55,231.536 1459.12,231.545 1459.69,229.354 1460.25,229.464 1460.82,229.453 1461.39,229.752 1461.96,229.759 1462.53,226.583 1463.1,226.01 1463.66,226.356 1464.23,227.361 1464.8,226.447 1465.37,225.683 1465.94,226.125 1466.51,225.665 1467.07,227.063 1467.64,229.482 1468.21,229.574 1468.78,229.669 1469.35,229.83 1469.92,228.128 1470.48,225.405 1471.05,223.9 1471.62,225.519 1472.19,226.918 1472.76,227.392 1473.33,227.974 1473.89,229.315 1474.46,227.515 1475.03,229.066 1475.6,228.431 1476.17,228.724 1476.74,228.986 1477.31,229.331 1477.87,227.403 1478.44,230.946 1479.01,232.016 1479.58,233.076 1480.15,233.05 1480.72,229.839 1481.28,231.986 1481.85,233.2 1482.42,231.179 1482.99,231.34 1483.56,229.438 1484.13,229.612 1484.69,232.178 1485.26,230.327 1485.83,232.436 1486.4,232.552 1486.97,232.494 1487.54,233.461 1488.1,231.364 1488.67,232.297 1489.24,233.285 1489.81,233.127 1490.38,230.923 1490.95,230.865 1491.51,230.041 1492.08,229.419 1492.65,229.683 1493.22,229.872 1493.79,230.096 1494.36,228.295 1494.92,226.53 1495.49,226.105 1496.06,227.869 1496.63,230.376 1497.2,230.648 1497.77,231.116 1498.33,231.133 1498.9,230.141 1499.47,231.27 1500.04,230.607 1500.61,232.087 1501.18,232.132 1501.74,232.367 1502.31,231.492 1502.88,233.472 1503.45,233.532 1504.02,234.662 1504.59,238.802 1505.15,238.307 1505.72,236.736 1506.29,234.471 1506.86,233.357 1507.43,232.465 1508,233.449 1508.56,232.277 1509.13,234.234 1509.7,234.156 1510.27,234.064 1510.84,237.093 1511.41,237.797 1511.97,237.453 1512.54,237.1 1513.11,235.959 1513.68,235.668 1514.25,235.354 1514.82,233.931 1515.38,233.095 1515.95,234.278 1516.52,232.297 1517.09,232.229 1517.66,233.29 1518.23,234.141 1518.79,234.006 1519.36,233.66 1519.93,234.532 1520.5,234.375 1521.07,237.261 1521.64,236.768 1522.2,233.482 1522.77,231.16 1523.34,229.949 1523.91,229.985 1524.48,230.047 1525.05,227.007 1525.61,228.269 1526.18,229.622 1526.75,230.925 1527.32,231.936 1527.89,233.026 1528.46,233.018 1529.02,234 1529.59,233.916 1530.16,234.824 1530.73,236.263 1531.3,235.997 1531.87,235.539 1532.43,237.264 1533,236.959 1533.57,237.744 1534.14,237.29 1534.71,236.832 1535.28,235.487 1535.84,235.153 1536.41,236.171 1536.98,235.897 1537.55,235.591 1538.12,233.351 1538.69,234.159 1539.25,234.733 1539.82,234.526 1540.39,234.319 1540.96,232.311 1541.53,232.306 1542.1,234.126 1542.66,234.726 1543.23,233.454 1543.8,234.304 1544.37,235.181 1544.94,233.839 1545.51,236.793 1546.08,236.301 1546.64,235.852 1547.21,236.502 1547.78,238.134 1548.35,239.559 1548.92,237.953 1549.49,236.245 1550.05,235.619 1550.62,235.254 1551.19,233.562 1551.76,235.375 1552.33,235.029 1552.9,234.636 1553.46,232.3 1554.03,233.097 1554.6,231.92 1555.17,231.594 1555.74,234.701 1556.31,233.271 1556.87,236.023 1557.44,236.522 1558.01,234.986 1558.58,234.756 1559.15,234.408 1559.72,232.81 1560.28,230.399 1560.85,231.276 1561.42,232.114 1561.99,230.816 1562.56,231.754 1563.13,232.332 1563.69,229.986 1564.26,230.946 1564.83,230.008 1565.4,227.895 1565.97,228.052 1566.54,227.986 1567.1,227.205 1567.67,227.48 1568.24,227.713 1568.81,228.822 1569.38,228.864 1569.95,226.835 1570.51,226.942 1571.08,228.3 1571.65,227.591 1572.22,226.643 1572.79,228.832 1573.36,228.891 1573.92,227.171 1574.49,227.326 1575.06,227.432 1575.63,226.675 1576.2,228.113 1576.77,228.118 1577.33,230.45 1577.9,230.443 1578.47,228.331 1579.04,228.491 1579.61,228.447 1580.18,228.567 1580.74,228.619 1581.31,227.757 1581.88,226.849 1582.45,228.071 1583.02,230.41 1583.59,230.372 1584.15,228.302 1584.72,229.652 1585.29,229.732 1585.86,229.878 1586.43,231.144 1587,229.877 1587.56,229.978 1588.13,231.297 1588.7,232.211 1589.27,233.166 1589.84,232.171 1590.41,231.052 1590.97,229.964 1591.54,230.078 1592.11,230.256 1592.68,231.206 1593.25,234.378 1593.82,233.455 1594.38,232.343 1594.95,232.005 1595.52,231.765 1596.09,230.657 1596.66,231.742 1597.23,232.523 1597.79,230.472 1598.36,230.722 1598.93,230.567 1599.5,228.731 1600.07,231.276 1600.64,232.619 1601.2,229.362 1601.77,230.578 1602.34,228.821 1602.91,231.884 1603.48,230.805 1604.05,228.816 1604.61,229.95 1605.18,231.06 1605.75,230.12 1606.32,229.444 1606.89,228.686 1607.46,226.901 1608.02,230.217 1608.59,231.661 1609.16,229.587 1609.73,229.778 1610.3,228.934 1610.87,229.226 1611.43,231.416 1612,232.659 1612.57,234.472 1613.14,233.238 1613.71,231.01 1614.28,232.971 1614.84,232.806 1615.41,235.865 1615.98,234.66 1616.55,234.582 1617.12,235.826 1617.69,233.44 1618.26,235.335 1618.82,233.048 1619.39,235.04 1619.96,234.757 1620.53,234.329 1621.1,232.002 1621.67,229.749 1622.23,228.727 1622.8,226.658 1623.37,228.186 1623.94,227.393 1624.51,227.735 1625.08,228.871 1625.64,228.881 1626.21,228.293 1626.78,229.325 1627.35,230.598 1627.92,230.758 1628.49,231.968 1629.05,232.046 1629.62,232.848 1630.19,231.653 1630.76,231.591 1631.33,234.674 1631.9,232.373 1632.46,232.242 1633.03,232.257 1633.6,232.371 1634.17,233.398 1634.74,235.527 1635.31,236.358 1635.87,236.021 1636.44,237.806 1637.01,236.426 1637.58,237.299 1638.15,235.831 1638.72,233.311 1639.28,230.276 1639.85,232.333 1640.42,233.169 1640.99,231.835 1641.56,232.79 1642.13,231.541 1642.69,231.486 1643.26,229.582 1643.83,230.86 1644.4,229.878 1644.97,227.976 1645.54,228.197 1646.1,229.663 1646.67,229.92 1647.24,229.06 1647.81,229.915 1648.38,229.957 1648.95,229.064 1649.51,227.159 1650.08,228.48 1650.65,229.04 1651.22,228.225 1651.79,226.584 1652.36,224.882 1652.92,224.055 1653.49,224.775 1654.06,225.358 1654.63,225.809 1655.2,226.218 1655.77,226.544 1656.33,224.025 1656.9,224.438 1657.47,227.198 1658.04,225.354 1658.61,227.885 1659.18,229.466 1659.74,227.884 1660.31,228.166 1660.88,230.678 1661.45,231.78 1662.02,229.854 1662.59,232.243 1663.15,234.388 1663.72,234.536 1664.29,233.451 1664.86,234.519 1665.43,235.408 1666,233.103 1666.56,232.033 1667.13,230.115 1667.7,227.274 1668.27,228.484 1668.84,228.698 1669.41,229.086 1669.97,229.508 1670.54,229.709 1671.11,233.939 1671.68,233.798 1672.25,234.638 1672.82,233.454 1673.38,232.265 1673.95,233.349 1674.52,236.433 1675.09,236.155 1675.66,232.97 1676.23,233.149 1676.79,232.792 1677.36,233.797 1677.93,233.9 1678.5,233.858 1679.07,235.926 1679.64,236.626 1680.2,238.194 1680.77,236.661 1681.34,234.356 1681.91,233.277 1682.48,232.956 1683.05,233.766 1683.61,234.682 1684.18,234.388 1684.75,235.441 1685.32,238.543 1685.89,237.086 1686.46,236.356 1687.02,234.819 1687.59,238.651 1688.16,240.225 1688.73,242.551 1689.3,241.756 1689.87,239.758 1690.44,238.137 1691,237.607 1691.57,236.274 1692.14,235.772 1692.71,234.355 1693.28,232.107 1693.85,233.178 1694.41,232.77 1694.98,234.414 1695.55,233.248 1696.12,230.827 1696.69,230.967 1697.26,231.793 1697.82,232.812 1698.39,232.971 1698.96,231.695 1699.53,230.522 1700.1,229.808 1700.67,228.964 1701.23,230.203 1701.8,230.1 1702.37,231.318 1702.94,232.222 1703.51,232.53 1704.08,232.533 1704.64,231.709 1705.21,231.573 1705.78,233.475 1706.35,233.397 1706.92,235.418 1707.49,235.305 1708.05,234.1 1708.62,235.768 1709.19,234.321 1709.76,232.959 1710.33,231.514 1710.9,232.506 1711.46,234.095 1712.03,233.732 1712.6,234.421 1713.17,231.763 1713.74,230.806 1714.31,231.848 1714.87,231.828 1715.44,231.496 1716.01,230.134 1716.58,230.265 1717.15,229.302 1717.72,227.228 1718.28,226.329 1718.85,230.808 1719.42,229.854 1719.99,230.063 1720.56,229.028 1721.13,228.236 1721.69,225.352 1722.26,225.697 1722.83,225.325 1723.4,223.364 1723.97,221.892 1724.54,223.736 1725.1,224.265 1725.67,225.699 1726.24,228.309 1726.81,229.494 1727.38,229.717 1727.95,228.785 1728.51,228.171 1729.08,229.493 1729.65,228.613 1730.22,229.102 1730.79,226.382 1731.36,225.774 1731.92,227.506 1732.49,230.964 1733.06,231.065 1733.63,229.19 1734.2,228.509 1734.77,228.757 1735.33,229.072 1735.9,231.418 1736.47,230.22 1737.04,229.439 1737.61,230.829 1738.18,229.827 1738.74,227.947 1739.31,227.343 1739.88,228.834 1740.45,228.92 1741.02,228.181 1741.59,229.529 1742.15,229.617 1742.72,230.756 1743.29,230.927 1743.86,233.173 1744.43,233.348 1745,234.458 1745.56,234.163 1746.13,233.96 1746.7,234.606 1747.27,233.395 1747.84,234.305 1748.41,234.118 1748.97,234.134 1749.54,232.974 1750.11,231.656 1750.68,233.676 1751.25,236.569 1751.82,238.204 1752.38,237.57 1752.95,238.13 1753.52,238.046 1754.09,237.559 1754.66,236.014 1755.23,236.82 1755.79,234.396 1756.36,233.333 1756.93,233.213 1757.5,233.165 1758.07,232.82 1758.64,234.865 1759.21,233.705 1759.77,233.616 1760.34,232.365 1760.91,232.231 1761.48,233.036 1762.05,232.992 1762.62,231.71 1763.18,231.716 1763.75,230.729 1764.32,231.916 1764.89,232.723 1765.46,231.778 1766.03,232.748 1766.59,231.75 1767.16,230.498 1767.73,229.798 1768.3,227.797 1768.87,226.964 1769.44,228.395 1770,227.346 1770.57,227.644 1771.14,229.021 1771.71,230.252 1772.28,231.167 1772.85,232.212 1773.41,230.968 1773.98,231.965 1774.55,232.8 1775.12,231.718 1775.69,231.587 1776.26,231.651 1776.82,232.551 1777.39,235.561 1777.96,237.13 1778.53,236.651 1779.1,236.167 1779.67,236.615 1780.23,236.991 1780.8,237.588 1781.37,238.214 1781.94,239.929 1782.51,238.297 1783.08,239.956 1783.64,238.143 1784.21,235.27 1784.78,235.909 1785.35,236.293 1785.92,233.867 1786.49,233.642 1787.05,232.484 1787.62,231.14 1788.19,231.973 1788.76,229.941 1789.33,231.962 1789.9,230.716 1790.46,231.636 1791.03,230.4 1791.6,229.374 1792.17,229.478 1792.74,228.509 1793.31,227.693 1793.87,227.901 1794.44,229.067 1795.01,228.13 1795.58,229.336 1796.15,227.42 1796.72,224.714 1797.28,223.106 1797.85,223.519 1798.42,223.985 1798.99,225.422 1799.56,224.582 1800.13,224.222 1800.69,223.663 1801.26,226.184 1801.83,226.622 1802.4,227.114 1802.97,226.4 1803.54,227.623 1804.1,227.931 1804.67,229.288 1805.24,230.555 1805.81,231.588 1806.38,233.812 1806.95,233.717 1807.51,235.844 1808.08,235.576 1808.65,236.561 1809.22,234.204 1809.79,235.138 1810.36,235.996 1810.92,236.791 1811.49,235.269 1812.06,236.126 1812.63,235.879 1813.2,235.6 1813.77,235.369 1814.33,236.055 1814.9,234.306 1815.47,231.014 1816.04,231.242 1816.61,232.172 1817.18,231.264 1817.74,233.238 1818.31,234.096 1818.88,232.972 1819.45,232.862 1820.02,233.782 1820.59,233.685 1821.15,233.497 1821.72,234.383 1822.29,232.222 1822.86,232.244 1823.43,232.317 1824,232.227 1824.56,233.056 1825.13,232.853 1825.7,233.729 1826.27,233.477 1826.84,233.158 1827.41,235.036 1827.97,232.574 1828.54,233.763 1829.11,231.552 1829.68,231.326 1830.25,231.318 1830.82,233.287 1831.39,233.093 1831.95,233.01 1832.52,233.654 1833.09,230.577 1833.66,229.486 1834.23,229.772 1834.8,231.221 1835.36,232.246 1835.93,232.038 1836.5,233.095 1837.07,232.805 1837.64,232.634 1838.21,231.417 1838.77,231.332 1839.34,229.992 1839.91,231.205 1840.48,232.293 1841.05,232.171 1841.62,234.265 1842.18,232.982 1842.75,232.889 1843.32,230.597 1843.89,231.718 1844.46,232.464 1845.03,231.588 1845.59,230.622 1846.16,229.711 1846.73,229.872 1847.3,230.816 1847.87,232.164 1848.44,229.112 1849,228.331 1849.57,225.474 1850.14,226.846 1850.71,226.739 1851.28,228.04 1851.85,228.383 1852.41,226.599 1852.98,228.238 1853.55,229.498 1854.12,229.468 1854.69,230.533 1855.26,231.704 1855.82,231.597 1856.39,231.549 1856.96,231.422 1857.53,235.599 1858.1,237.453 1858.67,238.188 1859.23,235.832 1859.8,234.462 1860.37,235.393 1860.94,234.204 1861.51,234.122 1862.08,231.931 1862.64,234.057 1863.21,229.851 1863.78,231.061 1864.35,230.901 1864.92,232.109 1865.49,231.885 1866.05,231.864 1866.62,233.826 1867.19,233.629 1867.76,233.443 1868.33,232.285 1868.9,232.278 1869.46,231.903 1870.03,231.958 1870.6,230.984 1871.17,232.052 1871.74,233.088 1872.31,233.752 1872.87,232.554 1873.44,232.593 1874.01,232.503 1874.58,232.193 1875.15,231.017 1875.72,232.281 1876.28,231.468 1876.85,230.082 1877.42,229.184 1877.99,227.42 1878.56,227.675 1879.13,226.193 1879.69,225.42 1880.26,226.764 1880.83,225.018 1881.4,224.521 1881.97,225.95 1882.54,227.213 1883.1,226.291 1883.67,226.686 1884.24,225.985 1884.81,225.294 1885.38,224.509 1885.95,223.882 1886.51,224.459 1887.08,222.947 1887.65,225.659 1888.22,225.905 1888.79,225.182 1889.36,225.444 1889.92,225.788 1890.49,226.4 1891.06,227.122 1891.63,228.648 1892.2,227.863 1892.77,229.178 1893.33,227.5 1893.9,227.977 1894.47,227.333 1895.04,226.825 1895.61,227.176 1896.18,227.505 1896.74,227.883 1897.31,226.325 1897.88,225.876 1898.45,227.477 1899.02,229.258 1899.59,229.787 1900.16,229.117 1900.72,229.35 1901.29,228.88 1901.86,230.283 1902.43,228.632 1903,231.228 1903.57,235.349 1904.13,237.477 1904.7,238.246 1905.27,236.866 1905.84,236.548 1906.41,235.376 1906.98,237.497 1907.54,238.188 1908.11,238.642 1908.68,235.136 1909.25,235.232 1909.82,234.293 1910.39,234.274 1910.95,234.257 1911.52,234.26 1912.09,235.303 1912.66,235.182 1913.23,236.808 1913.8,232.156 1914.36,231.287 1914.93,230.39 1915.5,230.391 1916.07,231.709 1916.64,231.761 1917.21,235.102 1917.77,235.157 1918.34,236.028 1918.91,235.854 1919.48,236.816 1920.05,236.421 1920.62,236.28 1921.18,236.224 1921.75,234.943 1922.32,233.706 1922.89,233.555 1923.46,234.666 1924.03,234.581 1924.59,236.414 1925.16,235.167 1925.73,235.095 1926.3,238.897 1926.87,239.479 1927.44,240.899 1928,240.288 1928.57,238.652 1929.14,238.065 1929.71,237.394 1930.28,239.08 1930.85,240.484 1931.41,239.898 1931.98,239.21 1932.55,240.483 1933.12,238.96 1933.69,238.389 1934.26,236.737 1934.82,235.258 1935.39,234.828 1935.96,233.235 1936.53,232.931 1937.1,232.523 1937.67,232.447 1938.23,231.28 1938.8,231.06 1939.37,233.126 1939.94,232.89 1940.51,232.568 1941.08,233.653 1941.64,232.382 1942.21,231.271 1942.78,230.266 1943.35,231.233 1943.92,231.207 1944.49,232.111 1945.05,234.194 1945.62,233.959 1946.19,233.635 1946.76,234.331 1947.33,233.796 1947.9,233.65 1948.46,233.385 1949.03,234.207 1949.6,234 1950.17,233.864 1950.74,235.737 1951.31,233.241 1951.87,233.057 1952.44,233.785 1953.01,232.747 1953.58,232.567 1954.15,235.604 1954.72,236.33 1955.28,237.012 1955.85,235.53 1956.42,235.051 1956.99,233.77 1957.56,231.997 1958.13,230.812 1958.69,229.711 1959.26,229.657 1959.83,228.66 1960.4,230.518 1960.97,229.324 1961.54,230.408 1962.1,229.221 1962.67,225.311 1963.24,225.419 1963.81,225.83 1964.38,226.265 1964.95,226.44 1965.51,227.831 1966.08,227.096 1966.65,227.065 1967.22,228.091 1967.79,227.291 1968.36,225.508 1968.92,225.818 1969.49,225.921 1970.06,226.115 1970.63,226.466 1971.2,224.706 1971.77,224.984 1972.34,225.416 1972.9,224.726 1973.47,225.103 1974.04,223.344 1974.61,223.058 1975.18,222.485 1975.75,224.261 1976.31,224.667 1976.88,221.832 1977.45,222.678 1978.02,223.157 1978.59,220.628 1979.16,223.46 1979.72,224.115 1980.29,224.989 1980.86,227.778 1981.43,228.322 1982,227.315 1982.57,228.73 1983.13,230.118 1983.7,229.247 1984.27,228.664 1984.84,232.145 1985.41,230.185 1985.98,231.613 1986.54,231.834 1987.11,230.951 1987.68,231.014 1988.25,230.122 1988.82,232.458 1989.39,232.558 1989.95,230.764 1990.52,232.932 1991.09,234.02 1991.66,233.028 1992.23,234.191 1992.8,234.946 1993.36,234.935 1993.93,235.777 1994.5,234.711 1995.07,234.608 1995.64,236.615 1996.21,236.418 1996.77,234.071 1997.34,233.965 1997.91,233.806 1998.48,230.686 1999.05,232.038 1999.62,233.96 2000.18,232.758 2000.75,230.537 2001.32,230.596 2001.89,230.974 2002.46,232.056 2003.03,229.341 2003.59,229.618 2004.16,227.674 2004.73,228.849 2005.3,228.976 2005.87,230.159 2006.44,229.597 2007,230.593 2007.57,230.775 2008.14,230.74 2008.71,235.045 2009.28,234.741 2009.85,233.552 2010.41,231.431 2010.98,232.381 2011.55,231.417 2012.12,232.677 2012.69,233.589 2013.26,232.447 2013.82,231.63 2014.39,232.754 2014.96,234.947 2015.53,232.723 2016.1,233.783 2016.67,232.638 2017.23,233.409 2017.8,234.274 2018.37,232.998 2018.94,234.01 2019.51,232.744 2020.08,234.724 2020.64,234.633 2021.21,233.351 2021.78,233.302 2022.35,232.292 2022.92,232.346 2023.49,233.107 2024.05,233.068 2024.62,232.025 2025.19,232.265 2025.76,234.207 2026.33,233.827 2026.9,234.698 2027.46,234.545 2028.03,232.311 2028.6,232.322 2029.17,231.35 2029.74,229.543 2030.31,229.689 2030.87,230.601 2031.44,230.834 2032.01,232.007 2032.58,231.09 2033.15,229.174 2033.72,233.542 2034.28,233.452 2034.85,233.102 2035.42,233.101 2035.99,232.981 2036.56,231.834 2037.13,232.812 2037.69,230.843 2038.26,232.972 2038.83,232.039 2039.4,233.978 2039.97,233.995 2040.54,232.769 2041.11,231.629 2041.67,229.531 2042.24,230.737 2042.81,230.969 2043.38,233.147 2043.95,233.177 2044.52,230.85 2045.08,234.948 2045.65,236.782 2046.22,237.616 2046.79,235.112 2047.36,234.858 2047.93,234.708 2048.49,234.408 2049.06,233.452 2049.63,232.147 2050.2,232.205 2050.77,233.338 2051.34,233.025 2051.9,235.016 2052.47,235.648 2053.04,236.228 2053.61,234.077 2054.18,233.991 2054.75,233.612 2055.31,233.52 2055.88,235.264 2056.45,234.961 2057.02,234.817 2057.59,233.627 2058.16,232.295 2058.72,231.322 2059.29,231.24 2059.86,228.297 2060.43,228.494 2061,228.88 2061.57,229.97 2062.13,231.069 2062.7,230.918 2063.27,229.954 2063.84,230.257 2064.41,230.521 2064.98,229.636 2065.54,227.722 2066.11,226.765 2066.68,227.254 2067.25,229.515 2067.82,232.947 2068.39,232.783 2068.95,232.666 2069.52,233.353 2070.09,232.258 2070.66,232.04 2071.23,234.024 2071.8,229.734 2072.36,229.083 2072.93,229.125 2073.5,228.361 2074.07,228.475 2074.64,228.683 2075.21,229.006 2075.77,230.311 2076.34,230.222 2076.91,229.425 2077.48,230.695 2078.05,230.854 2078.62,230.03 2079.18,229.117 2079.75,228.454 2080.32,228.577 2080.89,229.964 2081.46,230.187 2082.03,231.466 2082.59,232.504 2083.16,233.472 2083.73,236.456 2084.3,236.246 2084.87,231.652 2085.44,231.484 2086,229.41 2086.57,229.804 2087.14,230.058 2087.71,230.384 2088.28,232.625 2088.85,231.643 2089.41,232.632 2089.98,233.473 2090.55,236.219 2091.12,233.653 2091.69,233.322 2092.26,232.108 2092.82,231.261 2093.39,231.217 2093.96,229.148 2094.53,226.354 2095.1,227.695 2095.67,227.855 2096.23,225.969 2096.8,227.374 2097.37,228.611 2097.94,229.801 2098.51,231.135 2099.08,230.137 2099.64,232.396 2100.21,232.17 2100.78,230.994 2101.35,230.138 2101.92,231.465 2102.49,229.411 2103.05,227.889 2103.62,228.503 2104.19,228.714 2104.76,227.994 2105.33,226.42 2105.9,225.643 2106.46,227.192 2107.03,229.803 2107.6,228.887 2108.17,229.03 2108.74,229.252 2109.31,229.576 2109.87,231.859 2110.44,234.119 2111.01,233.182 2111.58,233.181 2112.15,234.258 2112.72,235.1 2113.29,235.08 2113.85,234.894 2114.42,236.82 2114.99,235.594 2115.56,234.14 2116.13,232.95 2116.7,231.918 2117.26,231.938 2117.83,232.216 2118.4,233.41 2118.97,231.443 2119.54,234.493 2120.11,233.252 2120.67,233.272 2121.24,235.218 2121.81,235.8 2122.38,236.542 2122.95,237.083 2123.52,238.015 2124.08,236.538 2124.65,236.394 2125.22,235.807 2125.79,235.386 2126.36,235.054 2126.93,234.847 2127.49,234.631 2128.06,237.55 2128.63,235.388 2129.2,233.964 2129.77,233.714 2130.34,234.392 2130.9,234.006 2131.47,230.691 2132.04,230.67 2132.61,230.95 2133.18,233.013 2133.75,233.927 2134.31,232.749 2134.88,233.631 2135.45,232.503 2136.02,232.344 2136.59,232.361 2137.16,233.221 2137.72,233.088 2138.29,232.947 2138.86,233.706 2139.43,234.559 2140,234.234 2140.57,233.01 2141.13,232.982 2141.7,231.684 2142.27,230.798 2142.84,233.924 2143.41,234.975 2143.98,236.633 2144.54,237.114 2145.11,232.464 2145.68,234.162 2146.25,233.958 2146.82,233.562 2147.39,233.228 2147.95,230.907 2148.52,232.78 2149.09,233.495 2149.66,233.423 2150.23,235.096 2150.8,234.884 2151.36,233.527 2151.93,235.191 2152.5,234.736 2153.07,234.302 2153.64,234.183 2154.21,234.995 2154.77,233.339 2155.34,234.131 2155.91,235.913 2156.48,235.404 2157.05,235.146 2157.62,236.678 2158.18,236.567 2158.75,236.156 2159.32,235.736 2159.89,237.157 \"/>\n<path clip-path=\"url(#clip080)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip080)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip080)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip080)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip080)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip080)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.025 ± 0.025\n  with uncertainty of ± 0.002267312399690239\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01809 ± (0.00211468, 0.00196845) (MC)\n  95% confidence interval: [-4.02194, -4.01404]) (MC)\n  linear error propagation: -4.01805 ± 0.00202924\n  |δ_y| = |0.00155145| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.018088528234756, val_l = 0.003853855037533549, val_u = 0.0040463236774730404)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip110\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip110)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip111\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip110)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip112\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1135.94 2211.02,1135.94 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,960.039 2211.02,960.039 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,784.135 2211.02,784.135 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,608.232 2211.02,608.232 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,432.328 2211.02,432.328 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,256.424 2211.02,256.424 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1135.94 365.751,1135.94 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,960.039 365.751,960.039 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,784.135 365.751,784.135 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,608.232 365.751,608.232 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,432.328 365.751,432.328 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,256.424 365.751,256.424 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M298.909 1121.74 Q295.298 1121.74 293.469 1125.31 Q291.664 1128.85 291.664 1135.98 Q291.664 1143.08 293.469 1146.65 Q295.298 1150.19 298.909 1150.19 Q302.543 1150.19 304.349 1146.65 Q306.177 1143.08 306.177 1135.98 Q306.177 1128.85 304.349 1125.31 Q302.543 1121.74 298.909 1121.74 M298.909 1118.04 Q304.719 1118.04 307.775 1122.64 Q310.853 1127.23 310.853 1135.98 Q310.853 1144.7 307.775 1149.31 Q304.719 1153.89 298.909 1153.89 Q293.099 1153.89 290.02 1149.31 Q286.964 1144.7 286.964 1135.98 Q286.964 1127.23 290.02 1122.64 Q293.099 1118.04 298.909 1118.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M259.557 973.384 L267.196 973.384 L267.196 947.018 L258.886 948.685 L258.886 944.426 L267.15 942.759 L271.826 942.759 L271.826 973.384 L279.465 973.384 L279.465 977.319 L259.557 977.319 L259.557 973.384 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M298.909 945.838 Q295.298 945.838 293.469 949.403 Q291.664 952.944 291.664 960.074 Q291.664 967.18 293.469 970.745 Q295.298 974.287 298.909 974.287 Q302.543 974.287 304.349 970.745 Q306.177 967.18 306.177 960.074 Q306.177 952.944 304.349 949.403 Q302.543 945.838 298.909 945.838 M298.909 942.134 Q304.719 942.134 307.775 946.741 Q310.853 951.324 310.853 960.074 Q310.853 968.801 307.775 973.407 Q304.719 977.991 298.909 977.991 Q293.099 977.991 290.02 973.407 Q286.964 968.801 286.964 960.074 Q286.964 951.324 290.02 946.741 Q293.099 942.134 298.909 942.134 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M262.775 797.48 L279.094 797.48 L279.094 801.415 L257.15 801.415 L257.15 797.48 Q259.812 794.726 264.395 790.096 Q269.002 785.443 270.182 784.101 Q272.428 781.578 273.307 779.842 Q274.21 778.082 274.21 776.392 Q274.21 773.638 272.266 771.902 Q270.344 770.166 267.242 770.166 Q265.043 770.166 262.59 770.93 Q260.159 771.693 257.381 773.244 L257.381 768.522 Q260.205 767.388 262.659 766.809 Q265.113 766.23 267.15 766.23 Q272.52 766.23 275.715 768.916 Q278.909 771.601 278.909 776.092 Q278.909 778.221 278.099 780.142 Q277.312 782.041 275.205 784.633 Q274.627 785.304 271.525 788.522 Q268.423 791.716 262.775 797.48 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M298.909 769.934 Q295.298 769.934 293.469 773.499 Q291.664 777.041 291.664 784.17 Q291.664 791.277 293.469 794.841 Q295.298 798.383 298.909 798.383 Q302.543 798.383 304.349 794.841 Q306.177 791.277 306.177 784.17 Q306.177 777.041 304.349 773.499 Q302.543 769.934 298.909 769.934 M298.909 766.23 Q304.719 766.23 307.775 770.837 Q310.853 775.42 310.853 784.17 Q310.853 792.897 307.775 797.503 Q304.719 802.087 298.909 802.087 Q293.099 802.087 290.02 797.503 Q286.964 792.897 286.964 784.17 Q286.964 775.42 290.02 770.837 Q293.099 766.23 298.909 766.23 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M272.914 606.878 Q276.27 607.595 278.145 609.864 Q280.043 612.132 280.043 615.466 Q280.043 620.581 276.525 623.382 Q273.006 626.183 266.525 626.183 Q264.349 626.183 262.034 625.743 Q259.742 625.327 257.289 624.47 L257.289 619.956 Q259.233 621.09 261.548 621.669 Q263.863 622.248 266.386 622.248 Q270.784 622.248 273.076 620.512 Q275.39 618.776 275.39 615.466 Q275.39 612.41 273.238 610.697 Q271.108 608.961 267.289 608.961 L263.261 608.961 L263.261 605.118 L267.474 605.118 Q270.923 605.118 272.752 603.753 Q274.58 602.364 274.58 599.771 Q274.58 597.109 272.682 595.697 Q270.807 594.262 267.289 594.262 Q265.367 594.262 263.168 594.679 Q260.969 595.095 258.33 595.975 L258.33 591.808 Q260.992 591.067 263.307 590.697 Q265.645 590.327 267.705 590.327 Q273.029 590.327 276.131 592.757 Q279.233 595.165 279.233 599.285 Q279.233 602.155 277.59 604.146 Q275.946 606.114 272.914 606.878 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M298.909 594.03 Q295.298 594.03 293.469 597.595 Q291.664 601.137 291.664 608.266 Q291.664 615.373 293.469 618.938 Q295.298 622.479 298.909 622.479 Q302.543 622.479 304.349 618.938 Q306.177 615.373 306.177 608.266 Q306.177 601.137 304.349 597.595 Q302.543 594.03 298.909 594.03 M298.909 590.327 Q304.719 590.327 307.775 594.933 Q310.853 599.517 310.853 608.266 Q310.853 616.993 307.775 621.6 Q304.719 626.183 298.909 626.183 Q293.099 626.183 290.02 621.6 Q286.964 616.993 286.964 608.266 Q286.964 599.517 290.02 594.933 Q293.099 590.327 298.909 590.327 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M271.594 419.122 L259.789 437.571 L271.594 437.571 L271.594 419.122 M270.367 415.048 L276.247 415.048 L276.247 437.571 L281.177 437.571 L281.177 441.46 L276.247 441.46 L276.247 449.608 L271.594 449.608 L271.594 441.46 L255.992 441.46 L255.992 436.946 L270.367 415.048 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M298.909 418.127 Q295.298 418.127 293.469 421.692 Q291.664 425.233 291.664 432.363 Q291.664 439.469 293.469 443.034 Q295.298 446.576 298.909 446.576 Q302.543 446.576 304.349 443.034 Q306.177 439.469 306.177 432.363 Q306.177 425.233 304.349 421.692 Q302.543 418.127 298.909 418.127 M298.909 414.423 Q304.719 414.423 307.775 419.029 Q310.853 423.613 310.853 432.363 Q310.853 441.09 307.775 445.696 Q304.719 450.279 298.909 450.279 Q293.099 450.279 290.02 445.696 Q286.964 441.09 286.964 432.363 Q286.964 423.613 290.02 419.029 Q293.099 414.423 298.909 414.423 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M258.793 239.144 L277.15 239.144 L277.15 243.079 L263.076 243.079 L263.076 251.552 Q264.094 251.204 265.113 251.042 Q266.131 250.857 267.15 250.857 Q272.937 250.857 276.316 254.028 Q279.696 257.2 279.696 262.616 Q279.696 268.195 276.224 271.297 Q272.752 274.376 266.432 274.376 Q264.256 274.376 261.988 274.005 Q259.742 273.635 257.335 272.894 L257.335 268.195 Q259.418 269.329 261.641 269.885 Q263.863 270.44 266.34 270.44 Q270.344 270.44 272.682 268.334 Q275.02 266.227 275.02 262.616 Q275.02 259.005 272.682 256.899 Q270.344 254.792 266.34 254.792 Q264.465 254.792 262.59 255.209 Q260.738 255.626 258.793 256.505 L258.793 239.144 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M298.909 242.223 Q295.298 242.223 293.469 245.788 Q291.664 249.329 291.664 256.459 Q291.664 263.565 293.469 267.13 Q295.298 270.672 298.909 270.672 Q302.543 270.672 304.349 267.13 Q306.177 263.565 306.177 256.459 Q306.177 249.329 304.349 245.788 Q302.543 242.223 298.909 242.223 M298.909 238.519 Q304.719 238.519 307.775 243.126 Q310.853 247.709 310.853 256.459 Q310.853 265.186 307.775 269.792 Q304.719 274.376 298.909 274.376 Q293.099 274.376 290.02 269.792 Q286.964 265.186 286.964 256.459 Q286.964 247.709 290.02 243.126 Q293.099 238.519 298.909 238.519 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip112)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1006.33 400.199,887.259 400.786,778.006 401.372,677.911 401.958,714.663 402.545,624.887 403.131,542.925 403.718,576.243 404.304,601.883 404.891,620.808 405.477,552.114 406.063,489.698 406.65,431.953 407.236,453.086 407.823,404.031 408.409,358.574 408.995,319.252 409.582,282.891 410.168,306.402 410.755,275.663 411.341,249.826 411.927,227.443 412.514,292.268 413.1,272.297 413.687,254.971 414.273,273.243 414.86,258.217 415.446,246.205 416.032,235.637 416.619,228.3 417.205,222.504 417.792,219.895 418.378,264.192 418.964,260.811 419.551,280.144 420.137,298.135 420.724,297.42 421.31,299.561 421.896,318.388 422.483,321.035 423.069,339.848 423.656,358.375 424.242,363.707 424.829,382.539 425.415,400.602 426.001,407.874 426.588,415.701 427.174,422.235 427.761,430.631 428.347,449.096 428.933,467.765 429.52,485.792 430.106,494.54 430.693,504.519 431.279,521.494 431.865,538.389 432.452,554.76 433.038,570.622 433.625,599.586 434.211,615.397 434.798,631.131 435.384,640.584 435.97,666.315 436.557,681.116 437.143,695.845 437.73,714.687 438.316,724.339 438.902,742.64 439.489,760.057 440.075,781.349 440.662,797.517 441.248,812.929 441.835,832.341 442.421,843.392 443.007,857.617 443.594,863.929 444.18,870.666 444.767,880.573 445.353,890.642 445.939,903.25 446.526,915.61 447.112,927.6 447.699,933.43 448.285,950.608 448.871,958.682 449.458,966.594 450.044,971.913 450.631,979.932 451.217,990.428 451.804,997.941 452.39,1005.04 452.976,1012.18 453.563,1019.31 454.149,1023.34 454.736,1032.14 455.322,1038.67 455.908,1049.44 456.495,1055.85 457.081,1061.85 457.668,1068.21 458.254,1073.82 458.84,1083.69 459.427,1086.74 460.013,1092.18 460.6,1095.01 461.186,1099.96 461.773,1106.95 462.359,1113.4 462.945,1116.18 463.532,1120.34 464.118,1122.53 464.705,1130.5 465.291,1138.58 465.877,1142.36 466.464,1144.22 467.05,1147.86 467.637,1149.61 468.223,1155.13 468.809,1158.57 469.396,1164.03 469.982,1168.91 470.569,1177.1 471.155,1181.13 471.742,1181.62 472.328,1187.59 472.914,1189.65 473.501,1193.57 474.087,1195.19 474.674,1197.08 475.26,1196.77 475.846,1196.87 476.433,1200.46 477.019,1205.62 477.606,1205.44 478.192,1211.81 478.778,1212.99 479.365,1217.1 479.951,1218.18 480.538,1219.16 481.124,1219.86 481.711,1220.6 482.297,1219.71 482.883,1218.9 483.47,1218.43 484.056,1219.71 484.643,1217.66 485.229,1217.26 485.815,1218.32 486.402,1216.09 486.988,1212.81 487.575,1212.65 488.161,1212.86 488.748,1214.56 489.334,1213.04 489.92,1214.31 490.507,1218.94 491.093,1217.36 491.68,1218.93 492.266,1222.03 492.852,1225.01 493.439,1226.3 494.025,1227.17 494.612,1233.1 495.198,1233.79 495.784,1231.67 496.371,1232.65 496.957,1232.01 497.544,1232.7 498.13,1233.64 498.717,1234.34 499.303,1234.91 499.889,1234.47 500.476,1231.76 501.062,1232.83 501.649,1232.3 502.235,1237.65 502.821,1240.06 503.408,1237.59 503.994,1240.02 504.581,1237.5 505.167,1238.31 505.753,1237.29 506.34,1236.93 506.926,1234.89 507.513,1232.92 508.099,1232.53 508.686,1233.5 509.272,1233.18 509.858,1234.27 510.445,1233.66 511.031,1233.16 511.618,1232.81 512.204,1236.65 512.79,1239.31 513.377,1241.52 513.963,1240.65 514.55,1242.69 515.136,1241.8 515.722,1248.29 516.309,1247 516.895,1244.38 517.482,1243.5 518.068,1242.32 518.655,1241.73 519.241,1244.97 519.827,1243.79 520.414,1244.23 521,1241.64 521.587,1242.34 522.173,1244.43 522.759,1241.98 523.346,1245.39 523.932,1246.13 524.519,1246.46 525.105,1248.55 525.691,1250.53 526.278,1249.12 526.864,1246.73 527.451,1245.71 528.037,1243.39 528.624,1242.32 529.21,1240.24 529.796,1238.2 530.383,1236.13 530.969,1236.87 531.556,1236.58 532.142,1237.62 532.728,1238.73 533.315,1238.34 533.901,1236.07 534.488,1239.76 535.074,1241.91 535.661,1239.76 536.247,1239.09 536.833,1239.59 537.42,1235.68 538.006,1236.36 538.593,1236.9 539.179,1237.8 539.765,1238.4 540.352,1239.1 540.938,1240.02 541.525,1239.17 542.111,1235.53 542.697,1235.09 543.284,1234.71 543.87,1235.66 544.457,1234.82 545.043,1234.25 545.63,1236.42 546.216,1234.08 546.802,1230.79 547.389,1229.16 547.975,1229.15 548.562,1230.55 549.148,1233.05 549.734,1233.02 550.321,1232.45 550.907,1233.68 551.494,1233.28 552.08,1235.91 552.666,1234.22 553.253,1232.21 553.839,1234.57 554.426,1232.29 555.012,1228.99 555.599,1232.92 556.185,1233.98 556.771,1235.09 557.358,1233.02 557.944,1232.49 558.531,1230.48 559.117,1234.88 559.703,1232.96 560.29,1232.66 560.876,1232.46 561.463,1232.17 562.049,1229.88 562.635,1231.36 563.222,1232.79 563.808,1232.37 564.395,1233.56 564.981,1235.95 565.568,1238.06 566.154,1237.57 566.74,1237.87 567.327,1232.88 567.913,1231.88 568.5,1231.39 569.086,1230.93 569.672,1230.32 570.259,1229.84 570.845,1228.2 571.432,1229.45 572.018,1231.66 572.605,1232.72 573.191,1232.15 573.777,1232.84 574.364,1235.16 574.95,1234.02 575.537,1239.27 576.123,1241.29 576.709,1237.53 577.296,1235.49 577.882,1234.85 578.469,1235.77 579.055,1235.2 579.641,1237.51 580.228,1236.72 580.814,1236.25 581.401,1235.04 581.987,1236.04 582.574,1235.19 583.16,1235.83 583.746,1235.49 584.333,1234.66 584.919,1236.57 585.506,1238.36 586.092,1234.57 586.678,1230.77 587.265,1226.02 587.851,1228.74 588.438,1228.52 589.024,1225.17 589.61,1223.61 590.197,1223.58 590.783,1223.29 591.37,1223 591.956,1222.77 592.543,1225.57 593.129,1219.69 593.715,1222.54 594.302,1222.72 594.888,1223.6 595.475,1221.89 596.061,1220.59 596.647,1217.97 597.234,1218.08 597.82,1219.56 598.407,1220.92 598.993,1222.5 599.579,1225.34 600.166,1222.35 600.752,1225.15 601.339,1220.46 601.925,1217.7 602.512,1216.14 603.098,1216.13 603.684,1219.01 604.271,1217.94 604.857,1220.68 605.444,1222.02 606.03,1223.45 606.616,1225.03 607.203,1222.04 607.789,1221.72 608.376,1221.16 608.962,1220.85 609.548,1217.94 610.135,1217.8 610.721,1217.47 611.308,1215.99 611.894,1214.49 612.481,1214.66 613.067,1215.1 613.653,1216.86 614.24,1217.16 614.826,1217.51 615.413,1217.77 615.999,1218.9 616.585,1218.81 617.172,1220.19 617.758,1218.92 618.345,1218.8 618.931,1218.98 619.518,1219.88 620.104,1222.73 620.69,1221.33 621.277,1222.57 621.863,1223.91 622.45,1223.52 623.036,1226.19 623.622,1226.15 624.209,1224.22 624.795,1224.83 625.382,1225.79 625.968,1225.23 626.554,1227.6 627.141,1228.59 627.727,1226.5 628.314,1228.35 628.9,1227.82 629.487,1223.09 630.073,1219.9 630.659,1221.15 631.246,1220.65 631.832,1220.44 632.419,1217.16 633.005,1216.98 633.591,1214.11 634.178,1217.25 634.764,1220.42 635.351,1221.66 635.937,1224.26 636.523,1225.22 637.11,1226.15 637.696,1227.01 638.283,1225.27 638.869,1224.88 639.456,1226.01 640.042,1227.94 640.628,1227.16 641.215,1226.26 641.801,1224.14 642.388,1229.04 642.974,1228.49 643.56,1230.82 644.147,1225.94 644.733,1224.39 645.32,1223.78 645.906,1223.62 646.492,1221.72 647.079,1223.1 647.665,1222.64 648.252,1223.88 648.838,1220.67 649.425,1220.49 650.011,1220.11 650.597,1218.61 651.184,1218.16 651.77,1216.41 652.357,1214.38 652.943,1214.47 653.529,1212.96 654.116,1212.83 654.702,1211.26 655.289,1214.34 655.875,1213.01 656.462,1214.33 657.048,1212.92 657.634,1211.49 658.221,1211.54 658.807,1211.49 659.394,1210.03 659.98,1210.13 660.566,1214.61 661.153,1216 661.739,1215.99 662.326,1217.27 662.912,1212.59 663.498,1209.77 664.085,1209.96 664.671,1208.53 665.258,1208.83 665.844,1212.41 666.431,1212.47 667.017,1215.24 667.603,1212.58 668.19,1215.63 668.776,1215.49 669.363,1213.74 669.949,1215.21 670.535,1213.67 671.122,1212.35 671.708,1213.6 672.295,1216.55 672.881,1213.08 673.467,1209.01 674.054,1208.07 674.64,1208.5 675.227,1210.22 675.813,1210.27 676.4,1210.65 676.986,1212.17 677.572,1212.23 678.159,1209.54 678.745,1209.95 679.332,1209.99 679.918,1209.93 680.504,1211.68 681.091,1211.61 681.677,1211.77 682.264,1213.55 682.85,1212.42 683.436,1212.54 684.023,1214.13 684.609,1212.5 685.196,1211.14 685.782,1209.74 686.369,1206.94 686.955,1211.47 687.541,1213.02 688.128,1218.58 688.714,1219.86 689.301,1219.66 689.887,1217.9 690.473,1216.36 691.06,1216.43 691.646,1215 692.233,1214.93 692.819,1214.83 693.405,1213.11 693.992,1211.83 694.578,1210.52 695.165,1210.77 695.751,1209.51 696.338,1208.24 696.924,1209.89 697.51,1211.57 698.097,1210.01 698.683,1210.21 699.27,1209.05 699.856,1212.36 700.442,1216.89 701.029,1216.78 701.615,1216.63 702.202,1218.12 702.788,1215.23 703.375,1216.59 703.961,1217.99 704.547,1219.3 705.134,1219.26 705.72,1220.27 706.307,1218.6 706.893,1217.01 707.479,1216.77 708.066,1216.57 708.652,1216.38 709.239,1216.12 709.825,1218.52 710.411,1218.21 710.998,1213.66 711.584,1215.34 712.171,1216.84 712.757,1215.3 713.344,1215.05 713.93,1218.91 714.516,1218.77 715.103,1218.34 715.689,1216.47 716.276,1219.01 716.862,1219.87 717.448,1217.93 718.035,1217.58 718.621,1212.97 719.208,1214.39 719.794,1217.13 720.38,1215.29 720.967,1213.76 721.553,1212.41 722.14,1213.49 722.726,1211.93 723.313,1215.04 723.899,1215.04 724.485,1215.01 725.072,1216.42 725.658,1216.19 726.245,1217.58 726.831,1214.55 727.417,1212.98 728.004,1212.72 728.59,1214.34 729.177,1220.11 729.763,1223.68 730.349,1221.77 730.936,1216.74 731.522,1218.06 732.109,1216.18 732.695,1213.1 733.282,1217.17 733.868,1218.37 734.454,1218 735.041,1216.36 735.627,1213.48 736.214,1218.9 736.8,1219.72 737.386,1217.74 737.973,1214.39 738.559,1215.53 739.146,1212.23 739.732,1215.2 740.318,1213.52 740.905,1216 741.491,1218.26 742.078,1217.77 742.664,1218.88 743.251,1216.96 743.837,1218.07 744.423,1219.14 745.01,1218.61 745.596,1216.86 746.183,1215.14 746.769,1213.68 747.355,1213.39 747.942,1210.31 748.528,1208.88 749.115,1211.93 749.701,1214.8 750.288,1213.2 750.874,1210.15 751.46,1207.22 752.047,1207.32 752.633,1205.99 753.22,1209.05 753.806,1206.4 754.392,1202.39 754.979,1205.62 755.565,1207.51 756.152,1207.68 756.738,1210.75 757.324,1209.19 757.911,1210.59 758.497,1209.16 759.084,1207.68 759.67,1207.64 760.257,1209.1 760.843,1208.93 761.429,1210.17 762.016,1211.7 762.602,1213.37 763.189,1214.92 763.775,1213.33 764.361,1216.38 764.948,1217.75 765.534,1217.54 766.121,1217.32 766.707,1217.09 767.293,1214.25 767.88,1214.12 768.466,1217.91 769.053,1214.39 769.639,1214.09 770.226,1218.2 770.812,1217.77 771.398,1217.63 771.985,1217.24 772.571,1218.21 773.158,1216.42 773.744,1216.41 774.33,1214.7 774.917,1214.45 775.503,1215.22 776.09,1215.22 776.676,1216.54 777.262,1214.44 777.849,1214.18 778.435,1216.83 779.022,1216.69 779.608,1211.86 780.195,1211.62 780.781,1216.16 781.367,1215.99 781.954,1215.4 782.54,1215.08 783.127,1215.29 783.713,1214.81 784.299,1217.55 784.886,1218.74 785.472,1218.18 786.059,1217.4 786.645,1216.76 787.232,1215.02 787.818,1215.84 788.404,1216.88 788.991,1215.16 789.577,1211.85 790.164,1214.52 790.75,1216 791.336,1217.03 791.923,1220.97 792.509,1218.9 793.096,1218.33 793.682,1213.4 794.268,1210.38 794.855,1213.16 795.441,1211.69 796.028,1213.33 796.614,1214.87 797.201,1213.22 797.787,1212.94 798.373,1212.77 798.96,1211.18 799.546,1210.99 800.133,1206.67 800.719,1206.89 801.305,1205.4 801.892,1203.93 802.478,1202.68 803.065,1203.06 803.651,1203.17 804.237,1205.03 804.824,1205.19 805.41,1207.09 805.997,1204.01 806.583,1204.05 807.17,1204.16 807.756,1205.68 808.342,1207.36 808.929,1207.2 809.515,1208.44 810.102,1209.94 810.688,1210.1 811.274,1208.63 811.861,1208.92 812.447,1208.7 813.034,1207.13 813.62,1207.65 814.206,1207.97 814.793,1210.82 815.379,1209.51 815.966,1207.86 816.552,1209.57 817.139,1209.48 817.725,1209.55 818.311,1210.76 818.898,1208.16 819.484,1207.02 820.071,1205.54 820.657,1202.84 821.243,1203.14 821.83,1202.05 822.416,1200.88 823.003,1200.05 823.589,1198.96 824.175,1199.57 824.762,1199.64 825.348,1204.9 825.935,1202.35 826.521,1203.85 827.108,1199.98 827.694,1201.97 828.28,1202.13 828.867,1202.73 829.453,1200.42 830.04,1201.09 830.626,1199.95 831.212,1200.56 831.799,1201.23 832.385,1198.86 832.972,1200.87 833.558,1203.05 834.145,1203.45 834.731,1203.7 835.317,1205.38 835.904,1205.44 836.49,1208.53 837.077,1204.37 837.663,1208.63 838.249,1208.65 838.836,1207.26 839.422,1203.19 840.009,1200.75 840.595,1199.78 841.181,1200.6 841.768,1202.49 842.354,1201.62 842.941,1204.67 843.527,1204.84 844.114,1206.36 844.7,1207.71 845.286,1210.81 845.873,1210.81 846.459,1209.07 847.046,1210.49 847.632,1207.63 848.218,1206.39 848.805,1206.66 849.391,1205.23 849.978,1207.98 850.564,1209.42 851.15,1209.78 851.737,1206.88 852.323,1206.97 852.91,1207.14 853.496,1205.9 854.083,1204.68 854.669,1206.28 855.255,1206.32 855.842,1207.92 856.428,1209.53 857.015,1212.39 857.601,1213.73 858.187,1213.19 858.774,1214.29 859.36,1214.09 859.947,1214.99 860.533,1214.26 861.119,1212.48 861.706,1208.18 862.292,1207.97 862.879,1209.33 863.465,1207.54 864.052,1207.46 864.638,1207.57 865.224,1208.87 865.811,1208.84 866.397,1208.65 866.984,1208.48 867.57,1208.26 868.156,1208.37 868.743,1206.69 869.329,1203.67 869.916,1206.82 870.502,1208.48 871.089,1208.39 871.675,1211.02 872.261,1210.86 872.848,1210.55 873.434,1210.32 874.021,1210.22 874.607,1208.71 875.193,1208.82 875.78,1210.28 876.366,1211.63 876.953,1213.18 877.539,1214.24 878.125,1214.01 878.712,1215.34 879.298,1216.48 879.885,1215.83 880.471,1211.33 881.058,1211.12 881.644,1211.02 882.23,1209.45 882.817,1209.41 883.403,1210.83 883.99,1213.36 884.576,1212.84 885.162,1209.84 885.749,1207.04 886.335,1206.98 886.922,1204.24 887.508,1203.26 888.094,1203.6 888.681,1205.39 889.267,1206.73 889.854,1206.91 890.44,1209.62 891.027,1212.37 891.613,1210.44 892.199,1210.39 892.786,1210.31 893.372,1211.49 893.959,1212.42 894.545,1213.27 895.131,1210.36 895.718,1210.11 896.304,1211.56 896.891,1212.64 897.477,1213.86 898.063,1210.76 898.65,1207.89 899.236,1206.22 899.823,1206.48 900.409,1206.73 900.996,1204.07 901.582,1205.57 902.168,1205.52 902.755,1206.97 903.341,1206.99 903.928,1206.7 904.514,1205.35 905.1,1209.94 905.687,1211.58 906.273,1211.43 906.86,1212.61 907.446,1211.01 908.032,1213.59 908.619,1213.12 909.205,1210.27 909.792,1210.11 910.378,1211.25 910.965,1208.18 911.551,1211.12 912.137,1208.36 912.724,1206.83 913.31,1208.34 913.897,1209.62 914.483,1212.26 915.069,1211.86 915.656,1211.6 916.242,1212.54 916.829,1212.32 917.415,1211.95 918.002,1210.09 918.588,1209.99 919.174,1207.01 919.761,1205.78 920.347,1204.52 920.934,1207.84 921.52,1206.23 922.106,1209 922.693,1208.83 923.279,1207.05 923.866,1207.04 924.452,1207.05 925.038,1209.69 925.625,1209.37 926.211,1211.86 926.798,1210.2 927.384,1209.88 927.971,1208.14 928.557,1209.61 929.143,1210.86 929.73,1208.16 930.316,1210.95 930.903,1212.14 931.489,1210.55 932.075,1210.32 932.662,1207.33 933.248,1205.99 933.835,1207.55 934.421,1207.26 935.007,1207.39 935.594,1208.64 936.18,1208.63 936.767,1209.97 937.353,1209.91 937.94,1209.91 938.526,1209.6 939.112,1211.27 939.699,1210.88 940.285,1209.06 940.872,1211.92 941.458,1210.11 942.044,1208.15 942.631,1209.37 943.217,1207.95 943.804,1210.65 944.39,1209.51 944.976,1209.34 945.563,1209.07 946.149,1206.04 946.736,1207.66 947.322,1211.8 947.909,1208.62 948.495,1208.42 949.081,1206.82 949.668,1207.11 950.254,1209.06 950.841,1210.52 951.427,1210.54 952.013,1210.69 952.6,1213.16 953.186,1211.56 953.773,1210.16 954.359,1208.53 954.945,1208.37 955.532,1208.14 956.118,1206.58 956.705,1205.43 957.291,1205.45 957.878,1205.79 958.464,1204.91 959.05,1208.09 959.637,1208.1 960.223,1209.47 960.81,1212.41 961.396,1214.79 961.982,1212.85 962.569,1212.41 963.155,1212.16 963.742,1211.67 964.328,1211.46 964.915,1211.21 965.501,1209.55 966.087,1206.37 966.674,1204.72 967.26,1203.38 967.847,1204.9 968.433,1205.12 969.019,1203.9 969.606,1205.32 970.192,1205.37 970.779,1204.05 971.365,1204.34 971.951,1203 972.538,1201.73 973.124,1203.38 973.711,1203.51 974.297,1205.03 974.884,1205.42 975.47,1208.32 976.056,1209.67 976.643,1209.87 977.229,1211.29 977.816,1209.63 978.402,1206.39 978.988,1206.2 979.575,1206.26 980.161,1210.86 980.748,1208.13 981.334,1208.09 981.92,1208.01 982.507,1207.73 983.093,1207.4 983.68,1208.95 984.266,1211.87 984.853,1211.4 985.439,1209.75 986.025,1209.7 986.612,1212.17 987.198,1212.38 987.785,1212.35 988.371,1212.28 988.957,1211.88 989.544,1214.54 990.13,1212.63 990.717,1210.93 991.303,1212.35 991.889,1212.34 992.476,1213.42 993.062,1214.3 993.649,1210.04 994.235,1209.83 994.822,1209.63 995.408,1206.41 995.994,1207.81 996.581,1209.38 997.167,1207.57 997.754,1208.72 998.34,1207.39 998.926,1204.27 999.513,1204.39 1000.1,1201.75 1000.69,1203.85 1001.27,1204.31 1001.86,1205.94 1002.44,1206.35 1003.03,1203.56 1003.62,1205.45 1004.2,1202.84 1004.79,1201.99 1005.38,1202.42 1005.96,1198.45 1006.55,1200.6 1007.14,1202.45 1007.72,1201.28 1008.31,1200.23 1008.9,1202.05 1009.48,1203.76 1010.07,1205.65 1010.65,1205.74 1011.24,1202.74 1011.83,1204.64 1012.41,1207.93 1013,1209.47 1013.59,1209.57 1014.17,1208.63 1014.76,1208.76 1015.35,1205.6 1015.93,1207.16 1016.52,1208.96 1017.11,1204.65 1017.69,1205.04 1018.28,1208.07 1018.86,1206.95 1019.45,1206.87 1020.04,1205.23 1020.62,1207.08 1021.21,1204.09 1021.8,1202.8 1022.38,1205.85 1022.97,1205.89 1023.56,1206.14 1024.14,1203.4 1024.73,1204.97 1025.32,1202.26 1025.9,1203.93 1026.49,1204.24 1027.07,1206.21 1027.66,1209.29 1028.25,1212.09 1028.83,1213.35 1029.42,1214.69 1030.01,1215.54 1030.59,1212.5 1031.18,1212.19 1031.77,1212.1 1032.35,1213.2 1032.94,1211.27 1033.52,1212.58 1034.11,1212.46 1034.7,1212.22 1035.28,1214.78 1035.87,1215.67 1036.46,1215.17 1037.04,1214.59 1037.63,1215.93 1038.22,1215.91 1038.8,1212.37 1039.39,1213.63 1039.98,1211.68 1040.56,1209.82 1041.15,1210.04 1041.73,1211.69 1042.32,1211.33 1042.91,1209.65 1043.49,1208.09 1044.08,1207.95 1044.67,1207.75 1045.25,1206.34 1045.84,1205.09 1046.43,1205.44 1047.01,1204.27 1047.6,1203.09 1048.19,1203.34 1048.77,1202.2 1049.36,1202.44 1049.94,1201.32 1050.53,1204.47 1051.12,1203.24 1051.7,1204.63 1052.29,1210.33 1052.88,1207.06 1053.46,1205.54 1054.05,1205.42 1054.64,1204.21 1055.22,1204.42 1055.81,1206.07 1056.39,1207.57 1056.98,1206.09 1057.57,1204.92 1058.15,1208.02 1058.74,1204.86 1059.33,1204.89 1059.91,1203.47 1060.5,1203.57 1061.09,1205.09 1061.67,1205.29 1062.26,1205.35 1062.85,1209.64 1063.43,1208.28 1064.02,1206.92 1064.6,1209.66 1065.19,1212.42 1065.78,1214.82 1066.36,1213.17 1066.95,1214.2 1067.54,1213.64 1068.12,1211.89 1068.71,1211.7 1069.3,1211.69 1069.88,1211.77 1070.47,1211.58 1071.06,1212.76 1071.64,1209.32 1072.23,1206.46 1072.81,1202.2 1073.4,1201.02 1073.99,1201.31 1074.57,1201.96 1075.16,1202.42 1075.75,1200.97 1076.33,1202.65 1076.92,1202.7 1077.51,1203.31 1078.09,1203.65 1078.68,1201.18 1079.26,1204.43 1079.85,1207.42 1080.44,1207.63 1081.02,1204.45 1081.61,1207.24 1082.2,1208.64 1082.78,1208.54 1083.37,1211.41 1083.96,1212.53 1084.54,1210.97 1085.13,1210.78 1085.72,1210.44 1086.3,1208.72 1086.89,1210 1087.47,1211.14 1088.06,1212.3 1088.65,1209.17 1089.23,1207.66 1089.82,1210.49 1090.41,1206.46 1090.99,1208.07 1091.58,1206.41 1092.17,1203.61 1092.75,1206.43 1093.34,1206.45 1093.93,1205.13 1094.51,1205.54 1095.1,1207.26 1095.68,1207.48 1096.27,1206.07 1096.86,1207.55 1097.44,1206.16 1098.03,1207.39 1098.62,1205.94 1099.2,1206.05 1099.79,1206.16 1100.38,1207.48 1100.96,1207.57 1101.55,1209.15 1102.14,1209.17 1102.72,1207.61 1103.31,1207.64 1103.89,1206.2 1104.48,1207.75 1105.07,1207.68 1105.65,1205.21 1106.24,1207.92 1106.83,1210.78 1107.41,1212.06 1108,1211.85 1108.59,1210.04 1109.17,1211.37 1109.76,1209.82 1110.34,1208.48 1110.93,1207.28 1111.52,1204.32 1112.1,1205.87 1112.69,1207.04 1113.28,1207.11 1113.86,1207.36 1114.45,1207.33 1115.04,1209.17 1115.62,1209.32 1116.21,1208.94 1116.8,1208.85 1117.38,1206 1117.97,1204.94 1118.55,1206.41 1119.14,1207.82 1119.73,1206.4 1120.31,1206.32 1120.9,1206.45 1121.49,1206.35 1122.07,1206.4 1122.66,1205.14 1123.25,1204.07 1123.83,1201.76 1124.42,1200.42 1125.01,1203.76 1125.59,1202.42 1126.18,1202.8 1126.76,1201.38 1127.35,1201.33 1127.94,1204.62 1128.52,1211.45 1129.11,1211.31 1129.7,1211.23 1130.28,1208.26 1130.87,1209.58 1131.46,1212.27 1132.04,1216.23 1132.63,1216.88 1133.21,1217.68 1133.8,1217.1 1134.39,1213.93 1134.97,1213.36 1135.56,1210.52 1136.15,1208.79 1136.73,1208.89 1137.32,1207.3 1137.91,1207.01 1138.49,1206.78 1139.08,1205.59 1139.67,1205.64 1140.25,1201.48 1140.84,1204.44 1141.42,1203.16 1142.01,1204.8 1142.6,1203.36 1143.18,1203.34 1143.77,1206.35 1144.36,1209.16 1144.94,1208.74 1145.53,1210.15 1146.12,1211.57 1146.7,1208.54 1147.29,1208.37 1147.88,1211.22 1148.46,1210.98 1149.05,1212.15 1149.63,1212.16 1150.22,1210.64 1150.81,1208.9 1151.39,1207.51 1151.98,1204.8 1152.57,1203.39 1153.15,1202.16 1153.74,1205.51 1154.33,1205.08 1154.91,1204.93 1155.5,1206.59 1156.09,1206.69 1156.67,1207.92 1157.26,1206.42 1157.84,1209.14 1158.43,1211.83 1159.02,1208.74 1159.6,1209.89 1160.19,1208.41 1160.78,1205.72 1161.36,1207.24 1161.95,1202.94 1162.54,1201.51 1163.12,1197.51 1163.71,1202.38 1164.29,1202.81 1164.88,1203.31 1165.47,1206.6 1166.05,1205.09 1166.64,1205.22 1167.23,1204.08 1167.81,1205.72 1168.4,1207.2 1168.99,1207.44 1169.57,1209.9 1170.16,1209.44 1170.75,1209.21 1171.33,1210.36 1171.92,1211.44 1172.5,1212.6 1173.09,1215.31 1173.68,1216.58 1174.26,1216.34 1174.85,1212.84 1175.44,1214.2 1176.02,1212.3 1176.61,1216.36 1177.2,1215.74 1177.78,1215.61 1178.37,1215.17 1178.96,1214.76 1179.54,1214.29 1180.13,1213.73 1180.71,1217.61 1181.3,1214.2 1181.89,1216.47 1182.47,1214.41 1183.06,1213.85 1183.65,1214.47 1184.23,1213.63 1184.82,1215.97 1185.41,1215.73 1185.99,1215.16 1186.58,1213.21 1187.16,1216.92 1187.75,1216.17 1188.34,1217.03 1188.92,1212.08 1189.51,1207.74 1190.1,1210.62 1190.68,1210.28 1191.27,1207.19 1191.86,1205.85 1192.44,1202.97 1193.03,1204.53 1193.62,1206.1 1194.2,1204.53 1194.79,1204.76 1195.37,1207.73 1195.96,1209.14 1196.55,1210.43 1197.13,1210.5 1197.72,1207.64 1198.31,1205.82 1198.89,1205.89 1199.48,1204.6 1200.07,1200.54 1200.65,1203.79 1201.24,1203.75 1201.83,1204.1 1202.41,1204.42 1203,1204.36 1203.58,1204.45 1204.17,1206.15 1204.76,1204.59 1205.34,1204.77 1205.93,1204.86 1206.52,1206.42 1207.1,1207.92 1207.69,1207.74 1208.28,1209.26 1208.86,1210.68 1209.45,1210.53 1210.03,1210.39 1210.62,1208.73 1211.21,1208.16 1211.79,1208.1 1212.38,1206.55 1212.97,1206.6 1213.55,1206.5 1214.14,1206.85 1214.73,1208.23 1215.31,1208.38 1215.9,1213.9 1216.49,1214.85 1217.07,1214.25 1217.66,1212.44 1218.24,1213.54 1218.83,1211.93 1219.42,1208.67 1220,1208.47 1220.59,1203.86 1221.18,1204.16 1221.76,1205.7 1222.35,1204.11 1222.94,1204.11 1223.52,1202.87 1224.11,1203.2 1224.7,1203.26 1225.28,1206.36 1225.87,1204.89 1226.45,1206.46 1227.04,1206.35 1227.63,1204.71 1228.21,1204.44 1228.8,1204.68 1229.39,1206.36 1229.97,1206.38 1230.56,1207.89 1231.15,1210.75 1231.73,1211.98 1232.32,1213.42 1232.91,1210.63 1233.49,1203.25 1234.08,1199.22 1234.66,1199.76 1235.25,1200.14 1235.84,1198.96 1236.42,1199.7 1237.01,1198.4 1237.6,1197.45 1238.18,1200.76 1238.77,1202.67 1239.36,1198.58 1239.94,1199.2 1240.53,1199.58 1241.11,1199.97 1241.7,1200.49 1242.29,1202.11 1242.87,1203.61 1243.46,1203.59 1244.05,1209.37 1244.63,1208.01 1245.22,1209.46 1245.81,1210.67 1246.39,1211.85 1246.98,1210.11 1247.57,1211.2 1248.15,1211.08 1248.74,1209.53 1249.32,1208.08 1249.91,1207.88 1250.5,1207.84 1251.08,1209.29 1251.67,1209.42 1252.26,1209.35 1252.84,1206.34 1253.43,1203.51 1254.02,1203.54 1254.6,1200.79 1255.19,1199.91 1255.78,1201.89 1256.36,1201.76 1256.95,1199.33 1257.53,1198.42 1258.12,1197.55 1258.71,1199.33 1259.29,1201.23 1259.88,1201.6 1260.47,1199.21 1261.05,1199.5 1261.64,1196.77 1262.23,1197.42 1262.81,1197.91 1263.4,1194.1 1263.98,1193.23 1264.57,1196.87 1265.16,1197.69 1265.74,1197.98 1266.33,1199.73 1266.92,1203.25 1267.5,1204.94 1268.09,1203.64 1268.68,1204.03 1269.26,1205.92 1269.85,1208.68 1270.44,1208.67 1271.02,1212.62 1271.61,1212.27 1272.19,1210.63 1272.78,1210.64 1273.37,1213.34 1273.95,1211.5 1274.54,1209.63 1275.13,1213.75 1275.71,1213.51 1276.3,1211.46 1276.89,1208.63 1277.47,1207.2 1278.06,1207.36 1278.65,1207.67 1279.23,1207.67 1279.82,1206.35 1280.4,1208.25 1280.99,1210.99 1281.58,1211.02 1282.16,1211.88 1282.75,1211.83 1283.34,1207.35 1283.92,1207.08 1284.51,1206.83 1285.1,1203.83 1285.68,1205.53 1286.27,1204.31 1286.86,1206.04 1287.44,1205.97 1288.03,1204.61 1288.61,1207.56 1289.2,1207.67 1289.79,1206.05 1290.37,1207.5 1290.96,1205.97 1291.55,1204.71 1292.13,1206.49 1292.72,1203.9 1293.31,1202.56 1293.89,1199.91 1294.48,1201.77 1295.06,1200.52 1295.65,1201.03 1296.24,1201.47 1296.82,1200.46 1297.41,1201.02 1298,1200.19 1298.58,1200.66 1299.17,1201.01 1299.76,1201.57 1300.34,1203.3 1300.93,1203.35 1301.52,1204.98 1302.1,1203.51 1302.69,1204.02 1303.27,1205.63 1303.86,1208.55 1304.45,1209.76 1305.03,1209.63 1305.62,1209.6 1306.21,1209.38 1306.79,1209.2 1307.38,1213.35 1307.97,1210.34 1308.55,1212.89 1309.14,1212.33 1309.73,1212.12 1310.31,1210.83 1310.9,1211.99 1311.48,1209.1 1312.07,1207.58 1312.66,1208.9 1313.24,1208.6 1313.83,1208.55 1314.42,1209.86 1315,1205.26 1315.59,1205.47 1316.18,1204.26 1316.76,1204.42 1317.35,1207.44 1317.93,1210.06 1318.52,1210.09 1319.11,1207.03 1319.69,1207.04 1320.28,1205.77 1320.87,1204.44 1321.45,1207.55 1322.04,1207.5 1322.63,1208.96 1323.21,1211.65 1323.8,1214.18 1324.39,1212.48 1324.97,1212.17 1325.56,1213.25 1326.14,1214 1326.73,1216.48 1327.32,1216.09 1327.9,1212.78 1328.49,1208.14 1329.08,1208.04 1329.66,1209.55 1330.25,1209.29 1330.84,1207.94 1331.42,1207.71 1332.01,1206.05 1332.6,1207.46 1333.18,1207.45 1333.77,1205.85 1334.35,1205.99 1334.94,1204.2 1335.53,1207.09 1336.11,1205.61 1336.7,1205.58 1337.29,1208.53 1337.87,1209.74 1338.46,1207.88 1339.05,1210.62 1339.63,1210.26 1340.22,1210.02 1340.8,1208.26 1341.39,1209.62 1341.98,1208.25 1342.56,1208.28 1343.15,1205.38 1343.74,1204.04 1344.32,1205.65 1344.91,1209.75 1345.5,1208.18 1346.08,1208.46 1346.67,1208.33 1347.26,1208.04 1347.84,1207.86 1348.43,1204.87 1349.01,1203.62 1349.6,1205.44 1350.19,1205.39 1350.77,1205.31 1351.36,1202.41 1351.95,1204.2 1352.53,1205.79 1353.12,1204.29 1353.71,1202.68 1354.29,1203.23 1354.88,1203.53 1355.47,1205.26 1356.05,1206.71 1356.64,1206.78 1357.22,1208.09 1357.81,1205.39 1358.4,1205.6 1358.98,1206.95 1359.57,1209.36 1360.16,1213.55 1360.74,1210.2 1361.33,1208.41 1361.92,1208.25 1362.5,1209.22 1363.09,1210.85 1363.68,1213.36 1364.26,1211.71 1364.85,1213.05 1365.43,1210.99 1366.02,1210.76 1366.61,1210.58 1367.19,1208.97 1367.78,1205.81 1368.37,1205.83 1368.95,1200.12 1369.54,1198.9 1370.13,1200.85 1370.71,1200.92 1371.3,1202.59 1371.88,1203.21 1372.47,1200.79 1373.06,1202.23 1373.64,1203.72 1374.23,1202.52 1374.82,1201.41 1375.4,1200.56 1375.99,1201.05 1376.58,1198.49 1377.16,1197.49 1377.75,1199.29 1378.34,1199.45 1378.92,1201.26 1379.51,1200.37 1380.09,1203.69 1380.68,1203.67 1381.27,1203.81 1381.85,1205.38 1382.44,1205.23 1383.03,1208.07 1383.61,1206.46 1384.2,1208.14 1384.79,1209.57 1385.37,1209.73 1385.96,1209.44 1386.55,1209.6 1387.13,1211.14 1387.72,1210.86 1388.3,1212.31 1388.89,1213.47 1389.48,1215.78 1390.06,1216.4 1390.65,1217.58 1391.24,1215.82 1391.82,1215.38 1392.41,1216.1 1393,1218.73 1393.58,1224.01 1394.17,1220 1394.75,1216.24 1395.34,1218.82 1395.93,1218.31 1396.51,1216.57 1397.1,1212.13 1397.69,1210.26 1398.27,1207.19 1398.86,1207.06 1399.45,1206.7 1400.03,1209.56 1400.62,1209.03 1401.21,1209.02 1401.79,1205.79 1402.38,1204.41 1402.96,1202.88 1403.55,1201.38 1404.14,1202.76 1404.72,1201.55 1405.31,1206.42 1405.9,1203.45 1406.48,1200.58 1407.07,1200.89 1407.66,1201.28 1408.24,1203.22 1408.83,1203.75 1409.42,1203.95 1410,1201.07 1410.59,1201.45 1411.17,1199.19 1411.76,1203.74 1412.35,1202.46 1412.93,1205.92 1413.52,1208.69 1414.11,1211.27 1414.69,1209.4 1415.28,1200.7 1415.87,1199.64 1416.45,1198.38 1417.04,1198.46 1417.63,1200.17 1418.21,1200.2 1418.8,1199.07 1419.38,1202.52 1419.97,1204.19 1420.56,1204.31 1421.14,1204.23 1421.73,1204.18 1422.32,1204.01 1422.9,1207.13 1423.49,1207.35 1424.08,1208.69 1424.66,1207.4 1425.25,1208.89 1425.83,1207.25 1426.42,1206.2 1427.01,1205.22 1427.59,1205.51 1428.18,1207.04 1428.77,1204.26 1429.35,1201.43 1429.94,1204.43 1430.53,1206.05 1431.11,1203.16 1431.7,1198.99 1432.29,1202.3 1432.87,1204.14 1433.46,1206.06 1434.04,1207.34 1434.63,1205.87 1435.22,1205.87 1435.8,1208.92 1436.39,1208.83 1436.98,1208.91 1437.56,1208.55 1438.15,1208.6 1438.74,1213.06 1439.32,1214 1439.91,1213.67 1440.5,1212.42 1441.08,1213.81 1441.67,1215.01 1442.25,1214.56 1442.84,1215.35 1443.43,1213.58 1444.01,1210.34 1444.6,1210.27 1445.19,1210.2 1445.77,1210.03 1446.36,1212.45 1446.95,1216.32 1447.53,1218.58 1448.12,1216.55 1448.7,1214.78 1449.29,1214.25 1449.88,1213.56 1450.46,1211.79 1451.05,1214.36 1451.64,1212.32 1452.22,1213.27 1452.81,1212.95 1453.4,1212.67 1453.98,1212.26 1454.57,1215.01 1455.16,1210.2 1455.74,1208.72 1456.33,1207.24 1456.91,1207.23 1457.5,1211.67 1458.09,1208.73 1458.67,1207.03 1459.26,1209.81 1459.85,1209.6 1460.43,1212.26 1461.02,1212.08 1461.61,1208.56 1462.19,1211.12 1462.78,1208.22 1463.37,1208.04 1463.95,1208.09 1464.54,1206.72 1465.12,1209.6 1465.71,1208.31 1466.3,1206.91 1466.88,1207.09 1467.47,1210.12 1468.06,1210.22 1468.64,1211.39 1469.23,1212.31 1469.82,1212 1470.4,1211.79 1470.99,1211.53 1471.57,1214.08 1472.16,1216.62 1472.75,1217.35 1473.33,1215.06 1473.92,1211.67 1474.51,1211.33 1475.09,1210.71 1475.68,1210.7 1476.27,1212.09 1476.85,1210.56 1477.44,1211.5 1478.03,1209.47 1478.61,1209.39 1479.2,1209.05 1479.78,1210.25 1480.37,1207.49 1480.96,1207.36 1481.54,1205.73 1482.13,1199.85 1482.72,1200.35 1483.3,1202.37 1483.89,1205.4 1484.48,1206.88 1485.06,1208.08 1485.65,1206.69 1486.24,1208.28 1486.82,1205.53 1487.41,1205.56 1487.99,1205.63 1488.58,1201.32 1489.17,1200.18 1489.75,1200.5 1490.34,1200.84 1490.93,1202.29 1491.51,1202.58 1492.1,1202.91 1492.69,1204.8 1493.27,1205.9 1493.86,1204.21 1494.45,1206.91 1495.03,1206.99 1495.62,1205.49 1496.2,1204.26 1496.79,1204.38 1497.38,1204.8 1497.96,1203.52 1498.55,1203.67 1499.14,1199.55 1499.72,1200.09 1500.31,1204.55 1500.9,1207.74 1501.48,1209.44 1502.07,1209.44 1502.65,1209.4 1503.24,1213.67 1503.83,1212.04 1504.41,1210.26 1505,1208.5 1505.59,1207.11 1506.17,1205.58 1506.76,1205.56 1507.35,1204.15 1507.93,1204.2 1508.52,1202.87 1509.11,1200.77 1509.69,1201.02 1510.28,1201.54 1510.86,1199.02 1511.45,1199.29 1512.04,1198.05 1512.62,1198.52 1513.21,1199 1513.8,1200.75 1514.38,1201.11 1514.97,1199.59 1515.56,1199.85 1516.14,1200.16 1516.73,1203.19 1517.32,1202.01 1517.9,1201.14 1518.49,1201.35 1519.07,1201.56 1519.66,1204.3 1520.25,1204.29 1520.83,1201.73 1521.42,1200.82 1522.01,1202.51 1522.59,1201.28 1523.18,1199.98 1523.77,1201.76 1524.35,1197.57 1524.94,1198.12 1525.52,1198.62 1526.11,1197.59 1526.7,1195.17 1527.28,1193 1527.87,1195.04 1528.46,1197.26 1529.04,1198.01 1529.63,1198.41 1530.22,1200.68 1530.8,1198.09 1531.39,1198.48 1531.98,1198.93 1532.56,1202.12 1533.15,1200.99 1533.73,1202.59 1534.32,1203.04 1534.91,1198.7 1535.49,1200.62 1536.08,1196.73 1536.67,1195.91 1537.25,1197.93 1537.84,1198.16 1538.43,1198.56 1539.01,1200.72 1539.6,1204.05 1540.19,1202.87 1540.77,1201.71 1541.36,1203.51 1541.94,1202.22 1542.53,1201.41 1543.12,1204.67 1543.7,1203.37 1544.29,1204.7 1544.88,1207.69 1545.46,1207.57 1546.05,1207.76 1546.64,1208.95 1547.22,1208.69 1547.81,1208.48 1548.4,1207.05 1548.98,1207.07 1549.57,1209.96 1550.15,1209.95 1550.74,1208.19 1551.33,1209.27 1551.91,1210.7 1552.5,1207.79 1553.09,1207.79 1553.67,1210.25 1554.26,1210.16 1554.85,1210.13 1555.43,1211.3 1556.02,1209.44 1556.6,1209.53 1557.19,1206.38 1557.78,1206.43 1558.36,1209.4 1558.95,1209.27 1559.54,1209.42 1560.12,1209.34 1560.71,1209.35 1561.3,1210.63 1561.88,1212 1562.47,1210.44 1563.06,1207.28 1563.64,1207.37 1564.23,1210.28 1564.81,1208.5 1565.4,1208.44 1565.99,1208.29 1566.57,1206.58 1567.16,1208.36 1567.75,1208.27 1568.33,1206.48 1568.92,1205.21 1569.51,1203.86 1570.09,1205.21 1570.68,1206.76 1571.27,1208.29 1571.85,1208.18 1572.44,1207.98 1573.02,1206.69 1573.61,1202.28 1574.2,1203.49 1574.78,1205 1575.37,1205.45 1575.96,1205.78 1576.54,1207.32 1577.13,1205.84 1577.72,1204.74 1578.3,1207.58 1578.89,1207.27 1579.47,1207.51 1580.06,1210.09 1580.65,1206.63 1581.23,1204.77 1581.82,1209.28 1582.41,1207.65 1582.99,1210.13 1583.58,1205.94 1584.17,1207.44 1584.75,1210.23 1585.34,1208.73 1585.93,1207.23 1586.51,1208.56 1587.1,1209.54 1587.68,1210.66 1588.27,1213.22 1588.86,1208.74 1589.44,1206.77 1590.03,1209.66 1590.62,1209.45 1591.2,1210.68 1591.79,1210.35 1592.38,1207.36 1592.96,1205.64 1593.55,1203.08 1594.14,1204.73 1594.72,1207.79 1595.31,1205.07 1595.89,1205.27 1596.48,1200.96 1597.07,1202.53 1597.65,1202.56 1598.24,1200.74 1598.83,1203.97 1599.41,1201.27 1600,1204.36 1600.59,1201.54 1601.17,1201.85 1601.76,1202.36 1602.34,1205.54 1602.93,1208.67 1603.52,1210.14 1604.1,1213.1 1604.69,1211.11 1605.28,1212.31 1605.86,1211.95 1606.45,1210.48 1607.04,1210.55 1607.62,1211.44 1608.21,1210.1 1608.8,1208.39 1609.38,1208.2 1609.97,1206.53 1610.55,1206.42 1611.14,1205.29 1611.73,1206.92 1612.31,1207.01 1612.9,1202.71 1613.49,1205.84 1614.07,1206 1614.66,1205.97 1615.25,1205.79 1615.83,1204.34 1616.42,1201.32 1617.01,1200.05 1617.59,1200.39 1618.18,1197.77 1618.76,1199.54 1619.35,1198.18 1619.94,1200.09 1620.52,1203.5 1621.11,1207.69 1621.7,1204.86 1622.28,1203.67 1622.87,1205.49 1623.46,1204.16 1624.04,1205.87 1624.63,1205.95 1625.22,1208.61 1625.8,1206.89 1626.39,1208.28 1626.97,1210.97 1627.56,1210.76 1628.15,1208.82 1628.73,1208.52 1629.32,1209.76 1629.91,1208.65 1630.49,1208.64 1631.08,1209.93 1631.67,1212.65 1632.25,1210.93 1632.84,1210.24 1633.42,1211.45 1634.01,1213.82 1634.6,1216.32 1635.18,1217.65 1635.77,1216.86 1636.36,1216.24 1636.94,1215.79 1637.53,1215.38 1638.12,1215.08 1638.7,1218.71 1639.29,1218.35 1639.88,1214.72 1640.46,1217.4 1641.05,1214.06 1641.63,1211.96 1642.22,1214.22 1642.81,1213.94 1643.39,1210.54 1643.98,1209.03 1644.57,1211.71 1645.15,1208.43 1645.74,1205.42 1646.33,1205.14 1646.91,1206.57 1647.5,1205.03 1648.09,1203.71 1648.67,1206.83 1649.26,1208.29 1649.84,1210.95 1650.43,1214.95 1651.02,1213.38 1651.6,1213.17 1652.19,1212.72 1652.78,1212.2 1653.36,1211.98 1653.95,1206.13 1654.54,1206.27 1655.12,1205.04 1655.71,1206.61 1656.29,1208.22 1656.88,1206.69 1657.47,1202.33 1658.05,1202.59 1658.64,1206.92 1659.23,1206.64 1659.81,1207.1 1660.4,1205.66 1660.99,1205.46 1661.57,1205.46 1662.16,1202.51 1662.75,1201.41 1663.33,1199.07 1663.92,1201.05 1664.5,1204.14 1665.09,1205.57 1665.68,1205.98 1666.26,1204.81 1666.85,1203.47 1667.44,1203.8 1668.02,1202.25 1668.61,1197.8 1669.2,1199.66 1669.78,1200.53 1670.37,1202.56 1670.96,1197.1 1671.54,1194.7 1672.13,1191.19 1672.71,1192.01 1673.3,1194.54 1673.89,1196.6 1674.47,1197.17 1675.06,1198.87 1675.65,1199.45 1676.23,1201.32 1676.82,1204.39 1677.41,1202.88 1677.99,1203.41 1678.58,1201.08 1679.17,1202.64 1679.75,1205.97 1680.34,1205.8 1680.92,1204.67 1681.51,1203.24 1682.1,1202.99 1682.68,1204.74 1683.27,1206.37 1683.86,1207.4 1684.44,1208.62 1685.03,1206.97 1685.62,1207.16 1686.2,1205.5 1686.79,1204.25 1687.37,1203.81 1687.96,1203.78 1688.55,1204.91 1689.13,1205.1 1689.72,1202.44 1690.31,1202.5 1690.89,1199.63 1691.48,1199.69 1692.07,1201.27 1692.65,1198.87 1693.24,1200.79 1693.83,1202.62 1694.41,1204.6 1695,1203.22 1695.58,1200.98 1696.17,1201.42 1696.76,1200.4 1697.34,1204.04 1697.93,1205.37 1698.52,1203.94 1699.1,1203.96 1699.69,1204.42 1700.28,1206.33 1700.86,1206.19 1701.45,1207.56 1702.04,1210.51 1702.62,1211.88 1703.21,1205.8 1703.79,1207.15 1704.38,1206.91 1704.97,1208.4 1705.55,1209.57 1706.14,1213.67 1706.73,1213.36 1707.31,1214.04 1707.9,1216.93 1708.49,1219.19 1709.07,1216.91 1709.66,1216.39 1710.24,1214.61 1710.83,1211.15 1711.42,1209.59 1712,1209.34 1712.59,1210.69 1713.18,1211.62 1713.76,1209.88 1714.35,1211.17 1714.94,1210.57 1715.52,1214.42 1716.11,1215.41 1716.7,1213.16 1717.28,1208.47 1717.87,1208.35 1718.45,1210.97 1719.04,1211.99 1719.63,1211.73 1720.21,1211.37 1720.8,1208.18 1721.39,1209.85 1721.97,1210.98 1722.56,1209.11 1723.15,1210.53 1723.73,1213.19 1724.32,1214.13 1724.91,1212.18 1725.49,1212.14 1726.08,1213.24 1726.66,1211.46 1727.25,1211.4 1727.84,1209.87 1728.42,1209.65 1729.01,1206.54 1729.6,1206.26 1730.18,1204.66 1730.77,1205 1731.36,1205.21 1731.94,1204.25 1732.53,1205.86 1733.11,1204.54 1733.7,1204.73 1734.29,1204.64 1734.87,1206.2 1735.46,1208 1736.05,1205.18 1736.63,1201.08 1737.22,1198.65 1737.81,1199.36 1738.39,1198.41 1738.98,1198.35 1739.57,1198.86 1740.15,1200.87 1740.74,1199.62 1741.32,1202.87 1741.91,1204.28 1742.5,1204.41 1743.08,1204.43 1743.67,1204.87 1744.26,1201.98 1744.84,1203.52 1745.43,1203.59 1746.02,1205.28 1746.6,1205.45 1747.19,1204.31 1747.78,1204.34 1748.36,1206.09 1748.95,1206.08 1749.53,1207.46 1750.12,1205.83 1750.71,1204.69 1751.29,1205.98 1751.88,1204.63 1752.47,1205.99 1753.05,1207.74 1753.64,1208.74 1754.23,1211.58 1754.81,1212.84 1755.4,1210.98 1755.99,1212.53 1756.57,1212.23 1757.16,1210.43 1757.74,1208.79 1758.33,1207.55 1758.92,1206.11 1759.5,1207.83 1760.09,1206.46 1760.68,1205.29 1761.26,1206.77 1761.85,1206.95 1762.44,1206.86 1763.02,1205.61 1763.61,1201.37 1764.19,1199.07 1764.78,1199.59 1765.37,1200.13 1765.95,1199.38 1766.54,1198.72 1767.13,1197.74 1767.71,1196.7 1768.3,1194.11 1768.89,1196.18 1769.47,1193.66 1770.06,1195.98 1770.65,1199.83 1771.23,1198.84 1771.82,1198.19 1772.4,1201.46 1772.99,1201.71 1773.58,1203.27 1774.16,1205.13 1774.75,1203.98 1775.34,1206.8 1775.92,1204.03 1776.51,1205.76 1777.1,1204.51 1777.68,1206.23 1778.27,1207.7 1778.86,1207.62 1779.44,1209.02 1780.03,1210.24 1780.61,1210.06 1781.2,1208.55 1781.79,1209.92 1782.37,1208.34 1782.96,1211.07 1783.55,1214.94 1784.13,1217.35 1784.72,1217.02 1785.31,1216.59 1785.89,1214.81 1786.48,1216.15 1787.06,1216.84 1787.65,1217.82 1788.24,1214.54 1788.82,1214.08 1789.41,1213.54 1790,1214.66 1790.58,1213.1 1791.17,1212.78 1791.76,1211 1792.34,1209.3 1792.93,1207.89 1793.52,1204.79 1794.1,1204.86 1794.69,1201.83 1795.27,1202.09 1795.86,1200.61 1796.45,1203.77 1797.03,1202.4 1797.62,1201.1 1798.21,1199.87 1798.79,1201.86 1799.38,1200.56 1799.97,1200.79 1800.55,1201.06 1801.14,1201.28 1801.73,1200.22 1802.31,1202.55 1802.9,1207.07 1803.48,1206.77 1804.07,1205.49 1804.66,1206.74 1805.24,1204 1805.83,1202.75 1806.42,1204.26 1807,1204.38 1807.59,1203.06 1808.18,1203.14 1808.76,1203.35 1809.35,1202.06 1809.94,1205 1810.52,1204.96 1811.11,1204.84 1811.69,1204.95 1812.28,1203.78 1812.87,1204.02 1813.45,1202.77 1814.04,1203.06 1814.63,1203.46 1815.21,1200.79 1815.8,1204.14 1816.39,1202.46 1816.97,1205.49 1817.56,1205.81 1818.14,1205.83 1818.73,1203.09 1819.32,1203.32 1819.9,1203.39 1820.49,1202.46 1821.08,1206.7 1821.66,1208.25 1822.25,1207.91 1822.84,1205.94 1823.42,1204.52 1824.01,1204.8 1824.6,1203.32 1825.18,1203.68 1825.77,1203.89 1826.35,1205.56 1826.94,1205.69 1827.53,1207.56 1828.11,1205.92 1828.7,1204.41 1829.29,1204.57 1829.87,1201.63 1830.46,1203.35 1831.05,1203.45 1831.63,1206.61 1832.22,1205.08 1832.81,1204.04 1833.39,1205.24 1833.98,1206.59 1834.56,1207.88 1835.15,1207.71 1835.74,1206.45 1836.32,1204.59 1836.91,1208.83 1837.5,1209.99 1838.08,1214.05 1838.67,1212.31 1839.26,1212.59 1839.84,1210.92 1840.43,1210.54 1841.01,1213.11 1841.6,1210.97 1842.19,1209.32 1842.77,1209.42 1843.36,1207.99 1843.95,1206.39 1844.53,1206.54 1845.12,1206.61 1845.71,1206.79 1846.29,1200.96 1846.88,1198.26 1847.47,1197.07 1848.05,1200.19 1848.64,1202 1849.22,1200.62 1849.81,1202.18 1850.4,1202.23 1850.98,1205.22 1851.57,1202.24 1852.16,1208.05 1852.74,1206.41 1853.33,1206.65 1853.92,1204.99 1854.5,1205.29 1855.09,1205.31 1855.68,1202.57 1856.26,1202.78 1856.85,1202.99 1857.43,1204.56 1858.02,1204.55 1858.61,1205.06 1859.19,1204.98 1859.78,1206.33 1860.37,1204.86 1860.95,1203.4 1861.54,1202.44 1862.13,1204.05 1862.71,1203.97 1863.3,1204.07 1863.88,1204.49 1864.47,1206.11 1865.06,1204.37 1865.64,1205.48 1866.23,1207.42 1866.82,1208.72 1867.4,1211.24 1867.99,1211 1868.58,1213.17 1869.16,1214.39 1869.75,1212.69 1870.34,1215.25 1870.92,1216.12 1871.51,1214.33 1872.09,1212.74 1872.68,1214.14 1873.27,1213.74 1873.85,1214.85 1874.44,1215.96 1875.03,1217.22 1875.61,1218.29 1876.2,1217.7 1876.79,1219.99 1877.37,1216.47 1877.96,1216.29 1878.55,1217.46 1879.13,1217.27 1879.72,1216.96 1880.3,1216.27 1880.89,1215.42 1881.48,1213.42 1882.06,1214.59 1882.65,1212.87 1883.24,1215.27 1883.82,1214.72 1884.41,1215.72 1885,1216.54 1885.58,1216.19 1886.17,1215.86 1886.76,1215.44 1887.34,1217.71 1887.93,1218.48 1888.51,1216.42 1889.1,1214.05 1889.69,1213.38 1890.27,1214.37 1890.86,1214.12 1891.45,1214.83 1892.03,1212.96 1892.62,1215.29 1893.21,1211.76 1893.79,1206.02 1894.38,1202.94 1894.96,1201.7 1895.55,1203.45 1896.14,1203.76 1896.72,1205.27 1897.31,1202.19 1897.9,1201.06 1898.48,1200.25 1899.07,1204.97 1899.66,1204.74 1900.24,1205.96 1900.83,1205.91 1901.42,1205.87 1902,1205.79 1902.59,1204.26 1903.17,1204.33 1903.76,1201.96 1904.35,1208.32 1904.93,1209.52 1905.52,1210.78 1906.11,1210.82 1906.69,1209.02 1907.28,1208.94 1907.87,1204.27 1908.45,1204.1 1909.04,1202.79 1909.63,1202.91 1910.21,1201.45 1910.8,1201.86 1911.38,1201.93 1911.97,1201.88 1912.56,1203.55 1913.14,1205.19 1913.73,1205.35 1914.32,1203.74 1914.9,1203.78 1915.49,1201.14 1916.08,1202.75 1916.66,1202.76 1917.25,1197.33 1917.83,1196.32 1918.42,1194.11 1919.01,1194.72 1919.59,1196.78 1920.18,1197.41 1920.77,1198.18 1921.35,1195.65 1921.94,1193.48 1922.53,1194.06 1923.11,1194.8 1923.7,1192.81 1924.29,1194.7 1924.87,1195.31 1925.46,1197.44 1926.04,1199.37 1926.63,1199.88 1927.22,1202.02 1927.8,1202.4 1928.39,1202.94 1928.98,1203.02 1929.56,1204.63 1930.15,1204.94 1930.74,1202.08 1931.32,1202.37 1931.91,1202.78 1932.5,1201.25 1933.08,1202.97 1933.67,1204.5 1934.25,1205.91 1934.84,1204.6 1935.43,1204.65 1936.01,1203.4 1936.6,1200.48 1937.19,1200.74 1937.77,1201.13 1938.36,1200.1 1938.95,1200.78 1939.53,1200.92 1940.12,1201.24 1940.71,1200.05 1941.29,1200.27 1941.88,1200.39 1942.46,1197.71 1943.05,1201.09 1943.64,1201.31 1944.22,1200.25 1944.81,1201.65 1945.4,1201.87 1945.98,1197.6 1946.57,1196.47 1947.16,1195.39 1947.74,1197.32 1948.33,1197.88 1948.91,1199.58 1949.5,1202 1950.09,1203.65 1950.67,1205.2 1951.26,1205.33 1951.85,1206.78 1952.43,1204.27 1953.02,1205.97 1953.61,1204.52 1954.19,1206.21 1954.78,1211.71 1955.37,1211.73 1955.95,1211.33 1956.54,1210.89 1957.12,1210.79 1957.71,1209 1958.3,1210.13 1958.88,1210.3 1959.47,1209 1960.06,1210.21 1960.64,1212.8 1961.23,1212.54 1961.82,1212.56 1962.4,1212.45 1962.99,1212.11 1963.58,1214.69 1964.16,1214.5 1964.75,1214.08 1965.33,1215.21 1965.92,1214.88 1966.51,1217.49 1967.09,1218.12 1967.68,1219.14 1968.27,1216.94 1968.85,1216.58 1969.44,1220.69 1970.03,1219.79 1970.61,1219.37 1971.2,1223.1 1971.78,1219.49 1972.37,1218.8 1972.96,1217.8 1973.54,1214.11 1974.13,1213.46 1974.72,1214.95 1975.3,1213.1 1975.89,1211.25 1976.48,1212.51 1977.06,1213.39 1977.65,1208.62 1978.24,1211.34 1978.82,1209.39 1979.41,1209.08 1979.99,1210.31 1980.58,1210.24 1981.17,1211.5 1981.75,1208.29 1982.34,1208.13 1982.93,1210.61 1983.51,1207.61 1984.1,1206.05 1984.69,1207.38 1985.27,1205.72 1985.86,1204.59 1986.45,1204.52 1987.03,1203.25 1987.62,1204.63 1988.2,1204.69 1988.79,1201.8 1989.38,1201.94 1989.96,1205.1 1990.55,1205.18 1991.14,1205.34 1991.72,1209.64 1992.31,1207.78 1992.9,1205.08 1993.48,1206.7 1994.07,1209.77 1994.65,1209.72 1995.24,1209.22 1995.83,1207.73 1996.41,1211.5 1997,1211.18 1997.59,1213.94 1998.17,1212.42 1998.76,1212.32 1999.35,1210.75 1999.93,1211.57 2000.52,1210.24 2001.11,1210.02 2001.69,1210.09 2002.28,1204.1 2002.86,1204.44 2003.45,1206.02 2004.04,1208.93 2004.62,1207.61 2005.21,1208.93 2005.8,1207.18 2006.38,1205.88 2006.97,1207.42 2007.56,1208.54 2008.14,1206.98 2008.73,1203.88 2009.32,1206.9 2009.9,1205.39 2010.49,1206.93 2011.07,1205.83 2011.66,1204.57 2012.25,1206.29 2012.83,1204.84 2013.42,1206.54 2014.01,1203.75 2014.59,1203.79 2015.18,1205.5 2015.77,1205.53 2016.35,1206.89 2016.94,1206.8 2017.53,1205.72 2018.11,1205.73 2018.7,1207.15 2019.28,1206.81 2019.87,1204.08 2020.46,1204.54 2021.04,1203.26 2021.63,1203.4 2022.22,1206.44 2022.8,1206.41 2023.39,1207.74 2023.98,1210.27 2024.56,1210.13 2025.15,1208.91 2025.73,1208.62 2026.32,1207 2026.91,1208.27 2027.49,1210.96 2028.08,1204.94 2028.67,1205.01 2029.25,1205.45 2029.84,1205.41 2030.43,1205.54 2031.01,1207.11 2031.6,1205.74 2032.19,1208.45 2032.77,1205.51 2033.36,1206.78 2033.94,1204.06 2034.53,1203.97 2035.12,1205.62 2035.7,1207.18 2036.29,1210.11 2036.88,1208.49 2037.46,1208.19 2038.05,1205.17 2038.64,1205.09 2039.22,1208.29 2039.81,1202.59 2040.4,1199.93 2040.98,1198.63 2041.57,1201.97 2042.15,1202.23 2042.74,1202.36 2043.33,1202.69 2043.91,1203.95 2044.5,1205.73 2045.09,1205.63 2045.67,1204.04 2046.26,1204.43 2046.85,1201.61 2047.43,1200.63 2048.02,1199.71 2048.6,1202.6 2049.19,1202.65 2049.78,1203.12 2050.36,1203.2 2050.95,1200.71 2051.54,1201.03 2052.12,1201.14 2052.71,1202.72 2053.3,1204.53 2053.88,1205.87 2054.47,1206 2055.06,1210.1 2055.64,1209.92 2056.23,1209.47 2056.81,1208.03 2057.4,1206.55 2057.99,1206.78 2058.57,1208.14 2059.16,1207.77 2059.75,1207.44 2060.33,1208.7 2060.92,1211.42 2061.51,1212.86 2062.09,1212.31 2062.68,1209.29 2063.27,1204.56 2063.85,1204.76 2064.44,1204.89 2065.02,1203.9 2065.61,1205.39 2066.2,1205.68 2066.78,1202.9 2067.37,1208.82 2067.96,1209.78 2068.54,1209.79 2069.13,1210.92 2069.72,1210.85 2070.3,1210.65 2070.89,1210.28 2071.48,1208.54 2072.06,1208.7 2072.65,1209.85 2073.23,1208.15 2073.82,1207.95 2074.41,1209.12 2074.99,1210.44 2075.58,1211.43 2076.17,1211.35 2076.75,1209.5 2077.34,1209.24 2077.93,1207.5 2078.51,1206.05 2079.1,1204.68 2079.68,1200.46 2080.27,1200.62 2080.86,1206.92 2081.44,1207.15 2082.03,1210.05 2082.62,1209.56 2083.2,1209.26 2083.79,1208.85 2084.38,1205.76 2084.96,1207.1 2085.55,1205.72 2086.14,1204.52 2086.72,1200.63 2087.31,1204.1 2087.89,1204.51 2088.48,1206.16 2089.07,1207.33 2089.65,1207.4 2090.24,1210.29 2090.83,1214.25 2091.41,1212.53 2092,1212.42 2092.59,1215.14 2093.17,1213.34 2093.76,1211.74 2094.35,1210.17 2094.93,1208.36 2095.52,1209.77 2096.1,1206.66 2096.69,1206.96 2097.28,1208.58 2097.86,1209.8 2098.45,1207.99 2099.04,1210.86 2099.62,1213.04 2100.21,1212.29 2100.8,1212.08 2101.38,1213.16 2101.97,1215.45 2102.55,1216.67 2103.14,1214.68 2103.73,1211.18 2104.31,1212.5 2104.9,1212.38 2105.49,1212.14 2106.07,1211.76 2106.66,1208.64 2107.25,1205.47 2107.83,1206.72 2108.42,1206.68 2109.01,1205.13 2109.59,1203.88 2110.18,1203.82 2110.76,1203.98 2111.35,1201.2 2111.94,1202.78 2112.52,1204.7 2113.11,1206.3 2113.7,1207.7 2114.28,1207.67 2114.87,1207.28 2115.46,1205.59 2116.04,1208.29 2116.63,1204.04 2117.22,1205.7 2117.8,1205.63 2118.39,1202.86 2118.97,1201.95 2119.56,1200.8 2120.15,1199.91 2120.73,1198.45 2121.32,1200.35 2121.91,1200.42 2122.49,1201.11 2123.08,1201.59 2123.67,1201.95 2124.25,1202.15 2124.84,1202.36 2125.42,1198.19 2126.01,1201.06 2126.6,1202.95 2127.18,1203.24 2127.77,1202.24 2128.36,1202.7 2128.94,1207.27 2129.53,1207.32 2130.12,1206.96 2130.7,1204.1 2131.29,1202.79 2131.88,1204.37 2132.46,1203.11 2133.05,1204.63 2133.63,1204.83 2134.22,1204.79 2134.81,1203.57 2135.39,1203.72 2135.98,1203.87 2136.57,1202.78 2137.15,1201.53 2137.74,1201.91 2138.33,1203.55 2138.91,1203.55 2139.5,1205.33 2140.09,1206.56 2140.67,1202.22 2141.26,1200.69 2141.84,1198.28 2142.43,1197.47 2143.02,1203.83 2143.6,1201.43 2144.19,1201.65 2144.78,1202.14 2145.36,1202.56 2145.95,1205.75 2146.54,1203.16 2147.12,1202.13 2147.71,1202.19 2148.3,1199.8 2148.88,1200 2149.47,1201.81 2150.05,1199.43 2150.64,1199.97 2151.23,1200.5 2151.81,1200.59 2152.4,1199.39 2152.99,1201.61 2153.57,1200.46 2154.16,1197.9 2154.75,1198.5 2155.33,1198.76 2155.92,1196.52 2156.5,1196.53 2157.09,1196.98 2157.68,1197.44 2158.26,1195.34 \"/>\n<path clip-path=\"url(#clip112)\" d=\"M986.025 1207.18 L986.612 1207.18 L987.198 1207.18 L987.785 1207.18 L988.371 1207.18 L988.957 1207.18 L989.544 1207.18 L990.13 1207.18 L990.717 1207.18 L991.303 1207.18 L991.889 1207.18 L992.476 1207.18 L993.062 1207.18 L993.649 1207.18 L994.235 1207.18 L994.822 1207.18 L995.408 1207.18 L995.994 1207.18 L996.581 1207.18 L997.167 1207.18 L997.754 1207.18 L998.34 1207.18 L998.926 1207.18 L999.513 1207.18 L1000.1 1207.18 L1000.69 1207.18 L1001.27 1207.18 L1001.86 1207.18 L1002.44 1207.18 L1003.03 1207.18 L1003.62 1207.18 L1004.2 1207.18 L1004.79 1207.18 L1005.38 1207.18 L1005.96 1207.18 L1006.55 1207.18 L1007.14 1207.18 L1007.72 1207.18 L1008.31 1207.18 L1008.9 1207.18 L1009.48 1207.18 L1010.07 1207.18 L1010.65 1207.18 L1011.24 1207.18 L1011.83 1207.18 L1012.41 1207.18 L1013 1207.18 L1013.59 1207.18 L1014.17 1207.18 L1014.76 1207.18 L1015.35 1207.18 L1015.93 1207.18 L1016.52 1207.18 L1017.11 1207.18 L1017.69 1207.18 L1018.28 1207.18 L1018.86 1207.18 L1019.45 1207.18 L1020.04 1207.18 L1020.62 1207.18 L1021.21 1207.18 L1021.8 1207.18 L1022.38 1207.18 L1022.97 1207.18 L1023.56 1207.18 L1024.14 1207.18 L1024.73 1207.18 L1025.32 1207.18 L1025.9 1207.18 L1026.49 1207.18 L1027.07 1207.18 L1027.66 1207.18 L1028.25 1207.18 L1028.83 1207.18 L1029.42 1207.18 L1030.01 1207.18 L1030.59 1207.18 L1031.18 1207.18 L1031.77 1207.18 L1032.35 1207.18 L1032.94 1207.18 L1033.52 1207.18 L1034.11 1207.18 L1034.7 1207.18 L1035.28 1207.18 L1035.87 1207.18 L1036.46 1207.18 L1037.04 1207.18 L1037.63 1207.18 L1038.22 1207.18 L1038.8 1207.18 L1039.39 1207.18 L1039.98 1207.18 L1040.56 1207.18 L1041.15 1207.18 L1041.73 1207.18 L1042.32 1207.18 L1042.91 1207.18 L1043.49 1207.18 L1044.08 1207.18 L1044.67 1207.18 L1045.25 1207.18 L1045.84 1207.18 L1046.43 1207.18 L1047.01 1207.18 L1047.6 1207.18 L1048.19 1207.18 L1048.77 1207.18 L1049.36 1207.18 L1049.94 1207.18 L1050.53 1207.18 L1051.12 1207.18 L1051.7 1207.18 L1052.29 1207.18 L1052.88 1207.18 L1053.46 1207.18 L1054.05 1207.18 L1054.64 1207.18 L1055.22 1207.18 L1055.81 1207.18 L1056.39 1207.18 L1056.98 1207.18 L1057.57 1207.18 L1058.15 1207.18 L1058.74 1207.18 L1059.33 1207.18 L1059.91 1207.18 L1060.5 1207.18 L1061.09 1207.18 L1061.67 1207.18 L1062.26 1207.18 L1062.85 1207.18 L1063.43 1207.18 L1064.02 1207.18 L1064.6 1207.18 L1065.19 1207.18 L1065.78 1207.18 L1066.36 1207.18 L1066.95 1207.18 L1067.54 1207.18 L1068.12 1207.18 L1068.71 1207.18 L1069.3 1207.18 L1069.88 1207.18 L1070.47 1207.18 L1071.06 1207.18 L1071.64 1207.18 L1072.23 1207.18 L1072.81 1207.18 L1073.4 1207.18 L1073.99 1207.18 L1074.57 1207.18 L1075.16 1207.18 L1075.75 1207.18 L1076.33 1207.18 L1076.92 1207.18 L1077.51 1207.18 L1078.09 1207.18 L1078.68 1207.18 L1079.26 1207.18 L1079.85 1207.18 L1080.44 1207.18 L1081.02 1207.18 L1081.61 1207.18 L1082.2 1207.18 L1082.78 1207.18 L1083.37 1207.18 L1083.96 1207.18 L1084.54 1207.18 L1085.13 1207.18 L1085.72 1207.18 L1086.3 1207.18 L1086.89 1207.18 L1087.47 1207.18 L1088.06 1207.18 L1088.65 1207.18 L1089.23 1207.18 L1089.82 1207.18 L1090.41 1207.18 L1090.99 1207.18 L1091.58 1207.18 L1092.17 1207.18 L1092.75 1207.18 L1093.34 1207.18 L1093.93 1207.18 L1094.51 1207.18 L1095.1 1207.18 L1095.68 1207.18 L1096.27 1207.18 L1096.86 1207.18 L1097.44 1207.18 L1098.03 1207.18 L1098.62 1207.18 L1099.2 1207.18 L1099.79 1207.18 L1100.38 1207.18 L1100.96 1207.18 L1101.55 1207.18 L1102.14 1207.18 L1102.72 1207.18 L1103.31 1207.18 L1103.89 1207.18 L1104.48 1207.18 L1105.07 1207.18 L1105.65 1207.18 L1106.24 1207.18 L1106.83 1207.18 L1107.41 1207.18 L1108 1207.18 L1108.59 1207.18 L1109.17 1207.18 L1109.76 1207.18 L1110.34 1207.18 L1110.93 1207.18 L1111.52 1207.18 L1112.1 1207.18 L1112.69 1207.18 L1113.28 1207.18 L1113.86 1207.18 L1114.45 1207.18 L1115.04 1207.18 L1115.62 1207.18 L1116.21 1207.18 L1116.8 1207.18 L1117.38 1207.18 L1117.97 1207.18 L1118.55 1207.18 L1119.14 1207.18 L1119.73 1207.18 L1120.31 1207.18 L1120.9 1207.18 L1121.49 1207.18 L1122.07 1207.18 L1122.66 1207.18 L1123.25 1207.18 L1123.83 1207.18 L1124.42 1207.18 L1125.01 1207.18 L1125.59 1207.18 L1126.18 1207.18 L1126.76 1207.18 L1127.35 1207.18 L1127.94 1207.18 L1128.52 1207.18 L1129.11 1207.18 L1129.7 1207.18 L1130.28 1207.18 L1130.87 1207.18 L1131.46 1207.18 L1132.04 1207.18 L1132.63 1207.18 L1133.21 1207.18 L1133.8 1207.18 L1134.39 1207.18 L1134.97 1207.18 L1135.56 1207.18 L1136.15 1207.18 L1136.73 1207.18 L1137.32 1207.18 L1137.91 1207.18 L1138.49 1207.18 L1139.08 1207.18 L1139.67 1207.18 L1140.25 1207.18 L1140.84 1207.18 L1141.42 1207.18 L1142.01 1207.18 L1142.6 1207.18 L1143.18 1207.18 L1143.77 1207.18 L1144.36 1207.18 L1144.94 1207.18 L1145.53 1207.18 L1146.12 1207.18 L1146.7 1207.18 L1147.29 1207.18 L1147.88 1207.18 L1148.46 1207.18 L1149.05 1207.18 L1149.63 1207.18 L1150.22 1207.18 L1150.81 1207.18 L1151.39 1207.18 L1151.98 1207.18 L1152.57 1207.18 L1153.15 1207.18 L1153.74 1207.18 L1154.33 1207.18 L1154.91 1207.18 L1155.5 1207.18 L1156.09 1207.18 L1156.67 1207.18 L1157.26 1207.18 L1157.84 1207.18 L1158.43 1207.18 L1159.02 1207.18 L1159.6 1207.18 L1160.19 1207.18 L1160.78 1207.18 L1161.36 1207.18 L1161.95 1207.18 L1162.54 1207.18 L1163.12 1207.18 L1163.71 1207.18 L1164.29 1207.18 L1164.88 1207.18 L1165.47 1207.18 L1166.05 1207.18 L1166.64 1207.18 L1167.23 1207.18 L1167.81 1207.18 L1168.4 1207.18 L1168.99 1207.18 L1169.57 1207.18 L1170.16 1207.18 L1170.75 1207.18 L1171.33 1207.18 L1171.92 1207.18 L1172.5 1207.18 L1173.09 1207.18 L1173.68 1207.18 L1174.26 1207.18 L1174.85 1207.18 L1175.44 1207.18 L1176.02 1207.18 L1176.61 1207.18 L1177.2 1207.18 L1177.78 1207.18 L1178.37 1207.18 L1178.96 1207.18 L1179.54 1207.18 L1180.13 1207.18 L1180.71 1207.18 L1181.3 1207.18 L1181.89 1207.18 L1182.47 1207.18 L1183.06 1207.18 L1183.65 1207.18 L1184.23 1207.18 L1184.82 1207.18 L1185.41 1207.18 L1185.99 1207.18 L1186.58 1207.18 L1187.16 1207.18 L1187.75 1207.18 L1188.34 1207.18 L1188.92 1207.18 L1189.51 1207.18 L1190.1 1207.18 L1190.68 1207.18 L1191.27 1207.18 L1191.86 1207.18 L1192.44 1207.18 L1193.03 1207.18 L1193.62 1207.18 L1194.2 1207.18 L1194.79 1207.18 L1195.37 1207.18 L1195.96 1207.18 L1196.55 1207.18 L1197.13 1207.18 L1197.72 1207.18 L1198.31 1207.18 L1198.89 1207.18 L1199.48 1207.18 L1200.07 1207.18 L1200.65 1207.18 L1201.24 1207.18 L1201.83 1207.18 L1202.41 1207.18 L1203 1207.18 L1203.58 1207.18 L1204.17 1207.18 L1204.76 1207.18 L1205.34 1207.18 L1205.93 1207.18 L1206.52 1207.18 L1207.1 1207.18 L1207.69 1207.18 L1208.28 1207.18 L1208.86 1207.18 L1209.45 1207.18 L1210.03 1207.18 L1210.62 1207.18 L1211.21 1207.18 L1211.79 1207.18 L1212.38 1207.18 L1212.97 1207.18 L1213.55 1207.18 L1214.14 1207.18 L1214.73 1207.18 L1215.31 1207.18 L1215.9 1207.18 L1216.49 1207.18 L1217.07 1207.18 L1217.66 1207.18 L1218.24 1207.18 L1218.83 1207.18 L1219.42 1207.18 L1220 1207.18 L1220.59 1207.18 L1221.18 1207.18 L1221.76 1207.18 L1222.35 1207.18 L1222.94 1207.18 L1223.52 1207.18 L1224.11 1207.18 L1224.7 1207.18 L1225.28 1207.18 L1225.87 1207.18 L1226.45 1207.18 L1227.04 1207.18 L1227.63 1207.18 L1228.21 1207.18 L1228.8 1207.18 L1229.39 1207.18 L1229.97 1207.18 L1230.56 1207.18 L1231.15 1207.18 L1231.73 1207.18 L1232.32 1207.18 L1232.91 1207.18 L1233.49 1207.18 L1234.08 1207.18 L1234.66 1207.18 L1235.25 1207.18 L1235.84 1207.18 L1236.42 1207.18 L1237.01 1207.18 L1237.6 1207.18 L1238.18 1207.18 L1238.77 1207.18 L1239.36 1207.18 L1239.94 1207.18 L1240.53 1207.18 L1241.11 1207.18 L1241.7 1207.18 L1242.29 1207.18 L1242.87 1207.18 L1243.46 1207.18 L1244.05 1207.18 L1244.63 1207.18 L1245.22 1207.18 L1245.81 1207.18 L1246.39 1207.18 L1246.98 1207.18 L1247.57 1207.18 L1248.15 1207.18 L1248.74 1207.18 L1249.32 1207.18 L1249.91 1207.18 L1250.5 1207.18 L1251.08 1207.18 L1251.67 1207.18 L1252.26 1207.18 L1252.84 1207.18 L1253.43 1207.18 L1254.02 1207.18 L1254.6 1207.18 L1255.19 1207.18 L1255.78 1207.18 L1256.36 1207.18 L1256.95 1207.18 L1257.53 1207.18 L1258.12 1207.18 L1258.71 1207.18 L1259.29 1207.18 L1259.88 1207.18 L1260.47 1207.18 L1261.05 1207.18 L1261.64 1207.18 L1262.23 1207.18 L1262.81 1207.18 L1263.4 1207.18 L1263.98 1207.18 L1264.57 1207.18 L1265.16 1207.18 L1265.74 1207.18 L1266.33 1207.18 L1266.92 1207.18 L1267.5 1207.18 L1268.09 1207.18 L1268.68 1207.18 L1269.26 1207.18 L1269.85 1207.18 L1270.44 1207.18 L1271.02 1207.18 L1271.61 1207.18 L1272.19 1207.18 L1272.78 1207.18 L1273.37 1207.18 L1273.95 1207.18 L1274.54 1207.18 L1275.13 1207.18 L1275.71 1207.18 L1276.3 1207.18 L1276.89 1207.18 L1277.47 1207.18 L1278.06 1207.18 L1278.65 1207.18 L1279.23 1207.18 L1279.82 1207.18 L1280.4 1207.18 L1280.99 1207.18 L1281.58 1207.18 L1282.16 1207.18 L1282.75 1207.18 L1283.34 1207.18 L1283.92 1207.18 L1284.51 1207.18 L1285.1 1207.18 L1285.68 1207.18 L1286.27 1207.18 L1286.86 1207.18 L1287.44 1207.18 L1288.03 1207.18 L1288.61 1207.18 L1289.2 1207.18 L1289.79 1207.18 L1290.37 1207.18 L1290.96 1207.18 L1291.55 1207.18 L1292.13 1207.18 L1292.72 1207.18 L1293.31 1207.18 L1293.89 1207.18 L1294.48 1207.18 L1295.06 1207.18 L1295.65 1207.18 L1296.24 1207.18 L1296.82 1207.18 L1297.41 1207.18 L1298 1207.18 L1298.58 1207.18 L1299.17 1207.18 L1299.76 1207.18 L1300.34 1207.18 L1300.93 1207.18 L1301.52 1207.18 L1302.1 1207.18 L1302.69 1207.18 L1303.27 1207.18 L1303.86 1207.18 L1304.45 1207.18 L1305.03 1207.18 L1305.62 1207.18 L1306.21 1207.18 L1306.79 1207.18 L1307.38 1207.18 L1307.97 1207.18 L1308.55 1207.18 L1309.14 1207.18 L1309.73 1207.18 L1310.31 1207.18 L1310.9 1207.18 L1311.48 1207.18 L1312.07 1207.18 L1312.66 1207.18 L1313.24 1207.18 L1313.83 1207.18 L1314.42 1207.18 L1315 1207.18 L1315.59 1207.18 L1316.18 1207.18 L1316.76 1207.18 L1317.35 1207.18 L1317.93 1207.18 L1318.52 1207.18 L1319.11 1207.18 L1319.69 1207.18 L1320.28 1207.18 L1320.87 1207.18 L1321.45 1207.18 L1322.04 1207.18 L1322.63 1207.18 L1323.21 1207.18 L1323.8 1207.18 L1324.39 1207.18 L1324.97 1207.18 L1325.56 1207.18 L1326.14 1207.18 L1326.73 1207.18 L1327.32 1207.18 L1327.9 1207.18 L1328.49 1207.18 L1329.08 1207.18 L1329.66 1207.18 L1330.25 1207.18 L1330.84 1207.18 L1331.42 1207.18 L1332.01 1207.18 L1332.6 1207.18 L1333.18 1207.18 L1333.77 1207.18 L1334.35 1207.18 L1334.94 1207.18 L1335.53 1207.18 L1336.11 1207.18 L1336.7 1207.18 L1337.29 1207.18 L1337.87 1207.18 L1338.46 1207.18 L1339.05 1207.18 L1339.63 1207.18 L1340.22 1207.18 L1340.8 1207.18 L1341.39 1207.18 L1341.98 1207.18 L1342.56 1207.18 L1343.15 1207.18 L1343.74 1207.18 L1344.32 1207.18 L1344.91 1207.18 L1345.5 1207.18 L1346.08 1207.18 L1346.67 1207.18 L1347.26 1207.18 L1347.84 1207.18 L1348.43 1207.18 L1349.01 1207.18 L1349.6 1207.18 L1350.19 1207.18 L1350.77 1207.18 L1351.36 1207.18 L1351.95 1207.18 L1352.53 1207.18 L1353.12 1207.18 L1353.71 1207.18 L1354.29 1207.18 L1354.88 1207.18 L1355.47 1207.18 L1356.05 1207.18 L1356.64 1207.18 L1357.22 1207.18 L1357.81 1207.18 L1358.4 1207.18 L1358.98 1207.18 L1359.57 1207.18 L1360.16 1207.18 L1360.74 1207.18 L1361.33 1207.18 L1361.92 1207.18 L1362.5 1207.18 L1363.09 1207.18 L1363.68 1207.18 L1364.26 1207.18 L1364.85 1207.18 L1365.43 1207.18 L1366.02 1207.18 L1366.61 1207.18 L1367.19 1207.18 L1367.78 1207.18 L1368.37 1207.18 L1368.95 1207.18 L1369.54 1207.18 L1370.13 1207.18 L1370.71 1207.18 L1371.3 1207.18 L1371.88 1207.18 L1372.47 1207.18 L1373.06 1207.18 L1373.64 1207.18 L1374.23 1207.18 L1374.82 1207.18 L1375.4 1207.18 L1375.99 1207.18 L1376.58 1207.18 L1377.16 1207.18 L1377.75 1207.18 L1378.34 1207.18 L1378.92 1207.18 L1379.51 1207.18 L1380.09 1207.18 L1380.68 1207.18 L1381.27 1207.18 L1381.85 1207.18 L1382.44 1207.18 L1383.03 1207.18 L1383.61 1207.18 L1384.2 1207.18 L1384.79 1207.18 L1385.37 1207.18 L1385.96 1207.18 L1386.55 1207.18 L1387.13 1207.18 L1387.72 1207.18 L1388.3 1207.18 L1388.89 1207.18 L1389.48 1207.18 L1390.06 1207.18 L1390.65 1207.18 L1391.24 1207.18 L1391.82 1207.18 L1392.41 1207.18 L1393 1207.18 L1393.58 1207.18 L1394.17 1207.18 L1394.75 1207.18 L1395.34 1207.18 L1395.93 1207.18 L1396.51 1207.18 L1397.1 1207.18 L1397.69 1207.18 L1398.27 1207.18 L1398.86 1207.18 L1399.45 1207.18 L1400.03 1207.18 L1400.62 1207.18 L1401.21 1207.18 L1401.79 1207.18 L1402.38 1207.18 L1402.96 1207.18 L1403.55 1207.18 L1404.14 1207.18 L1404.72 1207.18 L1405.31 1207.18 L1405.9 1207.18 L1406.48 1207.18 L1407.07 1207.18 L1407.66 1207.18 L1408.24 1207.18 L1408.83 1207.18 L1409.42 1207.18 L1410 1207.18 L1410.59 1207.18 L1411.17 1207.18 L1411.76 1207.18 L1412.35 1207.18 L1412.93 1207.18 L1413.52 1207.18 L1414.11 1207.18 L1414.69 1207.18 L1415.28 1207.18 L1415.87 1207.18 L1416.45 1207.18 L1417.04 1207.18 L1417.63 1207.18 L1418.21 1207.18 L1418.8 1207.18 L1419.38 1207.18 L1419.97 1207.18 L1420.56 1207.18 L1421.14 1207.18 L1421.73 1207.18 L1422.32 1207.18 L1422.9 1207.18 L1423.49 1207.18 L1424.08 1207.18 L1424.66 1207.18 L1425.25 1207.18 L1425.83 1207.18 L1426.42 1207.18 L1427.01 1207.18 L1427.59 1207.18 L1428.18 1207.18 L1428.77 1207.18 L1429.35 1207.18 L1429.94 1207.18 L1430.53 1207.18 L1431.11 1207.18 L1431.7 1207.18 L1432.29 1207.18 L1432.87 1207.18 L1433.46 1207.18 L1434.04 1207.18 L1434.63 1207.18 L1435.22 1207.18 L1435.8 1207.18 L1436.39 1207.18 L1436.98 1207.18 L1437.56 1207.18 L1438.15 1207.18 L1438.74 1207.18 L1439.32 1207.18 L1439.91 1207.18 L1440.5 1207.18 L1441.08 1207.18 L1441.67 1207.18 L1442.25 1207.18 L1442.84 1207.18 L1443.43 1207.18 L1444.01 1207.18 L1444.6 1207.18 L1445.19 1207.18 L1445.77 1207.18 L1446.36 1207.18 L1446.95 1207.18 L1447.53 1207.18 L1448.12 1207.18 L1448.7 1207.18 L1449.29 1207.18 L1449.88 1207.18 L1450.46 1207.18 L1451.05 1207.18 L1451.64 1207.18 L1452.22 1207.18 L1452.81 1207.18 L1453.4 1207.18 L1453.98 1207.18 L1454.57 1207.18 L1455.16 1207.18 L1455.74 1207.18 L1456.33 1207.18 L1456.91 1207.18 L1457.5 1207.18 L1458.09 1207.18 L1458.67 1207.18 L1459.26 1207.18 L1459.85 1207.18 L1460.43 1207.18 L1461.02 1207.18 L1461.61 1207.18 L1462.19 1207.18 L1462.78 1207.18 L1463.37 1207.18 L1463.95 1207.18 L1464.54 1207.18 L1465.12 1207.18 L1465.71 1207.18 L1466.3 1207.18 L1466.88 1207.18 L1467.47 1207.18 L1468.06 1207.18 L1468.64 1207.18 L1469.23 1207.18 L1469.82 1207.18 L1470.4 1207.18 L1470.99 1207.18 L1471.57 1207.18 L1472.16 1207.18 L1472.75 1207.18 L1473.33 1207.18 L1473.92 1207.18 L1474.51 1207.18 L1475.09 1207.18 L1475.68 1207.18 L1476.27 1207.18 L1476.85 1207.18 L1477.44 1207.18 L1478.03 1207.18 L1478.61 1207.18 L1479.2 1207.18 L1479.78 1207.18 L1480.37 1207.18 L1480.96 1207.18 L1481.54 1207.18 L1482.13 1207.18 L1482.72 1207.18 L1483.3 1207.18 L1483.89 1207.18 L1484.48 1207.18 L1485.06 1207.18 L1485.65 1207.18 L1486.24 1207.18 L1486.82 1207.18 L1487.41 1207.18 L1487.99 1207.18 L1488.58 1207.18 L1489.17 1207.18 L1489.75 1207.18 L1490.34 1207.18 L1490.93 1207.18 L1491.51 1207.18 L1492.1 1207.18 L1492.69 1207.18 L1493.27 1207.18 L1493.86 1207.18 L1494.45 1207.18 L1495.03 1207.18 L1495.62 1207.18 L1496.2 1207.18 L1496.79 1207.18 L1497.38 1207.18 L1497.96 1207.18 L1498.55 1207.18 L1499.14 1207.18 L1499.72 1207.18 L1500.31 1207.18 L1500.9 1207.18 L1501.48 1207.18 L1502.07 1207.18 L1502.65 1207.18 L1503.24 1207.18 L1503.83 1207.18 L1504.41 1207.18 L1505 1207.18 L1505.59 1207.18 L1506.17 1207.18 L1506.76 1207.18 L1507.35 1207.18 L1507.93 1207.18 L1508.52 1207.18 L1509.11 1207.18 L1509.69 1207.18 L1510.28 1207.18 L1510.86 1207.18 L1511.45 1207.18 L1512.04 1207.18 L1512.62 1207.18 L1513.21 1207.18 L1513.8 1207.18 L1514.38 1207.18 L1514.97 1207.18 L1515.56 1207.18 L1516.14 1207.18 L1516.73 1207.18 L1517.32 1207.18 L1517.9 1207.18 L1518.49 1207.18 L1519.07 1207.18 L1519.66 1207.18 L1520.25 1207.18 L1520.83 1207.18 L1521.42 1207.18 L1522.01 1207.18 L1522.59 1207.18 L1523.18 1207.18 L1523.77 1207.18 L1524.35 1207.18 L1524.94 1207.18 L1525.52 1207.18 L1526.11 1207.18 L1526.7 1207.18 L1527.28 1207.18 L1527.87 1207.18 L1528.46 1207.18 L1529.04 1207.18 L1529.63 1207.18 L1530.22 1207.18 L1530.8 1207.18 L1531.39 1207.18 L1531.98 1207.18 L1532.56 1207.18 L1533.15 1207.18 L1533.73 1207.18 L1534.32 1207.18 L1534.91 1207.18 L1535.49 1207.18 L1536.08 1207.18 L1536.67 1207.18 L1537.25 1207.18 L1537.84 1207.18 L1538.43 1207.18 L1539.01 1207.18 L1539.6 1207.18 L1540.19 1207.18 L1540.77 1207.18 L1541.36 1207.18 L1541.94 1207.18 L1542.53 1207.18 L1543.12 1207.18 L1543.7 1207.18 L1544.29 1207.18 L1544.88 1207.18 L1545.46 1207.18 L1546.05 1207.18 L1546.64 1207.18 L1547.22 1207.18 L1547.81 1207.18 L1548.4 1207.18 L1548.98 1207.18 L1549.57 1207.18 L1550.15 1207.18 L1550.74 1207.18 L1551.33 1207.18 L1551.91 1207.18 L1552.5 1207.18 L1553.09 1207.18 L1553.67 1207.18 L1554.26 1207.18 L1554.85 1207.18 L1555.43 1207.18 L1556.02 1207.18 L1556.6 1207.18 L1557.19 1207.18 L1557.78 1207.18 L1558.36 1207.18 L1558.95 1207.18 L1559.54 1207.18 L1560.12 1207.18 L1560.71 1207.18 L1561.3 1207.18 L1561.88 1207.18 L1562.47 1207.18 L1563.06 1207.18 L1563.64 1207.18 L1564.23 1207.18 L1564.81 1207.18 L1565.4 1207.18 L1565.99 1207.18 L1566.57 1207.18 L1567.16 1207.18 L1567.75 1207.18 L1568.33 1207.18 L1568.92 1207.18 L1569.51 1207.18 L1570.09 1207.18 L1570.68 1207.18 L1571.27 1207.18 L1571.85 1207.18 L1572.44 1207.18 L1573.02 1207.18 L1573.61 1207.18 L1574.2 1207.18 L1574.78 1207.18 L1575.37 1207.18 L1575.96 1207.18 L1576.54 1207.18 L1577.13 1207.18 L1577.72 1207.18 L1578.3 1207.18 L1578.89 1207.18 L1579.47 1207.18 L1580.06 1207.18 L1580.65 1207.18 L1581.23 1207.18 L1581.82 1207.18 L1582.41 1207.18 L1582.99 1207.18 L1583.58 1207.18 L1584.17 1207.18 L1584.75 1207.18 L1585.34 1207.18 L1585.93 1207.18 L1586.51 1207.18 L1587.1 1207.18 L1587.68 1207.18 L1588.27 1207.18 L1588.86 1207.18 L1589.44 1207.18 L1590.03 1207.18 L1590.62 1207.18 L1591.2 1207.18 L1591.79 1207.18 L1592.38 1207.18 L1592.96 1207.18 L1593.55 1207.18 L1594.14 1207.18 L1594.72 1207.18 L1595.31 1207.18 L1595.89 1207.18 L1596.48 1207.18 L1597.07 1207.18 L1597.65 1207.18 L1598.24 1207.18 L1598.83 1207.18 L1599.41 1207.18 L1600 1207.18 L1600.59 1207.18 L1601.17 1207.18 L1601.76 1207.18 L1602.34 1207.18 L1602.93 1207.18 L1603.52 1207.18 L1604.1 1207.18 L1604.69 1207.18 L1605.28 1207.18 L1605.86 1207.18 L1606.45 1207.18 L1607.04 1207.18 L1607.62 1207.18 L1608.21 1207.18 L1608.8 1207.18 L1609.38 1207.18 L1609.97 1207.18 L1610.55 1207.18 L1611.14 1207.18 L1611.73 1207.18 L1612.31 1207.18 L1612.9 1207.18 L1613.49 1207.18 L1614.07 1207.18 L1614.66 1207.18 L1615.25 1207.18 L1615.83 1207.18 L1616.42 1207.18 L1617.01 1207.18 L1617.59 1207.18 L1618.18 1207.18 L1618.76 1207.18 L1619.35 1207.18 L1619.94 1207.18 L1620.52 1207.18 L1621.11 1207.18 L1621.7 1207.18 L1622.28 1207.18 L1622.87 1207.18 L1623.46 1207.18 L1624.04 1207.18 L1624.63 1207.18 L1625.22 1207.18 L1625.8 1207.18 L1626.39 1207.18 L1626.97 1207.18 L1627.56 1207.18 L1628.15 1207.18 L1628.73 1207.18 L1629.32 1207.18 L1629.91 1207.18 L1630.49 1207.18 L1631.08 1207.18 L1631.67 1207.18 L1632.25 1207.18 L1632.84 1207.18 L1633.42 1207.18 L1634.01 1207.18 L1634.6 1207.18 L1635.18 1207.18 L1635.77 1207.18 L1636.36 1207.18 L1636.94 1207.18 L1637.53 1207.18 L1638.12 1207.18 L1638.7 1207.18 L1639.29 1207.18 L1639.88 1207.18 L1640.46 1207.18 L1641.05 1207.18 L1641.63 1207.18 L1642.22 1207.18 L1642.81 1207.18 L1643.39 1207.18 L1643.98 1207.18 L1644.57 1207.18 L1645.15 1207.18 L1645.74 1207.18 L1646.33 1207.18 L1646.91 1207.18 L1647.5 1207.18 L1648.09 1207.18 L1648.67 1207.18 L1649.26 1207.18 L1649.84 1207.18 L1650.43 1207.18 L1651.02 1207.18 L1651.6 1207.18 L1652.19 1207.18 L1652.78 1207.18 L1653.36 1207.18 L1653.95 1207.18 L1654.54 1207.18 L1655.12 1207.18 L1655.71 1207.18 L1656.29 1207.18 L1656.88 1207.18 L1657.47 1207.18 L1658.05 1207.18 L1658.64 1207.18 L1659.23 1207.18 L1659.81 1207.18 L1660.4 1207.18 L1660.99 1207.18 L1661.57 1207.18 L1662.16 1207.18 L1662.75 1207.18 L1663.33 1207.18 L1663.92 1207.18 L1664.5 1207.18 L1665.09 1207.18 L1665.68 1207.18 L1666.26 1207.18 L1666.85 1207.18 L1667.44 1207.18 L1668.02 1207.18 L1668.61 1207.18 L1669.2 1207.18 L1669.78 1207.18 L1670.37 1207.18 L1670.96 1207.18 L1671.54 1207.18 L1672.13 1207.18 L1672.71 1207.18 L1673.3 1207.18 L1673.89 1207.18 L1674.47 1207.18 L1675.06 1207.18 L1675.65 1207.18 L1676.23 1207.18 L1676.82 1207.18 L1677.41 1207.18 L1677.99 1207.18 L1678.58 1207.18 L1679.17 1207.18 L1679.75 1207.18 L1680.34 1207.18 L1680.92 1207.18 L1681.51 1207.18 L1682.1 1207.18 L1682.68 1207.18 L1683.27 1207.18 L1683.86 1207.18 L1684.44 1207.18 L1685.03 1207.18 L1685.62 1207.18 L1686.2 1207.18 L1686.79 1207.18 L1687.37 1207.18 L1687.96 1207.18 L1688.55 1207.18 L1689.13 1207.18 L1689.72 1207.18 L1690.31 1207.18 L1690.89 1207.18 L1691.48 1207.18 L1692.07 1207.18 L1692.65 1207.18 L1693.24 1207.18 L1693.83 1207.18 L1694.41 1207.18 L1695 1207.18 L1695.58 1207.18 L1696.17 1207.18 L1696.76 1207.18 L1697.34 1207.18 L1697.93 1207.18 L1698.52 1207.18 L1699.1 1207.18 L1699.69 1207.18 L1700.28 1207.18 L1700.86 1207.18 L1701.45 1207.18 L1702.04 1207.18 L1702.62 1207.18 L1703.21 1207.18 L1703.79 1207.18 L1704.38 1207.18 L1704.97 1207.18 L1705.55 1207.18 L1706.14 1207.18 L1706.73 1207.18 L1707.31 1207.18 L1707.9 1207.18 L1708.49 1207.18 L1709.07 1207.18 L1709.66 1207.18 L1710.24 1207.18 L1710.83 1207.18 L1711.42 1207.18 L1712 1207.18 L1712.59 1207.18 L1713.18 1207.18 L1713.76 1207.18 L1714.35 1207.18 L1714.94 1207.18 L1715.52 1207.18 L1716.11 1207.18 L1716.7 1207.18 L1717.28 1207.18 L1717.87 1207.18 L1718.45 1207.18 L1719.04 1207.18 L1719.63 1207.18 L1720.21 1207.18 L1720.8 1207.18 L1721.39 1207.18 L1721.97 1207.18 L1722.56 1207.18 L1723.15 1207.18 L1723.73 1207.18 L1724.32 1207.18 L1724.91 1207.18 L1725.49 1207.18 L1726.08 1207.18 L1726.66 1207.18 L1727.25 1207.18 L1727.84 1207.18 L1728.42 1207.18 L1729.01 1207.18 L1729.6 1207.18 L1730.18 1207.18 L1730.77 1207.18 L1731.36 1207.18 L1731.94 1207.18 L1732.53 1207.18 L1733.11 1207.18 L1733.7 1207.18 L1734.29 1207.18 L1734.87 1207.18 L1735.46 1207.18 L1736.05 1207.18 L1736.63 1207.18 L1737.22 1207.18 L1737.81 1207.18 L1738.39 1207.18 L1738.98 1207.18 L1739.57 1207.18 L1740.15 1207.18 L1740.74 1207.18 L1741.32 1207.18 L1741.91 1207.18 L1742.5 1207.18 L1743.08 1207.18 L1743.67 1207.18 L1744.26 1207.18 L1744.84 1207.18 L1745.43 1207.18 L1746.02 1207.18 L1746.6 1207.18 L1747.19 1207.18 L1747.78 1207.18 L1748.36 1207.18 L1748.95 1207.18 L1749.53 1207.18 L1750.12 1207.18 L1750.71 1207.18 L1751.29 1207.18 L1751.88 1207.18 L1752.47 1207.18 L1753.05 1207.18 L1753.64 1207.18 L1754.23 1207.18 L1754.81 1207.18 L1755.4 1207.18 L1755.99 1207.18 L1756.57 1207.18 L1757.16 1207.18 L1757.74 1207.18 L1758.33 1207.18 L1758.92 1207.18 L1759.5 1207.18 L1760.09 1207.18 L1760.68 1207.18 L1761.26 1207.18 L1761.85 1207.18 L1762.44 1207.18 L1763.02 1207.18 L1763.61 1207.18 L1764.19 1207.18 L1764.78 1207.18 L1765.37 1207.18 L1765.95 1207.18 L1766.54 1207.18 L1767.13 1207.18 L1767.71 1207.18 L1768.3 1207.18 L1768.89 1207.18 L1769.47 1207.18 L1770.06 1207.18 L1770.65 1207.18 L1771.23 1207.18 L1771.82 1207.18 L1772.4 1207.18 L1772.99 1207.18 L1773.58 1207.18 L1774.16 1207.18 L1774.75 1207.18 L1775.34 1207.18 L1775.92 1207.18 L1776.51 1207.18 L1777.1 1207.18 L1777.68 1207.18 L1778.27 1207.18 L1778.86 1207.18 L1779.44 1207.18 L1780.03 1207.18 L1780.61 1207.18 L1781.2 1207.18 L1781.79 1207.18 L1782.37 1207.18 L1782.96 1207.18 L1783.55 1207.18 L1784.13 1207.18 L1784.72 1207.18 L1785.31 1207.18 L1785.89 1207.18 L1786.48 1207.18 L1787.06 1207.18 L1787.65 1207.18 L1788.24 1207.18 L1788.82 1207.18 L1789.41 1207.18 L1790 1207.18 L1790.58 1207.18 L1791.17 1207.18 L1791.76 1207.18 L1792.34 1207.18 L1792.93 1207.18 L1793.52 1207.18 L1794.1 1207.18 L1794.69 1207.18 L1795.27 1207.18 L1795.86 1207.18 L1796.45 1207.18 L1797.03 1207.18 L1797.62 1207.18 L1798.21 1207.18 L1798.79 1207.18 L1799.38 1207.18 L1799.97 1207.18 L1800.55 1207.18 L1801.14 1207.18 L1801.73 1207.18 L1802.31 1207.18 L1802.9 1207.18 L1803.48 1207.18 L1804.07 1207.18 L1804.66 1207.18 L1805.24 1207.18 L1805.83 1207.18 L1806.42 1207.18 L1807 1207.18 L1807.59 1207.18 L1808.18 1207.18 L1808.76 1207.18 L1809.35 1207.18 L1809.94 1207.18 L1810.52 1207.18 L1811.11 1207.18 L1811.69 1207.18 L1812.28 1207.18 L1812.87 1207.18 L1813.45 1207.18 L1814.04 1207.18 L1814.63 1207.18 L1815.21 1207.18 L1815.8 1207.18 L1816.39 1207.18 L1816.97 1207.18 L1817.56 1207.18 L1818.14 1207.18 L1818.73 1207.18 L1819.32 1207.18 L1819.9 1207.18 L1820.49 1207.18 L1821.08 1207.18 L1821.66 1207.18 L1822.25 1207.18 L1822.84 1207.18 L1823.42 1207.18 L1824.01 1207.18 L1824.6 1207.18 L1825.18 1207.18 L1825.77 1207.18 L1826.35 1207.18 L1826.94 1207.18 L1827.53 1207.18 L1828.11 1207.18 L1828.7 1207.18 L1829.29 1207.18 L1829.87 1207.18 L1830.46 1207.18 L1831.05 1207.18 L1831.63 1207.18 L1832.22 1207.18 L1832.81 1207.18 L1833.39 1207.18 L1833.98 1207.18 L1834.56 1207.18 L1835.15 1207.18 L1835.74 1207.18 L1836.32 1207.18 L1836.91 1207.18 L1837.5 1207.18 L1838.08 1207.18 L1838.67 1207.18 L1839.26 1207.18 L1839.84 1207.18 L1840.43 1207.18 L1841.01 1207.18 L1841.6 1207.18 L1842.19 1207.18 L1842.77 1207.18 L1843.36 1207.18 L1843.95 1207.18 L1844.53 1207.18 L1845.12 1207.18 L1845.71 1207.18 L1846.29 1207.18 L1846.88 1207.18 L1847.47 1207.18 L1848.05 1207.18 L1848.64 1207.18 L1849.22 1207.18 L1849.81 1207.18 L1850.4 1207.18 L1850.98 1207.18 L1851.57 1207.18 L1852.16 1207.18 L1852.74 1207.18 L1853.33 1207.18 L1853.92 1207.18 L1854.5 1207.18 L1855.09 1207.18 L1855.68 1207.18 L1856.26 1207.18 L1856.85 1207.18 L1857.43 1207.18 L1858.02 1207.18 L1858.61 1207.18 L1859.19 1207.18 L1859.78 1207.18 L1860.37 1207.18 L1860.95 1207.18 L1861.54 1207.18 L1862.13 1207.18 L1862.71 1207.18 L1863.3 1207.18 L1863.88 1207.18 L1864.47 1207.18 L1865.06 1207.18 L1865.64 1207.18 L1866.23 1207.18 L1866.82 1207.18 L1867.4 1207.18 L1867.99 1207.18 L1868.58 1207.18 L1869.16 1207.18 L1869.75 1207.18 L1870.34 1207.18 L1870.92 1207.18 L1871.51 1207.18 L1872.09 1207.18 L1872.68 1207.18 L1873.27 1207.18 L1873.85 1207.18 L1874.44 1207.18 L1875.03 1207.18 L1875.61 1207.18 L1876.2 1207.18 L1876.79 1207.18 L1877.37 1207.18 L1877.96 1207.18 L1878.55 1207.18 L1879.13 1207.18 L1879.72 1207.18 L1880.3 1207.18 L1880.89 1207.18 L1881.48 1207.18 L1882.06 1207.18 L1882.65 1207.18 L1883.24 1207.18 L1883.82 1207.18 L1884.41 1207.18 L1885 1207.18 L1885.58 1207.18 L1886.17 1207.18 L1886.76 1207.18 L1887.34 1207.18 L1887.93 1207.18 L1888.51 1207.18 L1889.1 1207.18 L1889.69 1207.18 L1890.27 1207.18 L1890.86 1207.18 L1891.45 1207.18 L1892.03 1207.18 L1892.62 1207.18 L1893.21 1207.18 L1893.79 1207.18 L1894.38 1207.18 L1894.96 1207.18 L1895.55 1207.18 L1896.14 1207.18 L1896.72 1207.18 L1897.31 1207.18 L1897.9 1207.18 L1898.48 1207.18 L1899.07 1207.18 L1899.66 1207.18 L1900.24 1207.18 L1900.83 1207.18 L1901.42 1207.18 L1902 1207.18 L1902.59 1207.18 L1903.17 1207.18 L1903.76 1207.18 L1904.35 1207.18 L1904.93 1207.18 L1905.52 1207.18 L1906.11 1207.18 L1906.69 1207.18 L1907.28 1207.18 L1907.87 1207.18 L1908.45 1207.18 L1909.04 1207.18 L1909.63 1207.18 L1910.21 1207.18 L1910.8 1207.18 L1911.38 1207.18 L1911.97 1207.18 L1912.56 1207.18 L1913.14 1207.18 L1913.73 1207.18 L1914.32 1207.18 L1914.9 1207.18 L1915.49 1207.18 L1916.08 1207.18 L1916.66 1207.18 L1917.25 1207.18 L1917.83 1207.18 L1918.42 1207.18 L1919.01 1207.18 L1919.59 1207.18 L1920.18 1207.18 L1920.77 1207.18 L1921.35 1207.18 L1921.94 1207.18 L1922.53 1207.18 L1923.11 1207.18 L1923.7 1207.18 L1924.29 1207.18 L1924.87 1207.18 L1925.46 1207.18 L1926.04 1207.18 L1926.63 1207.18 L1927.22 1207.18 L1927.8 1207.18 L1928.39 1207.18 L1928.98 1207.18 L1929.56 1207.18 L1930.15 1207.18 L1930.74 1207.18 L1931.32 1207.18 L1931.91 1207.18 L1932.5 1207.18 L1933.08 1207.18 L1933.67 1207.18 L1934.25 1207.18 L1934.84 1207.18 L1935.43 1207.18 L1936.01 1207.18 L1936.6 1207.18 L1937.19 1207.18 L1937.77 1207.18 L1938.36 1207.18 L1938.95 1207.18 L1939.53 1207.18 L1940.12 1207.18 L1940.71 1207.18 L1941.29 1207.18 L1941.88 1207.18 L1942.46 1207.18 L1943.05 1207.18 L1943.64 1207.18 L1944.22 1207.18 L1944.81 1207.18 L1945.4 1207.18 L1945.98 1207.18 L1946.57 1207.18 L1947.16 1207.18 L1947.74 1207.18 L1948.33 1207.18 L1948.91 1207.18 L1949.5 1207.18 L1950.09 1207.18 L1950.67 1207.18 L1951.26 1207.18 L1951.85 1207.18 L1952.43 1207.18 L1953.02 1207.18 L1953.61 1207.18 L1954.19 1207.18 L1954.78 1207.18 L1955.37 1207.18 L1955.95 1207.18 L1956.54 1207.18 L1957.12 1207.18 L1957.71 1207.18 L1958.3 1207.18 L1958.88 1207.18 L1959.47 1207.18 L1960.06 1207.18 L1960.64 1207.18 L1961.23 1207.18 L1961.82 1207.18 L1962.4 1207.18 L1962.99 1207.18 L1963.58 1207.18 L1964.16 1207.18 L1964.75 1207.18 L1965.33 1207.18 L1965.92 1207.18 L1966.51 1207.18 L1967.09 1207.18 L1967.68 1207.18 L1968.27 1207.18 L1968.85 1207.18 L1969.44 1207.18 L1970.03 1207.18 L1970.61 1207.18 L1971.2 1207.18 L1971.78 1207.18 L1972.37 1207.18 L1972.96 1207.18 L1973.54 1207.18 L1974.13 1207.18 L1974.72 1207.18 L1975.3 1207.18 L1975.89 1207.18 L1976.48 1207.18 L1977.06 1207.18 L1977.65 1207.18 L1978.24 1207.18 L1978.82 1207.18 L1979.41 1207.18 L1979.99 1207.18 L1980.58 1207.18 L1981.17 1207.18 L1981.75 1207.18 L1982.34 1207.18 L1982.93 1207.18 L1983.51 1207.18 L1984.1 1207.18 L1984.69 1207.18 L1985.27 1207.18 L1985.86 1207.18 L1986.45 1207.18 L1987.03 1207.18 L1987.62 1207.18 L1988.2 1207.18 L1988.79 1207.18 L1989.38 1207.18 L1989.96 1207.18 L1990.55 1207.18 L1991.14 1207.18 L1991.72 1207.18 L1992.31 1207.18 L1992.9 1207.18 L1993.48 1207.18 L1994.07 1207.18 L1994.65 1207.18 L1995.24 1207.18 L1995.83 1207.18 L1996.41 1207.18 L1997 1207.18 L1997.59 1207.18 L1998.17 1207.18 L1998.76 1207.18 L1999.35 1207.18 L1999.93 1207.18 L2000.52 1207.18 L2001.11 1207.18 L2001.69 1207.18 L2002.28 1207.18 L2002.86 1207.18 L2003.45 1207.18 L2004.04 1207.18 L2004.62 1207.18 L2005.21 1207.18 L2005.8 1207.18 L2006.38 1207.18 L2006.97 1207.18 L2007.56 1207.18 L2008.14 1207.18 L2008.73 1207.18 L2009.32 1207.18 L2009.9 1207.18 L2010.49 1207.18 L2011.07 1207.18 L2011.66 1207.18 L2012.25 1207.18 L2012.83 1207.18 L2013.42 1207.18 L2014.01 1207.18 L2014.59 1207.18 L2015.18 1207.18 L2015.77 1207.18 L2016.35 1207.18 L2016.94 1207.18 L2017.53 1207.18 L2018.11 1207.18 L2018.7 1207.18 L2019.28 1207.18 L2019.87 1207.18 L2020.46 1207.18 L2021.04 1207.18 L2021.63 1207.18 L2022.22 1207.18 L2022.8 1207.18 L2023.39 1207.18 L2023.98 1207.18 L2024.56 1207.18 L2025.15 1207.18 L2025.73 1207.18 L2026.32 1207.18 L2026.91 1207.18 L2027.49 1207.18 L2028.08 1207.18 L2028.67 1207.18 L2029.25 1207.18 L2029.84 1207.18 L2030.43 1207.18 L2031.01 1207.18 L2031.6 1207.18 L2032.19 1207.18 L2032.77 1207.18 L2033.36 1207.18 L2033.94 1207.18 L2034.53 1207.18 L2035.12 1207.18 L2035.7 1207.18 L2036.29 1207.18 L2036.88 1207.18 L2037.46 1207.18 L2038.05 1207.18 L2038.64 1207.18 L2039.22 1207.18 L2039.81 1207.18 L2040.4 1207.18 L2040.98 1207.18 L2041.57 1207.18 L2042.15 1207.18 L2042.74 1207.18 L2043.33 1207.18 L2043.91 1207.18 L2044.5 1207.18 L2045.09 1207.18 L2045.67 1207.18 L2046.26 1207.18 L2046.85 1207.18 L2047.43 1207.18 L2048.02 1207.18 L2048.6 1207.18 L2049.19 1207.18 L2049.78 1207.18 L2050.36 1207.18 L2050.95 1207.18 L2051.54 1207.18 L2052.12 1207.18 L2052.71 1207.18 L2053.3 1207.18 L2053.88 1207.18 L2054.47 1207.18 L2055.06 1207.18 L2055.64 1207.18 L2056.23 1207.18 L2056.81 1207.18 L2057.4 1207.18 L2057.99 1207.18 L2058.57 1207.18 L2059.16 1207.18 L2059.75 1207.18 L2060.33 1207.18 L2060.92 1207.18 L2061.51 1207.18 L2062.09 1207.18 L2062.68 1207.18 L2063.27 1207.18 L2063.85 1207.18 L2064.44 1207.18 L2065.02 1207.18 L2065.61 1207.18 L2066.2 1207.18 L2066.78 1207.18 L2067.37 1207.18 L2067.96 1207.18 L2068.54 1207.18 L2069.13 1207.18 L2069.72 1207.18 L2070.3 1207.18 L2070.89 1207.18 L2071.48 1207.18 L2072.06 1207.18 L2072.65 1207.18 L2073.23 1207.18 L2073.82 1207.18 L2074.41 1207.18 L2074.99 1207.18 L2075.58 1207.18 L2076.17 1207.18 L2076.75 1207.18 L2077.34 1207.18 L2077.93 1207.18 L2078.51 1207.18 L2079.1 1207.18 L2079.68 1207.18 L2080.27 1207.18 L2080.86 1207.18 L2081.44 1207.18 L2082.03 1207.18 L2082.62 1207.18 L2083.2 1207.18 L2083.79 1207.18 L2084.38 1207.18 L2084.96 1207.18 L2085.55 1207.18 L2086.14 1207.18 L2086.72 1207.18 L2087.31 1207.18 L2087.89 1207.18 L2088.48 1207.18 L2089.07 1207.18 L2089.65 1207.18 L2090.24 1207.18 L2090.83 1207.18 L2091.41 1207.18 L2092 1207.18 L2092.59 1207.18 L2093.17 1207.18 L2093.76 1207.18 L2094.35 1207.18 L2094.93 1207.18 L2095.52 1207.18 L2096.1 1207.18 L2096.69 1207.18 L2097.28 1207.18 L2097.86 1207.18 L2098.45 1207.18 L2099.04 1207.18 L2099.62 1207.18 L2100.21 1207.18 L2100.8 1207.18 L2101.38 1207.18 L2101.97 1207.18 L2102.55 1207.18 L2103.14 1207.18 L2103.73 1207.18 L2104.31 1207.18 L2104.9 1207.18 L2105.49 1207.18 L2106.07 1207.18 L2106.66 1207.18 L2107.25 1207.18 L2107.83 1207.18 L2108.42 1207.18 L2109.01 1207.18 L2109.59 1207.18 L2110.18 1207.18 L2110.76 1207.18 L2111.35 1207.18 L2111.94 1207.18 L2112.52 1207.18 L2113.11 1207.18 L2113.7 1207.18 L2114.28 1207.18 L2114.87 1207.18 L2115.46 1207.18 L2116.04 1207.18 L2116.63 1207.18 L2117.22 1207.18 L2117.8 1207.18 L2118.39 1207.18 L2118.97 1207.18 L2119.56 1207.18 L2120.15 1207.18 L2120.73 1207.18 L2121.32 1207.18 L2121.91 1207.18 L2122.49 1207.18 L2123.08 1207.18 L2123.67 1207.18 L2124.25 1207.18 L2124.84 1207.18 L2125.42 1207.18 L2126.01 1207.18 L2126.6 1207.18 L2127.18 1207.18 L2127.77 1207.18 L2128.36 1207.18 L2128.94 1207.18 L2129.53 1207.18 L2130.12 1207.18 L2130.7 1207.18 L2131.29 1207.18 L2131.88 1207.18 L2132.46 1207.18 L2133.05 1207.18 L2133.63 1207.18 L2134.22 1207.18 L2134.81 1207.18 L2135.39 1207.18 L2135.98 1207.18 L2136.57 1207.18 L2137.15 1207.18 L2137.74 1207.18 L2138.33 1207.18 L2138.91 1207.18 L2139.5 1207.18 L2140.09 1207.18 L2140.67 1207.18 L2141.26 1207.18 L2141.84 1207.18 L2142.43 1207.18 L2143.02 1207.18 L2143.6 1207.18 L2144.19 1207.18 L2144.78 1207.18 L2145.36 1207.18 L2145.95 1207.18 L2146.54 1207.18 L2147.12 1207.18 L2147.71 1207.18 L2148.3 1207.18 L2148.88 1207.18 L2149.47 1207.18 L2150.05 1207.18 L2150.64 1207.18 L2151.23 1207.18 L2151.81 1207.18 L2152.4 1207.18 L2152.99 1207.18 L2153.57 1207.18 L2154.16 1207.18 L2154.75 1207.18 L2155.33 1207.18 L2155.92 1207.18 L2156.5 1207.18 L2157.09 1207.18 L2157.68 1207.18 L2158.26 1207.18 L2158.26 1206.3 L2157.68 1206.3 L2157.09 1206.3 L2156.5 1206.3 L2155.92 1206.3 L2155.33 1206.3 L2154.75 1206.3 L2154.16 1206.3 L2153.57 1206.3 L2152.99 1206.3 L2152.4 1206.3 L2151.81 1206.3 L2151.23 1206.3 L2150.64 1206.3 L2150.05 1206.3 L2149.47 1206.3 L2148.88 1206.3 L2148.3 1206.3 L2147.71 1206.3 L2147.12 1206.3 L2146.54 1206.3 L2145.95 1206.3 L2145.36 1206.3 L2144.78 1206.3 L2144.19 1206.3 L2143.6 1206.3 L2143.02 1206.3 L2142.43 1206.3 L2141.84 1206.3 L2141.26 1206.3 L2140.67 1206.3 L2140.09 1206.3 L2139.5 1206.3 L2138.91 1206.3 L2138.33 1206.3 L2137.74 1206.3 L2137.15 1206.3 L2136.57 1206.3 L2135.98 1206.3 L2135.39 1206.3 L2134.81 1206.3 L2134.22 1206.3 L2133.63 1206.3 L2133.05 1206.3 L2132.46 1206.3 L2131.88 1206.3 L2131.29 1206.3 L2130.7 1206.3 L2130.12 1206.3 L2129.53 1206.3 L2128.94 1206.3 L2128.36 1206.3 L2127.77 1206.3 L2127.18 1206.3 L2126.6 1206.3 L2126.01 1206.3 L2125.42 1206.3 L2124.84 1206.3 L2124.25 1206.3 L2123.67 1206.3 L2123.08 1206.3 L2122.49 1206.3 L2121.91 1206.3 L2121.32 1206.3 L2120.73 1206.3 L2120.15 1206.3 L2119.56 1206.3 L2118.97 1206.3 L2118.39 1206.3 L2117.8 1206.3 L2117.22 1206.3 L2116.63 1206.3 L2116.04 1206.3 L2115.46 1206.3 L2114.87 1206.3 L2114.28 1206.3 L2113.7 1206.3 L2113.11 1206.3 L2112.52 1206.3 L2111.94 1206.3 L2111.35 1206.3 L2110.76 1206.3 L2110.18 1206.3 L2109.59 1206.3 L2109.01 1206.3 L2108.42 1206.3 L2107.83 1206.3 L2107.25 1206.3 L2106.66 1206.3 L2106.07 1206.3 L2105.49 1206.3 L2104.9 1206.3 L2104.31 1206.3 L2103.73 1206.3 L2103.14 1206.3 L2102.55 1206.3 L2101.97 1206.3 L2101.38 1206.3 L2100.8 1206.3 L2100.21 1206.3 L2099.62 1206.3 L2099.04 1206.3 L2098.45 1206.3 L2097.86 1206.3 L2097.28 1206.3 L2096.69 1206.3 L2096.1 1206.3 L2095.52 1206.3 L2094.93 1206.3 L2094.35 1206.3 L2093.76 1206.3 L2093.17 1206.3 L2092.59 1206.3 L2092 1206.3 L2091.41 1206.3 L2090.83 1206.3 L2090.24 1206.3 L2089.65 1206.3 L2089.07 1206.3 L2088.48 1206.3 L2087.89 1206.3 L2087.31 1206.3 L2086.72 1206.3 L2086.14 1206.3 L2085.55 1206.3 L2084.96 1206.3 L2084.38 1206.3 L2083.79 1206.3 L2083.2 1206.3 L2082.62 1206.3 L2082.03 1206.3 L2081.44 1206.3 L2080.86 1206.3 L2080.27 1206.3 L2079.68 1206.3 L2079.1 1206.3 L2078.51 1206.3 L2077.93 1206.3 L2077.34 1206.3 L2076.75 1206.3 L2076.17 1206.3 L2075.58 1206.3 L2074.99 1206.3 L2074.41 1206.3 L2073.82 1206.3 L2073.23 1206.3 L2072.65 1206.3 L2072.06 1206.3 L2071.48 1206.3 L2070.89 1206.3 L2070.3 1206.3 L2069.72 1206.3 L2069.13 1206.3 L2068.54 1206.3 L2067.96 1206.3 L2067.37 1206.3 L2066.78 1206.3 L2066.2 1206.3 L2065.61 1206.3 L2065.02 1206.3 L2064.44 1206.3 L2063.85 1206.3 L2063.27 1206.3 L2062.68 1206.3 L2062.09 1206.3 L2061.51 1206.3 L2060.92 1206.3 L2060.33 1206.3 L2059.75 1206.3 L2059.16 1206.3 L2058.57 1206.3 L2057.99 1206.3 L2057.4 1206.3 L2056.81 1206.3 L2056.23 1206.3 L2055.64 1206.3 L2055.06 1206.3 L2054.47 1206.3 L2053.88 1206.3 L2053.3 1206.3 L2052.71 1206.3 L2052.12 1206.3 L2051.54 1206.3 L2050.95 1206.3 L2050.36 1206.3 L2049.78 1206.3 L2049.19 1206.3 L2048.6 1206.3 L2048.02 1206.3 L2047.43 1206.3 L2046.85 1206.3 L2046.26 1206.3 L2045.67 1206.3 L2045.09 1206.3 L2044.5 1206.3 L2043.91 1206.3 L2043.33 1206.3 L2042.74 1206.3 L2042.15 1206.3 L2041.57 1206.3 L2040.98 1206.3 L2040.4 1206.3 L2039.81 1206.3 L2039.22 1206.3 L2038.64 1206.3 L2038.05 1206.3 L2037.46 1206.3 L2036.88 1206.3 L2036.29 1206.3 L2035.7 1206.3 L2035.12 1206.3 L2034.53 1206.3 L2033.94 1206.3 L2033.36 1206.3 L2032.77 1206.3 L2032.19 1206.3 L2031.6 1206.3 L2031.01 1206.3 L2030.43 1206.3 L2029.84 1206.3 L2029.25 1206.3 L2028.67 1206.3 L2028.08 1206.3 L2027.49 1206.3 L2026.91 1206.3 L2026.32 1206.3 L2025.73 1206.3 L2025.15 1206.3 L2024.56 1206.3 L2023.98 1206.3 L2023.39 1206.3 L2022.8 1206.3 L2022.22 1206.3 L2021.63 1206.3 L2021.04 1206.3 L2020.46 1206.3 L2019.87 1206.3 L2019.28 1206.3 L2018.7 1206.3 L2018.11 1206.3 L2017.53 1206.3 L2016.94 1206.3 L2016.35 1206.3 L2015.77 1206.3 L2015.18 1206.3 L2014.59 1206.3 L2014.01 1206.3 L2013.42 1206.3 L2012.83 1206.3 L2012.25 1206.3 L2011.66 1206.3 L2011.07 1206.3 L2010.49 1206.3 L2009.9 1206.3 L2009.32 1206.3 L2008.73 1206.3 L2008.14 1206.3 L2007.56 1206.3 L2006.97 1206.3 L2006.38 1206.3 L2005.8 1206.3 L2005.21 1206.3 L2004.62 1206.3 L2004.04 1206.3 L2003.45 1206.3 L2002.86 1206.3 L2002.28 1206.3 L2001.69 1206.3 L2001.11 1206.3 L2000.52 1206.3 L1999.93 1206.3 L1999.35 1206.3 L1998.76 1206.3 L1998.17 1206.3 L1997.59 1206.3 L1997 1206.3 L1996.41 1206.3 L1995.83 1206.3 L1995.24 1206.3 L1994.65 1206.3 L1994.07 1206.3 L1993.48 1206.3 L1992.9 1206.3 L1992.31 1206.3 L1991.72 1206.3 L1991.14 1206.3 L1990.55 1206.3 L1989.96 1206.3 L1989.38 1206.3 L1988.79 1206.3 L1988.2 1206.3 L1987.62 1206.3 L1987.03 1206.3 L1986.45 1206.3 L1985.86 1206.3 L1985.27 1206.3 L1984.69 1206.3 L1984.1 1206.3 L1983.51 1206.3 L1982.93 1206.3 L1982.34 1206.3 L1981.75 1206.3 L1981.17 1206.3 L1980.58 1206.3 L1979.99 1206.3 L1979.41 1206.3 L1978.82 1206.3 L1978.24 1206.3 L1977.65 1206.3 L1977.06 1206.3 L1976.48 1206.3 L1975.89 1206.3 L1975.3 1206.3 L1974.72 1206.3 L1974.13 1206.3 L1973.54 1206.3 L1972.96 1206.3 L1972.37 1206.3 L1971.78 1206.3 L1971.2 1206.3 L1970.61 1206.3 L1970.03 1206.3 L1969.44 1206.3 L1968.85 1206.3 L1968.27 1206.3 L1967.68 1206.3 L1967.09 1206.3 L1966.51 1206.3 L1965.92 1206.3 L1965.33 1206.3 L1964.75 1206.3 L1964.16 1206.3 L1963.58 1206.3 L1962.99 1206.3 L1962.4 1206.3 L1961.82 1206.3 L1961.23 1206.3 L1960.64 1206.3 L1960.06 1206.3 L1959.47 1206.3 L1958.88 1206.3 L1958.3 1206.3 L1957.71 1206.3 L1957.12 1206.3 L1956.54 1206.3 L1955.95 1206.3 L1955.37 1206.3 L1954.78 1206.3 L1954.19 1206.3 L1953.61 1206.3 L1953.02 1206.3 L1952.43 1206.3 L1951.85 1206.3 L1951.26 1206.3 L1950.67 1206.3 L1950.09 1206.3 L1949.5 1206.3 L1948.91 1206.3 L1948.33 1206.3 L1947.74 1206.3 L1947.16 1206.3 L1946.57 1206.3 L1945.98 1206.3 L1945.4 1206.3 L1944.81 1206.3 L1944.22 1206.3 L1943.64 1206.3 L1943.05 1206.3 L1942.46 1206.3 L1941.88 1206.3 L1941.29 1206.3 L1940.71 1206.3 L1940.12 1206.3 L1939.53 1206.3 L1938.95 1206.3 L1938.36 1206.3 L1937.77 1206.3 L1937.19 1206.3 L1936.6 1206.3 L1936.01 1206.3 L1935.43 1206.3 L1934.84 1206.3 L1934.25 1206.3 L1933.67 1206.3 L1933.08 1206.3 L1932.5 1206.3 L1931.91 1206.3 L1931.32 1206.3 L1930.74 1206.3 L1930.15 1206.3 L1929.56 1206.3 L1928.98 1206.3 L1928.39 1206.3 L1927.8 1206.3 L1927.22 1206.3 L1926.63 1206.3 L1926.04 1206.3 L1925.46 1206.3 L1924.87 1206.3 L1924.29 1206.3 L1923.7 1206.3 L1923.11 1206.3 L1922.53 1206.3 L1921.94 1206.3 L1921.35 1206.3 L1920.77 1206.3 L1920.18 1206.3 L1919.59 1206.3 L1919.01 1206.3 L1918.42 1206.3 L1917.83 1206.3 L1917.25 1206.3 L1916.66 1206.3 L1916.08 1206.3 L1915.49 1206.3 L1914.9 1206.3 L1914.32 1206.3 L1913.73 1206.3 L1913.14 1206.3 L1912.56 1206.3 L1911.97 1206.3 L1911.38 1206.3 L1910.8 1206.3 L1910.21 1206.3 L1909.63 1206.3 L1909.04 1206.3 L1908.45 1206.3 L1907.87 1206.3 L1907.28 1206.3 L1906.69 1206.3 L1906.11 1206.3 L1905.52 1206.3 L1904.93 1206.3 L1904.35 1206.3 L1903.76 1206.3 L1903.17 1206.3 L1902.59 1206.3 L1902 1206.3 L1901.42 1206.3 L1900.83 1206.3 L1900.24 1206.3 L1899.66 1206.3 L1899.07 1206.3 L1898.48 1206.3 L1897.9 1206.3 L1897.31 1206.3 L1896.72 1206.3 L1896.14 1206.3 L1895.55 1206.3 L1894.96 1206.3 L1894.38 1206.3 L1893.79 1206.3 L1893.21 1206.3 L1892.62 1206.3 L1892.03 1206.3 L1891.45 1206.3 L1890.86 1206.3 L1890.27 1206.3 L1889.69 1206.3 L1889.1 1206.3 L1888.51 1206.3 L1887.93 1206.3 L1887.34 1206.3 L1886.76 1206.3 L1886.17 1206.3 L1885.58 1206.3 L1885 1206.3 L1884.41 1206.3 L1883.82 1206.3 L1883.24 1206.3 L1882.65 1206.3 L1882.06 1206.3 L1881.48 1206.3 L1880.89 1206.3 L1880.3 1206.3 L1879.72 1206.3 L1879.13 1206.3 L1878.55 1206.3 L1877.96 1206.3 L1877.37 1206.3 L1876.79 1206.3 L1876.2 1206.3 L1875.61 1206.3 L1875.03 1206.3 L1874.44 1206.3 L1873.85 1206.3 L1873.27 1206.3 L1872.68 1206.3 L1872.09 1206.3 L1871.51 1206.3 L1870.92 1206.3 L1870.34 1206.3 L1869.75 1206.3 L1869.16 1206.3 L1868.58 1206.3 L1867.99 1206.3 L1867.4 1206.3 L1866.82 1206.3 L1866.23 1206.3 L1865.64 1206.3 L1865.06 1206.3 L1864.47 1206.3 L1863.88 1206.3 L1863.3 1206.3 L1862.71 1206.3 L1862.13 1206.3 L1861.54 1206.3 L1860.95 1206.3 L1860.37 1206.3 L1859.78 1206.3 L1859.19 1206.3 L1858.61 1206.3 L1858.02 1206.3 L1857.43 1206.3 L1856.85 1206.3 L1856.26 1206.3 L1855.68 1206.3 L1855.09 1206.3 L1854.5 1206.3 L1853.92 1206.3 L1853.33 1206.3 L1852.74 1206.3 L1852.16 1206.3 L1851.57 1206.3 L1850.98 1206.3 L1850.4 1206.3 L1849.81 1206.3 L1849.22 1206.3 L1848.64 1206.3 L1848.05 1206.3 L1847.47 1206.3 L1846.88 1206.3 L1846.29 1206.3 L1845.71 1206.3 L1845.12 1206.3 L1844.53 1206.3 L1843.95 1206.3 L1843.36 1206.3 L1842.77 1206.3 L1842.19 1206.3 L1841.6 1206.3 L1841.01 1206.3 L1840.43 1206.3 L1839.84 1206.3 L1839.26 1206.3 L1838.67 1206.3 L1838.08 1206.3 L1837.5 1206.3 L1836.91 1206.3 L1836.32 1206.3 L1835.74 1206.3 L1835.15 1206.3 L1834.56 1206.3 L1833.98 1206.3 L1833.39 1206.3 L1832.81 1206.3 L1832.22 1206.3 L1831.63 1206.3 L1831.05 1206.3 L1830.46 1206.3 L1829.87 1206.3 L1829.29 1206.3 L1828.7 1206.3 L1828.11 1206.3 L1827.53 1206.3 L1826.94 1206.3 L1826.35 1206.3 L1825.77 1206.3 L1825.18 1206.3 L1824.6 1206.3 L1824.01 1206.3 L1823.42 1206.3 L1822.84 1206.3 L1822.25 1206.3 L1821.66 1206.3 L1821.08 1206.3 L1820.49 1206.3 L1819.9 1206.3 L1819.32 1206.3 L1818.73 1206.3 L1818.14 1206.3 L1817.56 1206.3 L1816.97 1206.3 L1816.39 1206.3 L1815.8 1206.3 L1815.21 1206.3 L1814.63 1206.3 L1814.04 1206.3 L1813.45 1206.3 L1812.87 1206.3 L1812.28 1206.3 L1811.69 1206.3 L1811.11 1206.3 L1810.52 1206.3 L1809.94 1206.3 L1809.35 1206.3 L1808.76 1206.3 L1808.18 1206.3 L1807.59 1206.3 L1807 1206.3 L1806.42 1206.3 L1805.83 1206.3 L1805.24 1206.3 L1804.66 1206.3 L1804.07 1206.3 L1803.48 1206.3 L1802.9 1206.3 L1802.31 1206.3 L1801.73 1206.3 L1801.14 1206.3 L1800.55 1206.3 L1799.97 1206.3 L1799.38 1206.3 L1798.79 1206.3 L1798.21 1206.3 L1797.62 1206.3 L1797.03 1206.3 L1796.45 1206.3 L1795.86 1206.3 L1795.27 1206.3 L1794.69 1206.3 L1794.1 1206.3 L1793.52 1206.3 L1792.93 1206.3 L1792.34 1206.3 L1791.76 1206.3 L1791.17 1206.3 L1790.58 1206.3 L1790 1206.3 L1789.41 1206.3 L1788.82 1206.3 L1788.24 1206.3 L1787.65 1206.3 L1787.06 1206.3 L1786.48 1206.3 L1785.89 1206.3 L1785.31 1206.3 L1784.72 1206.3 L1784.13 1206.3 L1783.55 1206.3 L1782.96 1206.3 L1782.37 1206.3 L1781.79 1206.3 L1781.2 1206.3 L1780.61 1206.3 L1780.03 1206.3 L1779.44 1206.3 L1778.86 1206.3 L1778.27 1206.3 L1777.68 1206.3 L1777.1 1206.3 L1776.51 1206.3 L1775.92 1206.3 L1775.34 1206.3 L1774.75 1206.3 L1774.16 1206.3 L1773.58 1206.3 L1772.99 1206.3 L1772.4 1206.3 L1771.82 1206.3 L1771.23 1206.3 L1770.65 1206.3 L1770.06 1206.3 L1769.47 1206.3 L1768.89 1206.3 L1768.3 1206.3 L1767.71 1206.3 L1767.13 1206.3 L1766.54 1206.3 L1765.95 1206.3 L1765.37 1206.3 L1764.78 1206.3 L1764.19 1206.3 L1763.61 1206.3 L1763.02 1206.3 L1762.44 1206.3 L1761.85 1206.3 L1761.26 1206.3 L1760.68 1206.3 L1760.09 1206.3 L1759.5 1206.3 L1758.92 1206.3 L1758.33 1206.3 L1757.74 1206.3 L1757.16 1206.3 L1756.57 1206.3 L1755.99 1206.3 L1755.4 1206.3 L1754.81 1206.3 L1754.23 1206.3 L1753.64 1206.3 L1753.05 1206.3 L1752.47 1206.3 L1751.88 1206.3 L1751.29 1206.3 L1750.71 1206.3 L1750.12 1206.3 L1749.53 1206.3 L1748.95 1206.3 L1748.36 1206.3 L1747.78 1206.3 L1747.19 1206.3 L1746.6 1206.3 L1746.02 1206.3 L1745.43 1206.3 L1744.84 1206.3 L1744.26 1206.3 L1743.67 1206.3 L1743.08 1206.3 L1742.5 1206.3 L1741.91 1206.3 L1741.32 1206.3 L1740.74 1206.3 L1740.15 1206.3 L1739.57 1206.3 L1738.98 1206.3 L1738.39 1206.3 L1737.81 1206.3 L1737.22 1206.3 L1736.63 1206.3 L1736.05 1206.3 L1735.46 1206.3 L1734.87 1206.3 L1734.29 1206.3 L1733.7 1206.3 L1733.11 1206.3 L1732.53 1206.3 L1731.94 1206.3 L1731.36 1206.3 L1730.77 1206.3 L1730.18 1206.3 L1729.6 1206.3 L1729.01 1206.3 L1728.42 1206.3 L1727.84 1206.3 L1727.25 1206.3 L1726.66 1206.3 L1726.08 1206.3 L1725.49 1206.3 L1724.91 1206.3 L1724.32 1206.3 L1723.73 1206.3 L1723.15 1206.3 L1722.56 1206.3 L1721.97 1206.3 L1721.39 1206.3 L1720.8 1206.3 L1720.21 1206.3 L1719.63 1206.3 L1719.04 1206.3 L1718.45 1206.3 L1717.87 1206.3 L1717.28 1206.3 L1716.7 1206.3 L1716.11 1206.3 L1715.52 1206.3 L1714.94 1206.3 L1714.35 1206.3 L1713.76 1206.3 L1713.18 1206.3 L1712.59 1206.3 L1712 1206.3 L1711.42 1206.3 L1710.83 1206.3 L1710.24 1206.3 L1709.66 1206.3 L1709.07 1206.3 L1708.49 1206.3 L1707.9 1206.3 L1707.31 1206.3 L1706.73 1206.3 L1706.14 1206.3 L1705.55 1206.3 L1704.97 1206.3 L1704.38 1206.3 L1703.79 1206.3 L1703.21 1206.3 L1702.62 1206.3 L1702.04 1206.3 L1701.45 1206.3 L1700.86 1206.3 L1700.28 1206.3 L1699.69 1206.3 L1699.1 1206.3 L1698.52 1206.3 L1697.93 1206.3 L1697.34 1206.3 L1696.76 1206.3 L1696.17 1206.3 L1695.58 1206.3 L1695 1206.3 L1694.41 1206.3 L1693.83 1206.3 L1693.24 1206.3 L1692.65 1206.3 L1692.07 1206.3 L1691.48 1206.3 L1690.89 1206.3 L1690.31 1206.3 L1689.72 1206.3 L1689.13 1206.3 L1688.55 1206.3 L1687.96 1206.3 L1687.37 1206.3 L1686.79 1206.3 L1686.2 1206.3 L1685.62 1206.3 L1685.03 1206.3 L1684.44 1206.3 L1683.86 1206.3 L1683.27 1206.3 L1682.68 1206.3 L1682.1 1206.3 L1681.51 1206.3 L1680.92 1206.3 L1680.34 1206.3 L1679.75 1206.3 L1679.17 1206.3 L1678.58 1206.3 L1677.99 1206.3 L1677.41 1206.3 L1676.82 1206.3 L1676.23 1206.3 L1675.65 1206.3 L1675.06 1206.3 L1674.47 1206.3 L1673.89 1206.3 L1673.3 1206.3 L1672.71 1206.3 L1672.13 1206.3 L1671.54 1206.3 L1670.96 1206.3 L1670.37 1206.3 L1669.78 1206.3 L1669.2 1206.3 L1668.61 1206.3 L1668.02 1206.3 L1667.44 1206.3 L1666.85 1206.3 L1666.26 1206.3 L1665.68 1206.3 L1665.09 1206.3 L1664.5 1206.3 L1663.92 1206.3 L1663.33 1206.3 L1662.75 1206.3 L1662.16 1206.3 L1661.57 1206.3 L1660.99 1206.3 L1660.4 1206.3 L1659.81 1206.3 L1659.23 1206.3 L1658.64 1206.3 L1658.05 1206.3 L1657.47 1206.3 L1656.88 1206.3 L1656.29 1206.3 L1655.71 1206.3 L1655.12 1206.3 L1654.54 1206.3 L1653.95 1206.3 L1653.36 1206.3 L1652.78 1206.3 L1652.19 1206.3 L1651.6 1206.3 L1651.02 1206.3 L1650.43 1206.3 L1649.84 1206.3 L1649.26 1206.3 L1648.67 1206.3 L1648.09 1206.3 L1647.5 1206.3 L1646.91 1206.3 L1646.33 1206.3 L1645.74 1206.3 L1645.15 1206.3 L1644.57 1206.3 L1643.98 1206.3 L1643.39 1206.3 L1642.81 1206.3 L1642.22 1206.3 L1641.63 1206.3 L1641.05 1206.3 L1640.46 1206.3 L1639.88 1206.3 L1639.29 1206.3 L1638.7 1206.3 L1638.12 1206.3 L1637.53 1206.3 L1636.94 1206.3 L1636.36 1206.3 L1635.77 1206.3 L1635.18 1206.3 L1634.6 1206.3 L1634.01 1206.3 L1633.42 1206.3 L1632.84 1206.3 L1632.25 1206.3 L1631.67 1206.3 L1631.08 1206.3 L1630.49 1206.3 L1629.91 1206.3 L1629.32 1206.3 L1628.73 1206.3 L1628.15 1206.3 L1627.56 1206.3 L1626.97 1206.3 L1626.39 1206.3 L1625.8 1206.3 L1625.22 1206.3 L1624.63 1206.3 L1624.04 1206.3 L1623.46 1206.3 L1622.87 1206.3 L1622.28 1206.3 L1621.7 1206.3 L1621.11 1206.3 L1620.52 1206.3 L1619.94 1206.3 L1619.35 1206.3 L1618.76 1206.3 L1618.18 1206.3 L1617.59 1206.3 L1617.01 1206.3 L1616.42 1206.3 L1615.83 1206.3 L1615.25 1206.3 L1614.66 1206.3 L1614.07 1206.3 L1613.49 1206.3 L1612.9 1206.3 L1612.31 1206.3 L1611.73 1206.3 L1611.14 1206.3 L1610.55 1206.3 L1609.97 1206.3 L1609.38 1206.3 L1608.8 1206.3 L1608.21 1206.3 L1607.62 1206.3 L1607.04 1206.3 L1606.45 1206.3 L1605.86 1206.3 L1605.28 1206.3 L1604.69 1206.3 L1604.1 1206.3 L1603.52 1206.3 L1602.93 1206.3 L1602.34 1206.3 L1601.76 1206.3 L1601.17 1206.3 L1600.59 1206.3 L1600 1206.3 L1599.41 1206.3 L1598.83 1206.3 L1598.24 1206.3 L1597.65 1206.3 L1597.07 1206.3 L1596.48 1206.3 L1595.89 1206.3 L1595.31 1206.3 L1594.72 1206.3 L1594.14 1206.3 L1593.55 1206.3 L1592.96 1206.3 L1592.38 1206.3 L1591.79 1206.3 L1591.2 1206.3 L1590.62 1206.3 L1590.03 1206.3 L1589.44 1206.3 L1588.86 1206.3 L1588.27 1206.3 L1587.68 1206.3 L1587.1 1206.3 L1586.51 1206.3 L1585.93 1206.3 L1585.34 1206.3 L1584.75 1206.3 L1584.17 1206.3 L1583.58 1206.3 L1582.99 1206.3 L1582.41 1206.3 L1581.82 1206.3 L1581.23 1206.3 L1580.65 1206.3 L1580.06 1206.3 L1579.47 1206.3 L1578.89 1206.3 L1578.3 1206.3 L1577.72 1206.3 L1577.13 1206.3 L1576.54 1206.3 L1575.96 1206.3 L1575.37 1206.3 L1574.78 1206.3 L1574.2 1206.3 L1573.61 1206.3 L1573.02 1206.3 L1572.44 1206.3 L1571.85 1206.3 L1571.27 1206.3 L1570.68 1206.3 L1570.09 1206.3 L1569.51 1206.3 L1568.92 1206.3 L1568.33 1206.3 L1567.75 1206.3 L1567.16 1206.3 L1566.57 1206.3 L1565.99 1206.3 L1565.4 1206.3 L1564.81 1206.3 L1564.23 1206.3 L1563.64 1206.3 L1563.06 1206.3 L1562.47 1206.3 L1561.88 1206.3 L1561.3 1206.3 L1560.71 1206.3 L1560.12 1206.3 L1559.54 1206.3 L1558.95 1206.3 L1558.36 1206.3 L1557.78 1206.3 L1557.19 1206.3 L1556.6 1206.3 L1556.02 1206.3 L1555.43 1206.3 L1554.85 1206.3 L1554.26 1206.3 L1553.67 1206.3 L1553.09 1206.3 L1552.5 1206.3 L1551.91 1206.3 L1551.33 1206.3 L1550.74 1206.3 L1550.15 1206.3 L1549.57 1206.3 L1548.98 1206.3 L1548.4 1206.3 L1547.81 1206.3 L1547.22 1206.3 L1546.64 1206.3 L1546.05 1206.3 L1545.46 1206.3 L1544.88 1206.3 L1544.29 1206.3 L1543.7 1206.3 L1543.12 1206.3 L1542.53 1206.3 L1541.94 1206.3 L1541.36 1206.3 L1540.77 1206.3 L1540.19 1206.3 L1539.6 1206.3 L1539.01 1206.3 L1538.43 1206.3 L1537.84 1206.3 L1537.25 1206.3 L1536.67 1206.3 L1536.08 1206.3 L1535.49 1206.3 L1534.91 1206.3 L1534.32 1206.3 L1533.73 1206.3 L1533.15 1206.3 L1532.56 1206.3 L1531.98 1206.3 L1531.39 1206.3 L1530.8 1206.3 L1530.22 1206.3 L1529.63 1206.3 L1529.04 1206.3 L1528.46 1206.3 L1527.87 1206.3 L1527.28 1206.3 L1526.7 1206.3 L1526.11 1206.3 L1525.52 1206.3 L1524.94 1206.3 L1524.35 1206.3 L1523.77 1206.3 L1523.18 1206.3 L1522.59 1206.3 L1522.01 1206.3 L1521.42 1206.3 L1520.83 1206.3 L1520.25 1206.3 L1519.66 1206.3 L1519.07 1206.3 L1518.49 1206.3 L1517.9 1206.3 L1517.32 1206.3 L1516.73 1206.3 L1516.14 1206.3 L1515.56 1206.3 L1514.97 1206.3 L1514.38 1206.3 L1513.8 1206.3 L1513.21 1206.3 L1512.62 1206.3 L1512.04 1206.3 L1511.45 1206.3 L1510.86 1206.3 L1510.28 1206.3 L1509.69 1206.3 L1509.11 1206.3 L1508.52 1206.3 L1507.93 1206.3 L1507.35 1206.3 L1506.76 1206.3 L1506.17 1206.3 L1505.59 1206.3 L1505 1206.3 L1504.41 1206.3 L1503.83 1206.3 L1503.24 1206.3 L1502.65 1206.3 L1502.07 1206.3 L1501.48 1206.3 L1500.9 1206.3 L1500.31 1206.3 L1499.72 1206.3 L1499.14 1206.3 L1498.55 1206.3 L1497.96 1206.3 L1497.38 1206.3 L1496.79 1206.3 L1496.2 1206.3 L1495.62 1206.3 L1495.03 1206.3 L1494.45 1206.3 L1493.86 1206.3 L1493.27 1206.3 L1492.69 1206.3 L1492.1 1206.3 L1491.51 1206.3 L1490.93 1206.3 L1490.34 1206.3 L1489.75 1206.3 L1489.17 1206.3 L1488.58 1206.3 L1487.99 1206.3 L1487.41 1206.3 L1486.82 1206.3 L1486.24 1206.3 L1485.65 1206.3 L1485.06 1206.3 L1484.48 1206.3 L1483.89 1206.3 L1483.3 1206.3 L1482.72 1206.3 L1482.13 1206.3 L1481.54 1206.3 L1480.96 1206.3 L1480.37 1206.3 L1479.78 1206.3 L1479.2 1206.3 L1478.61 1206.3 L1478.03 1206.3 L1477.44 1206.3 L1476.85 1206.3 L1476.27 1206.3 L1475.68 1206.3 L1475.09 1206.3 L1474.51 1206.3 L1473.92 1206.3 L1473.33 1206.3 L1472.75 1206.3 L1472.16 1206.3 L1471.57 1206.3 L1470.99 1206.3 L1470.4 1206.3 L1469.82 1206.3 L1469.23 1206.3 L1468.64 1206.3 L1468.06 1206.3 L1467.47 1206.3 L1466.88 1206.3 L1466.3 1206.3 L1465.71 1206.3 L1465.12 1206.3 L1464.54 1206.3 L1463.95 1206.3 L1463.37 1206.3 L1462.78 1206.3 L1462.19 1206.3 L1461.61 1206.3 L1461.02 1206.3 L1460.43 1206.3 L1459.85 1206.3 L1459.26 1206.3 L1458.67 1206.3 L1458.09 1206.3 L1457.5 1206.3 L1456.91 1206.3 L1456.33 1206.3 L1455.74 1206.3 L1455.16 1206.3 L1454.57 1206.3 L1453.98 1206.3 L1453.4 1206.3 L1452.81 1206.3 L1452.22 1206.3 L1451.64 1206.3 L1451.05 1206.3 L1450.46 1206.3 L1449.88 1206.3 L1449.29 1206.3 L1448.7 1206.3 L1448.12 1206.3 L1447.53 1206.3 L1446.95 1206.3 L1446.36 1206.3 L1445.77 1206.3 L1445.19 1206.3 L1444.6 1206.3 L1444.01 1206.3 L1443.43 1206.3 L1442.84 1206.3 L1442.25 1206.3 L1441.67 1206.3 L1441.08 1206.3 L1440.5 1206.3 L1439.91 1206.3 L1439.32 1206.3 L1438.74 1206.3 L1438.15 1206.3 L1437.56 1206.3 L1436.98 1206.3 L1436.39 1206.3 L1435.8 1206.3 L1435.22 1206.3 L1434.63 1206.3 L1434.04 1206.3 L1433.46 1206.3 L1432.87 1206.3 L1432.29 1206.3 L1431.7 1206.3 L1431.11 1206.3 L1430.53 1206.3 L1429.94 1206.3 L1429.35 1206.3 L1428.77 1206.3 L1428.18 1206.3 L1427.59 1206.3 L1427.01 1206.3 L1426.42 1206.3 L1425.83 1206.3 L1425.25 1206.3 L1424.66 1206.3 L1424.08 1206.3 L1423.49 1206.3 L1422.9 1206.3 L1422.32 1206.3 L1421.73 1206.3 L1421.14 1206.3 L1420.56 1206.3 L1419.97 1206.3 L1419.38 1206.3 L1418.8 1206.3 L1418.21 1206.3 L1417.63 1206.3 L1417.04 1206.3 L1416.45 1206.3 L1415.87 1206.3 L1415.28 1206.3 L1414.69 1206.3 L1414.11 1206.3 L1413.52 1206.3 L1412.93 1206.3 L1412.35 1206.3 L1411.76 1206.3 L1411.17 1206.3 L1410.59 1206.3 L1410 1206.3 L1409.42 1206.3 L1408.83 1206.3 L1408.24 1206.3 L1407.66 1206.3 L1407.07 1206.3 L1406.48 1206.3 L1405.9 1206.3 L1405.31 1206.3 L1404.72 1206.3 L1404.14 1206.3 L1403.55 1206.3 L1402.96 1206.3 L1402.38 1206.3 L1401.79 1206.3 L1401.21 1206.3 L1400.62 1206.3 L1400.03 1206.3 L1399.45 1206.3 L1398.86 1206.3 L1398.27 1206.3 L1397.69 1206.3 L1397.1 1206.3 L1396.51 1206.3 L1395.93 1206.3 L1395.34 1206.3 L1394.75 1206.3 L1394.17 1206.3 L1393.58 1206.3 L1393 1206.3 L1392.41 1206.3 L1391.82 1206.3 L1391.24 1206.3 L1390.65 1206.3 L1390.06 1206.3 L1389.48 1206.3 L1388.89 1206.3 L1388.3 1206.3 L1387.72 1206.3 L1387.13 1206.3 L1386.55 1206.3 L1385.96 1206.3 L1385.37 1206.3 L1384.79 1206.3 L1384.2 1206.3 L1383.61 1206.3 L1383.03 1206.3 L1382.44 1206.3 L1381.85 1206.3 L1381.27 1206.3 L1380.68 1206.3 L1380.09 1206.3 L1379.51 1206.3 L1378.92 1206.3 L1378.34 1206.3 L1377.75 1206.3 L1377.16 1206.3 L1376.58 1206.3 L1375.99 1206.3 L1375.4 1206.3 L1374.82 1206.3 L1374.23 1206.3 L1373.64 1206.3 L1373.06 1206.3 L1372.47 1206.3 L1371.88 1206.3 L1371.3 1206.3 L1370.71 1206.3 L1370.13 1206.3 L1369.54 1206.3 L1368.95 1206.3 L1368.37 1206.3 L1367.78 1206.3 L1367.19 1206.3 L1366.61 1206.3 L1366.02 1206.3 L1365.43 1206.3 L1364.85 1206.3 L1364.26 1206.3 L1363.68 1206.3 L1363.09 1206.3 L1362.5 1206.3 L1361.92 1206.3 L1361.33 1206.3 L1360.74 1206.3 L1360.16 1206.3 L1359.57 1206.3 L1358.98 1206.3 L1358.4 1206.3 L1357.81 1206.3 L1357.22 1206.3 L1356.64 1206.3 L1356.05 1206.3 L1355.47 1206.3 L1354.88 1206.3 L1354.29 1206.3 L1353.71 1206.3 L1353.12 1206.3 L1352.53 1206.3 L1351.95 1206.3 L1351.36 1206.3 L1350.77 1206.3 L1350.19 1206.3 L1349.6 1206.3 L1349.01 1206.3 L1348.43 1206.3 L1347.84 1206.3 L1347.26 1206.3 L1346.67 1206.3 L1346.08 1206.3 L1345.5 1206.3 L1344.91 1206.3 L1344.32 1206.3 L1343.74 1206.3 L1343.15 1206.3 L1342.56 1206.3 L1341.98 1206.3 L1341.39 1206.3 L1340.8 1206.3 L1340.22 1206.3 L1339.63 1206.3 L1339.05 1206.3 L1338.46 1206.3 L1337.87 1206.3 L1337.29 1206.3 L1336.7 1206.3 L1336.11 1206.3 L1335.53 1206.3 L1334.94 1206.3 L1334.35 1206.3 L1333.77 1206.3 L1333.18 1206.3 L1332.6 1206.3 L1332.01 1206.3 L1331.42 1206.3 L1330.84 1206.3 L1330.25 1206.3 L1329.66 1206.3 L1329.08 1206.3 L1328.49 1206.3 L1327.9 1206.3 L1327.32 1206.3 L1326.73 1206.3 L1326.14 1206.3 L1325.56 1206.3 L1324.97 1206.3 L1324.39 1206.3 L1323.8 1206.3 L1323.21 1206.3 L1322.63 1206.3 L1322.04 1206.3 L1321.45 1206.3 L1320.87 1206.3 L1320.28 1206.3 L1319.69 1206.3 L1319.11 1206.3 L1318.52 1206.3 L1317.93 1206.3 L1317.35 1206.3 L1316.76 1206.3 L1316.18 1206.3 L1315.59 1206.3 L1315 1206.3 L1314.42 1206.3 L1313.83 1206.3 L1313.24 1206.3 L1312.66 1206.3 L1312.07 1206.3 L1311.48 1206.3 L1310.9 1206.3 L1310.31 1206.3 L1309.73 1206.3 L1309.14 1206.3 L1308.55 1206.3 L1307.97 1206.3 L1307.38 1206.3 L1306.79 1206.3 L1306.21 1206.3 L1305.62 1206.3 L1305.03 1206.3 L1304.45 1206.3 L1303.86 1206.3 L1303.27 1206.3 L1302.69 1206.3 L1302.1 1206.3 L1301.52 1206.3 L1300.93 1206.3 L1300.34 1206.3 L1299.76 1206.3 L1299.17 1206.3 L1298.58 1206.3 L1298 1206.3 L1297.41 1206.3 L1296.82 1206.3 L1296.24 1206.3 L1295.65 1206.3 L1295.06 1206.3 L1294.48 1206.3 L1293.89 1206.3 L1293.31 1206.3 L1292.72 1206.3 L1292.13 1206.3 L1291.55 1206.3 L1290.96 1206.3 L1290.37 1206.3 L1289.79 1206.3 L1289.2 1206.3 L1288.61 1206.3 L1288.03 1206.3 L1287.44 1206.3 L1286.86 1206.3 L1286.27 1206.3 L1285.68 1206.3 L1285.1 1206.3 L1284.51 1206.3 L1283.92 1206.3 L1283.34 1206.3 L1282.75 1206.3 L1282.16 1206.3 L1281.58 1206.3 L1280.99 1206.3 L1280.4 1206.3 L1279.82 1206.3 L1279.23 1206.3 L1278.65 1206.3 L1278.06 1206.3 L1277.47 1206.3 L1276.89 1206.3 L1276.3 1206.3 L1275.71 1206.3 L1275.13 1206.3 L1274.54 1206.3 L1273.95 1206.3 L1273.37 1206.3 L1272.78 1206.3 L1272.19 1206.3 L1271.61 1206.3 L1271.02 1206.3 L1270.44 1206.3 L1269.85 1206.3 L1269.26 1206.3 L1268.68 1206.3 L1268.09 1206.3 L1267.5 1206.3 L1266.92 1206.3 L1266.33 1206.3 L1265.74 1206.3 L1265.16 1206.3 L1264.57 1206.3 L1263.98 1206.3 L1263.4 1206.3 L1262.81 1206.3 L1262.23 1206.3 L1261.64 1206.3 L1261.05 1206.3 L1260.47 1206.3 L1259.88 1206.3 L1259.29 1206.3 L1258.71 1206.3 L1258.12 1206.3 L1257.53 1206.3 L1256.95 1206.3 L1256.36 1206.3 L1255.78 1206.3 L1255.19 1206.3 L1254.6 1206.3 L1254.02 1206.3 L1253.43 1206.3 L1252.84 1206.3 L1252.26 1206.3 L1251.67 1206.3 L1251.08 1206.3 L1250.5 1206.3 L1249.91 1206.3 L1249.32 1206.3 L1248.74 1206.3 L1248.15 1206.3 L1247.57 1206.3 L1246.98 1206.3 L1246.39 1206.3 L1245.81 1206.3 L1245.22 1206.3 L1244.63 1206.3 L1244.05 1206.3 L1243.46 1206.3 L1242.87 1206.3 L1242.29 1206.3 L1241.7 1206.3 L1241.11 1206.3 L1240.53 1206.3 L1239.94 1206.3 L1239.36 1206.3 L1238.77 1206.3 L1238.18 1206.3 L1237.6 1206.3 L1237.01 1206.3 L1236.42 1206.3 L1235.84 1206.3 L1235.25 1206.3 L1234.66 1206.3 L1234.08 1206.3 L1233.49 1206.3 L1232.91 1206.3 L1232.32 1206.3 L1231.73 1206.3 L1231.15 1206.3 L1230.56 1206.3 L1229.97 1206.3 L1229.39 1206.3 L1228.8 1206.3 L1228.21 1206.3 L1227.63 1206.3 L1227.04 1206.3 L1226.45 1206.3 L1225.87 1206.3 L1225.28 1206.3 L1224.7 1206.3 L1224.11 1206.3 L1223.52 1206.3 L1222.94 1206.3 L1222.35 1206.3 L1221.76 1206.3 L1221.18 1206.3 L1220.59 1206.3 L1220 1206.3 L1219.42 1206.3 L1218.83 1206.3 L1218.24 1206.3 L1217.66 1206.3 L1217.07 1206.3 L1216.49 1206.3 L1215.9 1206.3 L1215.31 1206.3 L1214.73 1206.3 L1214.14 1206.3 L1213.55 1206.3 L1212.97 1206.3 L1212.38 1206.3 L1211.79 1206.3 L1211.21 1206.3 L1210.62 1206.3 L1210.03 1206.3 L1209.45 1206.3 L1208.86 1206.3 L1208.28 1206.3 L1207.69 1206.3 L1207.1 1206.3 L1206.52 1206.3 L1205.93 1206.3 L1205.34 1206.3 L1204.76 1206.3 L1204.17 1206.3 L1203.58 1206.3 L1203 1206.3 L1202.41 1206.3 L1201.83 1206.3 L1201.24 1206.3 L1200.65 1206.3 L1200.07 1206.3 L1199.48 1206.3 L1198.89 1206.3 L1198.31 1206.3 L1197.72 1206.3 L1197.13 1206.3 L1196.55 1206.3 L1195.96 1206.3 L1195.37 1206.3 L1194.79 1206.3 L1194.2 1206.3 L1193.62 1206.3 L1193.03 1206.3 L1192.44 1206.3 L1191.86 1206.3 L1191.27 1206.3 L1190.68 1206.3 L1190.1 1206.3 L1189.51 1206.3 L1188.92 1206.3 L1188.34 1206.3 L1187.75 1206.3 L1187.16 1206.3 L1186.58 1206.3 L1185.99 1206.3 L1185.41 1206.3 L1184.82 1206.3 L1184.23 1206.3 L1183.65 1206.3 L1183.06 1206.3 L1182.47 1206.3 L1181.89 1206.3 L1181.3 1206.3 L1180.71 1206.3 L1180.13 1206.3 L1179.54 1206.3 L1178.96 1206.3 L1178.37 1206.3 L1177.78 1206.3 L1177.2 1206.3 L1176.61 1206.3 L1176.02 1206.3 L1175.44 1206.3 L1174.85 1206.3 L1174.26 1206.3 L1173.68 1206.3 L1173.09 1206.3 L1172.5 1206.3 L1171.92 1206.3 L1171.33 1206.3 L1170.75 1206.3 L1170.16 1206.3 L1169.57 1206.3 L1168.99 1206.3 L1168.4 1206.3 L1167.81 1206.3 L1167.23 1206.3 L1166.64 1206.3 L1166.05 1206.3 L1165.47 1206.3 L1164.88 1206.3 L1164.29 1206.3 L1163.71 1206.3 L1163.12 1206.3 L1162.54 1206.3 L1161.95 1206.3 L1161.36 1206.3 L1160.78 1206.3 L1160.19 1206.3 L1159.6 1206.3 L1159.02 1206.3 L1158.43 1206.3 L1157.84 1206.3 L1157.26 1206.3 L1156.67 1206.3 L1156.09 1206.3 L1155.5 1206.3 L1154.91 1206.3 L1154.33 1206.3 L1153.74 1206.3 L1153.15 1206.3 L1152.57 1206.3 L1151.98 1206.3 L1151.39 1206.3 L1150.81 1206.3 L1150.22 1206.3 L1149.63 1206.3 L1149.05 1206.3 L1148.46 1206.3 L1147.88 1206.3 L1147.29 1206.3 L1146.7 1206.3 L1146.12 1206.3 L1145.53 1206.3 L1144.94 1206.3 L1144.36 1206.3 L1143.77 1206.3 L1143.18 1206.3 L1142.6 1206.3 L1142.01 1206.3 L1141.42 1206.3 L1140.84 1206.3 L1140.25 1206.3 L1139.67 1206.3 L1139.08 1206.3 L1138.49 1206.3 L1137.91 1206.3 L1137.32 1206.3 L1136.73 1206.3 L1136.15 1206.3 L1135.56 1206.3 L1134.97 1206.3 L1134.39 1206.3 L1133.8 1206.3 L1133.21 1206.3 L1132.63 1206.3 L1132.04 1206.3 L1131.46 1206.3 L1130.87 1206.3 L1130.28 1206.3 L1129.7 1206.3 L1129.11 1206.3 L1128.52 1206.3 L1127.94 1206.3 L1127.35 1206.3 L1126.76 1206.3 L1126.18 1206.3 L1125.59 1206.3 L1125.01 1206.3 L1124.42 1206.3 L1123.83 1206.3 L1123.25 1206.3 L1122.66 1206.3 L1122.07 1206.3 L1121.49 1206.3 L1120.9 1206.3 L1120.31 1206.3 L1119.73 1206.3 L1119.14 1206.3 L1118.55 1206.3 L1117.97 1206.3 L1117.38 1206.3 L1116.8 1206.3 L1116.21 1206.3 L1115.62 1206.3 L1115.04 1206.3 L1114.45 1206.3 L1113.86 1206.3 L1113.28 1206.3 L1112.69 1206.3 L1112.1 1206.3 L1111.52 1206.3 L1110.93 1206.3 L1110.34 1206.3 L1109.76 1206.3 L1109.17 1206.3 L1108.59 1206.3 L1108 1206.3 L1107.41 1206.3 L1106.83 1206.3 L1106.24 1206.3 L1105.65 1206.3 L1105.07 1206.3 L1104.48 1206.3 L1103.89 1206.3 L1103.31 1206.3 L1102.72 1206.3 L1102.14 1206.3 L1101.55 1206.3 L1100.96 1206.3 L1100.38 1206.3 L1099.79 1206.3 L1099.2 1206.3 L1098.62 1206.3 L1098.03 1206.3 L1097.44 1206.3 L1096.86 1206.3 L1096.27 1206.3 L1095.68 1206.3 L1095.1 1206.3 L1094.51 1206.3 L1093.93 1206.3 L1093.34 1206.3 L1092.75 1206.3 L1092.17 1206.3 L1091.58 1206.3 L1090.99 1206.3 L1090.41 1206.3 L1089.82 1206.3 L1089.23 1206.3 L1088.65 1206.3 L1088.06 1206.3 L1087.47 1206.3 L1086.89 1206.3 L1086.3 1206.3 L1085.72 1206.3 L1085.13 1206.3 L1084.54 1206.3 L1083.96 1206.3 L1083.37 1206.3 L1082.78 1206.3 L1082.2 1206.3 L1081.61 1206.3 L1081.02 1206.3 L1080.44 1206.3 L1079.85 1206.3 L1079.26 1206.3 L1078.68 1206.3 L1078.09 1206.3 L1077.51 1206.3 L1076.92 1206.3 L1076.33 1206.3 L1075.75 1206.3 L1075.16 1206.3 L1074.57 1206.3 L1073.99 1206.3 L1073.4 1206.3 L1072.81 1206.3 L1072.23 1206.3 L1071.64 1206.3 L1071.06 1206.3 L1070.47 1206.3 L1069.88 1206.3 L1069.3 1206.3 L1068.71 1206.3 L1068.12 1206.3 L1067.54 1206.3 L1066.95 1206.3 L1066.36 1206.3 L1065.78 1206.3 L1065.19 1206.3 L1064.6 1206.3 L1064.02 1206.3 L1063.43 1206.3 L1062.85 1206.3 L1062.26 1206.3 L1061.67 1206.3 L1061.09 1206.3 L1060.5 1206.3 L1059.91 1206.3 L1059.33 1206.3 L1058.74 1206.3 L1058.15 1206.3 L1057.57 1206.3 L1056.98 1206.3 L1056.39 1206.3 L1055.81 1206.3 L1055.22 1206.3 L1054.64 1206.3 L1054.05 1206.3 L1053.46 1206.3 L1052.88 1206.3 L1052.29 1206.3 L1051.7 1206.3 L1051.12 1206.3 L1050.53 1206.3 L1049.94 1206.3 L1049.36 1206.3 L1048.77 1206.3 L1048.19 1206.3 L1047.6 1206.3 L1047.01 1206.3 L1046.43 1206.3 L1045.84 1206.3 L1045.25 1206.3 L1044.67 1206.3 L1044.08 1206.3 L1043.49 1206.3 L1042.91 1206.3 L1042.32 1206.3 L1041.73 1206.3 L1041.15 1206.3 L1040.56 1206.3 L1039.98 1206.3 L1039.39 1206.3 L1038.8 1206.3 L1038.22 1206.3 L1037.63 1206.3 L1037.04 1206.3 L1036.46 1206.3 L1035.87 1206.3 L1035.28 1206.3 L1034.7 1206.3 L1034.11 1206.3 L1033.52 1206.3 L1032.94 1206.3 L1032.35 1206.3 L1031.77 1206.3 L1031.18 1206.3 L1030.59 1206.3 L1030.01 1206.3 L1029.42 1206.3 L1028.83 1206.3 L1028.25 1206.3 L1027.66 1206.3 L1027.07 1206.3 L1026.49 1206.3 L1025.9 1206.3 L1025.32 1206.3 L1024.73 1206.3 L1024.14 1206.3 L1023.56 1206.3 L1022.97 1206.3 L1022.38 1206.3 L1021.8 1206.3 L1021.21 1206.3 L1020.62 1206.3 L1020.04 1206.3 L1019.45 1206.3 L1018.86 1206.3 L1018.28 1206.3 L1017.69 1206.3 L1017.11 1206.3 L1016.52 1206.3 L1015.93 1206.3 L1015.35 1206.3 L1014.76 1206.3 L1014.17 1206.3 L1013.59 1206.3 L1013 1206.3 L1012.41 1206.3 L1011.83 1206.3 L1011.24 1206.3 L1010.65 1206.3 L1010.07 1206.3 L1009.48 1206.3 L1008.9 1206.3 L1008.31 1206.3 L1007.72 1206.3 L1007.14 1206.3 L1006.55 1206.3 L1005.96 1206.3 L1005.38 1206.3 L1004.79 1206.3 L1004.2 1206.3 L1003.62 1206.3 L1003.03 1206.3 L1002.44 1206.3 L1001.86 1206.3 L1001.27 1206.3 L1000.69 1206.3 L1000.1 1206.3 L999.513 1206.3 L998.926 1206.3 L998.34 1206.3 L997.754 1206.3 L997.167 1206.3 L996.581 1206.3 L995.994 1206.3 L995.408 1206.3 L994.822 1206.3 L994.235 1206.3 L993.649 1206.3 L993.062 1206.3 L992.476 1206.3 L991.889 1206.3 L991.303 1206.3 L990.717 1206.3 L990.13 1206.3 L989.544 1206.3 L988.957 1206.3 L988.371 1206.3 L987.785 1206.3 L987.198 1206.3 L986.612 1206.3 L986.025 1206.3  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1206.74 986.612,1206.74 987.198,1206.74 987.785,1206.74 988.371,1206.74 988.957,1206.74 989.544,1206.74 990.13,1206.74 990.717,1206.74 991.303,1206.74 991.889,1206.74 992.476,1206.74 993.062,1206.74 993.649,1206.74 994.235,1206.74 994.822,1206.74 995.408,1206.74 995.994,1206.74 996.581,1206.74 997.167,1206.74 997.754,1206.74 998.34,1206.74 998.926,1206.74 999.513,1206.74 1000.1,1206.74 1000.69,1206.74 1001.27,1206.74 1001.86,1206.74 1002.44,1206.74 1003.03,1206.74 1003.62,1206.74 1004.2,1206.74 1004.79,1206.74 1005.38,1206.74 1005.96,1206.74 1006.55,1206.74 1007.14,1206.74 1007.72,1206.74 1008.31,1206.74 1008.9,1206.74 1009.48,1206.74 1010.07,1206.74 1010.65,1206.74 1011.24,1206.74 1011.83,1206.74 1012.41,1206.74 1013,1206.74 1013.59,1206.74 1014.17,1206.74 1014.76,1206.74 1015.35,1206.74 1015.93,1206.74 1016.52,1206.74 1017.11,1206.74 1017.69,1206.74 1018.28,1206.74 1018.86,1206.74 1019.45,1206.74 1020.04,1206.74 1020.62,1206.74 1021.21,1206.74 1021.8,1206.74 1022.38,1206.74 1022.97,1206.74 1023.56,1206.74 1024.14,1206.74 1024.73,1206.74 1025.32,1206.74 1025.9,1206.74 1026.49,1206.74 1027.07,1206.74 1027.66,1206.74 1028.25,1206.74 1028.83,1206.74 1029.42,1206.74 1030.01,1206.74 1030.59,1206.74 1031.18,1206.74 1031.77,1206.74 1032.35,1206.74 1032.94,1206.74 1033.52,1206.74 1034.11,1206.74 1034.7,1206.74 1035.28,1206.74 1035.87,1206.74 1036.46,1206.74 1037.04,1206.74 1037.63,1206.74 1038.22,1206.74 1038.8,1206.74 1039.39,1206.74 1039.98,1206.74 1040.56,1206.74 1041.15,1206.74 1041.73,1206.74 1042.32,1206.74 1042.91,1206.74 1043.49,1206.74 1044.08,1206.74 1044.67,1206.74 1045.25,1206.74 1045.84,1206.74 1046.43,1206.74 1047.01,1206.74 1047.6,1206.74 1048.19,1206.74 1048.77,1206.74 1049.36,1206.74 1049.94,1206.74 1050.53,1206.74 1051.12,1206.74 1051.7,1206.74 1052.29,1206.74 1052.88,1206.74 1053.46,1206.74 1054.05,1206.74 1054.64,1206.74 1055.22,1206.74 1055.81,1206.74 1056.39,1206.74 1056.98,1206.74 1057.57,1206.74 1058.15,1206.74 1058.74,1206.74 1059.33,1206.74 1059.91,1206.74 1060.5,1206.74 1061.09,1206.74 1061.67,1206.74 1062.26,1206.74 1062.85,1206.74 1063.43,1206.74 1064.02,1206.74 1064.6,1206.74 1065.19,1206.74 1065.78,1206.74 1066.36,1206.74 1066.95,1206.74 1067.54,1206.74 1068.12,1206.74 1068.71,1206.74 1069.3,1206.74 1069.88,1206.74 1070.47,1206.74 1071.06,1206.74 1071.64,1206.74 1072.23,1206.74 1072.81,1206.74 1073.4,1206.74 1073.99,1206.74 1074.57,1206.74 1075.16,1206.74 1075.75,1206.74 1076.33,1206.74 1076.92,1206.74 1077.51,1206.74 1078.09,1206.74 1078.68,1206.74 1079.26,1206.74 1079.85,1206.74 1080.44,1206.74 1081.02,1206.74 1081.61,1206.74 1082.2,1206.74 1082.78,1206.74 1083.37,1206.74 1083.96,1206.74 1084.54,1206.74 1085.13,1206.74 1085.72,1206.74 1086.3,1206.74 1086.89,1206.74 1087.47,1206.74 1088.06,1206.74 1088.65,1206.74 1089.23,1206.74 1089.82,1206.74 1090.41,1206.74 1090.99,1206.74 1091.58,1206.74 1092.17,1206.74 1092.75,1206.74 1093.34,1206.74 1093.93,1206.74 1094.51,1206.74 1095.1,1206.74 1095.68,1206.74 1096.27,1206.74 1096.86,1206.74 1097.44,1206.74 1098.03,1206.74 1098.62,1206.74 1099.2,1206.74 1099.79,1206.74 1100.38,1206.74 1100.96,1206.74 1101.55,1206.74 1102.14,1206.74 1102.72,1206.74 1103.31,1206.74 1103.89,1206.74 1104.48,1206.74 1105.07,1206.74 1105.65,1206.74 1106.24,1206.74 1106.83,1206.74 1107.41,1206.74 1108,1206.74 1108.59,1206.74 1109.17,1206.74 1109.76,1206.74 1110.34,1206.74 1110.93,1206.74 1111.52,1206.74 1112.1,1206.74 1112.69,1206.74 1113.28,1206.74 1113.86,1206.74 1114.45,1206.74 1115.04,1206.74 1115.62,1206.74 1116.21,1206.74 1116.8,1206.74 1117.38,1206.74 1117.97,1206.74 1118.55,1206.74 1119.14,1206.74 1119.73,1206.74 1120.31,1206.74 1120.9,1206.74 1121.49,1206.74 1122.07,1206.74 1122.66,1206.74 1123.25,1206.74 1123.83,1206.74 1124.42,1206.74 1125.01,1206.74 1125.59,1206.74 1126.18,1206.74 1126.76,1206.74 1127.35,1206.74 1127.94,1206.74 1128.52,1206.74 1129.11,1206.74 1129.7,1206.74 1130.28,1206.74 1130.87,1206.74 1131.46,1206.74 1132.04,1206.74 1132.63,1206.74 1133.21,1206.74 1133.8,1206.74 1134.39,1206.74 1134.97,1206.74 1135.56,1206.74 1136.15,1206.74 1136.73,1206.74 1137.32,1206.74 1137.91,1206.74 1138.49,1206.74 1139.08,1206.74 1139.67,1206.74 1140.25,1206.74 1140.84,1206.74 1141.42,1206.74 1142.01,1206.74 1142.6,1206.74 1143.18,1206.74 1143.77,1206.74 1144.36,1206.74 1144.94,1206.74 1145.53,1206.74 1146.12,1206.74 1146.7,1206.74 1147.29,1206.74 1147.88,1206.74 1148.46,1206.74 1149.05,1206.74 1149.63,1206.74 1150.22,1206.74 1150.81,1206.74 1151.39,1206.74 1151.98,1206.74 1152.57,1206.74 1153.15,1206.74 1153.74,1206.74 1154.33,1206.74 1154.91,1206.74 1155.5,1206.74 1156.09,1206.74 1156.67,1206.74 1157.26,1206.74 1157.84,1206.74 1158.43,1206.74 1159.02,1206.74 1159.6,1206.74 1160.19,1206.74 1160.78,1206.74 1161.36,1206.74 1161.95,1206.74 1162.54,1206.74 1163.12,1206.74 1163.71,1206.74 1164.29,1206.74 1164.88,1206.74 1165.47,1206.74 1166.05,1206.74 1166.64,1206.74 1167.23,1206.74 1167.81,1206.74 1168.4,1206.74 1168.99,1206.74 1169.57,1206.74 1170.16,1206.74 1170.75,1206.74 1171.33,1206.74 1171.92,1206.74 1172.5,1206.74 1173.09,1206.74 1173.68,1206.74 1174.26,1206.74 1174.85,1206.74 1175.44,1206.74 1176.02,1206.74 1176.61,1206.74 1177.2,1206.74 1177.78,1206.74 1178.37,1206.74 1178.96,1206.74 1179.54,1206.74 1180.13,1206.74 1180.71,1206.74 1181.3,1206.74 1181.89,1206.74 1182.47,1206.74 1183.06,1206.74 1183.65,1206.74 1184.23,1206.74 1184.82,1206.74 1185.41,1206.74 1185.99,1206.74 1186.58,1206.74 1187.16,1206.74 1187.75,1206.74 1188.34,1206.74 1188.92,1206.74 1189.51,1206.74 1190.1,1206.74 1190.68,1206.74 1191.27,1206.74 1191.86,1206.74 1192.44,1206.74 1193.03,1206.74 1193.62,1206.74 1194.2,1206.74 1194.79,1206.74 1195.37,1206.74 1195.96,1206.74 1196.55,1206.74 1197.13,1206.74 1197.72,1206.74 1198.31,1206.74 1198.89,1206.74 1199.48,1206.74 1200.07,1206.74 1200.65,1206.74 1201.24,1206.74 1201.83,1206.74 1202.41,1206.74 1203,1206.74 1203.58,1206.74 1204.17,1206.74 1204.76,1206.74 1205.34,1206.74 1205.93,1206.74 1206.52,1206.74 1207.1,1206.74 1207.69,1206.74 1208.28,1206.74 1208.86,1206.74 1209.45,1206.74 1210.03,1206.74 1210.62,1206.74 1211.21,1206.74 1211.79,1206.74 1212.38,1206.74 1212.97,1206.74 1213.55,1206.74 1214.14,1206.74 1214.73,1206.74 1215.31,1206.74 1215.9,1206.74 1216.49,1206.74 1217.07,1206.74 1217.66,1206.74 1218.24,1206.74 1218.83,1206.74 1219.42,1206.74 1220,1206.74 1220.59,1206.74 1221.18,1206.74 1221.76,1206.74 1222.35,1206.74 1222.94,1206.74 1223.52,1206.74 1224.11,1206.74 1224.7,1206.74 1225.28,1206.74 1225.87,1206.74 1226.45,1206.74 1227.04,1206.74 1227.63,1206.74 1228.21,1206.74 1228.8,1206.74 1229.39,1206.74 1229.97,1206.74 1230.56,1206.74 1231.15,1206.74 1231.73,1206.74 1232.32,1206.74 1232.91,1206.74 1233.49,1206.74 1234.08,1206.74 1234.66,1206.74 1235.25,1206.74 1235.84,1206.74 1236.42,1206.74 1237.01,1206.74 1237.6,1206.74 1238.18,1206.74 1238.77,1206.74 1239.36,1206.74 1239.94,1206.74 1240.53,1206.74 1241.11,1206.74 1241.7,1206.74 1242.29,1206.74 1242.87,1206.74 1243.46,1206.74 1244.05,1206.74 1244.63,1206.74 1245.22,1206.74 1245.81,1206.74 1246.39,1206.74 1246.98,1206.74 1247.57,1206.74 1248.15,1206.74 1248.74,1206.74 1249.32,1206.74 1249.91,1206.74 1250.5,1206.74 1251.08,1206.74 1251.67,1206.74 1252.26,1206.74 1252.84,1206.74 1253.43,1206.74 1254.02,1206.74 1254.6,1206.74 1255.19,1206.74 1255.78,1206.74 1256.36,1206.74 1256.95,1206.74 1257.53,1206.74 1258.12,1206.74 1258.71,1206.74 1259.29,1206.74 1259.88,1206.74 1260.47,1206.74 1261.05,1206.74 1261.64,1206.74 1262.23,1206.74 1262.81,1206.74 1263.4,1206.74 1263.98,1206.74 1264.57,1206.74 1265.16,1206.74 1265.74,1206.74 1266.33,1206.74 1266.92,1206.74 1267.5,1206.74 1268.09,1206.74 1268.68,1206.74 1269.26,1206.74 1269.85,1206.74 1270.44,1206.74 1271.02,1206.74 1271.61,1206.74 1272.19,1206.74 1272.78,1206.74 1273.37,1206.74 1273.95,1206.74 1274.54,1206.74 1275.13,1206.74 1275.71,1206.74 1276.3,1206.74 1276.89,1206.74 1277.47,1206.74 1278.06,1206.74 1278.65,1206.74 1279.23,1206.74 1279.82,1206.74 1280.4,1206.74 1280.99,1206.74 1281.58,1206.74 1282.16,1206.74 1282.75,1206.74 1283.34,1206.74 1283.92,1206.74 1284.51,1206.74 1285.1,1206.74 1285.68,1206.74 1286.27,1206.74 1286.86,1206.74 1287.44,1206.74 1288.03,1206.74 1288.61,1206.74 1289.2,1206.74 1289.79,1206.74 1290.37,1206.74 1290.96,1206.74 1291.55,1206.74 1292.13,1206.74 1292.72,1206.74 1293.31,1206.74 1293.89,1206.74 1294.48,1206.74 1295.06,1206.74 1295.65,1206.74 1296.24,1206.74 1296.82,1206.74 1297.41,1206.74 1298,1206.74 1298.58,1206.74 1299.17,1206.74 1299.76,1206.74 1300.34,1206.74 1300.93,1206.74 1301.52,1206.74 1302.1,1206.74 1302.69,1206.74 1303.27,1206.74 1303.86,1206.74 1304.45,1206.74 1305.03,1206.74 1305.62,1206.74 1306.21,1206.74 1306.79,1206.74 1307.38,1206.74 1307.97,1206.74 1308.55,1206.74 1309.14,1206.74 1309.73,1206.74 1310.31,1206.74 1310.9,1206.74 1311.48,1206.74 1312.07,1206.74 1312.66,1206.74 1313.24,1206.74 1313.83,1206.74 1314.42,1206.74 1315,1206.74 1315.59,1206.74 1316.18,1206.74 1316.76,1206.74 1317.35,1206.74 1317.93,1206.74 1318.52,1206.74 1319.11,1206.74 1319.69,1206.74 1320.28,1206.74 1320.87,1206.74 1321.45,1206.74 1322.04,1206.74 1322.63,1206.74 1323.21,1206.74 1323.8,1206.74 1324.39,1206.74 1324.97,1206.74 1325.56,1206.74 1326.14,1206.74 1326.73,1206.74 1327.32,1206.74 1327.9,1206.74 1328.49,1206.74 1329.08,1206.74 1329.66,1206.74 1330.25,1206.74 1330.84,1206.74 1331.42,1206.74 1332.01,1206.74 1332.6,1206.74 1333.18,1206.74 1333.77,1206.74 1334.35,1206.74 1334.94,1206.74 1335.53,1206.74 1336.11,1206.74 1336.7,1206.74 1337.29,1206.74 1337.87,1206.74 1338.46,1206.74 1339.05,1206.74 1339.63,1206.74 1340.22,1206.74 1340.8,1206.74 1341.39,1206.74 1341.98,1206.74 1342.56,1206.74 1343.15,1206.74 1343.74,1206.74 1344.32,1206.74 1344.91,1206.74 1345.5,1206.74 1346.08,1206.74 1346.67,1206.74 1347.26,1206.74 1347.84,1206.74 1348.43,1206.74 1349.01,1206.74 1349.6,1206.74 1350.19,1206.74 1350.77,1206.74 1351.36,1206.74 1351.95,1206.74 1352.53,1206.74 1353.12,1206.74 1353.71,1206.74 1354.29,1206.74 1354.88,1206.74 1355.47,1206.74 1356.05,1206.74 1356.64,1206.74 1357.22,1206.74 1357.81,1206.74 1358.4,1206.74 1358.98,1206.74 1359.57,1206.74 1360.16,1206.74 1360.74,1206.74 1361.33,1206.74 1361.92,1206.74 1362.5,1206.74 1363.09,1206.74 1363.68,1206.74 1364.26,1206.74 1364.85,1206.74 1365.43,1206.74 1366.02,1206.74 1366.61,1206.74 1367.19,1206.74 1367.78,1206.74 1368.37,1206.74 1368.95,1206.74 1369.54,1206.74 1370.13,1206.74 1370.71,1206.74 1371.3,1206.74 1371.88,1206.74 1372.47,1206.74 1373.06,1206.74 1373.64,1206.74 1374.23,1206.74 1374.82,1206.74 1375.4,1206.74 1375.99,1206.74 1376.58,1206.74 1377.16,1206.74 1377.75,1206.74 1378.34,1206.74 1378.92,1206.74 1379.51,1206.74 1380.09,1206.74 1380.68,1206.74 1381.27,1206.74 1381.85,1206.74 1382.44,1206.74 1383.03,1206.74 1383.61,1206.74 1384.2,1206.74 1384.79,1206.74 1385.37,1206.74 1385.96,1206.74 1386.55,1206.74 1387.13,1206.74 1387.72,1206.74 1388.3,1206.74 1388.89,1206.74 1389.48,1206.74 1390.06,1206.74 1390.65,1206.74 1391.24,1206.74 1391.82,1206.74 1392.41,1206.74 1393,1206.74 1393.58,1206.74 1394.17,1206.74 1394.75,1206.74 1395.34,1206.74 1395.93,1206.74 1396.51,1206.74 1397.1,1206.74 1397.69,1206.74 1398.27,1206.74 1398.86,1206.74 1399.45,1206.74 1400.03,1206.74 1400.62,1206.74 1401.21,1206.74 1401.79,1206.74 1402.38,1206.74 1402.96,1206.74 1403.55,1206.74 1404.14,1206.74 1404.72,1206.74 1405.31,1206.74 1405.9,1206.74 1406.48,1206.74 1407.07,1206.74 1407.66,1206.74 1408.24,1206.74 1408.83,1206.74 1409.42,1206.74 1410,1206.74 1410.59,1206.74 1411.17,1206.74 1411.76,1206.74 1412.35,1206.74 1412.93,1206.74 1413.52,1206.74 1414.11,1206.74 1414.69,1206.74 1415.28,1206.74 1415.87,1206.74 1416.45,1206.74 1417.04,1206.74 1417.63,1206.74 1418.21,1206.74 1418.8,1206.74 1419.38,1206.74 1419.97,1206.74 1420.56,1206.74 1421.14,1206.74 1421.73,1206.74 1422.32,1206.74 1422.9,1206.74 1423.49,1206.74 1424.08,1206.74 1424.66,1206.74 1425.25,1206.74 1425.83,1206.74 1426.42,1206.74 1427.01,1206.74 1427.59,1206.74 1428.18,1206.74 1428.77,1206.74 1429.35,1206.74 1429.94,1206.74 1430.53,1206.74 1431.11,1206.74 1431.7,1206.74 1432.29,1206.74 1432.87,1206.74 1433.46,1206.74 1434.04,1206.74 1434.63,1206.74 1435.22,1206.74 1435.8,1206.74 1436.39,1206.74 1436.98,1206.74 1437.56,1206.74 1438.15,1206.74 1438.74,1206.74 1439.32,1206.74 1439.91,1206.74 1440.5,1206.74 1441.08,1206.74 1441.67,1206.74 1442.25,1206.74 1442.84,1206.74 1443.43,1206.74 1444.01,1206.74 1444.6,1206.74 1445.19,1206.74 1445.77,1206.74 1446.36,1206.74 1446.95,1206.74 1447.53,1206.74 1448.12,1206.74 1448.7,1206.74 1449.29,1206.74 1449.88,1206.74 1450.46,1206.74 1451.05,1206.74 1451.64,1206.74 1452.22,1206.74 1452.81,1206.74 1453.4,1206.74 1453.98,1206.74 1454.57,1206.74 1455.16,1206.74 1455.74,1206.74 1456.33,1206.74 1456.91,1206.74 1457.5,1206.74 1458.09,1206.74 1458.67,1206.74 1459.26,1206.74 1459.85,1206.74 1460.43,1206.74 1461.02,1206.74 1461.61,1206.74 1462.19,1206.74 1462.78,1206.74 1463.37,1206.74 1463.95,1206.74 1464.54,1206.74 1465.12,1206.74 1465.71,1206.74 1466.3,1206.74 1466.88,1206.74 1467.47,1206.74 1468.06,1206.74 1468.64,1206.74 1469.23,1206.74 1469.82,1206.74 1470.4,1206.74 1470.99,1206.74 1471.57,1206.74 1472.16,1206.74 1472.75,1206.74 1473.33,1206.74 1473.92,1206.74 1474.51,1206.74 1475.09,1206.74 1475.68,1206.74 1476.27,1206.74 1476.85,1206.74 1477.44,1206.74 1478.03,1206.74 1478.61,1206.74 1479.2,1206.74 1479.78,1206.74 1480.37,1206.74 1480.96,1206.74 1481.54,1206.74 1482.13,1206.74 1482.72,1206.74 1483.3,1206.74 1483.89,1206.74 1484.48,1206.74 1485.06,1206.74 1485.65,1206.74 1486.24,1206.74 1486.82,1206.74 1487.41,1206.74 1487.99,1206.74 1488.58,1206.74 1489.17,1206.74 1489.75,1206.74 1490.34,1206.74 1490.93,1206.74 1491.51,1206.74 1492.1,1206.74 1492.69,1206.74 1493.27,1206.74 1493.86,1206.74 1494.45,1206.74 1495.03,1206.74 1495.62,1206.74 1496.2,1206.74 1496.79,1206.74 1497.38,1206.74 1497.96,1206.74 1498.55,1206.74 1499.14,1206.74 1499.72,1206.74 1500.31,1206.74 1500.9,1206.74 1501.48,1206.74 1502.07,1206.74 1502.65,1206.74 1503.24,1206.74 1503.83,1206.74 1504.41,1206.74 1505,1206.74 1505.59,1206.74 1506.17,1206.74 1506.76,1206.74 1507.35,1206.74 1507.93,1206.74 1508.52,1206.74 1509.11,1206.74 1509.69,1206.74 1510.28,1206.74 1510.86,1206.74 1511.45,1206.74 1512.04,1206.74 1512.62,1206.74 1513.21,1206.74 1513.8,1206.74 1514.38,1206.74 1514.97,1206.74 1515.56,1206.74 1516.14,1206.74 1516.73,1206.74 1517.32,1206.74 1517.9,1206.74 1518.49,1206.74 1519.07,1206.74 1519.66,1206.74 1520.25,1206.74 1520.83,1206.74 1521.42,1206.74 1522.01,1206.74 1522.59,1206.74 1523.18,1206.74 1523.77,1206.74 1524.35,1206.74 1524.94,1206.74 1525.52,1206.74 1526.11,1206.74 1526.7,1206.74 1527.28,1206.74 1527.87,1206.74 1528.46,1206.74 1529.04,1206.74 1529.63,1206.74 1530.22,1206.74 1530.8,1206.74 1531.39,1206.74 1531.98,1206.74 1532.56,1206.74 1533.15,1206.74 1533.73,1206.74 1534.32,1206.74 1534.91,1206.74 1535.49,1206.74 1536.08,1206.74 1536.67,1206.74 1537.25,1206.74 1537.84,1206.74 1538.43,1206.74 1539.01,1206.74 1539.6,1206.74 1540.19,1206.74 1540.77,1206.74 1541.36,1206.74 1541.94,1206.74 1542.53,1206.74 1543.12,1206.74 1543.7,1206.74 1544.29,1206.74 1544.88,1206.74 1545.46,1206.74 1546.05,1206.74 1546.64,1206.74 1547.22,1206.74 1547.81,1206.74 1548.4,1206.74 1548.98,1206.74 1549.57,1206.74 1550.15,1206.74 1550.74,1206.74 1551.33,1206.74 1551.91,1206.74 1552.5,1206.74 1553.09,1206.74 1553.67,1206.74 1554.26,1206.74 1554.85,1206.74 1555.43,1206.74 1556.02,1206.74 1556.6,1206.74 1557.19,1206.74 1557.78,1206.74 1558.36,1206.74 1558.95,1206.74 1559.54,1206.74 1560.12,1206.74 1560.71,1206.74 1561.3,1206.74 1561.88,1206.74 1562.47,1206.74 1563.06,1206.74 1563.64,1206.74 1564.23,1206.74 1564.81,1206.74 1565.4,1206.74 1565.99,1206.74 1566.57,1206.74 1567.16,1206.74 1567.75,1206.74 1568.33,1206.74 1568.92,1206.74 1569.51,1206.74 1570.09,1206.74 1570.68,1206.74 1571.27,1206.74 1571.85,1206.74 1572.44,1206.74 1573.02,1206.74 1573.61,1206.74 1574.2,1206.74 1574.78,1206.74 1575.37,1206.74 1575.96,1206.74 1576.54,1206.74 1577.13,1206.74 1577.72,1206.74 1578.3,1206.74 1578.89,1206.74 1579.47,1206.74 1580.06,1206.74 1580.65,1206.74 1581.23,1206.74 1581.82,1206.74 1582.41,1206.74 1582.99,1206.74 1583.58,1206.74 1584.17,1206.74 1584.75,1206.74 1585.34,1206.74 1585.93,1206.74 1586.51,1206.74 1587.1,1206.74 1587.68,1206.74 1588.27,1206.74 1588.86,1206.74 1589.44,1206.74 1590.03,1206.74 1590.62,1206.74 1591.2,1206.74 1591.79,1206.74 1592.38,1206.74 1592.96,1206.74 1593.55,1206.74 1594.14,1206.74 1594.72,1206.74 1595.31,1206.74 1595.89,1206.74 1596.48,1206.74 1597.07,1206.74 1597.65,1206.74 1598.24,1206.74 1598.83,1206.74 1599.41,1206.74 1600,1206.74 1600.59,1206.74 1601.17,1206.74 1601.76,1206.74 1602.34,1206.74 1602.93,1206.74 1603.52,1206.74 1604.1,1206.74 1604.69,1206.74 1605.28,1206.74 1605.86,1206.74 1606.45,1206.74 1607.04,1206.74 1607.62,1206.74 1608.21,1206.74 1608.8,1206.74 1609.38,1206.74 1609.97,1206.74 1610.55,1206.74 1611.14,1206.74 1611.73,1206.74 1612.31,1206.74 1612.9,1206.74 1613.49,1206.74 1614.07,1206.74 1614.66,1206.74 1615.25,1206.74 1615.83,1206.74 1616.42,1206.74 1617.01,1206.74 1617.59,1206.74 1618.18,1206.74 1618.76,1206.74 1619.35,1206.74 1619.94,1206.74 1620.52,1206.74 1621.11,1206.74 1621.7,1206.74 1622.28,1206.74 1622.87,1206.74 1623.46,1206.74 1624.04,1206.74 1624.63,1206.74 1625.22,1206.74 1625.8,1206.74 1626.39,1206.74 1626.97,1206.74 1627.56,1206.74 1628.15,1206.74 1628.73,1206.74 1629.32,1206.74 1629.91,1206.74 1630.49,1206.74 1631.08,1206.74 1631.67,1206.74 1632.25,1206.74 1632.84,1206.74 1633.42,1206.74 1634.01,1206.74 1634.6,1206.74 1635.18,1206.74 1635.77,1206.74 1636.36,1206.74 1636.94,1206.74 1637.53,1206.74 1638.12,1206.74 1638.7,1206.74 1639.29,1206.74 1639.88,1206.74 1640.46,1206.74 1641.05,1206.74 1641.63,1206.74 1642.22,1206.74 1642.81,1206.74 1643.39,1206.74 1643.98,1206.74 1644.57,1206.74 1645.15,1206.74 1645.74,1206.74 1646.33,1206.74 1646.91,1206.74 1647.5,1206.74 1648.09,1206.74 1648.67,1206.74 1649.26,1206.74 1649.84,1206.74 1650.43,1206.74 1651.02,1206.74 1651.6,1206.74 1652.19,1206.74 1652.78,1206.74 1653.36,1206.74 1653.95,1206.74 1654.54,1206.74 1655.12,1206.74 1655.71,1206.74 1656.29,1206.74 1656.88,1206.74 1657.47,1206.74 1658.05,1206.74 1658.64,1206.74 1659.23,1206.74 1659.81,1206.74 1660.4,1206.74 1660.99,1206.74 1661.57,1206.74 1662.16,1206.74 1662.75,1206.74 1663.33,1206.74 1663.92,1206.74 1664.5,1206.74 1665.09,1206.74 1665.68,1206.74 1666.26,1206.74 1666.85,1206.74 1667.44,1206.74 1668.02,1206.74 1668.61,1206.74 1669.2,1206.74 1669.78,1206.74 1670.37,1206.74 1670.96,1206.74 1671.54,1206.74 1672.13,1206.74 1672.71,1206.74 1673.3,1206.74 1673.89,1206.74 1674.47,1206.74 1675.06,1206.74 1675.65,1206.74 1676.23,1206.74 1676.82,1206.74 1677.41,1206.74 1677.99,1206.74 1678.58,1206.74 1679.17,1206.74 1679.75,1206.74 1680.34,1206.74 1680.92,1206.74 1681.51,1206.74 1682.1,1206.74 1682.68,1206.74 1683.27,1206.74 1683.86,1206.74 1684.44,1206.74 1685.03,1206.74 1685.62,1206.74 1686.2,1206.74 1686.79,1206.74 1687.37,1206.74 1687.96,1206.74 1688.55,1206.74 1689.13,1206.74 1689.72,1206.74 1690.31,1206.74 1690.89,1206.74 1691.48,1206.74 1692.07,1206.74 1692.65,1206.74 1693.24,1206.74 1693.83,1206.74 1694.41,1206.74 1695,1206.74 1695.58,1206.74 1696.17,1206.74 1696.76,1206.74 1697.34,1206.74 1697.93,1206.74 1698.52,1206.74 1699.1,1206.74 1699.69,1206.74 1700.28,1206.74 1700.86,1206.74 1701.45,1206.74 1702.04,1206.74 1702.62,1206.74 1703.21,1206.74 1703.79,1206.74 1704.38,1206.74 1704.97,1206.74 1705.55,1206.74 1706.14,1206.74 1706.73,1206.74 1707.31,1206.74 1707.9,1206.74 1708.49,1206.74 1709.07,1206.74 1709.66,1206.74 1710.24,1206.74 1710.83,1206.74 1711.42,1206.74 1712,1206.74 1712.59,1206.74 1713.18,1206.74 1713.76,1206.74 1714.35,1206.74 1714.94,1206.74 1715.52,1206.74 1716.11,1206.74 1716.7,1206.74 1717.28,1206.74 1717.87,1206.74 1718.45,1206.74 1719.04,1206.74 1719.63,1206.74 1720.21,1206.74 1720.8,1206.74 1721.39,1206.74 1721.97,1206.74 1722.56,1206.74 1723.15,1206.74 1723.73,1206.74 1724.32,1206.74 1724.91,1206.74 1725.49,1206.74 1726.08,1206.74 1726.66,1206.74 1727.25,1206.74 1727.84,1206.74 1728.42,1206.74 1729.01,1206.74 1729.6,1206.74 1730.18,1206.74 1730.77,1206.74 1731.36,1206.74 1731.94,1206.74 1732.53,1206.74 1733.11,1206.74 1733.7,1206.74 1734.29,1206.74 1734.87,1206.74 1735.46,1206.74 1736.05,1206.74 1736.63,1206.74 1737.22,1206.74 1737.81,1206.74 1738.39,1206.74 1738.98,1206.74 1739.57,1206.74 1740.15,1206.74 1740.74,1206.74 1741.32,1206.74 1741.91,1206.74 1742.5,1206.74 1743.08,1206.74 1743.67,1206.74 1744.26,1206.74 1744.84,1206.74 1745.43,1206.74 1746.02,1206.74 1746.6,1206.74 1747.19,1206.74 1747.78,1206.74 1748.36,1206.74 1748.95,1206.74 1749.53,1206.74 1750.12,1206.74 1750.71,1206.74 1751.29,1206.74 1751.88,1206.74 1752.47,1206.74 1753.05,1206.74 1753.64,1206.74 1754.23,1206.74 1754.81,1206.74 1755.4,1206.74 1755.99,1206.74 1756.57,1206.74 1757.16,1206.74 1757.74,1206.74 1758.33,1206.74 1758.92,1206.74 1759.5,1206.74 1760.09,1206.74 1760.68,1206.74 1761.26,1206.74 1761.85,1206.74 1762.44,1206.74 1763.02,1206.74 1763.61,1206.74 1764.19,1206.74 1764.78,1206.74 1765.37,1206.74 1765.95,1206.74 1766.54,1206.74 1767.13,1206.74 1767.71,1206.74 1768.3,1206.74 1768.89,1206.74 1769.47,1206.74 1770.06,1206.74 1770.65,1206.74 1771.23,1206.74 1771.82,1206.74 1772.4,1206.74 1772.99,1206.74 1773.58,1206.74 1774.16,1206.74 1774.75,1206.74 1775.34,1206.74 1775.92,1206.74 1776.51,1206.74 1777.1,1206.74 1777.68,1206.74 1778.27,1206.74 1778.86,1206.74 1779.44,1206.74 1780.03,1206.74 1780.61,1206.74 1781.2,1206.74 1781.79,1206.74 1782.37,1206.74 1782.96,1206.74 1783.55,1206.74 1784.13,1206.74 1784.72,1206.74 1785.31,1206.74 1785.89,1206.74 1786.48,1206.74 1787.06,1206.74 1787.65,1206.74 1788.24,1206.74 1788.82,1206.74 1789.41,1206.74 1790,1206.74 1790.58,1206.74 1791.17,1206.74 1791.76,1206.74 1792.34,1206.74 1792.93,1206.74 1793.52,1206.74 1794.1,1206.74 1794.69,1206.74 1795.27,1206.74 1795.86,1206.74 1796.45,1206.74 1797.03,1206.74 1797.62,1206.74 1798.21,1206.74 1798.79,1206.74 1799.38,1206.74 1799.97,1206.74 1800.55,1206.74 1801.14,1206.74 1801.73,1206.74 1802.31,1206.74 1802.9,1206.74 1803.48,1206.74 1804.07,1206.74 1804.66,1206.74 1805.24,1206.74 1805.83,1206.74 1806.42,1206.74 1807,1206.74 1807.59,1206.74 1808.18,1206.74 1808.76,1206.74 1809.35,1206.74 1809.94,1206.74 1810.52,1206.74 1811.11,1206.74 1811.69,1206.74 1812.28,1206.74 1812.87,1206.74 1813.45,1206.74 1814.04,1206.74 1814.63,1206.74 1815.21,1206.74 1815.8,1206.74 1816.39,1206.74 1816.97,1206.74 1817.56,1206.74 1818.14,1206.74 1818.73,1206.74 1819.32,1206.74 1819.9,1206.74 1820.49,1206.74 1821.08,1206.74 1821.66,1206.74 1822.25,1206.74 1822.84,1206.74 1823.42,1206.74 1824.01,1206.74 1824.6,1206.74 1825.18,1206.74 1825.77,1206.74 1826.35,1206.74 1826.94,1206.74 1827.53,1206.74 1828.11,1206.74 1828.7,1206.74 1829.29,1206.74 1829.87,1206.74 1830.46,1206.74 1831.05,1206.74 1831.63,1206.74 1832.22,1206.74 1832.81,1206.74 1833.39,1206.74 1833.98,1206.74 1834.56,1206.74 1835.15,1206.74 1835.74,1206.74 1836.32,1206.74 1836.91,1206.74 1837.5,1206.74 1838.08,1206.74 1838.67,1206.74 1839.26,1206.74 1839.84,1206.74 1840.43,1206.74 1841.01,1206.74 1841.6,1206.74 1842.19,1206.74 1842.77,1206.74 1843.36,1206.74 1843.95,1206.74 1844.53,1206.74 1845.12,1206.74 1845.71,1206.74 1846.29,1206.74 1846.88,1206.74 1847.47,1206.74 1848.05,1206.74 1848.64,1206.74 1849.22,1206.74 1849.81,1206.74 1850.4,1206.74 1850.98,1206.74 1851.57,1206.74 1852.16,1206.74 1852.74,1206.74 1853.33,1206.74 1853.92,1206.74 1854.5,1206.74 1855.09,1206.74 1855.68,1206.74 1856.26,1206.74 1856.85,1206.74 1857.43,1206.74 1858.02,1206.74 1858.61,1206.74 1859.19,1206.74 1859.78,1206.74 1860.37,1206.74 1860.95,1206.74 1861.54,1206.74 1862.13,1206.74 1862.71,1206.74 1863.3,1206.74 1863.88,1206.74 1864.47,1206.74 1865.06,1206.74 1865.64,1206.74 1866.23,1206.74 1866.82,1206.74 1867.4,1206.74 1867.99,1206.74 1868.58,1206.74 1869.16,1206.74 1869.75,1206.74 1870.34,1206.74 1870.92,1206.74 1871.51,1206.74 1872.09,1206.74 1872.68,1206.74 1873.27,1206.74 1873.85,1206.74 1874.44,1206.74 1875.03,1206.74 1875.61,1206.74 1876.2,1206.74 1876.79,1206.74 1877.37,1206.74 1877.96,1206.74 1878.55,1206.74 1879.13,1206.74 1879.72,1206.74 1880.3,1206.74 1880.89,1206.74 1881.48,1206.74 1882.06,1206.74 1882.65,1206.74 1883.24,1206.74 1883.82,1206.74 1884.41,1206.74 1885,1206.74 1885.58,1206.74 1886.17,1206.74 1886.76,1206.74 1887.34,1206.74 1887.93,1206.74 1888.51,1206.74 1889.1,1206.74 1889.69,1206.74 1890.27,1206.74 1890.86,1206.74 1891.45,1206.74 1892.03,1206.74 1892.62,1206.74 1893.21,1206.74 1893.79,1206.74 1894.38,1206.74 1894.96,1206.74 1895.55,1206.74 1896.14,1206.74 1896.72,1206.74 1897.31,1206.74 1897.9,1206.74 1898.48,1206.74 1899.07,1206.74 1899.66,1206.74 1900.24,1206.74 1900.83,1206.74 1901.42,1206.74 1902,1206.74 1902.59,1206.74 1903.17,1206.74 1903.76,1206.74 1904.35,1206.74 1904.93,1206.74 1905.52,1206.74 1906.11,1206.74 1906.69,1206.74 1907.28,1206.74 1907.87,1206.74 1908.45,1206.74 1909.04,1206.74 1909.63,1206.74 1910.21,1206.74 1910.8,1206.74 1911.38,1206.74 1911.97,1206.74 1912.56,1206.74 1913.14,1206.74 1913.73,1206.74 1914.32,1206.74 1914.9,1206.74 1915.49,1206.74 1916.08,1206.74 1916.66,1206.74 1917.25,1206.74 1917.83,1206.74 1918.42,1206.74 1919.01,1206.74 1919.59,1206.74 1920.18,1206.74 1920.77,1206.74 1921.35,1206.74 1921.94,1206.74 1922.53,1206.74 1923.11,1206.74 1923.7,1206.74 1924.29,1206.74 1924.87,1206.74 1925.46,1206.74 1926.04,1206.74 1926.63,1206.74 1927.22,1206.74 1927.8,1206.74 1928.39,1206.74 1928.98,1206.74 1929.56,1206.74 1930.15,1206.74 1930.74,1206.74 1931.32,1206.74 1931.91,1206.74 1932.5,1206.74 1933.08,1206.74 1933.67,1206.74 1934.25,1206.74 1934.84,1206.74 1935.43,1206.74 1936.01,1206.74 1936.6,1206.74 1937.19,1206.74 1937.77,1206.74 1938.36,1206.74 1938.95,1206.74 1939.53,1206.74 1940.12,1206.74 1940.71,1206.74 1941.29,1206.74 1941.88,1206.74 1942.46,1206.74 1943.05,1206.74 1943.64,1206.74 1944.22,1206.74 1944.81,1206.74 1945.4,1206.74 1945.98,1206.74 1946.57,1206.74 1947.16,1206.74 1947.74,1206.74 1948.33,1206.74 1948.91,1206.74 1949.5,1206.74 1950.09,1206.74 1950.67,1206.74 1951.26,1206.74 1951.85,1206.74 1952.43,1206.74 1953.02,1206.74 1953.61,1206.74 1954.19,1206.74 1954.78,1206.74 1955.37,1206.74 1955.95,1206.74 1956.54,1206.74 1957.12,1206.74 1957.71,1206.74 1958.3,1206.74 1958.88,1206.74 1959.47,1206.74 1960.06,1206.74 1960.64,1206.74 1961.23,1206.74 1961.82,1206.74 1962.4,1206.74 1962.99,1206.74 1963.58,1206.74 1964.16,1206.74 1964.75,1206.74 1965.33,1206.74 1965.92,1206.74 1966.51,1206.74 1967.09,1206.74 1967.68,1206.74 1968.27,1206.74 1968.85,1206.74 1969.44,1206.74 1970.03,1206.74 1970.61,1206.74 1971.2,1206.74 1971.78,1206.74 1972.37,1206.74 1972.96,1206.74 1973.54,1206.74 1974.13,1206.74 1974.72,1206.74 1975.3,1206.74 1975.89,1206.74 1976.48,1206.74 1977.06,1206.74 1977.65,1206.74 1978.24,1206.74 1978.82,1206.74 1979.41,1206.74 1979.99,1206.74 1980.58,1206.74 1981.17,1206.74 1981.75,1206.74 1982.34,1206.74 1982.93,1206.74 1983.51,1206.74 1984.1,1206.74 1984.69,1206.74 1985.27,1206.74 1985.86,1206.74 1986.45,1206.74 1987.03,1206.74 1987.62,1206.74 1988.2,1206.74 1988.79,1206.74 1989.38,1206.74 1989.96,1206.74 1990.55,1206.74 1991.14,1206.74 1991.72,1206.74 1992.31,1206.74 1992.9,1206.74 1993.48,1206.74 1994.07,1206.74 1994.65,1206.74 1995.24,1206.74 1995.83,1206.74 1996.41,1206.74 1997,1206.74 1997.59,1206.74 1998.17,1206.74 1998.76,1206.74 1999.35,1206.74 1999.93,1206.74 2000.52,1206.74 2001.11,1206.74 2001.69,1206.74 2002.28,1206.74 2002.86,1206.74 2003.45,1206.74 2004.04,1206.74 2004.62,1206.74 2005.21,1206.74 2005.8,1206.74 2006.38,1206.74 2006.97,1206.74 2007.56,1206.74 2008.14,1206.74 2008.73,1206.74 2009.32,1206.74 2009.9,1206.74 2010.49,1206.74 2011.07,1206.74 2011.66,1206.74 2012.25,1206.74 2012.83,1206.74 2013.42,1206.74 2014.01,1206.74 2014.59,1206.74 2015.18,1206.74 2015.77,1206.74 2016.35,1206.74 2016.94,1206.74 2017.53,1206.74 2018.11,1206.74 2018.7,1206.74 2019.28,1206.74 2019.87,1206.74 2020.46,1206.74 2021.04,1206.74 2021.63,1206.74 2022.22,1206.74 2022.8,1206.74 2023.39,1206.74 2023.98,1206.74 2024.56,1206.74 2025.15,1206.74 2025.73,1206.74 2026.32,1206.74 2026.91,1206.74 2027.49,1206.74 2028.08,1206.74 2028.67,1206.74 2029.25,1206.74 2029.84,1206.74 2030.43,1206.74 2031.01,1206.74 2031.6,1206.74 2032.19,1206.74 2032.77,1206.74 2033.36,1206.74 2033.94,1206.74 2034.53,1206.74 2035.12,1206.74 2035.7,1206.74 2036.29,1206.74 2036.88,1206.74 2037.46,1206.74 2038.05,1206.74 2038.64,1206.74 2039.22,1206.74 2039.81,1206.74 2040.4,1206.74 2040.98,1206.74 2041.57,1206.74 2042.15,1206.74 2042.74,1206.74 2043.33,1206.74 2043.91,1206.74 2044.5,1206.74 2045.09,1206.74 2045.67,1206.74 2046.26,1206.74 2046.85,1206.74 2047.43,1206.74 2048.02,1206.74 2048.6,1206.74 2049.19,1206.74 2049.78,1206.74 2050.36,1206.74 2050.95,1206.74 2051.54,1206.74 2052.12,1206.74 2052.71,1206.74 2053.3,1206.74 2053.88,1206.74 2054.47,1206.74 2055.06,1206.74 2055.64,1206.74 2056.23,1206.74 2056.81,1206.74 2057.4,1206.74 2057.99,1206.74 2058.57,1206.74 2059.16,1206.74 2059.75,1206.74 2060.33,1206.74 2060.92,1206.74 2061.51,1206.74 2062.09,1206.74 2062.68,1206.74 2063.27,1206.74 2063.85,1206.74 2064.44,1206.74 2065.02,1206.74 2065.61,1206.74 2066.2,1206.74 2066.78,1206.74 2067.37,1206.74 2067.96,1206.74 2068.54,1206.74 2069.13,1206.74 2069.72,1206.74 2070.3,1206.74 2070.89,1206.74 2071.48,1206.74 2072.06,1206.74 2072.65,1206.74 2073.23,1206.74 2073.82,1206.74 2074.41,1206.74 2074.99,1206.74 2075.58,1206.74 2076.17,1206.74 2076.75,1206.74 2077.34,1206.74 2077.93,1206.74 2078.51,1206.74 2079.1,1206.74 2079.68,1206.74 2080.27,1206.74 2080.86,1206.74 2081.44,1206.74 2082.03,1206.74 2082.62,1206.74 2083.2,1206.74 2083.79,1206.74 2084.38,1206.74 2084.96,1206.74 2085.55,1206.74 2086.14,1206.74 2086.72,1206.74 2087.31,1206.74 2087.89,1206.74 2088.48,1206.74 2089.07,1206.74 2089.65,1206.74 2090.24,1206.74 2090.83,1206.74 2091.41,1206.74 2092,1206.74 2092.59,1206.74 2093.17,1206.74 2093.76,1206.74 2094.35,1206.74 2094.93,1206.74 2095.52,1206.74 2096.1,1206.74 2096.69,1206.74 2097.28,1206.74 2097.86,1206.74 2098.45,1206.74 2099.04,1206.74 2099.62,1206.74 2100.21,1206.74 2100.8,1206.74 2101.38,1206.74 2101.97,1206.74 2102.55,1206.74 2103.14,1206.74 2103.73,1206.74 2104.31,1206.74 2104.9,1206.74 2105.49,1206.74 2106.07,1206.74 2106.66,1206.74 2107.25,1206.74 2107.83,1206.74 2108.42,1206.74 2109.01,1206.74 2109.59,1206.74 2110.18,1206.74 2110.76,1206.74 2111.35,1206.74 2111.94,1206.74 2112.52,1206.74 2113.11,1206.74 2113.7,1206.74 2114.28,1206.74 2114.87,1206.74 2115.46,1206.74 2116.04,1206.74 2116.63,1206.74 2117.22,1206.74 2117.8,1206.74 2118.39,1206.74 2118.97,1206.74 2119.56,1206.74 2120.15,1206.74 2120.73,1206.74 2121.32,1206.74 2121.91,1206.74 2122.49,1206.74 2123.08,1206.74 2123.67,1206.74 2124.25,1206.74 2124.84,1206.74 2125.42,1206.74 2126.01,1206.74 2126.6,1206.74 2127.18,1206.74 2127.77,1206.74 2128.36,1206.74 2128.94,1206.74 2129.53,1206.74 2130.12,1206.74 2130.7,1206.74 2131.29,1206.74 2131.88,1206.74 2132.46,1206.74 2133.05,1206.74 2133.63,1206.74 2134.22,1206.74 2134.81,1206.74 2135.39,1206.74 2135.98,1206.74 2136.57,1206.74 2137.15,1206.74 2137.74,1206.74 2138.33,1206.74 2138.91,1206.74 2139.5,1206.74 2140.09,1206.74 2140.67,1206.74 2141.26,1206.74 2141.84,1206.74 2142.43,1206.74 2143.02,1206.74 2143.6,1206.74 2144.19,1206.74 2144.78,1206.74 2145.36,1206.74 2145.95,1206.74 2146.54,1206.74 2147.12,1206.74 2147.71,1206.74 2148.3,1206.74 2148.88,1206.74 2149.47,1206.74 2150.05,1206.74 2150.64,1206.74 2151.23,1206.74 2151.81,1206.74 2152.4,1206.74 2152.99,1206.74 2153.57,1206.74 2154.16,1206.74 2154.75,1206.74 2155.33,1206.74 2155.92,1206.74 2156.5,1206.74 2157.09,1206.74 2157.68,1206.74 2158.26,1206.74 \"/>\n<path clip-path=\"url(#clip112)\" d=\"M986.025 1206.69 L986.612 1206.69 L987.198 1206.69 L987.785 1206.69 L988.371 1206.69 L988.957 1206.69 L989.544 1206.69 L990.13 1206.69 L990.717 1206.69 L991.303 1206.69 L991.889 1206.69 L992.476 1206.69 L993.062 1206.69 L993.649 1206.69 L994.235 1206.69 L994.822 1206.69 L995.408 1206.69 L995.994 1206.69 L996.581 1206.69 L997.167 1206.69 L997.754 1206.69 L998.34 1206.69 L998.926 1206.69 L999.513 1206.69 L1000.1 1206.69 L1000.69 1206.69 L1001.27 1206.69 L1001.86 1206.69 L1002.44 1206.69 L1003.03 1206.69 L1003.62 1206.69 L1004.2 1206.69 L1004.79 1206.69 L1005.38 1206.69 L1005.96 1206.69 L1006.55 1206.69 L1007.14 1206.69 L1007.72 1206.69 L1008.31 1206.69 L1008.9 1206.69 L1009.48 1206.69 L1010.07 1206.69 L1010.65 1206.69 L1011.24 1206.69 L1011.83 1206.69 L1012.41 1206.69 L1013 1206.69 L1013.59 1206.69 L1014.17 1206.69 L1014.76 1206.69 L1015.35 1206.69 L1015.93 1206.69 L1016.52 1206.69 L1017.11 1206.69 L1017.69 1206.69 L1018.28 1206.69 L1018.86 1206.69 L1019.45 1206.69 L1020.04 1206.69 L1020.62 1206.69 L1021.21 1206.69 L1021.8 1206.69 L1022.38 1206.69 L1022.97 1206.69 L1023.56 1206.69 L1024.14 1206.69 L1024.73 1206.69 L1025.32 1206.69 L1025.9 1206.69 L1026.49 1206.69 L1027.07 1206.69 L1027.66 1206.69 L1028.25 1206.69 L1028.83 1206.69 L1029.42 1206.69 L1030.01 1206.69 L1030.59 1206.69 L1031.18 1206.69 L1031.77 1206.69 L1032.35 1206.69 L1032.94 1206.69 L1033.52 1206.69 L1034.11 1206.69 L1034.7 1206.69 L1035.28 1206.69 L1035.87 1206.69 L1036.46 1206.69 L1037.04 1206.69 L1037.63 1206.69 L1038.22 1206.69 L1038.8 1206.69 L1039.39 1206.69 L1039.98 1206.69 L1040.56 1206.69 L1041.15 1206.69 L1041.73 1206.69 L1042.32 1206.69 L1042.91 1206.69 L1043.49 1206.69 L1044.08 1206.69 L1044.67 1206.69 L1045.25 1206.69 L1045.84 1206.69 L1046.43 1206.69 L1047.01 1206.69 L1047.6 1206.69 L1048.19 1206.69 L1048.77 1206.69 L1049.36 1206.69 L1049.94 1206.69 L1050.53 1206.69 L1051.12 1206.69 L1051.7 1206.69 L1052.29 1206.69 L1052.88 1206.69 L1053.46 1206.69 L1054.05 1206.69 L1054.64 1206.69 L1055.22 1206.69 L1055.81 1206.69 L1056.39 1206.69 L1056.98 1206.69 L1057.57 1206.69 L1058.15 1206.69 L1058.74 1206.69 L1059.33 1206.69 L1059.91 1206.69 L1060.5 1206.69 L1061.09 1206.69 L1061.67 1206.69 L1062.26 1206.69 L1062.85 1206.69 L1063.43 1206.69 L1064.02 1206.69 L1064.6 1206.69 L1065.19 1206.69 L1065.78 1206.69 L1066.36 1206.69 L1066.95 1206.69 L1067.54 1206.69 L1068.12 1206.69 L1068.71 1206.69 L1069.3 1206.69 L1069.88 1206.69 L1070.47 1206.69 L1071.06 1206.69 L1071.64 1206.69 L1072.23 1206.69 L1072.81 1206.69 L1073.4 1206.69 L1073.99 1206.69 L1074.57 1206.69 L1075.16 1206.69 L1075.75 1206.69 L1076.33 1206.69 L1076.92 1206.69 L1077.51 1206.69 L1078.09 1206.69 L1078.68 1206.69 L1079.26 1206.69 L1079.85 1206.69 L1080.44 1206.69 L1081.02 1206.69 L1081.61 1206.69 L1082.2 1206.69 L1082.78 1206.69 L1083.37 1206.69 L1083.96 1206.69 L1084.54 1206.69 L1085.13 1206.69 L1085.72 1206.69 L1086.3 1206.69 L1086.89 1206.69 L1087.47 1206.69 L1088.06 1206.69 L1088.65 1206.69 L1089.23 1206.69 L1089.82 1206.69 L1090.41 1206.69 L1090.99 1206.69 L1091.58 1206.69 L1092.17 1206.69 L1092.75 1206.69 L1093.34 1206.69 L1093.93 1206.69 L1094.51 1206.69 L1095.1 1206.69 L1095.68 1206.69 L1096.27 1206.69 L1096.86 1206.69 L1097.44 1206.69 L1098.03 1206.69 L1098.62 1206.69 L1099.2 1206.69 L1099.79 1206.69 L1100.38 1206.69 L1100.96 1206.69 L1101.55 1206.69 L1102.14 1206.69 L1102.72 1206.69 L1103.31 1206.69 L1103.89 1206.69 L1104.48 1206.69 L1105.07 1206.69 L1105.65 1206.69 L1106.24 1206.69 L1106.83 1206.69 L1107.41 1206.69 L1108 1206.69 L1108.59 1206.69 L1109.17 1206.69 L1109.76 1206.69 L1110.34 1206.69 L1110.93 1206.69 L1111.52 1206.69 L1112.1 1206.69 L1112.69 1206.69 L1113.28 1206.69 L1113.86 1206.69 L1114.45 1206.69 L1115.04 1206.69 L1115.62 1206.69 L1116.21 1206.69 L1116.8 1206.69 L1117.38 1206.69 L1117.97 1206.69 L1118.55 1206.69 L1119.14 1206.69 L1119.73 1206.69 L1120.31 1206.69 L1120.9 1206.69 L1121.49 1206.69 L1122.07 1206.69 L1122.66 1206.69 L1123.25 1206.69 L1123.83 1206.69 L1124.42 1206.69 L1125.01 1206.69 L1125.59 1206.69 L1126.18 1206.69 L1126.76 1206.69 L1127.35 1206.69 L1127.94 1206.69 L1128.52 1206.69 L1129.11 1206.69 L1129.7 1206.69 L1130.28 1206.69 L1130.87 1206.69 L1131.46 1206.69 L1132.04 1206.69 L1132.63 1206.69 L1133.21 1206.69 L1133.8 1206.69 L1134.39 1206.69 L1134.97 1206.69 L1135.56 1206.69 L1136.15 1206.69 L1136.73 1206.69 L1137.32 1206.69 L1137.91 1206.69 L1138.49 1206.69 L1139.08 1206.69 L1139.67 1206.69 L1140.25 1206.69 L1140.84 1206.69 L1141.42 1206.69 L1142.01 1206.69 L1142.6 1206.69 L1143.18 1206.69 L1143.77 1206.69 L1144.36 1206.69 L1144.94 1206.69 L1145.53 1206.69 L1146.12 1206.69 L1146.7 1206.69 L1147.29 1206.69 L1147.88 1206.69 L1148.46 1206.69 L1149.05 1206.69 L1149.63 1206.69 L1150.22 1206.69 L1150.81 1206.69 L1151.39 1206.69 L1151.98 1206.69 L1152.57 1206.69 L1153.15 1206.69 L1153.74 1206.69 L1154.33 1206.69 L1154.91 1206.69 L1155.5 1206.69 L1156.09 1206.69 L1156.67 1206.69 L1157.26 1206.69 L1157.84 1206.69 L1158.43 1206.69 L1159.02 1206.69 L1159.6 1206.69 L1160.19 1206.69 L1160.78 1206.69 L1161.36 1206.69 L1161.95 1206.69 L1162.54 1206.69 L1163.12 1206.69 L1163.71 1206.69 L1164.29 1206.69 L1164.88 1206.69 L1165.47 1206.69 L1166.05 1206.69 L1166.64 1206.69 L1167.23 1206.69 L1167.81 1206.69 L1168.4 1206.69 L1168.99 1206.69 L1169.57 1206.69 L1170.16 1206.69 L1170.75 1206.69 L1171.33 1206.69 L1171.92 1206.69 L1172.5 1206.69 L1173.09 1206.69 L1173.68 1206.69 L1174.26 1206.69 L1174.85 1206.69 L1175.44 1206.69 L1176.02 1206.69 L1176.61 1206.69 L1177.2 1206.69 L1177.78 1206.69 L1178.37 1206.69 L1178.96 1206.69 L1179.54 1206.69 L1180.13 1206.69 L1180.71 1206.69 L1181.3 1206.69 L1181.89 1206.69 L1182.47 1206.69 L1183.06 1206.69 L1183.65 1206.69 L1184.23 1206.69 L1184.82 1206.69 L1185.41 1206.69 L1185.99 1206.69 L1186.58 1206.69 L1187.16 1206.69 L1187.75 1206.69 L1188.34 1206.69 L1188.92 1206.69 L1189.51 1206.69 L1190.1 1206.69 L1190.68 1206.69 L1191.27 1206.69 L1191.86 1206.69 L1192.44 1206.69 L1193.03 1206.69 L1193.62 1206.69 L1194.2 1206.69 L1194.79 1206.69 L1195.37 1206.69 L1195.96 1206.69 L1196.55 1206.69 L1197.13 1206.69 L1197.72 1206.69 L1198.31 1206.69 L1198.89 1206.69 L1199.48 1206.69 L1200.07 1206.69 L1200.65 1206.69 L1201.24 1206.69 L1201.83 1206.69 L1202.41 1206.69 L1203 1206.69 L1203.58 1206.69 L1204.17 1206.69 L1204.76 1206.69 L1205.34 1206.69 L1205.93 1206.69 L1206.52 1206.69 L1207.1 1206.69 L1207.69 1206.69 L1208.28 1206.69 L1208.86 1206.69 L1209.45 1206.69 L1210.03 1206.69 L1210.62 1206.69 L1211.21 1206.69 L1211.79 1206.69 L1212.38 1206.69 L1212.97 1206.69 L1213.55 1206.69 L1214.14 1206.69 L1214.73 1206.69 L1215.31 1206.69 L1215.9 1206.69 L1216.49 1206.69 L1217.07 1206.69 L1217.66 1206.69 L1218.24 1206.69 L1218.83 1206.69 L1219.42 1206.69 L1220 1206.69 L1220.59 1206.69 L1221.18 1206.69 L1221.76 1206.69 L1222.35 1206.69 L1222.94 1206.69 L1223.52 1206.69 L1224.11 1206.69 L1224.7 1206.69 L1225.28 1206.69 L1225.87 1206.69 L1226.45 1206.69 L1227.04 1206.69 L1227.63 1206.69 L1228.21 1206.69 L1228.8 1206.69 L1229.39 1206.69 L1229.97 1206.69 L1230.56 1206.69 L1231.15 1206.69 L1231.73 1206.69 L1232.32 1206.69 L1232.91 1206.69 L1233.49 1206.69 L1234.08 1206.69 L1234.66 1206.69 L1235.25 1206.69 L1235.84 1206.69 L1236.42 1206.69 L1237.01 1206.69 L1237.6 1206.69 L1238.18 1206.69 L1238.77 1206.69 L1239.36 1206.69 L1239.94 1206.69 L1240.53 1206.69 L1241.11 1206.69 L1241.7 1206.69 L1242.29 1206.69 L1242.87 1206.69 L1243.46 1206.69 L1244.05 1206.69 L1244.63 1206.69 L1245.22 1206.69 L1245.81 1206.69 L1246.39 1206.69 L1246.98 1206.69 L1247.57 1206.69 L1248.15 1206.69 L1248.74 1206.69 L1249.32 1206.69 L1249.91 1206.69 L1250.5 1206.69 L1251.08 1206.69 L1251.67 1206.69 L1252.26 1206.69 L1252.84 1206.69 L1253.43 1206.69 L1254.02 1206.69 L1254.6 1206.69 L1255.19 1206.69 L1255.78 1206.69 L1256.36 1206.69 L1256.95 1206.69 L1257.53 1206.69 L1258.12 1206.69 L1258.71 1206.69 L1259.29 1206.69 L1259.88 1206.69 L1260.47 1206.69 L1261.05 1206.69 L1261.64 1206.69 L1262.23 1206.69 L1262.81 1206.69 L1263.4 1206.69 L1263.98 1206.69 L1264.57 1206.69 L1265.16 1206.69 L1265.74 1206.69 L1266.33 1206.69 L1266.92 1206.69 L1267.5 1206.69 L1268.09 1206.69 L1268.68 1206.69 L1269.26 1206.69 L1269.85 1206.69 L1270.44 1206.69 L1271.02 1206.69 L1271.61 1206.69 L1272.19 1206.69 L1272.78 1206.69 L1273.37 1206.69 L1273.95 1206.69 L1274.54 1206.69 L1275.13 1206.69 L1275.71 1206.69 L1276.3 1206.69 L1276.89 1206.69 L1277.47 1206.69 L1278.06 1206.69 L1278.65 1206.69 L1279.23 1206.69 L1279.82 1206.69 L1280.4 1206.69 L1280.99 1206.69 L1281.58 1206.69 L1282.16 1206.69 L1282.75 1206.69 L1283.34 1206.69 L1283.92 1206.69 L1284.51 1206.69 L1285.1 1206.69 L1285.68 1206.69 L1286.27 1206.69 L1286.86 1206.69 L1287.44 1206.69 L1288.03 1206.69 L1288.61 1206.69 L1289.2 1206.69 L1289.79 1206.69 L1290.37 1206.69 L1290.96 1206.69 L1291.55 1206.69 L1292.13 1206.69 L1292.72 1206.69 L1293.31 1206.69 L1293.89 1206.69 L1294.48 1206.69 L1295.06 1206.69 L1295.65 1206.69 L1296.24 1206.69 L1296.82 1206.69 L1297.41 1206.69 L1298 1206.69 L1298.58 1206.69 L1299.17 1206.69 L1299.76 1206.69 L1300.34 1206.69 L1300.93 1206.69 L1301.52 1206.69 L1302.1 1206.69 L1302.69 1206.69 L1303.27 1206.69 L1303.86 1206.69 L1304.45 1206.69 L1305.03 1206.69 L1305.62 1206.69 L1306.21 1206.69 L1306.79 1206.69 L1307.38 1206.69 L1307.97 1206.69 L1308.55 1206.69 L1309.14 1206.69 L1309.73 1206.69 L1310.31 1206.69 L1310.9 1206.69 L1311.48 1206.69 L1312.07 1206.69 L1312.66 1206.69 L1313.24 1206.69 L1313.83 1206.69 L1314.42 1206.69 L1315 1206.69 L1315.59 1206.69 L1316.18 1206.69 L1316.76 1206.69 L1317.35 1206.69 L1317.93 1206.69 L1318.52 1206.69 L1319.11 1206.69 L1319.69 1206.69 L1320.28 1206.69 L1320.87 1206.69 L1321.45 1206.69 L1322.04 1206.69 L1322.63 1206.69 L1323.21 1206.69 L1323.8 1206.69 L1324.39 1206.69 L1324.97 1206.69 L1325.56 1206.69 L1326.14 1206.69 L1326.73 1206.69 L1327.32 1206.69 L1327.9 1206.69 L1328.49 1206.69 L1329.08 1206.69 L1329.66 1206.69 L1330.25 1206.69 L1330.84 1206.69 L1331.42 1206.69 L1332.01 1206.69 L1332.6 1206.69 L1333.18 1206.69 L1333.77 1206.69 L1334.35 1206.69 L1334.94 1206.69 L1335.53 1206.69 L1336.11 1206.69 L1336.7 1206.69 L1337.29 1206.69 L1337.87 1206.69 L1338.46 1206.69 L1339.05 1206.69 L1339.63 1206.69 L1340.22 1206.69 L1340.8 1206.69 L1341.39 1206.69 L1341.98 1206.69 L1342.56 1206.69 L1343.15 1206.69 L1343.74 1206.69 L1344.32 1206.69 L1344.91 1206.69 L1345.5 1206.69 L1346.08 1206.69 L1346.67 1206.69 L1347.26 1206.69 L1347.84 1206.69 L1348.43 1206.69 L1349.01 1206.69 L1349.6 1206.69 L1350.19 1206.69 L1350.77 1206.69 L1351.36 1206.69 L1351.95 1206.69 L1352.53 1206.69 L1353.12 1206.69 L1353.71 1206.69 L1354.29 1206.69 L1354.88 1206.69 L1355.47 1206.69 L1356.05 1206.69 L1356.64 1206.69 L1357.22 1206.69 L1357.81 1206.69 L1358.4 1206.69 L1358.98 1206.69 L1359.57 1206.69 L1360.16 1206.69 L1360.74 1206.69 L1361.33 1206.69 L1361.92 1206.69 L1362.5 1206.69 L1363.09 1206.69 L1363.68 1206.69 L1364.26 1206.69 L1364.85 1206.69 L1365.43 1206.69 L1366.02 1206.69 L1366.61 1206.69 L1367.19 1206.69 L1367.78 1206.69 L1368.37 1206.69 L1368.95 1206.69 L1369.54 1206.69 L1370.13 1206.69 L1370.71 1206.69 L1371.3 1206.69 L1371.88 1206.69 L1372.47 1206.69 L1373.06 1206.69 L1373.64 1206.69 L1374.23 1206.69 L1374.82 1206.69 L1375.4 1206.69 L1375.99 1206.69 L1376.58 1206.69 L1377.16 1206.69 L1377.75 1206.69 L1378.34 1206.69 L1378.92 1206.69 L1379.51 1206.69 L1380.09 1206.69 L1380.68 1206.69 L1381.27 1206.69 L1381.85 1206.69 L1382.44 1206.69 L1383.03 1206.69 L1383.61 1206.69 L1384.2 1206.69 L1384.79 1206.69 L1385.37 1206.69 L1385.96 1206.69 L1386.55 1206.69 L1387.13 1206.69 L1387.72 1206.69 L1388.3 1206.69 L1388.89 1206.69 L1389.48 1206.69 L1390.06 1206.69 L1390.65 1206.69 L1391.24 1206.69 L1391.82 1206.69 L1392.41 1206.69 L1393 1206.69 L1393.58 1206.69 L1394.17 1206.69 L1394.75 1206.69 L1395.34 1206.69 L1395.93 1206.69 L1396.51 1206.69 L1397.1 1206.69 L1397.69 1206.69 L1398.27 1206.69 L1398.86 1206.69 L1399.45 1206.69 L1400.03 1206.69 L1400.62 1206.69 L1401.21 1206.69 L1401.79 1206.69 L1402.38 1206.69 L1402.96 1206.69 L1403.55 1206.69 L1404.14 1206.69 L1404.72 1206.69 L1405.31 1206.69 L1405.9 1206.69 L1406.48 1206.69 L1407.07 1206.69 L1407.66 1206.69 L1408.24 1206.69 L1408.83 1206.69 L1409.42 1206.69 L1410 1206.69 L1410.59 1206.69 L1411.17 1206.69 L1411.76 1206.69 L1412.35 1206.69 L1412.93 1206.69 L1413.52 1206.69 L1414.11 1206.69 L1414.69 1206.69 L1415.28 1206.69 L1415.87 1206.69 L1416.45 1206.69 L1417.04 1206.69 L1417.63 1206.69 L1418.21 1206.69 L1418.8 1206.69 L1419.38 1206.69 L1419.97 1206.69 L1420.56 1206.69 L1421.14 1206.69 L1421.73 1206.69 L1422.32 1206.69 L1422.9 1206.69 L1423.49 1206.69 L1424.08 1206.69 L1424.66 1206.69 L1425.25 1206.69 L1425.83 1206.69 L1426.42 1206.69 L1427.01 1206.69 L1427.59 1206.69 L1428.18 1206.69 L1428.77 1206.69 L1429.35 1206.69 L1429.94 1206.69 L1430.53 1206.69 L1431.11 1206.69 L1431.7 1206.69 L1432.29 1206.69 L1432.87 1206.69 L1433.46 1206.69 L1434.04 1206.69 L1434.63 1206.69 L1435.22 1206.69 L1435.8 1206.69 L1436.39 1206.69 L1436.98 1206.69 L1437.56 1206.69 L1438.15 1206.69 L1438.74 1206.69 L1439.32 1206.69 L1439.91 1206.69 L1440.5 1206.69 L1441.08 1206.69 L1441.67 1206.69 L1442.25 1206.69 L1442.84 1206.69 L1443.43 1206.69 L1444.01 1206.69 L1444.6 1206.69 L1445.19 1206.69 L1445.77 1206.69 L1446.36 1206.69 L1446.95 1206.69 L1447.53 1206.69 L1448.12 1206.69 L1448.7 1206.69 L1449.29 1206.69 L1449.88 1206.69 L1450.46 1206.69 L1451.05 1206.69 L1451.64 1206.69 L1452.22 1206.69 L1452.81 1206.69 L1453.4 1206.69 L1453.98 1206.69 L1454.57 1206.69 L1455.16 1206.69 L1455.74 1206.69 L1456.33 1206.69 L1456.91 1206.69 L1457.5 1206.69 L1458.09 1206.69 L1458.67 1206.69 L1459.26 1206.69 L1459.85 1206.69 L1460.43 1206.69 L1461.02 1206.69 L1461.61 1206.69 L1462.19 1206.69 L1462.78 1206.69 L1463.37 1206.69 L1463.95 1206.69 L1464.54 1206.69 L1465.12 1206.69 L1465.71 1206.69 L1466.3 1206.69 L1466.88 1206.69 L1467.47 1206.69 L1468.06 1206.69 L1468.64 1206.69 L1469.23 1206.69 L1469.82 1206.69 L1470.4 1206.69 L1470.99 1206.69 L1471.57 1206.69 L1472.16 1206.69 L1472.75 1206.69 L1473.33 1206.69 L1473.92 1206.69 L1474.51 1206.69 L1475.09 1206.69 L1475.68 1206.69 L1476.27 1206.69 L1476.85 1206.69 L1477.44 1206.69 L1478.03 1206.69 L1478.61 1206.69 L1479.2 1206.69 L1479.78 1206.69 L1480.37 1206.69 L1480.96 1206.69 L1481.54 1206.69 L1482.13 1206.69 L1482.72 1206.69 L1483.3 1206.69 L1483.89 1206.69 L1484.48 1206.69 L1485.06 1206.69 L1485.65 1206.69 L1486.24 1206.69 L1486.82 1206.69 L1487.41 1206.69 L1487.99 1206.69 L1488.58 1206.69 L1489.17 1206.69 L1489.75 1206.69 L1490.34 1206.69 L1490.93 1206.69 L1491.51 1206.69 L1492.1 1206.69 L1492.69 1206.69 L1493.27 1206.69 L1493.86 1206.69 L1494.45 1206.69 L1495.03 1206.69 L1495.62 1206.69 L1496.2 1206.69 L1496.79 1206.69 L1497.38 1206.69 L1497.96 1206.69 L1498.55 1206.69 L1499.14 1206.69 L1499.72 1206.69 L1500.31 1206.69 L1500.9 1206.69 L1501.48 1206.69 L1502.07 1206.69 L1502.65 1206.69 L1503.24 1206.69 L1503.83 1206.69 L1504.41 1206.69 L1505 1206.69 L1505.59 1206.69 L1506.17 1206.69 L1506.76 1206.69 L1507.35 1206.69 L1507.93 1206.69 L1508.52 1206.69 L1509.11 1206.69 L1509.69 1206.69 L1510.28 1206.69 L1510.86 1206.69 L1511.45 1206.69 L1512.04 1206.69 L1512.62 1206.69 L1513.21 1206.69 L1513.8 1206.69 L1514.38 1206.69 L1514.97 1206.69 L1515.56 1206.69 L1516.14 1206.69 L1516.73 1206.69 L1517.32 1206.69 L1517.9 1206.69 L1518.49 1206.69 L1519.07 1206.69 L1519.66 1206.69 L1520.25 1206.69 L1520.83 1206.69 L1521.42 1206.69 L1522.01 1206.69 L1522.59 1206.69 L1523.18 1206.69 L1523.77 1206.69 L1524.35 1206.69 L1524.94 1206.69 L1525.52 1206.69 L1526.11 1206.69 L1526.7 1206.69 L1527.28 1206.69 L1527.87 1206.69 L1528.46 1206.69 L1529.04 1206.69 L1529.63 1206.69 L1530.22 1206.69 L1530.8 1206.69 L1531.39 1206.69 L1531.98 1206.69 L1532.56 1206.69 L1533.15 1206.69 L1533.73 1206.69 L1534.32 1206.69 L1534.91 1206.69 L1535.49 1206.69 L1536.08 1206.69 L1536.67 1206.69 L1537.25 1206.69 L1537.84 1206.69 L1538.43 1206.69 L1539.01 1206.69 L1539.6 1206.69 L1540.19 1206.69 L1540.77 1206.69 L1541.36 1206.69 L1541.94 1206.69 L1542.53 1206.69 L1543.12 1206.69 L1543.7 1206.69 L1544.29 1206.69 L1544.88 1206.69 L1545.46 1206.69 L1546.05 1206.69 L1546.64 1206.69 L1547.22 1206.69 L1547.81 1206.69 L1548.4 1206.69 L1548.98 1206.69 L1549.57 1206.69 L1550.15 1206.69 L1550.74 1206.69 L1551.33 1206.69 L1551.91 1206.69 L1552.5 1206.69 L1553.09 1206.69 L1553.67 1206.69 L1554.26 1206.69 L1554.85 1206.69 L1555.43 1206.69 L1556.02 1206.69 L1556.6 1206.69 L1557.19 1206.69 L1557.78 1206.69 L1558.36 1206.69 L1558.95 1206.69 L1559.54 1206.69 L1560.12 1206.69 L1560.71 1206.69 L1561.3 1206.69 L1561.88 1206.69 L1562.47 1206.69 L1563.06 1206.69 L1563.64 1206.69 L1564.23 1206.69 L1564.81 1206.69 L1565.4 1206.69 L1565.99 1206.69 L1566.57 1206.69 L1567.16 1206.69 L1567.75 1206.69 L1568.33 1206.69 L1568.92 1206.69 L1569.51 1206.69 L1570.09 1206.69 L1570.68 1206.69 L1571.27 1206.69 L1571.85 1206.69 L1572.44 1206.69 L1573.02 1206.69 L1573.61 1206.69 L1574.2 1206.69 L1574.78 1206.69 L1575.37 1206.69 L1575.96 1206.69 L1576.54 1206.69 L1577.13 1206.69 L1577.72 1206.69 L1578.3 1206.69 L1578.89 1206.69 L1579.47 1206.69 L1580.06 1206.69 L1580.65 1206.69 L1581.23 1206.69 L1581.82 1206.69 L1582.41 1206.69 L1582.99 1206.69 L1583.58 1206.69 L1584.17 1206.69 L1584.75 1206.69 L1585.34 1206.69 L1585.93 1206.69 L1586.51 1206.69 L1587.1 1206.69 L1587.68 1206.69 L1588.27 1206.69 L1588.86 1206.69 L1589.44 1206.69 L1590.03 1206.69 L1590.62 1206.69 L1591.2 1206.69 L1591.79 1206.69 L1592.38 1206.69 L1592.96 1206.69 L1593.55 1206.69 L1594.14 1206.69 L1594.72 1206.69 L1595.31 1206.69 L1595.89 1206.69 L1596.48 1206.69 L1597.07 1206.69 L1597.65 1206.69 L1598.24 1206.69 L1598.83 1206.69 L1599.41 1206.69 L1600 1206.69 L1600.59 1206.69 L1601.17 1206.69 L1601.76 1206.69 L1602.34 1206.69 L1602.93 1206.69 L1603.52 1206.69 L1604.1 1206.69 L1604.69 1206.69 L1605.28 1206.69 L1605.86 1206.69 L1606.45 1206.69 L1607.04 1206.69 L1607.62 1206.69 L1608.21 1206.69 L1608.8 1206.69 L1609.38 1206.69 L1609.97 1206.69 L1610.55 1206.69 L1611.14 1206.69 L1611.73 1206.69 L1612.31 1206.69 L1612.9 1206.69 L1613.49 1206.69 L1614.07 1206.69 L1614.66 1206.69 L1615.25 1206.69 L1615.83 1206.69 L1616.42 1206.69 L1617.01 1206.69 L1617.59 1206.69 L1618.18 1206.69 L1618.76 1206.69 L1619.35 1206.69 L1619.94 1206.69 L1620.52 1206.69 L1621.11 1206.69 L1621.7 1206.69 L1622.28 1206.69 L1622.87 1206.69 L1623.46 1206.69 L1624.04 1206.69 L1624.63 1206.69 L1625.22 1206.69 L1625.8 1206.69 L1626.39 1206.69 L1626.97 1206.69 L1627.56 1206.69 L1628.15 1206.69 L1628.73 1206.69 L1629.32 1206.69 L1629.91 1206.69 L1630.49 1206.69 L1631.08 1206.69 L1631.67 1206.69 L1632.25 1206.69 L1632.84 1206.69 L1633.42 1206.69 L1634.01 1206.69 L1634.6 1206.69 L1635.18 1206.69 L1635.77 1206.69 L1636.36 1206.69 L1636.94 1206.69 L1637.53 1206.69 L1638.12 1206.69 L1638.7 1206.69 L1639.29 1206.69 L1639.88 1206.69 L1640.46 1206.69 L1641.05 1206.69 L1641.63 1206.69 L1642.22 1206.69 L1642.81 1206.69 L1643.39 1206.69 L1643.98 1206.69 L1644.57 1206.69 L1645.15 1206.69 L1645.74 1206.69 L1646.33 1206.69 L1646.91 1206.69 L1647.5 1206.69 L1648.09 1206.69 L1648.67 1206.69 L1649.26 1206.69 L1649.84 1206.69 L1650.43 1206.69 L1651.02 1206.69 L1651.6 1206.69 L1652.19 1206.69 L1652.78 1206.69 L1653.36 1206.69 L1653.95 1206.69 L1654.54 1206.69 L1655.12 1206.69 L1655.71 1206.69 L1656.29 1206.69 L1656.88 1206.69 L1657.47 1206.69 L1658.05 1206.69 L1658.64 1206.69 L1659.23 1206.69 L1659.81 1206.69 L1660.4 1206.69 L1660.99 1206.69 L1661.57 1206.69 L1662.16 1206.69 L1662.75 1206.69 L1663.33 1206.69 L1663.92 1206.69 L1664.5 1206.69 L1665.09 1206.69 L1665.68 1206.69 L1666.26 1206.69 L1666.85 1206.69 L1667.44 1206.69 L1668.02 1206.69 L1668.61 1206.69 L1669.2 1206.69 L1669.78 1206.69 L1670.37 1206.69 L1670.96 1206.69 L1671.54 1206.69 L1672.13 1206.69 L1672.71 1206.69 L1673.3 1206.69 L1673.89 1206.69 L1674.47 1206.69 L1675.06 1206.69 L1675.65 1206.69 L1676.23 1206.69 L1676.82 1206.69 L1677.41 1206.69 L1677.99 1206.69 L1678.58 1206.69 L1679.17 1206.69 L1679.75 1206.69 L1680.34 1206.69 L1680.92 1206.69 L1681.51 1206.69 L1682.1 1206.69 L1682.68 1206.69 L1683.27 1206.69 L1683.86 1206.69 L1684.44 1206.69 L1685.03 1206.69 L1685.62 1206.69 L1686.2 1206.69 L1686.79 1206.69 L1687.37 1206.69 L1687.96 1206.69 L1688.55 1206.69 L1689.13 1206.69 L1689.72 1206.69 L1690.31 1206.69 L1690.89 1206.69 L1691.48 1206.69 L1692.07 1206.69 L1692.65 1206.69 L1693.24 1206.69 L1693.83 1206.69 L1694.41 1206.69 L1695 1206.69 L1695.58 1206.69 L1696.17 1206.69 L1696.76 1206.69 L1697.34 1206.69 L1697.93 1206.69 L1698.52 1206.69 L1699.1 1206.69 L1699.69 1206.69 L1700.28 1206.69 L1700.86 1206.69 L1701.45 1206.69 L1702.04 1206.69 L1702.62 1206.69 L1703.21 1206.69 L1703.79 1206.69 L1704.38 1206.69 L1704.97 1206.69 L1705.55 1206.69 L1706.14 1206.69 L1706.73 1206.69 L1707.31 1206.69 L1707.9 1206.69 L1708.49 1206.69 L1709.07 1206.69 L1709.66 1206.69 L1710.24 1206.69 L1710.83 1206.69 L1711.42 1206.69 L1712 1206.69 L1712.59 1206.69 L1713.18 1206.69 L1713.76 1206.69 L1714.35 1206.69 L1714.94 1206.69 L1715.52 1206.69 L1716.11 1206.69 L1716.7 1206.69 L1717.28 1206.69 L1717.87 1206.69 L1718.45 1206.69 L1719.04 1206.69 L1719.63 1206.69 L1720.21 1206.69 L1720.8 1206.69 L1721.39 1206.69 L1721.97 1206.69 L1722.56 1206.69 L1723.15 1206.69 L1723.73 1206.69 L1724.32 1206.69 L1724.91 1206.69 L1725.49 1206.69 L1726.08 1206.69 L1726.66 1206.69 L1727.25 1206.69 L1727.84 1206.69 L1728.42 1206.69 L1729.01 1206.69 L1729.6 1206.69 L1730.18 1206.69 L1730.77 1206.69 L1731.36 1206.69 L1731.94 1206.69 L1732.53 1206.69 L1733.11 1206.69 L1733.7 1206.69 L1734.29 1206.69 L1734.87 1206.69 L1735.46 1206.69 L1736.05 1206.69 L1736.63 1206.69 L1737.22 1206.69 L1737.81 1206.69 L1738.39 1206.69 L1738.98 1206.69 L1739.57 1206.69 L1740.15 1206.69 L1740.74 1206.69 L1741.32 1206.69 L1741.91 1206.69 L1742.5 1206.69 L1743.08 1206.69 L1743.67 1206.69 L1744.26 1206.69 L1744.84 1206.69 L1745.43 1206.69 L1746.02 1206.69 L1746.6 1206.69 L1747.19 1206.69 L1747.78 1206.69 L1748.36 1206.69 L1748.95 1206.69 L1749.53 1206.69 L1750.12 1206.69 L1750.71 1206.69 L1751.29 1206.69 L1751.88 1206.69 L1752.47 1206.69 L1753.05 1206.69 L1753.64 1206.69 L1754.23 1206.69 L1754.81 1206.69 L1755.4 1206.69 L1755.99 1206.69 L1756.57 1206.69 L1757.16 1206.69 L1757.74 1206.69 L1758.33 1206.69 L1758.92 1206.69 L1759.5 1206.69 L1760.09 1206.69 L1760.68 1206.69 L1761.26 1206.69 L1761.85 1206.69 L1762.44 1206.69 L1763.02 1206.69 L1763.61 1206.69 L1764.19 1206.69 L1764.78 1206.69 L1765.37 1206.69 L1765.95 1206.69 L1766.54 1206.69 L1767.13 1206.69 L1767.71 1206.69 L1768.3 1206.69 L1768.89 1206.69 L1769.47 1206.69 L1770.06 1206.69 L1770.65 1206.69 L1771.23 1206.69 L1771.82 1206.69 L1772.4 1206.69 L1772.99 1206.69 L1773.58 1206.69 L1774.16 1206.69 L1774.75 1206.69 L1775.34 1206.69 L1775.92 1206.69 L1776.51 1206.69 L1777.1 1206.69 L1777.68 1206.69 L1778.27 1206.69 L1778.86 1206.69 L1779.44 1206.69 L1780.03 1206.69 L1780.61 1206.69 L1781.2 1206.69 L1781.79 1206.69 L1782.37 1206.69 L1782.96 1206.69 L1783.55 1206.69 L1784.13 1206.69 L1784.72 1206.69 L1785.31 1206.69 L1785.89 1206.69 L1786.48 1206.69 L1787.06 1206.69 L1787.65 1206.69 L1788.24 1206.69 L1788.82 1206.69 L1789.41 1206.69 L1790 1206.69 L1790.58 1206.69 L1791.17 1206.69 L1791.76 1206.69 L1792.34 1206.69 L1792.93 1206.69 L1793.52 1206.69 L1794.1 1206.69 L1794.69 1206.69 L1795.27 1206.69 L1795.86 1206.69 L1796.45 1206.69 L1797.03 1206.69 L1797.62 1206.69 L1798.21 1206.69 L1798.79 1206.69 L1799.38 1206.69 L1799.97 1206.69 L1800.55 1206.69 L1801.14 1206.69 L1801.73 1206.69 L1802.31 1206.69 L1802.9 1206.69 L1803.48 1206.69 L1804.07 1206.69 L1804.66 1206.69 L1805.24 1206.69 L1805.83 1206.69 L1806.42 1206.69 L1807 1206.69 L1807.59 1206.69 L1808.18 1206.69 L1808.76 1206.69 L1809.35 1206.69 L1809.94 1206.69 L1810.52 1206.69 L1811.11 1206.69 L1811.69 1206.69 L1812.28 1206.69 L1812.87 1206.69 L1813.45 1206.69 L1814.04 1206.69 L1814.63 1206.69 L1815.21 1206.69 L1815.8 1206.69 L1816.39 1206.69 L1816.97 1206.69 L1817.56 1206.69 L1818.14 1206.69 L1818.73 1206.69 L1819.32 1206.69 L1819.9 1206.69 L1820.49 1206.69 L1821.08 1206.69 L1821.66 1206.69 L1822.25 1206.69 L1822.84 1206.69 L1823.42 1206.69 L1824.01 1206.69 L1824.6 1206.69 L1825.18 1206.69 L1825.77 1206.69 L1826.35 1206.69 L1826.94 1206.69 L1827.53 1206.69 L1828.11 1206.69 L1828.7 1206.69 L1829.29 1206.69 L1829.87 1206.69 L1830.46 1206.69 L1831.05 1206.69 L1831.63 1206.69 L1832.22 1206.69 L1832.81 1206.69 L1833.39 1206.69 L1833.98 1206.69 L1834.56 1206.69 L1835.15 1206.69 L1835.74 1206.69 L1836.32 1206.69 L1836.91 1206.69 L1837.5 1206.69 L1838.08 1206.69 L1838.67 1206.69 L1839.26 1206.69 L1839.84 1206.69 L1840.43 1206.69 L1841.01 1206.69 L1841.6 1206.69 L1842.19 1206.69 L1842.77 1206.69 L1843.36 1206.69 L1843.95 1206.69 L1844.53 1206.69 L1845.12 1206.69 L1845.71 1206.69 L1846.29 1206.69 L1846.88 1206.69 L1847.47 1206.69 L1848.05 1206.69 L1848.64 1206.69 L1849.22 1206.69 L1849.81 1206.69 L1850.4 1206.69 L1850.98 1206.69 L1851.57 1206.69 L1852.16 1206.69 L1852.74 1206.69 L1853.33 1206.69 L1853.92 1206.69 L1854.5 1206.69 L1855.09 1206.69 L1855.68 1206.69 L1856.26 1206.69 L1856.85 1206.69 L1857.43 1206.69 L1858.02 1206.69 L1858.61 1206.69 L1859.19 1206.69 L1859.78 1206.69 L1860.37 1206.69 L1860.95 1206.69 L1861.54 1206.69 L1862.13 1206.69 L1862.71 1206.69 L1863.3 1206.69 L1863.88 1206.69 L1864.47 1206.69 L1865.06 1206.69 L1865.64 1206.69 L1866.23 1206.69 L1866.82 1206.69 L1867.4 1206.69 L1867.99 1206.69 L1868.58 1206.69 L1869.16 1206.69 L1869.75 1206.69 L1870.34 1206.69 L1870.92 1206.69 L1871.51 1206.69 L1872.09 1206.69 L1872.68 1206.69 L1873.27 1206.69 L1873.85 1206.69 L1874.44 1206.69 L1875.03 1206.69 L1875.61 1206.69 L1876.2 1206.69 L1876.79 1206.69 L1877.37 1206.69 L1877.96 1206.69 L1878.55 1206.69 L1879.13 1206.69 L1879.72 1206.69 L1880.3 1206.69 L1880.89 1206.69 L1881.48 1206.69 L1882.06 1206.69 L1882.65 1206.69 L1883.24 1206.69 L1883.82 1206.69 L1884.41 1206.69 L1885 1206.69 L1885.58 1206.69 L1886.17 1206.69 L1886.76 1206.69 L1887.34 1206.69 L1887.93 1206.69 L1888.51 1206.69 L1889.1 1206.69 L1889.69 1206.69 L1890.27 1206.69 L1890.86 1206.69 L1891.45 1206.69 L1892.03 1206.69 L1892.62 1206.69 L1893.21 1206.69 L1893.79 1206.69 L1894.38 1206.69 L1894.96 1206.69 L1895.55 1206.69 L1896.14 1206.69 L1896.72 1206.69 L1897.31 1206.69 L1897.9 1206.69 L1898.48 1206.69 L1899.07 1206.69 L1899.66 1206.69 L1900.24 1206.69 L1900.83 1206.69 L1901.42 1206.69 L1902 1206.69 L1902.59 1206.69 L1903.17 1206.69 L1903.76 1206.69 L1904.35 1206.69 L1904.93 1206.69 L1905.52 1206.69 L1906.11 1206.69 L1906.69 1206.69 L1907.28 1206.69 L1907.87 1206.69 L1908.45 1206.69 L1909.04 1206.69 L1909.63 1206.69 L1910.21 1206.69 L1910.8 1206.69 L1911.38 1206.69 L1911.97 1206.69 L1912.56 1206.69 L1913.14 1206.69 L1913.73 1206.69 L1914.32 1206.69 L1914.9 1206.69 L1915.49 1206.69 L1916.08 1206.69 L1916.66 1206.69 L1917.25 1206.69 L1917.83 1206.69 L1918.42 1206.69 L1919.01 1206.69 L1919.59 1206.69 L1920.18 1206.69 L1920.77 1206.69 L1921.35 1206.69 L1921.94 1206.69 L1922.53 1206.69 L1923.11 1206.69 L1923.7 1206.69 L1924.29 1206.69 L1924.87 1206.69 L1925.46 1206.69 L1926.04 1206.69 L1926.63 1206.69 L1927.22 1206.69 L1927.8 1206.69 L1928.39 1206.69 L1928.98 1206.69 L1929.56 1206.69 L1930.15 1206.69 L1930.74 1206.69 L1931.32 1206.69 L1931.91 1206.69 L1932.5 1206.69 L1933.08 1206.69 L1933.67 1206.69 L1934.25 1206.69 L1934.84 1206.69 L1935.43 1206.69 L1936.01 1206.69 L1936.6 1206.69 L1937.19 1206.69 L1937.77 1206.69 L1938.36 1206.69 L1938.95 1206.69 L1939.53 1206.69 L1940.12 1206.69 L1940.71 1206.69 L1941.29 1206.69 L1941.88 1206.69 L1942.46 1206.69 L1943.05 1206.69 L1943.64 1206.69 L1944.22 1206.69 L1944.81 1206.69 L1945.4 1206.69 L1945.98 1206.69 L1946.57 1206.69 L1947.16 1206.69 L1947.74 1206.69 L1948.33 1206.69 L1948.91 1206.69 L1949.5 1206.69 L1950.09 1206.69 L1950.67 1206.69 L1951.26 1206.69 L1951.85 1206.69 L1952.43 1206.69 L1953.02 1206.69 L1953.61 1206.69 L1954.19 1206.69 L1954.78 1206.69 L1955.37 1206.69 L1955.95 1206.69 L1956.54 1206.69 L1957.12 1206.69 L1957.71 1206.69 L1958.3 1206.69 L1958.88 1206.69 L1959.47 1206.69 L1960.06 1206.69 L1960.64 1206.69 L1961.23 1206.69 L1961.82 1206.69 L1962.4 1206.69 L1962.99 1206.69 L1963.58 1206.69 L1964.16 1206.69 L1964.75 1206.69 L1965.33 1206.69 L1965.92 1206.69 L1966.51 1206.69 L1967.09 1206.69 L1967.68 1206.69 L1968.27 1206.69 L1968.85 1206.69 L1969.44 1206.69 L1970.03 1206.69 L1970.61 1206.69 L1971.2 1206.69 L1971.78 1206.69 L1972.37 1206.69 L1972.96 1206.69 L1973.54 1206.69 L1974.13 1206.69 L1974.72 1206.69 L1975.3 1206.69 L1975.89 1206.69 L1976.48 1206.69 L1977.06 1206.69 L1977.65 1206.69 L1978.24 1206.69 L1978.82 1206.69 L1979.41 1206.69 L1979.99 1206.69 L1980.58 1206.69 L1981.17 1206.69 L1981.75 1206.69 L1982.34 1206.69 L1982.93 1206.69 L1983.51 1206.69 L1984.1 1206.69 L1984.69 1206.69 L1985.27 1206.69 L1985.86 1206.69 L1986.45 1206.69 L1987.03 1206.69 L1987.62 1206.69 L1988.2 1206.69 L1988.79 1206.69 L1989.38 1206.69 L1989.96 1206.69 L1990.55 1206.69 L1991.14 1206.69 L1991.72 1206.69 L1992.31 1206.69 L1992.9 1206.69 L1993.48 1206.69 L1994.07 1206.69 L1994.65 1206.69 L1995.24 1206.69 L1995.83 1206.69 L1996.41 1206.69 L1997 1206.69 L1997.59 1206.69 L1998.17 1206.69 L1998.76 1206.69 L1999.35 1206.69 L1999.93 1206.69 L2000.52 1206.69 L2001.11 1206.69 L2001.69 1206.69 L2002.28 1206.69 L2002.86 1206.69 L2003.45 1206.69 L2004.04 1206.69 L2004.62 1206.69 L2005.21 1206.69 L2005.8 1206.69 L2006.38 1206.69 L2006.97 1206.69 L2007.56 1206.69 L2008.14 1206.69 L2008.73 1206.69 L2009.32 1206.69 L2009.9 1206.69 L2010.49 1206.69 L2011.07 1206.69 L2011.66 1206.69 L2012.25 1206.69 L2012.83 1206.69 L2013.42 1206.69 L2014.01 1206.69 L2014.59 1206.69 L2015.18 1206.69 L2015.77 1206.69 L2016.35 1206.69 L2016.94 1206.69 L2017.53 1206.69 L2018.11 1206.69 L2018.7 1206.69 L2019.28 1206.69 L2019.87 1206.69 L2020.46 1206.69 L2021.04 1206.69 L2021.63 1206.69 L2022.22 1206.69 L2022.8 1206.69 L2023.39 1206.69 L2023.98 1206.69 L2024.56 1206.69 L2025.15 1206.69 L2025.73 1206.69 L2026.32 1206.69 L2026.91 1206.69 L2027.49 1206.69 L2028.08 1206.69 L2028.67 1206.69 L2029.25 1206.69 L2029.84 1206.69 L2030.43 1206.69 L2031.01 1206.69 L2031.6 1206.69 L2032.19 1206.69 L2032.77 1206.69 L2033.36 1206.69 L2033.94 1206.69 L2034.53 1206.69 L2035.12 1206.69 L2035.7 1206.69 L2036.29 1206.69 L2036.88 1206.69 L2037.46 1206.69 L2038.05 1206.69 L2038.64 1206.69 L2039.22 1206.69 L2039.81 1206.69 L2040.4 1206.69 L2040.98 1206.69 L2041.57 1206.69 L2042.15 1206.69 L2042.74 1206.69 L2043.33 1206.69 L2043.91 1206.69 L2044.5 1206.69 L2045.09 1206.69 L2045.67 1206.69 L2046.26 1206.69 L2046.85 1206.69 L2047.43 1206.69 L2048.02 1206.69 L2048.6 1206.69 L2049.19 1206.69 L2049.78 1206.69 L2050.36 1206.69 L2050.95 1206.69 L2051.54 1206.69 L2052.12 1206.69 L2052.71 1206.69 L2053.3 1206.69 L2053.88 1206.69 L2054.47 1206.69 L2055.06 1206.69 L2055.64 1206.69 L2056.23 1206.69 L2056.81 1206.69 L2057.4 1206.69 L2057.99 1206.69 L2058.57 1206.69 L2059.16 1206.69 L2059.75 1206.69 L2060.33 1206.69 L2060.92 1206.69 L2061.51 1206.69 L2062.09 1206.69 L2062.68 1206.69 L2063.27 1206.69 L2063.85 1206.69 L2064.44 1206.69 L2065.02 1206.69 L2065.61 1206.69 L2066.2 1206.69 L2066.78 1206.69 L2067.37 1206.69 L2067.96 1206.69 L2068.54 1206.69 L2069.13 1206.69 L2069.72 1206.69 L2070.3 1206.69 L2070.89 1206.69 L2071.48 1206.69 L2072.06 1206.69 L2072.65 1206.69 L2073.23 1206.69 L2073.82 1206.69 L2074.41 1206.69 L2074.99 1206.69 L2075.58 1206.69 L2076.17 1206.69 L2076.75 1206.69 L2077.34 1206.69 L2077.93 1206.69 L2078.51 1206.69 L2079.1 1206.69 L2079.68 1206.69 L2080.27 1206.69 L2080.86 1206.69 L2081.44 1206.69 L2082.03 1206.69 L2082.62 1206.69 L2083.2 1206.69 L2083.79 1206.69 L2084.38 1206.69 L2084.96 1206.69 L2085.55 1206.69 L2086.14 1206.69 L2086.72 1206.69 L2087.31 1206.69 L2087.89 1206.69 L2088.48 1206.69 L2089.07 1206.69 L2089.65 1206.69 L2090.24 1206.69 L2090.83 1206.69 L2091.41 1206.69 L2092 1206.69 L2092.59 1206.69 L2093.17 1206.69 L2093.76 1206.69 L2094.35 1206.69 L2094.93 1206.69 L2095.52 1206.69 L2096.1 1206.69 L2096.69 1206.69 L2097.28 1206.69 L2097.86 1206.69 L2098.45 1206.69 L2099.04 1206.69 L2099.62 1206.69 L2100.21 1206.69 L2100.8 1206.69 L2101.38 1206.69 L2101.97 1206.69 L2102.55 1206.69 L2103.14 1206.69 L2103.73 1206.69 L2104.31 1206.69 L2104.9 1206.69 L2105.49 1206.69 L2106.07 1206.69 L2106.66 1206.69 L2107.25 1206.69 L2107.83 1206.69 L2108.42 1206.69 L2109.01 1206.69 L2109.59 1206.69 L2110.18 1206.69 L2110.76 1206.69 L2111.35 1206.69 L2111.94 1206.69 L2112.52 1206.69 L2113.11 1206.69 L2113.7 1206.69 L2114.28 1206.69 L2114.87 1206.69 L2115.46 1206.69 L2116.04 1206.69 L2116.63 1206.69 L2117.22 1206.69 L2117.8 1206.69 L2118.39 1206.69 L2118.97 1206.69 L2119.56 1206.69 L2120.15 1206.69 L2120.73 1206.69 L2121.32 1206.69 L2121.91 1206.69 L2122.49 1206.69 L2123.08 1206.69 L2123.67 1206.69 L2124.25 1206.69 L2124.84 1206.69 L2125.42 1206.69 L2126.01 1206.69 L2126.6 1206.69 L2127.18 1206.69 L2127.77 1206.69 L2128.36 1206.69 L2128.94 1206.69 L2129.53 1206.69 L2130.12 1206.69 L2130.7 1206.69 L2131.29 1206.69 L2131.88 1206.69 L2132.46 1206.69 L2133.05 1206.69 L2133.63 1206.69 L2134.22 1206.69 L2134.81 1206.69 L2135.39 1206.69 L2135.98 1206.69 L2136.57 1206.69 L2137.15 1206.69 L2137.74 1206.69 L2138.33 1206.69 L2138.91 1206.69 L2139.5 1206.69 L2140.09 1206.69 L2140.67 1206.69 L2141.26 1206.69 L2141.84 1206.69 L2142.43 1206.69 L2143.02 1206.69 L2143.6 1206.69 L2144.19 1206.69 L2144.78 1206.69 L2145.36 1206.69 L2145.95 1206.69 L2146.54 1206.69 L2147.12 1206.69 L2147.71 1206.69 L2148.3 1206.69 L2148.88 1206.69 L2149.47 1206.69 L2150.05 1206.69 L2150.64 1206.69 L2151.23 1206.69 L2151.81 1206.69 L2152.4 1206.69 L2152.99 1206.69 L2153.57 1206.69 L2154.16 1206.69 L2154.75 1206.69 L2155.33 1206.69 L2155.92 1206.69 L2156.5 1206.69 L2157.09 1206.69 L2157.68 1206.69 L2158.26 1206.69 L2158.26 1206.55 L2157.68 1206.55 L2157.09 1206.55 L2156.5 1206.55 L2155.92 1206.55 L2155.33 1206.55 L2154.75 1206.55 L2154.16 1206.55 L2153.57 1206.55 L2152.99 1206.55 L2152.4 1206.55 L2151.81 1206.55 L2151.23 1206.55 L2150.64 1206.55 L2150.05 1206.55 L2149.47 1206.55 L2148.88 1206.55 L2148.3 1206.55 L2147.71 1206.55 L2147.12 1206.55 L2146.54 1206.55 L2145.95 1206.55 L2145.36 1206.55 L2144.78 1206.55 L2144.19 1206.55 L2143.6 1206.55 L2143.02 1206.55 L2142.43 1206.55 L2141.84 1206.55 L2141.26 1206.55 L2140.67 1206.55 L2140.09 1206.55 L2139.5 1206.55 L2138.91 1206.55 L2138.33 1206.55 L2137.74 1206.55 L2137.15 1206.55 L2136.57 1206.55 L2135.98 1206.55 L2135.39 1206.55 L2134.81 1206.55 L2134.22 1206.55 L2133.63 1206.55 L2133.05 1206.55 L2132.46 1206.55 L2131.88 1206.55 L2131.29 1206.55 L2130.7 1206.55 L2130.12 1206.55 L2129.53 1206.55 L2128.94 1206.55 L2128.36 1206.55 L2127.77 1206.55 L2127.18 1206.55 L2126.6 1206.55 L2126.01 1206.55 L2125.42 1206.55 L2124.84 1206.55 L2124.25 1206.55 L2123.67 1206.55 L2123.08 1206.55 L2122.49 1206.55 L2121.91 1206.55 L2121.32 1206.55 L2120.73 1206.55 L2120.15 1206.55 L2119.56 1206.55 L2118.97 1206.55 L2118.39 1206.55 L2117.8 1206.55 L2117.22 1206.55 L2116.63 1206.55 L2116.04 1206.55 L2115.46 1206.55 L2114.87 1206.55 L2114.28 1206.55 L2113.7 1206.55 L2113.11 1206.55 L2112.52 1206.55 L2111.94 1206.55 L2111.35 1206.55 L2110.76 1206.55 L2110.18 1206.55 L2109.59 1206.55 L2109.01 1206.55 L2108.42 1206.55 L2107.83 1206.55 L2107.25 1206.55 L2106.66 1206.55 L2106.07 1206.55 L2105.49 1206.55 L2104.9 1206.55 L2104.31 1206.55 L2103.73 1206.55 L2103.14 1206.55 L2102.55 1206.55 L2101.97 1206.55 L2101.38 1206.55 L2100.8 1206.55 L2100.21 1206.55 L2099.62 1206.55 L2099.04 1206.55 L2098.45 1206.55 L2097.86 1206.55 L2097.28 1206.55 L2096.69 1206.55 L2096.1 1206.55 L2095.52 1206.55 L2094.93 1206.55 L2094.35 1206.55 L2093.76 1206.55 L2093.17 1206.55 L2092.59 1206.55 L2092 1206.55 L2091.41 1206.55 L2090.83 1206.55 L2090.24 1206.55 L2089.65 1206.55 L2089.07 1206.55 L2088.48 1206.55 L2087.89 1206.55 L2087.31 1206.55 L2086.72 1206.55 L2086.14 1206.55 L2085.55 1206.55 L2084.96 1206.55 L2084.38 1206.55 L2083.79 1206.55 L2083.2 1206.55 L2082.62 1206.55 L2082.03 1206.55 L2081.44 1206.55 L2080.86 1206.55 L2080.27 1206.55 L2079.68 1206.55 L2079.1 1206.55 L2078.51 1206.55 L2077.93 1206.55 L2077.34 1206.55 L2076.75 1206.55 L2076.17 1206.55 L2075.58 1206.55 L2074.99 1206.55 L2074.41 1206.55 L2073.82 1206.55 L2073.23 1206.55 L2072.65 1206.55 L2072.06 1206.55 L2071.48 1206.55 L2070.89 1206.55 L2070.3 1206.55 L2069.72 1206.55 L2069.13 1206.55 L2068.54 1206.55 L2067.96 1206.55 L2067.37 1206.55 L2066.78 1206.55 L2066.2 1206.55 L2065.61 1206.55 L2065.02 1206.55 L2064.44 1206.55 L2063.85 1206.55 L2063.27 1206.55 L2062.68 1206.55 L2062.09 1206.55 L2061.51 1206.55 L2060.92 1206.55 L2060.33 1206.55 L2059.75 1206.55 L2059.16 1206.55 L2058.57 1206.55 L2057.99 1206.55 L2057.4 1206.55 L2056.81 1206.55 L2056.23 1206.55 L2055.64 1206.55 L2055.06 1206.55 L2054.47 1206.55 L2053.88 1206.55 L2053.3 1206.55 L2052.71 1206.55 L2052.12 1206.55 L2051.54 1206.55 L2050.95 1206.55 L2050.36 1206.55 L2049.78 1206.55 L2049.19 1206.55 L2048.6 1206.55 L2048.02 1206.55 L2047.43 1206.55 L2046.85 1206.55 L2046.26 1206.55 L2045.67 1206.55 L2045.09 1206.55 L2044.5 1206.55 L2043.91 1206.55 L2043.33 1206.55 L2042.74 1206.55 L2042.15 1206.55 L2041.57 1206.55 L2040.98 1206.55 L2040.4 1206.55 L2039.81 1206.55 L2039.22 1206.55 L2038.64 1206.55 L2038.05 1206.55 L2037.46 1206.55 L2036.88 1206.55 L2036.29 1206.55 L2035.7 1206.55 L2035.12 1206.55 L2034.53 1206.55 L2033.94 1206.55 L2033.36 1206.55 L2032.77 1206.55 L2032.19 1206.55 L2031.6 1206.55 L2031.01 1206.55 L2030.43 1206.55 L2029.84 1206.55 L2029.25 1206.55 L2028.67 1206.55 L2028.08 1206.55 L2027.49 1206.55 L2026.91 1206.55 L2026.32 1206.55 L2025.73 1206.55 L2025.15 1206.55 L2024.56 1206.55 L2023.98 1206.55 L2023.39 1206.55 L2022.8 1206.55 L2022.22 1206.55 L2021.63 1206.55 L2021.04 1206.55 L2020.46 1206.55 L2019.87 1206.55 L2019.28 1206.55 L2018.7 1206.55 L2018.11 1206.55 L2017.53 1206.55 L2016.94 1206.55 L2016.35 1206.55 L2015.77 1206.55 L2015.18 1206.55 L2014.59 1206.55 L2014.01 1206.55 L2013.42 1206.55 L2012.83 1206.55 L2012.25 1206.55 L2011.66 1206.55 L2011.07 1206.55 L2010.49 1206.55 L2009.9 1206.55 L2009.32 1206.55 L2008.73 1206.55 L2008.14 1206.55 L2007.56 1206.55 L2006.97 1206.55 L2006.38 1206.55 L2005.8 1206.55 L2005.21 1206.55 L2004.62 1206.55 L2004.04 1206.55 L2003.45 1206.55 L2002.86 1206.55 L2002.28 1206.55 L2001.69 1206.55 L2001.11 1206.55 L2000.52 1206.55 L1999.93 1206.55 L1999.35 1206.55 L1998.76 1206.55 L1998.17 1206.55 L1997.59 1206.55 L1997 1206.55 L1996.41 1206.55 L1995.83 1206.55 L1995.24 1206.55 L1994.65 1206.55 L1994.07 1206.55 L1993.48 1206.55 L1992.9 1206.55 L1992.31 1206.55 L1991.72 1206.55 L1991.14 1206.55 L1990.55 1206.55 L1989.96 1206.55 L1989.38 1206.55 L1988.79 1206.55 L1988.2 1206.55 L1987.62 1206.55 L1987.03 1206.55 L1986.45 1206.55 L1985.86 1206.55 L1985.27 1206.55 L1984.69 1206.55 L1984.1 1206.55 L1983.51 1206.55 L1982.93 1206.55 L1982.34 1206.55 L1981.75 1206.55 L1981.17 1206.55 L1980.58 1206.55 L1979.99 1206.55 L1979.41 1206.55 L1978.82 1206.55 L1978.24 1206.55 L1977.65 1206.55 L1977.06 1206.55 L1976.48 1206.55 L1975.89 1206.55 L1975.3 1206.55 L1974.72 1206.55 L1974.13 1206.55 L1973.54 1206.55 L1972.96 1206.55 L1972.37 1206.55 L1971.78 1206.55 L1971.2 1206.55 L1970.61 1206.55 L1970.03 1206.55 L1969.44 1206.55 L1968.85 1206.55 L1968.27 1206.55 L1967.68 1206.55 L1967.09 1206.55 L1966.51 1206.55 L1965.92 1206.55 L1965.33 1206.55 L1964.75 1206.55 L1964.16 1206.55 L1963.58 1206.55 L1962.99 1206.55 L1962.4 1206.55 L1961.82 1206.55 L1961.23 1206.55 L1960.64 1206.55 L1960.06 1206.55 L1959.47 1206.55 L1958.88 1206.55 L1958.3 1206.55 L1957.71 1206.55 L1957.12 1206.55 L1956.54 1206.55 L1955.95 1206.55 L1955.37 1206.55 L1954.78 1206.55 L1954.19 1206.55 L1953.61 1206.55 L1953.02 1206.55 L1952.43 1206.55 L1951.85 1206.55 L1951.26 1206.55 L1950.67 1206.55 L1950.09 1206.55 L1949.5 1206.55 L1948.91 1206.55 L1948.33 1206.55 L1947.74 1206.55 L1947.16 1206.55 L1946.57 1206.55 L1945.98 1206.55 L1945.4 1206.55 L1944.81 1206.55 L1944.22 1206.55 L1943.64 1206.55 L1943.05 1206.55 L1942.46 1206.55 L1941.88 1206.55 L1941.29 1206.55 L1940.71 1206.55 L1940.12 1206.55 L1939.53 1206.55 L1938.95 1206.55 L1938.36 1206.55 L1937.77 1206.55 L1937.19 1206.55 L1936.6 1206.55 L1936.01 1206.55 L1935.43 1206.55 L1934.84 1206.55 L1934.25 1206.55 L1933.67 1206.55 L1933.08 1206.55 L1932.5 1206.55 L1931.91 1206.55 L1931.32 1206.55 L1930.74 1206.55 L1930.15 1206.55 L1929.56 1206.55 L1928.98 1206.55 L1928.39 1206.55 L1927.8 1206.55 L1927.22 1206.55 L1926.63 1206.55 L1926.04 1206.55 L1925.46 1206.55 L1924.87 1206.55 L1924.29 1206.55 L1923.7 1206.55 L1923.11 1206.55 L1922.53 1206.55 L1921.94 1206.55 L1921.35 1206.55 L1920.77 1206.55 L1920.18 1206.55 L1919.59 1206.55 L1919.01 1206.55 L1918.42 1206.55 L1917.83 1206.55 L1917.25 1206.55 L1916.66 1206.55 L1916.08 1206.55 L1915.49 1206.55 L1914.9 1206.55 L1914.32 1206.55 L1913.73 1206.55 L1913.14 1206.55 L1912.56 1206.55 L1911.97 1206.55 L1911.38 1206.55 L1910.8 1206.55 L1910.21 1206.55 L1909.63 1206.55 L1909.04 1206.55 L1908.45 1206.55 L1907.87 1206.55 L1907.28 1206.55 L1906.69 1206.55 L1906.11 1206.55 L1905.52 1206.55 L1904.93 1206.55 L1904.35 1206.55 L1903.76 1206.55 L1903.17 1206.55 L1902.59 1206.55 L1902 1206.55 L1901.42 1206.55 L1900.83 1206.55 L1900.24 1206.55 L1899.66 1206.55 L1899.07 1206.55 L1898.48 1206.55 L1897.9 1206.55 L1897.31 1206.55 L1896.72 1206.55 L1896.14 1206.55 L1895.55 1206.55 L1894.96 1206.55 L1894.38 1206.55 L1893.79 1206.55 L1893.21 1206.55 L1892.62 1206.55 L1892.03 1206.55 L1891.45 1206.55 L1890.86 1206.55 L1890.27 1206.55 L1889.69 1206.55 L1889.1 1206.55 L1888.51 1206.55 L1887.93 1206.55 L1887.34 1206.55 L1886.76 1206.55 L1886.17 1206.55 L1885.58 1206.55 L1885 1206.55 L1884.41 1206.55 L1883.82 1206.55 L1883.24 1206.55 L1882.65 1206.55 L1882.06 1206.55 L1881.48 1206.55 L1880.89 1206.55 L1880.3 1206.55 L1879.72 1206.55 L1879.13 1206.55 L1878.55 1206.55 L1877.96 1206.55 L1877.37 1206.55 L1876.79 1206.55 L1876.2 1206.55 L1875.61 1206.55 L1875.03 1206.55 L1874.44 1206.55 L1873.85 1206.55 L1873.27 1206.55 L1872.68 1206.55 L1872.09 1206.55 L1871.51 1206.55 L1870.92 1206.55 L1870.34 1206.55 L1869.75 1206.55 L1869.16 1206.55 L1868.58 1206.55 L1867.99 1206.55 L1867.4 1206.55 L1866.82 1206.55 L1866.23 1206.55 L1865.64 1206.55 L1865.06 1206.55 L1864.47 1206.55 L1863.88 1206.55 L1863.3 1206.55 L1862.71 1206.55 L1862.13 1206.55 L1861.54 1206.55 L1860.95 1206.55 L1860.37 1206.55 L1859.78 1206.55 L1859.19 1206.55 L1858.61 1206.55 L1858.02 1206.55 L1857.43 1206.55 L1856.85 1206.55 L1856.26 1206.55 L1855.68 1206.55 L1855.09 1206.55 L1854.5 1206.55 L1853.92 1206.55 L1853.33 1206.55 L1852.74 1206.55 L1852.16 1206.55 L1851.57 1206.55 L1850.98 1206.55 L1850.4 1206.55 L1849.81 1206.55 L1849.22 1206.55 L1848.64 1206.55 L1848.05 1206.55 L1847.47 1206.55 L1846.88 1206.55 L1846.29 1206.55 L1845.71 1206.55 L1845.12 1206.55 L1844.53 1206.55 L1843.95 1206.55 L1843.36 1206.55 L1842.77 1206.55 L1842.19 1206.55 L1841.6 1206.55 L1841.01 1206.55 L1840.43 1206.55 L1839.84 1206.55 L1839.26 1206.55 L1838.67 1206.55 L1838.08 1206.55 L1837.5 1206.55 L1836.91 1206.55 L1836.32 1206.55 L1835.74 1206.55 L1835.15 1206.55 L1834.56 1206.55 L1833.98 1206.55 L1833.39 1206.55 L1832.81 1206.55 L1832.22 1206.55 L1831.63 1206.55 L1831.05 1206.55 L1830.46 1206.55 L1829.87 1206.55 L1829.29 1206.55 L1828.7 1206.55 L1828.11 1206.55 L1827.53 1206.55 L1826.94 1206.55 L1826.35 1206.55 L1825.77 1206.55 L1825.18 1206.55 L1824.6 1206.55 L1824.01 1206.55 L1823.42 1206.55 L1822.84 1206.55 L1822.25 1206.55 L1821.66 1206.55 L1821.08 1206.55 L1820.49 1206.55 L1819.9 1206.55 L1819.32 1206.55 L1818.73 1206.55 L1818.14 1206.55 L1817.56 1206.55 L1816.97 1206.55 L1816.39 1206.55 L1815.8 1206.55 L1815.21 1206.55 L1814.63 1206.55 L1814.04 1206.55 L1813.45 1206.55 L1812.87 1206.55 L1812.28 1206.55 L1811.69 1206.55 L1811.11 1206.55 L1810.52 1206.55 L1809.94 1206.55 L1809.35 1206.55 L1808.76 1206.55 L1808.18 1206.55 L1807.59 1206.55 L1807 1206.55 L1806.42 1206.55 L1805.83 1206.55 L1805.24 1206.55 L1804.66 1206.55 L1804.07 1206.55 L1803.48 1206.55 L1802.9 1206.55 L1802.31 1206.55 L1801.73 1206.55 L1801.14 1206.55 L1800.55 1206.55 L1799.97 1206.55 L1799.38 1206.55 L1798.79 1206.55 L1798.21 1206.55 L1797.62 1206.55 L1797.03 1206.55 L1796.45 1206.55 L1795.86 1206.55 L1795.27 1206.55 L1794.69 1206.55 L1794.1 1206.55 L1793.52 1206.55 L1792.93 1206.55 L1792.34 1206.55 L1791.76 1206.55 L1791.17 1206.55 L1790.58 1206.55 L1790 1206.55 L1789.41 1206.55 L1788.82 1206.55 L1788.24 1206.55 L1787.65 1206.55 L1787.06 1206.55 L1786.48 1206.55 L1785.89 1206.55 L1785.31 1206.55 L1784.72 1206.55 L1784.13 1206.55 L1783.55 1206.55 L1782.96 1206.55 L1782.37 1206.55 L1781.79 1206.55 L1781.2 1206.55 L1780.61 1206.55 L1780.03 1206.55 L1779.44 1206.55 L1778.86 1206.55 L1778.27 1206.55 L1777.68 1206.55 L1777.1 1206.55 L1776.51 1206.55 L1775.92 1206.55 L1775.34 1206.55 L1774.75 1206.55 L1774.16 1206.55 L1773.58 1206.55 L1772.99 1206.55 L1772.4 1206.55 L1771.82 1206.55 L1771.23 1206.55 L1770.65 1206.55 L1770.06 1206.55 L1769.47 1206.55 L1768.89 1206.55 L1768.3 1206.55 L1767.71 1206.55 L1767.13 1206.55 L1766.54 1206.55 L1765.95 1206.55 L1765.37 1206.55 L1764.78 1206.55 L1764.19 1206.55 L1763.61 1206.55 L1763.02 1206.55 L1762.44 1206.55 L1761.85 1206.55 L1761.26 1206.55 L1760.68 1206.55 L1760.09 1206.55 L1759.5 1206.55 L1758.92 1206.55 L1758.33 1206.55 L1757.74 1206.55 L1757.16 1206.55 L1756.57 1206.55 L1755.99 1206.55 L1755.4 1206.55 L1754.81 1206.55 L1754.23 1206.55 L1753.64 1206.55 L1753.05 1206.55 L1752.47 1206.55 L1751.88 1206.55 L1751.29 1206.55 L1750.71 1206.55 L1750.12 1206.55 L1749.53 1206.55 L1748.95 1206.55 L1748.36 1206.55 L1747.78 1206.55 L1747.19 1206.55 L1746.6 1206.55 L1746.02 1206.55 L1745.43 1206.55 L1744.84 1206.55 L1744.26 1206.55 L1743.67 1206.55 L1743.08 1206.55 L1742.5 1206.55 L1741.91 1206.55 L1741.32 1206.55 L1740.74 1206.55 L1740.15 1206.55 L1739.57 1206.55 L1738.98 1206.55 L1738.39 1206.55 L1737.81 1206.55 L1737.22 1206.55 L1736.63 1206.55 L1736.05 1206.55 L1735.46 1206.55 L1734.87 1206.55 L1734.29 1206.55 L1733.7 1206.55 L1733.11 1206.55 L1732.53 1206.55 L1731.94 1206.55 L1731.36 1206.55 L1730.77 1206.55 L1730.18 1206.55 L1729.6 1206.55 L1729.01 1206.55 L1728.42 1206.55 L1727.84 1206.55 L1727.25 1206.55 L1726.66 1206.55 L1726.08 1206.55 L1725.49 1206.55 L1724.91 1206.55 L1724.32 1206.55 L1723.73 1206.55 L1723.15 1206.55 L1722.56 1206.55 L1721.97 1206.55 L1721.39 1206.55 L1720.8 1206.55 L1720.21 1206.55 L1719.63 1206.55 L1719.04 1206.55 L1718.45 1206.55 L1717.87 1206.55 L1717.28 1206.55 L1716.7 1206.55 L1716.11 1206.55 L1715.52 1206.55 L1714.94 1206.55 L1714.35 1206.55 L1713.76 1206.55 L1713.18 1206.55 L1712.59 1206.55 L1712 1206.55 L1711.42 1206.55 L1710.83 1206.55 L1710.24 1206.55 L1709.66 1206.55 L1709.07 1206.55 L1708.49 1206.55 L1707.9 1206.55 L1707.31 1206.55 L1706.73 1206.55 L1706.14 1206.55 L1705.55 1206.55 L1704.97 1206.55 L1704.38 1206.55 L1703.79 1206.55 L1703.21 1206.55 L1702.62 1206.55 L1702.04 1206.55 L1701.45 1206.55 L1700.86 1206.55 L1700.28 1206.55 L1699.69 1206.55 L1699.1 1206.55 L1698.52 1206.55 L1697.93 1206.55 L1697.34 1206.55 L1696.76 1206.55 L1696.17 1206.55 L1695.58 1206.55 L1695 1206.55 L1694.41 1206.55 L1693.83 1206.55 L1693.24 1206.55 L1692.65 1206.55 L1692.07 1206.55 L1691.48 1206.55 L1690.89 1206.55 L1690.31 1206.55 L1689.72 1206.55 L1689.13 1206.55 L1688.55 1206.55 L1687.96 1206.55 L1687.37 1206.55 L1686.79 1206.55 L1686.2 1206.55 L1685.62 1206.55 L1685.03 1206.55 L1684.44 1206.55 L1683.86 1206.55 L1683.27 1206.55 L1682.68 1206.55 L1682.1 1206.55 L1681.51 1206.55 L1680.92 1206.55 L1680.34 1206.55 L1679.75 1206.55 L1679.17 1206.55 L1678.58 1206.55 L1677.99 1206.55 L1677.41 1206.55 L1676.82 1206.55 L1676.23 1206.55 L1675.65 1206.55 L1675.06 1206.55 L1674.47 1206.55 L1673.89 1206.55 L1673.3 1206.55 L1672.71 1206.55 L1672.13 1206.55 L1671.54 1206.55 L1670.96 1206.55 L1670.37 1206.55 L1669.78 1206.55 L1669.2 1206.55 L1668.61 1206.55 L1668.02 1206.55 L1667.44 1206.55 L1666.85 1206.55 L1666.26 1206.55 L1665.68 1206.55 L1665.09 1206.55 L1664.5 1206.55 L1663.92 1206.55 L1663.33 1206.55 L1662.75 1206.55 L1662.16 1206.55 L1661.57 1206.55 L1660.99 1206.55 L1660.4 1206.55 L1659.81 1206.55 L1659.23 1206.55 L1658.64 1206.55 L1658.05 1206.55 L1657.47 1206.55 L1656.88 1206.55 L1656.29 1206.55 L1655.71 1206.55 L1655.12 1206.55 L1654.54 1206.55 L1653.95 1206.55 L1653.36 1206.55 L1652.78 1206.55 L1652.19 1206.55 L1651.6 1206.55 L1651.02 1206.55 L1650.43 1206.55 L1649.84 1206.55 L1649.26 1206.55 L1648.67 1206.55 L1648.09 1206.55 L1647.5 1206.55 L1646.91 1206.55 L1646.33 1206.55 L1645.74 1206.55 L1645.15 1206.55 L1644.57 1206.55 L1643.98 1206.55 L1643.39 1206.55 L1642.81 1206.55 L1642.22 1206.55 L1641.63 1206.55 L1641.05 1206.55 L1640.46 1206.55 L1639.88 1206.55 L1639.29 1206.55 L1638.7 1206.55 L1638.12 1206.55 L1637.53 1206.55 L1636.94 1206.55 L1636.36 1206.55 L1635.77 1206.55 L1635.18 1206.55 L1634.6 1206.55 L1634.01 1206.55 L1633.42 1206.55 L1632.84 1206.55 L1632.25 1206.55 L1631.67 1206.55 L1631.08 1206.55 L1630.49 1206.55 L1629.91 1206.55 L1629.32 1206.55 L1628.73 1206.55 L1628.15 1206.55 L1627.56 1206.55 L1626.97 1206.55 L1626.39 1206.55 L1625.8 1206.55 L1625.22 1206.55 L1624.63 1206.55 L1624.04 1206.55 L1623.46 1206.55 L1622.87 1206.55 L1622.28 1206.55 L1621.7 1206.55 L1621.11 1206.55 L1620.52 1206.55 L1619.94 1206.55 L1619.35 1206.55 L1618.76 1206.55 L1618.18 1206.55 L1617.59 1206.55 L1617.01 1206.55 L1616.42 1206.55 L1615.83 1206.55 L1615.25 1206.55 L1614.66 1206.55 L1614.07 1206.55 L1613.49 1206.55 L1612.9 1206.55 L1612.31 1206.55 L1611.73 1206.55 L1611.14 1206.55 L1610.55 1206.55 L1609.97 1206.55 L1609.38 1206.55 L1608.8 1206.55 L1608.21 1206.55 L1607.62 1206.55 L1607.04 1206.55 L1606.45 1206.55 L1605.86 1206.55 L1605.28 1206.55 L1604.69 1206.55 L1604.1 1206.55 L1603.52 1206.55 L1602.93 1206.55 L1602.34 1206.55 L1601.76 1206.55 L1601.17 1206.55 L1600.59 1206.55 L1600 1206.55 L1599.41 1206.55 L1598.83 1206.55 L1598.24 1206.55 L1597.65 1206.55 L1597.07 1206.55 L1596.48 1206.55 L1595.89 1206.55 L1595.31 1206.55 L1594.72 1206.55 L1594.14 1206.55 L1593.55 1206.55 L1592.96 1206.55 L1592.38 1206.55 L1591.79 1206.55 L1591.2 1206.55 L1590.62 1206.55 L1590.03 1206.55 L1589.44 1206.55 L1588.86 1206.55 L1588.27 1206.55 L1587.68 1206.55 L1587.1 1206.55 L1586.51 1206.55 L1585.93 1206.55 L1585.34 1206.55 L1584.75 1206.55 L1584.17 1206.55 L1583.58 1206.55 L1582.99 1206.55 L1582.41 1206.55 L1581.82 1206.55 L1581.23 1206.55 L1580.65 1206.55 L1580.06 1206.55 L1579.47 1206.55 L1578.89 1206.55 L1578.3 1206.55 L1577.72 1206.55 L1577.13 1206.55 L1576.54 1206.55 L1575.96 1206.55 L1575.37 1206.55 L1574.78 1206.55 L1574.2 1206.55 L1573.61 1206.55 L1573.02 1206.55 L1572.44 1206.55 L1571.85 1206.55 L1571.27 1206.55 L1570.68 1206.55 L1570.09 1206.55 L1569.51 1206.55 L1568.92 1206.55 L1568.33 1206.55 L1567.75 1206.55 L1567.16 1206.55 L1566.57 1206.55 L1565.99 1206.55 L1565.4 1206.55 L1564.81 1206.55 L1564.23 1206.55 L1563.64 1206.55 L1563.06 1206.55 L1562.47 1206.55 L1561.88 1206.55 L1561.3 1206.55 L1560.71 1206.55 L1560.12 1206.55 L1559.54 1206.55 L1558.95 1206.55 L1558.36 1206.55 L1557.78 1206.55 L1557.19 1206.55 L1556.6 1206.55 L1556.02 1206.55 L1555.43 1206.55 L1554.85 1206.55 L1554.26 1206.55 L1553.67 1206.55 L1553.09 1206.55 L1552.5 1206.55 L1551.91 1206.55 L1551.33 1206.55 L1550.74 1206.55 L1550.15 1206.55 L1549.57 1206.55 L1548.98 1206.55 L1548.4 1206.55 L1547.81 1206.55 L1547.22 1206.55 L1546.64 1206.55 L1546.05 1206.55 L1545.46 1206.55 L1544.88 1206.55 L1544.29 1206.55 L1543.7 1206.55 L1543.12 1206.55 L1542.53 1206.55 L1541.94 1206.55 L1541.36 1206.55 L1540.77 1206.55 L1540.19 1206.55 L1539.6 1206.55 L1539.01 1206.55 L1538.43 1206.55 L1537.84 1206.55 L1537.25 1206.55 L1536.67 1206.55 L1536.08 1206.55 L1535.49 1206.55 L1534.91 1206.55 L1534.32 1206.55 L1533.73 1206.55 L1533.15 1206.55 L1532.56 1206.55 L1531.98 1206.55 L1531.39 1206.55 L1530.8 1206.55 L1530.22 1206.55 L1529.63 1206.55 L1529.04 1206.55 L1528.46 1206.55 L1527.87 1206.55 L1527.28 1206.55 L1526.7 1206.55 L1526.11 1206.55 L1525.52 1206.55 L1524.94 1206.55 L1524.35 1206.55 L1523.77 1206.55 L1523.18 1206.55 L1522.59 1206.55 L1522.01 1206.55 L1521.42 1206.55 L1520.83 1206.55 L1520.25 1206.55 L1519.66 1206.55 L1519.07 1206.55 L1518.49 1206.55 L1517.9 1206.55 L1517.32 1206.55 L1516.73 1206.55 L1516.14 1206.55 L1515.56 1206.55 L1514.97 1206.55 L1514.38 1206.55 L1513.8 1206.55 L1513.21 1206.55 L1512.62 1206.55 L1512.04 1206.55 L1511.45 1206.55 L1510.86 1206.55 L1510.28 1206.55 L1509.69 1206.55 L1509.11 1206.55 L1508.52 1206.55 L1507.93 1206.55 L1507.35 1206.55 L1506.76 1206.55 L1506.17 1206.55 L1505.59 1206.55 L1505 1206.55 L1504.41 1206.55 L1503.83 1206.55 L1503.24 1206.55 L1502.65 1206.55 L1502.07 1206.55 L1501.48 1206.55 L1500.9 1206.55 L1500.31 1206.55 L1499.72 1206.55 L1499.14 1206.55 L1498.55 1206.55 L1497.96 1206.55 L1497.38 1206.55 L1496.79 1206.55 L1496.2 1206.55 L1495.62 1206.55 L1495.03 1206.55 L1494.45 1206.55 L1493.86 1206.55 L1493.27 1206.55 L1492.69 1206.55 L1492.1 1206.55 L1491.51 1206.55 L1490.93 1206.55 L1490.34 1206.55 L1489.75 1206.55 L1489.17 1206.55 L1488.58 1206.55 L1487.99 1206.55 L1487.41 1206.55 L1486.82 1206.55 L1486.24 1206.55 L1485.65 1206.55 L1485.06 1206.55 L1484.48 1206.55 L1483.89 1206.55 L1483.3 1206.55 L1482.72 1206.55 L1482.13 1206.55 L1481.54 1206.55 L1480.96 1206.55 L1480.37 1206.55 L1479.78 1206.55 L1479.2 1206.55 L1478.61 1206.55 L1478.03 1206.55 L1477.44 1206.55 L1476.85 1206.55 L1476.27 1206.55 L1475.68 1206.55 L1475.09 1206.55 L1474.51 1206.55 L1473.92 1206.55 L1473.33 1206.55 L1472.75 1206.55 L1472.16 1206.55 L1471.57 1206.55 L1470.99 1206.55 L1470.4 1206.55 L1469.82 1206.55 L1469.23 1206.55 L1468.64 1206.55 L1468.06 1206.55 L1467.47 1206.55 L1466.88 1206.55 L1466.3 1206.55 L1465.71 1206.55 L1465.12 1206.55 L1464.54 1206.55 L1463.95 1206.55 L1463.37 1206.55 L1462.78 1206.55 L1462.19 1206.55 L1461.61 1206.55 L1461.02 1206.55 L1460.43 1206.55 L1459.85 1206.55 L1459.26 1206.55 L1458.67 1206.55 L1458.09 1206.55 L1457.5 1206.55 L1456.91 1206.55 L1456.33 1206.55 L1455.74 1206.55 L1455.16 1206.55 L1454.57 1206.55 L1453.98 1206.55 L1453.4 1206.55 L1452.81 1206.55 L1452.22 1206.55 L1451.64 1206.55 L1451.05 1206.55 L1450.46 1206.55 L1449.88 1206.55 L1449.29 1206.55 L1448.7 1206.55 L1448.12 1206.55 L1447.53 1206.55 L1446.95 1206.55 L1446.36 1206.55 L1445.77 1206.55 L1445.19 1206.55 L1444.6 1206.55 L1444.01 1206.55 L1443.43 1206.55 L1442.84 1206.55 L1442.25 1206.55 L1441.67 1206.55 L1441.08 1206.55 L1440.5 1206.55 L1439.91 1206.55 L1439.32 1206.55 L1438.74 1206.55 L1438.15 1206.55 L1437.56 1206.55 L1436.98 1206.55 L1436.39 1206.55 L1435.8 1206.55 L1435.22 1206.55 L1434.63 1206.55 L1434.04 1206.55 L1433.46 1206.55 L1432.87 1206.55 L1432.29 1206.55 L1431.7 1206.55 L1431.11 1206.55 L1430.53 1206.55 L1429.94 1206.55 L1429.35 1206.55 L1428.77 1206.55 L1428.18 1206.55 L1427.59 1206.55 L1427.01 1206.55 L1426.42 1206.55 L1425.83 1206.55 L1425.25 1206.55 L1424.66 1206.55 L1424.08 1206.55 L1423.49 1206.55 L1422.9 1206.55 L1422.32 1206.55 L1421.73 1206.55 L1421.14 1206.55 L1420.56 1206.55 L1419.97 1206.55 L1419.38 1206.55 L1418.8 1206.55 L1418.21 1206.55 L1417.63 1206.55 L1417.04 1206.55 L1416.45 1206.55 L1415.87 1206.55 L1415.28 1206.55 L1414.69 1206.55 L1414.11 1206.55 L1413.52 1206.55 L1412.93 1206.55 L1412.35 1206.55 L1411.76 1206.55 L1411.17 1206.55 L1410.59 1206.55 L1410 1206.55 L1409.42 1206.55 L1408.83 1206.55 L1408.24 1206.55 L1407.66 1206.55 L1407.07 1206.55 L1406.48 1206.55 L1405.9 1206.55 L1405.31 1206.55 L1404.72 1206.55 L1404.14 1206.55 L1403.55 1206.55 L1402.96 1206.55 L1402.38 1206.55 L1401.79 1206.55 L1401.21 1206.55 L1400.62 1206.55 L1400.03 1206.55 L1399.45 1206.55 L1398.86 1206.55 L1398.27 1206.55 L1397.69 1206.55 L1397.1 1206.55 L1396.51 1206.55 L1395.93 1206.55 L1395.34 1206.55 L1394.75 1206.55 L1394.17 1206.55 L1393.58 1206.55 L1393 1206.55 L1392.41 1206.55 L1391.82 1206.55 L1391.24 1206.55 L1390.65 1206.55 L1390.06 1206.55 L1389.48 1206.55 L1388.89 1206.55 L1388.3 1206.55 L1387.72 1206.55 L1387.13 1206.55 L1386.55 1206.55 L1385.96 1206.55 L1385.37 1206.55 L1384.79 1206.55 L1384.2 1206.55 L1383.61 1206.55 L1383.03 1206.55 L1382.44 1206.55 L1381.85 1206.55 L1381.27 1206.55 L1380.68 1206.55 L1380.09 1206.55 L1379.51 1206.55 L1378.92 1206.55 L1378.34 1206.55 L1377.75 1206.55 L1377.16 1206.55 L1376.58 1206.55 L1375.99 1206.55 L1375.4 1206.55 L1374.82 1206.55 L1374.23 1206.55 L1373.64 1206.55 L1373.06 1206.55 L1372.47 1206.55 L1371.88 1206.55 L1371.3 1206.55 L1370.71 1206.55 L1370.13 1206.55 L1369.54 1206.55 L1368.95 1206.55 L1368.37 1206.55 L1367.78 1206.55 L1367.19 1206.55 L1366.61 1206.55 L1366.02 1206.55 L1365.43 1206.55 L1364.85 1206.55 L1364.26 1206.55 L1363.68 1206.55 L1363.09 1206.55 L1362.5 1206.55 L1361.92 1206.55 L1361.33 1206.55 L1360.74 1206.55 L1360.16 1206.55 L1359.57 1206.55 L1358.98 1206.55 L1358.4 1206.55 L1357.81 1206.55 L1357.22 1206.55 L1356.64 1206.55 L1356.05 1206.55 L1355.47 1206.55 L1354.88 1206.55 L1354.29 1206.55 L1353.71 1206.55 L1353.12 1206.55 L1352.53 1206.55 L1351.95 1206.55 L1351.36 1206.55 L1350.77 1206.55 L1350.19 1206.55 L1349.6 1206.55 L1349.01 1206.55 L1348.43 1206.55 L1347.84 1206.55 L1347.26 1206.55 L1346.67 1206.55 L1346.08 1206.55 L1345.5 1206.55 L1344.91 1206.55 L1344.32 1206.55 L1343.74 1206.55 L1343.15 1206.55 L1342.56 1206.55 L1341.98 1206.55 L1341.39 1206.55 L1340.8 1206.55 L1340.22 1206.55 L1339.63 1206.55 L1339.05 1206.55 L1338.46 1206.55 L1337.87 1206.55 L1337.29 1206.55 L1336.7 1206.55 L1336.11 1206.55 L1335.53 1206.55 L1334.94 1206.55 L1334.35 1206.55 L1333.77 1206.55 L1333.18 1206.55 L1332.6 1206.55 L1332.01 1206.55 L1331.42 1206.55 L1330.84 1206.55 L1330.25 1206.55 L1329.66 1206.55 L1329.08 1206.55 L1328.49 1206.55 L1327.9 1206.55 L1327.32 1206.55 L1326.73 1206.55 L1326.14 1206.55 L1325.56 1206.55 L1324.97 1206.55 L1324.39 1206.55 L1323.8 1206.55 L1323.21 1206.55 L1322.63 1206.55 L1322.04 1206.55 L1321.45 1206.55 L1320.87 1206.55 L1320.28 1206.55 L1319.69 1206.55 L1319.11 1206.55 L1318.52 1206.55 L1317.93 1206.55 L1317.35 1206.55 L1316.76 1206.55 L1316.18 1206.55 L1315.59 1206.55 L1315 1206.55 L1314.42 1206.55 L1313.83 1206.55 L1313.24 1206.55 L1312.66 1206.55 L1312.07 1206.55 L1311.48 1206.55 L1310.9 1206.55 L1310.31 1206.55 L1309.73 1206.55 L1309.14 1206.55 L1308.55 1206.55 L1307.97 1206.55 L1307.38 1206.55 L1306.79 1206.55 L1306.21 1206.55 L1305.62 1206.55 L1305.03 1206.55 L1304.45 1206.55 L1303.86 1206.55 L1303.27 1206.55 L1302.69 1206.55 L1302.1 1206.55 L1301.52 1206.55 L1300.93 1206.55 L1300.34 1206.55 L1299.76 1206.55 L1299.17 1206.55 L1298.58 1206.55 L1298 1206.55 L1297.41 1206.55 L1296.82 1206.55 L1296.24 1206.55 L1295.65 1206.55 L1295.06 1206.55 L1294.48 1206.55 L1293.89 1206.55 L1293.31 1206.55 L1292.72 1206.55 L1292.13 1206.55 L1291.55 1206.55 L1290.96 1206.55 L1290.37 1206.55 L1289.79 1206.55 L1289.2 1206.55 L1288.61 1206.55 L1288.03 1206.55 L1287.44 1206.55 L1286.86 1206.55 L1286.27 1206.55 L1285.68 1206.55 L1285.1 1206.55 L1284.51 1206.55 L1283.92 1206.55 L1283.34 1206.55 L1282.75 1206.55 L1282.16 1206.55 L1281.58 1206.55 L1280.99 1206.55 L1280.4 1206.55 L1279.82 1206.55 L1279.23 1206.55 L1278.65 1206.55 L1278.06 1206.55 L1277.47 1206.55 L1276.89 1206.55 L1276.3 1206.55 L1275.71 1206.55 L1275.13 1206.55 L1274.54 1206.55 L1273.95 1206.55 L1273.37 1206.55 L1272.78 1206.55 L1272.19 1206.55 L1271.61 1206.55 L1271.02 1206.55 L1270.44 1206.55 L1269.85 1206.55 L1269.26 1206.55 L1268.68 1206.55 L1268.09 1206.55 L1267.5 1206.55 L1266.92 1206.55 L1266.33 1206.55 L1265.74 1206.55 L1265.16 1206.55 L1264.57 1206.55 L1263.98 1206.55 L1263.4 1206.55 L1262.81 1206.55 L1262.23 1206.55 L1261.64 1206.55 L1261.05 1206.55 L1260.47 1206.55 L1259.88 1206.55 L1259.29 1206.55 L1258.71 1206.55 L1258.12 1206.55 L1257.53 1206.55 L1256.95 1206.55 L1256.36 1206.55 L1255.78 1206.55 L1255.19 1206.55 L1254.6 1206.55 L1254.02 1206.55 L1253.43 1206.55 L1252.84 1206.55 L1252.26 1206.55 L1251.67 1206.55 L1251.08 1206.55 L1250.5 1206.55 L1249.91 1206.55 L1249.32 1206.55 L1248.74 1206.55 L1248.15 1206.55 L1247.57 1206.55 L1246.98 1206.55 L1246.39 1206.55 L1245.81 1206.55 L1245.22 1206.55 L1244.63 1206.55 L1244.05 1206.55 L1243.46 1206.55 L1242.87 1206.55 L1242.29 1206.55 L1241.7 1206.55 L1241.11 1206.55 L1240.53 1206.55 L1239.94 1206.55 L1239.36 1206.55 L1238.77 1206.55 L1238.18 1206.55 L1237.6 1206.55 L1237.01 1206.55 L1236.42 1206.55 L1235.84 1206.55 L1235.25 1206.55 L1234.66 1206.55 L1234.08 1206.55 L1233.49 1206.55 L1232.91 1206.55 L1232.32 1206.55 L1231.73 1206.55 L1231.15 1206.55 L1230.56 1206.55 L1229.97 1206.55 L1229.39 1206.55 L1228.8 1206.55 L1228.21 1206.55 L1227.63 1206.55 L1227.04 1206.55 L1226.45 1206.55 L1225.87 1206.55 L1225.28 1206.55 L1224.7 1206.55 L1224.11 1206.55 L1223.52 1206.55 L1222.94 1206.55 L1222.35 1206.55 L1221.76 1206.55 L1221.18 1206.55 L1220.59 1206.55 L1220 1206.55 L1219.42 1206.55 L1218.83 1206.55 L1218.24 1206.55 L1217.66 1206.55 L1217.07 1206.55 L1216.49 1206.55 L1215.9 1206.55 L1215.31 1206.55 L1214.73 1206.55 L1214.14 1206.55 L1213.55 1206.55 L1212.97 1206.55 L1212.38 1206.55 L1211.79 1206.55 L1211.21 1206.55 L1210.62 1206.55 L1210.03 1206.55 L1209.45 1206.55 L1208.86 1206.55 L1208.28 1206.55 L1207.69 1206.55 L1207.1 1206.55 L1206.52 1206.55 L1205.93 1206.55 L1205.34 1206.55 L1204.76 1206.55 L1204.17 1206.55 L1203.58 1206.55 L1203 1206.55 L1202.41 1206.55 L1201.83 1206.55 L1201.24 1206.55 L1200.65 1206.55 L1200.07 1206.55 L1199.48 1206.55 L1198.89 1206.55 L1198.31 1206.55 L1197.72 1206.55 L1197.13 1206.55 L1196.55 1206.55 L1195.96 1206.55 L1195.37 1206.55 L1194.79 1206.55 L1194.2 1206.55 L1193.62 1206.55 L1193.03 1206.55 L1192.44 1206.55 L1191.86 1206.55 L1191.27 1206.55 L1190.68 1206.55 L1190.1 1206.55 L1189.51 1206.55 L1188.92 1206.55 L1188.34 1206.55 L1187.75 1206.55 L1187.16 1206.55 L1186.58 1206.55 L1185.99 1206.55 L1185.41 1206.55 L1184.82 1206.55 L1184.23 1206.55 L1183.65 1206.55 L1183.06 1206.55 L1182.47 1206.55 L1181.89 1206.55 L1181.3 1206.55 L1180.71 1206.55 L1180.13 1206.55 L1179.54 1206.55 L1178.96 1206.55 L1178.37 1206.55 L1177.78 1206.55 L1177.2 1206.55 L1176.61 1206.55 L1176.02 1206.55 L1175.44 1206.55 L1174.85 1206.55 L1174.26 1206.55 L1173.68 1206.55 L1173.09 1206.55 L1172.5 1206.55 L1171.92 1206.55 L1171.33 1206.55 L1170.75 1206.55 L1170.16 1206.55 L1169.57 1206.55 L1168.99 1206.55 L1168.4 1206.55 L1167.81 1206.55 L1167.23 1206.55 L1166.64 1206.55 L1166.05 1206.55 L1165.47 1206.55 L1164.88 1206.55 L1164.29 1206.55 L1163.71 1206.55 L1163.12 1206.55 L1162.54 1206.55 L1161.95 1206.55 L1161.36 1206.55 L1160.78 1206.55 L1160.19 1206.55 L1159.6 1206.55 L1159.02 1206.55 L1158.43 1206.55 L1157.84 1206.55 L1157.26 1206.55 L1156.67 1206.55 L1156.09 1206.55 L1155.5 1206.55 L1154.91 1206.55 L1154.33 1206.55 L1153.74 1206.55 L1153.15 1206.55 L1152.57 1206.55 L1151.98 1206.55 L1151.39 1206.55 L1150.81 1206.55 L1150.22 1206.55 L1149.63 1206.55 L1149.05 1206.55 L1148.46 1206.55 L1147.88 1206.55 L1147.29 1206.55 L1146.7 1206.55 L1146.12 1206.55 L1145.53 1206.55 L1144.94 1206.55 L1144.36 1206.55 L1143.77 1206.55 L1143.18 1206.55 L1142.6 1206.55 L1142.01 1206.55 L1141.42 1206.55 L1140.84 1206.55 L1140.25 1206.55 L1139.67 1206.55 L1139.08 1206.55 L1138.49 1206.55 L1137.91 1206.55 L1137.32 1206.55 L1136.73 1206.55 L1136.15 1206.55 L1135.56 1206.55 L1134.97 1206.55 L1134.39 1206.55 L1133.8 1206.55 L1133.21 1206.55 L1132.63 1206.55 L1132.04 1206.55 L1131.46 1206.55 L1130.87 1206.55 L1130.28 1206.55 L1129.7 1206.55 L1129.11 1206.55 L1128.52 1206.55 L1127.94 1206.55 L1127.35 1206.55 L1126.76 1206.55 L1126.18 1206.55 L1125.59 1206.55 L1125.01 1206.55 L1124.42 1206.55 L1123.83 1206.55 L1123.25 1206.55 L1122.66 1206.55 L1122.07 1206.55 L1121.49 1206.55 L1120.9 1206.55 L1120.31 1206.55 L1119.73 1206.55 L1119.14 1206.55 L1118.55 1206.55 L1117.97 1206.55 L1117.38 1206.55 L1116.8 1206.55 L1116.21 1206.55 L1115.62 1206.55 L1115.04 1206.55 L1114.45 1206.55 L1113.86 1206.55 L1113.28 1206.55 L1112.69 1206.55 L1112.1 1206.55 L1111.52 1206.55 L1110.93 1206.55 L1110.34 1206.55 L1109.76 1206.55 L1109.17 1206.55 L1108.59 1206.55 L1108 1206.55 L1107.41 1206.55 L1106.83 1206.55 L1106.24 1206.55 L1105.65 1206.55 L1105.07 1206.55 L1104.48 1206.55 L1103.89 1206.55 L1103.31 1206.55 L1102.72 1206.55 L1102.14 1206.55 L1101.55 1206.55 L1100.96 1206.55 L1100.38 1206.55 L1099.79 1206.55 L1099.2 1206.55 L1098.62 1206.55 L1098.03 1206.55 L1097.44 1206.55 L1096.86 1206.55 L1096.27 1206.55 L1095.68 1206.55 L1095.1 1206.55 L1094.51 1206.55 L1093.93 1206.55 L1093.34 1206.55 L1092.75 1206.55 L1092.17 1206.55 L1091.58 1206.55 L1090.99 1206.55 L1090.41 1206.55 L1089.82 1206.55 L1089.23 1206.55 L1088.65 1206.55 L1088.06 1206.55 L1087.47 1206.55 L1086.89 1206.55 L1086.3 1206.55 L1085.72 1206.55 L1085.13 1206.55 L1084.54 1206.55 L1083.96 1206.55 L1083.37 1206.55 L1082.78 1206.55 L1082.2 1206.55 L1081.61 1206.55 L1081.02 1206.55 L1080.44 1206.55 L1079.85 1206.55 L1079.26 1206.55 L1078.68 1206.55 L1078.09 1206.55 L1077.51 1206.55 L1076.92 1206.55 L1076.33 1206.55 L1075.75 1206.55 L1075.16 1206.55 L1074.57 1206.55 L1073.99 1206.55 L1073.4 1206.55 L1072.81 1206.55 L1072.23 1206.55 L1071.64 1206.55 L1071.06 1206.55 L1070.47 1206.55 L1069.88 1206.55 L1069.3 1206.55 L1068.71 1206.55 L1068.12 1206.55 L1067.54 1206.55 L1066.95 1206.55 L1066.36 1206.55 L1065.78 1206.55 L1065.19 1206.55 L1064.6 1206.55 L1064.02 1206.55 L1063.43 1206.55 L1062.85 1206.55 L1062.26 1206.55 L1061.67 1206.55 L1061.09 1206.55 L1060.5 1206.55 L1059.91 1206.55 L1059.33 1206.55 L1058.74 1206.55 L1058.15 1206.55 L1057.57 1206.55 L1056.98 1206.55 L1056.39 1206.55 L1055.81 1206.55 L1055.22 1206.55 L1054.64 1206.55 L1054.05 1206.55 L1053.46 1206.55 L1052.88 1206.55 L1052.29 1206.55 L1051.7 1206.55 L1051.12 1206.55 L1050.53 1206.55 L1049.94 1206.55 L1049.36 1206.55 L1048.77 1206.55 L1048.19 1206.55 L1047.6 1206.55 L1047.01 1206.55 L1046.43 1206.55 L1045.84 1206.55 L1045.25 1206.55 L1044.67 1206.55 L1044.08 1206.55 L1043.49 1206.55 L1042.91 1206.55 L1042.32 1206.55 L1041.73 1206.55 L1041.15 1206.55 L1040.56 1206.55 L1039.98 1206.55 L1039.39 1206.55 L1038.8 1206.55 L1038.22 1206.55 L1037.63 1206.55 L1037.04 1206.55 L1036.46 1206.55 L1035.87 1206.55 L1035.28 1206.55 L1034.7 1206.55 L1034.11 1206.55 L1033.52 1206.55 L1032.94 1206.55 L1032.35 1206.55 L1031.77 1206.55 L1031.18 1206.55 L1030.59 1206.55 L1030.01 1206.55 L1029.42 1206.55 L1028.83 1206.55 L1028.25 1206.55 L1027.66 1206.55 L1027.07 1206.55 L1026.49 1206.55 L1025.9 1206.55 L1025.32 1206.55 L1024.73 1206.55 L1024.14 1206.55 L1023.56 1206.55 L1022.97 1206.55 L1022.38 1206.55 L1021.8 1206.55 L1021.21 1206.55 L1020.62 1206.55 L1020.04 1206.55 L1019.45 1206.55 L1018.86 1206.55 L1018.28 1206.55 L1017.69 1206.55 L1017.11 1206.55 L1016.52 1206.55 L1015.93 1206.55 L1015.35 1206.55 L1014.76 1206.55 L1014.17 1206.55 L1013.59 1206.55 L1013 1206.55 L1012.41 1206.55 L1011.83 1206.55 L1011.24 1206.55 L1010.65 1206.55 L1010.07 1206.55 L1009.48 1206.55 L1008.9 1206.55 L1008.31 1206.55 L1007.72 1206.55 L1007.14 1206.55 L1006.55 1206.55 L1005.96 1206.55 L1005.38 1206.55 L1004.79 1206.55 L1004.2 1206.55 L1003.62 1206.55 L1003.03 1206.55 L1002.44 1206.55 L1001.86 1206.55 L1001.27 1206.55 L1000.69 1206.55 L1000.1 1206.55 L999.513 1206.55 L998.926 1206.55 L998.34 1206.55 L997.754 1206.55 L997.167 1206.55 L996.581 1206.55 L995.994 1206.55 L995.408 1206.55 L994.822 1206.55 L994.235 1206.55 L993.649 1206.55 L993.062 1206.55 L992.476 1206.55 L991.889 1206.55 L991.303 1206.55 L990.717 1206.55 L990.13 1206.55 L989.544 1206.55 L988.957 1206.55 L988.371 1206.55 L987.785 1206.55 L987.198 1206.55 L986.612 1206.55 L986.025 1206.55  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1206.62 986.612,1206.62 987.198,1206.62 987.785,1206.62 988.371,1206.62 988.957,1206.62 989.544,1206.62 990.13,1206.62 990.717,1206.62 991.303,1206.62 991.889,1206.62 992.476,1206.62 993.062,1206.62 993.649,1206.62 994.235,1206.62 994.822,1206.62 995.408,1206.62 995.994,1206.62 996.581,1206.62 997.167,1206.62 997.754,1206.62 998.34,1206.62 998.926,1206.62 999.513,1206.62 1000.1,1206.62 1000.69,1206.62 1001.27,1206.62 1001.86,1206.62 1002.44,1206.62 1003.03,1206.62 1003.62,1206.62 1004.2,1206.62 1004.79,1206.62 1005.38,1206.62 1005.96,1206.62 1006.55,1206.62 1007.14,1206.62 1007.72,1206.62 1008.31,1206.62 1008.9,1206.62 1009.48,1206.62 1010.07,1206.62 1010.65,1206.62 1011.24,1206.62 1011.83,1206.62 1012.41,1206.62 1013,1206.62 1013.59,1206.62 1014.17,1206.62 1014.76,1206.62 1015.35,1206.62 1015.93,1206.62 1016.52,1206.62 1017.11,1206.62 1017.69,1206.62 1018.28,1206.62 1018.86,1206.62 1019.45,1206.62 1020.04,1206.62 1020.62,1206.62 1021.21,1206.62 1021.8,1206.62 1022.38,1206.62 1022.97,1206.62 1023.56,1206.62 1024.14,1206.62 1024.73,1206.62 1025.32,1206.62 1025.9,1206.62 1026.49,1206.62 1027.07,1206.62 1027.66,1206.62 1028.25,1206.62 1028.83,1206.62 1029.42,1206.62 1030.01,1206.62 1030.59,1206.62 1031.18,1206.62 1031.77,1206.62 1032.35,1206.62 1032.94,1206.62 1033.52,1206.62 1034.11,1206.62 1034.7,1206.62 1035.28,1206.62 1035.87,1206.62 1036.46,1206.62 1037.04,1206.62 1037.63,1206.62 1038.22,1206.62 1038.8,1206.62 1039.39,1206.62 1039.98,1206.62 1040.56,1206.62 1041.15,1206.62 1041.73,1206.62 1042.32,1206.62 1042.91,1206.62 1043.49,1206.62 1044.08,1206.62 1044.67,1206.62 1045.25,1206.62 1045.84,1206.62 1046.43,1206.62 1047.01,1206.62 1047.6,1206.62 1048.19,1206.62 1048.77,1206.62 1049.36,1206.62 1049.94,1206.62 1050.53,1206.62 1051.12,1206.62 1051.7,1206.62 1052.29,1206.62 1052.88,1206.62 1053.46,1206.62 1054.05,1206.62 1054.64,1206.62 1055.22,1206.62 1055.81,1206.62 1056.39,1206.62 1056.98,1206.62 1057.57,1206.62 1058.15,1206.62 1058.74,1206.62 1059.33,1206.62 1059.91,1206.62 1060.5,1206.62 1061.09,1206.62 1061.67,1206.62 1062.26,1206.62 1062.85,1206.62 1063.43,1206.62 1064.02,1206.62 1064.6,1206.62 1065.19,1206.62 1065.78,1206.62 1066.36,1206.62 1066.95,1206.62 1067.54,1206.62 1068.12,1206.62 1068.71,1206.62 1069.3,1206.62 1069.88,1206.62 1070.47,1206.62 1071.06,1206.62 1071.64,1206.62 1072.23,1206.62 1072.81,1206.62 1073.4,1206.62 1073.99,1206.62 1074.57,1206.62 1075.16,1206.62 1075.75,1206.62 1076.33,1206.62 1076.92,1206.62 1077.51,1206.62 1078.09,1206.62 1078.68,1206.62 1079.26,1206.62 1079.85,1206.62 1080.44,1206.62 1081.02,1206.62 1081.61,1206.62 1082.2,1206.62 1082.78,1206.62 1083.37,1206.62 1083.96,1206.62 1084.54,1206.62 1085.13,1206.62 1085.72,1206.62 1086.3,1206.62 1086.89,1206.62 1087.47,1206.62 1088.06,1206.62 1088.65,1206.62 1089.23,1206.62 1089.82,1206.62 1090.41,1206.62 1090.99,1206.62 1091.58,1206.62 1092.17,1206.62 1092.75,1206.62 1093.34,1206.62 1093.93,1206.62 1094.51,1206.62 1095.1,1206.62 1095.68,1206.62 1096.27,1206.62 1096.86,1206.62 1097.44,1206.62 1098.03,1206.62 1098.62,1206.62 1099.2,1206.62 1099.79,1206.62 1100.38,1206.62 1100.96,1206.62 1101.55,1206.62 1102.14,1206.62 1102.72,1206.62 1103.31,1206.62 1103.89,1206.62 1104.48,1206.62 1105.07,1206.62 1105.65,1206.62 1106.24,1206.62 1106.83,1206.62 1107.41,1206.62 1108,1206.62 1108.59,1206.62 1109.17,1206.62 1109.76,1206.62 1110.34,1206.62 1110.93,1206.62 1111.52,1206.62 1112.1,1206.62 1112.69,1206.62 1113.28,1206.62 1113.86,1206.62 1114.45,1206.62 1115.04,1206.62 1115.62,1206.62 1116.21,1206.62 1116.8,1206.62 1117.38,1206.62 1117.97,1206.62 1118.55,1206.62 1119.14,1206.62 1119.73,1206.62 1120.31,1206.62 1120.9,1206.62 1121.49,1206.62 1122.07,1206.62 1122.66,1206.62 1123.25,1206.62 1123.83,1206.62 1124.42,1206.62 1125.01,1206.62 1125.59,1206.62 1126.18,1206.62 1126.76,1206.62 1127.35,1206.62 1127.94,1206.62 1128.52,1206.62 1129.11,1206.62 1129.7,1206.62 1130.28,1206.62 1130.87,1206.62 1131.46,1206.62 1132.04,1206.62 1132.63,1206.62 1133.21,1206.62 1133.8,1206.62 1134.39,1206.62 1134.97,1206.62 1135.56,1206.62 1136.15,1206.62 1136.73,1206.62 1137.32,1206.62 1137.91,1206.62 1138.49,1206.62 1139.08,1206.62 1139.67,1206.62 1140.25,1206.62 1140.84,1206.62 1141.42,1206.62 1142.01,1206.62 1142.6,1206.62 1143.18,1206.62 1143.77,1206.62 1144.36,1206.62 1144.94,1206.62 1145.53,1206.62 1146.12,1206.62 1146.7,1206.62 1147.29,1206.62 1147.88,1206.62 1148.46,1206.62 1149.05,1206.62 1149.63,1206.62 1150.22,1206.62 1150.81,1206.62 1151.39,1206.62 1151.98,1206.62 1152.57,1206.62 1153.15,1206.62 1153.74,1206.62 1154.33,1206.62 1154.91,1206.62 1155.5,1206.62 1156.09,1206.62 1156.67,1206.62 1157.26,1206.62 1157.84,1206.62 1158.43,1206.62 1159.02,1206.62 1159.6,1206.62 1160.19,1206.62 1160.78,1206.62 1161.36,1206.62 1161.95,1206.62 1162.54,1206.62 1163.12,1206.62 1163.71,1206.62 1164.29,1206.62 1164.88,1206.62 1165.47,1206.62 1166.05,1206.62 1166.64,1206.62 1167.23,1206.62 1167.81,1206.62 1168.4,1206.62 1168.99,1206.62 1169.57,1206.62 1170.16,1206.62 1170.75,1206.62 1171.33,1206.62 1171.92,1206.62 1172.5,1206.62 1173.09,1206.62 1173.68,1206.62 1174.26,1206.62 1174.85,1206.62 1175.44,1206.62 1176.02,1206.62 1176.61,1206.62 1177.2,1206.62 1177.78,1206.62 1178.37,1206.62 1178.96,1206.62 1179.54,1206.62 1180.13,1206.62 1180.71,1206.62 1181.3,1206.62 1181.89,1206.62 1182.47,1206.62 1183.06,1206.62 1183.65,1206.62 1184.23,1206.62 1184.82,1206.62 1185.41,1206.62 1185.99,1206.62 1186.58,1206.62 1187.16,1206.62 1187.75,1206.62 1188.34,1206.62 1188.92,1206.62 1189.51,1206.62 1190.1,1206.62 1190.68,1206.62 1191.27,1206.62 1191.86,1206.62 1192.44,1206.62 1193.03,1206.62 1193.62,1206.62 1194.2,1206.62 1194.79,1206.62 1195.37,1206.62 1195.96,1206.62 1196.55,1206.62 1197.13,1206.62 1197.72,1206.62 1198.31,1206.62 1198.89,1206.62 1199.48,1206.62 1200.07,1206.62 1200.65,1206.62 1201.24,1206.62 1201.83,1206.62 1202.41,1206.62 1203,1206.62 1203.58,1206.62 1204.17,1206.62 1204.76,1206.62 1205.34,1206.62 1205.93,1206.62 1206.52,1206.62 1207.1,1206.62 1207.69,1206.62 1208.28,1206.62 1208.86,1206.62 1209.45,1206.62 1210.03,1206.62 1210.62,1206.62 1211.21,1206.62 1211.79,1206.62 1212.38,1206.62 1212.97,1206.62 1213.55,1206.62 1214.14,1206.62 1214.73,1206.62 1215.31,1206.62 1215.9,1206.62 1216.49,1206.62 1217.07,1206.62 1217.66,1206.62 1218.24,1206.62 1218.83,1206.62 1219.42,1206.62 1220,1206.62 1220.59,1206.62 1221.18,1206.62 1221.76,1206.62 1222.35,1206.62 1222.94,1206.62 1223.52,1206.62 1224.11,1206.62 1224.7,1206.62 1225.28,1206.62 1225.87,1206.62 1226.45,1206.62 1227.04,1206.62 1227.63,1206.62 1228.21,1206.62 1228.8,1206.62 1229.39,1206.62 1229.97,1206.62 1230.56,1206.62 1231.15,1206.62 1231.73,1206.62 1232.32,1206.62 1232.91,1206.62 1233.49,1206.62 1234.08,1206.62 1234.66,1206.62 1235.25,1206.62 1235.84,1206.62 1236.42,1206.62 1237.01,1206.62 1237.6,1206.62 1238.18,1206.62 1238.77,1206.62 1239.36,1206.62 1239.94,1206.62 1240.53,1206.62 1241.11,1206.62 1241.7,1206.62 1242.29,1206.62 1242.87,1206.62 1243.46,1206.62 1244.05,1206.62 1244.63,1206.62 1245.22,1206.62 1245.81,1206.62 1246.39,1206.62 1246.98,1206.62 1247.57,1206.62 1248.15,1206.62 1248.74,1206.62 1249.32,1206.62 1249.91,1206.62 1250.5,1206.62 1251.08,1206.62 1251.67,1206.62 1252.26,1206.62 1252.84,1206.62 1253.43,1206.62 1254.02,1206.62 1254.6,1206.62 1255.19,1206.62 1255.78,1206.62 1256.36,1206.62 1256.95,1206.62 1257.53,1206.62 1258.12,1206.62 1258.71,1206.62 1259.29,1206.62 1259.88,1206.62 1260.47,1206.62 1261.05,1206.62 1261.64,1206.62 1262.23,1206.62 1262.81,1206.62 1263.4,1206.62 1263.98,1206.62 1264.57,1206.62 1265.16,1206.62 1265.74,1206.62 1266.33,1206.62 1266.92,1206.62 1267.5,1206.62 1268.09,1206.62 1268.68,1206.62 1269.26,1206.62 1269.85,1206.62 1270.44,1206.62 1271.02,1206.62 1271.61,1206.62 1272.19,1206.62 1272.78,1206.62 1273.37,1206.62 1273.95,1206.62 1274.54,1206.62 1275.13,1206.62 1275.71,1206.62 1276.3,1206.62 1276.89,1206.62 1277.47,1206.62 1278.06,1206.62 1278.65,1206.62 1279.23,1206.62 1279.82,1206.62 1280.4,1206.62 1280.99,1206.62 1281.58,1206.62 1282.16,1206.62 1282.75,1206.62 1283.34,1206.62 1283.92,1206.62 1284.51,1206.62 1285.1,1206.62 1285.68,1206.62 1286.27,1206.62 1286.86,1206.62 1287.44,1206.62 1288.03,1206.62 1288.61,1206.62 1289.2,1206.62 1289.79,1206.62 1290.37,1206.62 1290.96,1206.62 1291.55,1206.62 1292.13,1206.62 1292.72,1206.62 1293.31,1206.62 1293.89,1206.62 1294.48,1206.62 1295.06,1206.62 1295.65,1206.62 1296.24,1206.62 1296.82,1206.62 1297.41,1206.62 1298,1206.62 1298.58,1206.62 1299.17,1206.62 1299.76,1206.62 1300.34,1206.62 1300.93,1206.62 1301.52,1206.62 1302.1,1206.62 1302.69,1206.62 1303.27,1206.62 1303.86,1206.62 1304.45,1206.62 1305.03,1206.62 1305.62,1206.62 1306.21,1206.62 1306.79,1206.62 1307.38,1206.62 1307.97,1206.62 1308.55,1206.62 1309.14,1206.62 1309.73,1206.62 1310.31,1206.62 1310.9,1206.62 1311.48,1206.62 1312.07,1206.62 1312.66,1206.62 1313.24,1206.62 1313.83,1206.62 1314.42,1206.62 1315,1206.62 1315.59,1206.62 1316.18,1206.62 1316.76,1206.62 1317.35,1206.62 1317.93,1206.62 1318.52,1206.62 1319.11,1206.62 1319.69,1206.62 1320.28,1206.62 1320.87,1206.62 1321.45,1206.62 1322.04,1206.62 1322.63,1206.62 1323.21,1206.62 1323.8,1206.62 1324.39,1206.62 1324.97,1206.62 1325.56,1206.62 1326.14,1206.62 1326.73,1206.62 1327.32,1206.62 1327.9,1206.62 1328.49,1206.62 1329.08,1206.62 1329.66,1206.62 1330.25,1206.62 1330.84,1206.62 1331.42,1206.62 1332.01,1206.62 1332.6,1206.62 1333.18,1206.62 1333.77,1206.62 1334.35,1206.62 1334.94,1206.62 1335.53,1206.62 1336.11,1206.62 1336.7,1206.62 1337.29,1206.62 1337.87,1206.62 1338.46,1206.62 1339.05,1206.62 1339.63,1206.62 1340.22,1206.62 1340.8,1206.62 1341.39,1206.62 1341.98,1206.62 1342.56,1206.62 1343.15,1206.62 1343.74,1206.62 1344.32,1206.62 1344.91,1206.62 1345.5,1206.62 1346.08,1206.62 1346.67,1206.62 1347.26,1206.62 1347.84,1206.62 1348.43,1206.62 1349.01,1206.62 1349.6,1206.62 1350.19,1206.62 1350.77,1206.62 1351.36,1206.62 1351.95,1206.62 1352.53,1206.62 1353.12,1206.62 1353.71,1206.62 1354.29,1206.62 1354.88,1206.62 1355.47,1206.62 1356.05,1206.62 1356.64,1206.62 1357.22,1206.62 1357.81,1206.62 1358.4,1206.62 1358.98,1206.62 1359.57,1206.62 1360.16,1206.62 1360.74,1206.62 1361.33,1206.62 1361.92,1206.62 1362.5,1206.62 1363.09,1206.62 1363.68,1206.62 1364.26,1206.62 1364.85,1206.62 1365.43,1206.62 1366.02,1206.62 1366.61,1206.62 1367.19,1206.62 1367.78,1206.62 1368.37,1206.62 1368.95,1206.62 1369.54,1206.62 1370.13,1206.62 1370.71,1206.62 1371.3,1206.62 1371.88,1206.62 1372.47,1206.62 1373.06,1206.62 1373.64,1206.62 1374.23,1206.62 1374.82,1206.62 1375.4,1206.62 1375.99,1206.62 1376.58,1206.62 1377.16,1206.62 1377.75,1206.62 1378.34,1206.62 1378.92,1206.62 1379.51,1206.62 1380.09,1206.62 1380.68,1206.62 1381.27,1206.62 1381.85,1206.62 1382.44,1206.62 1383.03,1206.62 1383.61,1206.62 1384.2,1206.62 1384.79,1206.62 1385.37,1206.62 1385.96,1206.62 1386.55,1206.62 1387.13,1206.62 1387.72,1206.62 1388.3,1206.62 1388.89,1206.62 1389.48,1206.62 1390.06,1206.62 1390.65,1206.62 1391.24,1206.62 1391.82,1206.62 1392.41,1206.62 1393,1206.62 1393.58,1206.62 1394.17,1206.62 1394.75,1206.62 1395.34,1206.62 1395.93,1206.62 1396.51,1206.62 1397.1,1206.62 1397.69,1206.62 1398.27,1206.62 1398.86,1206.62 1399.45,1206.62 1400.03,1206.62 1400.62,1206.62 1401.21,1206.62 1401.79,1206.62 1402.38,1206.62 1402.96,1206.62 1403.55,1206.62 1404.14,1206.62 1404.72,1206.62 1405.31,1206.62 1405.9,1206.62 1406.48,1206.62 1407.07,1206.62 1407.66,1206.62 1408.24,1206.62 1408.83,1206.62 1409.42,1206.62 1410,1206.62 1410.59,1206.62 1411.17,1206.62 1411.76,1206.62 1412.35,1206.62 1412.93,1206.62 1413.52,1206.62 1414.11,1206.62 1414.69,1206.62 1415.28,1206.62 1415.87,1206.62 1416.45,1206.62 1417.04,1206.62 1417.63,1206.62 1418.21,1206.62 1418.8,1206.62 1419.38,1206.62 1419.97,1206.62 1420.56,1206.62 1421.14,1206.62 1421.73,1206.62 1422.32,1206.62 1422.9,1206.62 1423.49,1206.62 1424.08,1206.62 1424.66,1206.62 1425.25,1206.62 1425.83,1206.62 1426.42,1206.62 1427.01,1206.62 1427.59,1206.62 1428.18,1206.62 1428.77,1206.62 1429.35,1206.62 1429.94,1206.62 1430.53,1206.62 1431.11,1206.62 1431.7,1206.62 1432.29,1206.62 1432.87,1206.62 1433.46,1206.62 1434.04,1206.62 1434.63,1206.62 1435.22,1206.62 1435.8,1206.62 1436.39,1206.62 1436.98,1206.62 1437.56,1206.62 1438.15,1206.62 1438.74,1206.62 1439.32,1206.62 1439.91,1206.62 1440.5,1206.62 1441.08,1206.62 1441.67,1206.62 1442.25,1206.62 1442.84,1206.62 1443.43,1206.62 1444.01,1206.62 1444.6,1206.62 1445.19,1206.62 1445.77,1206.62 1446.36,1206.62 1446.95,1206.62 1447.53,1206.62 1448.12,1206.62 1448.7,1206.62 1449.29,1206.62 1449.88,1206.62 1450.46,1206.62 1451.05,1206.62 1451.64,1206.62 1452.22,1206.62 1452.81,1206.62 1453.4,1206.62 1453.98,1206.62 1454.57,1206.62 1455.16,1206.62 1455.74,1206.62 1456.33,1206.62 1456.91,1206.62 1457.5,1206.62 1458.09,1206.62 1458.67,1206.62 1459.26,1206.62 1459.85,1206.62 1460.43,1206.62 1461.02,1206.62 1461.61,1206.62 1462.19,1206.62 1462.78,1206.62 1463.37,1206.62 1463.95,1206.62 1464.54,1206.62 1465.12,1206.62 1465.71,1206.62 1466.3,1206.62 1466.88,1206.62 1467.47,1206.62 1468.06,1206.62 1468.64,1206.62 1469.23,1206.62 1469.82,1206.62 1470.4,1206.62 1470.99,1206.62 1471.57,1206.62 1472.16,1206.62 1472.75,1206.62 1473.33,1206.62 1473.92,1206.62 1474.51,1206.62 1475.09,1206.62 1475.68,1206.62 1476.27,1206.62 1476.85,1206.62 1477.44,1206.62 1478.03,1206.62 1478.61,1206.62 1479.2,1206.62 1479.78,1206.62 1480.37,1206.62 1480.96,1206.62 1481.54,1206.62 1482.13,1206.62 1482.72,1206.62 1483.3,1206.62 1483.89,1206.62 1484.48,1206.62 1485.06,1206.62 1485.65,1206.62 1486.24,1206.62 1486.82,1206.62 1487.41,1206.62 1487.99,1206.62 1488.58,1206.62 1489.17,1206.62 1489.75,1206.62 1490.34,1206.62 1490.93,1206.62 1491.51,1206.62 1492.1,1206.62 1492.69,1206.62 1493.27,1206.62 1493.86,1206.62 1494.45,1206.62 1495.03,1206.62 1495.62,1206.62 1496.2,1206.62 1496.79,1206.62 1497.38,1206.62 1497.96,1206.62 1498.55,1206.62 1499.14,1206.62 1499.72,1206.62 1500.31,1206.62 1500.9,1206.62 1501.48,1206.62 1502.07,1206.62 1502.65,1206.62 1503.24,1206.62 1503.83,1206.62 1504.41,1206.62 1505,1206.62 1505.59,1206.62 1506.17,1206.62 1506.76,1206.62 1507.35,1206.62 1507.93,1206.62 1508.52,1206.62 1509.11,1206.62 1509.69,1206.62 1510.28,1206.62 1510.86,1206.62 1511.45,1206.62 1512.04,1206.62 1512.62,1206.62 1513.21,1206.62 1513.8,1206.62 1514.38,1206.62 1514.97,1206.62 1515.56,1206.62 1516.14,1206.62 1516.73,1206.62 1517.32,1206.62 1517.9,1206.62 1518.49,1206.62 1519.07,1206.62 1519.66,1206.62 1520.25,1206.62 1520.83,1206.62 1521.42,1206.62 1522.01,1206.62 1522.59,1206.62 1523.18,1206.62 1523.77,1206.62 1524.35,1206.62 1524.94,1206.62 1525.52,1206.62 1526.11,1206.62 1526.7,1206.62 1527.28,1206.62 1527.87,1206.62 1528.46,1206.62 1529.04,1206.62 1529.63,1206.62 1530.22,1206.62 1530.8,1206.62 1531.39,1206.62 1531.98,1206.62 1532.56,1206.62 1533.15,1206.62 1533.73,1206.62 1534.32,1206.62 1534.91,1206.62 1535.49,1206.62 1536.08,1206.62 1536.67,1206.62 1537.25,1206.62 1537.84,1206.62 1538.43,1206.62 1539.01,1206.62 1539.6,1206.62 1540.19,1206.62 1540.77,1206.62 1541.36,1206.62 1541.94,1206.62 1542.53,1206.62 1543.12,1206.62 1543.7,1206.62 1544.29,1206.62 1544.88,1206.62 1545.46,1206.62 1546.05,1206.62 1546.64,1206.62 1547.22,1206.62 1547.81,1206.62 1548.4,1206.62 1548.98,1206.62 1549.57,1206.62 1550.15,1206.62 1550.74,1206.62 1551.33,1206.62 1551.91,1206.62 1552.5,1206.62 1553.09,1206.62 1553.67,1206.62 1554.26,1206.62 1554.85,1206.62 1555.43,1206.62 1556.02,1206.62 1556.6,1206.62 1557.19,1206.62 1557.78,1206.62 1558.36,1206.62 1558.95,1206.62 1559.54,1206.62 1560.12,1206.62 1560.71,1206.62 1561.3,1206.62 1561.88,1206.62 1562.47,1206.62 1563.06,1206.62 1563.64,1206.62 1564.23,1206.62 1564.81,1206.62 1565.4,1206.62 1565.99,1206.62 1566.57,1206.62 1567.16,1206.62 1567.75,1206.62 1568.33,1206.62 1568.92,1206.62 1569.51,1206.62 1570.09,1206.62 1570.68,1206.62 1571.27,1206.62 1571.85,1206.62 1572.44,1206.62 1573.02,1206.62 1573.61,1206.62 1574.2,1206.62 1574.78,1206.62 1575.37,1206.62 1575.96,1206.62 1576.54,1206.62 1577.13,1206.62 1577.72,1206.62 1578.3,1206.62 1578.89,1206.62 1579.47,1206.62 1580.06,1206.62 1580.65,1206.62 1581.23,1206.62 1581.82,1206.62 1582.41,1206.62 1582.99,1206.62 1583.58,1206.62 1584.17,1206.62 1584.75,1206.62 1585.34,1206.62 1585.93,1206.62 1586.51,1206.62 1587.1,1206.62 1587.68,1206.62 1588.27,1206.62 1588.86,1206.62 1589.44,1206.62 1590.03,1206.62 1590.62,1206.62 1591.2,1206.62 1591.79,1206.62 1592.38,1206.62 1592.96,1206.62 1593.55,1206.62 1594.14,1206.62 1594.72,1206.62 1595.31,1206.62 1595.89,1206.62 1596.48,1206.62 1597.07,1206.62 1597.65,1206.62 1598.24,1206.62 1598.83,1206.62 1599.41,1206.62 1600,1206.62 1600.59,1206.62 1601.17,1206.62 1601.76,1206.62 1602.34,1206.62 1602.93,1206.62 1603.52,1206.62 1604.1,1206.62 1604.69,1206.62 1605.28,1206.62 1605.86,1206.62 1606.45,1206.62 1607.04,1206.62 1607.62,1206.62 1608.21,1206.62 1608.8,1206.62 1609.38,1206.62 1609.97,1206.62 1610.55,1206.62 1611.14,1206.62 1611.73,1206.62 1612.31,1206.62 1612.9,1206.62 1613.49,1206.62 1614.07,1206.62 1614.66,1206.62 1615.25,1206.62 1615.83,1206.62 1616.42,1206.62 1617.01,1206.62 1617.59,1206.62 1618.18,1206.62 1618.76,1206.62 1619.35,1206.62 1619.94,1206.62 1620.52,1206.62 1621.11,1206.62 1621.7,1206.62 1622.28,1206.62 1622.87,1206.62 1623.46,1206.62 1624.04,1206.62 1624.63,1206.62 1625.22,1206.62 1625.8,1206.62 1626.39,1206.62 1626.97,1206.62 1627.56,1206.62 1628.15,1206.62 1628.73,1206.62 1629.32,1206.62 1629.91,1206.62 1630.49,1206.62 1631.08,1206.62 1631.67,1206.62 1632.25,1206.62 1632.84,1206.62 1633.42,1206.62 1634.01,1206.62 1634.6,1206.62 1635.18,1206.62 1635.77,1206.62 1636.36,1206.62 1636.94,1206.62 1637.53,1206.62 1638.12,1206.62 1638.7,1206.62 1639.29,1206.62 1639.88,1206.62 1640.46,1206.62 1641.05,1206.62 1641.63,1206.62 1642.22,1206.62 1642.81,1206.62 1643.39,1206.62 1643.98,1206.62 1644.57,1206.62 1645.15,1206.62 1645.74,1206.62 1646.33,1206.62 1646.91,1206.62 1647.5,1206.62 1648.09,1206.62 1648.67,1206.62 1649.26,1206.62 1649.84,1206.62 1650.43,1206.62 1651.02,1206.62 1651.6,1206.62 1652.19,1206.62 1652.78,1206.62 1653.36,1206.62 1653.95,1206.62 1654.54,1206.62 1655.12,1206.62 1655.71,1206.62 1656.29,1206.62 1656.88,1206.62 1657.47,1206.62 1658.05,1206.62 1658.64,1206.62 1659.23,1206.62 1659.81,1206.62 1660.4,1206.62 1660.99,1206.62 1661.57,1206.62 1662.16,1206.62 1662.75,1206.62 1663.33,1206.62 1663.92,1206.62 1664.5,1206.62 1665.09,1206.62 1665.68,1206.62 1666.26,1206.62 1666.85,1206.62 1667.44,1206.62 1668.02,1206.62 1668.61,1206.62 1669.2,1206.62 1669.78,1206.62 1670.37,1206.62 1670.96,1206.62 1671.54,1206.62 1672.13,1206.62 1672.71,1206.62 1673.3,1206.62 1673.89,1206.62 1674.47,1206.62 1675.06,1206.62 1675.65,1206.62 1676.23,1206.62 1676.82,1206.62 1677.41,1206.62 1677.99,1206.62 1678.58,1206.62 1679.17,1206.62 1679.75,1206.62 1680.34,1206.62 1680.92,1206.62 1681.51,1206.62 1682.1,1206.62 1682.68,1206.62 1683.27,1206.62 1683.86,1206.62 1684.44,1206.62 1685.03,1206.62 1685.62,1206.62 1686.2,1206.62 1686.79,1206.62 1687.37,1206.62 1687.96,1206.62 1688.55,1206.62 1689.13,1206.62 1689.72,1206.62 1690.31,1206.62 1690.89,1206.62 1691.48,1206.62 1692.07,1206.62 1692.65,1206.62 1693.24,1206.62 1693.83,1206.62 1694.41,1206.62 1695,1206.62 1695.58,1206.62 1696.17,1206.62 1696.76,1206.62 1697.34,1206.62 1697.93,1206.62 1698.52,1206.62 1699.1,1206.62 1699.69,1206.62 1700.28,1206.62 1700.86,1206.62 1701.45,1206.62 1702.04,1206.62 1702.62,1206.62 1703.21,1206.62 1703.79,1206.62 1704.38,1206.62 1704.97,1206.62 1705.55,1206.62 1706.14,1206.62 1706.73,1206.62 1707.31,1206.62 1707.9,1206.62 1708.49,1206.62 1709.07,1206.62 1709.66,1206.62 1710.24,1206.62 1710.83,1206.62 1711.42,1206.62 1712,1206.62 1712.59,1206.62 1713.18,1206.62 1713.76,1206.62 1714.35,1206.62 1714.94,1206.62 1715.52,1206.62 1716.11,1206.62 1716.7,1206.62 1717.28,1206.62 1717.87,1206.62 1718.45,1206.62 1719.04,1206.62 1719.63,1206.62 1720.21,1206.62 1720.8,1206.62 1721.39,1206.62 1721.97,1206.62 1722.56,1206.62 1723.15,1206.62 1723.73,1206.62 1724.32,1206.62 1724.91,1206.62 1725.49,1206.62 1726.08,1206.62 1726.66,1206.62 1727.25,1206.62 1727.84,1206.62 1728.42,1206.62 1729.01,1206.62 1729.6,1206.62 1730.18,1206.62 1730.77,1206.62 1731.36,1206.62 1731.94,1206.62 1732.53,1206.62 1733.11,1206.62 1733.7,1206.62 1734.29,1206.62 1734.87,1206.62 1735.46,1206.62 1736.05,1206.62 1736.63,1206.62 1737.22,1206.62 1737.81,1206.62 1738.39,1206.62 1738.98,1206.62 1739.57,1206.62 1740.15,1206.62 1740.74,1206.62 1741.32,1206.62 1741.91,1206.62 1742.5,1206.62 1743.08,1206.62 1743.67,1206.62 1744.26,1206.62 1744.84,1206.62 1745.43,1206.62 1746.02,1206.62 1746.6,1206.62 1747.19,1206.62 1747.78,1206.62 1748.36,1206.62 1748.95,1206.62 1749.53,1206.62 1750.12,1206.62 1750.71,1206.62 1751.29,1206.62 1751.88,1206.62 1752.47,1206.62 1753.05,1206.62 1753.64,1206.62 1754.23,1206.62 1754.81,1206.62 1755.4,1206.62 1755.99,1206.62 1756.57,1206.62 1757.16,1206.62 1757.74,1206.62 1758.33,1206.62 1758.92,1206.62 1759.5,1206.62 1760.09,1206.62 1760.68,1206.62 1761.26,1206.62 1761.85,1206.62 1762.44,1206.62 1763.02,1206.62 1763.61,1206.62 1764.19,1206.62 1764.78,1206.62 1765.37,1206.62 1765.95,1206.62 1766.54,1206.62 1767.13,1206.62 1767.71,1206.62 1768.3,1206.62 1768.89,1206.62 1769.47,1206.62 1770.06,1206.62 1770.65,1206.62 1771.23,1206.62 1771.82,1206.62 1772.4,1206.62 1772.99,1206.62 1773.58,1206.62 1774.16,1206.62 1774.75,1206.62 1775.34,1206.62 1775.92,1206.62 1776.51,1206.62 1777.1,1206.62 1777.68,1206.62 1778.27,1206.62 1778.86,1206.62 1779.44,1206.62 1780.03,1206.62 1780.61,1206.62 1781.2,1206.62 1781.79,1206.62 1782.37,1206.62 1782.96,1206.62 1783.55,1206.62 1784.13,1206.62 1784.72,1206.62 1785.31,1206.62 1785.89,1206.62 1786.48,1206.62 1787.06,1206.62 1787.65,1206.62 1788.24,1206.62 1788.82,1206.62 1789.41,1206.62 1790,1206.62 1790.58,1206.62 1791.17,1206.62 1791.76,1206.62 1792.34,1206.62 1792.93,1206.62 1793.52,1206.62 1794.1,1206.62 1794.69,1206.62 1795.27,1206.62 1795.86,1206.62 1796.45,1206.62 1797.03,1206.62 1797.62,1206.62 1798.21,1206.62 1798.79,1206.62 1799.38,1206.62 1799.97,1206.62 1800.55,1206.62 1801.14,1206.62 1801.73,1206.62 1802.31,1206.62 1802.9,1206.62 1803.48,1206.62 1804.07,1206.62 1804.66,1206.62 1805.24,1206.62 1805.83,1206.62 1806.42,1206.62 1807,1206.62 1807.59,1206.62 1808.18,1206.62 1808.76,1206.62 1809.35,1206.62 1809.94,1206.62 1810.52,1206.62 1811.11,1206.62 1811.69,1206.62 1812.28,1206.62 1812.87,1206.62 1813.45,1206.62 1814.04,1206.62 1814.63,1206.62 1815.21,1206.62 1815.8,1206.62 1816.39,1206.62 1816.97,1206.62 1817.56,1206.62 1818.14,1206.62 1818.73,1206.62 1819.32,1206.62 1819.9,1206.62 1820.49,1206.62 1821.08,1206.62 1821.66,1206.62 1822.25,1206.62 1822.84,1206.62 1823.42,1206.62 1824.01,1206.62 1824.6,1206.62 1825.18,1206.62 1825.77,1206.62 1826.35,1206.62 1826.94,1206.62 1827.53,1206.62 1828.11,1206.62 1828.7,1206.62 1829.29,1206.62 1829.87,1206.62 1830.46,1206.62 1831.05,1206.62 1831.63,1206.62 1832.22,1206.62 1832.81,1206.62 1833.39,1206.62 1833.98,1206.62 1834.56,1206.62 1835.15,1206.62 1835.74,1206.62 1836.32,1206.62 1836.91,1206.62 1837.5,1206.62 1838.08,1206.62 1838.67,1206.62 1839.26,1206.62 1839.84,1206.62 1840.43,1206.62 1841.01,1206.62 1841.6,1206.62 1842.19,1206.62 1842.77,1206.62 1843.36,1206.62 1843.95,1206.62 1844.53,1206.62 1845.12,1206.62 1845.71,1206.62 1846.29,1206.62 1846.88,1206.62 1847.47,1206.62 1848.05,1206.62 1848.64,1206.62 1849.22,1206.62 1849.81,1206.62 1850.4,1206.62 1850.98,1206.62 1851.57,1206.62 1852.16,1206.62 1852.74,1206.62 1853.33,1206.62 1853.92,1206.62 1854.5,1206.62 1855.09,1206.62 1855.68,1206.62 1856.26,1206.62 1856.85,1206.62 1857.43,1206.62 1858.02,1206.62 1858.61,1206.62 1859.19,1206.62 1859.78,1206.62 1860.37,1206.62 1860.95,1206.62 1861.54,1206.62 1862.13,1206.62 1862.71,1206.62 1863.3,1206.62 1863.88,1206.62 1864.47,1206.62 1865.06,1206.62 1865.64,1206.62 1866.23,1206.62 1866.82,1206.62 1867.4,1206.62 1867.99,1206.62 1868.58,1206.62 1869.16,1206.62 1869.75,1206.62 1870.34,1206.62 1870.92,1206.62 1871.51,1206.62 1872.09,1206.62 1872.68,1206.62 1873.27,1206.62 1873.85,1206.62 1874.44,1206.62 1875.03,1206.62 1875.61,1206.62 1876.2,1206.62 1876.79,1206.62 1877.37,1206.62 1877.96,1206.62 1878.55,1206.62 1879.13,1206.62 1879.72,1206.62 1880.3,1206.62 1880.89,1206.62 1881.48,1206.62 1882.06,1206.62 1882.65,1206.62 1883.24,1206.62 1883.82,1206.62 1884.41,1206.62 1885,1206.62 1885.58,1206.62 1886.17,1206.62 1886.76,1206.62 1887.34,1206.62 1887.93,1206.62 1888.51,1206.62 1889.1,1206.62 1889.69,1206.62 1890.27,1206.62 1890.86,1206.62 1891.45,1206.62 1892.03,1206.62 1892.62,1206.62 1893.21,1206.62 1893.79,1206.62 1894.38,1206.62 1894.96,1206.62 1895.55,1206.62 1896.14,1206.62 1896.72,1206.62 1897.31,1206.62 1897.9,1206.62 1898.48,1206.62 1899.07,1206.62 1899.66,1206.62 1900.24,1206.62 1900.83,1206.62 1901.42,1206.62 1902,1206.62 1902.59,1206.62 1903.17,1206.62 1903.76,1206.62 1904.35,1206.62 1904.93,1206.62 1905.52,1206.62 1906.11,1206.62 1906.69,1206.62 1907.28,1206.62 1907.87,1206.62 1908.45,1206.62 1909.04,1206.62 1909.63,1206.62 1910.21,1206.62 1910.8,1206.62 1911.38,1206.62 1911.97,1206.62 1912.56,1206.62 1913.14,1206.62 1913.73,1206.62 1914.32,1206.62 1914.9,1206.62 1915.49,1206.62 1916.08,1206.62 1916.66,1206.62 1917.25,1206.62 1917.83,1206.62 1918.42,1206.62 1919.01,1206.62 1919.59,1206.62 1920.18,1206.62 1920.77,1206.62 1921.35,1206.62 1921.94,1206.62 1922.53,1206.62 1923.11,1206.62 1923.7,1206.62 1924.29,1206.62 1924.87,1206.62 1925.46,1206.62 1926.04,1206.62 1926.63,1206.62 1927.22,1206.62 1927.8,1206.62 1928.39,1206.62 1928.98,1206.62 1929.56,1206.62 1930.15,1206.62 1930.74,1206.62 1931.32,1206.62 1931.91,1206.62 1932.5,1206.62 1933.08,1206.62 1933.67,1206.62 1934.25,1206.62 1934.84,1206.62 1935.43,1206.62 1936.01,1206.62 1936.6,1206.62 1937.19,1206.62 1937.77,1206.62 1938.36,1206.62 1938.95,1206.62 1939.53,1206.62 1940.12,1206.62 1940.71,1206.62 1941.29,1206.62 1941.88,1206.62 1942.46,1206.62 1943.05,1206.62 1943.64,1206.62 1944.22,1206.62 1944.81,1206.62 1945.4,1206.62 1945.98,1206.62 1946.57,1206.62 1947.16,1206.62 1947.74,1206.62 1948.33,1206.62 1948.91,1206.62 1949.5,1206.62 1950.09,1206.62 1950.67,1206.62 1951.26,1206.62 1951.85,1206.62 1952.43,1206.62 1953.02,1206.62 1953.61,1206.62 1954.19,1206.62 1954.78,1206.62 1955.37,1206.62 1955.95,1206.62 1956.54,1206.62 1957.12,1206.62 1957.71,1206.62 1958.3,1206.62 1958.88,1206.62 1959.47,1206.62 1960.06,1206.62 1960.64,1206.62 1961.23,1206.62 1961.82,1206.62 1962.4,1206.62 1962.99,1206.62 1963.58,1206.62 1964.16,1206.62 1964.75,1206.62 1965.33,1206.62 1965.92,1206.62 1966.51,1206.62 1967.09,1206.62 1967.68,1206.62 1968.27,1206.62 1968.85,1206.62 1969.44,1206.62 1970.03,1206.62 1970.61,1206.62 1971.2,1206.62 1971.78,1206.62 1972.37,1206.62 1972.96,1206.62 1973.54,1206.62 1974.13,1206.62 1974.72,1206.62 1975.3,1206.62 1975.89,1206.62 1976.48,1206.62 1977.06,1206.62 1977.65,1206.62 1978.24,1206.62 1978.82,1206.62 1979.41,1206.62 1979.99,1206.62 1980.58,1206.62 1981.17,1206.62 1981.75,1206.62 1982.34,1206.62 1982.93,1206.62 1983.51,1206.62 1984.1,1206.62 1984.69,1206.62 1985.27,1206.62 1985.86,1206.62 1986.45,1206.62 1987.03,1206.62 1987.62,1206.62 1988.2,1206.62 1988.79,1206.62 1989.38,1206.62 1989.96,1206.62 1990.55,1206.62 1991.14,1206.62 1991.72,1206.62 1992.31,1206.62 1992.9,1206.62 1993.48,1206.62 1994.07,1206.62 1994.65,1206.62 1995.24,1206.62 1995.83,1206.62 1996.41,1206.62 1997,1206.62 1997.59,1206.62 1998.17,1206.62 1998.76,1206.62 1999.35,1206.62 1999.93,1206.62 2000.52,1206.62 2001.11,1206.62 2001.69,1206.62 2002.28,1206.62 2002.86,1206.62 2003.45,1206.62 2004.04,1206.62 2004.62,1206.62 2005.21,1206.62 2005.8,1206.62 2006.38,1206.62 2006.97,1206.62 2007.56,1206.62 2008.14,1206.62 2008.73,1206.62 2009.32,1206.62 2009.9,1206.62 2010.49,1206.62 2011.07,1206.62 2011.66,1206.62 2012.25,1206.62 2012.83,1206.62 2013.42,1206.62 2014.01,1206.62 2014.59,1206.62 2015.18,1206.62 2015.77,1206.62 2016.35,1206.62 2016.94,1206.62 2017.53,1206.62 2018.11,1206.62 2018.7,1206.62 2019.28,1206.62 2019.87,1206.62 2020.46,1206.62 2021.04,1206.62 2021.63,1206.62 2022.22,1206.62 2022.8,1206.62 2023.39,1206.62 2023.98,1206.62 2024.56,1206.62 2025.15,1206.62 2025.73,1206.62 2026.32,1206.62 2026.91,1206.62 2027.49,1206.62 2028.08,1206.62 2028.67,1206.62 2029.25,1206.62 2029.84,1206.62 2030.43,1206.62 2031.01,1206.62 2031.6,1206.62 2032.19,1206.62 2032.77,1206.62 2033.36,1206.62 2033.94,1206.62 2034.53,1206.62 2035.12,1206.62 2035.7,1206.62 2036.29,1206.62 2036.88,1206.62 2037.46,1206.62 2038.05,1206.62 2038.64,1206.62 2039.22,1206.62 2039.81,1206.62 2040.4,1206.62 2040.98,1206.62 2041.57,1206.62 2042.15,1206.62 2042.74,1206.62 2043.33,1206.62 2043.91,1206.62 2044.5,1206.62 2045.09,1206.62 2045.67,1206.62 2046.26,1206.62 2046.85,1206.62 2047.43,1206.62 2048.02,1206.62 2048.6,1206.62 2049.19,1206.62 2049.78,1206.62 2050.36,1206.62 2050.95,1206.62 2051.54,1206.62 2052.12,1206.62 2052.71,1206.62 2053.3,1206.62 2053.88,1206.62 2054.47,1206.62 2055.06,1206.62 2055.64,1206.62 2056.23,1206.62 2056.81,1206.62 2057.4,1206.62 2057.99,1206.62 2058.57,1206.62 2059.16,1206.62 2059.75,1206.62 2060.33,1206.62 2060.92,1206.62 2061.51,1206.62 2062.09,1206.62 2062.68,1206.62 2063.27,1206.62 2063.85,1206.62 2064.44,1206.62 2065.02,1206.62 2065.61,1206.62 2066.2,1206.62 2066.78,1206.62 2067.37,1206.62 2067.96,1206.62 2068.54,1206.62 2069.13,1206.62 2069.72,1206.62 2070.3,1206.62 2070.89,1206.62 2071.48,1206.62 2072.06,1206.62 2072.65,1206.62 2073.23,1206.62 2073.82,1206.62 2074.41,1206.62 2074.99,1206.62 2075.58,1206.62 2076.17,1206.62 2076.75,1206.62 2077.34,1206.62 2077.93,1206.62 2078.51,1206.62 2079.1,1206.62 2079.68,1206.62 2080.27,1206.62 2080.86,1206.62 2081.44,1206.62 2082.03,1206.62 2082.62,1206.62 2083.2,1206.62 2083.79,1206.62 2084.38,1206.62 2084.96,1206.62 2085.55,1206.62 2086.14,1206.62 2086.72,1206.62 2087.31,1206.62 2087.89,1206.62 2088.48,1206.62 2089.07,1206.62 2089.65,1206.62 2090.24,1206.62 2090.83,1206.62 2091.41,1206.62 2092,1206.62 2092.59,1206.62 2093.17,1206.62 2093.76,1206.62 2094.35,1206.62 2094.93,1206.62 2095.52,1206.62 2096.1,1206.62 2096.69,1206.62 2097.28,1206.62 2097.86,1206.62 2098.45,1206.62 2099.04,1206.62 2099.62,1206.62 2100.21,1206.62 2100.8,1206.62 2101.38,1206.62 2101.97,1206.62 2102.55,1206.62 2103.14,1206.62 2103.73,1206.62 2104.31,1206.62 2104.9,1206.62 2105.49,1206.62 2106.07,1206.62 2106.66,1206.62 2107.25,1206.62 2107.83,1206.62 2108.42,1206.62 2109.01,1206.62 2109.59,1206.62 2110.18,1206.62 2110.76,1206.62 2111.35,1206.62 2111.94,1206.62 2112.52,1206.62 2113.11,1206.62 2113.7,1206.62 2114.28,1206.62 2114.87,1206.62 2115.46,1206.62 2116.04,1206.62 2116.63,1206.62 2117.22,1206.62 2117.8,1206.62 2118.39,1206.62 2118.97,1206.62 2119.56,1206.62 2120.15,1206.62 2120.73,1206.62 2121.32,1206.62 2121.91,1206.62 2122.49,1206.62 2123.08,1206.62 2123.67,1206.62 2124.25,1206.62 2124.84,1206.62 2125.42,1206.62 2126.01,1206.62 2126.6,1206.62 2127.18,1206.62 2127.77,1206.62 2128.36,1206.62 2128.94,1206.62 2129.53,1206.62 2130.12,1206.62 2130.7,1206.62 2131.29,1206.62 2131.88,1206.62 2132.46,1206.62 2133.05,1206.62 2133.63,1206.62 2134.22,1206.62 2134.81,1206.62 2135.39,1206.62 2135.98,1206.62 2136.57,1206.62 2137.15,1206.62 2137.74,1206.62 2138.33,1206.62 2138.91,1206.62 2139.5,1206.62 2140.09,1206.62 2140.67,1206.62 2141.26,1206.62 2141.84,1206.62 2142.43,1206.62 2143.02,1206.62 2143.6,1206.62 2144.19,1206.62 2144.78,1206.62 2145.36,1206.62 2145.95,1206.62 2146.54,1206.62 2147.12,1206.62 2147.71,1206.62 2148.3,1206.62 2148.88,1206.62 2149.47,1206.62 2150.05,1206.62 2150.64,1206.62 2151.23,1206.62 2151.81,1206.62 2152.4,1206.62 2152.99,1206.62 2153.57,1206.62 2154.16,1206.62 2154.75,1206.62 2155.33,1206.62 2155.92,1206.62 2156.5,1206.62 2157.09,1206.62 2157.68,1206.62 2158.26,1206.62 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.07,1186.96 1400.68,899.083 \"/>\n<polyline clip-path=\"url(#clip112)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1225.65 985.439,1186.96 2158.26,1186.96 2158.26,1225.65 985.439,1225.65 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip110)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip110)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip113\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip110)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip113)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-4871.05 163.792,-5884.8 164.351,-6810.32 164.91,-6434.09 165.469,-6144.56 166.029,-5930.86 166.588,-6706.55 167.147,-7411.36 167.706,-8063.41 168.266,-7824.78 168.825,-8378.71 169.384,-8892.01 169.943,-9336.04 170.503,-9746.62 171.062,-9481.14 171.621,-9828.25 172.18,-10120 172.74,-10372.7 173.299,-9640.75 173.858,-9866.26 174.417,-10061.9 174.977,-9855.57 175.536,-10025.2 176.095,-10160.9 176.655,-10280.2 177.214,-10363.1 177.773,-10428.5 178.332,-10458 178.892,-9957.78 179.451,-9995.96 180.01,-9777.65 180.569,-9574.5 181.129,-9582.56 181.688,-9558.39 182.247,-9345.79 182.806,-9315.91 183.366,-9103.46 183.925,-8894.26 184.484,-8834.06 185.043,-8621.41 185.603,-8417.44 186.162,-8335.32 186.721,-8246.93 187.28,-8173.15 187.84,-8078.35 188.399,-7869.83 188.958,-7659.03 189.517,-7455.47 190.077,-7356.69 190.636,-7244 191.195,-7052.32 191.754,-6861.54 192.314,-6676.67 192.873,-6497.56 193.432,-6170.5 193.991,-5991.96 194.551,-5814.29 195.11,-5707.54 195.669,-5416.99 196.228,-5249.85 196.788,-5083.53 197.347,-4870.77 197.906,-4761.78 198.465,-4555.13 199.025,-4358.45 199.584,-4118.03 200.143,-3935.45 200.702,-3761.42 201.262,-3542.23 201.821,-3417.44 202.38,-3256.8 202.939,-3185.53 203.499,-3109.45 204.058,-2997.58 204.617,-2883.88 205.176,-2741.51 205.736,-2601.94 206.295,-2466.55 206.854,-2400.72 207.413,-2206.74 207.973,-2115.57 208.532,-2026.23 209.091,-1966.17 209.65,-1875.62 210.21,-1757.1 210.769,-1672.26 211.328,-1592.05 211.887,-1511.42 212.447,-1430.95 213.006,-1385.42 213.565,-1286.11 214.124,-1212.4 214.684,-1090.7 215.243,-1018.36 215.802,-950.569 216.361,-878.746 216.921,-815.399 217.48,-703.955 218.039,-669.563 218.598,-608.064 219.158,-576.165 219.717,-520.251 220.276,-441.275 220.835,-368.441 221.395,-337.045 221.954,-290.138 222.513,-265.401 223.072,-175.424 223.632,-84.1758 224.191,-41.5242 224.75,-20.432 225.309,20.6318 225.869,40.3514 226.428,102.715 226.987,141.591 227.546,203.254 228.106,258.282 228.665,350.841 229.224,396.354 229.783,401.8 230.343,469.306 230.902,492.477 231.461,536.815 232.02,555.07 232.58,576.456 233.139,572.93 233.698,574.088 234.257,614.587 234.817,672.879 235.376,670.817 235.935,742.789 236.494,756.121 237.054,802.511 237.613,814.636 238.172,825.749 238.731,833.645 239.291,842.023 239.85,831.92 240.409,822.842 240.968,817.486 241.528,832.019 242.087,808.858 242.646,804.294 243.205,816.236 243.765,791.125 244.324,754.094 244.883,752.258 245.442,754.578 246.002,773.845 246.561,756.617 247.12,770.946 247.679,823.217 248.239,805.45 248.798,823.15 249.357,858.174 249.916,891.823 250.476,906.425 251.035,916.164 251.594,983.194 252.153,990.995 252.713,966.971 253.272,978.038 253.831,970.898 254.39,978.602 254.95,989.29 255.509,997.157 256.068,1003.6 256.627,998.673 257.187,967.997 257.746,980.113 258.305,974.124 258.864,1034.55 259.424,1061.75 259.983,1033.9 260.542,1061.34 261.101,1032.87 261.661,1042.03 262.22,1030.52 262.779,1026.45 263.338,1003.43 263.898,981.144 264.457,976.692 265.016,987.638 265.575,984.058 266.135,996.385 266.694,989.453 267.253,983.856 267.812,979.933 268.372,1023.29 268.931,1053.3 269.49,1078.2 270.049,1068.42 270.609,1091.44 271.168,1081.44 271.727,1154.66 272.286,1140.18 272.846,1110.59 273.405,1100.55 273.964,1087.28 274.523,1080.63 275.083,1117.16 275.642,1103.85 276.201,1108.89 276.76,1079.59 277.32,1087.51 277.879,1111.13 278.438,1083.47 278.997,1121.92 279.557,1130.36 280.116,1134.04 280.675,1157.59 281.234,1179.97 281.794,1164.03 282.353,1137.06 282.912,1125.55 283.471,1099.31 284.031,1087.31 284.59,1063.79 285.149,1040.7 285.708,1017.43 286.268,1025.73 286.827,1022.43 287.386,1034.23 287.945,1046.69 288.505,1042.34 289.064,1016.7 289.623,1058.39 290.182,1082.62 290.742,1058.36 291.301,1050.77 291.86,1056.48 292.419,1012.3 292.979,1019.99 293.538,1026.09 294.097,1036.25 294.656,1043.01 295.216,1050.96 295.775,1061.33 296.334,1051.74 296.893,1010.62 297.453,1005.65 298.012,1001.39 298.571,1012.06 299.13,1002.61 299.69,996.207 300.249,1020.71 300.808,994.188 301.368,957.083 301.927,938.682 302.486,938.551 303.045,954.399 303.605,982.637 304.164,982.237 304.723,975.866 305.282,989.743 305.842,985.176 306.401,1014.84 306.96,995.81 307.519,973.092 308.079,999.76 308.638,974.066 309.197,936.707 309.756,981.128 310.316,993.144 310.875,1005.68 311.434,982.249 311.993,976.258 312.553,953.615 313.112,1003.26 313.671,981.548 314.23,978.24 314.79,975.894 315.349,972.693 315.908,946.753 316.467,963.521 317.027,979.681 317.586,974.927 318.145,988.368 318.704,1015.4 319.264,1039.13 319.823,1033.68 320.382,1037.02 320.941,980.638 321.501,969.399 322.06,963.881 322.619,958.68 323.178,951.741 323.738,946.32 324.297,927.806 324.856,941.908 325.415,966.896 325.975,978.823 326.534,972.437 327.093,980.251 327.652,1006.38 328.212,993.592 328.771,1052.87 329.33,1075.61 329.889,1033.15 330.449,1010.14 331.008,1002.89 331.567,1013.32 332.126,1006.89 332.686,1032.93 333.245,1024.06 333.804,1018.68 334.363,1005.1 334.923,1016.41 335.482,1006.72 336.041,1014.01 336.6,1010.21 337.16,1000.74 337.719,1022.34 338.278,1042.56 338.837,999.803 339.397,956.818 339.956,903.265 340.515,933.904 341.074,931.427 341.634,893.601 342.193,875.986 342.752,875.641 343.311,872.43 343.871,869.149 344.43,866.55 344.989,898.088 345.548,831.73 346.108,863.878 346.667,865.997 347.226,875.919 347.785,856.529 348.345,841.937 348.904,812.371 349.463,813.577 350.022,830.219 350.582,845.614 351.141,863.43 351.7,895.511 352.259,861.763 352.819,893.399 353.378,840.384 353.937,809.221 354.496,791.638 355.056,791.568 355.615,824.014 356.174,811.971 356.733,842.888 357.293,858.021 357.852,874.211 358.411,891.993 358.97,858.302 359.53,854.653 360.089,848.389 360.648,844.793 361.207,812.023 361.767,810.434 362.326,806.651 362.885,789.932 363.444,773.024 364.004,774.927 364.563,779.88 365.122,799.829 365.681,803.189 366.241,807.134 366.8,810.028 367.359,822.852 367.918,821.837 368.478,837.33 369.037,823.064 369.596,821.685 370.155,823.748 370.715,833.844 371.274,866.083 371.833,850.244 372.392,864.257 372.952,879.446 373.511,875.023 374.07,905.18 374.629,904.712 375.189,882.89 375.748,889.824 376.307,900.564 376.866,894.28 377.426,921.052 377.985,932.225 378.544,908.677 379.103,929.543 379.663,923.592 380.222,870.086 380.781,834.157 381.34,848.212 381.9,842.614 382.459,840.263 383.018,803.165 383.577,801.143 384.137,768.705 384.696,804.197 385.255,839.983 385.814,854 386.374,883.304 386.933,894.151 387.492,904.675 388.051,914.393 388.611,894.737 389.17,890.336 389.729,903.126 390.288,924.899 390.848,916.104 391.407,905.982 391.966,882.032 392.525,937.296 393.085,931.092 393.644,957.447 394.203,902.33 394.762,884.834 395.322,877.964 395.881,876.11 396.44,854.642 396.999,870.279 397.559,865.085 398.118,879.012 398.677,842.801 399.236,840.774 399.796,836.457 400.355,819.552 400.914,814.454 401.473,794.692 402.033,771.741 402.592,772.814 403.151,755.729 403.71,754.319 404.27,736.579 404.829,771.34 405.388,756.278 405.947,771.177 406.507,755.331 407.066,739.117 407.625,739.703 408.184,739.176 408.744,722.66 409.303,723.843 409.862,774.416 410.421,790.108 410.981,789.926 411.54,804.445 412.099,751.581 412.658,719.774 413.218,721.861 413.777,705.761 414.336,709.091 414.895,749.507 415.455,750.192 416.014,781.448 416.573,751.451 417.132,785.944 417.692,784.275 418.251,764.553 418.81,781.127 419.369,763.798 419.929,748.903 420.488,763.008 421.047,796.282 421.606,757.063 422.166,711.14 422.725,700.556 423.284,705.366 423.843,724.851 424.403,725.411 424.962,729.623 425.521,746.813 426.08,747.548 426.64,717.112 427.199,721.758 427.758,722.24 428.318,721.553 428.877,741.304 429.436,740.481 429.995,742.347 430.555,762.384 431.114,749.664 431.673,751.035 432.232,768.995 432.792,750.587 433.351,735.195 433.91,719.336 434.469,687.801 435.029,738.92 435.588,756.423 436.147,819.173 436.706,833.668 437.266,831.398 437.825,811.518 438.384,794.158 438.943,794.981 439.503,778.786 440.062,777.947 440.621,776.835 441.18,757.387 441.74,743.022 442.299,728.217 442.858,731.002 443.417,716.839 443.977,702.469 444.536,721.104 445.095,740.024 445.654,722.38 446.214,724.733 446.773,711.59 447.332,748.94 447.891,800.137 448.451,798.864 449.01,797.238 449.569,814.013 450.128,781.423 450.688,796.693 451.247,812.494 451.806,827.28 452.365,826.933 452.925,838.265 453.484,819.397 454.043,801.443 454.602,798.721 455.162,796.475 455.721,794.392 456.28,791.453 456.839,818.479 457.399,815.045 457.958,763.691 458.517,782.579 459.076,799.57 459.636,782.124 460.195,779.3 460.754,822.983 461.313,821.325 461.873,816.455 462.432,795.329 462.991,824.045 463.55,833.804 464.11,811.899 464.669,807.959 465.228,755.814 465.787,771.94 466.347,802.887 466.906,782.072 467.465,764.793 468.024,749.556 468.584,761.686 469.143,744.095 469.702,779.278 470.261,779.275 470.821,778.929 471.38,794.862 471.939,792.237 472.498,807.947 473.058,773.725 473.617,755.984 474.176,753.077 474.735,771.282 475.295,836.512 475.854,876.776 476.413,855.244 476.972,798.463 477.532,813.36 478.091,792.151 478.65,757.311 479.209,803.291 479.769,816.845 480.328,812.671 480.887,794.128 481.446,761.573 482.006,822.849 482.565,832.057 483.124,809.718 483.683,771.845 484.243,784.804 484.802,747.51 485.361,781.029 485.92,762.1 486.48,790.018 487.039,815.549 487.598,810.028 488.157,822.614 488.717,800.873 489.276,813.453 489.835,825.494 490.394,819.505 490.954,799.824 491.513,780.31 492.072,763.844 492.631,760.555 493.191,725.773 493.75,709.623 494.309,744.102 494.868,776.538 495.428,758.491 495.987,724.067 496.546,690.911 497.105,692.01 497.665,677.053 498.224,711.543 498.783,681.679 499.342,636.381 499.902,672.885 500.461,694.254 501.02,696.134 501.579,730.834 502.139,713.19 502.698,729.003 503.257,712.83 503.816,696.159 504.376,695.63 504.935,712.156 505.494,710.272 506.053,724.279 506.613,741.497 507.172,760.404 507.731,777.824 508.29,759.893 508.85,794.309 509.409,809.828 509.968,807.422 510.527,804.937 511.087,802.355 511.646,770.338 512.205,768.815 512.764,811.672 513.324,771.902 513.883,768.493 514.442,814.94 515.001,810.033 515.561,808.433 516.12,804.061 516.679,815.024 517.238,794.804 517.798,794.69 518.357,775.429 518.916,772.552 519.475,781.299 520.035,781.239 520.594,796.194 521.153,772.508 521.712,769.504 522.272,799.449 522.831,797.836 523.39,743.331 523.949,740.586 524.509,791.89 525.068,789.91 525.627,783.321 526.186,779.665 526.746,782.081 527.305,776.633 527.864,807.584 528.423,820.979 528.983,814.683 529.542,805.916 530.101,798.699 530.66,778.97 531.22,788.222 531.779,800.009 532.338,780.537 532.897,743.238 533.457,773.415 534.016,790.103 534.575,801.658 535.134,846.216 535.694,822.857 536.253,816.34 536.812,760.707 537.371,726.635 537.931,757.999 538.49,741.371 539.049,759.878 539.608,777.287 540.168,758.694 540.727,755.494 541.286,753.59 541.845,735.635 542.405,733.453 542.964,684.772 543.523,687.151 544.082,670.357 544.642,653.748 545.201,639.648 545.76,643.958 546.319,645.206 546.879,666.203 547.438,667.991 547.997,689.424 548.556,654.722 549.116,655.137 549.675,656.369 550.234,673.509 550.793,692.475 551.353,690.725 551.912,704.712 552.471,721.603 553.031,723.501 553.59,706.801 554.149,710.164 554.708,707.588 555.268,689.957 555.827,695.821 556.386,699.348 556.945,731.538 557.505,716.793 558.064,698.117 558.623,717.496 559.182,716.461 559.742,717.223 560.301,730.946 560.86,701.573 561.419,688.64 561.979,672.004 562.538,641.506 563.097,644.873 563.656,632.558 564.216,619.37 564.775,609.917 565.334,597.687 565.893,604.545 566.453,605.333 567.012,664.714 567.571,635.959 568.13,652.924 568.69,609.195 569.249,631.616 569.808,633.46 570.367,640.196 570.927,614.149 571.486,621.743 572.045,608.884 572.604,615.759 573.164,623.264 573.723,596.544 574.282,619.269 574.841,643.877 575.401,648.397 575.96,651.138 576.519,670.194 577.078,670.81 577.638,705.692 578.197,658.716 578.756,706.851 579.315,707.058 579.875,691.425 580.434,645.415 580.993,617.812 581.552,606.91 582.112,616.14 582.671,637.509 583.23,627.7 583.789,662.185 584.349,664.104 584.908,681.222 585.467,696.473 586.026,731.514 586.586,731.517 587.145,711.873 587.704,727.862 588.263,695.586 588.823,681.533 589.382,684.559 589.941,668.501 590.5,699.487 591.06,715.807 591.619,719.801 592.178,687.053 592.737,688.146 593.297,690.022 593.856,675.998 594.415,662.244 594.974,680.329 595.534,680.782 596.093,698.782 596.652,717.012 597.211,749.319 597.771,764.481 598.33,758.32 598.889,770.811 599.448,768.479 600.008,778.623 600.567,770.436 601.126,750.338 601.685,701.815 602.245,699.451 602.804,714.76 603.363,694.548 603.922,693.668 604.482,694.873 605.041,709.504 605.6,709.22 606.159,707.129 606.719,705.098 607.278,702.668 607.837,703.957 608.396,684.924 608.956,650.885 609.515,686.416 610.074,705.123 610.633,704.138 611.193,733.824 611.752,731.988 612.311,728.499 612.87,725.982 613.43,724.748 613.989,707.792 614.548,709.032 615.107,725.531 615.667,740.726 616.226,758.243 616.785,770.241 617.344,767.603 617.904,782.627 618.463,795.437 619.022,788.161 619.581,737.326 620.141,734.959 620.7,733.782 621.259,716.088 621.818,715.626 622.378,731.738 622.937,760.289 623.496,754.408 624.055,720.511 624.615,688.923 625.174,688.209 625.733,657.293 626.292,646.154 626.852,650.012 627.411,670.253 627.97,685.373 628.529,687.412 629.089,717.988 629.648,749.101 630.207,727.291 630.766,726.698 631.326,725.835 631.885,739.157 632.444,749.687 633.003,759.207 633.563,726.417 634.122,723.505 634.681,739.962 635.24,752.091 635.8,765.899 636.359,730.847 636.918,698.532 637.477,679.607 638.037,682.54 638.596,685.363 639.155,655.339 639.714,672.327 640.274,671.778 640.833,688.098 641.392,688.322 641.951,685.042 642.511,669.789 643.07,721.595 643.629,740.212 644.188,738.477 644.748,751.757 645.307,733.752 645.866,762.845 646.425,757.553 646.985,725.338 647.544,723.536 648.103,736.426 648.662,701.736 649.222,734.991 649.781,703.841 650.34,686.5 650.899,703.624 651.459,718.015 652.018,747.782 652.577,743.378 653.136,740.337 653.696,750.985 654.255,748.506 654.814,744.374 655.373,723.305 655.933,722.245 656.492,688.597 657.051,674.716 657.61,660.382 658.17,697.889 658.729,679.705 659.288,711.009 659.847,709.086 660.407,688.995 660.966,688.841 661.525,688.977 662.084,718.836 662.644,715.258 663.203,743.314 663.762,724.61 664.321,720.936 664.881,701.361 665.44,717.898 665.999,731.975 666.558,701.521 667.118,733.031 667.677,746.463 668.236,728.515 668.795,725.891 669.355,692.18 669.914,677.05 670.473,694.608 671.032,691.366 671.592,692.897 672.151,706.972 672.71,706.796 673.269,721.928 673.829,721.273 674.388,721.294 674.947,717.79 675.506,736.685 676.066,732.293 676.625,711.75 677.184,743.961 677.743,723.509 678.303,701.485 678.862,715.19 679.421,699.145 679.981,729.673 680.54,716.804 681.099,714.846 681.658,711.854 682.218,677.648 682.777,695.899 683.336,742.627 683.895,706.692 684.455,704.511 685.014,686.455 685.573,689.63 686.132,711.666 686.692,728.159 687.251,728.37 687.81,730.055 688.369,758.051 688.929,739.914 689.488,724.069 690.047,705.71 690.606,703.938 691.166,701.352 691.725,683.734 692.284,670.674 692.843,670.965 693.403,674.814 693.962,664.816 694.521,700.704 695.08,700.844 695.64,716.321 696.199,749.509 696.758,776.463 697.317,754.512 697.877,749.58 698.436,746.712 698.995,741.189 699.554,738.802 700.114,735.951 700.673,717.224 701.232,681.293 701.791,662.648 702.351,647.565 702.91,664.682 703.469,667.233 704.028,653.49 704.588,669.456 705.147,669.986 705.706,655.156 706.265,658.417 706.825,643.297 707.384,628.937 707.943,647.537 708.502,649.034 709.062,666.169 709.621,670.561 710.18,703.353 710.739,718.579 711.299,720.853 711.858,736.833 712.417,718.135 712.976,681.594 713.536,679.392 714.095,680.051 714.654,732 715.213,701.239 715.773,700.709 716.332,699.898 716.891,696.735 717.45,692.915 718.01,710.431 718.569,743.484 719.128,738.148 719.687,719.551 720.247,718.925 720.806,746.834 721.365,749.217 721.924,748.902 722.484,748.054 723.043,743.561 723.602,773.612 724.161,752.066 724.721,732.808 725.28,748.894 725.839,748.773 726.398,760.948 726.958,770.885 727.517,722.78 728.076,720.417 728.635,718.175 729.195,681.811 729.754,697.619 730.313,715.263 730.872,694.829 731.432,707.91 731.991,692.846 732.55,657.658 733.109,659.002 733.669,629.11 734.228,652.824 734.787,658.058 735.346,676.516 735.906,681.106 736.465,649.615 737.024,670.943 737.583,641.498 738.143,631.846 738.702,636.682 739.261,591.867 739.82,616.179 740.38,637.08 740.939,623.835 741.498,611.956 742.057,632.527 742.617,651.815 743.176,673.171 743.735,674.259 744.294,640.327 744.854,661.784 745.413,698.969 745.972,716.352 746.531,717.447 747.091,706.798 747.65,708.335 748.209,672.612 748.768,690.196 749.328,710.549 749.887,661.868 750.446,666.303 751.005,700.523 751.565,687.872 752.124,686.94 752.683,668.43 753.242,689.318 753.802,655.538 754.361,640.98 754.92,675.456 755.479,675.9 756.039,678.784 756.598,647.797 757.157,665.506 757.716,634.872 758.276,653.832 758.835,657.293 759.394,679.47 759.953,714.312 760.513,745.912 761.072,760.116 761.631,775.276 762.19,784.892 762.75,750.584 763.309,747.074 763.868,746.088 764.427,758.466 764.987,736.63 765.546,751.452 766.105,750.146 766.664,747.428 767.224,776.316 767.783,786.298 768.342,780.653 768.901,774.136 769.461,789.336 770.02,789.092 770.579,749.043 771.138,763.359 771.698,741.323 772.257,720.298 772.816,722.721 773.375,741.375 773.935,737.306 774.494,718.334 775.053,700.713 775.612,699.181 776.172,696.91 776.731,681.016 777.29,666.83 777.849,670.816 778.409,657.634 778.968,644.255 779.527,647.094 780.086,634.207 780.646,636.954 781.205,624.272 781.764,659.881 782.323,646.037 782.883,661.65 783.442,725.996 784.001,689.134 784.56,671.925 785.12,670.603 785.679,656.979 786.238,659.292 786.797,677.972 787.357,694.935 787.916,678.146 788.475,664.909 789.034,699.951 789.594,664.32 790.153,664.568 790.712,648.619 791.271,649.658 791.831,666.919 792.39,669.115 792.949,669.78 793.508,718.256 794.068,702.946 794.627,687.513 795.186,718.501 795.745,749.646 796.305,776.696 796.864,758.116 797.423,769.71 797.982,763.385 798.542,743.614 799.101,741.503 799.66,741.412 800.219,742.261 800.779,740.166 801.338,753.45 801.897,714.651 802.456,682.373 803.016,634.204 803.575,620.961 804.134,624.243 804.693,631.486 805.253,636.74 805.812,620.375 806.371,639.29 806.931,639.909 807.49,646.734 808.049,650.596 808.608,622.747 809.168,659.417 809.727,693.228 810.286,695.502 810.845,659.61 811.405,691.206 811.964,706.955 812.523,705.803 813.082,738.258 813.642,750.843 814.201,733.219 814.76,731.142 815.319,727.275 815.879,707.889 816.438,722.331 816.997,735.17 817.556,748.296 818.116,712.892 818.675,695.934 819.234,727.85 819.793,682.304 820.353,700.529 820.912,681.743 821.471,650.155 822.03,682.03 822.59,682.245 823.149,667.332 823.708,671.923 824.267,691.369 824.827,693.83 825.386,677.905 825.945,694.639 826.504,678.992 827.064,692.862 827.623,676.478 828.182,677.726 828.741,679.002 829.301,693.827 829.86,694.851 830.419,712.73 830.978,712.926 831.538,695.313 832.097,695.658 832.656,679.442 833.215,696.962 833.775,696.158 834.334,668.217 834.893,698.791 835.452,731.104 836.012,745.62 836.571,743.167 837.13,722.825 837.689,737.74 838.249,720.28 838.808,705.115 839.367,691.599 839.926,658.207 840.486,675.732 841.045,688.933 841.604,689.683 842.163,692.453 842.723,692.202 843.282,712.95 843.841,714.612 844.4,710.304 844.96,709.287 845.519,677.172 846.078,665.219 846.637,681.773 847.197,697.667 847.756,681.656 848.315,680.751 848.874,682.198 849.434,681.071 849.993,681.665 850.552,667.454 851.111,655.318 851.671,629.309 852.23,614.184 852.789,651.896 853.348,636.678 853.908,641.06 854.467,624.972 855.026,624.389 855.585,661.615 856.145,738.636 856.704,737.159 857.263,736.248 857.822,702.711 858.382,717.604 858.941,747.965 859.5,792.635 860.059,800.058 860.619,809.078 861.178,802.476 861.737,766.672 862.296,760.308 862.856,728.15 863.415,708.642 863.974,709.805 864.533,691.843 865.093,688.528 865.652,685.928 866.211,672.486 866.77,673.094 867.33,626.062 867.889,659.55 868.448,645.125 869.007,663.618 869.567,647.298 870.126,647.087 870.685,681.049 871.244,712.854 871.804,708.081 872.363,723.983 872.922,740.058 873.481,705.873 874.041,703.886 874.6,736.092 875.159,733.418 875.718,746.6 876.278,746.702 876.837,729.575 877.396,709.935 877.955,694.217 878.515,663.623 879.074,647.731 879.633,633.845 880.192,671.637 880.752,666.793 881.311,665.074 881.87,683.767 882.429,684.94 882.989,698.87 883.548,681.856 884.107,712.6 884.666,742.927 885.226,708.127 885.785,721.122 886.344,704.34 886.903,674.038 887.463,691.19 888.022,642.604 888.581,626.473 889.14,581.234 889.7,636.25 890.259,641.097 890.818,646.792 891.377,683.926 891.937,666.856 892.496,668.373 893.055,655.499 893.614,674.029 894.174,690.74 894.733,693.398 895.292,721.134 895.851,715.965 896.411,713.367 896.97,726.392 897.529,738.547 898.088,751.706 898.648,782.324 899.207,796.57 899.766,793.937 900.325,754.347 900.885,769.716 901.444,748.322 902.003,794.116 902.562,787.122 903.122,785.617 903.681,780.667 904.24,776.121 904.799,770.711 905.359,764.407 905.918,808.247 906.477,769.784 907.036,795.342 907.596,772.115 908.155,765.801 908.714,772.838 909.273,763.274 909.833,789.682 910.392,787.078 910.951,780.574 911.51,758.589 912.07,800.447 912.629,791.97 913.188,801.656 913.747,745.773 914.307,696.804 914.866,729.357 915.425,725.508 915.984,690.571 916.544,675.43 917.103,642.95 917.662,660.512 918.221,678.255 918.781,660.589 919.34,663.205 919.899,696.716 920.458,712.628 921.018,727.173 921.577,727.978 922.136,695.618 922.695,675.131 923.255,675.863 923.814,661.346 924.373,615.472 924.932,652.179 925.492,651.759 926.051,655.665 926.61,659.364 927.169,658.671 927.729,659.637 928.288,678.808 928.847,661.265 929.406,663.262 929.966,664.274 930.525,681.943 931.084,698.78 931.644,696.776 932.203,714.016 932.762,730.034 933.321,728.298 933.881,726.683 934.44,707.964 934.999,701.519 935.558,700.848 936.118,683.397 936.677,683.948 937.236,682.748 937.795,686.796 938.355,702.306 938.914,704.027 939.473,766.406 940.032,777.035 940.592,770.308 941.151,749.881 941.71,762.293 942.269,744.061 942.829,707.254 943.388,705.064 943.947,652.93 944.506,656.383 945.066,673.808 945.625,655.852 946.184,655.808 946.743,641.842 947.303,645.485 947.862,646.181 948.421,681.237 948.98,664.621 949.54,682.338 950.099,681.051 950.658,662.606 951.217,659.534 951.777,662.19 952.336,681.211 952.895,681.462 953.454,698.515 954.014,730.817 954.573,744.65 955.132,760.96 955.691,729.478 956.251,646.138 956.81,600.591 957.369,606.744 957.928,610.925 958.488,597.653 959.047,605.978 959.606,591.365 960.165,580.582 960.725,617.978 961.284,639.582 961.843,593.374 962.402,600.331 962.962,604.674 963.521,609.1 964.08,614.881 964.639,633.241 965.199,650.186 965.758,649.963 966.317,715.188 966.876,699.856 967.436,716.2 967.995,729.844 968.554,743.22 969.113,723.587 969.673,735.907 970.232,734.545 970.791,716.982 971.35,700.64 971.91,698.329 972.469,697.887 973.028,714.325 973.587,715.748 974.147,714.947 974.706,680.972 975.265,649.017 975.824,649.393 976.384,618.372 976.943,608.345 977.502,630.731 978.061,629.229 978.621,601.811 979.18,591.584 979.739,581.73 980.298,601.867 980.858,623.284 981.417,627.466 981.976,600.461 982.535,603.75 983.095,572.981 983.654,580.287 984.213,585.745 984.772,542.807 985.332,532.948 985.891,574.002 986.45,583.326 987.009,586.623 987.569,606.377 988.128,646.146 988.687,665.162 989.246,650.552 989.806,654.946 990.365,676.209 990.924,707.456 991.483,707.353 992.043,751.878 992.602,747.93 993.161,729.394 993.72,729.499 994.28,760.077 994.839,739.274 995.398,718.174 995.957,764.696 996.517,761.967 997.076,738.784 997.635,706.859 998.194,690.677 998.754,692.554 999.313,695.983 999.872,695.991 1000.43,681.097 1000.99,702.608 1001.55,733.495 1002.11,733.79 1002.67,743.576 1003.23,742.988 1003.79,692.344 1004.35,689.311 1004.91,686.496 1005.46,652.68 1006.02,671.834 1006.58,658.064 1007.14,677.638 1007.7,676.766 1008.26,661.483 1008.82,694.749 1009.38,695.986 1009.94,677.693 1010.5,694.123 1011.06,676.844 1011.62,662.548 1012.18,682.655 1012.73,653.431 1013.29,638.326 1013.85,608.403 1014.41,629.338 1014.97,615.255 1015.53,620.995 1016.09,625.977 1016.65,614.601 1017.21,620.861 1017.77,611.52 1018.33,616.817 1018.89,620.838 1019.45,627.175 1020.01,646.619 1020.56,647.208 1021.12,665.605 1021.68,649.026 1022.24,654.845 1022.8,672.964 1023.36,705.947 1023.92,719.593 1024.48,718.117 1025.04,717.83 1025.6,715.305 1026.16,713.337 1026.72,760.139 1027.28,726.201 1027.83,754.954 1028.39,748.685 1028.95,746.237 1029.51,731.706 1030.07,744.754 1030.63,712.149 1031.19,694.959 1031.75,709.893 1032.31,706.473 1032.87,705.949 1033.43,720.735 1033.99,668.79 1034.55,671.124 1035.1,657.498 1035.66,659.325 1036.22,693.418 1036.78,722.987 1037.34,723.35 1037.9,688.771 1038.46,688.881 1039.02,674.539 1039.58,659.485 1040.14,694.666 1040.7,694.077 1041.26,710.608 1041.82,740.991 1042.38,769.5 1042.93,750.279 1043.49,746.789 1044.05,759.045 1044.61,767.51 1045.17,795.525 1045.73,791.104 1046.29,753.699 1046.85,701.354 1047.41,700.15 1047.97,717.23 1048.53,714.337 1049.09,699.085 1049.65,696.453 1050.2,677.669 1050.76,693.582 1051.32,693.522 1051.88,675.45 1052.44,677.031 1053,656.86 1053.56,689.413 1054.12,672.769 1054.68,672.427 1055.24,705.75 1055.8,719.374 1056.36,698.418 1056.92,729.356 1057.48,725.291 1058.03,722.521 1058.59,702.711 1059.15,717.986 1059.71,702.592 1060.27,702.841 1060.83,670.191 1061.39,655 1061.95,673.207 1062.51,719.496 1063.07,701.791 1063.63,704.892 1064.19,703.429 1064.75,700.16 1065.3,698.205 1065.86,664.409 1066.42,650.28 1066.98,670.807 1067.54,670.226 1068.1,669.358 1068.66,636.591 1069.22,656.832 1069.78,674.761 1070.34,657.897 1070.9,639.672 1071.46,645.835 1072.02,649.237 1072.57,668.739 1073.13,685.167 1073.69,685.941 1074.25,700.737 1074.81,670.314 1075.37,672.607 1075.93,687.903 1076.49,715.045 1077.05,762.408 1077.61,724.59 1078.17,704.349 1078.73,702.595 1079.29,713.491 1079.85,731.954 1080.4,760.309 1080.96,741.681 1081.52,756.716 1082.08,733.509 1082.64,730.862 1083.2,728.824 1083.76,710.72 1084.32,675.028 1084.88,675.23 1085.44,610.74 1086,597.024 1086.56,619.003 1087.12,619.839 1087.67,638.604 1088.23,645.626 1088.79,618.331 1089.35,634.582 1089.91,651.371 1090.47,637.814 1091.03,625.309 1091.59,615.702 1092.15,621.299 1092.71,592.363 1093.27,581.051 1093.83,601.415 1094.39,603.142 1094.94,623.679 1095.5,613.602 1096.06,651.118 1096.62,650.896 1097.18,652.4 1097.74,670.179 1098.3,668.492 1098.86,700.508 1099.42,682.321 1099.98,701.264 1100.54,717.478 1101.1,719.274 1101.66,716.026 1102.22,717.805 1102.77,735.213 1103.33,731.99 1103.89,748.384 1104.45,761.478 1105.01,787.6 1105.57,794.536 1106.13,807.945 1106.69,788.077 1107.25,783.077 1107.81,791.17 1108.37,820.842 1108.93,880.576 1109.49,835.276 1110.04,792.817 1110.6,821.894 1111.16,816.179 1111.72,796.502 1112.28,746.334 1112.84,725.29 1113.4,690.537 1113.96,689.123 1114.52,685.065 1115.08,717.37 1115.64,711.312 1116.2,711.213 1116.76,674.804 1117.31,659.162 1117.87,641.869 1118.43,624.938 1118.99,640.535 1119.55,626.919 1120.11,681.907 1120.67,648.392 1121.23,615.9 1121.79,619.448 1122.35,623.817 1122.91,645.747 1123.47,651.694 1124.03,653.972 1124.59,621.444 1125.14,625.767 1125.7,600.28 1126.26,651.62 1126.82,637.145 1127.38,676.265 1127.94,707.509 1128.5,736.645 1129.06,715.546 1129.62,617.328 1130.18,605.307 1130.74,591.128 1131.3,592.039 1131.86,611.265 1132.41,611.647 1132.97,598.878 1133.53,637.836 1134.09,656.754 1134.65,658.011 1135.21,657.112 1135.77,656.591 1136.33,654.65 1136.89,689.951 1137.45,692.383 1138.01,707.551 1138.57,693.007 1139.13,709.802 1139.68,691.228 1140.24,679.446 1140.8,668.379 1141.36,671.575 1141.92,688.915 1142.48,657.546 1143.04,625.519 1143.6,659.418 1144.16,677.754 1144.72,645.052 1145.28,597.976 1145.84,635.367 1146.4,656.151 1146.96,677.845 1147.51,692.231 1148.07,675.735 1148.63,675.635 1149.19,710.15 1149.75,709.137 1150.31,709.988 1150.87,705.985 1151.43,706.474 1151.99,756.911 1152.55,767.458 1153.11,763.783 1153.67,749.669 1154.23,765.33 1154.78,778.91 1155.34,773.836 1155.9,782.76 1156.46,762.712 1157.02,726.16 1157.58,725.386 1158.14,724.545 1158.7,722.642 1159.26,749.944 1159.82,793.729 1160.38,819.209 1160.94,796.272 1161.5,776.246 1162.05,770.289 1162.61,762.487 1163.17,742.56 1163.73,771.551 1164.29,748.495 1164.85,759.273 1165.41,755.677 1165.97,752.469 1166.53,747.889 1167.09,778.875 1167.65,724.527 1168.21,707.906 1168.77,691.097 1169.33,691.087 1169.88,741.224 1170.44,708.005 1171,688.777 1171.56,720.149 1172.12,717.773 1172.68,747.789 1173.24,745.754 1173.8,706.017 1174.36,734.998 1174.92,702.203 1175.48,700.147 1176.04,700.802 1176.6,685.293 1177.15,717.794 1177.71,703.2 1178.27,687.435 1178.83,689.439 1179.39,723.709 1179.95,724.852 1180.51,738.069 1181.07,748.351 1181.63,744.913 1182.19,742.559 1182.75,739.594 1183.31,768.378 1183.87,797.099 1184.43,805.353 1184.98,779.41 1185.54,741.203 1186.1,737.331 1186.66,730.285 1187.22,730.19 1187.78,745.975 1188.34,728.688 1188.9,739.238 1189.46,716.278 1190.02,715.443 1190.58,711.604 1191.14,725.182 1191.7,694.032 1192.25,692.527 1192.81,674.12 1193.37,607.68 1193.93,613.317 1194.49,636.154 1195.05,670.395 1195.61,687.119 1196.17,700.669 1196.73,684.909 1197.29,702.842 1197.85,671.791 1198.41,672.234 1198.97,672.925 1199.52,624.29 1200.08,611.479 1200.64,615.021 1201.2,618.835 1201.76,635.206 1202.32,638.482 1202.88,642.224 1203.44,663.558 1204,676.049 1204.56,656.958 1205.12,687.4 1205.68,688.284 1206.24,671.382 1206.8,657.457 1207.35,658.836 1207.91,663.572 1208.47,649.202 1209.03,650.796 1209.59,604.332 1210.15,610.414 1210.71,660.753 1211.27,696.796 1211.83,716.009 1212.39,715.98 1212.95,715.533 1213.51,763.77 1214.07,745.411 1214.62,725.208 1215.18,705.354 1215.74,689.67 1216.3,672.414 1216.86,672.13 1217.42,656.219 1217.98,656.826 1218.54,641.798 1219.1,618.073 1219.66,620.868 1220.22,626.781 1220.78,598.288 1221.34,601.391 1221.89,587.325 1222.45,592.645 1223.01,598.152 1223.57,617.844 1224.13,621.948 1224.69,604.771 1225.25,607.726 1225.81,611.255 1226.37,645.416 1226.93,632.151 1227.49,622.32 1228.05,624.648 1228.61,627.037 1229.17,657.902 1229.72,657.795 1230.28,628.894 1230.84,618.656 1231.4,637.795 1231.96,623.83 1232.52,609.17 1233.08,629.286 1233.64,581.934 1234.2,588.129 1234.76,593.813 1235.32,582.239 1235.88,554.903 1236.44,530.308 1236.99,553.338 1237.55,578.436 1238.11,586.915 1238.67,591.47 1239.23,617.089 1239.79,587.875 1240.35,592.199 1240.91,597.372 1241.47,633.313 1242.03,620.568 1242.59,638.675 1243.15,643.742 1243.71,594.768 1244.26,616.396 1244.82,572.447 1245.38,563.214 1245.94,586.004 1246.5,588.606 1247.06,593.16 1247.62,617.537 1248.18,655.155 1248.74,641.751 1249.3,628.68 1249.86,648.989 1250.42,634.489 1250.98,625.354 1251.54,662.078 1252.09,647.502 1252.65,662.489 1253.21,696.195 1253.77,694.908 1254.33,697.057 1254.89,710.455 1255.45,707.518 1256.01,705.162 1256.57,688.971 1257.13,689.194 1257.69,721.898 1258.25,721.713 1258.81,701.884 1259.36,714.045 1259.92,730.18 1260.48,697.386 1261.04,697.336 1261.6,725.194 1262.16,724.151 1262.72,723.837 1263.28,737.006 1263.84,716.003 1264.4,717.021 1264.96,681.48 1265.52,681.971 1266.08,715.55 1266.63,714.069 1267.19,715.749 1267.75,714.858 1268.31,714.992 1268.87,729.474 1269.43,744.921 1269.99,727.245 1270.55,691.607 1271.11,692.6 1271.67,725.533 1272.23,705.37 1272.79,704.737 1273.35,703.055 1273.91,683.686 1274.46,703.796 1275.02,702.759 1275.58,682.532 1276.14,668.252 1276.7,653.041 1277.26,668.27 1277.82,685.746 1278.38,703.045 1278.94,701.79 1279.5,699.484 1280.06,684.974 1280.62,635.121 1281.18,648.856 1281.73,665.833 1282.29,670.955 1282.85,674.637 1283.41,692.057 1283.97,675.297 1284.53,662.973 1285.09,695.01 1285.65,691.455 1286.21,694.192 1286.77,723.386 1287.33,684.287 1287.89,663.257 1288.45,714.229 1289,695.82 1289.56,723.777 1290.12,676.494 1290.68,693.421 1291.24,724.951 1291.8,708.02 1292.36,691.09 1292.92,706.08 1293.48,717.177 1294.04,729.785 1294.6,758.719 1295.16,708.113 1295.72,685.845 1296.28,718.481 1296.83,716.125 1297.39,729.973 1297.95,726.241 1298.51,692.552 1299.07,673.048 1299.63,644.146 1300.19,662.765 1300.75,697.382 1301.31,666.705 1301.87,668.9 1302.43,620.254 1302.99,638.004 1303.55,638.323 1304.1,617.765 1304.66,654.173 1305.22,623.699 1305.78,658.679 1306.34,626.818 1306.9,630.25 1307.46,636.05 1308.02,671.936 1308.58,707.291 1309.14,723.955 1309.7,757.317 1310.26,734.907 1310.82,748.42 1311.38,744.392 1311.93,727.772 1312.49,728.477 1313.05,738.584 1313.61,723.409 1314.17,704.122 1314.73,701.94 1315.29,683.187 1315.85,681.867 1316.41,669.118 1316.97,687.577 1317.53,688.564 1318.09,639.975 1318.65,675.353 1319.2,677.204 1319.76,676.799 1320.32,674.817 1320.88,658.417 1321.44,624.272 1322,609.943 1322.56,613.823 1323.12,584.226 1323.68,604.18 1324.24,588.889 1324.8,610.389 1325.36,648.896 1325.92,696.195 1326.47,664.258 1327.03,650.876 1327.59,671.431 1328.15,656.341 1328.71,675.686 1329.27,676.585 1329.83,706.613 1330.39,687.154 1330.95,702.848 1331.51,733.29 1332.07,730.955 1332.63,709.005 1333.19,705.588 1333.75,719.656 1334.3,707.032 1334.86,706.909 1335.42,721.487 1335.98,752.192 1336.54,732.854 1337.1,725.051 1337.66,738.661 1338.22,765.459 1338.78,793.686 1339.34,808.723 1339.9,799.807 1340.46,792.808 1341.02,787.699 1341.57,783.09 1342.13,779.672 1342.69,820.688 1343.25,816.577 1343.81,775.594 1344.37,805.86 1344.93,768.139 1345.49,744.489 1346.05,770.016 1346.61,766.755 1347.17,728.367 1347.73,711.328 1348.29,741.62 1348.84,704.568 1349.4,670.564 1349.96,667.398 1350.52,683.631 1351.08,666.23 1351.64,651.308 1352.2,686.556 1352.76,702.973 1353.32,733.068 1353.88,778.166 1354.44,760.536 1355,758.162 1355.56,752.991 1356.12,747.163 1356.67,744.677 1357.23,678.652 1357.79,680.184 1358.35,666.269 1358.91,684.045 1359.47,702.245 1360.03,684.972 1360.59,635.734 1361.15,638.66 1361.71,687.58 1362.27,684.365 1362.83,689.543 1363.39,673.337 1363.94,671.059 1364.5,671.045 1365.06,637.701 1365.62,625.32 1366.18,598.944 1366.74,621.218 1367.3,656.102 1367.86,672.311 1368.42,676.886 1368.98,663.718 1369.54,648.606 1370.1,652.322 1370.66,634.851 1371.21,584.574 1371.77,605.54 1372.33,615.419 1372.89,638.266 1373.45,576.652 1374.01,549.512 1374.57,509.896 1375.13,519.16 1375.69,547.781 1376.25,571.001 1376.81,577.388 1377.37,596.663 1377.93,603.183 1378.49,624.303 1379.04,658.938 1379.6,641.93 1380.16,647.902 1380.72,621.622 1381.28,639.184 1381.84,676.833 1382.4,674.894 1382.96,662.122 1383.52,646.019 1384.08,643.176 1384.64,662.874 1385.2,681.34 1385.76,692.926 1386.31,706.764 1386.87,688.136 1387.43,690.21 1387.99,671.537 1388.55,657.405 1389.11,652.387 1389.67,652.086 1390.23,664.799 1390.79,666.936 1391.35,636.987 1391.91,637.662 1392.47,605.226 1393.03,605.85 1393.58,623.766 1394.14,596.678 1394.7,618.265 1395.26,638.953 1395.82,661.319 1396.38,645.749 1396.94,620.427 1397.5,625.414 1398.06,613.911 1398.62,654.974 1399.18,670.011 1399.74,653.888 1400.3,654.15 1400.86,659.339 1401.41,680.822 1401.97,679.246 1402.53,694.814 1403.09,728.106 1403.65,743.575 1404.21,674.9 1404.77,690.168 1405.33,687.443 1405.89,704.221 1406.45,717.472 1407.01,763.739 1407.57,760.294 1408.13,767.96 1408.68,800.577 1409.24,826.117 1409.8,800.34 1410.36,794.52 1410.92,774.353 1411.48,735.28 1412.04,717.716 1412.6,714.886 1413.16,730.134 1413.72,740.667 1414.28,720.99 1414.84,735.492 1415.4,728.749 1415.95,772.222 1416.51,783.378 1417.07,758.055 1417.63,705.016 1418.19,703.649 1418.75,733.325 1419.31,744.78 1419.87,741.878 1420.43,737.828 1420.99,701.735 1421.55,720.668 1422.11,733.394 1422.67,712.234 1423.23,728.263 1423.78,758.364 1424.34,768.989 1424.9,746.93 1425.46,746.456 1426.02,758.918 1426.58,738.818 1427.14,738.1 1427.7,720.828 1428.26,718.415 1428.82,683.264 1429.38,680.044 1429.94,662.01 1430.5,665.814 1431.05,668.252 1431.61,657.344 1432.17,675.566 1432.73,660.667 1433.29,662.806 1433.85,661.802 1434.41,679.36 1434.97,699.723 1435.53,667.889 1436.09,621.559 1436.65,594.146 1437.21,602.182 1437.77,591.483 1438.33,590.819 1438.88,596.567 1439.44,619.193 1440,605.111 1440.56,641.832 1441.12,657.779 1441.68,659.156 1442.24,659.448 1442.8,664.421 1443.36,631.806 1443.92,649.139 1444.48,649.914 1445.04,669.048 1445.6,670.952 1446.15,658.084 1446.71,658.361 1447.27,678.17 1447.83,678.056 1448.39,693.583 1448.95,675.196 1449.51,662.406 1450.07,676.976 1450.63,661.661 1451.19,677.054 1451.75,696.749 1452.31,708.13 1452.87,740.125 1453.42,754.39 1453.98,733.406 1454.54,750.875 1455.1,747.535 1455.66,727.165 1456.22,708.638 1456.78,694.68 1457.34,678.379 1457.9,697.81 1458.46,682.326 1459.02,669.089 1459.58,685.793 1460.14,687.845 1460.7,686.871 1461.25,672.696 1461.81,624.91 1462.37,598.898 1462.93,604.79 1463.49,610.909 1464.05,602.431 1464.61,594.958 1465.17,583.866 1465.73,572.111 1466.29,542.889 1466.85,566.216 1467.41,537.855 1467.97,564.041 1468.52,607.507 1469.08,596.299 1469.64,588.922 1470.2,625.837 1470.76,628.711 1471.32,646.37 1471.88,667.285 1472.44,654.338 1473,686.226 1473.56,654.956 1474.12,674.496 1474.68,660.307 1475.24,679.781 1475.79,696.307 1476.35,695.388 1476.91,711.278 1477.47,725.066 1478.03,723.041 1478.59,705.89 1479.15,721.419 1479.71,703.567 1480.27,734.371 1480.83,778.072 1481.39,805.356 1481.95,801.551 1482.51,796.768 1483.07,776.662 1483.62,791.731 1484.18,799.551 1484.74,810.59 1485.3,773.603 1485.86,768.444 1486.42,762.278 1486.98,774.883 1487.54,757.331 1488.1,753.751 1488.66,733.613 1489.22,714.432 1489.78,698.521 1490.34,663.481 1490.89,664.322 1491.45,630.088 1492.01,633.048 1492.57,616.265 1493.13,652.002 1493.69,636.469 1494.25,621.844 1494.81,607.932 1495.37,630.422 1495.93,615.768 1496.49,618.3 1497.05,621.41 1497.61,623.843 1498.16,611.863 1498.72,638.145 1499.28,689.23 1499.84,685.853 1500.4,671.337 1500.96,685.492 1501.52,654.517 1502.08,640.492 1502.64,657.493 1503.2,658.82 1503.76,643.939 1504.32,644.822 1504.88,647.182 1505.44,632.628 1505.99,665.892 1506.55,665.367 1507.11,664.048 1507.67,665.279 1508.23,652.033 1508.79,654.82 1509.35,640.627 1509.91,643.978 1510.47,648.457 1511.03,618.354 1511.59,656.18 1512.15,637.151 1512.71,671.354 1513.26,674.964 1513.82,675.198 1514.38,644.278 1514.94,646.839 1515.5,647.716 1516.06,637.146 1516.62,685.022 1517.18,702.524 1517.74,698.703 1518.3,676.496 1518.86,660.488 1519.42,663.605 1519.98,646.836 1520.53,650.966 1521.09,653.313 1521.65,672.189 1522.21,673.617 1522.77,694.806 1523.33,676.24 1523.89,659.252 1524.45,660.999 1525.01,627.819 1525.57,647.267 1526.13,648.331 1526.69,684.059 1527.25,666.744 1527.81,654.987 1528.36,668.533 1528.92,683.772 1529.48,698.427 1530.04,696.503 1530.6,682.219 1531.16,661.257 1531.72,709.134 1532.28,722.186 1532.84,768.016 1533.4,748.431 1533.96,751.597 1534.52,732.713 1535.08,728.458 1535.63,757.461 1536.19,733.311 1536.75,714.593 1537.31,715.741 1537.87,699.668 1538.43,681.593 1538.99,683.269 1539.55,684.053 1540.11,686.107 1540.67,620.277 1541.23,589.738 1541.79,576.3 1542.35,611.583 1542.9,631.954 1543.46,616.388 1544.02,634.016 1544.58,634.527 1545.14,668.324 1545.7,634.724 1546.26,700.252 1546.82,681.785 1547.38,684.496 1547.94,665.724 1548.5,669.111 1549.06,669.376 1549.62,638.401 1550.18,640.837 1550.73,643.172 1551.29,660.89 1551.85,660.808 1552.41,666.546 1552.97,665.612 1553.53,680.852 1554.09,664.26 1554.65,647.815 1555.21,636.908 1555.77,655.16 1556.33,654.268 1556.89,655.41 1557.45,660.05 1558,678.403 1558.56,658.713 1559.12,671.328 1559.68,693.206 1560.24,707.809 1560.8,736.278 1561.36,733.594 1561.92,758.064 1562.48,771.864 1563.04,752.731 1563.6,781.592 1564.16,791.425 1564.72,771.258 1565.28,753.234 1565.83,769.057 1566.39,764.537 1566.95,777.057 1567.51,789.631 1568.07,803.884 1568.63,815.891 1569.19,809.265 1569.75,835.133 1570.31,795.401 1570.87,793.401 1571.43,806.508 1571.99,804.406 1572.55,800.948 1573.1,793.167 1573.66,783.489 1574.22,760.945 1574.78,774.196 1575.34,754.733 1575.9,781.846 1576.46,775.65 1577.02,786.895 1577.58,796.199 1578.14,792.206 1578.7,788.435 1579.26,783.789 1579.82,809.381 1580.37,818.065 1580.93,794.768 1581.49,768.099 1582.05,760.542 1582.61,771.658 1583.17,768.787 1583.73,776.889 1584.29,755.703 1584.85,782.075 1585.41,742.208 1585.97,677.35 1586.53,642.546 1587.09,628.562 1587.65,648.388 1588.2,651.819 1588.76,668.853 1589.32,634.145 1589.88,621.392 1590.44,612.182 1591,665.519 1591.56,662.936 1592.12,676.674 1592.68,676.173 1593.24,675.641 1593.8,674.799 1594.36,657.519 1594.92,658.311 1595.47,631.512 1596.03,703.391 1596.59,716.938 1597.15,731.176 1597.71,731.563 1598.27,711.217 1598.83,710.392 1599.39,657.655 1599.95,655.738 1600.51,640.882 1601.07,642.295 1601.63,625.784 1602.19,630.448 1602.74,631.217 1603.3,630.679 1603.86,649.517 1604.42,668.042 1604.98,669.806 1605.54,651.684 1606.1,652.111 1606.66,622.24 1607.22,640.496 1607.78,640.55 1608.34,579.302 1608.9,567.834 1609.46,542.869 1610.02,549.721 1610.57,573.015 1611.13,580.166 1611.69,588.81 1612.25,560.315 1612.81,535.743 1613.37,542.327 1613.93,550.699 1614.49,528.155 1615.05,549.594 1615.61,556.392 1616.17,580.487 1616.73,602.308 1617.29,608 1617.84,632.171 1618.4,636.493 1618.96,642.546 1619.52,643.475 1620.08,661.63 1620.64,665.213 1621.2,632.849 1621.76,636.13 1622.32,640.84 1622.88,623.458 1623.44,642.884 1624,660.178 1624.56,676.108 1625.11,661.336 1625.67,661.882 1626.23,647.8 1626.79,614.81 1627.35,617.749 1627.91,622.147 1628.47,610.565 1629.03,618.191 1629.59,619.835 1630.15,623.413 1630.71,609.917 1631.27,612.4 1631.83,613.839 1632.39,583.578 1632.94,621.733 1633.5,624.162 1634.06,612.254 1634.62,627.978 1635.18,630.484 1635.74,582.275 1636.3,569.569 1636.86,557.335 1637.42,579.143 1637.98,585.514 1638.54,604.704 1639.1,632.02 1639.66,650.587 1640.21,668.17 1640.77,669.629 1641.33,685.911 1641.89,657.636 1642.45,676.766 1643.01,660.467 1643.57,679.511 1644.13,741.586 1644.69,741.856 1645.25,737.361 1645.81,732.344 1646.37,731.268 1646.93,711.08 1647.48,723.786 1648.04,725.688 1648.6,711.019 1649.16,724.682 1649.72,753.968 1650.28,751.023 1650.84,751.207 1651.4,749.944 1651.96,746.161 1652.52,775.327 1653.08,773.129 1653.64,768.433 1654.2,781.164 1654.76,777.401 1655.31,806.923 1655.87,813.965 1656.43,825.559 1656.99,800.637 1657.55,796.575 1658.11,843.019 1658.67,832.856 1659.23,828.142 1659.79,870.222 1660.35,829.424 1660.91,821.709 1661.47,810.377 1662.03,768.741 1662.58,761.396 1663.14,778.235 1663.7,757.379 1664.26,736.482 1664.82,750.657 1665.38,760.556 1665.94,706.734 1666.5,737.441 1667.06,715.445 1667.62,711.978 1668.18,725.832 1668.74,725.076 1669.3,739.309 1669.85,703.014 1670.41,701.205 1670.97,729.184 1671.53,695.323 1672.09,677.764 1672.65,692.699 1673.21,673.937 1673.77,661.241 1674.33,660.403 1674.89,646.079 1675.45,661.661 1676.01,662.358 1676.57,629.724 1677.13,631.306 1677.68,666.939 1678.24,667.883 1678.8,669.678 1679.36,718.197 1679.92,697.21 1680.48,666.793 1681.04,685.057 1681.6,719.698 1682.16,719.127 1682.72,713.509 1683.28,696.699 1683.84,739.304 1684.4,735.661 1684.95,766.83 1685.51,749.621 1686.07,748.504 1686.63,730.752 1687.19,740.054 1687.75,725.041 1688.31,722.503 1688.87,723.345 1689.43,655.751 1689.99,659.519 1690.55,677.343 1691.11,710.194 1691.67,695.306 1692.23,710.279 1692.78,690.5 1693.34,675.811 1693.9,693.23 1694.46,705.879 1695.02,688.171 1695.58,653.233 1696.14,687.324 1696.7,670.291 1697.26,687.697 1697.82,675.237 1698.38,661.054 1698.94,680.396 1699.5,664.017 1700.05,683.278 1700.61,651.693 1701.17,652.192 1701.73,671.523 1702.29,671.787 1702.85,687.199 1703.41,686.171 1703.97,673.963 1704.53,674.145 1705.09,690.158 1705.65,686.272 1706.21,655.452 1706.77,660.673 1707.32,646.253 1707.88,647.745 1708.44,682.106 1709,681.731 1709.56,696.851 1710.12,725.38 1710.68,723.74 1711.24,710.012 1711.8,706.686 1712.36,688.472 1712.92,702.816 1713.48,733.126 1714.04,665.133 1714.6,665.981 1715.15,670.956 1715.71,670.534 1716.27,671.99 1716.83,689.667 1717.39,674.213 1717.95,704.867 1718.51,671.588 1719.07,685.908 1719.63,655.223 1720.19,654.238 1720.75,672.866 1721.31,690.501 1721.87,723.512 1722.42,705.218 1722.98,701.864 1723.54,667.77 1724.1,666.844 1724.66,703.034 1725.22,638.673 1725.78,608.661 1726.34,593.89 1726.9,631.663 1727.46,634.625 1728.02,635.998 1728.58,639.808 1729.14,654.05 1729.69,674.089 1730.25,673.023 1730.81,655.001 1731.37,659.433 1731.93,627.593 1732.49,616.569 1733.05,606.176 1733.61,638.758 1734.17,639.376 1734.73,644.64 1735.29,645.489 1735.85,617.395 1736.41,621.075 1736.97,622.327 1737.52,640.144 1738.08,660.559 1738.64,675.691 1739.2,677.101 1739.76,723.496 1740.32,721.451 1740.88,716.375 1741.44,700.112 1742,683.351 1742.56,685.913 1743.12,701.32 1743.68,697.088 1744.24,693.371 1744.79,707.644 1745.35,738.343 1745.91,754.559 1746.47,748.419 1747.03,714.28 1747.59,660.928 1748.15,663.116 1748.71,664.632 1749.27,653.485 1749.83,670.24 1750.39,673.498 1750.95,642.1 1751.51,708.955 1752.06,719.787 1752.62,719.929 1753.18,732.721 1753.74,731.945 1754.3,729.674 1754.86,725.529 1755.42,705.832 1755.98,707.668 1756.54,720.648 1757.1,701.373 1757.66,699.177 1758.22,712.393 1758.78,727.259 1759.34,738.454 1759.89,737.522 1760.45,716.692 1761.01,713.707 1761.57,694.043 1762.13,677.754 1762.69,662.239 1763.25,614.537 1763.81,616.39 1764.37,687.484 1764.93,690.149 1765.49,722.832 1766.05,717.341 1766.61,713.925 1767.16,709.301 1767.72,674.422 1768.28,689.598 1768.84,674.031 1769.4,660.469 1769.96,616.545 1770.52,655.68 1771.08,660.296 1771.64,678.923 1772.2,692.14 1772.76,692.957 1773.32,725.642 1773.88,770.256 1774.43,750.878 1774.99,749.594 1775.55,780.338 1776.11,760.084 1776.67,742 1777.23,724.253 1777.79,703.838 1778.35,719.711 1778.91,684.63 1779.47,687.974 1780.03,706.34 1780.59,720.019 1781.15,699.615 1781.71,731.988 1782.26,756.598 1782.82,748.126 1783.38,745.795 1783.94,758.009 1784.5,783.838 1785.06,797.627 1785.62,775.222 1786.18,735.61 1786.74,750.581 1787.3,749.2 1787.86,746.526 1788.42,742.188 1788.98,706.91 1789.53,671.221 1790.09,685.254 1790.65,684.801 1791.21,667.35 1791.77,653.254 1792.33,652.508 1792.89,654.396 1793.45,622.952 1794.01,640.75 1794.57,662.521 1795.13,680.536 1795.69,696.402 1796.25,696.015 1796.8,691.57 1797.36,672.569 1797.92,703.037 1798.48,655.012 1799.04,673.745 1799.6,672.935 1800.16,641.73 1800.72,631.434 1801.28,618.425 1801.84,608.352 1802.4,591.923 1802.96,613.351 1803.52,614.125 1804.08,621.951 1804.63,627.327 1805.19,631.435 1805.75,633.654 1806.31,636.095 1806.87,589.01 1807.43,621.411 1807.99,642.749 1808.55,645.987 1809.11,634.658 1809.67,639.925 1810.23,691.447 1810.79,692.078 1811.35,687.994 1811.9,655.72 1812.46,640.88 1813.02,658.778 1813.58,644.528 1814.14,661.728 1814.7,663.976 1815.26,663.508 1815.82,649.742 1816.38,651.364 1816.94,653.142 1817.5,640.789 1818.06,626.687 1818.62,630.941 1819.18,649.466 1819.73,649.499 1820.29,669.547 1820.85,683.503 1821.41,634.511 1821.97,617.222 1822.53,589.979 1823.09,580.834 1823.65,652.605 1824.21,625.58 1824.77,628.037 1825.33,633.58 1825.89,638.281 1826.45,674.371 1827,645.107 1827.56,633.485 1828.12,634.072 1828.68,607.117 1829.24,609.402 1829.8,629.847 1830.36,602.998 1830.92,609.108 1831.48,615.013 1832.04,616.073 1832.6,602.491 1833.16,627.598 1833.72,614.593 1834.27,585.677 1834.83,592.425 1835.39,595.354 1835.95,570.051 1836.51,570.261 1837.07,575.253 1837.63,580.516 1838.19,556.765 \"/>\n<path clip-path=\"url(#clip113)\" d=\"M720.247 690.492 L720.806 690.492 L721.365 690.492 L721.924 690.492 L722.484 690.492 L723.043 690.492 L723.602 690.492 L724.161 690.492 L724.721 690.492 L725.28 690.492 L725.839 690.492 L726.398 690.492 L726.958 690.492 L727.517 690.492 L728.076 690.492 L728.635 690.492 L729.195 690.492 L729.754 690.492 L730.313 690.492 L730.872 690.492 L731.432 690.492 L731.991 690.492 L732.55 690.492 L733.109 690.492 L733.669 690.492 L734.228 690.492 L734.787 690.492 L735.346 690.492 L735.906 690.492 L736.465 690.492 L737.024 690.492 L737.583 690.492 L738.143 690.492 L738.702 690.492 L739.261 690.492 L739.82 690.492 L740.38 690.492 L740.939 690.492 L741.498 690.492 L742.057 690.492 L742.617 690.492 L743.176 690.492 L743.735 690.492 L744.294 690.492 L744.854 690.492 L745.413 690.492 L745.972 690.492 L746.531 690.492 L747.091 690.492 L747.65 690.492 L748.209 690.492 L748.768 690.492 L749.328 690.492 L749.887 690.492 L750.446 690.492 L751.005 690.492 L751.565 690.492 L752.124 690.492 L752.683 690.492 L753.242 690.492 L753.802 690.492 L754.361 690.492 L754.92 690.492 L755.479 690.492 L756.039 690.492 L756.598 690.492 L757.157 690.492 L757.716 690.492 L758.276 690.492 L758.835 690.492 L759.394 690.492 L759.953 690.492 L760.513 690.492 L761.072 690.492 L761.631 690.492 L762.19 690.492 L762.75 690.492 L763.309 690.492 L763.868 690.492 L764.427 690.492 L764.987 690.492 L765.546 690.492 L766.105 690.492 L766.664 690.492 L767.224 690.492 L767.783 690.492 L768.342 690.492 L768.901 690.492 L769.461 690.492 L770.02 690.492 L770.579 690.492 L771.138 690.492 L771.698 690.492 L772.257 690.492 L772.816 690.492 L773.375 690.492 L773.935 690.492 L774.494 690.492 L775.053 690.492 L775.612 690.492 L776.172 690.492 L776.731 690.492 L777.29 690.492 L777.849 690.492 L778.409 690.492 L778.968 690.492 L779.527 690.492 L780.086 690.492 L780.646 690.492 L781.205 690.492 L781.764 690.492 L782.323 690.492 L782.883 690.492 L783.442 690.492 L784.001 690.492 L784.56 690.492 L785.12 690.492 L785.679 690.492 L786.238 690.492 L786.797 690.492 L787.357 690.492 L787.916 690.492 L788.475 690.492 L789.034 690.492 L789.594 690.492 L790.153 690.492 L790.712 690.492 L791.271 690.492 L791.831 690.492 L792.39 690.492 L792.949 690.492 L793.508 690.492 L794.068 690.492 L794.627 690.492 L795.186 690.492 L795.745 690.492 L796.305 690.492 L796.864 690.492 L797.423 690.492 L797.982 690.492 L798.542 690.492 L799.101 690.492 L799.66 690.492 L800.219 690.492 L800.779 690.492 L801.338 690.492 L801.897 690.492 L802.456 690.492 L803.016 690.492 L803.575 690.492 L804.134 690.492 L804.693 690.492 L805.253 690.492 L805.812 690.492 L806.371 690.492 L806.931 690.492 L807.49 690.492 L808.049 690.492 L808.608 690.492 L809.168 690.492 L809.727 690.492 L810.286 690.492 L810.845 690.492 L811.405 690.492 L811.964 690.492 L812.523 690.492 L813.082 690.492 L813.642 690.492 L814.201 690.492 L814.76 690.492 L815.319 690.492 L815.879 690.492 L816.438 690.492 L816.997 690.492 L817.556 690.492 L818.116 690.492 L818.675 690.492 L819.234 690.492 L819.793 690.492 L820.353 690.492 L820.912 690.492 L821.471 690.492 L822.03 690.492 L822.59 690.492 L823.149 690.492 L823.708 690.492 L824.267 690.492 L824.827 690.492 L825.386 690.492 L825.945 690.492 L826.504 690.492 L827.064 690.492 L827.623 690.492 L828.182 690.492 L828.741 690.492 L829.301 690.492 L829.86 690.492 L830.419 690.492 L830.978 690.492 L831.538 690.492 L832.097 690.492 L832.656 690.492 L833.215 690.492 L833.775 690.492 L834.334 690.492 L834.893 690.492 L835.452 690.492 L836.012 690.492 L836.571 690.492 L837.13 690.492 L837.689 690.492 L838.249 690.492 L838.808 690.492 L839.367 690.492 L839.926 690.492 L840.486 690.492 L841.045 690.492 L841.604 690.492 L842.163 690.492 L842.723 690.492 L843.282 690.492 L843.841 690.492 L844.4 690.492 L844.96 690.492 L845.519 690.492 L846.078 690.492 L846.637 690.492 L847.197 690.492 L847.756 690.492 L848.315 690.492 L848.874 690.492 L849.434 690.492 L849.993 690.492 L850.552 690.492 L851.111 690.492 L851.671 690.492 L852.23 690.492 L852.789 690.492 L853.348 690.492 L853.908 690.492 L854.467 690.492 L855.026 690.492 L855.585 690.492 L856.145 690.492 L856.704 690.492 L857.263 690.492 L857.822 690.492 L858.382 690.492 L858.941 690.492 L859.5 690.492 L860.059 690.492 L860.619 690.492 L861.178 690.492 L861.737 690.492 L862.296 690.492 L862.856 690.492 L863.415 690.492 L863.974 690.492 L864.533 690.492 L865.093 690.492 L865.652 690.492 L866.211 690.492 L866.77 690.492 L867.33 690.492 L867.889 690.492 L868.448 690.492 L869.007 690.492 L869.567 690.492 L870.126 690.492 L870.685 690.492 L871.244 690.492 L871.804 690.492 L872.363 690.492 L872.922 690.492 L873.481 690.492 L874.041 690.492 L874.6 690.492 L875.159 690.492 L875.718 690.492 L876.278 690.492 L876.837 690.492 L877.396 690.492 L877.955 690.492 L878.515 690.492 L879.074 690.492 L879.633 690.492 L880.192 690.492 L880.752 690.492 L881.311 690.492 L881.87 690.492 L882.429 690.492 L882.989 690.492 L883.548 690.492 L884.107 690.492 L884.666 690.492 L885.226 690.492 L885.785 690.492 L886.344 690.492 L886.903 690.492 L887.463 690.492 L888.022 690.492 L888.581 690.492 L889.14 690.492 L889.7 690.492 L890.259 690.492 L890.818 690.492 L891.377 690.492 L891.937 690.492 L892.496 690.492 L893.055 690.492 L893.614 690.492 L894.174 690.492 L894.733 690.492 L895.292 690.492 L895.851 690.492 L896.411 690.492 L896.97 690.492 L897.529 690.492 L898.088 690.492 L898.648 690.492 L899.207 690.492 L899.766 690.492 L900.325 690.492 L900.885 690.492 L901.444 690.492 L902.003 690.492 L902.562 690.492 L903.122 690.492 L903.681 690.492 L904.24 690.492 L904.799 690.492 L905.359 690.492 L905.918 690.492 L906.477 690.492 L907.036 690.492 L907.596 690.492 L908.155 690.492 L908.714 690.492 L909.273 690.492 L909.833 690.492 L910.392 690.492 L910.951 690.492 L911.51 690.492 L912.07 690.492 L912.629 690.492 L913.188 690.492 L913.747 690.492 L914.307 690.492 L914.866 690.492 L915.425 690.492 L915.984 690.492 L916.544 690.492 L917.103 690.492 L917.662 690.492 L918.221 690.492 L918.781 690.492 L919.34 690.492 L919.899 690.492 L920.458 690.492 L921.018 690.492 L921.577 690.492 L922.136 690.492 L922.695 690.492 L923.255 690.492 L923.814 690.492 L924.373 690.492 L924.932 690.492 L925.492 690.492 L926.051 690.492 L926.61 690.492 L927.169 690.492 L927.729 690.492 L928.288 690.492 L928.847 690.492 L929.406 690.492 L929.966 690.492 L930.525 690.492 L931.084 690.492 L931.644 690.492 L932.203 690.492 L932.762 690.492 L933.321 690.492 L933.881 690.492 L934.44 690.492 L934.999 690.492 L935.558 690.492 L936.118 690.492 L936.677 690.492 L937.236 690.492 L937.795 690.492 L938.355 690.492 L938.914 690.492 L939.473 690.492 L940.032 690.492 L940.592 690.492 L941.151 690.492 L941.71 690.492 L942.269 690.492 L942.829 690.492 L943.388 690.492 L943.947 690.492 L944.506 690.492 L945.066 690.492 L945.625 690.492 L946.184 690.492 L946.743 690.492 L947.303 690.492 L947.862 690.492 L948.421 690.492 L948.98 690.492 L949.54 690.492 L950.099 690.492 L950.658 690.492 L951.217 690.492 L951.777 690.492 L952.336 690.492 L952.895 690.492 L953.454 690.492 L954.014 690.492 L954.573 690.492 L955.132 690.492 L955.691 690.492 L956.251 690.492 L956.81 690.492 L957.369 690.492 L957.928 690.492 L958.488 690.492 L959.047 690.492 L959.606 690.492 L960.165 690.492 L960.725 690.492 L961.284 690.492 L961.843 690.492 L962.402 690.492 L962.962 690.492 L963.521 690.492 L964.08 690.492 L964.639 690.492 L965.199 690.492 L965.758 690.492 L966.317 690.492 L966.876 690.492 L967.436 690.492 L967.995 690.492 L968.554 690.492 L969.113 690.492 L969.673 690.492 L970.232 690.492 L970.791 690.492 L971.35 690.492 L971.91 690.492 L972.469 690.492 L973.028 690.492 L973.587 690.492 L974.147 690.492 L974.706 690.492 L975.265 690.492 L975.824 690.492 L976.384 690.492 L976.943 690.492 L977.502 690.492 L978.061 690.492 L978.621 690.492 L979.18 690.492 L979.739 690.492 L980.298 690.492 L980.858 690.492 L981.417 690.492 L981.976 690.492 L982.535 690.492 L983.095 690.492 L983.654 690.492 L984.213 690.492 L984.772 690.492 L985.332 690.492 L985.891 690.492 L986.45 690.492 L987.009 690.492 L987.569 690.492 L988.128 690.492 L988.687 690.492 L989.246 690.492 L989.806 690.492 L990.365 690.492 L990.924 690.492 L991.483 690.492 L992.043 690.492 L992.602 690.492 L993.161 690.492 L993.72 690.492 L994.28 690.492 L994.839 690.492 L995.398 690.492 L995.957 690.492 L996.517 690.492 L997.076 690.492 L997.635 690.492 L998.194 690.492 L998.754 690.492 L999.313 690.492 L999.872 690.492 L1000.43 690.492 L1000.99 690.492 L1001.55 690.492 L1002.11 690.492 L1002.67 690.492 L1003.23 690.492 L1003.79 690.492 L1004.35 690.492 L1004.91 690.492 L1005.46 690.492 L1006.02 690.492 L1006.58 690.492 L1007.14 690.492 L1007.7 690.492 L1008.26 690.492 L1008.82 690.492 L1009.38 690.492 L1009.94 690.492 L1010.5 690.492 L1011.06 690.492 L1011.62 690.492 L1012.18 690.492 L1012.73 690.492 L1013.29 690.492 L1013.85 690.492 L1014.41 690.492 L1014.97 690.492 L1015.53 690.492 L1016.09 690.492 L1016.65 690.492 L1017.21 690.492 L1017.77 690.492 L1018.33 690.492 L1018.89 690.492 L1019.45 690.492 L1020.01 690.492 L1020.56 690.492 L1021.12 690.492 L1021.68 690.492 L1022.24 690.492 L1022.8 690.492 L1023.36 690.492 L1023.92 690.492 L1024.48 690.492 L1025.04 690.492 L1025.6 690.492 L1026.16 690.492 L1026.72 690.492 L1027.28 690.492 L1027.83 690.492 L1028.39 690.492 L1028.95 690.492 L1029.51 690.492 L1030.07 690.492 L1030.63 690.492 L1031.19 690.492 L1031.75 690.492 L1032.31 690.492 L1032.87 690.492 L1033.43 690.492 L1033.99 690.492 L1034.55 690.492 L1035.1 690.492 L1035.66 690.492 L1036.22 690.492 L1036.78 690.492 L1037.34 690.492 L1037.9 690.492 L1038.46 690.492 L1039.02 690.492 L1039.58 690.492 L1040.14 690.492 L1040.7 690.492 L1041.26 690.492 L1041.82 690.492 L1042.38 690.492 L1042.93 690.492 L1043.49 690.492 L1044.05 690.492 L1044.61 690.492 L1045.17 690.492 L1045.73 690.492 L1046.29 690.492 L1046.85 690.492 L1047.41 690.492 L1047.97 690.492 L1048.53 690.492 L1049.09 690.492 L1049.65 690.492 L1050.2 690.492 L1050.76 690.492 L1051.32 690.492 L1051.88 690.492 L1052.44 690.492 L1053 690.492 L1053.56 690.492 L1054.12 690.492 L1054.68 690.492 L1055.24 690.492 L1055.8 690.492 L1056.36 690.492 L1056.92 690.492 L1057.48 690.492 L1058.03 690.492 L1058.59 690.492 L1059.15 690.492 L1059.71 690.492 L1060.27 690.492 L1060.83 690.492 L1061.39 690.492 L1061.95 690.492 L1062.51 690.492 L1063.07 690.492 L1063.63 690.492 L1064.19 690.492 L1064.75 690.492 L1065.3 690.492 L1065.86 690.492 L1066.42 690.492 L1066.98 690.492 L1067.54 690.492 L1068.1 690.492 L1068.66 690.492 L1069.22 690.492 L1069.78 690.492 L1070.34 690.492 L1070.9 690.492 L1071.46 690.492 L1072.02 690.492 L1072.57 690.492 L1073.13 690.492 L1073.69 690.492 L1074.25 690.492 L1074.81 690.492 L1075.37 690.492 L1075.93 690.492 L1076.49 690.492 L1077.05 690.492 L1077.61 690.492 L1078.17 690.492 L1078.73 690.492 L1079.29 690.492 L1079.85 690.492 L1080.4 690.492 L1080.96 690.492 L1081.52 690.492 L1082.08 690.492 L1082.64 690.492 L1083.2 690.492 L1083.76 690.492 L1084.32 690.492 L1084.88 690.492 L1085.44 690.492 L1086 690.492 L1086.56 690.492 L1087.12 690.492 L1087.67 690.492 L1088.23 690.492 L1088.79 690.492 L1089.35 690.492 L1089.91 690.492 L1090.47 690.492 L1091.03 690.492 L1091.59 690.492 L1092.15 690.492 L1092.71 690.492 L1093.27 690.492 L1093.83 690.492 L1094.39 690.492 L1094.94 690.492 L1095.5 690.492 L1096.06 690.492 L1096.62 690.492 L1097.18 690.492 L1097.74 690.492 L1098.3 690.492 L1098.86 690.492 L1099.42 690.492 L1099.98 690.492 L1100.54 690.492 L1101.1 690.492 L1101.66 690.492 L1102.22 690.492 L1102.77 690.492 L1103.33 690.492 L1103.89 690.492 L1104.45 690.492 L1105.01 690.492 L1105.57 690.492 L1106.13 690.492 L1106.69 690.492 L1107.25 690.492 L1107.81 690.492 L1108.37 690.492 L1108.93 690.492 L1109.49 690.492 L1110.04 690.492 L1110.6 690.492 L1111.16 690.492 L1111.72 690.492 L1112.28 690.492 L1112.84 690.492 L1113.4 690.492 L1113.96 690.492 L1114.52 690.492 L1115.08 690.492 L1115.64 690.492 L1116.2 690.492 L1116.76 690.492 L1117.31 690.492 L1117.87 690.492 L1118.43 690.492 L1118.99 690.492 L1119.55 690.492 L1120.11 690.492 L1120.67 690.492 L1121.23 690.492 L1121.79 690.492 L1122.35 690.492 L1122.91 690.492 L1123.47 690.492 L1124.03 690.492 L1124.59 690.492 L1125.14 690.492 L1125.7 690.492 L1126.26 690.492 L1126.82 690.492 L1127.38 690.492 L1127.94 690.492 L1128.5 690.492 L1129.06 690.492 L1129.62 690.492 L1130.18 690.492 L1130.74 690.492 L1131.3 690.492 L1131.86 690.492 L1132.41 690.492 L1132.97 690.492 L1133.53 690.492 L1134.09 690.492 L1134.65 690.492 L1135.21 690.492 L1135.77 690.492 L1136.33 690.492 L1136.89 690.492 L1137.45 690.492 L1138.01 690.492 L1138.57 690.492 L1139.13 690.492 L1139.68 690.492 L1140.24 690.492 L1140.8 690.492 L1141.36 690.492 L1141.92 690.492 L1142.48 690.492 L1143.04 690.492 L1143.6 690.492 L1144.16 690.492 L1144.72 690.492 L1145.28 690.492 L1145.84 690.492 L1146.4 690.492 L1146.96 690.492 L1147.51 690.492 L1148.07 690.492 L1148.63 690.492 L1149.19 690.492 L1149.75 690.492 L1150.31 690.492 L1150.87 690.492 L1151.43 690.492 L1151.99 690.492 L1152.55 690.492 L1153.11 690.492 L1153.67 690.492 L1154.23 690.492 L1154.78 690.492 L1155.34 690.492 L1155.9 690.492 L1156.46 690.492 L1157.02 690.492 L1157.58 690.492 L1158.14 690.492 L1158.7 690.492 L1159.26 690.492 L1159.82 690.492 L1160.38 690.492 L1160.94 690.492 L1161.5 690.492 L1162.05 690.492 L1162.61 690.492 L1163.17 690.492 L1163.73 690.492 L1164.29 690.492 L1164.85 690.492 L1165.41 690.492 L1165.97 690.492 L1166.53 690.492 L1167.09 690.492 L1167.65 690.492 L1168.21 690.492 L1168.77 690.492 L1169.33 690.492 L1169.88 690.492 L1170.44 690.492 L1171 690.492 L1171.56 690.492 L1172.12 690.492 L1172.68 690.492 L1173.24 690.492 L1173.8 690.492 L1174.36 690.492 L1174.92 690.492 L1175.48 690.492 L1176.04 690.492 L1176.6 690.492 L1177.15 690.492 L1177.71 690.492 L1178.27 690.492 L1178.83 690.492 L1179.39 690.492 L1179.95 690.492 L1180.51 690.492 L1181.07 690.492 L1181.63 690.492 L1182.19 690.492 L1182.75 690.492 L1183.31 690.492 L1183.87 690.492 L1184.43 690.492 L1184.98 690.492 L1185.54 690.492 L1186.1 690.492 L1186.66 690.492 L1187.22 690.492 L1187.78 690.492 L1188.34 690.492 L1188.9 690.492 L1189.46 690.492 L1190.02 690.492 L1190.58 690.492 L1191.14 690.492 L1191.7 690.492 L1192.25 690.492 L1192.81 690.492 L1193.37 690.492 L1193.93 690.492 L1194.49 690.492 L1195.05 690.492 L1195.61 690.492 L1196.17 690.492 L1196.73 690.492 L1197.29 690.492 L1197.85 690.492 L1198.41 690.492 L1198.97 690.492 L1199.52 690.492 L1200.08 690.492 L1200.64 690.492 L1201.2 690.492 L1201.76 690.492 L1202.32 690.492 L1202.88 690.492 L1203.44 690.492 L1204 690.492 L1204.56 690.492 L1205.12 690.492 L1205.68 690.492 L1206.24 690.492 L1206.8 690.492 L1207.35 690.492 L1207.91 690.492 L1208.47 690.492 L1209.03 690.492 L1209.59 690.492 L1210.15 690.492 L1210.71 690.492 L1211.27 690.492 L1211.83 690.492 L1212.39 690.492 L1212.95 690.492 L1213.51 690.492 L1214.07 690.492 L1214.62 690.492 L1215.18 690.492 L1215.74 690.492 L1216.3 690.492 L1216.86 690.492 L1217.42 690.492 L1217.98 690.492 L1218.54 690.492 L1219.1 690.492 L1219.66 690.492 L1220.22 690.492 L1220.78 690.492 L1221.34 690.492 L1221.89 690.492 L1222.45 690.492 L1223.01 690.492 L1223.57 690.492 L1224.13 690.492 L1224.69 690.492 L1225.25 690.492 L1225.81 690.492 L1226.37 690.492 L1226.93 690.492 L1227.49 690.492 L1228.05 690.492 L1228.61 690.492 L1229.17 690.492 L1229.72 690.492 L1230.28 690.492 L1230.84 690.492 L1231.4 690.492 L1231.96 690.492 L1232.52 690.492 L1233.08 690.492 L1233.64 690.492 L1234.2 690.492 L1234.76 690.492 L1235.32 690.492 L1235.88 690.492 L1236.44 690.492 L1236.99 690.492 L1237.55 690.492 L1238.11 690.492 L1238.67 690.492 L1239.23 690.492 L1239.79 690.492 L1240.35 690.492 L1240.91 690.492 L1241.47 690.492 L1242.03 690.492 L1242.59 690.492 L1243.15 690.492 L1243.71 690.492 L1244.26 690.492 L1244.82 690.492 L1245.38 690.492 L1245.94 690.492 L1246.5 690.492 L1247.06 690.492 L1247.62 690.492 L1248.18 690.492 L1248.74 690.492 L1249.3 690.492 L1249.86 690.492 L1250.42 690.492 L1250.98 690.492 L1251.54 690.492 L1252.09 690.492 L1252.65 690.492 L1253.21 690.492 L1253.77 690.492 L1254.33 690.492 L1254.89 690.492 L1255.45 690.492 L1256.01 690.492 L1256.57 690.492 L1257.13 690.492 L1257.69 690.492 L1258.25 690.492 L1258.81 690.492 L1259.36 690.492 L1259.92 690.492 L1260.48 690.492 L1261.04 690.492 L1261.6 690.492 L1262.16 690.492 L1262.72 690.492 L1263.28 690.492 L1263.84 690.492 L1264.4 690.492 L1264.96 690.492 L1265.52 690.492 L1266.08 690.492 L1266.63 690.492 L1267.19 690.492 L1267.75 690.492 L1268.31 690.492 L1268.87 690.492 L1269.43 690.492 L1269.99 690.492 L1270.55 690.492 L1271.11 690.492 L1271.67 690.492 L1272.23 690.492 L1272.79 690.492 L1273.35 690.492 L1273.91 690.492 L1274.46 690.492 L1275.02 690.492 L1275.58 690.492 L1276.14 690.492 L1276.7 690.492 L1277.26 690.492 L1277.82 690.492 L1278.38 690.492 L1278.94 690.492 L1279.5 690.492 L1280.06 690.492 L1280.62 690.492 L1281.18 690.492 L1281.73 690.492 L1282.29 690.492 L1282.85 690.492 L1283.41 690.492 L1283.97 690.492 L1284.53 690.492 L1285.09 690.492 L1285.65 690.492 L1286.21 690.492 L1286.77 690.492 L1287.33 690.492 L1287.89 690.492 L1288.45 690.492 L1289 690.492 L1289.56 690.492 L1290.12 690.492 L1290.68 690.492 L1291.24 690.492 L1291.8 690.492 L1292.36 690.492 L1292.92 690.492 L1293.48 690.492 L1294.04 690.492 L1294.6 690.492 L1295.16 690.492 L1295.72 690.492 L1296.28 690.492 L1296.83 690.492 L1297.39 690.492 L1297.95 690.492 L1298.51 690.492 L1299.07 690.492 L1299.63 690.492 L1300.19 690.492 L1300.75 690.492 L1301.31 690.492 L1301.87 690.492 L1302.43 690.492 L1302.99 690.492 L1303.55 690.492 L1304.1 690.492 L1304.66 690.492 L1305.22 690.492 L1305.78 690.492 L1306.34 690.492 L1306.9 690.492 L1307.46 690.492 L1308.02 690.492 L1308.58 690.492 L1309.14 690.492 L1309.7 690.492 L1310.26 690.492 L1310.82 690.492 L1311.38 690.492 L1311.93 690.492 L1312.49 690.492 L1313.05 690.492 L1313.61 690.492 L1314.17 690.492 L1314.73 690.492 L1315.29 690.492 L1315.85 690.492 L1316.41 690.492 L1316.97 690.492 L1317.53 690.492 L1318.09 690.492 L1318.65 690.492 L1319.2 690.492 L1319.76 690.492 L1320.32 690.492 L1320.88 690.492 L1321.44 690.492 L1322 690.492 L1322.56 690.492 L1323.12 690.492 L1323.68 690.492 L1324.24 690.492 L1324.8 690.492 L1325.36 690.492 L1325.92 690.492 L1326.47 690.492 L1327.03 690.492 L1327.59 690.492 L1328.15 690.492 L1328.71 690.492 L1329.27 690.492 L1329.83 690.492 L1330.39 690.492 L1330.95 690.492 L1331.51 690.492 L1332.07 690.492 L1332.63 690.492 L1333.19 690.492 L1333.75 690.492 L1334.3 690.492 L1334.86 690.492 L1335.42 690.492 L1335.98 690.492 L1336.54 690.492 L1337.1 690.492 L1337.66 690.492 L1338.22 690.492 L1338.78 690.492 L1339.34 690.492 L1339.9 690.492 L1340.46 690.492 L1341.02 690.492 L1341.57 690.492 L1342.13 690.492 L1342.69 690.492 L1343.25 690.492 L1343.81 690.492 L1344.37 690.492 L1344.93 690.492 L1345.49 690.492 L1346.05 690.492 L1346.61 690.492 L1347.17 690.492 L1347.73 690.492 L1348.29 690.492 L1348.84 690.492 L1349.4 690.492 L1349.96 690.492 L1350.52 690.492 L1351.08 690.492 L1351.64 690.492 L1352.2 690.492 L1352.76 690.492 L1353.32 690.492 L1353.88 690.492 L1354.44 690.492 L1355 690.492 L1355.56 690.492 L1356.12 690.492 L1356.67 690.492 L1357.23 690.492 L1357.79 690.492 L1358.35 690.492 L1358.91 690.492 L1359.47 690.492 L1360.03 690.492 L1360.59 690.492 L1361.15 690.492 L1361.71 690.492 L1362.27 690.492 L1362.83 690.492 L1363.39 690.492 L1363.94 690.492 L1364.5 690.492 L1365.06 690.492 L1365.62 690.492 L1366.18 690.492 L1366.74 690.492 L1367.3 690.492 L1367.86 690.492 L1368.42 690.492 L1368.98 690.492 L1369.54 690.492 L1370.1 690.492 L1370.66 690.492 L1371.21 690.492 L1371.77 690.492 L1372.33 690.492 L1372.89 690.492 L1373.45 690.492 L1374.01 690.492 L1374.57 690.492 L1375.13 690.492 L1375.69 690.492 L1376.25 690.492 L1376.81 690.492 L1377.37 690.492 L1377.93 690.492 L1378.49 690.492 L1379.04 690.492 L1379.6 690.492 L1380.16 690.492 L1380.72 690.492 L1381.28 690.492 L1381.84 690.492 L1382.4 690.492 L1382.96 690.492 L1383.52 690.492 L1384.08 690.492 L1384.64 690.492 L1385.2 690.492 L1385.76 690.492 L1386.31 690.492 L1386.87 690.492 L1387.43 690.492 L1387.99 690.492 L1388.55 690.492 L1389.11 690.492 L1389.67 690.492 L1390.23 690.492 L1390.79 690.492 L1391.35 690.492 L1391.91 690.492 L1392.47 690.492 L1393.03 690.492 L1393.58 690.492 L1394.14 690.492 L1394.7 690.492 L1395.26 690.492 L1395.82 690.492 L1396.38 690.492 L1396.94 690.492 L1397.5 690.492 L1398.06 690.492 L1398.62 690.492 L1399.18 690.492 L1399.74 690.492 L1400.3 690.492 L1400.86 690.492 L1401.41 690.492 L1401.97 690.492 L1402.53 690.492 L1403.09 690.492 L1403.65 690.492 L1404.21 690.492 L1404.77 690.492 L1405.33 690.492 L1405.89 690.492 L1406.45 690.492 L1407.01 690.492 L1407.57 690.492 L1408.13 690.492 L1408.68 690.492 L1409.24 690.492 L1409.8 690.492 L1410.36 690.492 L1410.92 690.492 L1411.48 690.492 L1412.04 690.492 L1412.6 690.492 L1413.16 690.492 L1413.72 690.492 L1414.28 690.492 L1414.84 690.492 L1415.4 690.492 L1415.95 690.492 L1416.51 690.492 L1417.07 690.492 L1417.63 690.492 L1418.19 690.492 L1418.75 690.492 L1419.31 690.492 L1419.87 690.492 L1420.43 690.492 L1420.99 690.492 L1421.55 690.492 L1422.11 690.492 L1422.67 690.492 L1423.23 690.492 L1423.78 690.492 L1424.34 690.492 L1424.9 690.492 L1425.46 690.492 L1426.02 690.492 L1426.58 690.492 L1427.14 690.492 L1427.7 690.492 L1428.26 690.492 L1428.82 690.492 L1429.38 690.492 L1429.94 690.492 L1430.5 690.492 L1431.05 690.492 L1431.61 690.492 L1432.17 690.492 L1432.73 690.492 L1433.29 690.492 L1433.85 690.492 L1434.41 690.492 L1434.97 690.492 L1435.53 690.492 L1436.09 690.492 L1436.65 690.492 L1437.21 690.492 L1437.77 690.492 L1438.33 690.492 L1438.88 690.492 L1439.44 690.492 L1440 690.492 L1440.56 690.492 L1441.12 690.492 L1441.68 690.492 L1442.24 690.492 L1442.8 690.492 L1443.36 690.492 L1443.92 690.492 L1444.48 690.492 L1445.04 690.492 L1445.6 690.492 L1446.15 690.492 L1446.71 690.492 L1447.27 690.492 L1447.83 690.492 L1448.39 690.492 L1448.95 690.492 L1449.51 690.492 L1450.07 690.492 L1450.63 690.492 L1451.19 690.492 L1451.75 690.492 L1452.31 690.492 L1452.87 690.492 L1453.42 690.492 L1453.98 690.492 L1454.54 690.492 L1455.1 690.492 L1455.66 690.492 L1456.22 690.492 L1456.78 690.492 L1457.34 690.492 L1457.9 690.492 L1458.46 690.492 L1459.02 690.492 L1459.58 690.492 L1460.14 690.492 L1460.7 690.492 L1461.25 690.492 L1461.81 690.492 L1462.37 690.492 L1462.93 690.492 L1463.49 690.492 L1464.05 690.492 L1464.61 690.492 L1465.17 690.492 L1465.73 690.492 L1466.29 690.492 L1466.85 690.492 L1467.41 690.492 L1467.97 690.492 L1468.52 690.492 L1469.08 690.492 L1469.64 690.492 L1470.2 690.492 L1470.76 690.492 L1471.32 690.492 L1471.88 690.492 L1472.44 690.492 L1473 690.492 L1473.56 690.492 L1474.12 690.492 L1474.68 690.492 L1475.24 690.492 L1475.79 690.492 L1476.35 690.492 L1476.91 690.492 L1477.47 690.492 L1478.03 690.492 L1478.59 690.492 L1479.15 690.492 L1479.71 690.492 L1480.27 690.492 L1480.83 690.492 L1481.39 690.492 L1481.95 690.492 L1482.51 690.492 L1483.07 690.492 L1483.62 690.492 L1484.18 690.492 L1484.74 690.492 L1485.3 690.492 L1485.86 690.492 L1486.42 690.492 L1486.98 690.492 L1487.54 690.492 L1488.1 690.492 L1488.66 690.492 L1489.22 690.492 L1489.78 690.492 L1490.34 690.492 L1490.89 690.492 L1491.45 690.492 L1492.01 690.492 L1492.57 690.492 L1493.13 690.492 L1493.69 690.492 L1494.25 690.492 L1494.81 690.492 L1495.37 690.492 L1495.93 690.492 L1496.49 690.492 L1497.05 690.492 L1497.61 690.492 L1498.16 690.492 L1498.72 690.492 L1499.28 690.492 L1499.84 690.492 L1500.4 690.492 L1500.96 690.492 L1501.52 690.492 L1502.08 690.492 L1502.64 690.492 L1503.2 690.492 L1503.76 690.492 L1504.32 690.492 L1504.88 690.492 L1505.44 690.492 L1505.99 690.492 L1506.55 690.492 L1507.11 690.492 L1507.67 690.492 L1508.23 690.492 L1508.79 690.492 L1509.35 690.492 L1509.91 690.492 L1510.47 690.492 L1511.03 690.492 L1511.59 690.492 L1512.15 690.492 L1512.71 690.492 L1513.26 690.492 L1513.82 690.492 L1514.38 690.492 L1514.94 690.492 L1515.5 690.492 L1516.06 690.492 L1516.62 690.492 L1517.18 690.492 L1517.74 690.492 L1518.3 690.492 L1518.86 690.492 L1519.42 690.492 L1519.98 690.492 L1520.53 690.492 L1521.09 690.492 L1521.65 690.492 L1522.21 690.492 L1522.77 690.492 L1523.33 690.492 L1523.89 690.492 L1524.45 690.492 L1525.01 690.492 L1525.57 690.492 L1526.13 690.492 L1526.69 690.492 L1527.25 690.492 L1527.81 690.492 L1528.36 690.492 L1528.92 690.492 L1529.48 690.492 L1530.04 690.492 L1530.6 690.492 L1531.16 690.492 L1531.72 690.492 L1532.28 690.492 L1532.84 690.492 L1533.4 690.492 L1533.96 690.492 L1534.52 690.492 L1535.08 690.492 L1535.63 690.492 L1536.19 690.492 L1536.75 690.492 L1537.31 690.492 L1537.87 690.492 L1538.43 690.492 L1538.99 690.492 L1539.55 690.492 L1540.11 690.492 L1540.67 690.492 L1541.23 690.492 L1541.79 690.492 L1542.35 690.492 L1542.9 690.492 L1543.46 690.492 L1544.02 690.492 L1544.58 690.492 L1545.14 690.492 L1545.7 690.492 L1546.26 690.492 L1546.82 690.492 L1547.38 690.492 L1547.94 690.492 L1548.5 690.492 L1549.06 690.492 L1549.62 690.492 L1550.18 690.492 L1550.73 690.492 L1551.29 690.492 L1551.85 690.492 L1552.41 690.492 L1552.97 690.492 L1553.53 690.492 L1554.09 690.492 L1554.65 690.492 L1555.21 690.492 L1555.77 690.492 L1556.33 690.492 L1556.89 690.492 L1557.45 690.492 L1558 690.492 L1558.56 690.492 L1559.12 690.492 L1559.68 690.492 L1560.24 690.492 L1560.8 690.492 L1561.36 690.492 L1561.92 690.492 L1562.48 690.492 L1563.04 690.492 L1563.6 690.492 L1564.16 690.492 L1564.72 690.492 L1565.28 690.492 L1565.83 690.492 L1566.39 690.492 L1566.95 690.492 L1567.51 690.492 L1568.07 690.492 L1568.63 690.492 L1569.19 690.492 L1569.75 690.492 L1570.31 690.492 L1570.87 690.492 L1571.43 690.492 L1571.99 690.492 L1572.55 690.492 L1573.1 690.492 L1573.66 690.492 L1574.22 690.492 L1574.78 690.492 L1575.34 690.492 L1575.9 690.492 L1576.46 690.492 L1577.02 690.492 L1577.58 690.492 L1578.14 690.492 L1578.7 690.492 L1579.26 690.492 L1579.82 690.492 L1580.37 690.492 L1580.93 690.492 L1581.49 690.492 L1582.05 690.492 L1582.61 690.492 L1583.17 690.492 L1583.73 690.492 L1584.29 690.492 L1584.85 690.492 L1585.41 690.492 L1585.97 690.492 L1586.53 690.492 L1587.09 690.492 L1587.65 690.492 L1588.2 690.492 L1588.76 690.492 L1589.32 690.492 L1589.88 690.492 L1590.44 690.492 L1591 690.492 L1591.56 690.492 L1592.12 690.492 L1592.68 690.492 L1593.24 690.492 L1593.8 690.492 L1594.36 690.492 L1594.92 690.492 L1595.47 690.492 L1596.03 690.492 L1596.59 690.492 L1597.15 690.492 L1597.71 690.492 L1598.27 690.492 L1598.83 690.492 L1599.39 690.492 L1599.95 690.492 L1600.51 690.492 L1601.07 690.492 L1601.63 690.492 L1602.19 690.492 L1602.74 690.492 L1603.3 690.492 L1603.86 690.492 L1604.42 690.492 L1604.98 690.492 L1605.54 690.492 L1606.1 690.492 L1606.66 690.492 L1607.22 690.492 L1607.78 690.492 L1608.34 690.492 L1608.9 690.492 L1609.46 690.492 L1610.02 690.492 L1610.57 690.492 L1611.13 690.492 L1611.69 690.492 L1612.25 690.492 L1612.81 690.492 L1613.37 690.492 L1613.93 690.492 L1614.49 690.492 L1615.05 690.492 L1615.61 690.492 L1616.17 690.492 L1616.73 690.492 L1617.29 690.492 L1617.84 690.492 L1618.4 690.492 L1618.96 690.492 L1619.52 690.492 L1620.08 690.492 L1620.64 690.492 L1621.2 690.492 L1621.76 690.492 L1622.32 690.492 L1622.88 690.492 L1623.44 690.492 L1624 690.492 L1624.56 690.492 L1625.11 690.492 L1625.67 690.492 L1626.23 690.492 L1626.79 690.492 L1627.35 690.492 L1627.91 690.492 L1628.47 690.492 L1629.03 690.492 L1629.59 690.492 L1630.15 690.492 L1630.71 690.492 L1631.27 690.492 L1631.83 690.492 L1632.39 690.492 L1632.94 690.492 L1633.5 690.492 L1634.06 690.492 L1634.62 690.492 L1635.18 690.492 L1635.74 690.492 L1636.3 690.492 L1636.86 690.492 L1637.42 690.492 L1637.98 690.492 L1638.54 690.492 L1639.1 690.492 L1639.66 690.492 L1640.21 690.492 L1640.77 690.492 L1641.33 690.492 L1641.89 690.492 L1642.45 690.492 L1643.01 690.492 L1643.57 690.492 L1644.13 690.492 L1644.69 690.492 L1645.25 690.492 L1645.81 690.492 L1646.37 690.492 L1646.93 690.492 L1647.48 690.492 L1648.04 690.492 L1648.6 690.492 L1649.16 690.492 L1649.72 690.492 L1650.28 690.492 L1650.84 690.492 L1651.4 690.492 L1651.96 690.492 L1652.52 690.492 L1653.08 690.492 L1653.64 690.492 L1654.2 690.492 L1654.76 690.492 L1655.31 690.492 L1655.87 690.492 L1656.43 690.492 L1656.99 690.492 L1657.55 690.492 L1658.11 690.492 L1658.67 690.492 L1659.23 690.492 L1659.79 690.492 L1660.35 690.492 L1660.91 690.492 L1661.47 690.492 L1662.03 690.492 L1662.58 690.492 L1663.14 690.492 L1663.7 690.492 L1664.26 690.492 L1664.82 690.492 L1665.38 690.492 L1665.94 690.492 L1666.5 690.492 L1667.06 690.492 L1667.62 690.492 L1668.18 690.492 L1668.74 690.492 L1669.3 690.492 L1669.85 690.492 L1670.41 690.492 L1670.97 690.492 L1671.53 690.492 L1672.09 690.492 L1672.65 690.492 L1673.21 690.492 L1673.77 690.492 L1674.33 690.492 L1674.89 690.492 L1675.45 690.492 L1676.01 690.492 L1676.57 690.492 L1677.13 690.492 L1677.68 690.492 L1678.24 690.492 L1678.8 690.492 L1679.36 690.492 L1679.92 690.492 L1680.48 690.492 L1681.04 690.492 L1681.6 690.492 L1682.16 690.492 L1682.72 690.492 L1683.28 690.492 L1683.84 690.492 L1684.4 690.492 L1684.95 690.492 L1685.51 690.492 L1686.07 690.492 L1686.63 690.492 L1687.19 690.492 L1687.75 690.492 L1688.31 690.492 L1688.87 690.492 L1689.43 690.492 L1689.99 690.492 L1690.55 690.492 L1691.11 690.492 L1691.67 690.492 L1692.23 690.492 L1692.78 690.492 L1693.34 690.492 L1693.9 690.492 L1694.46 690.492 L1695.02 690.492 L1695.58 690.492 L1696.14 690.492 L1696.7 690.492 L1697.26 690.492 L1697.82 690.492 L1698.38 690.492 L1698.94 690.492 L1699.5 690.492 L1700.05 690.492 L1700.61 690.492 L1701.17 690.492 L1701.73 690.492 L1702.29 690.492 L1702.85 690.492 L1703.41 690.492 L1703.97 690.492 L1704.53 690.492 L1705.09 690.492 L1705.65 690.492 L1706.21 690.492 L1706.77 690.492 L1707.32 690.492 L1707.88 690.492 L1708.44 690.492 L1709 690.492 L1709.56 690.492 L1710.12 690.492 L1710.68 690.492 L1711.24 690.492 L1711.8 690.492 L1712.36 690.492 L1712.92 690.492 L1713.48 690.492 L1714.04 690.492 L1714.6 690.492 L1715.15 690.492 L1715.71 690.492 L1716.27 690.492 L1716.83 690.492 L1717.39 690.492 L1717.95 690.492 L1718.51 690.492 L1719.07 690.492 L1719.63 690.492 L1720.19 690.492 L1720.75 690.492 L1721.31 690.492 L1721.87 690.492 L1722.42 690.492 L1722.98 690.492 L1723.54 690.492 L1724.1 690.492 L1724.66 690.492 L1725.22 690.492 L1725.78 690.492 L1726.34 690.492 L1726.9 690.492 L1727.46 690.492 L1728.02 690.492 L1728.58 690.492 L1729.14 690.492 L1729.69 690.492 L1730.25 690.492 L1730.81 690.492 L1731.37 690.492 L1731.93 690.492 L1732.49 690.492 L1733.05 690.492 L1733.61 690.492 L1734.17 690.492 L1734.73 690.492 L1735.29 690.492 L1735.85 690.492 L1736.41 690.492 L1736.97 690.492 L1737.52 690.492 L1738.08 690.492 L1738.64 690.492 L1739.2 690.492 L1739.76 690.492 L1740.32 690.492 L1740.88 690.492 L1741.44 690.492 L1742 690.492 L1742.56 690.492 L1743.12 690.492 L1743.68 690.492 L1744.24 690.492 L1744.79 690.492 L1745.35 690.492 L1745.91 690.492 L1746.47 690.492 L1747.03 690.492 L1747.59 690.492 L1748.15 690.492 L1748.71 690.492 L1749.27 690.492 L1749.83 690.492 L1750.39 690.492 L1750.95 690.492 L1751.51 690.492 L1752.06 690.492 L1752.62 690.492 L1753.18 690.492 L1753.74 690.492 L1754.3 690.492 L1754.86 690.492 L1755.42 690.492 L1755.98 690.492 L1756.54 690.492 L1757.1 690.492 L1757.66 690.492 L1758.22 690.492 L1758.78 690.492 L1759.34 690.492 L1759.89 690.492 L1760.45 690.492 L1761.01 690.492 L1761.57 690.492 L1762.13 690.492 L1762.69 690.492 L1763.25 690.492 L1763.81 690.492 L1764.37 690.492 L1764.93 690.492 L1765.49 690.492 L1766.05 690.492 L1766.61 690.492 L1767.16 690.492 L1767.72 690.492 L1768.28 690.492 L1768.84 690.492 L1769.4 690.492 L1769.96 690.492 L1770.52 690.492 L1771.08 690.492 L1771.64 690.492 L1772.2 690.492 L1772.76 690.492 L1773.32 690.492 L1773.88 690.492 L1774.43 690.492 L1774.99 690.492 L1775.55 690.492 L1776.11 690.492 L1776.67 690.492 L1777.23 690.492 L1777.79 690.492 L1778.35 690.492 L1778.91 690.492 L1779.47 690.492 L1780.03 690.492 L1780.59 690.492 L1781.15 690.492 L1781.71 690.492 L1782.26 690.492 L1782.82 690.492 L1783.38 690.492 L1783.94 690.492 L1784.5 690.492 L1785.06 690.492 L1785.62 690.492 L1786.18 690.492 L1786.74 690.492 L1787.3 690.492 L1787.86 690.492 L1788.42 690.492 L1788.98 690.492 L1789.53 690.492 L1790.09 690.492 L1790.65 690.492 L1791.21 690.492 L1791.77 690.492 L1792.33 690.492 L1792.89 690.492 L1793.45 690.492 L1794.01 690.492 L1794.57 690.492 L1795.13 690.492 L1795.69 690.492 L1796.25 690.492 L1796.8 690.492 L1797.36 690.492 L1797.92 690.492 L1798.48 690.492 L1799.04 690.492 L1799.6 690.492 L1800.16 690.492 L1800.72 690.492 L1801.28 690.492 L1801.84 690.492 L1802.4 690.492 L1802.96 690.492 L1803.52 690.492 L1804.08 690.492 L1804.63 690.492 L1805.19 690.492 L1805.75 690.492 L1806.31 690.492 L1806.87 690.492 L1807.43 690.492 L1807.99 690.492 L1808.55 690.492 L1809.11 690.492 L1809.67 690.492 L1810.23 690.492 L1810.79 690.492 L1811.35 690.492 L1811.9 690.492 L1812.46 690.492 L1813.02 690.492 L1813.58 690.492 L1814.14 690.492 L1814.7 690.492 L1815.26 690.492 L1815.82 690.492 L1816.38 690.492 L1816.94 690.492 L1817.5 690.492 L1818.06 690.492 L1818.62 690.492 L1819.18 690.492 L1819.73 690.492 L1820.29 690.492 L1820.85 690.492 L1821.41 690.492 L1821.97 690.492 L1822.53 690.492 L1823.09 690.492 L1823.65 690.492 L1824.21 690.492 L1824.77 690.492 L1825.33 690.492 L1825.89 690.492 L1826.45 690.492 L1827 690.492 L1827.56 690.492 L1828.12 690.492 L1828.68 690.492 L1829.24 690.492 L1829.8 690.492 L1830.36 690.492 L1830.92 690.492 L1831.48 690.492 L1832.04 690.492 L1832.6 690.492 L1833.16 690.492 L1833.72 690.492 L1834.27 690.492 L1834.83 690.492 L1835.39 690.492 L1835.95 690.492 L1836.51 690.492 L1837.07 690.492 L1837.63 690.492 L1838.19 690.492 L1838.19 680.543 L1837.63 680.543 L1837.07 680.543 L1836.51 680.543 L1835.95 680.543 L1835.39 680.543 L1834.83 680.543 L1834.27 680.543 L1833.72 680.543 L1833.16 680.543 L1832.6 680.543 L1832.04 680.543 L1831.48 680.543 L1830.92 680.543 L1830.36 680.543 L1829.8 680.543 L1829.24 680.543 L1828.68 680.543 L1828.12 680.543 L1827.56 680.543 L1827 680.543 L1826.45 680.543 L1825.89 680.543 L1825.33 680.543 L1824.77 680.543 L1824.21 680.543 L1823.65 680.543 L1823.09 680.543 L1822.53 680.543 L1821.97 680.543 L1821.41 680.543 L1820.85 680.543 L1820.29 680.543 L1819.73 680.543 L1819.18 680.543 L1818.62 680.543 L1818.06 680.543 L1817.5 680.543 L1816.94 680.543 L1816.38 680.543 L1815.82 680.543 L1815.26 680.543 L1814.7 680.543 L1814.14 680.543 L1813.58 680.543 L1813.02 680.543 L1812.46 680.543 L1811.9 680.543 L1811.35 680.543 L1810.79 680.543 L1810.23 680.543 L1809.67 680.543 L1809.11 680.543 L1808.55 680.543 L1807.99 680.543 L1807.43 680.543 L1806.87 680.543 L1806.31 680.543 L1805.75 680.543 L1805.19 680.543 L1804.63 680.543 L1804.08 680.543 L1803.52 680.543 L1802.96 680.543 L1802.4 680.543 L1801.84 680.543 L1801.28 680.543 L1800.72 680.543 L1800.16 680.543 L1799.6 680.543 L1799.04 680.543 L1798.48 680.543 L1797.92 680.543 L1797.36 680.543 L1796.8 680.543 L1796.25 680.543 L1795.69 680.543 L1795.13 680.543 L1794.57 680.543 L1794.01 680.543 L1793.45 680.543 L1792.89 680.543 L1792.33 680.543 L1791.77 680.543 L1791.21 680.543 L1790.65 680.543 L1790.09 680.543 L1789.53 680.543 L1788.98 680.543 L1788.42 680.543 L1787.86 680.543 L1787.3 680.543 L1786.74 680.543 L1786.18 680.543 L1785.62 680.543 L1785.06 680.543 L1784.5 680.543 L1783.94 680.543 L1783.38 680.543 L1782.82 680.543 L1782.26 680.543 L1781.71 680.543 L1781.15 680.543 L1780.59 680.543 L1780.03 680.543 L1779.47 680.543 L1778.91 680.543 L1778.35 680.543 L1777.79 680.543 L1777.23 680.543 L1776.67 680.543 L1776.11 680.543 L1775.55 680.543 L1774.99 680.543 L1774.43 680.543 L1773.88 680.543 L1773.32 680.543 L1772.76 680.543 L1772.2 680.543 L1771.64 680.543 L1771.08 680.543 L1770.52 680.543 L1769.96 680.543 L1769.4 680.543 L1768.84 680.543 L1768.28 680.543 L1767.72 680.543 L1767.16 680.543 L1766.61 680.543 L1766.05 680.543 L1765.49 680.543 L1764.93 680.543 L1764.37 680.543 L1763.81 680.543 L1763.25 680.543 L1762.69 680.543 L1762.13 680.543 L1761.57 680.543 L1761.01 680.543 L1760.45 680.543 L1759.89 680.543 L1759.34 680.543 L1758.78 680.543 L1758.22 680.543 L1757.66 680.543 L1757.1 680.543 L1756.54 680.543 L1755.98 680.543 L1755.42 680.543 L1754.86 680.543 L1754.3 680.543 L1753.74 680.543 L1753.18 680.543 L1752.62 680.543 L1752.06 680.543 L1751.51 680.543 L1750.95 680.543 L1750.39 680.543 L1749.83 680.543 L1749.27 680.543 L1748.71 680.543 L1748.15 680.543 L1747.59 680.543 L1747.03 680.543 L1746.47 680.543 L1745.91 680.543 L1745.35 680.543 L1744.79 680.543 L1744.24 680.543 L1743.68 680.543 L1743.12 680.543 L1742.56 680.543 L1742 680.543 L1741.44 680.543 L1740.88 680.543 L1740.32 680.543 L1739.76 680.543 L1739.2 680.543 L1738.64 680.543 L1738.08 680.543 L1737.52 680.543 L1736.97 680.543 L1736.41 680.543 L1735.85 680.543 L1735.29 680.543 L1734.73 680.543 L1734.17 680.543 L1733.61 680.543 L1733.05 680.543 L1732.49 680.543 L1731.93 680.543 L1731.37 680.543 L1730.81 680.543 L1730.25 680.543 L1729.69 680.543 L1729.14 680.543 L1728.58 680.543 L1728.02 680.543 L1727.46 680.543 L1726.9 680.543 L1726.34 680.543 L1725.78 680.543 L1725.22 680.543 L1724.66 680.543 L1724.1 680.543 L1723.54 680.543 L1722.98 680.543 L1722.42 680.543 L1721.87 680.543 L1721.31 680.543 L1720.75 680.543 L1720.19 680.543 L1719.63 680.543 L1719.07 680.543 L1718.51 680.543 L1717.95 680.543 L1717.39 680.543 L1716.83 680.543 L1716.27 680.543 L1715.71 680.543 L1715.15 680.543 L1714.6 680.543 L1714.04 680.543 L1713.48 680.543 L1712.92 680.543 L1712.36 680.543 L1711.8 680.543 L1711.24 680.543 L1710.68 680.543 L1710.12 680.543 L1709.56 680.543 L1709 680.543 L1708.44 680.543 L1707.88 680.543 L1707.32 680.543 L1706.77 680.543 L1706.21 680.543 L1705.65 680.543 L1705.09 680.543 L1704.53 680.543 L1703.97 680.543 L1703.41 680.543 L1702.85 680.543 L1702.29 680.543 L1701.73 680.543 L1701.17 680.543 L1700.61 680.543 L1700.05 680.543 L1699.5 680.543 L1698.94 680.543 L1698.38 680.543 L1697.82 680.543 L1697.26 680.543 L1696.7 680.543 L1696.14 680.543 L1695.58 680.543 L1695.02 680.543 L1694.46 680.543 L1693.9 680.543 L1693.34 680.543 L1692.78 680.543 L1692.23 680.543 L1691.67 680.543 L1691.11 680.543 L1690.55 680.543 L1689.99 680.543 L1689.43 680.543 L1688.87 680.543 L1688.31 680.543 L1687.75 680.543 L1687.19 680.543 L1686.63 680.543 L1686.07 680.543 L1685.51 680.543 L1684.95 680.543 L1684.4 680.543 L1683.84 680.543 L1683.28 680.543 L1682.72 680.543 L1682.16 680.543 L1681.6 680.543 L1681.04 680.543 L1680.48 680.543 L1679.92 680.543 L1679.36 680.543 L1678.8 680.543 L1678.24 680.543 L1677.68 680.543 L1677.13 680.543 L1676.57 680.543 L1676.01 680.543 L1675.45 680.543 L1674.89 680.543 L1674.33 680.543 L1673.77 680.543 L1673.21 680.543 L1672.65 680.543 L1672.09 680.543 L1671.53 680.543 L1670.97 680.543 L1670.41 680.543 L1669.85 680.543 L1669.3 680.543 L1668.74 680.543 L1668.18 680.543 L1667.62 680.543 L1667.06 680.543 L1666.5 680.543 L1665.94 680.543 L1665.38 680.543 L1664.82 680.543 L1664.26 680.543 L1663.7 680.543 L1663.14 680.543 L1662.58 680.543 L1662.03 680.543 L1661.47 680.543 L1660.91 680.543 L1660.35 680.543 L1659.79 680.543 L1659.23 680.543 L1658.67 680.543 L1658.11 680.543 L1657.55 680.543 L1656.99 680.543 L1656.43 680.543 L1655.87 680.543 L1655.31 680.543 L1654.76 680.543 L1654.2 680.543 L1653.64 680.543 L1653.08 680.543 L1652.52 680.543 L1651.96 680.543 L1651.4 680.543 L1650.84 680.543 L1650.28 680.543 L1649.72 680.543 L1649.16 680.543 L1648.6 680.543 L1648.04 680.543 L1647.48 680.543 L1646.93 680.543 L1646.37 680.543 L1645.81 680.543 L1645.25 680.543 L1644.69 680.543 L1644.13 680.543 L1643.57 680.543 L1643.01 680.543 L1642.45 680.543 L1641.89 680.543 L1641.33 680.543 L1640.77 680.543 L1640.21 680.543 L1639.66 680.543 L1639.1 680.543 L1638.54 680.543 L1637.98 680.543 L1637.42 680.543 L1636.86 680.543 L1636.3 680.543 L1635.74 680.543 L1635.18 680.543 L1634.62 680.543 L1634.06 680.543 L1633.5 680.543 L1632.94 680.543 L1632.39 680.543 L1631.83 680.543 L1631.27 680.543 L1630.71 680.543 L1630.15 680.543 L1629.59 680.543 L1629.03 680.543 L1628.47 680.543 L1627.91 680.543 L1627.35 680.543 L1626.79 680.543 L1626.23 680.543 L1625.67 680.543 L1625.11 680.543 L1624.56 680.543 L1624 680.543 L1623.44 680.543 L1622.88 680.543 L1622.32 680.543 L1621.76 680.543 L1621.2 680.543 L1620.64 680.543 L1620.08 680.543 L1619.52 680.543 L1618.96 680.543 L1618.4 680.543 L1617.84 680.543 L1617.29 680.543 L1616.73 680.543 L1616.17 680.543 L1615.61 680.543 L1615.05 680.543 L1614.49 680.543 L1613.93 680.543 L1613.37 680.543 L1612.81 680.543 L1612.25 680.543 L1611.69 680.543 L1611.13 680.543 L1610.57 680.543 L1610.02 680.543 L1609.46 680.543 L1608.9 680.543 L1608.34 680.543 L1607.78 680.543 L1607.22 680.543 L1606.66 680.543 L1606.1 680.543 L1605.54 680.543 L1604.98 680.543 L1604.42 680.543 L1603.86 680.543 L1603.3 680.543 L1602.74 680.543 L1602.19 680.543 L1601.63 680.543 L1601.07 680.543 L1600.51 680.543 L1599.95 680.543 L1599.39 680.543 L1598.83 680.543 L1598.27 680.543 L1597.71 680.543 L1597.15 680.543 L1596.59 680.543 L1596.03 680.543 L1595.47 680.543 L1594.92 680.543 L1594.36 680.543 L1593.8 680.543 L1593.24 680.543 L1592.68 680.543 L1592.12 680.543 L1591.56 680.543 L1591 680.543 L1590.44 680.543 L1589.88 680.543 L1589.32 680.543 L1588.76 680.543 L1588.2 680.543 L1587.65 680.543 L1587.09 680.543 L1586.53 680.543 L1585.97 680.543 L1585.41 680.543 L1584.85 680.543 L1584.29 680.543 L1583.73 680.543 L1583.17 680.543 L1582.61 680.543 L1582.05 680.543 L1581.49 680.543 L1580.93 680.543 L1580.37 680.543 L1579.82 680.543 L1579.26 680.543 L1578.7 680.543 L1578.14 680.543 L1577.58 680.543 L1577.02 680.543 L1576.46 680.543 L1575.9 680.543 L1575.34 680.543 L1574.78 680.543 L1574.22 680.543 L1573.66 680.543 L1573.1 680.543 L1572.55 680.543 L1571.99 680.543 L1571.43 680.543 L1570.87 680.543 L1570.31 680.543 L1569.75 680.543 L1569.19 680.543 L1568.63 680.543 L1568.07 680.543 L1567.51 680.543 L1566.95 680.543 L1566.39 680.543 L1565.83 680.543 L1565.28 680.543 L1564.72 680.543 L1564.16 680.543 L1563.6 680.543 L1563.04 680.543 L1562.48 680.543 L1561.92 680.543 L1561.36 680.543 L1560.8 680.543 L1560.24 680.543 L1559.68 680.543 L1559.12 680.543 L1558.56 680.543 L1558 680.543 L1557.45 680.543 L1556.89 680.543 L1556.33 680.543 L1555.77 680.543 L1555.21 680.543 L1554.65 680.543 L1554.09 680.543 L1553.53 680.543 L1552.97 680.543 L1552.41 680.543 L1551.85 680.543 L1551.29 680.543 L1550.73 680.543 L1550.18 680.543 L1549.62 680.543 L1549.06 680.543 L1548.5 680.543 L1547.94 680.543 L1547.38 680.543 L1546.82 680.543 L1546.26 680.543 L1545.7 680.543 L1545.14 680.543 L1544.58 680.543 L1544.02 680.543 L1543.46 680.543 L1542.9 680.543 L1542.35 680.543 L1541.79 680.543 L1541.23 680.543 L1540.67 680.543 L1540.11 680.543 L1539.55 680.543 L1538.99 680.543 L1538.43 680.543 L1537.87 680.543 L1537.31 680.543 L1536.75 680.543 L1536.19 680.543 L1535.63 680.543 L1535.08 680.543 L1534.52 680.543 L1533.96 680.543 L1533.4 680.543 L1532.84 680.543 L1532.28 680.543 L1531.72 680.543 L1531.16 680.543 L1530.6 680.543 L1530.04 680.543 L1529.48 680.543 L1528.92 680.543 L1528.36 680.543 L1527.81 680.543 L1527.25 680.543 L1526.69 680.543 L1526.13 680.543 L1525.57 680.543 L1525.01 680.543 L1524.45 680.543 L1523.89 680.543 L1523.33 680.543 L1522.77 680.543 L1522.21 680.543 L1521.65 680.543 L1521.09 680.543 L1520.53 680.543 L1519.98 680.543 L1519.42 680.543 L1518.86 680.543 L1518.3 680.543 L1517.74 680.543 L1517.18 680.543 L1516.62 680.543 L1516.06 680.543 L1515.5 680.543 L1514.94 680.543 L1514.38 680.543 L1513.82 680.543 L1513.26 680.543 L1512.71 680.543 L1512.15 680.543 L1511.59 680.543 L1511.03 680.543 L1510.47 680.543 L1509.91 680.543 L1509.35 680.543 L1508.79 680.543 L1508.23 680.543 L1507.67 680.543 L1507.11 680.543 L1506.55 680.543 L1505.99 680.543 L1505.44 680.543 L1504.88 680.543 L1504.32 680.543 L1503.76 680.543 L1503.2 680.543 L1502.64 680.543 L1502.08 680.543 L1501.52 680.543 L1500.96 680.543 L1500.4 680.543 L1499.84 680.543 L1499.28 680.543 L1498.72 680.543 L1498.16 680.543 L1497.61 680.543 L1497.05 680.543 L1496.49 680.543 L1495.93 680.543 L1495.37 680.543 L1494.81 680.543 L1494.25 680.543 L1493.69 680.543 L1493.13 680.543 L1492.57 680.543 L1492.01 680.543 L1491.45 680.543 L1490.89 680.543 L1490.34 680.543 L1489.78 680.543 L1489.22 680.543 L1488.66 680.543 L1488.1 680.543 L1487.54 680.543 L1486.98 680.543 L1486.42 680.543 L1485.86 680.543 L1485.3 680.543 L1484.74 680.543 L1484.18 680.543 L1483.62 680.543 L1483.07 680.543 L1482.51 680.543 L1481.95 680.543 L1481.39 680.543 L1480.83 680.543 L1480.27 680.543 L1479.71 680.543 L1479.15 680.543 L1478.59 680.543 L1478.03 680.543 L1477.47 680.543 L1476.91 680.543 L1476.35 680.543 L1475.79 680.543 L1475.24 680.543 L1474.68 680.543 L1474.12 680.543 L1473.56 680.543 L1473 680.543 L1472.44 680.543 L1471.88 680.543 L1471.32 680.543 L1470.76 680.543 L1470.2 680.543 L1469.64 680.543 L1469.08 680.543 L1468.52 680.543 L1467.97 680.543 L1467.41 680.543 L1466.85 680.543 L1466.29 680.543 L1465.73 680.543 L1465.17 680.543 L1464.61 680.543 L1464.05 680.543 L1463.49 680.543 L1462.93 680.543 L1462.37 680.543 L1461.81 680.543 L1461.25 680.543 L1460.7 680.543 L1460.14 680.543 L1459.58 680.543 L1459.02 680.543 L1458.46 680.543 L1457.9 680.543 L1457.34 680.543 L1456.78 680.543 L1456.22 680.543 L1455.66 680.543 L1455.1 680.543 L1454.54 680.543 L1453.98 680.543 L1453.42 680.543 L1452.87 680.543 L1452.31 680.543 L1451.75 680.543 L1451.19 680.543 L1450.63 680.543 L1450.07 680.543 L1449.51 680.543 L1448.95 680.543 L1448.39 680.543 L1447.83 680.543 L1447.27 680.543 L1446.71 680.543 L1446.15 680.543 L1445.6 680.543 L1445.04 680.543 L1444.48 680.543 L1443.92 680.543 L1443.36 680.543 L1442.8 680.543 L1442.24 680.543 L1441.68 680.543 L1441.12 680.543 L1440.56 680.543 L1440 680.543 L1439.44 680.543 L1438.88 680.543 L1438.33 680.543 L1437.77 680.543 L1437.21 680.543 L1436.65 680.543 L1436.09 680.543 L1435.53 680.543 L1434.97 680.543 L1434.41 680.543 L1433.85 680.543 L1433.29 680.543 L1432.73 680.543 L1432.17 680.543 L1431.61 680.543 L1431.05 680.543 L1430.5 680.543 L1429.94 680.543 L1429.38 680.543 L1428.82 680.543 L1428.26 680.543 L1427.7 680.543 L1427.14 680.543 L1426.58 680.543 L1426.02 680.543 L1425.46 680.543 L1424.9 680.543 L1424.34 680.543 L1423.78 680.543 L1423.23 680.543 L1422.67 680.543 L1422.11 680.543 L1421.55 680.543 L1420.99 680.543 L1420.43 680.543 L1419.87 680.543 L1419.31 680.543 L1418.75 680.543 L1418.19 680.543 L1417.63 680.543 L1417.07 680.543 L1416.51 680.543 L1415.95 680.543 L1415.4 680.543 L1414.84 680.543 L1414.28 680.543 L1413.72 680.543 L1413.16 680.543 L1412.6 680.543 L1412.04 680.543 L1411.48 680.543 L1410.92 680.543 L1410.36 680.543 L1409.8 680.543 L1409.24 680.543 L1408.68 680.543 L1408.13 680.543 L1407.57 680.543 L1407.01 680.543 L1406.45 680.543 L1405.89 680.543 L1405.33 680.543 L1404.77 680.543 L1404.21 680.543 L1403.65 680.543 L1403.09 680.543 L1402.53 680.543 L1401.97 680.543 L1401.41 680.543 L1400.86 680.543 L1400.3 680.543 L1399.74 680.543 L1399.18 680.543 L1398.62 680.543 L1398.06 680.543 L1397.5 680.543 L1396.94 680.543 L1396.38 680.543 L1395.82 680.543 L1395.26 680.543 L1394.7 680.543 L1394.14 680.543 L1393.58 680.543 L1393.03 680.543 L1392.47 680.543 L1391.91 680.543 L1391.35 680.543 L1390.79 680.543 L1390.23 680.543 L1389.67 680.543 L1389.11 680.543 L1388.55 680.543 L1387.99 680.543 L1387.43 680.543 L1386.87 680.543 L1386.31 680.543 L1385.76 680.543 L1385.2 680.543 L1384.64 680.543 L1384.08 680.543 L1383.52 680.543 L1382.96 680.543 L1382.4 680.543 L1381.84 680.543 L1381.28 680.543 L1380.72 680.543 L1380.16 680.543 L1379.6 680.543 L1379.04 680.543 L1378.49 680.543 L1377.93 680.543 L1377.37 680.543 L1376.81 680.543 L1376.25 680.543 L1375.69 680.543 L1375.13 680.543 L1374.57 680.543 L1374.01 680.543 L1373.45 680.543 L1372.89 680.543 L1372.33 680.543 L1371.77 680.543 L1371.21 680.543 L1370.66 680.543 L1370.1 680.543 L1369.54 680.543 L1368.98 680.543 L1368.42 680.543 L1367.86 680.543 L1367.3 680.543 L1366.74 680.543 L1366.18 680.543 L1365.62 680.543 L1365.06 680.543 L1364.5 680.543 L1363.94 680.543 L1363.39 680.543 L1362.83 680.543 L1362.27 680.543 L1361.71 680.543 L1361.15 680.543 L1360.59 680.543 L1360.03 680.543 L1359.47 680.543 L1358.91 680.543 L1358.35 680.543 L1357.79 680.543 L1357.23 680.543 L1356.67 680.543 L1356.12 680.543 L1355.56 680.543 L1355 680.543 L1354.44 680.543 L1353.88 680.543 L1353.32 680.543 L1352.76 680.543 L1352.2 680.543 L1351.64 680.543 L1351.08 680.543 L1350.52 680.543 L1349.96 680.543 L1349.4 680.543 L1348.84 680.543 L1348.29 680.543 L1347.73 680.543 L1347.17 680.543 L1346.61 680.543 L1346.05 680.543 L1345.49 680.543 L1344.93 680.543 L1344.37 680.543 L1343.81 680.543 L1343.25 680.543 L1342.69 680.543 L1342.13 680.543 L1341.57 680.543 L1341.02 680.543 L1340.46 680.543 L1339.9 680.543 L1339.34 680.543 L1338.78 680.543 L1338.22 680.543 L1337.66 680.543 L1337.1 680.543 L1336.54 680.543 L1335.98 680.543 L1335.42 680.543 L1334.86 680.543 L1334.3 680.543 L1333.75 680.543 L1333.19 680.543 L1332.63 680.543 L1332.07 680.543 L1331.51 680.543 L1330.95 680.543 L1330.39 680.543 L1329.83 680.543 L1329.27 680.543 L1328.71 680.543 L1328.15 680.543 L1327.59 680.543 L1327.03 680.543 L1326.47 680.543 L1325.92 680.543 L1325.36 680.543 L1324.8 680.543 L1324.24 680.543 L1323.68 680.543 L1323.12 680.543 L1322.56 680.543 L1322 680.543 L1321.44 680.543 L1320.88 680.543 L1320.32 680.543 L1319.76 680.543 L1319.2 680.543 L1318.65 680.543 L1318.09 680.543 L1317.53 680.543 L1316.97 680.543 L1316.41 680.543 L1315.85 680.543 L1315.29 680.543 L1314.73 680.543 L1314.17 680.543 L1313.61 680.543 L1313.05 680.543 L1312.49 680.543 L1311.93 680.543 L1311.38 680.543 L1310.82 680.543 L1310.26 680.543 L1309.7 680.543 L1309.14 680.543 L1308.58 680.543 L1308.02 680.543 L1307.46 680.543 L1306.9 680.543 L1306.34 680.543 L1305.78 680.543 L1305.22 680.543 L1304.66 680.543 L1304.1 680.543 L1303.55 680.543 L1302.99 680.543 L1302.43 680.543 L1301.87 680.543 L1301.31 680.543 L1300.75 680.543 L1300.19 680.543 L1299.63 680.543 L1299.07 680.543 L1298.51 680.543 L1297.95 680.543 L1297.39 680.543 L1296.83 680.543 L1296.28 680.543 L1295.72 680.543 L1295.16 680.543 L1294.6 680.543 L1294.04 680.543 L1293.48 680.543 L1292.92 680.543 L1292.36 680.543 L1291.8 680.543 L1291.24 680.543 L1290.68 680.543 L1290.12 680.543 L1289.56 680.543 L1289 680.543 L1288.45 680.543 L1287.89 680.543 L1287.33 680.543 L1286.77 680.543 L1286.21 680.543 L1285.65 680.543 L1285.09 680.543 L1284.53 680.543 L1283.97 680.543 L1283.41 680.543 L1282.85 680.543 L1282.29 680.543 L1281.73 680.543 L1281.18 680.543 L1280.62 680.543 L1280.06 680.543 L1279.5 680.543 L1278.94 680.543 L1278.38 680.543 L1277.82 680.543 L1277.26 680.543 L1276.7 680.543 L1276.14 680.543 L1275.58 680.543 L1275.02 680.543 L1274.46 680.543 L1273.91 680.543 L1273.35 680.543 L1272.79 680.543 L1272.23 680.543 L1271.67 680.543 L1271.11 680.543 L1270.55 680.543 L1269.99 680.543 L1269.43 680.543 L1268.87 680.543 L1268.31 680.543 L1267.75 680.543 L1267.19 680.543 L1266.63 680.543 L1266.08 680.543 L1265.52 680.543 L1264.96 680.543 L1264.4 680.543 L1263.84 680.543 L1263.28 680.543 L1262.72 680.543 L1262.16 680.543 L1261.6 680.543 L1261.04 680.543 L1260.48 680.543 L1259.92 680.543 L1259.36 680.543 L1258.81 680.543 L1258.25 680.543 L1257.69 680.543 L1257.13 680.543 L1256.57 680.543 L1256.01 680.543 L1255.45 680.543 L1254.89 680.543 L1254.33 680.543 L1253.77 680.543 L1253.21 680.543 L1252.65 680.543 L1252.09 680.543 L1251.54 680.543 L1250.98 680.543 L1250.42 680.543 L1249.86 680.543 L1249.3 680.543 L1248.74 680.543 L1248.18 680.543 L1247.62 680.543 L1247.06 680.543 L1246.5 680.543 L1245.94 680.543 L1245.38 680.543 L1244.82 680.543 L1244.26 680.543 L1243.71 680.543 L1243.15 680.543 L1242.59 680.543 L1242.03 680.543 L1241.47 680.543 L1240.91 680.543 L1240.35 680.543 L1239.79 680.543 L1239.23 680.543 L1238.67 680.543 L1238.11 680.543 L1237.55 680.543 L1236.99 680.543 L1236.44 680.543 L1235.88 680.543 L1235.32 680.543 L1234.76 680.543 L1234.2 680.543 L1233.64 680.543 L1233.08 680.543 L1232.52 680.543 L1231.96 680.543 L1231.4 680.543 L1230.84 680.543 L1230.28 680.543 L1229.72 680.543 L1229.17 680.543 L1228.61 680.543 L1228.05 680.543 L1227.49 680.543 L1226.93 680.543 L1226.37 680.543 L1225.81 680.543 L1225.25 680.543 L1224.69 680.543 L1224.13 680.543 L1223.57 680.543 L1223.01 680.543 L1222.45 680.543 L1221.89 680.543 L1221.34 680.543 L1220.78 680.543 L1220.22 680.543 L1219.66 680.543 L1219.1 680.543 L1218.54 680.543 L1217.98 680.543 L1217.42 680.543 L1216.86 680.543 L1216.3 680.543 L1215.74 680.543 L1215.18 680.543 L1214.62 680.543 L1214.07 680.543 L1213.51 680.543 L1212.95 680.543 L1212.39 680.543 L1211.83 680.543 L1211.27 680.543 L1210.71 680.543 L1210.15 680.543 L1209.59 680.543 L1209.03 680.543 L1208.47 680.543 L1207.91 680.543 L1207.35 680.543 L1206.8 680.543 L1206.24 680.543 L1205.68 680.543 L1205.12 680.543 L1204.56 680.543 L1204 680.543 L1203.44 680.543 L1202.88 680.543 L1202.32 680.543 L1201.76 680.543 L1201.2 680.543 L1200.64 680.543 L1200.08 680.543 L1199.52 680.543 L1198.97 680.543 L1198.41 680.543 L1197.85 680.543 L1197.29 680.543 L1196.73 680.543 L1196.17 680.543 L1195.61 680.543 L1195.05 680.543 L1194.49 680.543 L1193.93 680.543 L1193.37 680.543 L1192.81 680.543 L1192.25 680.543 L1191.7 680.543 L1191.14 680.543 L1190.58 680.543 L1190.02 680.543 L1189.46 680.543 L1188.9 680.543 L1188.34 680.543 L1187.78 680.543 L1187.22 680.543 L1186.66 680.543 L1186.1 680.543 L1185.54 680.543 L1184.98 680.543 L1184.43 680.543 L1183.87 680.543 L1183.31 680.543 L1182.75 680.543 L1182.19 680.543 L1181.63 680.543 L1181.07 680.543 L1180.51 680.543 L1179.95 680.543 L1179.39 680.543 L1178.83 680.543 L1178.27 680.543 L1177.71 680.543 L1177.15 680.543 L1176.6 680.543 L1176.04 680.543 L1175.48 680.543 L1174.92 680.543 L1174.36 680.543 L1173.8 680.543 L1173.24 680.543 L1172.68 680.543 L1172.12 680.543 L1171.56 680.543 L1171 680.543 L1170.44 680.543 L1169.88 680.543 L1169.33 680.543 L1168.77 680.543 L1168.21 680.543 L1167.65 680.543 L1167.09 680.543 L1166.53 680.543 L1165.97 680.543 L1165.41 680.543 L1164.85 680.543 L1164.29 680.543 L1163.73 680.543 L1163.17 680.543 L1162.61 680.543 L1162.05 680.543 L1161.5 680.543 L1160.94 680.543 L1160.38 680.543 L1159.82 680.543 L1159.26 680.543 L1158.7 680.543 L1158.14 680.543 L1157.58 680.543 L1157.02 680.543 L1156.46 680.543 L1155.9 680.543 L1155.34 680.543 L1154.78 680.543 L1154.23 680.543 L1153.67 680.543 L1153.11 680.543 L1152.55 680.543 L1151.99 680.543 L1151.43 680.543 L1150.87 680.543 L1150.31 680.543 L1149.75 680.543 L1149.19 680.543 L1148.63 680.543 L1148.07 680.543 L1147.51 680.543 L1146.96 680.543 L1146.4 680.543 L1145.84 680.543 L1145.28 680.543 L1144.72 680.543 L1144.16 680.543 L1143.6 680.543 L1143.04 680.543 L1142.48 680.543 L1141.92 680.543 L1141.36 680.543 L1140.8 680.543 L1140.24 680.543 L1139.68 680.543 L1139.13 680.543 L1138.57 680.543 L1138.01 680.543 L1137.45 680.543 L1136.89 680.543 L1136.33 680.543 L1135.77 680.543 L1135.21 680.543 L1134.65 680.543 L1134.09 680.543 L1133.53 680.543 L1132.97 680.543 L1132.41 680.543 L1131.86 680.543 L1131.3 680.543 L1130.74 680.543 L1130.18 680.543 L1129.62 680.543 L1129.06 680.543 L1128.5 680.543 L1127.94 680.543 L1127.38 680.543 L1126.82 680.543 L1126.26 680.543 L1125.7 680.543 L1125.14 680.543 L1124.59 680.543 L1124.03 680.543 L1123.47 680.543 L1122.91 680.543 L1122.35 680.543 L1121.79 680.543 L1121.23 680.543 L1120.67 680.543 L1120.11 680.543 L1119.55 680.543 L1118.99 680.543 L1118.43 680.543 L1117.87 680.543 L1117.31 680.543 L1116.76 680.543 L1116.2 680.543 L1115.64 680.543 L1115.08 680.543 L1114.52 680.543 L1113.96 680.543 L1113.4 680.543 L1112.84 680.543 L1112.28 680.543 L1111.72 680.543 L1111.16 680.543 L1110.6 680.543 L1110.04 680.543 L1109.49 680.543 L1108.93 680.543 L1108.37 680.543 L1107.81 680.543 L1107.25 680.543 L1106.69 680.543 L1106.13 680.543 L1105.57 680.543 L1105.01 680.543 L1104.45 680.543 L1103.89 680.543 L1103.33 680.543 L1102.77 680.543 L1102.22 680.543 L1101.66 680.543 L1101.1 680.543 L1100.54 680.543 L1099.98 680.543 L1099.42 680.543 L1098.86 680.543 L1098.3 680.543 L1097.74 680.543 L1097.18 680.543 L1096.62 680.543 L1096.06 680.543 L1095.5 680.543 L1094.94 680.543 L1094.39 680.543 L1093.83 680.543 L1093.27 680.543 L1092.71 680.543 L1092.15 680.543 L1091.59 680.543 L1091.03 680.543 L1090.47 680.543 L1089.91 680.543 L1089.35 680.543 L1088.79 680.543 L1088.23 680.543 L1087.67 680.543 L1087.12 680.543 L1086.56 680.543 L1086 680.543 L1085.44 680.543 L1084.88 680.543 L1084.32 680.543 L1083.76 680.543 L1083.2 680.543 L1082.64 680.543 L1082.08 680.543 L1081.52 680.543 L1080.96 680.543 L1080.4 680.543 L1079.85 680.543 L1079.29 680.543 L1078.73 680.543 L1078.17 680.543 L1077.61 680.543 L1077.05 680.543 L1076.49 680.543 L1075.93 680.543 L1075.37 680.543 L1074.81 680.543 L1074.25 680.543 L1073.69 680.543 L1073.13 680.543 L1072.57 680.543 L1072.02 680.543 L1071.46 680.543 L1070.9 680.543 L1070.34 680.543 L1069.78 680.543 L1069.22 680.543 L1068.66 680.543 L1068.1 680.543 L1067.54 680.543 L1066.98 680.543 L1066.42 680.543 L1065.86 680.543 L1065.3 680.543 L1064.75 680.543 L1064.19 680.543 L1063.63 680.543 L1063.07 680.543 L1062.51 680.543 L1061.95 680.543 L1061.39 680.543 L1060.83 680.543 L1060.27 680.543 L1059.71 680.543 L1059.15 680.543 L1058.59 680.543 L1058.03 680.543 L1057.48 680.543 L1056.92 680.543 L1056.36 680.543 L1055.8 680.543 L1055.24 680.543 L1054.68 680.543 L1054.12 680.543 L1053.56 680.543 L1053 680.543 L1052.44 680.543 L1051.88 680.543 L1051.32 680.543 L1050.76 680.543 L1050.2 680.543 L1049.65 680.543 L1049.09 680.543 L1048.53 680.543 L1047.97 680.543 L1047.41 680.543 L1046.85 680.543 L1046.29 680.543 L1045.73 680.543 L1045.17 680.543 L1044.61 680.543 L1044.05 680.543 L1043.49 680.543 L1042.93 680.543 L1042.38 680.543 L1041.82 680.543 L1041.26 680.543 L1040.7 680.543 L1040.14 680.543 L1039.58 680.543 L1039.02 680.543 L1038.46 680.543 L1037.9 680.543 L1037.34 680.543 L1036.78 680.543 L1036.22 680.543 L1035.66 680.543 L1035.1 680.543 L1034.55 680.543 L1033.99 680.543 L1033.43 680.543 L1032.87 680.543 L1032.31 680.543 L1031.75 680.543 L1031.19 680.543 L1030.63 680.543 L1030.07 680.543 L1029.51 680.543 L1028.95 680.543 L1028.39 680.543 L1027.83 680.543 L1027.28 680.543 L1026.72 680.543 L1026.16 680.543 L1025.6 680.543 L1025.04 680.543 L1024.48 680.543 L1023.92 680.543 L1023.36 680.543 L1022.8 680.543 L1022.24 680.543 L1021.68 680.543 L1021.12 680.543 L1020.56 680.543 L1020.01 680.543 L1019.45 680.543 L1018.89 680.543 L1018.33 680.543 L1017.77 680.543 L1017.21 680.543 L1016.65 680.543 L1016.09 680.543 L1015.53 680.543 L1014.97 680.543 L1014.41 680.543 L1013.85 680.543 L1013.29 680.543 L1012.73 680.543 L1012.18 680.543 L1011.62 680.543 L1011.06 680.543 L1010.5 680.543 L1009.94 680.543 L1009.38 680.543 L1008.82 680.543 L1008.26 680.543 L1007.7 680.543 L1007.14 680.543 L1006.58 680.543 L1006.02 680.543 L1005.46 680.543 L1004.91 680.543 L1004.35 680.543 L1003.79 680.543 L1003.23 680.543 L1002.67 680.543 L1002.11 680.543 L1001.55 680.543 L1000.99 680.543 L1000.43 680.543 L999.872 680.543 L999.313 680.543 L998.754 680.543 L998.194 680.543 L997.635 680.543 L997.076 680.543 L996.517 680.543 L995.957 680.543 L995.398 680.543 L994.839 680.543 L994.28 680.543 L993.72 680.543 L993.161 680.543 L992.602 680.543 L992.043 680.543 L991.483 680.543 L990.924 680.543 L990.365 680.543 L989.806 680.543 L989.246 680.543 L988.687 680.543 L988.128 680.543 L987.569 680.543 L987.009 680.543 L986.45 680.543 L985.891 680.543 L985.332 680.543 L984.772 680.543 L984.213 680.543 L983.654 680.543 L983.095 680.543 L982.535 680.543 L981.976 680.543 L981.417 680.543 L980.858 680.543 L980.298 680.543 L979.739 680.543 L979.18 680.543 L978.621 680.543 L978.061 680.543 L977.502 680.543 L976.943 680.543 L976.384 680.543 L975.824 680.543 L975.265 680.543 L974.706 680.543 L974.147 680.543 L973.587 680.543 L973.028 680.543 L972.469 680.543 L971.91 680.543 L971.35 680.543 L970.791 680.543 L970.232 680.543 L969.673 680.543 L969.113 680.543 L968.554 680.543 L967.995 680.543 L967.436 680.543 L966.876 680.543 L966.317 680.543 L965.758 680.543 L965.199 680.543 L964.639 680.543 L964.08 680.543 L963.521 680.543 L962.962 680.543 L962.402 680.543 L961.843 680.543 L961.284 680.543 L960.725 680.543 L960.165 680.543 L959.606 680.543 L959.047 680.543 L958.488 680.543 L957.928 680.543 L957.369 680.543 L956.81 680.543 L956.251 680.543 L955.691 680.543 L955.132 680.543 L954.573 680.543 L954.014 680.543 L953.454 680.543 L952.895 680.543 L952.336 680.543 L951.777 680.543 L951.217 680.543 L950.658 680.543 L950.099 680.543 L949.54 680.543 L948.98 680.543 L948.421 680.543 L947.862 680.543 L947.303 680.543 L946.743 680.543 L946.184 680.543 L945.625 680.543 L945.066 680.543 L944.506 680.543 L943.947 680.543 L943.388 680.543 L942.829 680.543 L942.269 680.543 L941.71 680.543 L941.151 680.543 L940.592 680.543 L940.032 680.543 L939.473 680.543 L938.914 680.543 L938.355 680.543 L937.795 680.543 L937.236 680.543 L936.677 680.543 L936.118 680.543 L935.558 680.543 L934.999 680.543 L934.44 680.543 L933.881 680.543 L933.321 680.543 L932.762 680.543 L932.203 680.543 L931.644 680.543 L931.084 680.543 L930.525 680.543 L929.966 680.543 L929.406 680.543 L928.847 680.543 L928.288 680.543 L927.729 680.543 L927.169 680.543 L926.61 680.543 L926.051 680.543 L925.492 680.543 L924.932 680.543 L924.373 680.543 L923.814 680.543 L923.255 680.543 L922.695 680.543 L922.136 680.543 L921.577 680.543 L921.018 680.543 L920.458 680.543 L919.899 680.543 L919.34 680.543 L918.781 680.543 L918.221 680.543 L917.662 680.543 L917.103 680.543 L916.544 680.543 L915.984 680.543 L915.425 680.543 L914.866 680.543 L914.307 680.543 L913.747 680.543 L913.188 680.543 L912.629 680.543 L912.07 680.543 L911.51 680.543 L910.951 680.543 L910.392 680.543 L909.833 680.543 L909.273 680.543 L908.714 680.543 L908.155 680.543 L907.596 680.543 L907.036 680.543 L906.477 680.543 L905.918 680.543 L905.359 680.543 L904.799 680.543 L904.24 680.543 L903.681 680.543 L903.122 680.543 L902.562 680.543 L902.003 680.543 L901.444 680.543 L900.885 680.543 L900.325 680.543 L899.766 680.543 L899.207 680.543 L898.648 680.543 L898.088 680.543 L897.529 680.543 L896.97 680.543 L896.411 680.543 L895.851 680.543 L895.292 680.543 L894.733 680.543 L894.174 680.543 L893.614 680.543 L893.055 680.543 L892.496 680.543 L891.937 680.543 L891.377 680.543 L890.818 680.543 L890.259 680.543 L889.7 680.543 L889.14 680.543 L888.581 680.543 L888.022 680.543 L887.463 680.543 L886.903 680.543 L886.344 680.543 L885.785 680.543 L885.226 680.543 L884.666 680.543 L884.107 680.543 L883.548 680.543 L882.989 680.543 L882.429 680.543 L881.87 680.543 L881.311 680.543 L880.752 680.543 L880.192 680.543 L879.633 680.543 L879.074 680.543 L878.515 680.543 L877.955 680.543 L877.396 680.543 L876.837 680.543 L876.278 680.543 L875.718 680.543 L875.159 680.543 L874.6 680.543 L874.041 680.543 L873.481 680.543 L872.922 680.543 L872.363 680.543 L871.804 680.543 L871.244 680.543 L870.685 680.543 L870.126 680.543 L869.567 680.543 L869.007 680.543 L868.448 680.543 L867.889 680.543 L867.33 680.543 L866.77 680.543 L866.211 680.543 L865.652 680.543 L865.093 680.543 L864.533 680.543 L863.974 680.543 L863.415 680.543 L862.856 680.543 L862.296 680.543 L861.737 680.543 L861.178 680.543 L860.619 680.543 L860.059 680.543 L859.5 680.543 L858.941 680.543 L858.382 680.543 L857.822 680.543 L857.263 680.543 L856.704 680.543 L856.145 680.543 L855.585 680.543 L855.026 680.543 L854.467 680.543 L853.908 680.543 L853.348 680.543 L852.789 680.543 L852.23 680.543 L851.671 680.543 L851.111 680.543 L850.552 680.543 L849.993 680.543 L849.434 680.543 L848.874 680.543 L848.315 680.543 L847.756 680.543 L847.197 680.543 L846.637 680.543 L846.078 680.543 L845.519 680.543 L844.96 680.543 L844.4 680.543 L843.841 680.543 L843.282 680.543 L842.723 680.543 L842.163 680.543 L841.604 680.543 L841.045 680.543 L840.486 680.543 L839.926 680.543 L839.367 680.543 L838.808 680.543 L838.249 680.543 L837.689 680.543 L837.13 680.543 L836.571 680.543 L836.012 680.543 L835.452 680.543 L834.893 680.543 L834.334 680.543 L833.775 680.543 L833.215 680.543 L832.656 680.543 L832.097 680.543 L831.538 680.543 L830.978 680.543 L830.419 680.543 L829.86 680.543 L829.301 680.543 L828.741 680.543 L828.182 680.543 L827.623 680.543 L827.064 680.543 L826.504 680.543 L825.945 680.543 L825.386 680.543 L824.827 680.543 L824.267 680.543 L823.708 680.543 L823.149 680.543 L822.59 680.543 L822.03 680.543 L821.471 680.543 L820.912 680.543 L820.353 680.543 L819.793 680.543 L819.234 680.543 L818.675 680.543 L818.116 680.543 L817.556 680.543 L816.997 680.543 L816.438 680.543 L815.879 680.543 L815.319 680.543 L814.76 680.543 L814.201 680.543 L813.642 680.543 L813.082 680.543 L812.523 680.543 L811.964 680.543 L811.405 680.543 L810.845 680.543 L810.286 680.543 L809.727 680.543 L809.168 680.543 L808.608 680.543 L808.049 680.543 L807.49 680.543 L806.931 680.543 L806.371 680.543 L805.812 680.543 L805.253 680.543 L804.693 680.543 L804.134 680.543 L803.575 680.543 L803.016 680.543 L802.456 680.543 L801.897 680.543 L801.338 680.543 L800.779 680.543 L800.219 680.543 L799.66 680.543 L799.101 680.543 L798.542 680.543 L797.982 680.543 L797.423 680.543 L796.864 680.543 L796.305 680.543 L795.745 680.543 L795.186 680.543 L794.627 680.543 L794.068 680.543 L793.508 680.543 L792.949 680.543 L792.39 680.543 L791.831 680.543 L791.271 680.543 L790.712 680.543 L790.153 680.543 L789.594 680.543 L789.034 680.543 L788.475 680.543 L787.916 680.543 L787.357 680.543 L786.797 680.543 L786.238 680.543 L785.679 680.543 L785.12 680.543 L784.56 680.543 L784.001 680.543 L783.442 680.543 L782.883 680.543 L782.323 680.543 L781.764 680.543 L781.205 680.543 L780.646 680.543 L780.086 680.543 L779.527 680.543 L778.968 680.543 L778.409 680.543 L777.849 680.543 L777.29 680.543 L776.731 680.543 L776.172 680.543 L775.612 680.543 L775.053 680.543 L774.494 680.543 L773.935 680.543 L773.375 680.543 L772.816 680.543 L772.257 680.543 L771.698 680.543 L771.138 680.543 L770.579 680.543 L770.02 680.543 L769.461 680.543 L768.901 680.543 L768.342 680.543 L767.783 680.543 L767.224 680.543 L766.664 680.543 L766.105 680.543 L765.546 680.543 L764.987 680.543 L764.427 680.543 L763.868 680.543 L763.309 680.543 L762.75 680.543 L762.19 680.543 L761.631 680.543 L761.072 680.543 L760.513 680.543 L759.953 680.543 L759.394 680.543 L758.835 680.543 L758.276 680.543 L757.716 680.543 L757.157 680.543 L756.598 680.543 L756.039 680.543 L755.479 680.543 L754.92 680.543 L754.361 680.543 L753.802 680.543 L753.242 680.543 L752.683 680.543 L752.124 680.543 L751.565 680.543 L751.005 680.543 L750.446 680.543 L749.887 680.543 L749.328 680.543 L748.768 680.543 L748.209 680.543 L747.65 680.543 L747.091 680.543 L746.531 680.543 L745.972 680.543 L745.413 680.543 L744.854 680.543 L744.294 680.543 L743.735 680.543 L743.176 680.543 L742.617 680.543 L742.057 680.543 L741.498 680.543 L740.939 680.543 L740.38 680.543 L739.82 680.543 L739.261 680.543 L738.702 680.543 L738.143 680.543 L737.583 680.543 L737.024 680.543 L736.465 680.543 L735.906 680.543 L735.346 680.543 L734.787 680.543 L734.228 680.543 L733.669 680.543 L733.109 680.543 L732.55 680.543 L731.991 680.543 L731.432 680.543 L730.872 680.543 L730.313 680.543 L729.754 680.543 L729.195 680.543 L728.635 680.543 L728.076 680.543 L727.517 680.543 L726.958 680.543 L726.398 680.543 L725.839 680.543 L725.28 680.543 L724.721 680.543 L724.161 680.543 L723.602 680.543 L723.043 680.543 L722.484 680.543 L721.924 680.543 L721.365 680.543 L720.806 680.543 L720.247 680.543  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.517 720.806,685.517 721.365,685.517 721.924,685.517 722.484,685.517 723.043,685.517 723.602,685.517 724.161,685.517 724.721,685.517 725.28,685.517 725.839,685.517 726.398,685.517 726.958,685.517 727.517,685.517 728.076,685.517 728.635,685.517 729.195,685.517 729.754,685.517 730.313,685.517 730.872,685.517 731.432,685.517 731.991,685.517 732.55,685.517 733.109,685.517 733.669,685.517 734.228,685.517 734.787,685.517 735.346,685.517 735.906,685.517 736.465,685.517 737.024,685.517 737.583,685.517 738.143,685.517 738.702,685.517 739.261,685.517 739.82,685.517 740.38,685.517 740.939,685.517 741.498,685.517 742.057,685.517 742.617,685.517 743.176,685.517 743.735,685.517 744.294,685.517 744.854,685.517 745.413,685.517 745.972,685.517 746.531,685.517 747.091,685.517 747.65,685.517 748.209,685.517 748.768,685.517 749.328,685.517 749.887,685.517 750.446,685.517 751.005,685.517 751.565,685.517 752.124,685.517 752.683,685.517 753.242,685.517 753.802,685.517 754.361,685.517 754.92,685.517 755.479,685.517 756.039,685.517 756.598,685.517 757.157,685.517 757.716,685.517 758.276,685.517 758.835,685.517 759.394,685.517 759.953,685.517 760.513,685.517 761.072,685.517 761.631,685.517 762.19,685.517 762.75,685.517 763.309,685.517 763.868,685.517 764.427,685.517 764.987,685.517 765.546,685.517 766.105,685.517 766.664,685.517 767.224,685.517 767.783,685.517 768.342,685.517 768.901,685.517 769.461,685.517 770.02,685.517 770.579,685.517 771.138,685.517 771.698,685.517 772.257,685.517 772.816,685.517 773.375,685.517 773.935,685.517 774.494,685.517 775.053,685.517 775.612,685.517 776.172,685.517 776.731,685.517 777.29,685.517 777.849,685.517 778.409,685.517 778.968,685.517 779.527,685.517 780.086,685.517 780.646,685.517 781.205,685.517 781.764,685.517 782.323,685.517 782.883,685.517 783.442,685.517 784.001,685.517 784.56,685.517 785.12,685.517 785.679,685.517 786.238,685.517 786.797,685.517 787.357,685.517 787.916,685.517 788.475,685.517 789.034,685.517 789.594,685.517 790.153,685.517 790.712,685.517 791.271,685.517 791.831,685.517 792.39,685.517 792.949,685.517 793.508,685.517 794.068,685.517 794.627,685.517 795.186,685.517 795.745,685.517 796.305,685.517 796.864,685.517 797.423,685.517 797.982,685.517 798.542,685.517 799.101,685.517 799.66,685.517 800.219,685.517 800.779,685.517 801.338,685.517 801.897,685.517 802.456,685.517 803.016,685.517 803.575,685.517 804.134,685.517 804.693,685.517 805.253,685.517 805.812,685.517 806.371,685.517 806.931,685.517 807.49,685.517 808.049,685.517 808.608,685.517 809.168,685.517 809.727,685.517 810.286,685.517 810.845,685.517 811.405,685.517 811.964,685.517 812.523,685.517 813.082,685.517 813.642,685.517 814.201,685.517 814.76,685.517 815.319,685.517 815.879,685.517 816.438,685.517 816.997,685.517 817.556,685.517 818.116,685.517 818.675,685.517 819.234,685.517 819.793,685.517 820.353,685.517 820.912,685.517 821.471,685.517 822.03,685.517 822.59,685.517 823.149,685.517 823.708,685.517 824.267,685.517 824.827,685.517 825.386,685.517 825.945,685.517 826.504,685.517 827.064,685.517 827.623,685.517 828.182,685.517 828.741,685.517 829.301,685.517 829.86,685.517 830.419,685.517 830.978,685.517 831.538,685.517 832.097,685.517 832.656,685.517 833.215,685.517 833.775,685.517 834.334,685.517 834.893,685.517 835.452,685.517 836.012,685.517 836.571,685.517 837.13,685.517 837.689,685.517 838.249,685.517 838.808,685.517 839.367,685.517 839.926,685.517 840.486,685.517 841.045,685.517 841.604,685.517 842.163,685.517 842.723,685.517 843.282,685.517 843.841,685.517 844.4,685.517 844.96,685.517 845.519,685.517 846.078,685.517 846.637,685.517 847.197,685.517 847.756,685.517 848.315,685.517 848.874,685.517 849.434,685.517 849.993,685.517 850.552,685.517 851.111,685.517 851.671,685.517 852.23,685.517 852.789,685.517 853.348,685.517 853.908,685.517 854.467,685.517 855.026,685.517 855.585,685.517 856.145,685.517 856.704,685.517 857.263,685.517 857.822,685.517 858.382,685.517 858.941,685.517 859.5,685.517 860.059,685.517 860.619,685.517 861.178,685.517 861.737,685.517 862.296,685.517 862.856,685.517 863.415,685.517 863.974,685.517 864.533,685.517 865.093,685.517 865.652,685.517 866.211,685.517 866.77,685.517 867.33,685.517 867.889,685.517 868.448,685.517 869.007,685.517 869.567,685.517 870.126,685.517 870.685,685.517 871.244,685.517 871.804,685.517 872.363,685.517 872.922,685.517 873.481,685.517 874.041,685.517 874.6,685.517 875.159,685.517 875.718,685.517 876.278,685.517 876.837,685.517 877.396,685.517 877.955,685.517 878.515,685.517 879.074,685.517 879.633,685.517 880.192,685.517 880.752,685.517 881.311,685.517 881.87,685.517 882.429,685.517 882.989,685.517 883.548,685.517 884.107,685.517 884.666,685.517 885.226,685.517 885.785,685.517 886.344,685.517 886.903,685.517 887.463,685.517 888.022,685.517 888.581,685.517 889.14,685.517 889.7,685.517 890.259,685.517 890.818,685.517 891.377,685.517 891.937,685.517 892.496,685.517 893.055,685.517 893.614,685.517 894.174,685.517 894.733,685.517 895.292,685.517 895.851,685.517 896.411,685.517 896.97,685.517 897.529,685.517 898.088,685.517 898.648,685.517 899.207,685.517 899.766,685.517 900.325,685.517 900.885,685.517 901.444,685.517 902.003,685.517 902.562,685.517 903.122,685.517 903.681,685.517 904.24,685.517 904.799,685.517 905.359,685.517 905.918,685.517 906.477,685.517 907.036,685.517 907.596,685.517 908.155,685.517 908.714,685.517 909.273,685.517 909.833,685.517 910.392,685.517 910.951,685.517 911.51,685.517 912.07,685.517 912.629,685.517 913.188,685.517 913.747,685.517 914.307,685.517 914.866,685.517 915.425,685.517 915.984,685.517 916.544,685.517 917.103,685.517 917.662,685.517 918.221,685.517 918.781,685.517 919.34,685.517 919.899,685.517 920.458,685.517 921.018,685.517 921.577,685.517 922.136,685.517 922.695,685.517 923.255,685.517 923.814,685.517 924.373,685.517 924.932,685.517 925.492,685.517 926.051,685.517 926.61,685.517 927.169,685.517 927.729,685.517 928.288,685.517 928.847,685.517 929.406,685.517 929.966,685.517 930.525,685.517 931.084,685.517 931.644,685.517 932.203,685.517 932.762,685.517 933.321,685.517 933.881,685.517 934.44,685.517 934.999,685.517 935.558,685.517 936.118,685.517 936.677,685.517 937.236,685.517 937.795,685.517 938.355,685.517 938.914,685.517 939.473,685.517 940.032,685.517 940.592,685.517 941.151,685.517 941.71,685.517 942.269,685.517 942.829,685.517 943.388,685.517 943.947,685.517 944.506,685.517 945.066,685.517 945.625,685.517 946.184,685.517 946.743,685.517 947.303,685.517 947.862,685.517 948.421,685.517 948.98,685.517 949.54,685.517 950.099,685.517 950.658,685.517 951.217,685.517 951.777,685.517 952.336,685.517 952.895,685.517 953.454,685.517 954.014,685.517 954.573,685.517 955.132,685.517 955.691,685.517 956.251,685.517 956.81,685.517 957.369,685.517 957.928,685.517 958.488,685.517 959.047,685.517 959.606,685.517 960.165,685.517 960.725,685.517 961.284,685.517 961.843,685.517 962.402,685.517 962.962,685.517 963.521,685.517 964.08,685.517 964.639,685.517 965.199,685.517 965.758,685.517 966.317,685.517 966.876,685.517 967.436,685.517 967.995,685.517 968.554,685.517 969.113,685.517 969.673,685.517 970.232,685.517 970.791,685.517 971.35,685.517 971.91,685.517 972.469,685.517 973.028,685.517 973.587,685.517 974.147,685.517 974.706,685.517 975.265,685.517 975.824,685.517 976.384,685.517 976.943,685.517 977.502,685.517 978.061,685.517 978.621,685.517 979.18,685.517 979.739,685.517 980.298,685.517 980.858,685.517 981.417,685.517 981.976,685.517 982.535,685.517 983.095,685.517 983.654,685.517 984.213,685.517 984.772,685.517 985.332,685.517 985.891,685.517 986.45,685.517 987.009,685.517 987.569,685.517 988.128,685.517 988.687,685.517 989.246,685.517 989.806,685.517 990.365,685.517 990.924,685.517 991.483,685.517 992.043,685.517 992.602,685.517 993.161,685.517 993.72,685.517 994.28,685.517 994.839,685.517 995.398,685.517 995.957,685.517 996.517,685.517 997.076,685.517 997.635,685.517 998.194,685.517 998.754,685.517 999.313,685.517 999.872,685.517 1000.43,685.517 1000.99,685.517 1001.55,685.517 1002.11,685.517 1002.67,685.517 1003.23,685.517 1003.79,685.517 1004.35,685.517 1004.91,685.517 1005.46,685.517 1006.02,685.517 1006.58,685.517 1007.14,685.517 1007.7,685.517 1008.26,685.517 1008.82,685.517 1009.38,685.517 1009.94,685.517 1010.5,685.517 1011.06,685.517 1011.62,685.517 1012.18,685.517 1012.73,685.517 1013.29,685.517 1013.85,685.517 1014.41,685.517 1014.97,685.517 1015.53,685.517 1016.09,685.517 1016.65,685.517 1017.21,685.517 1017.77,685.517 1018.33,685.517 1018.89,685.517 1019.45,685.517 1020.01,685.517 1020.56,685.517 1021.12,685.517 1021.68,685.517 1022.24,685.517 1022.8,685.517 1023.36,685.517 1023.92,685.517 1024.48,685.517 1025.04,685.517 1025.6,685.517 1026.16,685.517 1026.72,685.517 1027.28,685.517 1027.83,685.517 1028.39,685.517 1028.95,685.517 1029.51,685.517 1030.07,685.517 1030.63,685.517 1031.19,685.517 1031.75,685.517 1032.31,685.517 1032.87,685.517 1033.43,685.517 1033.99,685.517 1034.55,685.517 1035.1,685.517 1035.66,685.517 1036.22,685.517 1036.78,685.517 1037.34,685.517 1037.9,685.517 1038.46,685.517 1039.02,685.517 1039.58,685.517 1040.14,685.517 1040.7,685.517 1041.26,685.517 1041.82,685.517 1042.38,685.517 1042.93,685.517 1043.49,685.517 1044.05,685.517 1044.61,685.517 1045.17,685.517 1045.73,685.517 1046.29,685.517 1046.85,685.517 1047.41,685.517 1047.97,685.517 1048.53,685.517 1049.09,685.517 1049.65,685.517 1050.2,685.517 1050.76,685.517 1051.32,685.517 1051.88,685.517 1052.44,685.517 1053,685.517 1053.56,685.517 1054.12,685.517 1054.68,685.517 1055.24,685.517 1055.8,685.517 1056.36,685.517 1056.92,685.517 1057.48,685.517 1058.03,685.517 1058.59,685.517 1059.15,685.517 1059.71,685.517 1060.27,685.517 1060.83,685.517 1061.39,685.517 1061.95,685.517 1062.51,685.517 1063.07,685.517 1063.63,685.517 1064.19,685.517 1064.75,685.517 1065.3,685.517 1065.86,685.517 1066.42,685.517 1066.98,685.517 1067.54,685.517 1068.1,685.517 1068.66,685.517 1069.22,685.517 1069.78,685.517 1070.34,685.517 1070.9,685.517 1071.46,685.517 1072.02,685.517 1072.57,685.517 1073.13,685.517 1073.69,685.517 1074.25,685.517 1074.81,685.517 1075.37,685.517 1075.93,685.517 1076.49,685.517 1077.05,685.517 1077.61,685.517 1078.17,685.517 1078.73,685.517 1079.29,685.517 1079.85,685.517 1080.4,685.517 1080.96,685.517 1081.52,685.517 1082.08,685.517 1082.64,685.517 1083.2,685.517 1083.76,685.517 1084.32,685.517 1084.88,685.517 1085.44,685.517 1086,685.517 1086.56,685.517 1087.12,685.517 1087.67,685.517 1088.23,685.517 1088.79,685.517 1089.35,685.517 1089.91,685.517 1090.47,685.517 1091.03,685.517 1091.59,685.517 1092.15,685.517 1092.71,685.517 1093.27,685.517 1093.83,685.517 1094.39,685.517 1094.94,685.517 1095.5,685.517 1096.06,685.517 1096.62,685.517 1097.18,685.517 1097.74,685.517 1098.3,685.517 1098.86,685.517 1099.42,685.517 1099.98,685.517 1100.54,685.517 1101.1,685.517 1101.66,685.517 1102.22,685.517 1102.77,685.517 1103.33,685.517 1103.89,685.517 1104.45,685.517 1105.01,685.517 1105.57,685.517 1106.13,685.517 1106.69,685.517 1107.25,685.517 1107.81,685.517 1108.37,685.517 1108.93,685.517 1109.49,685.517 1110.04,685.517 1110.6,685.517 1111.16,685.517 1111.72,685.517 1112.28,685.517 1112.84,685.517 1113.4,685.517 1113.96,685.517 1114.52,685.517 1115.08,685.517 1115.64,685.517 1116.2,685.517 1116.76,685.517 1117.31,685.517 1117.87,685.517 1118.43,685.517 1118.99,685.517 1119.55,685.517 1120.11,685.517 1120.67,685.517 1121.23,685.517 1121.79,685.517 1122.35,685.517 1122.91,685.517 1123.47,685.517 1124.03,685.517 1124.59,685.517 1125.14,685.517 1125.7,685.517 1126.26,685.517 1126.82,685.517 1127.38,685.517 1127.94,685.517 1128.5,685.517 1129.06,685.517 1129.62,685.517 1130.18,685.517 1130.74,685.517 1131.3,685.517 1131.86,685.517 1132.41,685.517 1132.97,685.517 1133.53,685.517 1134.09,685.517 1134.65,685.517 1135.21,685.517 1135.77,685.517 1136.33,685.517 1136.89,685.517 1137.45,685.517 1138.01,685.517 1138.57,685.517 1139.13,685.517 1139.68,685.517 1140.24,685.517 1140.8,685.517 1141.36,685.517 1141.92,685.517 1142.48,685.517 1143.04,685.517 1143.6,685.517 1144.16,685.517 1144.72,685.517 1145.28,685.517 1145.84,685.517 1146.4,685.517 1146.96,685.517 1147.51,685.517 1148.07,685.517 1148.63,685.517 1149.19,685.517 1149.75,685.517 1150.31,685.517 1150.87,685.517 1151.43,685.517 1151.99,685.517 1152.55,685.517 1153.11,685.517 1153.67,685.517 1154.23,685.517 1154.78,685.517 1155.34,685.517 1155.9,685.517 1156.46,685.517 1157.02,685.517 1157.58,685.517 1158.14,685.517 1158.7,685.517 1159.26,685.517 1159.82,685.517 1160.38,685.517 1160.94,685.517 1161.5,685.517 1162.05,685.517 1162.61,685.517 1163.17,685.517 1163.73,685.517 1164.29,685.517 1164.85,685.517 1165.41,685.517 1165.97,685.517 1166.53,685.517 1167.09,685.517 1167.65,685.517 1168.21,685.517 1168.77,685.517 1169.33,685.517 1169.88,685.517 1170.44,685.517 1171,685.517 1171.56,685.517 1172.12,685.517 1172.68,685.517 1173.24,685.517 1173.8,685.517 1174.36,685.517 1174.92,685.517 1175.48,685.517 1176.04,685.517 1176.6,685.517 1177.15,685.517 1177.71,685.517 1178.27,685.517 1178.83,685.517 1179.39,685.517 1179.95,685.517 1180.51,685.517 1181.07,685.517 1181.63,685.517 1182.19,685.517 1182.75,685.517 1183.31,685.517 1183.87,685.517 1184.43,685.517 1184.98,685.517 1185.54,685.517 1186.1,685.517 1186.66,685.517 1187.22,685.517 1187.78,685.517 1188.34,685.517 1188.9,685.517 1189.46,685.517 1190.02,685.517 1190.58,685.517 1191.14,685.517 1191.7,685.517 1192.25,685.517 1192.81,685.517 1193.37,685.517 1193.93,685.517 1194.49,685.517 1195.05,685.517 1195.61,685.517 1196.17,685.517 1196.73,685.517 1197.29,685.517 1197.85,685.517 1198.41,685.517 1198.97,685.517 1199.52,685.517 1200.08,685.517 1200.64,685.517 1201.2,685.517 1201.76,685.517 1202.32,685.517 1202.88,685.517 1203.44,685.517 1204,685.517 1204.56,685.517 1205.12,685.517 1205.68,685.517 1206.24,685.517 1206.8,685.517 1207.35,685.517 1207.91,685.517 1208.47,685.517 1209.03,685.517 1209.59,685.517 1210.15,685.517 1210.71,685.517 1211.27,685.517 1211.83,685.517 1212.39,685.517 1212.95,685.517 1213.51,685.517 1214.07,685.517 1214.62,685.517 1215.18,685.517 1215.74,685.517 1216.3,685.517 1216.86,685.517 1217.42,685.517 1217.98,685.517 1218.54,685.517 1219.1,685.517 1219.66,685.517 1220.22,685.517 1220.78,685.517 1221.34,685.517 1221.89,685.517 1222.45,685.517 1223.01,685.517 1223.57,685.517 1224.13,685.517 1224.69,685.517 1225.25,685.517 1225.81,685.517 1226.37,685.517 1226.93,685.517 1227.49,685.517 1228.05,685.517 1228.61,685.517 1229.17,685.517 1229.72,685.517 1230.28,685.517 1230.84,685.517 1231.4,685.517 1231.96,685.517 1232.52,685.517 1233.08,685.517 1233.64,685.517 1234.2,685.517 1234.76,685.517 1235.32,685.517 1235.88,685.517 1236.44,685.517 1236.99,685.517 1237.55,685.517 1238.11,685.517 1238.67,685.517 1239.23,685.517 1239.79,685.517 1240.35,685.517 1240.91,685.517 1241.47,685.517 1242.03,685.517 1242.59,685.517 1243.15,685.517 1243.71,685.517 1244.26,685.517 1244.82,685.517 1245.38,685.517 1245.94,685.517 1246.5,685.517 1247.06,685.517 1247.62,685.517 1248.18,685.517 1248.74,685.517 1249.3,685.517 1249.86,685.517 1250.42,685.517 1250.98,685.517 1251.54,685.517 1252.09,685.517 1252.65,685.517 1253.21,685.517 1253.77,685.517 1254.33,685.517 1254.89,685.517 1255.45,685.517 1256.01,685.517 1256.57,685.517 1257.13,685.517 1257.69,685.517 1258.25,685.517 1258.81,685.517 1259.36,685.517 1259.92,685.517 1260.48,685.517 1261.04,685.517 1261.6,685.517 1262.16,685.517 1262.72,685.517 1263.28,685.517 1263.84,685.517 1264.4,685.517 1264.96,685.517 1265.52,685.517 1266.08,685.517 1266.63,685.517 1267.19,685.517 1267.75,685.517 1268.31,685.517 1268.87,685.517 1269.43,685.517 1269.99,685.517 1270.55,685.517 1271.11,685.517 1271.67,685.517 1272.23,685.517 1272.79,685.517 1273.35,685.517 1273.91,685.517 1274.46,685.517 1275.02,685.517 1275.58,685.517 1276.14,685.517 1276.7,685.517 1277.26,685.517 1277.82,685.517 1278.38,685.517 1278.94,685.517 1279.5,685.517 1280.06,685.517 1280.62,685.517 1281.18,685.517 1281.73,685.517 1282.29,685.517 1282.85,685.517 1283.41,685.517 1283.97,685.517 1284.53,685.517 1285.09,685.517 1285.65,685.517 1286.21,685.517 1286.77,685.517 1287.33,685.517 1287.89,685.517 1288.45,685.517 1289,685.517 1289.56,685.517 1290.12,685.517 1290.68,685.517 1291.24,685.517 1291.8,685.517 1292.36,685.517 1292.92,685.517 1293.48,685.517 1294.04,685.517 1294.6,685.517 1295.16,685.517 1295.72,685.517 1296.28,685.517 1296.83,685.517 1297.39,685.517 1297.95,685.517 1298.51,685.517 1299.07,685.517 1299.63,685.517 1300.19,685.517 1300.75,685.517 1301.31,685.517 1301.87,685.517 1302.43,685.517 1302.99,685.517 1303.55,685.517 1304.1,685.517 1304.66,685.517 1305.22,685.517 1305.78,685.517 1306.34,685.517 1306.9,685.517 1307.46,685.517 1308.02,685.517 1308.58,685.517 1309.14,685.517 1309.7,685.517 1310.26,685.517 1310.82,685.517 1311.38,685.517 1311.93,685.517 1312.49,685.517 1313.05,685.517 1313.61,685.517 1314.17,685.517 1314.73,685.517 1315.29,685.517 1315.85,685.517 1316.41,685.517 1316.97,685.517 1317.53,685.517 1318.09,685.517 1318.65,685.517 1319.2,685.517 1319.76,685.517 1320.32,685.517 1320.88,685.517 1321.44,685.517 1322,685.517 1322.56,685.517 1323.12,685.517 1323.68,685.517 1324.24,685.517 1324.8,685.517 1325.36,685.517 1325.92,685.517 1326.47,685.517 1327.03,685.517 1327.59,685.517 1328.15,685.517 1328.71,685.517 1329.27,685.517 1329.83,685.517 1330.39,685.517 1330.95,685.517 1331.51,685.517 1332.07,685.517 1332.63,685.517 1333.19,685.517 1333.75,685.517 1334.3,685.517 1334.86,685.517 1335.42,685.517 1335.98,685.517 1336.54,685.517 1337.1,685.517 1337.66,685.517 1338.22,685.517 1338.78,685.517 1339.34,685.517 1339.9,685.517 1340.46,685.517 1341.02,685.517 1341.57,685.517 1342.13,685.517 1342.69,685.517 1343.25,685.517 1343.81,685.517 1344.37,685.517 1344.93,685.517 1345.49,685.517 1346.05,685.517 1346.61,685.517 1347.17,685.517 1347.73,685.517 1348.29,685.517 1348.84,685.517 1349.4,685.517 1349.96,685.517 1350.52,685.517 1351.08,685.517 1351.64,685.517 1352.2,685.517 1352.76,685.517 1353.32,685.517 1353.88,685.517 1354.44,685.517 1355,685.517 1355.56,685.517 1356.12,685.517 1356.67,685.517 1357.23,685.517 1357.79,685.517 1358.35,685.517 1358.91,685.517 1359.47,685.517 1360.03,685.517 1360.59,685.517 1361.15,685.517 1361.71,685.517 1362.27,685.517 1362.83,685.517 1363.39,685.517 1363.94,685.517 1364.5,685.517 1365.06,685.517 1365.62,685.517 1366.18,685.517 1366.74,685.517 1367.3,685.517 1367.86,685.517 1368.42,685.517 1368.98,685.517 1369.54,685.517 1370.1,685.517 1370.66,685.517 1371.21,685.517 1371.77,685.517 1372.33,685.517 1372.89,685.517 1373.45,685.517 1374.01,685.517 1374.57,685.517 1375.13,685.517 1375.69,685.517 1376.25,685.517 1376.81,685.517 1377.37,685.517 1377.93,685.517 1378.49,685.517 1379.04,685.517 1379.6,685.517 1380.16,685.517 1380.72,685.517 1381.28,685.517 1381.84,685.517 1382.4,685.517 1382.96,685.517 1383.52,685.517 1384.08,685.517 1384.64,685.517 1385.2,685.517 1385.76,685.517 1386.31,685.517 1386.87,685.517 1387.43,685.517 1387.99,685.517 1388.55,685.517 1389.11,685.517 1389.67,685.517 1390.23,685.517 1390.79,685.517 1391.35,685.517 1391.91,685.517 1392.47,685.517 1393.03,685.517 1393.58,685.517 1394.14,685.517 1394.7,685.517 1395.26,685.517 1395.82,685.517 1396.38,685.517 1396.94,685.517 1397.5,685.517 1398.06,685.517 1398.62,685.517 1399.18,685.517 1399.74,685.517 1400.3,685.517 1400.86,685.517 1401.41,685.517 1401.97,685.517 1402.53,685.517 1403.09,685.517 1403.65,685.517 1404.21,685.517 1404.77,685.517 1405.33,685.517 1405.89,685.517 1406.45,685.517 1407.01,685.517 1407.57,685.517 1408.13,685.517 1408.68,685.517 1409.24,685.517 1409.8,685.517 1410.36,685.517 1410.92,685.517 1411.48,685.517 1412.04,685.517 1412.6,685.517 1413.16,685.517 1413.72,685.517 1414.28,685.517 1414.84,685.517 1415.4,685.517 1415.95,685.517 1416.51,685.517 1417.07,685.517 1417.63,685.517 1418.19,685.517 1418.75,685.517 1419.31,685.517 1419.87,685.517 1420.43,685.517 1420.99,685.517 1421.55,685.517 1422.11,685.517 1422.67,685.517 1423.23,685.517 1423.78,685.517 1424.34,685.517 1424.9,685.517 1425.46,685.517 1426.02,685.517 1426.58,685.517 1427.14,685.517 1427.7,685.517 1428.26,685.517 1428.82,685.517 1429.38,685.517 1429.94,685.517 1430.5,685.517 1431.05,685.517 1431.61,685.517 1432.17,685.517 1432.73,685.517 1433.29,685.517 1433.85,685.517 1434.41,685.517 1434.97,685.517 1435.53,685.517 1436.09,685.517 1436.65,685.517 1437.21,685.517 1437.77,685.517 1438.33,685.517 1438.88,685.517 1439.44,685.517 1440,685.517 1440.56,685.517 1441.12,685.517 1441.68,685.517 1442.24,685.517 1442.8,685.517 1443.36,685.517 1443.92,685.517 1444.48,685.517 1445.04,685.517 1445.6,685.517 1446.15,685.517 1446.71,685.517 1447.27,685.517 1447.83,685.517 1448.39,685.517 1448.95,685.517 1449.51,685.517 1450.07,685.517 1450.63,685.517 1451.19,685.517 1451.75,685.517 1452.31,685.517 1452.87,685.517 1453.42,685.517 1453.98,685.517 1454.54,685.517 1455.1,685.517 1455.66,685.517 1456.22,685.517 1456.78,685.517 1457.34,685.517 1457.9,685.517 1458.46,685.517 1459.02,685.517 1459.58,685.517 1460.14,685.517 1460.7,685.517 1461.25,685.517 1461.81,685.517 1462.37,685.517 1462.93,685.517 1463.49,685.517 1464.05,685.517 1464.61,685.517 1465.17,685.517 1465.73,685.517 1466.29,685.517 1466.85,685.517 1467.41,685.517 1467.97,685.517 1468.52,685.517 1469.08,685.517 1469.64,685.517 1470.2,685.517 1470.76,685.517 1471.32,685.517 1471.88,685.517 1472.44,685.517 1473,685.517 1473.56,685.517 1474.12,685.517 1474.68,685.517 1475.24,685.517 1475.79,685.517 1476.35,685.517 1476.91,685.517 1477.47,685.517 1478.03,685.517 1478.59,685.517 1479.15,685.517 1479.71,685.517 1480.27,685.517 1480.83,685.517 1481.39,685.517 1481.95,685.517 1482.51,685.517 1483.07,685.517 1483.62,685.517 1484.18,685.517 1484.74,685.517 1485.3,685.517 1485.86,685.517 1486.42,685.517 1486.98,685.517 1487.54,685.517 1488.1,685.517 1488.66,685.517 1489.22,685.517 1489.78,685.517 1490.34,685.517 1490.89,685.517 1491.45,685.517 1492.01,685.517 1492.57,685.517 1493.13,685.517 1493.69,685.517 1494.25,685.517 1494.81,685.517 1495.37,685.517 1495.93,685.517 1496.49,685.517 1497.05,685.517 1497.61,685.517 1498.16,685.517 1498.72,685.517 1499.28,685.517 1499.84,685.517 1500.4,685.517 1500.96,685.517 1501.52,685.517 1502.08,685.517 1502.64,685.517 1503.2,685.517 1503.76,685.517 1504.32,685.517 1504.88,685.517 1505.44,685.517 1505.99,685.517 1506.55,685.517 1507.11,685.517 1507.67,685.517 1508.23,685.517 1508.79,685.517 1509.35,685.517 1509.91,685.517 1510.47,685.517 1511.03,685.517 1511.59,685.517 1512.15,685.517 1512.71,685.517 1513.26,685.517 1513.82,685.517 1514.38,685.517 1514.94,685.517 1515.5,685.517 1516.06,685.517 1516.62,685.517 1517.18,685.517 1517.74,685.517 1518.3,685.517 1518.86,685.517 1519.42,685.517 1519.98,685.517 1520.53,685.517 1521.09,685.517 1521.65,685.517 1522.21,685.517 1522.77,685.517 1523.33,685.517 1523.89,685.517 1524.45,685.517 1525.01,685.517 1525.57,685.517 1526.13,685.517 1526.69,685.517 1527.25,685.517 1527.81,685.517 1528.36,685.517 1528.92,685.517 1529.48,685.517 1530.04,685.517 1530.6,685.517 1531.16,685.517 1531.72,685.517 1532.28,685.517 1532.84,685.517 1533.4,685.517 1533.96,685.517 1534.52,685.517 1535.08,685.517 1535.63,685.517 1536.19,685.517 1536.75,685.517 1537.31,685.517 1537.87,685.517 1538.43,685.517 1538.99,685.517 1539.55,685.517 1540.11,685.517 1540.67,685.517 1541.23,685.517 1541.79,685.517 1542.35,685.517 1542.9,685.517 1543.46,685.517 1544.02,685.517 1544.58,685.517 1545.14,685.517 1545.7,685.517 1546.26,685.517 1546.82,685.517 1547.38,685.517 1547.94,685.517 1548.5,685.517 1549.06,685.517 1549.62,685.517 1550.18,685.517 1550.73,685.517 1551.29,685.517 1551.85,685.517 1552.41,685.517 1552.97,685.517 1553.53,685.517 1554.09,685.517 1554.65,685.517 1555.21,685.517 1555.77,685.517 1556.33,685.517 1556.89,685.517 1557.45,685.517 1558,685.517 1558.56,685.517 1559.12,685.517 1559.68,685.517 1560.24,685.517 1560.8,685.517 1561.36,685.517 1561.92,685.517 1562.48,685.517 1563.04,685.517 1563.6,685.517 1564.16,685.517 1564.72,685.517 1565.28,685.517 1565.83,685.517 1566.39,685.517 1566.95,685.517 1567.51,685.517 1568.07,685.517 1568.63,685.517 1569.19,685.517 1569.75,685.517 1570.31,685.517 1570.87,685.517 1571.43,685.517 1571.99,685.517 1572.55,685.517 1573.1,685.517 1573.66,685.517 1574.22,685.517 1574.78,685.517 1575.34,685.517 1575.9,685.517 1576.46,685.517 1577.02,685.517 1577.58,685.517 1578.14,685.517 1578.7,685.517 1579.26,685.517 1579.82,685.517 1580.37,685.517 1580.93,685.517 1581.49,685.517 1582.05,685.517 1582.61,685.517 1583.17,685.517 1583.73,685.517 1584.29,685.517 1584.85,685.517 1585.41,685.517 1585.97,685.517 1586.53,685.517 1587.09,685.517 1587.65,685.517 1588.2,685.517 1588.76,685.517 1589.32,685.517 1589.88,685.517 1590.44,685.517 1591,685.517 1591.56,685.517 1592.12,685.517 1592.68,685.517 1593.24,685.517 1593.8,685.517 1594.36,685.517 1594.92,685.517 1595.47,685.517 1596.03,685.517 1596.59,685.517 1597.15,685.517 1597.71,685.517 1598.27,685.517 1598.83,685.517 1599.39,685.517 1599.95,685.517 1600.51,685.517 1601.07,685.517 1601.63,685.517 1602.19,685.517 1602.74,685.517 1603.3,685.517 1603.86,685.517 1604.42,685.517 1604.98,685.517 1605.54,685.517 1606.1,685.517 1606.66,685.517 1607.22,685.517 1607.78,685.517 1608.34,685.517 1608.9,685.517 1609.46,685.517 1610.02,685.517 1610.57,685.517 1611.13,685.517 1611.69,685.517 1612.25,685.517 1612.81,685.517 1613.37,685.517 1613.93,685.517 1614.49,685.517 1615.05,685.517 1615.61,685.517 1616.17,685.517 1616.73,685.517 1617.29,685.517 1617.84,685.517 1618.4,685.517 1618.96,685.517 1619.52,685.517 1620.08,685.517 1620.64,685.517 1621.2,685.517 1621.76,685.517 1622.32,685.517 1622.88,685.517 1623.44,685.517 1624,685.517 1624.56,685.517 1625.11,685.517 1625.67,685.517 1626.23,685.517 1626.79,685.517 1627.35,685.517 1627.91,685.517 1628.47,685.517 1629.03,685.517 1629.59,685.517 1630.15,685.517 1630.71,685.517 1631.27,685.517 1631.83,685.517 1632.39,685.517 1632.94,685.517 1633.5,685.517 1634.06,685.517 1634.62,685.517 1635.18,685.517 1635.74,685.517 1636.3,685.517 1636.86,685.517 1637.42,685.517 1637.98,685.517 1638.54,685.517 1639.1,685.517 1639.66,685.517 1640.21,685.517 1640.77,685.517 1641.33,685.517 1641.89,685.517 1642.45,685.517 1643.01,685.517 1643.57,685.517 1644.13,685.517 1644.69,685.517 1645.25,685.517 1645.81,685.517 1646.37,685.517 1646.93,685.517 1647.48,685.517 1648.04,685.517 1648.6,685.517 1649.16,685.517 1649.72,685.517 1650.28,685.517 1650.84,685.517 1651.4,685.517 1651.96,685.517 1652.52,685.517 1653.08,685.517 1653.64,685.517 1654.2,685.517 1654.76,685.517 1655.31,685.517 1655.87,685.517 1656.43,685.517 1656.99,685.517 1657.55,685.517 1658.11,685.517 1658.67,685.517 1659.23,685.517 1659.79,685.517 1660.35,685.517 1660.91,685.517 1661.47,685.517 1662.03,685.517 1662.58,685.517 1663.14,685.517 1663.7,685.517 1664.26,685.517 1664.82,685.517 1665.38,685.517 1665.94,685.517 1666.5,685.517 1667.06,685.517 1667.62,685.517 1668.18,685.517 1668.74,685.517 1669.3,685.517 1669.85,685.517 1670.41,685.517 1670.97,685.517 1671.53,685.517 1672.09,685.517 1672.65,685.517 1673.21,685.517 1673.77,685.517 1674.33,685.517 1674.89,685.517 1675.45,685.517 1676.01,685.517 1676.57,685.517 1677.13,685.517 1677.68,685.517 1678.24,685.517 1678.8,685.517 1679.36,685.517 1679.92,685.517 1680.48,685.517 1681.04,685.517 1681.6,685.517 1682.16,685.517 1682.72,685.517 1683.28,685.517 1683.84,685.517 1684.4,685.517 1684.95,685.517 1685.51,685.517 1686.07,685.517 1686.63,685.517 1687.19,685.517 1687.75,685.517 1688.31,685.517 1688.87,685.517 1689.43,685.517 1689.99,685.517 1690.55,685.517 1691.11,685.517 1691.67,685.517 1692.23,685.517 1692.78,685.517 1693.34,685.517 1693.9,685.517 1694.46,685.517 1695.02,685.517 1695.58,685.517 1696.14,685.517 1696.7,685.517 1697.26,685.517 1697.82,685.517 1698.38,685.517 1698.94,685.517 1699.5,685.517 1700.05,685.517 1700.61,685.517 1701.17,685.517 1701.73,685.517 1702.29,685.517 1702.85,685.517 1703.41,685.517 1703.97,685.517 1704.53,685.517 1705.09,685.517 1705.65,685.517 1706.21,685.517 1706.77,685.517 1707.32,685.517 1707.88,685.517 1708.44,685.517 1709,685.517 1709.56,685.517 1710.12,685.517 1710.68,685.517 1711.24,685.517 1711.8,685.517 1712.36,685.517 1712.92,685.517 1713.48,685.517 1714.04,685.517 1714.6,685.517 1715.15,685.517 1715.71,685.517 1716.27,685.517 1716.83,685.517 1717.39,685.517 1717.95,685.517 1718.51,685.517 1719.07,685.517 1719.63,685.517 1720.19,685.517 1720.75,685.517 1721.31,685.517 1721.87,685.517 1722.42,685.517 1722.98,685.517 1723.54,685.517 1724.1,685.517 1724.66,685.517 1725.22,685.517 1725.78,685.517 1726.34,685.517 1726.9,685.517 1727.46,685.517 1728.02,685.517 1728.58,685.517 1729.14,685.517 1729.69,685.517 1730.25,685.517 1730.81,685.517 1731.37,685.517 1731.93,685.517 1732.49,685.517 1733.05,685.517 1733.61,685.517 1734.17,685.517 1734.73,685.517 1735.29,685.517 1735.85,685.517 1736.41,685.517 1736.97,685.517 1737.52,685.517 1738.08,685.517 1738.64,685.517 1739.2,685.517 1739.76,685.517 1740.32,685.517 1740.88,685.517 1741.44,685.517 1742,685.517 1742.56,685.517 1743.12,685.517 1743.68,685.517 1744.24,685.517 1744.79,685.517 1745.35,685.517 1745.91,685.517 1746.47,685.517 1747.03,685.517 1747.59,685.517 1748.15,685.517 1748.71,685.517 1749.27,685.517 1749.83,685.517 1750.39,685.517 1750.95,685.517 1751.51,685.517 1752.06,685.517 1752.62,685.517 1753.18,685.517 1753.74,685.517 1754.3,685.517 1754.86,685.517 1755.42,685.517 1755.98,685.517 1756.54,685.517 1757.1,685.517 1757.66,685.517 1758.22,685.517 1758.78,685.517 1759.34,685.517 1759.89,685.517 1760.45,685.517 1761.01,685.517 1761.57,685.517 1762.13,685.517 1762.69,685.517 1763.25,685.517 1763.81,685.517 1764.37,685.517 1764.93,685.517 1765.49,685.517 1766.05,685.517 1766.61,685.517 1767.16,685.517 1767.72,685.517 1768.28,685.517 1768.84,685.517 1769.4,685.517 1769.96,685.517 1770.52,685.517 1771.08,685.517 1771.64,685.517 1772.2,685.517 1772.76,685.517 1773.32,685.517 1773.88,685.517 1774.43,685.517 1774.99,685.517 1775.55,685.517 1776.11,685.517 1776.67,685.517 1777.23,685.517 1777.79,685.517 1778.35,685.517 1778.91,685.517 1779.47,685.517 1780.03,685.517 1780.59,685.517 1781.15,685.517 1781.71,685.517 1782.26,685.517 1782.82,685.517 1783.38,685.517 1783.94,685.517 1784.5,685.517 1785.06,685.517 1785.62,685.517 1786.18,685.517 1786.74,685.517 1787.3,685.517 1787.86,685.517 1788.42,685.517 1788.98,685.517 1789.53,685.517 1790.09,685.517 1790.65,685.517 1791.21,685.517 1791.77,685.517 1792.33,685.517 1792.89,685.517 1793.45,685.517 1794.01,685.517 1794.57,685.517 1795.13,685.517 1795.69,685.517 1796.25,685.517 1796.8,685.517 1797.36,685.517 1797.92,685.517 1798.48,685.517 1799.04,685.517 1799.6,685.517 1800.16,685.517 1800.72,685.517 1801.28,685.517 1801.84,685.517 1802.4,685.517 1802.96,685.517 1803.52,685.517 1804.08,685.517 1804.63,685.517 1805.19,685.517 1805.75,685.517 1806.31,685.517 1806.87,685.517 1807.43,685.517 1807.99,685.517 1808.55,685.517 1809.11,685.517 1809.67,685.517 1810.23,685.517 1810.79,685.517 1811.35,685.517 1811.9,685.517 1812.46,685.517 1813.02,685.517 1813.58,685.517 1814.14,685.517 1814.7,685.517 1815.26,685.517 1815.82,685.517 1816.38,685.517 1816.94,685.517 1817.5,685.517 1818.06,685.517 1818.62,685.517 1819.18,685.517 1819.73,685.517 1820.29,685.517 1820.85,685.517 1821.41,685.517 1821.97,685.517 1822.53,685.517 1823.09,685.517 1823.65,685.517 1824.21,685.517 1824.77,685.517 1825.33,685.517 1825.89,685.517 1826.45,685.517 1827,685.517 1827.56,685.517 1828.12,685.517 1828.68,685.517 1829.24,685.517 1829.8,685.517 1830.36,685.517 1830.92,685.517 1831.48,685.517 1832.04,685.517 1832.6,685.517 1833.16,685.517 1833.72,685.517 1834.27,685.517 1834.83,685.517 1835.39,685.517 1835.95,685.517 1836.51,685.517 1837.07,685.517 1837.63,685.517 1838.19,685.517 \"/>\n<path clip-path=\"url(#clip113)\" d=\"M720.247 684.947 L720.806 684.947 L721.365 684.947 L721.924 684.947 L722.484 684.947 L723.043 684.947 L723.602 684.947 L724.161 684.947 L724.721 684.947 L725.28 684.947 L725.839 684.947 L726.398 684.947 L726.958 684.947 L727.517 684.947 L728.076 684.947 L728.635 684.947 L729.195 684.947 L729.754 684.947 L730.313 684.947 L730.872 684.947 L731.432 684.947 L731.991 684.947 L732.55 684.947 L733.109 684.947 L733.669 684.947 L734.228 684.947 L734.787 684.947 L735.346 684.947 L735.906 684.947 L736.465 684.947 L737.024 684.947 L737.583 684.947 L738.143 684.947 L738.702 684.947 L739.261 684.947 L739.82 684.947 L740.38 684.947 L740.939 684.947 L741.498 684.947 L742.057 684.947 L742.617 684.947 L743.176 684.947 L743.735 684.947 L744.294 684.947 L744.854 684.947 L745.413 684.947 L745.972 684.947 L746.531 684.947 L747.091 684.947 L747.65 684.947 L748.209 684.947 L748.768 684.947 L749.328 684.947 L749.887 684.947 L750.446 684.947 L751.005 684.947 L751.565 684.947 L752.124 684.947 L752.683 684.947 L753.242 684.947 L753.802 684.947 L754.361 684.947 L754.92 684.947 L755.479 684.947 L756.039 684.947 L756.598 684.947 L757.157 684.947 L757.716 684.947 L758.276 684.947 L758.835 684.947 L759.394 684.947 L759.953 684.947 L760.513 684.947 L761.072 684.947 L761.631 684.947 L762.19 684.947 L762.75 684.947 L763.309 684.947 L763.868 684.947 L764.427 684.947 L764.987 684.947 L765.546 684.947 L766.105 684.947 L766.664 684.947 L767.224 684.947 L767.783 684.947 L768.342 684.947 L768.901 684.947 L769.461 684.947 L770.02 684.947 L770.579 684.947 L771.138 684.947 L771.698 684.947 L772.257 684.947 L772.816 684.947 L773.375 684.947 L773.935 684.947 L774.494 684.947 L775.053 684.947 L775.612 684.947 L776.172 684.947 L776.731 684.947 L777.29 684.947 L777.849 684.947 L778.409 684.947 L778.968 684.947 L779.527 684.947 L780.086 684.947 L780.646 684.947 L781.205 684.947 L781.764 684.947 L782.323 684.947 L782.883 684.947 L783.442 684.947 L784.001 684.947 L784.56 684.947 L785.12 684.947 L785.679 684.947 L786.238 684.947 L786.797 684.947 L787.357 684.947 L787.916 684.947 L788.475 684.947 L789.034 684.947 L789.594 684.947 L790.153 684.947 L790.712 684.947 L791.271 684.947 L791.831 684.947 L792.39 684.947 L792.949 684.947 L793.508 684.947 L794.068 684.947 L794.627 684.947 L795.186 684.947 L795.745 684.947 L796.305 684.947 L796.864 684.947 L797.423 684.947 L797.982 684.947 L798.542 684.947 L799.101 684.947 L799.66 684.947 L800.219 684.947 L800.779 684.947 L801.338 684.947 L801.897 684.947 L802.456 684.947 L803.016 684.947 L803.575 684.947 L804.134 684.947 L804.693 684.947 L805.253 684.947 L805.812 684.947 L806.371 684.947 L806.931 684.947 L807.49 684.947 L808.049 684.947 L808.608 684.947 L809.168 684.947 L809.727 684.947 L810.286 684.947 L810.845 684.947 L811.405 684.947 L811.964 684.947 L812.523 684.947 L813.082 684.947 L813.642 684.947 L814.201 684.947 L814.76 684.947 L815.319 684.947 L815.879 684.947 L816.438 684.947 L816.997 684.947 L817.556 684.947 L818.116 684.947 L818.675 684.947 L819.234 684.947 L819.793 684.947 L820.353 684.947 L820.912 684.947 L821.471 684.947 L822.03 684.947 L822.59 684.947 L823.149 684.947 L823.708 684.947 L824.267 684.947 L824.827 684.947 L825.386 684.947 L825.945 684.947 L826.504 684.947 L827.064 684.947 L827.623 684.947 L828.182 684.947 L828.741 684.947 L829.301 684.947 L829.86 684.947 L830.419 684.947 L830.978 684.947 L831.538 684.947 L832.097 684.947 L832.656 684.947 L833.215 684.947 L833.775 684.947 L834.334 684.947 L834.893 684.947 L835.452 684.947 L836.012 684.947 L836.571 684.947 L837.13 684.947 L837.689 684.947 L838.249 684.947 L838.808 684.947 L839.367 684.947 L839.926 684.947 L840.486 684.947 L841.045 684.947 L841.604 684.947 L842.163 684.947 L842.723 684.947 L843.282 684.947 L843.841 684.947 L844.4 684.947 L844.96 684.947 L845.519 684.947 L846.078 684.947 L846.637 684.947 L847.197 684.947 L847.756 684.947 L848.315 684.947 L848.874 684.947 L849.434 684.947 L849.993 684.947 L850.552 684.947 L851.111 684.947 L851.671 684.947 L852.23 684.947 L852.789 684.947 L853.348 684.947 L853.908 684.947 L854.467 684.947 L855.026 684.947 L855.585 684.947 L856.145 684.947 L856.704 684.947 L857.263 684.947 L857.822 684.947 L858.382 684.947 L858.941 684.947 L859.5 684.947 L860.059 684.947 L860.619 684.947 L861.178 684.947 L861.737 684.947 L862.296 684.947 L862.856 684.947 L863.415 684.947 L863.974 684.947 L864.533 684.947 L865.093 684.947 L865.652 684.947 L866.211 684.947 L866.77 684.947 L867.33 684.947 L867.889 684.947 L868.448 684.947 L869.007 684.947 L869.567 684.947 L870.126 684.947 L870.685 684.947 L871.244 684.947 L871.804 684.947 L872.363 684.947 L872.922 684.947 L873.481 684.947 L874.041 684.947 L874.6 684.947 L875.159 684.947 L875.718 684.947 L876.278 684.947 L876.837 684.947 L877.396 684.947 L877.955 684.947 L878.515 684.947 L879.074 684.947 L879.633 684.947 L880.192 684.947 L880.752 684.947 L881.311 684.947 L881.87 684.947 L882.429 684.947 L882.989 684.947 L883.548 684.947 L884.107 684.947 L884.666 684.947 L885.226 684.947 L885.785 684.947 L886.344 684.947 L886.903 684.947 L887.463 684.947 L888.022 684.947 L888.581 684.947 L889.14 684.947 L889.7 684.947 L890.259 684.947 L890.818 684.947 L891.377 684.947 L891.937 684.947 L892.496 684.947 L893.055 684.947 L893.614 684.947 L894.174 684.947 L894.733 684.947 L895.292 684.947 L895.851 684.947 L896.411 684.947 L896.97 684.947 L897.529 684.947 L898.088 684.947 L898.648 684.947 L899.207 684.947 L899.766 684.947 L900.325 684.947 L900.885 684.947 L901.444 684.947 L902.003 684.947 L902.562 684.947 L903.122 684.947 L903.681 684.947 L904.24 684.947 L904.799 684.947 L905.359 684.947 L905.918 684.947 L906.477 684.947 L907.036 684.947 L907.596 684.947 L908.155 684.947 L908.714 684.947 L909.273 684.947 L909.833 684.947 L910.392 684.947 L910.951 684.947 L911.51 684.947 L912.07 684.947 L912.629 684.947 L913.188 684.947 L913.747 684.947 L914.307 684.947 L914.866 684.947 L915.425 684.947 L915.984 684.947 L916.544 684.947 L917.103 684.947 L917.662 684.947 L918.221 684.947 L918.781 684.947 L919.34 684.947 L919.899 684.947 L920.458 684.947 L921.018 684.947 L921.577 684.947 L922.136 684.947 L922.695 684.947 L923.255 684.947 L923.814 684.947 L924.373 684.947 L924.932 684.947 L925.492 684.947 L926.051 684.947 L926.61 684.947 L927.169 684.947 L927.729 684.947 L928.288 684.947 L928.847 684.947 L929.406 684.947 L929.966 684.947 L930.525 684.947 L931.084 684.947 L931.644 684.947 L932.203 684.947 L932.762 684.947 L933.321 684.947 L933.881 684.947 L934.44 684.947 L934.999 684.947 L935.558 684.947 L936.118 684.947 L936.677 684.947 L937.236 684.947 L937.795 684.947 L938.355 684.947 L938.914 684.947 L939.473 684.947 L940.032 684.947 L940.592 684.947 L941.151 684.947 L941.71 684.947 L942.269 684.947 L942.829 684.947 L943.388 684.947 L943.947 684.947 L944.506 684.947 L945.066 684.947 L945.625 684.947 L946.184 684.947 L946.743 684.947 L947.303 684.947 L947.862 684.947 L948.421 684.947 L948.98 684.947 L949.54 684.947 L950.099 684.947 L950.658 684.947 L951.217 684.947 L951.777 684.947 L952.336 684.947 L952.895 684.947 L953.454 684.947 L954.014 684.947 L954.573 684.947 L955.132 684.947 L955.691 684.947 L956.251 684.947 L956.81 684.947 L957.369 684.947 L957.928 684.947 L958.488 684.947 L959.047 684.947 L959.606 684.947 L960.165 684.947 L960.725 684.947 L961.284 684.947 L961.843 684.947 L962.402 684.947 L962.962 684.947 L963.521 684.947 L964.08 684.947 L964.639 684.947 L965.199 684.947 L965.758 684.947 L966.317 684.947 L966.876 684.947 L967.436 684.947 L967.995 684.947 L968.554 684.947 L969.113 684.947 L969.673 684.947 L970.232 684.947 L970.791 684.947 L971.35 684.947 L971.91 684.947 L972.469 684.947 L973.028 684.947 L973.587 684.947 L974.147 684.947 L974.706 684.947 L975.265 684.947 L975.824 684.947 L976.384 684.947 L976.943 684.947 L977.502 684.947 L978.061 684.947 L978.621 684.947 L979.18 684.947 L979.739 684.947 L980.298 684.947 L980.858 684.947 L981.417 684.947 L981.976 684.947 L982.535 684.947 L983.095 684.947 L983.654 684.947 L984.213 684.947 L984.772 684.947 L985.332 684.947 L985.891 684.947 L986.45 684.947 L987.009 684.947 L987.569 684.947 L988.128 684.947 L988.687 684.947 L989.246 684.947 L989.806 684.947 L990.365 684.947 L990.924 684.947 L991.483 684.947 L992.043 684.947 L992.602 684.947 L993.161 684.947 L993.72 684.947 L994.28 684.947 L994.839 684.947 L995.398 684.947 L995.957 684.947 L996.517 684.947 L997.076 684.947 L997.635 684.947 L998.194 684.947 L998.754 684.947 L999.313 684.947 L999.872 684.947 L1000.43 684.947 L1000.99 684.947 L1001.55 684.947 L1002.11 684.947 L1002.67 684.947 L1003.23 684.947 L1003.79 684.947 L1004.35 684.947 L1004.91 684.947 L1005.46 684.947 L1006.02 684.947 L1006.58 684.947 L1007.14 684.947 L1007.7 684.947 L1008.26 684.947 L1008.82 684.947 L1009.38 684.947 L1009.94 684.947 L1010.5 684.947 L1011.06 684.947 L1011.62 684.947 L1012.18 684.947 L1012.73 684.947 L1013.29 684.947 L1013.85 684.947 L1014.41 684.947 L1014.97 684.947 L1015.53 684.947 L1016.09 684.947 L1016.65 684.947 L1017.21 684.947 L1017.77 684.947 L1018.33 684.947 L1018.89 684.947 L1019.45 684.947 L1020.01 684.947 L1020.56 684.947 L1021.12 684.947 L1021.68 684.947 L1022.24 684.947 L1022.8 684.947 L1023.36 684.947 L1023.92 684.947 L1024.48 684.947 L1025.04 684.947 L1025.6 684.947 L1026.16 684.947 L1026.72 684.947 L1027.28 684.947 L1027.83 684.947 L1028.39 684.947 L1028.95 684.947 L1029.51 684.947 L1030.07 684.947 L1030.63 684.947 L1031.19 684.947 L1031.75 684.947 L1032.31 684.947 L1032.87 684.947 L1033.43 684.947 L1033.99 684.947 L1034.55 684.947 L1035.1 684.947 L1035.66 684.947 L1036.22 684.947 L1036.78 684.947 L1037.34 684.947 L1037.9 684.947 L1038.46 684.947 L1039.02 684.947 L1039.58 684.947 L1040.14 684.947 L1040.7 684.947 L1041.26 684.947 L1041.82 684.947 L1042.38 684.947 L1042.93 684.947 L1043.49 684.947 L1044.05 684.947 L1044.61 684.947 L1045.17 684.947 L1045.73 684.947 L1046.29 684.947 L1046.85 684.947 L1047.41 684.947 L1047.97 684.947 L1048.53 684.947 L1049.09 684.947 L1049.65 684.947 L1050.2 684.947 L1050.76 684.947 L1051.32 684.947 L1051.88 684.947 L1052.44 684.947 L1053 684.947 L1053.56 684.947 L1054.12 684.947 L1054.68 684.947 L1055.24 684.947 L1055.8 684.947 L1056.36 684.947 L1056.92 684.947 L1057.48 684.947 L1058.03 684.947 L1058.59 684.947 L1059.15 684.947 L1059.71 684.947 L1060.27 684.947 L1060.83 684.947 L1061.39 684.947 L1061.95 684.947 L1062.51 684.947 L1063.07 684.947 L1063.63 684.947 L1064.19 684.947 L1064.75 684.947 L1065.3 684.947 L1065.86 684.947 L1066.42 684.947 L1066.98 684.947 L1067.54 684.947 L1068.1 684.947 L1068.66 684.947 L1069.22 684.947 L1069.78 684.947 L1070.34 684.947 L1070.9 684.947 L1071.46 684.947 L1072.02 684.947 L1072.57 684.947 L1073.13 684.947 L1073.69 684.947 L1074.25 684.947 L1074.81 684.947 L1075.37 684.947 L1075.93 684.947 L1076.49 684.947 L1077.05 684.947 L1077.61 684.947 L1078.17 684.947 L1078.73 684.947 L1079.29 684.947 L1079.85 684.947 L1080.4 684.947 L1080.96 684.947 L1081.52 684.947 L1082.08 684.947 L1082.64 684.947 L1083.2 684.947 L1083.76 684.947 L1084.32 684.947 L1084.88 684.947 L1085.44 684.947 L1086 684.947 L1086.56 684.947 L1087.12 684.947 L1087.67 684.947 L1088.23 684.947 L1088.79 684.947 L1089.35 684.947 L1089.91 684.947 L1090.47 684.947 L1091.03 684.947 L1091.59 684.947 L1092.15 684.947 L1092.71 684.947 L1093.27 684.947 L1093.83 684.947 L1094.39 684.947 L1094.94 684.947 L1095.5 684.947 L1096.06 684.947 L1096.62 684.947 L1097.18 684.947 L1097.74 684.947 L1098.3 684.947 L1098.86 684.947 L1099.42 684.947 L1099.98 684.947 L1100.54 684.947 L1101.1 684.947 L1101.66 684.947 L1102.22 684.947 L1102.77 684.947 L1103.33 684.947 L1103.89 684.947 L1104.45 684.947 L1105.01 684.947 L1105.57 684.947 L1106.13 684.947 L1106.69 684.947 L1107.25 684.947 L1107.81 684.947 L1108.37 684.947 L1108.93 684.947 L1109.49 684.947 L1110.04 684.947 L1110.6 684.947 L1111.16 684.947 L1111.72 684.947 L1112.28 684.947 L1112.84 684.947 L1113.4 684.947 L1113.96 684.947 L1114.52 684.947 L1115.08 684.947 L1115.64 684.947 L1116.2 684.947 L1116.76 684.947 L1117.31 684.947 L1117.87 684.947 L1118.43 684.947 L1118.99 684.947 L1119.55 684.947 L1120.11 684.947 L1120.67 684.947 L1121.23 684.947 L1121.79 684.947 L1122.35 684.947 L1122.91 684.947 L1123.47 684.947 L1124.03 684.947 L1124.59 684.947 L1125.14 684.947 L1125.7 684.947 L1126.26 684.947 L1126.82 684.947 L1127.38 684.947 L1127.94 684.947 L1128.5 684.947 L1129.06 684.947 L1129.62 684.947 L1130.18 684.947 L1130.74 684.947 L1131.3 684.947 L1131.86 684.947 L1132.41 684.947 L1132.97 684.947 L1133.53 684.947 L1134.09 684.947 L1134.65 684.947 L1135.21 684.947 L1135.77 684.947 L1136.33 684.947 L1136.89 684.947 L1137.45 684.947 L1138.01 684.947 L1138.57 684.947 L1139.13 684.947 L1139.68 684.947 L1140.24 684.947 L1140.8 684.947 L1141.36 684.947 L1141.92 684.947 L1142.48 684.947 L1143.04 684.947 L1143.6 684.947 L1144.16 684.947 L1144.72 684.947 L1145.28 684.947 L1145.84 684.947 L1146.4 684.947 L1146.96 684.947 L1147.51 684.947 L1148.07 684.947 L1148.63 684.947 L1149.19 684.947 L1149.75 684.947 L1150.31 684.947 L1150.87 684.947 L1151.43 684.947 L1151.99 684.947 L1152.55 684.947 L1153.11 684.947 L1153.67 684.947 L1154.23 684.947 L1154.78 684.947 L1155.34 684.947 L1155.9 684.947 L1156.46 684.947 L1157.02 684.947 L1157.58 684.947 L1158.14 684.947 L1158.7 684.947 L1159.26 684.947 L1159.82 684.947 L1160.38 684.947 L1160.94 684.947 L1161.5 684.947 L1162.05 684.947 L1162.61 684.947 L1163.17 684.947 L1163.73 684.947 L1164.29 684.947 L1164.85 684.947 L1165.41 684.947 L1165.97 684.947 L1166.53 684.947 L1167.09 684.947 L1167.65 684.947 L1168.21 684.947 L1168.77 684.947 L1169.33 684.947 L1169.88 684.947 L1170.44 684.947 L1171 684.947 L1171.56 684.947 L1172.12 684.947 L1172.68 684.947 L1173.24 684.947 L1173.8 684.947 L1174.36 684.947 L1174.92 684.947 L1175.48 684.947 L1176.04 684.947 L1176.6 684.947 L1177.15 684.947 L1177.71 684.947 L1178.27 684.947 L1178.83 684.947 L1179.39 684.947 L1179.95 684.947 L1180.51 684.947 L1181.07 684.947 L1181.63 684.947 L1182.19 684.947 L1182.75 684.947 L1183.31 684.947 L1183.87 684.947 L1184.43 684.947 L1184.98 684.947 L1185.54 684.947 L1186.1 684.947 L1186.66 684.947 L1187.22 684.947 L1187.78 684.947 L1188.34 684.947 L1188.9 684.947 L1189.46 684.947 L1190.02 684.947 L1190.58 684.947 L1191.14 684.947 L1191.7 684.947 L1192.25 684.947 L1192.81 684.947 L1193.37 684.947 L1193.93 684.947 L1194.49 684.947 L1195.05 684.947 L1195.61 684.947 L1196.17 684.947 L1196.73 684.947 L1197.29 684.947 L1197.85 684.947 L1198.41 684.947 L1198.97 684.947 L1199.52 684.947 L1200.08 684.947 L1200.64 684.947 L1201.2 684.947 L1201.76 684.947 L1202.32 684.947 L1202.88 684.947 L1203.44 684.947 L1204 684.947 L1204.56 684.947 L1205.12 684.947 L1205.68 684.947 L1206.24 684.947 L1206.8 684.947 L1207.35 684.947 L1207.91 684.947 L1208.47 684.947 L1209.03 684.947 L1209.59 684.947 L1210.15 684.947 L1210.71 684.947 L1211.27 684.947 L1211.83 684.947 L1212.39 684.947 L1212.95 684.947 L1213.51 684.947 L1214.07 684.947 L1214.62 684.947 L1215.18 684.947 L1215.74 684.947 L1216.3 684.947 L1216.86 684.947 L1217.42 684.947 L1217.98 684.947 L1218.54 684.947 L1219.1 684.947 L1219.66 684.947 L1220.22 684.947 L1220.78 684.947 L1221.34 684.947 L1221.89 684.947 L1222.45 684.947 L1223.01 684.947 L1223.57 684.947 L1224.13 684.947 L1224.69 684.947 L1225.25 684.947 L1225.81 684.947 L1226.37 684.947 L1226.93 684.947 L1227.49 684.947 L1228.05 684.947 L1228.61 684.947 L1229.17 684.947 L1229.72 684.947 L1230.28 684.947 L1230.84 684.947 L1231.4 684.947 L1231.96 684.947 L1232.52 684.947 L1233.08 684.947 L1233.64 684.947 L1234.2 684.947 L1234.76 684.947 L1235.32 684.947 L1235.88 684.947 L1236.44 684.947 L1236.99 684.947 L1237.55 684.947 L1238.11 684.947 L1238.67 684.947 L1239.23 684.947 L1239.79 684.947 L1240.35 684.947 L1240.91 684.947 L1241.47 684.947 L1242.03 684.947 L1242.59 684.947 L1243.15 684.947 L1243.71 684.947 L1244.26 684.947 L1244.82 684.947 L1245.38 684.947 L1245.94 684.947 L1246.5 684.947 L1247.06 684.947 L1247.62 684.947 L1248.18 684.947 L1248.74 684.947 L1249.3 684.947 L1249.86 684.947 L1250.42 684.947 L1250.98 684.947 L1251.54 684.947 L1252.09 684.947 L1252.65 684.947 L1253.21 684.947 L1253.77 684.947 L1254.33 684.947 L1254.89 684.947 L1255.45 684.947 L1256.01 684.947 L1256.57 684.947 L1257.13 684.947 L1257.69 684.947 L1258.25 684.947 L1258.81 684.947 L1259.36 684.947 L1259.92 684.947 L1260.48 684.947 L1261.04 684.947 L1261.6 684.947 L1262.16 684.947 L1262.72 684.947 L1263.28 684.947 L1263.84 684.947 L1264.4 684.947 L1264.96 684.947 L1265.52 684.947 L1266.08 684.947 L1266.63 684.947 L1267.19 684.947 L1267.75 684.947 L1268.31 684.947 L1268.87 684.947 L1269.43 684.947 L1269.99 684.947 L1270.55 684.947 L1271.11 684.947 L1271.67 684.947 L1272.23 684.947 L1272.79 684.947 L1273.35 684.947 L1273.91 684.947 L1274.46 684.947 L1275.02 684.947 L1275.58 684.947 L1276.14 684.947 L1276.7 684.947 L1277.26 684.947 L1277.82 684.947 L1278.38 684.947 L1278.94 684.947 L1279.5 684.947 L1280.06 684.947 L1280.62 684.947 L1281.18 684.947 L1281.73 684.947 L1282.29 684.947 L1282.85 684.947 L1283.41 684.947 L1283.97 684.947 L1284.53 684.947 L1285.09 684.947 L1285.65 684.947 L1286.21 684.947 L1286.77 684.947 L1287.33 684.947 L1287.89 684.947 L1288.45 684.947 L1289 684.947 L1289.56 684.947 L1290.12 684.947 L1290.68 684.947 L1291.24 684.947 L1291.8 684.947 L1292.36 684.947 L1292.92 684.947 L1293.48 684.947 L1294.04 684.947 L1294.6 684.947 L1295.16 684.947 L1295.72 684.947 L1296.28 684.947 L1296.83 684.947 L1297.39 684.947 L1297.95 684.947 L1298.51 684.947 L1299.07 684.947 L1299.63 684.947 L1300.19 684.947 L1300.75 684.947 L1301.31 684.947 L1301.87 684.947 L1302.43 684.947 L1302.99 684.947 L1303.55 684.947 L1304.1 684.947 L1304.66 684.947 L1305.22 684.947 L1305.78 684.947 L1306.34 684.947 L1306.9 684.947 L1307.46 684.947 L1308.02 684.947 L1308.58 684.947 L1309.14 684.947 L1309.7 684.947 L1310.26 684.947 L1310.82 684.947 L1311.38 684.947 L1311.93 684.947 L1312.49 684.947 L1313.05 684.947 L1313.61 684.947 L1314.17 684.947 L1314.73 684.947 L1315.29 684.947 L1315.85 684.947 L1316.41 684.947 L1316.97 684.947 L1317.53 684.947 L1318.09 684.947 L1318.65 684.947 L1319.2 684.947 L1319.76 684.947 L1320.32 684.947 L1320.88 684.947 L1321.44 684.947 L1322 684.947 L1322.56 684.947 L1323.12 684.947 L1323.68 684.947 L1324.24 684.947 L1324.8 684.947 L1325.36 684.947 L1325.92 684.947 L1326.47 684.947 L1327.03 684.947 L1327.59 684.947 L1328.15 684.947 L1328.71 684.947 L1329.27 684.947 L1329.83 684.947 L1330.39 684.947 L1330.95 684.947 L1331.51 684.947 L1332.07 684.947 L1332.63 684.947 L1333.19 684.947 L1333.75 684.947 L1334.3 684.947 L1334.86 684.947 L1335.42 684.947 L1335.98 684.947 L1336.54 684.947 L1337.1 684.947 L1337.66 684.947 L1338.22 684.947 L1338.78 684.947 L1339.34 684.947 L1339.9 684.947 L1340.46 684.947 L1341.02 684.947 L1341.57 684.947 L1342.13 684.947 L1342.69 684.947 L1343.25 684.947 L1343.81 684.947 L1344.37 684.947 L1344.93 684.947 L1345.49 684.947 L1346.05 684.947 L1346.61 684.947 L1347.17 684.947 L1347.73 684.947 L1348.29 684.947 L1348.84 684.947 L1349.4 684.947 L1349.96 684.947 L1350.52 684.947 L1351.08 684.947 L1351.64 684.947 L1352.2 684.947 L1352.76 684.947 L1353.32 684.947 L1353.88 684.947 L1354.44 684.947 L1355 684.947 L1355.56 684.947 L1356.12 684.947 L1356.67 684.947 L1357.23 684.947 L1357.79 684.947 L1358.35 684.947 L1358.91 684.947 L1359.47 684.947 L1360.03 684.947 L1360.59 684.947 L1361.15 684.947 L1361.71 684.947 L1362.27 684.947 L1362.83 684.947 L1363.39 684.947 L1363.94 684.947 L1364.5 684.947 L1365.06 684.947 L1365.62 684.947 L1366.18 684.947 L1366.74 684.947 L1367.3 684.947 L1367.86 684.947 L1368.42 684.947 L1368.98 684.947 L1369.54 684.947 L1370.1 684.947 L1370.66 684.947 L1371.21 684.947 L1371.77 684.947 L1372.33 684.947 L1372.89 684.947 L1373.45 684.947 L1374.01 684.947 L1374.57 684.947 L1375.13 684.947 L1375.69 684.947 L1376.25 684.947 L1376.81 684.947 L1377.37 684.947 L1377.93 684.947 L1378.49 684.947 L1379.04 684.947 L1379.6 684.947 L1380.16 684.947 L1380.72 684.947 L1381.28 684.947 L1381.84 684.947 L1382.4 684.947 L1382.96 684.947 L1383.52 684.947 L1384.08 684.947 L1384.64 684.947 L1385.2 684.947 L1385.76 684.947 L1386.31 684.947 L1386.87 684.947 L1387.43 684.947 L1387.99 684.947 L1388.55 684.947 L1389.11 684.947 L1389.67 684.947 L1390.23 684.947 L1390.79 684.947 L1391.35 684.947 L1391.91 684.947 L1392.47 684.947 L1393.03 684.947 L1393.58 684.947 L1394.14 684.947 L1394.7 684.947 L1395.26 684.947 L1395.82 684.947 L1396.38 684.947 L1396.94 684.947 L1397.5 684.947 L1398.06 684.947 L1398.62 684.947 L1399.18 684.947 L1399.74 684.947 L1400.3 684.947 L1400.86 684.947 L1401.41 684.947 L1401.97 684.947 L1402.53 684.947 L1403.09 684.947 L1403.65 684.947 L1404.21 684.947 L1404.77 684.947 L1405.33 684.947 L1405.89 684.947 L1406.45 684.947 L1407.01 684.947 L1407.57 684.947 L1408.13 684.947 L1408.68 684.947 L1409.24 684.947 L1409.8 684.947 L1410.36 684.947 L1410.92 684.947 L1411.48 684.947 L1412.04 684.947 L1412.6 684.947 L1413.16 684.947 L1413.72 684.947 L1414.28 684.947 L1414.84 684.947 L1415.4 684.947 L1415.95 684.947 L1416.51 684.947 L1417.07 684.947 L1417.63 684.947 L1418.19 684.947 L1418.75 684.947 L1419.31 684.947 L1419.87 684.947 L1420.43 684.947 L1420.99 684.947 L1421.55 684.947 L1422.11 684.947 L1422.67 684.947 L1423.23 684.947 L1423.78 684.947 L1424.34 684.947 L1424.9 684.947 L1425.46 684.947 L1426.02 684.947 L1426.58 684.947 L1427.14 684.947 L1427.7 684.947 L1428.26 684.947 L1428.82 684.947 L1429.38 684.947 L1429.94 684.947 L1430.5 684.947 L1431.05 684.947 L1431.61 684.947 L1432.17 684.947 L1432.73 684.947 L1433.29 684.947 L1433.85 684.947 L1434.41 684.947 L1434.97 684.947 L1435.53 684.947 L1436.09 684.947 L1436.65 684.947 L1437.21 684.947 L1437.77 684.947 L1438.33 684.947 L1438.88 684.947 L1439.44 684.947 L1440 684.947 L1440.56 684.947 L1441.12 684.947 L1441.68 684.947 L1442.24 684.947 L1442.8 684.947 L1443.36 684.947 L1443.92 684.947 L1444.48 684.947 L1445.04 684.947 L1445.6 684.947 L1446.15 684.947 L1446.71 684.947 L1447.27 684.947 L1447.83 684.947 L1448.39 684.947 L1448.95 684.947 L1449.51 684.947 L1450.07 684.947 L1450.63 684.947 L1451.19 684.947 L1451.75 684.947 L1452.31 684.947 L1452.87 684.947 L1453.42 684.947 L1453.98 684.947 L1454.54 684.947 L1455.1 684.947 L1455.66 684.947 L1456.22 684.947 L1456.78 684.947 L1457.34 684.947 L1457.9 684.947 L1458.46 684.947 L1459.02 684.947 L1459.58 684.947 L1460.14 684.947 L1460.7 684.947 L1461.25 684.947 L1461.81 684.947 L1462.37 684.947 L1462.93 684.947 L1463.49 684.947 L1464.05 684.947 L1464.61 684.947 L1465.17 684.947 L1465.73 684.947 L1466.29 684.947 L1466.85 684.947 L1467.41 684.947 L1467.97 684.947 L1468.52 684.947 L1469.08 684.947 L1469.64 684.947 L1470.2 684.947 L1470.76 684.947 L1471.32 684.947 L1471.88 684.947 L1472.44 684.947 L1473 684.947 L1473.56 684.947 L1474.12 684.947 L1474.68 684.947 L1475.24 684.947 L1475.79 684.947 L1476.35 684.947 L1476.91 684.947 L1477.47 684.947 L1478.03 684.947 L1478.59 684.947 L1479.15 684.947 L1479.71 684.947 L1480.27 684.947 L1480.83 684.947 L1481.39 684.947 L1481.95 684.947 L1482.51 684.947 L1483.07 684.947 L1483.62 684.947 L1484.18 684.947 L1484.74 684.947 L1485.3 684.947 L1485.86 684.947 L1486.42 684.947 L1486.98 684.947 L1487.54 684.947 L1488.1 684.947 L1488.66 684.947 L1489.22 684.947 L1489.78 684.947 L1490.34 684.947 L1490.89 684.947 L1491.45 684.947 L1492.01 684.947 L1492.57 684.947 L1493.13 684.947 L1493.69 684.947 L1494.25 684.947 L1494.81 684.947 L1495.37 684.947 L1495.93 684.947 L1496.49 684.947 L1497.05 684.947 L1497.61 684.947 L1498.16 684.947 L1498.72 684.947 L1499.28 684.947 L1499.84 684.947 L1500.4 684.947 L1500.96 684.947 L1501.52 684.947 L1502.08 684.947 L1502.64 684.947 L1503.2 684.947 L1503.76 684.947 L1504.32 684.947 L1504.88 684.947 L1505.44 684.947 L1505.99 684.947 L1506.55 684.947 L1507.11 684.947 L1507.67 684.947 L1508.23 684.947 L1508.79 684.947 L1509.35 684.947 L1509.91 684.947 L1510.47 684.947 L1511.03 684.947 L1511.59 684.947 L1512.15 684.947 L1512.71 684.947 L1513.26 684.947 L1513.82 684.947 L1514.38 684.947 L1514.94 684.947 L1515.5 684.947 L1516.06 684.947 L1516.62 684.947 L1517.18 684.947 L1517.74 684.947 L1518.3 684.947 L1518.86 684.947 L1519.42 684.947 L1519.98 684.947 L1520.53 684.947 L1521.09 684.947 L1521.65 684.947 L1522.21 684.947 L1522.77 684.947 L1523.33 684.947 L1523.89 684.947 L1524.45 684.947 L1525.01 684.947 L1525.57 684.947 L1526.13 684.947 L1526.69 684.947 L1527.25 684.947 L1527.81 684.947 L1528.36 684.947 L1528.92 684.947 L1529.48 684.947 L1530.04 684.947 L1530.6 684.947 L1531.16 684.947 L1531.72 684.947 L1532.28 684.947 L1532.84 684.947 L1533.4 684.947 L1533.96 684.947 L1534.52 684.947 L1535.08 684.947 L1535.63 684.947 L1536.19 684.947 L1536.75 684.947 L1537.31 684.947 L1537.87 684.947 L1538.43 684.947 L1538.99 684.947 L1539.55 684.947 L1540.11 684.947 L1540.67 684.947 L1541.23 684.947 L1541.79 684.947 L1542.35 684.947 L1542.9 684.947 L1543.46 684.947 L1544.02 684.947 L1544.58 684.947 L1545.14 684.947 L1545.7 684.947 L1546.26 684.947 L1546.82 684.947 L1547.38 684.947 L1547.94 684.947 L1548.5 684.947 L1549.06 684.947 L1549.62 684.947 L1550.18 684.947 L1550.73 684.947 L1551.29 684.947 L1551.85 684.947 L1552.41 684.947 L1552.97 684.947 L1553.53 684.947 L1554.09 684.947 L1554.65 684.947 L1555.21 684.947 L1555.77 684.947 L1556.33 684.947 L1556.89 684.947 L1557.45 684.947 L1558 684.947 L1558.56 684.947 L1559.12 684.947 L1559.68 684.947 L1560.24 684.947 L1560.8 684.947 L1561.36 684.947 L1561.92 684.947 L1562.48 684.947 L1563.04 684.947 L1563.6 684.947 L1564.16 684.947 L1564.72 684.947 L1565.28 684.947 L1565.83 684.947 L1566.39 684.947 L1566.95 684.947 L1567.51 684.947 L1568.07 684.947 L1568.63 684.947 L1569.19 684.947 L1569.75 684.947 L1570.31 684.947 L1570.87 684.947 L1571.43 684.947 L1571.99 684.947 L1572.55 684.947 L1573.1 684.947 L1573.66 684.947 L1574.22 684.947 L1574.78 684.947 L1575.34 684.947 L1575.9 684.947 L1576.46 684.947 L1577.02 684.947 L1577.58 684.947 L1578.14 684.947 L1578.7 684.947 L1579.26 684.947 L1579.82 684.947 L1580.37 684.947 L1580.93 684.947 L1581.49 684.947 L1582.05 684.947 L1582.61 684.947 L1583.17 684.947 L1583.73 684.947 L1584.29 684.947 L1584.85 684.947 L1585.41 684.947 L1585.97 684.947 L1586.53 684.947 L1587.09 684.947 L1587.65 684.947 L1588.2 684.947 L1588.76 684.947 L1589.32 684.947 L1589.88 684.947 L1590.44 684.947 L1591 684.947 L1591.56 684.947 L1592.12 684.947 L1592.68 684.947 L1593.24 684.947 L1593.8 684.947 L1594.36 684.947 L1594.92 684.947 L1595.47 684.947 L1596.03 684.947 L1596.59 684.947 L1597.15 684.947 L1597.71 684.947 L1598.27 684.947 L1598.83 684.947 L1599.39 684.947 L1599.95 684.947 L1600.51 684.947 L1601.07 684.947 L1601.63 684.947 L1602.19 684.947 L1602.74 684.947 L1603.3 684.947 L1603.86 684.947 L1604.42 684.947 L1604.98 684.947 L1605.54 684.947 L1606.1 684.947 L1606.66 684.947 L1607.22 684.947 L1607.78 684.947 L1608.34 684.947 L1608.9 684.947 L1609.46 684.947 L1610.02 684.947 L1610.57 684.947 L1611.13 684.947 L1611.69 684.947 L1612.25 684.947 L1612.81 684.947 L1613.37 684.947 L1613.93 684.947 L1614.49 684.947 L1615.05 684.947 L1615.61 684.947 L1616.17 684.947 L1616.73 684.947 L1617.29 684.947 L1617.84 684.947 L1618.4 684.947 L1618.96 684.947 L1619.52 684.947 L1620.08 684.947 L1620.64 684.947 L1621.2 684.947 L1621.76 684.947 L1622.32 684.947 L1622.88 684.947 L1623.44 684.947 L1624 684.947 L1624.56 684.947 L1625.11 684.947 L1625.67 684.947 L1626.23 684.947 L1626.79 684.947 L1627.35 684.947 L1627.91 684.947 L1628.47 684.947 L1629.03 684.947 L1629.59 684.947 L1630.15 684.947 L1630.71 684.947 L1631.27 684.947 L1631.83 684.947 L1632.39 684.947 L1632.94 684.947 L1633.5 684.947 L1634.06 684.947 L1634.62 684.947 L1635.18 684.947 L1635.74 684.947 L1636.3 684.947 L1636.86 684.947 L1637.42 684.947 L1637.98 684.947 L1638.54 684.947 L1639.1 684.947 L1639.66 684.947 L1640.21 684.947 L1640.77 684.947 L1641.33 684.947 L1641.89 684.947 L1642.45 684.947 L1643.01 684.947 L1643.57 684.947 L1644.13 684.947 L1644.69 684.947 L1645.25 684.947 L1645.81 684.947 L1646.37 684.947 L1646.93 684.947 L1647.48 684.947 L1648.04 684.947 L1648.6 684.947 L1649.16 684.947 L1649.72 684.947 L1650.28 684.947 L1650.84 684.947 L1651.4 684.947 L1651.96 684.947 L1652.52 684.947 L1653.08 684.947 L1653.64 684.947 L1654.2 684.947 L1654.76 684.947 L1655.31 684.947 L1655.87 684.947 L1656.43 684.947 L1656.99 684.947 L1657.55 684.947 L1658.11 684.947 L1658.67 684.947 L1659.23 684.947 L1659.79 684.947 L1660.35 684.947 L1660.91 684.947 L1661.47 684.947 L1662.03 684.947 L1662.58 684.947 L1663.14 684.947 L1663.7 684.947 L1664.26 684.947 L1664.82 684.947 L1665.38 684.947 L1665.94 684.947 L1666.5 684.947 L1667.06 684.947 L1667.62 684.947 L1668.18 684.947 L1668.74 684.947 L1669.3 684.947 L1669.85 684.947 L1670.41 684.947 L1670.97 684.947 L1671.53 684.947 L1672.09 684.947 L1672.65 684.947 L1673.21 684.947 L1673.77 684.947 L1674.33 684.947 L1674.89 684.947 L1675.45 684.947 L1676.01 684.947 L1676.57 684.947 L1677.13 684.947 L1677.68 684.947 L1678.24 684.947 L1678.8 684.947 L1679.36 684.947 L1679.92 684.947 L1680.48 684.947 L1681.04 684.947 L1681.6 684.947 L1682.16 684.947 L1682.72 684.947 L1683.28 684.947 L1683.84 684.947 L1684.4 684.947 L1684.95 684.947 L1685.51 684.947 L1686.07 684.947 L1686.63 684.947 L1687.19 684.947 L1687.75 684.947 L1688.31 684.947 L1688.87 684.947 L1689.43 684.947 L1689.99 684.947 L1690.55 684.947 L1691.11 684.947 L1691.67 684.947 L1692.23 684.947 L1692.78 684.947 L1693.34 684.947 L1693.9 684.947 L1694.46 684.947 L1695.02 684.947 L1695.58 684.947 L1696.14 684.947 L1696.7 684.947 L1697.26 684.947 L1697.82 684.947 L1698.38 684.947 L1698.94 684.947 L1699.5 684.947 L1700.05 684.947 L1700.61 684.947 L1701.17 684.947 L1701.73 684.947 L1702.29 684.947 L1702.85 684.947 L1703.41 684.947 L1703.97 684.947 L1704.53 684.947 L1705.09 684.947 L1705.65 684.947 L1706.21 684.947 L1706.77 684.947 L1707.32 684.947 L1707.88 684.947 L1708.44 684.947 L1709 684.947 L1709.56 684.947 L1710.12 684.947 L1710.68 684.947 L1711.24 684.947 L1711.8 684.947 L1712.36 684.947 L1712.92 684.947 L1713.48 684.947 L1714.04 684.947 L1714.6 684.947 L1715.15 684.947 L1715.71 684.947 L1716.27 684.947 L1716.83 684.947 L1717.39 684.947 L1717.95 684.947 L1718.51 684.947 L1719.07 684.947 L1719.63 684.947 L1720.19 684.947 L1720.75 684.947 L1721.31 684.947 L1721.87 684.947 L1722.42 684.947 L1722.98 684.947 L1723.54 684.947 L1724.1 684.947 L1724.66 684.947 L1725.22 684.947 L1725.78 684.947 L1726.34 684.947 L1726.9 684.947 L1727.46 684.947 L1728.02 684.947 L1728.58 684.947 L1729.14 684.947 L1729.69 684.947 L1730.25 684.947 L1730.81 684.947 L1731.37 684.947 L1731.93 684.947 L1732.49 684.947 L1733.05 684.947 L1733.61 684.947 L1734.17 684.947 L1734.73 684.947 L1735.29 684.947 L1735.85 684.947 L1736.41 684.947 L1736.97 684.947 L1737.52 684.947 L1738.08 684.947 L1738.64 684.947 L1739.2 684.947 L1739.76 684.947 L1740.32 684.947 L1740.88 684.947 L1741.44 684.947 L1742 684.947 L1742.56 684.947 L1743.12 684.947 L1743.68 684.947 L1744.24 684.947 L1744.79 684.947 L1745.35 684.947 L1745.91 684.947 L1746.47 684.947 L1747.03 684.947 L1747.59 684.947 L1748.15 684.947 L1748.71 684.947 L1749.27 684.947 L1749.83 684.947 L1750.39 684.947 L1750.95 684.947 L1751.51 684.947 L1752.06 684.947 L1752.62 684.947 L1753.18 684.947 L1753.74 684.947 L1754.3 684.947 L1754.86 684.947 L1755.42 684.947 L1755.98 684.947 L1756.54 684.947 L1757.1 684.947 L1757.66 684.947 L1758.22 684.947 L1758.78 684.947 L1759.34 684.947 L1759.89 684.947 L1760.45 684.947 L1761.01 684.947 L1761.57 684.947 L1762.13 684.947 L1762.69 684.947 L1763.25 684.947 L1763.81 684.947 L1764.37 684.947 L1764.93 684.947 L1765.49 684.947 L1766.05 684.947 L1766.61 684.947 L1767.16 684.947 L1767.72 684.947 L1768.28 684.947 L1768.84 684.947 L1769.4 684.947 L1769.96 684.947 L1770.52 684.947 L1771.08 684.947 L1771.64 684.947 L1772.2 684.947 L1772.76 684.947 L1773.32 684.947 L1773.88 684.947 L1774.43 684.947 L1774.99 684.947 L1775.55 684.947 L1776.11 684.947 L1776.67 684.947 L1777.23 684.947 L1777.79 684.947 L1778.35 684.947 L1778.91 684.947 L1779.47 684.947 L1780.03 684.947 L1780.59 684.947 L1781.15 684.947 L1781.71 684.947 L1782.26 684.947 L1782.82 684.947 L1783.38 684.947 L1783.94 684.947 L1784.5 684.947 L1785.06 684.947 L1785.62 684.947 L1786.18 684.947 L1786.74 684.947 L1787.3 684.947 L1787.86 684.947 L1788.42 684.947 L1788.98 684.947 L1789.53 684.947 L1790.09 684.947 L1790.65 684.947 L1791.21 684.947 L1791.77 684.947 L1792.33 684.947 L1792.89 684.947 L1793.45 684.947 L1794.01 684.947 L1794.57 684.947 L1795.13 684.947 L1795.69 684.947 L1796.25 684.947 L1796.8 684.947 L1797.36 684.947 L1797.92 684.947 L1798.48 684.947 L1799.04 684.947 L1799.6 684.947 L1800.16 684.947 L1800.72 684.947 L1801.28 684.947 L1801.84 684.947 L1802.4 684.947 L1802.96 684.947 L1803.52 684.947 L1804.08 684.947 L1804.63 684.947 L1805.19 684.947 L1805.75 684.947 L1806.31 684.947 L1806.87 684.947 L1807.43 684.947 L1807.99 684.947 L1808.55 684.947 L1809.11 684.947 L1809.67 684.947 L1810.23 684.947 L1810.79 684.947 L1811.35 684.947 L1811.9 684.947 L1812.46 684.947 L1813.02 684.947 L1813.58 684.947 L1814.14 684.947 L1814.7 684.947 L1815.26 684.947 L1815.82 684.947 L1816.38 684.947 L1816.94 684.947 L1817.5 684.947 L1818.06 684.947 L1818.62 684.947 L1819.18 684.947 L1819.73 684.947 L1820.29 684.947 L1820.85 684.947 L1821.41 684.947 L1821.97 684.947 L1822.53 684.947 L1823.09 684.947 L1823.65 684.947 L1824.21 684.947 L1824.77 684.947 L1825.33 684.947 L1825.89 684.947 L1826.45 684.947 L1827 684.947 L1827.56 684.947 L1828.12 684.947 L1828.68 684.947 L1829.24 684.947 L1829.8 684.947 L1830.36 684.947 L1830.92 684.947 L1831.48 684.947 L1832.04 684.947 L1832.6 684.947 L1833.16 684.947 L1833.72 684.947 L1834.27 684.947 L1834.83 684.947 L1835.39 684.947 L1835.95 684.947 L1836.51 684.947 L1837.07 684.947 L1837.63 684.947 L1838.19 684.947 L1838.19 683.378 L1837.63 683.378 L1837.07 683.378 L1836.51 683.378 L1835.95 683.378 L1835.39 683.378 L1834.83 683.378 L1834.27 683.378 L1833.72 683.378 L1833.16 683.378 L1832.6 683.378 L1832.04 683.378 L1831.48 683.378 L1830.92 683.378 L1830.36 683.378 L1829.8 683.378 L1829.24 683.378 L1828.68 683.378 L1828.12 683.378 L1827.56 683.378 L1827 683.378 L1826.45 683.378 L1825.89 683.378 L1825.33 683.378 L1824.77 683.378 L1824.21 683.378 L1823.65 683.378 L1823.09 683.378 L1822.53 683.378 L1821.97 683.378 L1821.41 683.378 L1820.85 683.378 L1820.29 683.378 L1819.73 683.378 L1819.18 683.378 L1818.62 683.378 L1818.06 683.378 L1817.5 683.378 L1816.94 683.378 L1816.38 683.378 L1815.82 683.378 L1815.26 683.378 L1814.7 683.378 L1814.14 683.378 L1813.58 683.378 L1813.02 683.378 L1812.46 683.378 L1811.9 683.378 L1811.35 683.378 L1810.79 683.378 L1810.23 683.378 L1809.67 683.378 L1809.11 683.378 L1808.55 683.378 L1807.99 683.378 L1807.43 683.378 L1806.87 683.378 L1806.31 683.378 L1805.75 683.378 L1805.19 683.378 L1804.63 683.378 L1804.08 683.378 L1803.52 683.378 L1802.96 683.378 L1802.4 683.378 L1801.84 683.378 L1801.28 683.378 L1800.72 683.378 L1800.16 683.378 L1799.6 683.378 L1799.04 683.378 L1798.48 683.378 L1797.92 683.378 L1797.36 683.378 L1796.8 683.378 L1796.25 683.378 L1795.69 683.378 L1795.13 683.378 L1794.57 683.378 L1794.01 683.378 L1793.45 683.378 L1792.89 683.378 L1792.33 683.378 L1791.77 683.378 L1791.21 683.378 L1790.65 683.378 L1790.09 683.378 L1789.53 683.378 L1788.98 683.378 L1788.42 683.378 L1787.86 683.378 L1787.3 683.378 L1786.74 683.378 L1786.18 683.378 L1785.62 683.378 L1785.06 683.378 L1784.5 683.378 L1783.94 683.378 L1783.38 683.378 L1782.82 683.378 L1782.26 683.378 L1781.71 683.378 L1781.15 683.378 L1780.59 683.378 L1780.03 683.378 L1779.47 683.378 L1778.91 683.378 L1778.35 683.378 L1777.79 683.378 L1777.23 683.378 L1776.67 683.378 L1776.11 683.378 L1775.55 683.378 L1774.99 683.378 L1774.43 683.378 L1773.88 683.378 L1773.32 683.378 L1772.76 683.378 L1772.2 683.378 L1771.64 683.378 L1771.08 683.378 L1770.52 683.378 L1769.96 683.378 L1769.4 683.378 L1768.84 683.378 L1768.28 683.378 L1767.72 683.378 L1767.16 683.378 L1766.61 683.378 L1766.05 683.378 L1765.49 683.378 L1764.93 683.378 L1764.37 683.378 L1763.81 683.378 L1763.25 683.378 L1762.69 683.378 L1762.13 683.378 L1761.57 683.378 L1761.01 683.378 L1760.45 683.378 L1759.89 683.378 L1759.34 683.378 L1758.78 683.378 L1758.22 683.378 L1757.66 683.378 L1757.1 683.378 L1756.54 683.378 L1755.98 683.378 L1755.42 683.378 L1754.86 683.378 L1754.3 683.378 L1753.74 683.378 L1753.18 683.378 L1752.62 683.378 L1752.06 683.378 L1751.51 683.378 L1750.95 683.378 L1750.39 683.378 L1749.83 683.378 L1749.27 683.378 L1748.71 683.378 L1748.15 683.378 L1747.59 683.378 L1747.03 683.378 L1746.47 683.378 L1745.91 683.378 L1745.35 683.378 L1744.79 683.378 L1744.24 683.378 L1743.68 683.378 L1743.12 683.378 L1742.56 683.378 L1742 683.378 L1741.44 683.378 L1740.88 683.378 L1740.32 683.378 L1739.76 683.378 L1739.2 683.378 L1738.64 683.378 L1738.08 683.378 L1737.52 683.378 L1736.97 683.378 L1736.41 683.378 L1735.85 683.378 L1735.29 683.378 L1734.73 683.378 L1734.17 683.378 L1733.61 683.378 L1733.05 683.378 L1732.49 683.378 L1731.93 683.378 L1731.37 683.378 L1730.81 683.378 L1730.25 683.378 L1729.69 683.378 L1729.14 683.378 L1728.58 683.378 L1728.02 683.378 L1727.46 683.378 L1726.9 683.378 L1726.34 683.378 L1725.78 683.378 L1725.22 683.378 L1724.66 683.378 L1724.1 683.378 L1723.54 683.378 L1722.98 683.378 L1722.42 683.378 L1721.87 683.378 L1721.31 683.378 L1720.75 683.378 L1720.19 683.378 L1719.63 683.378 L1719.07 683.378 L1718.51 683.378 L1717.95 683.378 L1717.39 683.378 L1716.83 683.378 L1716.27 683.378 L1715.71 683.378 L1715.15 683.378 L1714.6 683.378 L1714.04 683.378 L1713.48 683.378 L1712.92 683.378 L1712.36 683.378 L1711.8 683.378 L1711.24 683.378 L1710.68 683.378 L1710.12 683.378 L1709.56 683.378 L1709 683.378 L1708.44 683.378 L1707.88 683.378 L1707.32 683.378 L1706.77 683.378 L1706.21 683.378 L1705.65 683.378 L1705.09 683.378 L1704.53 683.378 L1703.97 683.378 L1703.41 683.378 L1702.85 683.378 L1702.29 683.378 L1701.73 683.378 L1701.17 683.378 L1700.61 683.378 L1700.05 683.378 L1699.5 683.378 L1698.94 683.378 L1698.38 683.378 L1697.82 683.378 L1697.26 683.378 L1696.7 683.378 L1696.14 683.378 L1695.58 683.378 L1695.02 683.378 L1694.46 683.378 L1693.9 683.378 L1693.34 683.378 L1692.78 683.378 L1692.23 683.378 L1691.67 683.378 L1691.11 683.378 L1690.55 683.378 L1689.99 683.378 L1689.43 683.378 L1688.87 683.378 L1688.31 683.378 L1687.75 683.378 L1687.19 683.378 L1686.63 683.378 L1686.07 683.378 L1685.51 683.378 L1684.95 683.378 L1684.4 683.378 L1683.84 683.378 L1683.28 683.378 L1682.72 683.378 L1682.16 683.378 L1681.6 683.378 L1681.04 683.378 L1680.48 683.378 L1679.92 683.378 L1679.36 683.378 L1678.8 683.378 L1678.24 683.378 L1677.68 683.378 L1677.13 683.378 L1676.57 683.378 L1676.01 683.378 L1675.45 683.378 L1674.89 683.378 L1674.33 683.378 L1673.77 683.378 L1673.21 683.378 L1672.65 683.378 L1672.09 683.378 L1671.53 683.378 L1670.97 683.378 L1670.41 683.378 L1669.85 683.378 L1669.3 683.378 L1668.74 683.378 L1668.18 683.378 L1667.62 683.378 L1667.06 683.378 L1666.5 683.378 L1665.94 683.378 L1665.38 683.378 L1664.82 683.378 L1664.26 683.378 L1663.7 683.378 L1663.14 683.378 L1662.58 683.378 L1662.03 683.378 L1661.47 683.378 L1660.91 683.378 L1660.35 683.378 L1659.79 683.378 L1659.23 683.378 L1658.67 683.378 L1658.11 683.378 L1657.55 683.378 L1656.99 683.378 L1656.43 683.378 L1655.87 683.378 L1655.31 683.378 L1654.76 683.378 L1654.2 683.378 L1653.64 683.378 L1653.08 683.378 L1652.52 683.378 L1651.96 683.378 L1651.4 683.378 L1650.84 683.378 L1650.28 683.378 L1649.72 683.378 L1649.16 683.378 L1648.6 683.378 L1648.04 683.378 L1647.48 683.378 L1646.93 683.378 L1646.37 683.378 L1645.81 683.378 L1645.25 683.378 L1644.69 683.378 L1644.13 683.378 L1643.57 683.378 L1643.01 683.378 L1642.45 683.378 L1641.89 683.378 L1641.33 683.378 L1640.77 683.378 L1640.21 683.378 L1639.66 683.378 L1639.1 683.378 L1638.54 683.378 L1637.98 683.378 L1637.42 683.378 L1636.86 683.378 L1636.3 683.378 L1635.74 683.378 L1635.18 683.378 L1634.62 683.378 L1634.06 683.378 L1633.5 683.378 L1632.94 683.378 L1632.39 683.378 L1631.83 683.378 L1631.27 683.378 L1630.71 683.378 L1630.15 683.378 L1629.59 683.378 L1629.03 683.378 L1628.47 683.378 L1627.91 683.378 L1627.35 683.378 L1626.79 683.378 L1626.23 683.378 L1625.67 683.378 L1625.11 683.378 L1624.56 683.378 L1624 683.378 L1623.44 683.378 L1622.88 683.378 L1622.32 683.378 L1621.76 683.378 L1621.2 683.378 L1620.64 683.378 L1620.08 683.378 L1619.52 683.378 L1618.96 683.378 L1618.4 683.378 L1617.84 683.378 L1617.29 683.378 L1616.73 683.378 L1616.17 683.378 L1615.61 683.378 L1615.05 683.378 L1614.49 683.378 L1613.93 683.378 L1613.37 683.378 L1612.81 683.378 L1612.25 683.378 L1611.69 683.378 L1611.13 683.378 L1610.57 683.378 L1610.02 683.378 L1609.46 683.378 L1608.9 683.378 L1608.34 683.378 L1607.78 683.378 L1607.22 683.378 L1606.66 683.378 L1606.1 683.378 L1605.54 683.378 L1604.98 683.378 L1604.42 683.378 L1603.86 683.378 L1603.3 683.378 L1602.74 683.378 L1602.19 683.378 L1601.63 683.378 L1601.07 683.378 L1600.51 683.378 L1599.95 683.378 L1599.39 683.378 L1598.83 683.378 L1598.27 683.378 L1597.71 683.378 L1597.15 683.378 L1596.59 683.378 L1596.03 683.378 L1595.47 683.378 L1594.92 683.378 L1594.36 683.378 L1593.8 683.378 L1593.24 683.378 L1592.68 683.378 L1592.12 683.378 L1591.56 683.378 L1591 683.378 L1590.44 683.378 L1589.88 683.378 L1589.32 683.378 L1588.76 683.378 L1588.2 683.378 L1587.65 683.378 L1587.09 683.378 L1586.53 683.378 L1585.97 683.378 L1585.41 683.378 L1584.85 683.378 L1584.29 683.378 L1583.73 683.378 L1583.17 683.378 L1582.61 683.378 L1582.05 683.378 L1581.49 683.378 L1580.93 683.378 L1580.37 683.378 L1579.82 683.378 L1579.26 683.378 L1578.7 683.378 L1578.14 683.378 L1577.58 683.378 L1577.02 683.378 L1576.46 683.378 L1575.9 683.378 L1575.34 683.378 L1574.78 683.378 L1574.22 683.378 L1573.66 683.378 L1573.1 683.378 L1572.55 683.378 L1571.99 683.378 L1571.43 683.378 L1570.87 683.378 L1570.31 683.378 L1569.75 683.378 L1569.19 683.378 L1568.63 683.378 L1568.07 683.378 L1567.51 683.378 L1566.95 683.378 L1566.39 683.378 L1565.83 683.378 L1565.28 683.378 L1564.72 683.378 L1564.16 683.378 L1563.6 683.378 L1563.04 683.378 L1562.48 683.378 L1561.92 683.378 L1561.36 683.378 L1560.8 683.378 L1560.24 683.378 L1559.68 683.378 L1559.12 683.378 L1558.56 683.378 L1558 683.378 L1557.45 683.378 L1556.89 683.378 L1556.33 683.378 L1555.77 683.378 L1555.21 683.378 L1554.65 683.378 L1554.09 683.378 L1553.53 683.378 L1552.97 683.378 L1552.41 683.378 L1551.85 683.378 L1551.29 683.378 L1550.73 683.378 L1550.18 683.378 L1549.62 683.378 L1549.06 683.378 L1548.5 683.378 L1547.94 683.378 L1547.38 683.378 L1546.82 683.378 L1546.26 683.378 L1545.7 683.378 L1545.14 683.378 L1544.58 683.378 L1544.02 683.378 L1543.46 683.378 L1542.9 683.378 L1542.35 683.378 L1541.79 683.378 L1541.23 683.378 L1540.67 683.378 L1540.11 683.378 L1539.55 683.378 L1538.99 683.378 L1538.43 683.378 L1537.87 683.378 L1537.31 683.378 L1536.75 683.378 L1536.19 683.378 L1535.63 683.378 L1535.08 683.378 L1534.52 683.378 L1533.96 683.378 L1533.4 683.378 L1532.84 683.378 L1532.28 683.378 L1531.72 683.378 L1531.16 683.378 L1530.6 683.378 L1530.04 683.378 L1529.48 683.378 L1528.92 683.378 L1528.36 683.378 L1527.81 683.378 L1527.25 683.378 L1526.69 683.378 L1526.13 683.378 L1525.57 683.378 L1525.01 683.378 L1524.45 683.378 L1523.89 683.378 L1523.33 683.378 L1522.77 683.378 L1522.21 683.378 L1521.65 683.378 L1521.09 683.378 L1520.53 683.378 L1519.98 683.378 L1519.42 683.378 L1518.86 683.378 L1518.3 683.378 L1517.74 683.378 L1517.18 683.378 L1516.62 683.378 L1516.06 683.378 L1515.5 683.378 L1514.94 683.378 L1514.38 683.378 L1513.82 683.378 L1513.26 683.378 L1512.71 683.378 L1512.15 683.378 L1511.59 683.378 L1511.03 683.378 L1510.47 683.378 L1509.91 683.378 L1509.35 683.378 L1508.79 683.378 L1508.23 683.378 L1507.67 683.378 L1507.11 683.378 L1506.55 683.378 L1505.99 683.378 L1505.44 683.378 L1504.88 683.378 L1504.32 683.378 L1503.76 683.378 L1503.2 683.378 L1502.64 683.378 L1502.08 683.378 L1501.52 683.378 L1500.96 683.378 L1500.4 683.378 L1499.84 683.378 L1499.28 683.378 L1498.72 683.378 L1498.16 683.378 L1497.61 683.378 L1497.05 683.378 L1496.49 683.378 L1495.93 683.378 L1495.37 683.378 L1494.81 683.378 L1494.25 683.378 L1493.69 683.378 L1493.13 683.378 L1492.57 683.378 L1492.01 683.378 L1491.45 683.378 L1490.89 683.378 L1490.34 683.378 L1489.78 683.378 L1489.22 683.378 L1488.66 683.378 L1488.1 683.378 L1487.54 683.378 L1486.98 683.378 L1486.42 683.378 L1485.86 683.378 L1485.3 683.378 L1484.74 683.378 L1484.18 683.378 L1483.62 683.378 L1483.07 683.378 L1482.51 683.378 L1481.95 683.378 L1481.39 683.378 L1480.83 683.378 L1480.27 683.378 L1479.71 683.378 L1479.15 683.378 L1478.59 683.378 L1478.03 683.378 L1477.47 683.378 L1476.91 683.378 L1476.35 683.378 L1475.79 683.378 L1475.24 683.378 L1474.68 683.378 L1474.12 683.378 L1473.56 683.378 L1473 683.378 L1472.44 683.378 L1471.88 683.378 L1471.32 683.378 L1470.76 683.378 L1470.2 683.378 L1469.64 683.378 L1469.08 683.378 L1468.52 683.378 L1467.97 683.378 L1467.41 683.378 L1466.85 683.378 L1466.29 683.378 L1465.73 683.378 L1465.17 683.378 L1464.61 683.378 L1464.05 683.378 L1463.49 683.378 L1462.93 683.378 L1462.37 683.378 L1461.81 683.378 L1461.25 683.378 L1460.7 683.378 L1460.14 683.378 L1459.58 683.378 L1459.02 683.378 L1458.46 683.378 L1457.9 683.378 L1457.34 683.378 L1456.78 683.378 L1456.22 683.378 L1455.66 683.378 L1455.1 683.378 L1454.54 683.378 L1453.98 683.378 L1453.42 683.378 L1452.87 683.378 L1452.31 683.378 L1451.75 683.378 L1451.19 683.378 L1450.63 683.378 L1450.07 683.378 L1449.51 683.378 L1448.95 683.378 L1448.39 683.378 L1447.83 683.378 L1447.27 683.378 L1446.71 683.378 L1446.15 683.378 L1445.6 683.378 L1445.04 683.378 L1444.48 683.378 L1443.92 683.378 L1443.36 683.378 L1442.8 683.378 L1442.24 683.378 L1441.68 683.378 L1441.12 683.378 L1440.56 683.378 L1440 683.378 L1439.44 683.378 L1438.88 683.378 L1438.33 683.378 L1437.77 683.378 L1437.21 683.378 L1436.65 683.378 L1436.09 683.378 L1435.53 683.378 L1434.97 683.378 L1434.41 683.378 L1433.85 683.378 L1433.29 683.378 L1432.73 683.378 L1432.17 683.378 L1431.61 683.378 L1431.05 683.378 L1430.5 683.378 L1429.94 683.378 L1429.38 683.378 L1428.82 683.378 L1428.26 683.378 L1427.7 683.378 L1427.14 683.378 L1426.58 683.378 L1426.02 683.378 L1425.46 683.378 L1424.9 683.378 L1424.34 683.378 L1423.78 683.378 L1423.23 683.378 L1422.67 683.378 L1422.11 683.378 L1421.55 683.378 L1420.99 683.378 L1420.43 683.378 L1419.87 683.378 L1419.31 683.378 L1418.75 683.378 L1418.19 683.378 L1417.63 683.378 L1417.07 683.378 L1416.51 683.378 L1415.95 683.378 L1415.4 683.378 L1414.84 683.378 L1414.28 683.378 L1413.72 683.378 L1413.16 683.378 L1412.6 683.378 L1412.04 683.378 L1411.48 683.378 L1410.92 683.378 L1410.36 683.378 L1409.8 683.378 L1409.24 683.378 L1408.68 683.378 L1408.13 683.378 L1407.57 683.378 L1407.01 683.378 L1406.45 683.378 L1405.89 683.378 L1405.33 683.378 L1404.77 683.378 L1404.21 683.378 L1403.65 683.378 L1403.09 683.378 L1402.53 683.378 L1401.97 683.378 L1401.41 683.378 L1400.86 683.378 L1400.3 683.378 L1399.74 683.378 L1399.18 683.378 L1398.62 683.378 L1398.06 683.378 L1397.5 683.378 L1396.94 683.378 L1396.38 683.378 L1395.82 683.378 L1395.26 683.378 L1394.7 683.378 L1394.14 683.378 L1393.58 683.378 L1393.03 683.378 L1392.47 683.378 L1391.91 683.378 L1391.35 683.378 L1390.79 683.378 L1390.23 683.378 L1389.67 683.378 L1389.11 683.378 L1388.55 683.378 L1387.99 683.378 L1387.43 683.378 L1386.87 683.378 L1386.31 683.378 L1385.76 683.378 L1385.2 683.378 L1384.64 683.378 L1384.08 683.378 L1383.52 683.378 L1382.96 683.378 L1382.4 683.378 L1381.84 683.378 L1381.28 683.378 L1380.72 683.378 L1380.16 683.378 L1379.6 683.378 L1379.04 683.378 L1378.49 683.378 L1377.93 683.378 L1377.37 683.378 L1376.81 683.378 L1376.25 683.378 L1375.69 683.378 L1375.13 683.378 L1374.57 683.378 L1374.01 683.378 L1373.45 683.378 L1372.89 683.378 L1372.33 683.378 L1371.77 683.378 L1371.21 683.378 L1370.66 683.378 L1370.1 683.378 L1369.54 683.378 L1368.98 683.378 L1368.42 683.378 L1367.86 683.378 L1367.3 683.378 L1366.74 683.378 L1366.18 683.378 L1365.62 683.378 L1365.06 683.378 L1364.5 683.378 L1363.94 683.378 L1363.39 683.378 L1362.83 683.378 L1362.27 683.378 L1361.71 683.378 L1361.15 683.378 L1360.59 683.378 L1360.03 683.378 L1359.47 683.378 L1358.91 683.378 L1358.35 683.378 L1357.79 683.378 L1357.23 683.378 L1356.67 683.378 L1356.12 683.378 L1355.56 683.378 L1355 683.378 L1354.44 683.378 L1353.88 683.378 L1353.32 683.378 L1352.76 683.378 L1352.2 683.378 L1351.64 683.378 L1351.08 683.378 L1350.52 683.378 L1349.96 683.378 L1349.4 683.378 L1348.84 683.378 L1348.29 683.378 L1347.73 683.378 L1347.17 683.378 L1346.61 683.378 L1346.05 683.378 L1345.49 683.378 L1344.93 683.378 L1344.37 683.378 L1343.81 683.378 L1343.25 683.378 L1342.69 683.378 L1342.13 683.378 L1341.57 683.378 L1341.02 683.378 L1340.46 683.378 L1339.9 683.378 L1339.34 683.378 L1338.78 683.378 L1338.22 683.378 L1337.66 683.378 L1337.1 683.378 L1336.54 683.378 L1335.98 683.378 L1335.42 683.378 L1334.86 683.378 L1334.3 683.378 L1333.75 683.378 L1333.19 683.378 L1332.63 683.378 L1332.07 683.378 L1331.51 683.378 L1330.95 683.378 L1330.39 683.378 L1329.83 683.378 L1329.27 683.378 L1328.71 683.378 L1328.15 683.378 L1327.59 683.378 L1327.03 683.378 L1326.47 683.378 L1325.92 683.378 L1325.36 683.378 L1324.8 683.378 L1324.24 683.378 L1323.68 683.378 L1323.12 683.378 L1322.56 683.378 L1322 683.378 L1321.44 683.378 L1320.88 683.378 L1320.32 683.378 L1319.76 683.378 L1319.2 683.378 L1318.65 683.378 L1318.09 683.378 L1317.53 683.378 L1316.97 683.378 L1316.41 683.378 L1315.85 683.378 L1315.29 683.378 L1314.73 683.378 L1314.17 683.378 L1313.61 683.378 L1313.05 683.378 L1312.49 683.378 L1311.93 683.378 L1311.38 683.378 L1310.82 683.378 L1310.26 683.378 L1309.7 683.378 L1309.14 683.378 L1308.58 683.378 L1308.02 683.378 L1307.46 683.378 L1306.9 683.378 L1306.34 683.378 L1305.78 683.378 L1305.22 683.378 L1304.66 683.378 L1304.1 683.378 L1303.55 683.378 L1302.99 683.378 L1302.43 683.378 L1301.87 683.378 L1301.31 683.378 L1300.75 683.378 L1300.19 683.378 L1299.63 683.378 L1299.07 683.378 L1298.51 683.378 L1297.95 683.378 L1297.39 683.378 L1296.83 683.378 L1296.28 683.378 L1295.72 683.378 L1295.16 683.378 L1294.6 683.378 L1294.04 683.378 L1293.48 683.378 L1292.92 683.378 L1292.36 683.378 L1291.8 683.378 L1291.24 683.378 L1290.68 683.378 L1290.12 683.378 L1289.56 683.378 L1289 683.378 L1288.45 683.378 L1287.89 683.378 L1287.33 683.378 L1286.77 683.378 L1286.21 683.378 L1285.65 683.378 L1285.09 683.378 L1284.53 683.378 L1283.97 683.378 L1283.41 683.378 L1282.85 683.378 L1282.29 683.378 L1281.73 683.378 L1281.18 683.378 L1280.62 683.378 L1280.06 683.378 L1279.5 683.378 L1278.94 683.378 L1278.38 683.378 L1277.82 683.378 L1277.26 683.378 L1276.7 683.378 L1276.14 683.378 L1275.58 683.378 L1275.02 683.378 L1274.46 683.378 L1273.91 683.378 L1273.35 683.378 L1272.79 683.378 L1272.23 683.378 L1271.67 683.378 L1271.11 683.378 L1270.55 683.378 L1269.99 683.378 L1269.43 683.378 L1268.87 683.378 L1268.31 683.378 L1267.75 683.378 L1267.19 683.378 L1266.63 683.378 L1266.08 683.378 L1265.52 683.378 L1264.96 683.378 L1264.4 683.378 L1263.84 683.378 L1263.28 683.378 L1262.72 683.378 L1262.16 683.378 L1261.6 683.378 L1261.04 683.378 L1260.48 683.378 L1259.92 683.378 L1259.36 683.378 L1258.81 683.378 L1258.25 683.378 L1257.69 683.378 L1257.13 683.378 L1256.57 683.378 L1256.01 683.378 L1255.45 683.378 L1254.89 683.378 L1254.33 683.378 L1253.77 683.378 L1253.21 683.378 L1252.65 683.378 L1252.09 683.378 L1251.54 683.378 L1250.98 683.378 L1250.42 683.378 L1249.86 683.378 L1249.3 683.378 L1248.74 683.378 L1248.18 683.378 L1247.62 683.378 L1247.06 683.378 L1246.5 683.378 L1245.94 683.378 L1245.38 683.378 L1244.82 683.378 L1244.26 683.378 L1243.71 683.378 L1243.15 683.378 L1242.59 683.378 L1242.03 683.378 L1241.47 683.378 L1240.91 683.378 L1240.35 683.378 L1239.79 683.378 L1239.23 683.378 L1238.67 683.378 L1238.11 683.378 L1237.55 683.378 L1236.99 683.378 L1236.44 683.378 L1235.88 683.378 L1235.32 683.378 L1234.76 683.378 L1234.2 683.378 L1233.64 683.378 L1233.08 683.378 L1232.52 683.378 L1231.96 683.378 L1231.4 683.378 L1230.84 683.378 L1230.28 683.378 L1229.72 683.378 L1229.17 683.378 L1228.61 683.378 L1228.05 683.378 L1227.49 683.378 L1226.93 683.378 L1226.37 683.378 L1225.81 683.378 L1225.25 683.378 L1224.69 683.378 L1224.13 683.378 L1223.57 683.378 L1223.01 683.378 L1222.45 683.378 L1221.89 683.378 L1221.34 683.378 L1220.78 683.378 L1220.22 683.378 L1219.66 683.378 L1219.1 683.378 L1218.54 683.378 L1217.98 683.378 L1217.42 683.378 L1216.86 683.378 L1216.3 683.378 L1215.74 683.378 L1215.18 683.378 L1214.62 683.378 L1214.07 683.378 L1213.51 683.378 L1212.95 683.378 L1212.39 683.378 L1211.83 683.378 L1211.27 683.378 L1210.71 683.378 L1210.15 683.378 L1209.59 683.378 L1209.03 683.378 L1208.47 683.378 L1207.91 683.378 L1207.35 683.378 L1206.8 683.378 L1206.24 683.378 L1205.68 683.378 L1205.12 683.378 L1204.56 683.378 L1204 683.378 L1203.44 683.378 L1202.88 683.378 L1202.32 683.378 L1201.76 683.378 L1201.2 683.378 L1200.64 683.378 L1200.08 683.378 L1199.52 683.378 L1198.97 683.378 L1198.41 683.378 L1197.85 683.378 L1197.29 683.378 L1196.73 683.378 L1196.17 683.378 L1195.61 683.378 L1195.05 683.378 L1194.49 683.378 L1193.93 683.378 L1193.37 683.378 L1192.81 683.378 L1192.25 683.378 L1191.7 683.378 L1191.14 683.378 L1190.58 683.378 L1190.02 683.378 L1189.46 683.378 L1188.9 683.378 L1188.34 683.378 L1187.78 683.378 L1187.22 683.378 L1186.66 683.378 L1186.1 683.378 L1185.54 683.378 L1184.98 683.378 L1184.43 683.378 L1183.87 683.378 L1183.31 683.378 L1182.75 683.378 L1182.19 683.378 L1181.63 683.378 L1181.07 683.378 L1180.51 683.378 L1179.95 683.378 L1179.39 683.378 L1178.83 683.378 L1178.27 683.378 L1177.71 683.378 L1177.15 683.378 L1176.6 683.378 L1176.04 683.378 L1175.48 683.378 L1174.92 683.378 L1174.36 683.378 L1173.8 683.378 L1173.24 683.378 L1172.68 683.378 L1172.12 683.378 L1171.56 683.378 L1171 683.378 L1170.44 683.378 L1169.88 683.378 L1169.33 683.378 L1168.77 683.378 L1168.21 683.378 L1167.65 683.378 L1167.09 683.378 L1166.53 683.378 L1165.97 683.378 L1165.41 683.378 L1164.85 683.378 L1164.29 683.378 L1163.73 683.378 L1163.17 683.378 L1162.61 683.378 L1162.05 683.378 L1161.5 683.378 L1160.94 683.378 L1160.38 683.378 L1159.82 683.378 L1159.26 683.378 L1158.7 683.378 L1158.14 683.378 L1157.58 683.378 L1157.02 683.378 L1156.46 683.378 L1155.9 683.378 L1155.34 683.378 L1154.78 683.378 L1154.23 683.378 L1153.67 683.378 L1153.11 683.378 L1152.55 683.378 L1151.99 683.378 L1151.43 683.378 L1150.87 683.378 L1150.31 683.378 L1149.75 683.378 L1149.19 683.378 L1148.63 683.378 L1148.07 683.378 L1147.51 683.378 L1146.96 683.378 L1146.4 683.378 L1145.84 683.378 L1145.28 683.378 L1144.72 683.378 L1144.16 683.378 L1143.6 683.378 L1143.04 683.378 L1142.48 683.378 L1141.92 683.378 L1141.36 683.378 L1140.8 683.378 L1140.24 683.378 L1139.68 683.378 L1139.13 683.378 L1138.57 683.378 L1138.01 683.378 L1137.45 683.378 L1136.89 683.378 L1136.33 683.378 L1135.77 683.378 L1135.21 683.378 L1134.65 683.378 L1134.09 683.378 L1133.53 683.378 L1132.97 683.378 L1132.41 683.378 L1131.86 683.378 L1131.3 683.378 L1130.74 683.378 L1130.18 683.378 L1129.62 683.378 L1129.06 683.378 L1128.5 683.378 L1127.94 683.378 L1127.38 683.378 L1126.82 683.378 L1126.26 683.378 L1125.7 683.378 L1125.14 683.378 L1124.59 683.378 L1124.03 683.378 L1123.47 683.378 L1122.91 683.378 L1122.35 683.378 L1121.79 683.378 L1121.23 683.378 L1120.67 683.378 L1120.11 683.378 L1119.55 683.378 L1118.99 683.378 L1118.43 683.378 L1117.87 683.378 L1117.31 683.378 L1116.76 683.378 L1116.2 683.378 L1115.64 683.378 L1115.08 683.378 L1114.52 683.378 L1113.96 683.378 L1113.4 683.378 L1112.84 683.378 L1112.28 683.378 L1111.72 683.378 L1111.16 683.378 L1110.6 683.378 L1110.04 683.378 L1109.49 683.378 L1108.93 683.378 L1108.37 683.378 L1107.81 683.378 L1107.25 683.378 L1106.69 683.378 L1106.13 683.378 L1105.57 683.378 L1105.01 683.378 L1104.45 683.378 L1103.89 683.378 L1103.33 683.378 L1102.77 683.378 L1102.22 683.378 L1101.66 683.378 L1101.1 683.378 L1100.54 683.378 L1099.98 683.378 L1099.42 683.378 L1098.86 683.378 L1098.3 683.378 L1097.74 683.378 L1097.18 683.378 L1096.62 683.378 L1096.06 683.378 L1095.5 683.378 L1094.94 683.378 L1094.39 683.378 L1093.83 683.378 L1093.27 683.378 L1092.71 683.378 L1092.15 683.378 L1091.59 683.378 L1091.03 683.378 L1090.47 683.378 L1089.91 683.378 L1089.35 683.378 L1088.79 683.378 L1088.23 683.378 L1087.67 683.378 L1087.12 683.378 L1086.56 683.378 L1086 683.378 L1085.44 683.378 L1084.88 683.378 L1084.32 683.378 L1083.76 683.378 L1083.2 683.378 L1082.64 683.378 L1082.08 683.378 L1081.52 683.378 L1080.96 683.378 L1080.4 683.378 L1079.85 683.378 L1079.29 683.378 L1078.73 683.378 L1078.17 683.378 L1077.61 683.378 L1077.05 683.378 L1076.49 683.378 L1075.93 683.378 L1075.37 683.378 L1074.81 683.378 L1074.25 683.378 L1073.69 683.378 L1073.13 683.378 L1072.57 683.378 L1072.02 683.378 L1071.46 683.378 L1070.9 683.378 L1070.34 683.378 L1069.78 683.378 L1069.22 683.378 L1068.66 683.378 L1068.1 683.378 L1067.54 683.378 L1066.98 683.378 L1066.42 683.378 L1065.86 683.378 L1065.3 683.378 L1064.75 683.378 L1064.19 683.378 L1063.63 683.378 L1063.07 683.378 L1062.51 683.378 L1061.95 683.378 L1061.39 683.378 L1060.83 683.378 L1060.27 683.378 L1059.71 683.378 L1059.15 683.378 L1058.59 683.378 L1058.03 683.378 L1057.48 683.378 L1056.92 683.378 L1056.36 683.378 L1055.8 683.378 L1055.24 683.378 L1054.68 683.378 L1054.12 683.378 L1053.56 683.378 L1053 683.378 L1052.44 683.378 L1051.88 683.378 L1051.32 683.378 L1050.76 683.378 L1050.2 683.378 L1049.65 683.378 L1049.09 683.378 L1048.53 683.378 L1047.97 683.378 L1047.41 683.378 L1046.85 683.378 L1046.29 683.378 L1045.73 683.378 L1045.17 683.378 L1044.61 683.378 L1044.05 683.378 L1043.49 683.378 L1042.93 683.378 L1042.38 683.378 L1041.82 683.378 L1041.26 683.378 L1040.7 683.378 L1040.14 683.378 L1039.58 683.378 L1039.02 683.378 L1038.46 683.378 L1037.9 683.378 L1037.34 683.378 L1036.78 683.378 L1036.22 683.378 L1035.66 683.378 L1035.1 683.378 L1034.55 683.378 L1033.99 683.378 L1033.43 683.378 L1032.87 683.378 L1032.31 683.378 L1031.75 683.378 L1031.19 683.378 L1030.63 683.378 L1030.07 683.378 L1029.51 683.378 L1028.95 683.378 L1028.39 683.378 L1027.83 683.378 L1027.28 683.378 L1026.72 683.378 L1026.16 683.378 L1025.6 683.378 L1025.04 683.378 L1024.48 683.378 L1023.92 683.378 L1023.36 683.378 L1022.8 683.378 L1022.24 683.378 L1021.68 683.378 L1021.12 683.378 L1020.56 683.378 L1020.01 683.378 L1019.45 683.378 L1018.89 683.378 L1018.33 683.378 L1017.77 683.378 L1017.21 683.378 L1016.65 683.378 L1016.09 683.378 L1015.53 683.378 L1014.97 683.378 L1014.41 683.378 L1013.85 683.378 L1013.29 683.378 L1012.73 683.378 L1012.18 683.378 L1011.62 683.378 L1011.06 683.378 L1010.5 683.378 L1009.94 683.378 L1009.38 683.378 L1008.82 683.378 L1008.26 683.378 L1007.7 683.378 L1007.14 683.378 L1006.58 683.378 L1006.02 683.378 L1005.46 683.378 L1004.91 683.378 L1004.35 683.378 L1003.79 683.378 L1003.23 683.378 L1002.67 683.378 L1002.11 683.378 L1001.55 683.378 L1000.99 683.378 L1000.43 683.378 L999.872 683.378 L999.313 683.378 L998.754 683.378 L998.194 683.378 L997.635 683.378 L997.076 683.378 L996.517 683.378 L995.957 683.378 L995.398 683.378 L994.839 683.378 L994.28 683.378 L993.72 683.378 L993.161 683.378 L992.602 683.378 L992.043 683.378 L991.483 683.378 L990.924 683.378 L990.365 683.378 L989.806 683.378 L989.246 683.378 L988.687 683.378 L988.128 683.378 L987.569 683.378 L987.009 683.378 L986.45 683.378 L985.891 683.378 L985.332 683.378 L984.772 683.378 L984.213 683.378 L983.654 683.378 L983.095 683.378 L982.535 683.378 L981.976 683.378 L981.417 683.378 L980.858 683.378 L980.298 683.378 L979.739 683.378 L979.18 683.378 L978.621 683.378 L978.061 683.378 L977.502 683.378 L976.943 683.378 L976.384 683.378 L975.824 683.378 L975.265 683.378 L974.706 683.378 L974.147 683.378 L973.587 683.378 L973.028 683.378 L972.469 683.378 L971.91 683.378 L971.35 683.378 L970.791 683.378 L970.232 683.378 L969.673 683.378 L969.113 683.378 L968.554 683.378 L967.995 683.378 L967.436 683.378 L966.876 683.378 L966.317 683.378 L965.758 683.378 L965.199 683.378 L964.639 683.378 L964.08 683.378 L963.521 683.378 L962.962 683.378 L962.402 683.378 L961.843 683.378 L961.284 683.378 L960.725 683.378 L960.165 683.378 L959.606 683.378 L959.047 683.378 L958.488 683.378 L957.928 683.378 L957.369 683.378 L956.81 683.378 L956.251 683.378 L955.691 683.378 L955.132 683.378 L954.573 683.378 L954.014 683.378 L953.454 683.378 L952.895 683.378 L952.336 683.378 L951.777 683.378 L951.217 683.378 L950.658 683.378 L950.099 683.378 L949.54 683.378 L948.98 683.378 L948.421 683.378 L947.862 683.378 L947.303 683.378 L946.743 683.378 L946.184 683.378 L945.625 683.378 L945.066 683.378 L944.506 683.378 L943.947 683.378 L943.388 683.378 L942.829 683.378 L942.269 683.378 L941.71 683.378 L941.151 683.378 L940.592 683.378 L940.032 683.378 L939.473 683.378 L938.914 683.378 L938.355 683.378 L937.795 683.378 L937.236 683.378 L936.677 683.378 L936.118 683.378 L935.558 683.378 L934.999 683.378 L934.44 683.378 L933.881 683.378 L933.321 683.378 L932.762 683.378 L932.203 683.378 L931.644 683.378 L931.084 683.378 L930.525 683.378 L929.966 683.378 L929.406 683.378 L928.847 683.378 L928.288 683.378 L927.729 683.378 L927.169 683.378 L926.61 683.378 L926.051 683.378 L925.492 683.378 L924.932 683.378 L924.373 683.378 L923.814 683.378 L923.255 683.378 L922.695 683.378 L922.136 683.378 L921.577 683.378 L921.018 683.378 L920.458 683.378 L919.899 683.378 L919.34 683.378 L918.781 683.378 L918.221 683.378 L917.662 683.378 L917.103 683.378 L916.544 683.378 L915.984 683.378 L915.425 683.378 L914.866 683.378 L914.307 683.378 L913.747 683.378 L913.188 683.378 L912.629 683.378 L912.07 683.378 L911.51 683.378 L910.951 683.378 L910.392 683.378 L909.833 683.378 L909.273 683.378 L908.714 683.378 L908.155 683.378 L907.596 683.378 L907.036 683.378 L906.477 683.378 L905.918 683.378 L905.359 683.378 L904.799 683.378 L904.24 683.378 L903.681 683.378 L903.122 683.378 L902.562 683.378 L902.003 683.378 L901.444 683.378 L900.885 683.378 L900.325 683.378 L899.766 683.378 L899.207 683.378 L898.648 683.378 L898.088 683.378 L897.529 683.378 L896.97 683.378 L896.411 683.378 L895.851 683.378 L895.292 683.378 L894.733 683.378 L894.174 683.378 L893.614 683.378 L893.055 683.378 L892.496 683.378 L891.937 683.378 L891.377 683.378 L890.818 683.378 L890.259 683.378 L889.7 683.378 L889.14 683.378 L888.581 683.378 L888.022 683.378 L887.463 683.378 L886.903 683.378 L886.344 683.378 L885.785 683.378 L885.226 683.378 L884.666 683.378 L884.107 683.378 L883.548 683.378 L882.989 683.378 L882.429 683.378 L881.87 683.378 L881.311 683.378 L880.752 683.378 L880.192 683.378 L879.633 683.378 L879.074 683.378 L878.515 683.378 L877.955 683.378 L877.396 683.378 L876.837 683.378 L876.278 683.378 L875.718 683.378 L875.159 683.378 L874.6 683.378 L874.041 683.378 L873.481 683.378 L872.922 683.378 L872.363 683.378 L871.804 683.378 L871.244 683.378 L870.685 683.378 L870.126 683.378 L869.567 683.378 L869.007 683.378 L868.448 683.378 L867.889 683.378 L867.33 683.378 L866.77 683.378 L866.211 683.378 L865.652 683.378 L865.093 683.378 L864.533 683.378 L863.974 683.378 L863.415 683.378 L862.856 683.378 L862.296 683.378 L861.737 683.378 L861.178 683.378 L860.619 683.378 L860.059 683.378 L859.5 683.378 L858.941 683.378 L858.382 683.378 L857.822 683.378 L857.263 683.378 L856.704 683.378 L856.145 683.378 L855.585 683.378 L855.026 683.378 L854.467 683.378 L853.908 683.378 L853.348 683.378 L852.789 683.378 L852.23 683.378 L851.671 683.378 L851.111 683.378 L850.552 683.378 L849.993 683.378 L849.434 683.378 L848.874 683.378 L848.315 683.378 L847.756 683.378 L847.197 683.378 L846.637 683.378 L846.078 683.378 L845.519 683.378 L844.96 683.378 L844.4 683.378 L843.841 683.378 L843.282 683.378 L842.723 683.378 L842.163 683.378 L841.604 683.378 L841.045 683.378 L840.486 683.378 L839.926 683.378 L839.367 683.378 L838.808 683.378 L838.249 683.378 L837.689 683.378 L837.13 683.378 L836.571 683.378 L836.012 683.378 L835.452 683.378 L834.893 683.378 L834.334 683.378 L833.775 683.378 L833.215 683.378 L832.656 683.378 L832.097 683.378 L831.538 683.378 L830.978 683.378 L830.419 683.378 L829.86 683.378 L829.301 683.378 L828.741 683.378 L828.182 683.378 L827.623 683.378 L827.064 683.378 L826.504 683.378 L825.945 683.378 L825.386 683.378 L824.827 683.378 L824.267 683.378 L823.708 683.378 L823.149 683.378 L822.59 683.378 L822.03 683.378 L821.471 683.378 L820.912 683.378 L820.353 683.378 L819.793 683.378 L819.234 683.378 L818.675 683.378 L818.116 683.378 L817.556 683.378 L816.997 683.378 L816.438 683.378 L815.879 683.378 L815.319 683.378 L814.76 683.378 L814.201 683.378 L813.642 683.378 L813.082 683.378 L812.523 683.378 L811.964 683.378 L811.405 683.378 L810.845 683.378 L810.286 683.378 L809.727 683.378 L809.168 683.378 L808.608 683.378 L808.049 683.378 L807.49 683.378 L806.931 683.378 L806.371 683.378 L805.812 683.378 L805.253 683.378 L804.693 683.378 L804.134 683.378 L803.575 683.378 L803.016 683.378 L802.456 683.378 L801.897 683.378 L801.338 683.378 L800.779 683.378 L800.219 683.378 L799.66 683.378 L799.101 683.378 L798.542 683.378 L797.982 683.378 L797.423 683.378 L796.864 683.378 L796.305 683.378 L795.745 683.378 L795.186 683.378 L794.627 683.378 L794.068 683.378 L793.508 683.378 L792.949 683.378 L792.39 683.378 L791.831 683.378 L791.271 683.378 L790.712 683.378 L790.153 683.378 L789.594 683.378 L789.034 683.378 L788.475 683.378 L787.916 683.378 L787.357 683.378 L786.797 683.378 L786.238 683.378 L785.679 683.378 L785.12 683.378 L784.56 683.378 L784.001 683.378 L783.442 683.378 L782.883 683.378 L782.323 683.378 L781.764 683.378 L781.205 683.378 L780.646 683.378 L780.086 683.378 L779.527 683.378 L778.968 683.378 L778.409 683.378 L777.849 683.378 L777.29 683.378 L776.731 683.378 L776.172 683.378 L775.612 683.378 L775.053 683.378 L774.494 683.378 L773.935 683.378 L773.375 683.378 L772.816 683.378 L772.257 683.378 L771.698 683.378 L771.138 683.378 L770.579 683.378 L770.02 683.378 L769.461 683.378 L768.901 683.378 L768.342 683.378 L767.783 683.378 L767.224 683.378 L766.664 683.378 L766.105 683.378 L765.546 683.378 L764.987 683.378 L764.427 683.378 L763.868 683.378 L763.309 683.378 L762.75 683.378 L762.19 683.378 L761.631 683.378 L761.072 683.378 L760.513 683.378 L759.953 683.378 L759.394 683.378 L758.835 683.378 L758.276 683.378 L757.716 683.378 L757.157 683.378 L756.598 683.378 L756.039 683.378 L755.479 683.378 L754.92 683.378 L754.361 683.378 L753.802 683.378 L753.242 683.378 L752.683 683.378 L752.124 683.378 L751.565 683.378 L751.005 683.378 L750.446 683.378 L749.887 683.378 L749.328 683.378 L748.768 683.378 L748.209 683.378 L747.65 683.378 L747.091 683.378 L746.531 683.378 L745.972 683.378 L745.413 683.378 L744.854 683.378 L744.294 683.378 L743.735 683.378 L743.176 683.378 L742.617 683.378 L742.057 683.378 L741.498 683.378 L740.939 683.378 L740.38 683.378 L739.82 683.378 L739.261 683.378 L738.702 683.378 L738.143 683.378 L737.583 683.378 L737.024 683.378 L736.465 683.378 L735.906 683.378 L735.346 683.378 L734.787 683.378 L734.228 683.378 L733.669 683.378 L733.109 683.378 L732.55 683.378 L731.991 683.378 L731.432 683.378 L730.872 683.378 L730.313 683.378 L729.754 683.378 L729.195 683.378 L728.635 683.378 L728.076 683.378 L727.517 683.378 L726.958 683.378 L726.398 683.378 L725.839 683.378 L725.28 683.378 L724.721 683.378 L724.161 683.378 L723.602 683.378 L723.043 683.378 L722.484 683.378 L721.924 683.378 L721.365 683.378 L720.806 683.378 L720.247 683.378  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip113)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,684.181 720.806,684.181 721.365,684.181 721.924,684.181 722.484,684.181 723.043,684.181 723.602,684.181 724.161,684.181 724.721,684.181 725.28,684.181 725.839,684.181 726.398,684.181 726.958,684.181 727.517,684.181 728.076,684.181 728.635,684.181 729.195,684.181 729.754,684.181 730.313,684.181 730.872,684.181 731.432,684.181 731.991,684.181 732.55,684.181 733.109,684.181 733.669,684.181 734.228,684.181 734.787,684.181 735.346,684.181 735.906,684.181 736.465,684.181 737.024,684.181 737.583,684.181 738.143,684.181 738.702,684.181 739.261,684.181 739.82,684.181 740.38,684.181 740.939,684.181 741.498,684.181 742.057,684.181 742.617,684.181 743.176,684.181 743.735,684.181 744.294,684.181 744.854,684.181 745.413,684.181 745.972,684.181 746.531,684.181 747.091,684.181 747.65,684.181 748.209,684.181 748.768,684.181 749.328,684.181 749.887,684.181 750.446,684.181 751.005,684.181 751.565,684.181 752.124,684.181 752.683,684.181 753.242,684.181 753.802,684.181 754.361,684.181 754.92,684.181 755.479,684.181 756.039,684.181 756.598,684.181 757.157,684.181 757.716,684.181 758.276,684.181 758.835,684.181 759.394,684.181 759.953,684.181 760.513,684.181 761.072,684.181 761.631,684.181 762.19,684.181 762.75,684.181 763.309,684.181 763.868,684.181 764.427,684.181 764.987,684.181 765.546,684.181 766.105,684.181 766.664,684.181 767.224,684.181 767.783,684.181 768.342,684.181 768.901,684.181 769.461,684.181 770.02,684.181 770.579,684.181 771.138,684.181 771.698,684.181 772.257,684.181 772.816,684.181 773.375,684.181 773.935,684.181 774.494,684.181 775.053,684.181 775.612,684.181 776.172,684.181 776.731,684.181 777.29,684.181 777.849,684.181 778.409,684.181 778.968,684.181 779.527,684.181 780.086,684.181 780.646,684.181 781.205,684.181 781.764,684.181 782.323,684.181 782.883,684.181 783.442,684.181 784.001,684.181 784.56,684.181 785.12,684.181 785.679,684.181 786.238,684.181 786.797,684.181 787.357,684.181 787.916,684.181 788.475,684.181 789.034,684.181 789.594,684.181 790.153,684.181 790.712,684.181 791.271,684.181 791.831,684.181 792.39,684.181 792.949,684.181 793.508,684.181 794.068,684.181 794.627,684.181 795.186,684.181 795.745,684.181 796.305,684.181 796.864,684.181 797.423,684.181 797.982,684.181 798.542,684.181 799.101,684.181 799.66,684.181 800.219,684.181 800.779,684.181 801.338,684.181 801.897,684.181 802.456,684.181 803.016,684.181 803.575,684.181 804.134,684.181 804.693,684.181 805.253,684.181 805.812,684.181 806.371,684.181 806.931,684.181 807.49,684.181 808.049,684.181 808.608,684.181 809.168,684.181 809.727,684.181 810.286,684.181 810.845,684.181 811.405,684.181 811.964,684.181 812.523,684.181 813.082,684.181 813.642,684.181 814.201,684.181 814.76,684.181 815.319,684.181 815.879,684.181 816.438,684.181 816.997,684.181 817.556,684.181 818.116,684.181 818.675,684.181 819.234,684.181 819.793,684.181 820.353,684.181 820.912,684.181 821.471,684.181 822.03,684.181 822.59,684.181 823.149,684.181 823.708,684.181 824.267,684.181 824.827,684.181 825.386,684.181 825.945,684.181 826.504,684.181 827.064,684.181 827.623,684.181 828.182,684.181 828.741,684.181 829.301,684.181 829.86,684.181 830.419,684.181 830.978,684.181 831.538,684.181 832.097,684.181 832.656,684.181 833.215,684.181 833.775,684.181 834.334,684.181 834.893,684.181 835.452,684.181 836.012,684.181 836.571,684.181 837.13,684.181 837.689,684.181 838.249,684.181 838.808,684.181 839.367,684.181 839.926,684.181 840.486,684.181 841.045,684.181 841.604,684.181 842.163,684.181 842.723,684.181 843.282,684.181 843.841,684.181 844.4,684.181 844.96,684.181 845.519,684.181 846.078,684.181 846.637,684.181 847.197,684.181 847.756,684.181 848.315,684.181 848.874,684.181 849.434,684.181 849.993,684.181 850.552,684.181 851.111,684.181 851.671,684.181 852.23,684.181 852.789,684.181 853.348,684.181 853.908,684.181 854.467,684.181 855.026,684.181 855.585,684.181 856.145,684.181 856.704,684.181 857.263,684.181 857.822,684.181 858.382,684.181 858.941,684.181 859.5,684.181 860.059,684.181 860.619,684.181 861.178,684.181 861.737,684.181 862.296,684.181 862.856,684.181 863.415,684.181 863.974,684.181 864.533,684.181 865.093,684.181 865.652,684.181 866.211,684.181 866.77,684.181 867.33,684.181 867.889,684.181 868.448,684.181 869.007,684.181 869.567,684.181 870.126,684.181 870.685,684.181 871.244,684.181 871.804,684.181 872.363,684.181 872.922,684.181 873.481,684.181 874.041,684.181 874.6,684.181 875.159,684.181 875.718,684.181 876.278,684.181 876.837,684.181 877.396,684.181 877.955,684.181 878.515,684.181 879.074,684.181 879.633,684.181 880.192,684.181 880.752,684.181 881.311,684.181 881.87,684.181 882.429,684.181 882.989,684.181 883.548,684.181 884.107,684.181 884.666,684.181 885.226,684.181 885.785,684.181 886.344,684.181 886.903,684.181 887.463,684.181 888.022,684.181 888.581,684.181 889.14,684.181 889.7,684.181 890.259,684.181 890.818,684.181 891.377,684.181 891.937,684.181 892.496,684.181 893.055,684.181 893.614,684.181 894.174,684.181 894.733,684.181 895.292,684.181 895.851,684.181 896.411,684.181 896.97,684.181 897.529,684.181 898.088,684.181 898.648,684.181 899.207,684.181 899.766,684.181 900.325,684.181 900.885,684.181 901.444,684.181 902.003,684.181 902.562,684.181 903.122,684.181 903.681,684.181 904.24,684.181 904.799,684.181 905.359,684.181 905.918,684.181 906.477,684.181 907.036,684.181 907.596,684.181 908.155,684.181 908.714,684.181 909.273,684.181 909.833,684.181 910.392,684.181 910.951,684.181 911.51,684.181 912.07,684.181 912.629,684.181 913.188,684.181 913.747,684.181 914.307,684.181 914.866,684.181 915.425,684.181 915.984,684.181 916.544,684.181 917.103,684.181 917.662,684.181 918.221,684.181 918.781,684.181 919.34,684.181 919.899,684.181 920.458,684.181 921.018,684.181 921.577,684.181 922.136,684.181 922.695,684.181 923.255,684.181 923.814,684.181 924.373,684.181 924.932,684.181 925.492,684.181 926.051,684.181 926.61,684.181 927.169,684.181 927.729,684.181 928.288,684.181 928.847,684.181 929.406,684.181 929.966,684.181 930.525,684.181 931.084,684.181 931.644,684.181 932.203,684.181 932.762,684.181 933.321,684.181 933.881,684.181 934.44,684.181 934.999,684.181 935.558,684.181 936.118,684.181 936.677,684.181 937.236,684.181 937.795,684.181 938.355,684.181 938.914,684.181 939.473,684.181 940.032,684.181 940.592,684.181 941.151,684.181 941.71,684.181 942.269,684.181 942.829,684.181 943.388,684.181 943.947,684.181 944.506,684.181 945.066,684.181 945.625,684.181 946.184,684.181 946.743,684.181 947.303,684.181 947.862,684.181 948.421,684.181 948.98,684.181 949.54,684.181 950.099,684.181 950.658,684.181 951.217,684.181 951.777,684.181 952.336,684.181 952.895,684.181 953.454,684.181 954.014,684.181 954.573,684.181 955.132,684.181 955.691,684.181 956.251,684.181 956.81,684.181 957.369,684.181 957.928,684.181 958.488,684.181 959.047,684.181 959.606,684.181 960.165,684.181 960.725,684.181 961.284,684.181 961.843,684.181 962.402,684.181 962.962,684.181 963.521,684.181 964.08,684.181 964.639,684.181 965.199,684.181 965.758,684.181 966.317,684.181 966.876,684.181 967.436,684.181 967.995,684.181 968.554,684.181 969.113,684.181 969.673,684.181 970.232,684.181 970.791,684.181 971.35,684.181 971.91,684.181 972.469,684.181 973.028,684.181 973.587,684.181 974.147,684.181 974.706,684.181 975.265,684.181 975.824,684.181 976.384,684.181 976.943,684.181 977.502,684.181 978.061,684.181 978.621,684.181 979.18,684.181 979.739,684.181 980.298,684.181 980.858,684.181 981.417,684.181 981.976,684.181 982.535,684.181 983.095,684.181 983.654,684.181 984.213,684.181 984.772,684.181 985.332,684.181 985.891,684.181 986.45,684.181 987.009,684.181 987.569,684.181 988.128,684.181 988.687,684.181 989.246,684.181 989.806,684.181 990.365,684.181 990.924,684.181 991.483,684.181 992.043,684.181 992.602,684.181 993.161,684.181 993.72,684.181 994.28,684.181 994.839,684.181 995.398,684.181 995.957,684.181 996.517,684.181 997.076,684.181 997.635,684.181 998.194,684.181 998.754,684.181 999.313,684.181 999.872,684.181 1000.43,684.181 1000.99,684.181 1001.55,684.181 1002.11,684.181 1002.67,684.181 1003.23,684.181 1003.79,684.181 1004.35,684.181 1004.91,684.181 1005.46,684.181 1006.02,684.181 1006.58,684.181 1007.14,684.181 1007.7,684.181 1008.26,684.181 1008.82,684.181 1009.38,684.181 1009.94,684.181 1010.5,684.181 1011.06,684.181 1011.62,684.181 1012.18,684.181 1012.73,684.181 1013.29,684.181 1013.85,684.181 1014.41,684.181 1014.97,684.181 1015.53,684.181 1016.09,684.181 1016.65,684.181 1017.21,684.181 1017.77,684.181 1018.33,684.181 1018.89,684.181 1019.45,684.181 1020.01,684.181 1020.56,684.181 1021.12,684.181 1021.68,684.181 1022.24,684.181 1022.8,684.181 1023.36,684.181 1023.92,684.181 1024.48,684.181 1025.04,684.181 1025.6,684.181 1026.16,684.181 1026.72,684.181 1027.28,684.181 1027.83,684.181 1028.39,684.181 1028.95,684.181 1029.51,684.181 1030.07,684.181 1030.63,684.181 1031.19,684.181 1031.75,684.181 1032.31,684.181 1032.87,684.181 1033.43,684.181 1033.99,684.181 1034.55,684.181 1035.1,684.181 1035.66,684.181 1036.22,684.181 1036.78,684.181 1037.34,684.181 1037.9,684.181 1038.46,684.181 1039.02,684.181 1039.58,684.181 1040.14,684.181 1040.7,684.181 1041.26,684.181 1041.82,684.181 1042.38,684.181 1042.93,684.181 1043.49,684.181 1044.05,684.181 1044.61,684.181 1045.17,684.181 1045.73,684.181 1046.29,684.181 1046.85,684.181 1047.41,684.181 1047.97,684.181 1048.53,684.181 1049.09,684.181 1049.65,684.181 1050.2,684.181 1050.76,684.181 1051.32,684.181 1051.88,684.181 1052.44,684.181 1053,684.181 1053.56,684.181 1054.12,684.181 1054.68,684.181 1055.24,684.181 1055.8,684.181 1056.36,684.181 1056.92,684.181 1057.48,684.181 1058.03,684.181 1058.59,684.181 1059.15,684.181 1059.71,684.181 1060.27,684.181 1060.83,684.181 1061.39,684.181 1061.95,684.181 1062.51,684.181 1063.07,684.181 1063.63,684.181 1064.19,684.181 1064.75,684.181 1065.3,684.181 1065.86,684.181 1066.42,684.181 1066.98,684.181 1067.54,684.181 1068.1,684.181 1068.66,684.181 1069.22,684.181 1069.78,684.181 1070.34,684.181 1070.9,684.181 1071.46,684.181 1072.02,684.181 1072.57,684.181 1073.13,684.181 1073.69,684.181 1074.25,684.181 1074.81,684.181 1075.37,684.181 1075.93,684.181 1076.49,684.181 1077.05,684.181 1077.61,684.181 1078.17,684.181 1078.73,684.181 1079.29,684.181 1079.85,684.181 1080.4,684.181 1080.96,684.181 1081.52,684.181 1082.08,684.181 1082.64,684.181 1083.2,684.181 1083.76,684.181 1084.32,684.181 1084.88,684.181 1085.44,684.181 1086,684.181 1086.56,684.181 1087.12,684.181 1087.67,684.181 1088.23,684.181 1088.79,684.181 1089.35,684.181 1089.91,684.181 1090.47,684.181 1091.03,684.181 1091.59,684.181 1092.15,684.181 1092.71,684.181 1093.27,684.181 1093.83,684.181 1094.39,684.181 1094.94,684.181 1095.5,684.181 1096.06,684.181 1096.62,684.181 1097.18,684.181 1097.74,684.181 1098.3,684.181 1098.86,684.181 1099.42,684.181 1099.98,684.181 1100.54,684.181 1101.1,684.181 1101.66,684.181 1102.22,684.181 1102.77,684.181 1103.33,684.181 1103.89,684.181 1104.45,684.181 1105.01,684.181 1105.57,684.181 1106.13,684.181 1106.69,684.181 1107.25,684.181 1107.81,684.181 1108.37,684.181 1108.93,684.181 1109.49,684.181 1110.04,684.181 1110.6,684.181 1111.16,684.181 1111.72,684.181 1112.28,684.181 1112.84,684.181 1113.4,684.181 1113.96,684.181 1114.52,684.181 1115.08,684.181 1115.64,684.181 1116.2,684.181 1116.76,684.181 1117.31,684.181 1117.87,684.181 1118.43,684.181 1118.99,684.181 1119.55,684.181 1120.11,684.181 1120.67,684.181 1121.23,684.181 1121.79,684.181 1122.35,684.181 1122.91,684.181 1123.47,684.181 1124.03,684.181 1124.59,684.181 1125.14,684.181 1125.7,684.181 1126.26,684.181 1126.82,684.181 1127.38,684.181 1127.94,684.181 1128.5,684.181 1129.06,684.181 1129.62,684.181 1130.18,684.181 1130.74,684.181 1131.3,684.181 1131.86,684.181 1132.41,684.181 1132.97,684.181 1133.53,684.181 1134.09,684.181 1134.65,684.181 1135.21,684.181 1135.77,684.181 1136.33,684.181 1136.89,684.181 1137.45,684.181 1138.01,684.181 1138.57,684.181 1139.13,684.181 1139.68,684.181 1140.24,684.181 1140.8,684.181 1141.36,684.181 1141.92,684.181 1142.48,684.181 1143.04,684.181 1143.6,684.181 1144.16,684.181 1144.72,684.181 1145.28,684.181 1145.84,684.181 1146.4,684.181 1146.96,684.181 1147.51,684.181 1148.07,684.181 1148.63,684.181 1149.19,684.181 1149.75,684.181 1150.31,684.181 1150.87,684.181 1151.43,684.181 1151.99,684.181 1152.55,684.181 1153.11,684.181 1153.67,684.181 1154.23,684.181 1154.78,684.181 1155.34,684.181 1155.9,684.181 1156.46,684.181 1157.02,684.181 1157.58,684.181 1158.14,684.181 1158.7,684.181 1159.26,684.181 1159.82,684.181 1160.38,684.181 1160.94,684.181 1161.5,684.181 1162.05,684.181 1162.61,684.181 1163.17,684.181 1163.73,684.181 1164.29,684.181 1164.85,684.181 1165.41,684.181 1165.97,684.181 1166.53,684.181 1167.09,684.181 1167.65,684.181 1168.21,684.181 1168.77,684.181 1169.33,684.181 1169.88,684.181 1170.44,684.181 1171,684.181 1171.56,684.181 1172.12,684.181 1172.68,684.181 1173.24,684.181 1173.8,684.181 1174.36,684.181 1174.92,684.181 1175.48,684.181 1176.04,684.181 1176.6,684.181 1177.15,684.181 1177.71,684.181 1178.27,684.181 1178.83,684.181 1179.39,684.181 1179.95,684.181 1180.51,684.181 1181.07,684.181 1181.63,684.181 1182.19,684.181 1182.75,684.181 1183.31,684.181 1183.87,684.181 1184.43,684.181 1184.98,684.181 1185.54,684.181 1186.1,684.181 1186.66,684.181 1187.22,684.181 1187.78,684.181 1188.34,684.181 1188.9,684.181 1189.46,684.181 1190.02,684.181 1190.58,684.181 1191.14,684.181 1191.7,684.181 1192.25,684.181 1192.81,684.181 1193.37,684.181 1193.93,684.181 1194.49,684.181 1195.05,684.181 1195.61,684.181 1196.17,684.181 1196.73,684.181 1197.29,684.181 1197.85,684.181 1198.41,684.181 1198.97,684.181 1199.52,684.181 1200.08,684.181 1200.64,684.181 1201.2,684.181 1201.76,684.181 1202.32,684.181 1202.88,684.181 1203.44,684.181 1204,684.181 1204.56,684.181 1205.12,684.181 1205.68,684.181 1206.24,684.181 1206.8,684.181 1207.35,684.181 1207.91,684.181 1208.47,684.181 1209.03,684.181 1209.59,684.181 1210.15,684.181 1210.71,684.181 1211.27,684.181 1211.83,684.181 1212.39,684.181 1212.95,684.181 1213.51,684.181 1214.07,684.181 1214.62,684.181 1215.18,684.181 1215.74,684.181 1216.3,684.181 1216.86,684.181 1217.42,684.181 1217.98,684.181 1218.54,684.181 1219.1,684.181 1219.66,684.181 1220.22,684.181 1220.78,684.181 1221.34,684.181 1221.89,684.181 1222.45,684.181 1223.01,684.181 1223.57,684.181 1224.13,684.181 1224.69,684.181 1225.25,684.181 1225.81,684.181 1226.37,684.181 1226.93,684.181 1227.49,684.181 1228.05,684.181 1228.61,684.181 1229.17,684.181 1229.72,684.181 1230.28,684.181 1230.84,684.181 1231.4,684.181 1231.96,684.181 1232.52,684.181 1233.08,684.181 1233.64,684.181 1234.2,684.181 1234.76,684.181 1235.32,684.181 1235.88,684.181 1236.44,684.181 1236.99,684.181 1237.55,684.181 1238.11,684.181 1238.67,684.181 1239.23,684.181 1239.79,684.181 1240.35,684.181 1240.91,684.181 1241.47,684.181 1242.03,684.181 1242.59,684.181 1243.15,684.181 1243.71,684.181 1244.26,684.181 1244.82,684.181 1245.38,684.181 1245.94,684.181 1246.5,684.181 1247.06,684.181 1247.62,684.181 1248.18,684.181 1248.74,684.181 1249.3,684.181 1249.86,684.181 1250.42,684.181 1250.98,684.181 1251.54,684.181 1252.09,684.181 1252.65,684.181 1253.21,684.181 1253.77,684.181 1254.33,684.181 1254.89,684.181 1255.45,684.181 1256.01,684.181 1256.57,684.181 1257.13,684.181 1257.69,684.181 1258.25,684.181 1258.81,684.181 1259.36,684.181 1259.92,684.181 1260.48,684.181 1261.04,684.181 1261.6,684.181 1262.16,684.181 1262.72,684.181 1263.28,684.181 1263.84,684.181 1264.4,684.181 1264.96,684.181 1265.52,684.181 1266.08,684.181 1266.63,684.181 1267.19,684.181 1267.75,684.181 1268.31,684.181 1268.87,684.181 1269.43,684.181 1269.99,684.181 1270.55,684.181 1271.11,684.181 1271.67,684.181 1272.23,684.181 1272.79,684.181 1273.35,684.181 1273.91,684.181 1274.46,684.181 1275.02,684.181 1275.58,684.181 1276.14,684.181 1276.7,684.181 1277.26,684.181 1277.82,684.181 1278.38,684.181 1278.94,684.181 1279.5,684.181 1280.06,684.181 1280.62,684.181 1281.18,684.181 1281.73,684.181 1282.29,684.181 1282.85,684.181 1283.41,684.181 1283.97,684.181 1284.53,684.181 1285.09,684.181 1285.65,684.181 1286.21,684.181 1286.77,684.181 1287.33,684.181 1287.89,684.181 1288.45,684.181 1289,684.181 1289.56,684.181 1290.12,684.181 1290.68,684.181 1291.24,684.181 1291.8,684.181 1292.36,684.181 1292.92,684.181 1293.48,684.181 1294.04,684.181 1294.6,684.181 1295.16,684.181 1295.72,684.181 1296.28,684.181 1296.83,684.181 1297.39,684.181 1297.95,684.181 1298.51,684.181 1299.07,684.181 1299.63,684.181 1300.19,684.181 1300.75,684.181 1301.31,684.181 1301.87,684.181 1302.43,684.181 1302.99,684.181 1303.55,684.181 1304.1,684.181 1304.66,684.181 1305.22,684.181 1305.78,684.181 1306.34,684.181 1306.9,684.181 1307.46,684.181 1308.02,684.181 1308.58,684.181 1309.14,684.181 1309.7,684.181 1310.26,684.181 1310.82,684.181 1311.38,684.181 1311.93,684.181 1312.49,684.181 1313.05,684.181 1313.61,684.181 1314.17,684.181 1314.73,684.181 1315.29,684.181 1315.85,684.181 1316.41,684.181 1316.97,684.181 1317.53,684.181 1318.09,684.181 1318.65,684.181 1319.2,684.181 1319.76,684.181 1320.32,684.181 1320.88,684.181 1321.44,684.181 1322,684.181 1322.56,684.181 1323.12,684.181 1323.68,684.181 1324.24,684.181 1324.8,684.181 1325.36,684.181 1325.92,684.181 1326.47,684.181 1327.03,684.181 1327.59,684.181 1328.15,684.181 1328.71,684.181 1329.27,684.181 1329.83,684.181 1330.39,684.181 1330.95,684.181 1331.51,684.181 1332.07,684.181 1332.63,684.181 1333.19,684.181 1333.75,684.181 1334.3,684.181 1334.86,684.181 1335.42,684.181 1335.98,684.181 1336.54,684.181 1337.1,684.181 1337.66,684.181 1338.22,684.181 1338.78,684.181 1339.34,684.181 1339.9,684.181 1340.46,684.181 1341.02,684.181 1341.57,684.181 1342.13,684.181 1342.69,684.181 1343.25,684.181 1343.81,684.181 1344.37,684.181 1344.93,684.181 1345.49,684.181 1346.05,684.181 1346.61,684.181 1347.17,684.181 1347.73,684.181 1348.29,684.181 1348.84,684.181 1349.4,684.181 1349.96,684.181 1350.52,684.181 1351.08,684.181 1351.64,684.181 1352.2,684.181 1352.76,684.181 1353.32,684.181 1353.88,684.181 1354.44,684.181 1355,684.181 1355.56,684.181 1356.12,684.181 1356.67,684.181 1357.23,684.181 1357.79,684.181 1358.35,684.181 1358.91,684.181 1359.47,684.181 1360.03,684.181 1360.59,684.181 1361.15,684.181 1361.71,684.181 1362.27,684.181 1362.83,684.181 1363.39,684.181 1363.94,684.181 1364.5,684.181 1365.06,684.181 1365.62,684.181 1366.18,684.181 1366.74,684.181 1367.3,684.181 1367.86,684.181 1368.42,684.181 1368.98,684.181 1369.54,684.181 1370.1,684.181 1370.66,684.181 1371.21,684.181 1371.77,684.181 1372.33,684.181 1372.89,684.181 1373.45,684.181 1374.01,684.181 1374.57,684.181 1375.13,684.181 1375.69,684.181 1376.25,684.181 1376.81,684.181 1377.37,684.181 1377.93,684.181 1378.49,684.181 1379.04,684.181 1379.6,684.181 1380.16,684.181 1380.72,684.181 1381.28,684.181 1381.84,684.181 1382.4,684.181 1382.96,684.181 1383.52,684.181 1384.08,684.181 1384.64,684.181 1385.2,684.181 1385.76,684.181 1386.31,684.181 1386.87,684.181 1387.43,684.181 1387.99,684.181 1388.55,684.181 1389.11,684.181 1389.67,684.181 1390.23,684.181 1390.79,684.181 1391.35,684.181 1391.91,684.181 1392.47,684.181 1393.03,684.181 1393.58,684.181 1394.14,684.181 1394.7,684.181 1395.26,684.181 1395.82,684.181 1396.38,684.181 1396.94,684.181 1397.5,684.181 1398.06,684.181 1398.62,684.181 1399.18,684.181 1399.74,684.181 1400.3,684.181 1400.86,684.181 1401.41,684.181 1401.97,684.181 1402.53,684.181 1403.09,684.181 1403.65,684.181 1404.21,684.181 1404.77,684.181 1405.33,684.181 1405.89,684.181 1406.45,684.181 1407.01,684.181 1407.57,684.181 1408.13,684.181 1408.68,684.181 1409.24,684.181 1409.8,684.181 1410.36,684.181 1410.92,684.181 1411.48,684.181 1412.04,684.181 1412.6,684.181 1413.16,684.181 1413.72,684.181 1414.28,684.181 1414.84,684.181 1415.4,684.181 1415.95,684.181 1416.51,684.181 1417.07,684.181 1417.63,684.181 1418.19,684.181 1418.75,684.181 1419.31,684.181 1419.87,684.181 1420.43,684.181 1420.99,684.181 1421.55,684.181 1422.11,684.181 1422.67,684.181 1423.23,684.181 1423.78,684.181 1424.34,684.181 1424.9,684.181 1425.46,684.181 1426.02,684.181 1426.58,684.181 1427.14,684.181 1427.7,684.181 1428.26,684.181 1428.82,684.181 1429.38,684.181 1429.94,684.181 1430.5,684.181 1431.05,684.181 1431.61,684.181 1432.17,684.181 1432.73,684.181 1433.29,684.181 1433.85,684.181 1434.41,684.181 1434.97,684.181 1435.53,684.181 1436.09,684.181 1436.65,684.181 1437.21,684.181 1437.77,684.181 1438.33,684.181 1438.88,684.181 1439.44,684.181 1440,684.181 1440.56,684.181 1441.12,684.181 1441.68,684.181 1442.24,684.181 1442.8,684.181 1443.36,684.181 1443.92,684.181 1444.48,684.181 1445.04,684.181 1445.6,684.181 1446.15,684.181 1446.71,684.181 1447.27,684.181 1447.83,684.181 1448.39,684.181 1448.95,684.181 1449.51,684.181 1450.07,684.181 1450.63,684.181 1451.19,684.181 1451.75,684.181 1452.31,684.181 1452.87,684.181 1453.42,684.181 1453.98,684.181 1454.54,684.181 1455.1,684.181 1455.66,684.181 1456.22,684.181 1456.78,684.181 1457.34,684.181 1457.9,684.181 1458.46,684.181 1459.02,684.181 1459.58,684.181 1460.14,684.181 1460.7,684.181 1461.25,684.181 1461.81,684.181 1462.37,684.181 1462.93,684.181 1463.49,684.181 1464.05,684.181 1464.61,684.181 1465.17,684.181 1465.73,684.181 1466.29,684.181 1466.85,684.181 1467.41,684.181 1467.97,684.181 1468.52,684.181 1469.08,684.181 1469.64,684.181 1470.2,684.181 1470.76,684.181 1471.32,684.181 1471.88,684.181 1472.44,684.181 1473,684.181 1473.56,684.181 1474.12,684.181 1474.68,684.181 1475.24,684.181 1475.79,684.181 1476.35,684.181 1476.91,684.181 1477.47,684.181 1478.03,684.181 1478.59,684.181 1479.15,684.181 1479.71,684.181 1480.27,684.181 1480.83,684.181 1481.39,684.181 1481.95,684.181 1482.51,684.181 1483.07,684.181 1483.62,684.181 1484.18,684.181 1484.74,684.181 1485.3,684.181 1485.86,684.181 1486.42,684.181 1486.98,684.181 1487.54,684.181 1488.1,684.181 1488.66,684.181 1489.22,684.181 1489.78,684.181 1490.34,684.181 1490.89,684.181 1491.45,684.181 1492.01,684.181 1492.57,684.181 1493.13,684.181 1493.69,684.181 1494.25,684.181 1494.81,684.181 1495.37,684.181 1495.93,684.181 1496.49,684.181 1497.05,684.181 1497.61,684.181 1498.16,684.181 1498.72,684.181 1499.28,684.181 1499.84,684.181 1500.4,684.181 1500.96,684.181 1501.52,684.181 1502.08,684.181 1502.64,684.181 1503.2,684.181 1503.76,684.181 1504.32,684.181 1504.88,684.181 1505.44,684.181 1505.99,684.181 1506.55,684.181 1507.11,684.181 1507.67,684.181 1508.23,684.181 1508.79,684.181 1509.35,684.181 1509.91,684.181 1510.47,684.181 1511.03,684.181 1511.59,684.181 1512.15,684.181 1512.71,684.181 1513.26,684.181 1513.82,684.181 1514.38,684.181 1514.94,684.181 1515.5,684.181 1516.06,684.181 1516.62,684.181 1517.18,684.181 1517.74,684.181 1518.3,684.181 1518.86,684.181 1519.42,684.181 1519.98,684.181 1520.53,684.181 1521.09,684.181 1521.65,684.181 1522.21,684.181 1522.77,684.181 1523.33,684.181 1523.89,684.181 1524.45,684.181 1525.01,684.181 1525.57,684.181 1526.13,684.181 1526.69,684.181 1527.25,684.181 1527.81,684.181 1528.36,684.181 1528.92,684.181 1529.48,684.181 1530.04,684.181 1530.6,684.181 1531.16,684.181 1531.72,684.181 1532.28,684.181 1532.84,684.181 1533.4,684.181 1533.96,684.181 1534.52,684.181 1535.08,684.181 1535.63,684.181 1536.19,684.181 1536.75,684.181 1537.31,684.181 1537.87,684.181 1538.43,684.181 1538.99,684.181 1539.55,684.181 1540.11,684.181 1540.67,684.181 1541.23,684.181 1541.79,684.181 1542.35,684.181 1542.9,684.181 1543.46,684.181 1544.02,684.181 1544.58,684.181 1545.14,684.181 1545.7,684.181 1546.26,684.181 1546.82,684.181 1547.38,684.181 1547.94,684.181 1548.5,684.181 1549.06,684.181 1549.62,684.181 1550.18,684.181 1550.73,684.181 1551.29,684.181 1551.85,684.181 1552.41,684.181 1552.97,684.181 1553.53,684.181 1554.09,684.181 1554.65,684.181 1555.21,684.181 1555.77,684.181 1556.33,684.181 1556.89,684.181 1557.45,684.181 1558,684.181 1558.56,684.181 1559.12,684.181 1559.68,684.181 1560.24,684.181 1560.8,684.181 1561.36,684.181 1561.92,684.181 1562.48,684.181 1563.04,684.181 1563.6,684.181 1564.16,684.181 1564.72,684.181 1565.28,684.181 1565.83,684.181 1566.39,684.181 1566.95,684.181 1567.51,684.181 1568.07,684.181 1568.63,684.181 1569.19,684.181 1569.75,684.181 1570.31,684.181 1570.87,684.181 1571.43,684.181 1571.99,684.181 1572.55,684.181 1573.1,684.181 1573.66,684.181 1574.22,684.181 1574.78,684.181 1575.34,684.181 1575.9,684.181 1576.46,684.181 1577.02,684.181 1577.58,684.181 1578.14,684.181 1578.7,684.181 1579.26,684.181 1579.82,684.181 1580.37,684.181 1580.93,684.181 1581.49,684.181 1582.05,684.181 1582.61,684.181 1583.17,684.181 1583.73,684.181 1584.29,684.181 1584.85,684.181 1585.41,684.181 1585.97,684.181 1586.53,684.181 1587.09,684.181 1587.65,684.181 1588.2,684.181 1588.76,684.181 1589.32,684.181 1589.88,684.181 1590.44,684.181 1591,684.181 1591.56,684.181 1592.12,684.181 1592.68,684.181 1593.24,684.181 1593.8,684.181 1594.36,684.181 1594.92,684.181 1595.47,684.181 1596.03,684.181 1596.59,684.181 1597.15,684.181 1597.71,684.181 1598.27,684.181 1598.83,684.181 1599.39,684.181 1599.95,684.181 1600.51,684.181 1601.07,684.181 1601.63,684.181 1602.19,684.181 1602.74,684.181 1603.3,684.181 1603.86,684.181 1604.42,684.181 1604.98,684.181 1605.54,684.181 1606.1,684.181 1606.66,684.181 1607.22,684.181 1607.78,684.181 1608.34,684.181 1608.9,684.181 1609.46,684.181 1610.02,684.181 1610.57,684.181 1611.13,684.181 1611.69,684.181 1612.25,684.181 1612.81,684.181 1613.37,684.181 1613.93,684.181 1614.49,684.181 1615.05,684.181 1615.61,684.181 1616.17,684.181 1616.73,684.181 1617.29,684.181 1617.84,684.181 1618.4,684.181 1618.96,684.181 1619.52,684.181 1620.08,684.181 1620.64,684.181 1621.2,684.181 1621.76,684.181 1622.32,684.181 1622.88,684.181 1623.44,684.181 1624,684.181 1624.56,684.181 1625.11,684.181 1625.67,684.181 1626.23,684.181 1626.79,684.181 1627.35,684.181 1627.91,684.181 1628.47,684.181 1629.03,684.181 1629.59,684.181 1630.15,684.181 1630.71,684.181 1631.27,684.181 1631.83,684.181 1632.39,684.181 1632.94,684.181 1633.5,684.181 1634.06,684.181 1634.62,684.181 1635.18,684.181 1635.74,684.181 1636.3,684.181 1636.86,684.181 1637.42,684.181 1637.98,684.181 1638.54,684.181 1639.1,684.181 1639.66,684.181 1640.21,684.181 1640.77,684.181 1641.33,684.181 1641.89,684.181 1642.45,684.181 1643.01,684.181 1643.57,684.181 1644.13,684.181 1644.69,684.181 1645.25,684.181 1645.81,684.181 1646.37,684.181 1646.93,684.181 1647.48,684.181 1648.04,684.181 1648.6,684.181 1649.16,684.181 1649.72,684.181 1650.28,684.181 1650.84,684.181 1651.4,684.181 1651.96,684.181 1652.52,684.181 1653.08,684.181 1653.64,684.181 1654.2,684.181 1654.76,684.181 1655.31,684.181 1655.87,684.181 1656.43,684.181 1656.99,684.181 1657.55,684.181 1658.11,684.181 1658.67,684.181 1659.23,684.181 1659.79,684.181 1660.35,684.181 1660.91,684.181 1661.47,684.181 1662.03,684.181 1662.58,684.181 1663.14,684.181 1663.7,684.181 1664.26,684.181 1664.82,684.181 1665.38,684.181 1665.94,684.181 1666.5,684.181 1667.06,684.181 1667.62,684.181 1668.18,684.181 1668.74,684.181 1669.3,684.181 1669.85,684.181 1670.41,684.181 1670.97,684.181 1671.53,684.181 1672.09,684.181 1672.65,684.181 1673.21,684.181 1673.77,684.181 1674.33,684.181 1674.89,684.181 1675.45,684.181 1676.01,684.181 1676.57,684.181 1677.13,684.181 1677.68,684.181 1678.24,684.181 1678.8,684.181 1679.36,684.181 1679.92,684.181 1680.48,684.181 1681.04,684.181 1681.6,684.181 1682.16,684.181 1682.72,684.181 1683.28,684.181 1683.84,684.181 1684.4,684.181 1684.95,684.181 1685.51,684.181 1686.07,684.181 1686.63,684.181 1687.19,684.181 1687.75,684.181 1688.31,684.181 1688.87,684.181 1689.43,684.181 1689.99,684.181 1690.55,684.181 1691.11,684.181 1691.67,684.181 1692.23,684.181 1692.78,684.181 1693.34,684.181 1693.9,684.181 1694.46,684.181 1695.02,684.181 1695.58,684.181 1696.14,684.181 1696.7,684.181 1697.26,684.181 1697.82,684.181 1698.38,684.181 1698.94,684.181 1699.5,684.181 1700.05,684.181 1700.61,684.181 1701.17,684.181 1701.73,684.181 1702.29,684.181 1702.85,684.181 1703.41,684.181 1703.97,684.181 1704.53,684.181 1705.09,684.181 1705.65,684.181 1706.21,684.181 1706.77,684.181 1707.32,684.181 1707.88,684.181 1708.44,684.181 1709,684.181 1709.56,684.181 1710.12,684.181 1710.68,684.181 1711.24,684.181 1711.8,684.181 1712.36,684.181 1712.92,684.181 1713.48,684.181 1714.04,684.181 1714.6,684.181 1715.15,684.181 1715.71,684.181 1716.27,684.181 1716.83,684.181 1717.39,684.181 1717.95,684.181 1718.51,684.181 1719.07,684.181 1719.63,684.181 1720.19,684.181 1720.75,684.181 1721.31,684.181 1721.87,684.181 1722.42,684.181 1722.98,684.181 1723.54,684.181 1724.1,684.181 1724.66,684.181 1725.22,684.181 1725.78,684.181 1726.34,684.181 1726.9,684.181 1727.46,684.181 1728.02,684.181 1728.58,684.181 1729.14,684.181 1729.69,684.181 1730.25,684.181 1730.81,684.181 1731.37,684.181 1731.93,684.181 1732.49,684.181 1733.05,684.181 1733.61,684.181 1734.17,684.181 1734.73,684.181 1735.29,684.181 1735.85,684.181 1736.41,684.181 1736.97,684.181 1737.52,684.181 1738.08,684.181 1738.64,684.181 1739.2,684.181 1739.76,684.181 1740.32,684.181 1740.88,684.181 1741.44,684.181 1742,684.181 1742.56,684.181 1743.12,684.181 1743.68,684.181 1744.24,684.181 1744.79,684.181 1745.35,684.181 1745.91,684.181 1746.47,684.181 1747.03,684.181 1747.59,684.181 1748.15,684.181 1748.71,684.181 1749.27,684.181 1749.83,684.181 1750.39,684.181 1750.95,684.181 1751.51,684.181 1752.06,684.181 1752.62,684.181 1753.18,684.181 1753.74,684.181 1754.3,684.181 1754.86,684.181 1755.42,684.181 1755.98,684.181 1756.54,684.181 1757.1,684.181 1757.66,684.181 1758.22,684.181 1758.78,684.181 1759.34,684.181 1759.89,684.181 1760.45,684.181 1761.01,684.181 1761.57,684.181 1762.13,684.181 1762.69,684.181 1763.25,684.181 1763.81,684.181 1764.37,684.181 1764.93,684.181 1765.49,684.181 1766.05,684.181 1766.61,684.181 1767.16,684.181 1767.72,684.181 1768.28,684.181 1768.84,684.181 1769.4,684.181 1769.96,684.181 1770.52,684.181 1771.08,684.181 1771.64,684.181 1772.2,684.181 1772.76,684.181 1773.32,684.181 1773.88,684.181 1774.43,684.181 1774.99,684.181 1775.55,684.181 1776.11,684.181 1776.67,684.181 1777.23,684.181 1777.79,684.181 1778.35,684.181 1778.91,684.181 1779.47,684.181 1780.03,684.181 1780.59,684.181 1781.15,684.181 1781.71,684.181 1782.26,684.181 1782.82,684.181 1783.38,684.181 1783.94,684.181 1784.5,684.181 1785.06,684.181 1785.62,684.181 1786.18,684.181 1786.74,684.181 1787.3,684.181 1787.86,684.181 1788.42,684.181 1788.98,684.181 1789.53,684.181 1790.09,684.181 1790.65,684.181 1791.21,684.181 1791.77,684.181 1792.33,684.181 1792.89,684.181 1793.45,684.181 1794.01,684.181 1794.57,684.181 1795.13,684.181 1795.69,684.181 1796.25,684.181 1796.8,684.181 1797.36,684.181 1797.92,684.181 1798.48,684.181 1799.04,684.181 1799.6,684.181 1800.16,684.181 1800.72,684.181 1801.28,684.181 1801.84,684.181 1802.4,684.181 1802.96,684.181 1803.52,684.181 1804.08,684.181 1804.63,684.181 1805.19,684.181 1805.75,684.181 1806.31,684.181 1806.87,684.181 1807.43,684.181 1807.99,684.181 1808.55,684.181 1809.11,684.181 1809.67,684.181 1810.23,684.181 1810.79,684.181 1811.35,684.181 1811.9,684.181 1812.46,684.181 1813.02,684.181 1813.58,684.181 1814.14,684.181 1814.7,684.181 1815.26,684.181 1815.82,684.181 1816.38,684.181 1816.94,684.181 1817.5,684.181 1818.06,684.181 1818.62,684.181 1819.18,684.181 1819.73,684.181 1820.29,684.181 1820.85,684.181 1821.41,684.181 1821.97,684.181 1822.53,684.181 1823.09,684.181 1823.65,684.181 1824.21,684.181 1824.77,684.181 1825.33,684.181 1825.89,684.181 1826.45,684.181 1827,684.181 1827.56,684.181 1828.12,684.181 1828.68,684.181 1829.24,684.181 1829.8,684.181 1830.36,684.181 1830.92,684.181 1831.48,684.181 1832.04,684.181 1832.6,684.181 1833.16,684.181 1833.72,684.181 1834.27,684.181 1834.83,684.181 1835.39,684.181 1835.95,684.181 1836.51,684.181 1837.07,684.181 1837.63,684.181 1838.19,684.181 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.024815077691761 ± 0.025043283993323867\nProjected Energy: -4.018088528234756 ± (0.003853855037533549, 0.0040463236774730404)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.446305</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4327e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.5229e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">8.917e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.513e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.745e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.766e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory) -> names, values\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nShould return a Tuple of names and a Tuple of values to report.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AllToAll","page":"Dict vectors","title":"Rimu.DictVectors.AllToAll","text":"AllToAll{K,V} <: Communicator\n\nCommunicator that uses collective communication using MPI.Alltoall!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NestedSegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.NestedSegmentedBuffer","text":"NestedSegmentedBuffer\n\n2D grid of vectors stored in a simple buffer with collective MPI communication support.\n\nSee append_collections!, mpi_exchange!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.append_collections!-Tuple{Rimu.DictVectors.NestedSegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.append_collections!","text":"append_collections!(buf::NestedSegmentedBuffer, iters)\n\nAdd a column to buf. The length of iters should match buf.nrows.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.append_empty_column!-Tuple{Rimu.DictVectors.NestedSegmentedBuffer}","page":"Dict vectors","title":"Rimu.DictVectors.append_empty_column!","text":"append_empty_column!(buf::NestedSegmentedBuffer)\n\nLike append_collections!, but adds an empty column.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_exchange!-Tuple{Rimu.DictVectors.NestedSegmentedBuffer, Rimu.DictVectors.NestedSegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_exchange!","text":"mpi_exchange!(src::NestedSegmentedBuffer, dst::NestedSegmentedBuffer, comm)\n\nThe n-th column from src will be sent to rank n+1. The data sent from rank r will be stored in the (r-1)-st column.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
